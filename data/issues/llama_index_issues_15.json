[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7888",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7888/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7888/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7888/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7888",
        "id": 1918362684,
        "node_id": "PR_kwDOIWuq585bfUeD",
        "number": 7888,
        "title": "Added replacing {{ and }}, and fixed JSON parsing recursion",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-28T22:42:46Z",
        "updated_at": "2023-09-30T08:23:34Z",
        "closed_at": "2023-09-29T00:13:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7888",
            "html_url": "https://github.com/run-llama/llama_index/pull/7888",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7888.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7888.patch",
            "merged_at": "2023-09-29T00:13:26Z"
        },
        "body": "# Description\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7886\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7888/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7888/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7887",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7887/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7887/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7887/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7887",
        "id": 1918332724,
        "node_id": "PR_kwDOIWuq585bfN96",
        "number": 7887,
        "title": "`black[jupyter]` in `pre-commit`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-28T22:05:23Z",
        "updated_at": "2023-09-30T08:22:46Z",
        "closed_at": "2023-09-28T22:11:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7887",
            "html_url": "https://github.com/run-llama/llama_index/pull/7887",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7887.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7887.patch",
            "merged_at": "2023-09-28T22:11:18Z"
        },
        "body": "Adds `black[jupyter]` to `pre-commit`.\r\n\r\n`pre-commit run --all-files` passes both before and after this PR",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7887/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7887/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7886",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7886/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7886/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7886/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7886",
        "id": 1918327712,
        "node_id": "I_kwDOIWuq585yV1ug",
        "number": 7886,
        "title": "[Bug]: double curly brace breaking JSON marshaling in LLM selector",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-28T21:59:50Z",
        "updated_at": "2023-09-29T00:13:27Z",
        "closed_at": "2023-09-29T00:13:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nPlease see the below steps to reproduce, we should expand our JSON marshaling capabilities.\r\n\r\n### Version\r\n\r\n0.8.36\r\n\r\n### Steps to Reproduce\r\n\r\nGiven the below `prediction` from a LLM predictor ([link](https://github.com/jerryjliu/llama_index/blob/v0.8.36/llama_index/selectors/llm_selectors.py#L103)):\r\n\r\n```none\r\n Based on the given choices, the most relevant choice for the question \"<redacted>?\" is:\r\n(1) Useful for <redacted>\r\nThe reason for this choice is <redacted>. Therefore, option (1) is the most relevant choice for someone looking for information on <redacted>\r\nHere is the output in JSON format:\r\n{{\r\n  \"type\": \"array\",\r\n  \"items\": {{\r\n    \"type\": \"object\",\r\n    \"properties\": {{\r\n      \"choice\": 1,\r\n      \"reason\": \"<redacted>\"\r\n    }},\r\n    \"required\": [\r\n      \"choice\",\r\n      \"reason\"\r\n    ],\r\n    \"additionalProperties\": false\r\n  }}\r\n}}\r\n\r\n```\r\n\r\nGets marshaled ([link](https://github.com/jerryjliu/llama_index/blob/v0.8.36/llama_index/output_parsers/utils.py#L12)) to this `str` JSON:\r\n\r\n```json\r\n{{\r\n  \"type\": \"array\",\r\n  \"items\": {{\r\n    \"type\": \"object\",\r\n    \"properties\": {{\r\n      \"choice\": 1,\r\n      \"reason\": \"Useful for getting information on cell lines\"\r\n    }},\r\n    \"required\": [\r\n      \"choice\",\r\n      \"reason\"\r\n    ],\r\n    \"additionalProperties\": false\r\n  }}\r\n}}\r\n```\r\n\r\nThen fails `json.loads` due to double curly brace.  We should allow the marshalling to replace `{{` with `{`, and `}}` with `}`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7886/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7886/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7885",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7885/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7885/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7885/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7885",
        "id": 1918276922,
        "node_id": "PR_kwDOIWuq585bfB5N",
        "number": 7885,
        "title": "Litellm/fixes",
        "user": {
            "login": "ishaan-jaff",
            "id": 29436595,
            "node_id": "MDQ6VXNlcjI5NDM2NTk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/29436595?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ishaan-jaff",
            "html_url": "https://github.com/ishaan-jaff",
            "followers_url": "https://api.github.com/users/ishaan-jaff/followers",
            "following_url": "https://api.github.com/users/ishaan-jaff/following{/other_user}",
            "gists_url": "https://api.github.com/users/ishaan-jaff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ishaan-jaff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ishaan-jaff/subscriptions",
            "organizations_url": "https://api.github.com/users/ishaan-jaff/orgs",
            "repos_url": "https://api.github.com/users/ishaan-jaff/repos",
            "events_url": "https://api.github.com/users/ishaan-jaff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ishaan-jaff/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5870194649,
                "node_id": "LA_kwDOIWuq588AAAABXeQP2Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/llm",
                "name": "llm",
                "color": "799557",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-28T21:08:24Z",
        "updated_at": "2023-10-22T04:30:52Z",
        "closed_at": "2023-10-22T04:30:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7885",
            "html_url": "https://github.com/run-llama/llama_index/pull/7885",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7885.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7885.patch",
            "merged_at": "2023-10-22T04:30:52Z"
        },
        "body": "# Description\r\nFixes LiteLLM Huggingface, Deep Infra integration \r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7885/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7885/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7884",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7884/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7884/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7884/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7884",
        "id": 1918180837,
        "node_id": "I_kwDOIWuq585yVR3l",
        "number": 7884,
        "title": "[Documentation]: adding Routers to High-Level Concepts",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-28T19:55:58Z",
        "updated_at": "2023-11-10T09:24:46Z",
        "closed_at": "2023-11-10T09:24:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nI am trying to understand where `Router`s fit into the scheme of things, vs `Agent`s.\r\n\r\nIt would be useful to add `Router`s somewhere in the High-Level Concepts page\n\n### Documenation Link\n\nhttps://gpt-index.readthedocs.io/en/stable/getting_started/concepts.html",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7884/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7884/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7883",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7883/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7883/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7883/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7883",
        "id": 1918129619,
        "node_id": "I_kwDOIWuq585yVFXT",
        "number": 7883,
        "title": "[Bug]: Incorrect response from Binary Evaluation (ResponseEvaluator)",
        "user": {
            "login": "c64er4ever",
            "id": 125486774,
            "node_id": "U_kgDOB3rGtg",
            "avatar_url": "https://avatars.githubusercontent.com/u/125486774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/c64er4ever",
            "html_url": "https://github.com/c64er4ever",
            "followers_url": "https://api.github.com/users/c64er4ever/followers",
            "following_url": "https://api.github.com/users/c64er4ever/following{/other_user}",
            "gists_url": "https://api.github.com/users/c64er4ever/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/c64er4ever/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/c64er4ever/subscriptions",
            "organizations_url": "https://api.github.com/users/c64er4ever/orgs",
            "repos_url": "https://api.github.com/users/c64er4ever/repos",
            "events_url": "https://api.github.com/users/c64er4ever/events{/privacy}",
            "received_events_url": "https://api.github.com/users/c64er4ever/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-28T19:23:39Z",
        "updated_at": "2023-09-29T14:33:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nHi,\r\nI've been playing with Binary Evaluation and not getting the responses I expect. I am using OpenAI as the LLM (gpt-3.5-turbo-16k).\r\nFor example, when I ask \"What is McDonalds?\" which is totally out of context of my documents, I get the correct response that the information is not contained in the context, but evaluate returns \"YES\", which is incorrect. And in some cases, when I ask a relevant question and get a response from the context, evaluate returns \"NO\". Here's a snippet of my code:\r\nllm = OpenAI(temperature=0.1, model=\"gpt-3.5-turbo-16k\", max_tokens=512, request_timeout=40)\r\nservice_context = ServiceContext.from_defaults(llm=llm)\r\nevaluator = ResponseEvaluator(service_context=service_context)\r\nquery_engine = test_index.as_query_engine(service_context=service_context)\r\nresponse = query_engine.query(question)\r\neval_result = evaluator.evaluate(response)\r\nprint(str(eval_result))\r\n\r\nThanks\r\nGuy\r\n\r\n### Version\r\n\r\n0.8.5.post2\r\n\r\n### Steps to Reproduce\r\n\r\nAsk some questions that are totally out of context and see that in some cases ResponseEvaluator returns \"YES\".\r\nAsk questions that are in context and see that sometimes ResponseEvaluator returns \"NO\".\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7883/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7883/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7882",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7882/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7882/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7882/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7882",
        "id": 1918125407,
        "node_id": "PR_kwDOIWuq585behUl",
        "number": 7882,
        "title": "Fix handling of empy queries",
        "user": {
            "login": "cevian",
            "id": 112245,
            "node_id": "MDQ6VXNlcjExMjI0NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/112245?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cevian",
            "html_url": "https://github.com/cevian",
            "followers_url": "https://api.github.com/users/cevian/followers",
            "following_url": "https://api.github.com/users/cevian/following{/other_user}",
            "gists_url": "https://api.github.com/users/cevian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cevian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cevian/subscriptions",
            "organizations_url": "https://api.github.com/users/cevian/orgs",
            "repos_url": "https://api.github.com/users/cevian/repos",
            "events_url": "https://api.github.com/users/cevian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cevian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-28T19:20:10Z",
        "updated_at": "2023-09-28T20:26:15Z",
        "closed_at": "2023-09-28T20:26:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7882",
            "html_url": "https://github.com/run-llama/llama_index/pull/7882",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7882.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7882.patch",
            "merged_at": "2023-09-28T20:26:15Z"
        },
        "body": "# Description\r\n\r\nSometimes the retriever will get an empty query. For example, the AutoRetriever may decide to query only the metadata. Before this commit, that caused an exception due to trying to get an embedding on an empty string. This commit fixes things so that the embedding step is skipped when the query string is empty.\r\n\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7882/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7882/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7881",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7881/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7881/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7881/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7881",
        "id": 1918084460,
        "node_id": "PR_kwDOIWuq585beYb0",
        "number": 7881,
        "title": "update deprecated langchain imports",
        "user": {
            "login": "piotrm0",
            "id": 421701,
            "node_id": "MDQ6VXNlcjQyMTcwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/piotrm0",
            "html_url": "https://github.com/piotrm0",
            "followers_url": "https://api.github.com/users/piotrm0/followers",
            "following_url": "https://api.github.com/users/piotrm0/following{/other_user}",
            "gists_url": "https://api.github.com/users/piotrm0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/piotrm0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/piotrm0/subscriptions",
            "organizations_url": "https://api.github.com/users/piotrm0/orgs",
            "repos_url": "https://api.github.com/users/piotrm0/repos",
            "events_url": "https://api.github.com/users/piotrm0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/piotrm0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-28T18:48:05Z",
        "updated_at": "2023-09-28T19:14:21Z",
        "closed_at": "2023-09-28T19:14:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7881",
            "html_url": "https://github.com/run-llama/llama_index/pull/7881",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7881.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7881.patch",
            "merged_at": "2023-09-28T19:14:21Z"
        },
        "body": "# Description\r\n\r\nSeveral imports from langchain issue warnings as they are outdated. Fixed those. Also fixed the imports that are now in langchain_experimental .\r\n\r\n## Type of Change\r\n\r\nAddress deprecation.\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7881/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7881/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7880",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7880/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7880/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7880/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7880",
        "id": 1918050568,
        "node_id": "PR_kwDOIWuq585beRCh",
        "number": 7880,
        "title": "edit ensemble notebook + add pairwise evaluator notebook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-28T18:22:15Z",
        "updated_at": "2023-09-28T23:52:11Z",
        "closed_at": "2023-09-28T23:52:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7880",
            "html_url": "https://github.com/run-llama/llama_index/pull/7880",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7880.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7880.patch",
            "merged_at": "2023-09-28T23:52:10Z"
        },
        "body": "- adjusted comparisons for baseline retriever to make comparison more fair \r\n- added pairwise evaluator notebook\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7880/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7880/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7879",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7879/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7879/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7879/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7879",
        "id": 1917765373,
        "node_id": "I_kwDOIWuq585yTsb9",
        "number": 7879,
        "title": "[Question]:  Consistently getting rate limit error when building index",
        "user": {
            "login": "sagardashora",
            "id": 85923695,
            "node_id": "MDQ6VXNlcjg1OTIzNjk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/85923695?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sagardashora",
            "html_url": "https://github.com/sagardashora",
            "followers_url": "https://api.github.com/users/sagardashora/followers",
            "following_url": "https://api.github.com/users/sagardashora/following{/other_user}",
            "gists_url": "https://api.github.com/users/sagardashora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sagardashora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sagardashora/subscriptions",
            "organizations_url": "https://api.github.com/users/sagardashora/orgs",
            "repos_url": "https://api.github.com/users/sagardashora/repos",
            "events_url": "https://api.github.com/users/sagardashora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sagardashora/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-28T15:15:36Z",
        "updated_at": "2023-11-08T10:26:23Z",
        "closed_at": "2023-09-28T16:25:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am using the basic code to index a single text document with about 10 lines\r\n\r\n```\r\nfrom llama_index import VectorStoreIndex, SimpleDirectoryReader\r\n\r\ndocuments = SimpleDirectoryReader('data').load_data()\r\nindex = VectorStoreIndex.from_documents(documents)\r\n```\r\n\r\nI have the free tier openAI account which still should be sufficient for a small document. HOwever, I am consistently getting rate limit error when building index.\r\nSaw the other threads regarding this but none have a conclusive answer.\r\nI am using latest library version ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7879/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7879/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7878",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7878/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7878/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7878/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7878",
        "id": 1917162353,
        "node_id": "PR_kwDOIWuq585bbL_u",
        "number": 7878,
        "title": "Update get_formatted_sources in schema.py for optional truncation.",
        "user": {
            "login": "ahmadmustafaanis",
            "id": 47111429,
            "node_id": "MDQ6VXNlcjQ3MTExNDI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/47111429?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahmadmustafaanis",
            "html_url": "https://github.com/ahmadmustafaanis",
            "followers_url": "https://api.github.com/users/ahmadmustafaanis/followers",
            "following_url": "https://api.github.com/users/ahmadmustafaanis/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahmadmustafaanis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahmadmustafaanis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahmadmustafaanis/subscriptions",
            "organizations_url": "https://api.github.com/users/ahmadmustafaanis/orgs",
            "repos_url": "https://api.github.com/users/ahmadmustafaanis/repos",
            "events_url": "https://api.github.com/users/ahmadmustafaanis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahmadmustafaanis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-28T10:14:01Z",
        "updated_at": "2023-09-28T18:01:56Z",
        "closed_at": "2023-09-28T17:53:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7878",
            "html_url": "https://github.com/run-llama/llama_index/pull/7878",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7878.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7878.patch",
            "merged_at": "2023-09-28T17:53:56Z"
        },
        "body": "There should be an option in get_formatted_sources to not truncate at all. I have updated the function. Please review.\r\n\r\n# Description\r\n\r\nWhen getting the get_formated_sources, the text is truncated by default. It should have an option to not truncate the text at all. \r\nFixes # (issue)\r\n\r\n## Type of Change\r\nI have updated the get_formated_sources with an additional argument which does not change the functionality, since it is true by default, but can be false if someone does not want it. \r\n\r\n\r\n\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7878/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7878/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7877",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7877/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7877/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7877/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7877",
        "id": 1917078326,
        "node_id": "I_kwDOIWuq585yREs2",
        "number": 7877,
        "title": "[Bug]: JSONDecodeError: Extra data: line 1 column 2 (char 1)",
        "user": {
            "login": "okoliechykwuka",
            "id": 51082506,
            "node_id": "MDQ6VXNlcjUxMDgyNTA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/51082506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/okoliechykwuka",
            "html_url": "https://github.com/okoliechykwuka",
            "followers_url": "https://api.github.com/users/okoliechykwuka/followers",
            "following_url": "https://api.github.com/users/okoliechykwuka/following{/other_user}",
            "gists_url": "https://api.github.com/users/okoliechykwuka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/okoliechykwuka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/okoliechykwuka/subscriptions",
            "organizations_url": "https://api.github.com/users/okoliechykwuka/orgs",
            "repos_url": "https://api.github.com/users/okoliechykwuka/repos",
            "events_url": "https://api.github.com/users/okoliechykwuka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/okoliechykwuka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-28T09:24:22Z",
        "updated_at": "2023-09-28T09:32:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nThis happened as a result of reading a JSON file using the JsonDataReader\n\n### Version\n\n0.8.36\n\n### Steps to Reproduce\n\nFirst install ```pip install llama-index```\r\n\r\n\r\n```\r\nsample.json example\r\n{\r\n    \"fruit\": \"Apple\",\r\n    \"size\": \"Large\",\r\n    \"color\": \"Red\"\r\n}\r\n\r\nfrom llama_index import download_loader\r\n\r\ndata = \"sample.json\"\r\nJsonDataReader = download_loader(\"JsonDataReader\")\r\nloader = JsonDataReader()\r\ndocuments = loader.load_data(data)\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\n---------------------------------------------------------------------------\r\nJSONDecodeError                           Traceback (most recent call last)\r\nCell In[3], line 10\r\n      8 JsonDataReader = download_loader(\"JsonDataReader\")\r\n      9 loader = JsonDataReader()\r\n---> 10 documents = loader.load_data(data)\r\n\r\nFile ~\\anaconda3\\envs\\langchain_env\\lib\\site-packages\\llama_index\\readers\\llamahub_modules/jsondata/base.py:48, in JsonDataReader.load_data(self, input_data)\r\n     46 \"\"\"Load data from the input file.\"\"\"\r\n     47 if isinstance(input_data, str):\r\n---> 48     data = json.loads(input_data)\r\n     49 else:\r\n     50     data = input_data\r\n\r\nFile ~\\anaconda3\\envs\\langchain_env\\lib\\json\\__init__.py:346, in loads(s, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)\r\n    341     s = s.decode(detect_encoding(s), 'surrogatepass')\r\n    343 if (cls is None and object_hook is None and\r\n    344         parse_int is None and parse_float is None and\r\n    345         parse_constant is None and object_pairs_hook is None and not kw):\r\n--> 346     return _default_decoder.decode(s)\r\n    347 if cls is None:\r\n    348     cls = JSONDecoder\r\n\r\nFile ~\\anaconda3\\envs\\langchain_env\\lib\\json\\decoder.py:340, in JSONDecoder.decode(self, s, _w)\r\n    338 end = _w(s, end).end()\r\n    339 if end != len(s):\r\n--> 340     raise JSONDecodeError(\"Extra data\", s, end)\r\n    341 return obj\r\n\r\nJSONDecodeError: Extra data: line 1 column 2 (char 1)\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7877/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7877/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7876",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7876/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7876/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7876/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7876",
        "id": 1917049580,
        "node_id": "PR_kwDOIWuq585bazZu",
        "number": 7876,
        "title": "Don't pull in EVERY node for a simple existence check",
        "user": {
            "login": "yasyf",
            "id": 709645,
            "node_id": "MDQ6VXNlcjcwOTY0NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/709645?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yasyf",
            "html_url": "https://github.com/yasyf",
            "followers_url": "https://api.github.com/users/yasyf/followers",
            "following_url": "https://api.github.com/users/yasyf/following{/other_user}",
            "gists_url": "https://api.github.com/users/yasyf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yasyf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yasyf/subscriptions",
            "organizations_url": "https://api.github.com/users/yasyf/orgs",
            "repos_url": "https://api.github.com/users/yasyf/repos",
            "events_url": "https://api.github.com/users/yasyf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yasyf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-28T09:08:04Z",
        "updated_at": "2023-09-28T23:11:28Z",
        "closed_at": "2023-09-28T17:00:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7876",
            "html_url": "https://github.com/run-llama/llama_index/pull/7876",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7876.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7876.patch",
            "merged_at": "2023-09-28T17:00:18Z"
        },
        "body": "Speeds up this function by an order of magnitude!\n\n\n## Type of Change\n\n\n- [x] Bug fix (non-breaking change which fixes an issue)\n\n# How Has This Been Tested?\n\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\n\n- [ ] Added new unit/integration tests\n- [ ] Added new notebook (that tests end-to-end)\n- [x] I stared at the code and made sure it makes sense\n\n# Suggested Checklist:\n\n- [x] I have performed a self-review of my own code\n- [x] I have commented my code, particularly in hard-to-understand areas\n- [x] I have made corresponding changes to the documentation\n- [x] My changes generate no new warnings\n- [x] I have added tests that prove my fix is effective or that my feature works\n- [x] New and existing unit tests pass locally with my changes\n- [x] I ran `make format; make lint` to appease the lint gods\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7876/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7876/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7875",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7875/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7875/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7875/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7875",
        "id": 1916936723,
        "node_id": "PR_kwDOIWuq585baayR",
        "number": 7875,
        "title": "update ensemble retrieval notebook with evals ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-28T08:01:06Z",
        "updated_at": "2023-09-28T17:54:40Z",
        "closed_at": "2023-09-28T17:54:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7875",
            "html_url": "https://github.com/run-llama/llama_index/pull/7875",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7875.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7875.patch",
            "merged_at": "2023-09-28T17:54:39Z"
        },
        "body": "update ensemble retrieval notebook with evals:\r\n-semantic similarity\r\n-faithfulness\r\n-pairwise comparison ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7875/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7875/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7874",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7874/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7874/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7874/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7874",
        "id": 1916882470,
        "node_id": "I_kwDOIWuq585yQU4m",
        "number": 7874,
        "title": "[Documentation]: Typo in \"Building a Router From Scratch\" Tutorial",
        "user": {
            "login": "FabianAltendorfer",
            "id": 98153318,
            "node_id": "U_kgDOBdmzZg",
            "avatar_url": "https://avatars.githubusercontent.com/u/98153318?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FabianAltendorfer",
            "html_url": "https://github.com/FabianAltendorfer",
            "followers_url": "https://api.github.com/users/FabianAltendorfer/followers",
            "following_url": "https://api.github.com/users/FabianAltendorfer/following{/other_user}",
            "gists_url": "https://api.github.com/users/FabianAltendorfer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FabianAltendorfer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FabianAltendorfer/subscriptions",
            "organizations_url": "https://api.github.com/users/FabianAltendorfer/orgs",
            "repos_url": "https://api.github.com/users/FabianAltendorfer/repos",
            "events_url": "https://api.github.com/users/FabianAltendorfer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FabianAltendorfer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-28T07:27:47Z",
        "updated_at": "2023-12-03T15:10:04Z",
        "closed_at": "2023-12-03T15:10:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\n![image](https://github.com/jerryjliu/llama_index/assets/98153318/891283d9-f556-4270-bed3-beda59c5bc53)\r\n\r\n\r\nThanks for the amazing tutorials!\n\n### Documenation Link\n\nhttps://gpt-index.readthedocs.io/en/stable/examples/low_level/router.html",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7874/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7874/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7873",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7873/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7873/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7873/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7873",
        "id": 1916723744,
        "node_id": "PR_kwDOIWuq585bZsrM",
        "number": 7873,
        "title": "WORK IN PROGRESS: Allow pydantic program through TreeSummarize response mode",
        "user": {
            "login": "bmax",
            "id": 158370,
            "node_id": "MDQ6VXNlcjE1ODM3MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/158370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmax",
            "html_url": "https://github.com/bmax",
            "followers_url": "https://api.github.com/users/bmax/followers",
            "following_url": "https://api.github.com/users/bmax/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmax/subscriptions",
            "organizations_url": "https://api.github.com/users/bmax/orgs",
            "repos_url": "https://api.github.com/users/bmax/repos",
            "events_url": "https://api.github.com/users/bmax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-28T05:23:18Z",
        "updated_at": "2023-09-29T04:44:59Z",
        "closed_at": "2023-09-29T04:44:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7873",
            "html_url": "https://github.com/run-llama/llama_index/pull/7873",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7873.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7873.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7873/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7872",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7872/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7872/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7872/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7872",
        "id": 1916685025,
        "node_id": "PR_kwDOIWuq585bZkNr",
        "number": 7872,
        "title": "feat: add device argument to InstructorEmbedding",
        "user": {
            "login": "aaronzs",
            "id": 1827365,
            "node_id": "MDQ6VXNlcjE4MjczNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1827365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronzs",
            "html_url": "https://github.com/aaronzs",
            "followers_url": "https://api.github.com/users/aaronzs/followers",
            "following_url": "https://api.github.com/users/aaronzs/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronzs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronzs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronzs/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronzs/orgs",
            "repos_url": "https://api.github.com/users/aaronzs/repos",
            "events_url": "https://api.github.com/users/aaronzs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronzs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-28T04:37:23Z",
        "updated_at": "2023-09-28T16:47:37Z",
        "closed_at": "2023-09-28T16:47:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7872",
            "html_url": "https://github.com/run-llama/llama_index/pull/7872",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7872.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7872.patch",
            "merged_at": "2023-09-28T16:47:37Z"
        },
        "body": "# Description\r\n\r\nAdd `device` argument to `InstructorEmbedding`\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7872/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7872/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7871",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7871/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7871/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7871/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7871",
        "id": 1916620581,
        "node_id": "PR_kwDOIWuq585bZWgA",
        "number": 7871,
        "title": "Braintrust/recursive retriever example",
        "user": {
            "login": "davidatbraintrust",
            "id": 138083560,
            "node_id": "U_kgDOCDr86A",
            "avatar_url": "https://avatars.githubusercontent.com/u/138083560?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidatbraintrust",
            "html_url": "https://github.com/davidatbraintrust",
            "followers_url": "https://api.github.com/users/davidatbraintrust/followers",
            "following_url": "https://api.github.com/users/davidatbraintrust/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidatbraintrust/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidatbraintrust/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidatbraintrust/subscriptions",
            "organizations_url": "https://api.github.com/users/davidatbraintrust/orgs",
            "repos_url": "https://api.github.com/users/davidatbraintrust/repos",
            "events_url": "https://api.github.com/users/davidatbraintrust/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidatbraintrust/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-28T02:58:01Z",
        "updated_at": "2023-09-28T19:25:18Z",
        "closed_at": "2023-09-28T19:25:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7871",
            "html_url": "https://github.com/run-llama/llama_index/pull/7871",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7871.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7871.patch",
            "merged_at": "2023-09-28T19:25:17Z"
        },
        "body": "# Description\r\n\r\nWe modify the recursive retriever notebook to work with Braintrust so you can visualize the evaluation results and interrogate which test cases improve or worsen between retrievers\r\n.\r\nYou can see example evaluation dashboards here for the:\r\n- [base retriever](https://www.braintrustdata.com/app/braintrustdata.com/p/llamaindex-recurisve-retrievers/baseRetriever)\r\n- [recursive metadata retreiver](https://www.braintrustdata.com/app/braintrustdata.com/p/llamaindex-recurisve-retrievers/recursiveMetadataRetriever)\r\n- [recursive chunk retriever](https://www.braintrustdata.com/app/braintrustdata.com/p/llamaindex-recurisve-retrievers/recursiveChunkRetriever)\r\n\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7871/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7871/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7870",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7870/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7870/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7870/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7870",
        "id": 1916515248,
        "node_id": "PR_kwDOIWuq585bZAge",
        "number": 7870,
        "title": "Add missing dependency of tree_sitter_languages and update the CONTRIBUTING.md to install data_requirements",
        "user": {
            "login": "shuo-sl",
            "id": 97481652,
            "node_id": "U_kgDOBc9ztA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97481652?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shuo-sl",
            "html_url": "https://github.com/shuo-sl",
            "followers_url": "https://api.github.com/users/shuo-sl/followers",
            "following_url": "https://api.github.com/users/shuo-sl/following{/other_user}",
            "gists_url": "https://api.github.com/users/shuo-sl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shuo-sl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shuo-sl/subscriptions",
            "organizations_url": "https://api.github.com/users/shuo-sl/orgs",
            "repos_url": "https://api.github.com/users/shuo-sl/repos",
            "events_url": "https://api.github.com/users/shuo-sl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shuo-sl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-28T00:08:37Z",
        "updated_at": "2023-09-28T02:01:45Z",
        "closed_at": "2023-09-28T02:01:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7870",
            "html_url": "https://github.com/run-llama/llama_index/pull/7870",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7870.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7870.patch",
            "merged_at": "2023-09-28T02:01:45Z"
        },
        "body": "Disclaimer: first time contributing to llama_index and if I miss or misunderstand something, please correct me. \ud83d\ude4f \r\n\r\n# Description\r\n\r\n- Update the `CONTRIBUTING.md` to install dependencies specified in `data_requirements.txt`. Otherwise, `pytest tests` would fail with following error, ![Screenshot 2023-09-27 at 4 59 39 PM](https://github.com/jerryjliu/llama_index/assets/97481652/0225d946-f596-4d55-a9d1-1add4a67c22e)\r\n- Add missing dependency of `tree_sitter_languages` which is required by `CodeSpliter` and I found this issue because `pytest tests` failed with the following errors ![Screenshot 2023-09-27 at 5 00 37 PM](https://github.com/jerryjliu/llama_index/assets/97481652/9fe182ae-0781-4c2d-9105-381258459ff6)\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nI was able to successfully run `pytest tests` without errors. To reproduce, \r\n\r\n- checkout the main branch as of Sep 27\r\n- `pip install -r requirements.txt`\r\n- `pytest tests` which should fail with the errors as ![Screenshot 2023-09-27 at 4 59 39 PM](https://github.com/jerryjliu/llama_index/assets/97481652/0225d946-f596-4d55-a9d1-1add4a67c22e)\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7870/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7870/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7869",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7869/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7869/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7869/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7869",
        "id": 1916496740,
        "node_id": "PR_kwDOIWuq585bY8Zr",
        "number": 7869,
        "title": "[version] bump version to 0.8.36",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-27T23:50:08Z",
        "updated_at": "2023-09-28T00:50:04Z",
        "closed_at": "2023-09-28T00:50:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7869",
            "html_url": "https://github.com/run-llama/llama_index/pull/7869",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7869.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7869.patch",
            "merged_at": "2023-09-28T00:50:04Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7869/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7869/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7868",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7868/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7868/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7868/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7868",
        "id": 1916492923,
        "node_id": "PR_kwDOIWuq585bY7im",
        "number": 7868,
        "title": "Simplified `BaseSQLTableQueryEngine._parse_response_to_sql` and updated `DEFAULT_TEXT_TO_SQL_TMPL`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-27T23:45:58Z",
        "updated_at": "2023-09-28T03:01:57Z",
        "closed_at": "2023-09-28T02:07:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7868",
            "html_url": "https://github.com/run-llama/llama_index/pull/7868",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7868.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7868.patch",
            "merged_at": "2023-09-28T02:07:14Z"
        },
        "body": "# Description\r\n\r\nFixes https://github.com/jerryjliu/llama_index/issues/7865\r\n- Note: `lstrip` is a regex, not a prefix.  We need to use `removeprefix`\r\n- Also fixed a broken URL\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7868/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7868/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7867",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7867/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7867/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7867/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7867",
        "id": 1916456322,
        "node_id": "PR_kwDOIWuq585bYzhc",
        "number": 7867,
        "title": "add OSS guide to docs",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-27T23:02:43Z",
        "updated_at": "2023-09-27T23:45:13Z",
        "closed_at": "2023-09-27T23:45:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7867",
            "html_url": "https://github.com/run-llama/llama_index/pull/7867",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7867.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7867.patch",
            "merged_at": "2023-09-27T23:45:12Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7867/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7867/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7866",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7866/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7866/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7866/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7866",
        "id": 1916448699,
        "node_id": "PR_kwDOIWuq585bYx27",
        "number": 7866,
        "title": "Add support for MongoDB Atlas $vectorSearch vector search",
        "user": {
            "login": "NoahStapp",
            "id": 30483654,
            "node_id": "MDQ6VXNlcjMwNDgzNjU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/30483654?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NoahStapp",
            "html_url": "https://github.com/NoahStapp",
            "followers_url": "https://api.github.com/users/NoahStapp/followers",
            "following_url": "https://api.github.com/users/NoahStapp/following{/other_user}",
            "gists_url": "https://api.github.com/users/NoahStapp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NoahStapp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NoahStapp/subscriptions",
            "organizations_url": "https://api.github.com/users/NoahStapp/orgs",
            "repos_url": "https://api.github.com/users/NoahStapp/repos",
            "events_url": "https://api.github.com/users/NoahStapp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NoahStapp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5804135704,
                "node_id": "LA_kwDOIWuq588AAAABWfQVGA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/vector%20store",
                "name": "vector store",
                "color": "4AE220",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-09-27T22:54:27Z",
        "updated_at": "2023-10-04T04:30:25Z",
        "closed_at": "2023-10-04T04:30:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7866",
            "html_url": "https://github.com/run-llama/llama_index/pull/7866",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7866.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7866.patch",
            "merged_at": "2023-10-04T04:30:25Z"
        },
        "body": "# Description\r\n\r\nAdds support for the $vectorSearch operator for MongoDBAtlasVectorSearch, which was announced at .Local London (September 26th, 2023). This change breaks backwards compatibility support for the existing $search operator used by the original integration (https://github.com/jerryjliu/llama_index/pull/6379).\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7866/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7866/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7865",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7865/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7865/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7865/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7865",
        "id": 1916408865,
        "node_id": "I_kwDOIWuq585yOhQh",
        "number": 7865,
        "title": "[Bug]: `BaseSQLTableQueryEngine._parse_response_to_sql` not reliably extracting SQL",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-27T22:10:55Z",
        "updated_at": "2023-09-28T02:07:15Z",
        "closed_at": "2023-09-28T02:07:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nWhen using the default LlamaIndex embeddings model, my `NLSQLTableQueryEngine` query works.\r\n\r\nNext, when trying to use `OllamaEmbeddings(model=\"llama2:13b\")`, it's not currently working with LlamaIndex's `NLSQLTableQueryEngine`.  I get a `psycopg2.errors.SyntaxError: syntax error at or near \"Sure\"`.\r\n\r\nI believe the issue is the embeddings model outputting something that is not pure SQL, but basically a full-blown response.\r\n\r\nI am wondering if https://github.com/jerryjliu/llama_index/blob/v0.8.34/llama_index/prompts/default_prompts.py#L188 is not currently adapted to work with `llama2:13b`?  Perhaps we need to expand this prompt?\r\n\r\n### Version\r\n\r\n0.8.34\r\n\r\n### Steps to Reproduce\r\n\r\nAlso with `SQLAlchemy==2.0.21` and `psycopg2==2.9.7`:\r\n\r\n```python\r\nfrom langchain.embeddings import OllamaEmbeddings\r\nfrom llama_index.llms.ollama import Ollama\r\n\r\nnl_query_engine = NLSQLTableQueryEngine(\r\n    ...,\r\n    service_context=ServiceContext.from_defaults(\r\n        llm=Ollama(model=\"llama2:13b\"), embed_model=OllamaEmbeddings(model=\"llama2:13b\")\r\n    )\r\n)\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"/Users/user/code/repo/venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1965, in _exec_single_context\r\n    self.dialect.do_execute(\r\n  File \"/Users/user/code/repo/venv/lib/python3.11/site-packages/sqlalchemy/engine/default.py\", line 921, in do_execute\r\n    cursor.execute(statement, parameters)\r\npsycopg2.errors.SyntaxError: syntax error at or near \"Sure\"\r\nLINE 1: Sure! I'd be happy to help you with that. Here's the SQL que...\r\n        ^\r\nThe above exception was the direct cause of the following exception:\r\nTraceback (most recent call last):\r\n  File \"/Users/user/code/llama_index/llama_index/indices/query/base.py\", line 23, in query\r\n    response = self._query(str_or_query_bundle)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/user/code/llama_index/llama_index/indices/struct_store/sql_query.py\", line 282, in _query\r\n    raw_response_str, metadata = self._sql_database.run_sql(sql_query_str)\r\n                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/user/code/llama_index/llama_index/langchain_helpers/sql_wrapper.py\", line 91, in run_sql\r\n    cursor = connection.execute(text(command))\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/user/code/repo/venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1412, in execute\r\n    return meth(\r\n           ^^^^^\r\n  File \"/Users/user/code/repo/venv/lib/python3.11/site-packages/sqlalchemy/sql/elements.py\", line 516, in _execute_on_connection\r\n    return connection._execute_clauseelement(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/user/code/repo/venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1635, in _execute_clauseelement\r\n    ret = self._execute_context(\r\n          ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/user/code/repo/venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1844, in _execute_context\r\n    return self._exec_single_context(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/user/code/repo/venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1984, in _exec_single_context\r\n    self._handle_dbapi_exception(\r\n  File \"/Users/user/code/repo/venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 2339, in _handle_dbapi_exception\r\n    raise sqlalchemy_exception.with_traceback(exc_info[2]) from e\r\n  File \"/Users/user/code/repo/venv/lib/python3.11/site-packages/sqlalchemy/engine/base.py\", line 1965, in _exec_single_context\r\n    self.dialect.do_execute(\r\n  File \"/Users/user/code/repo/venv/lib/python3.11/site-packages/sqlalchemy/engine/default.py\", line 921, in do_execute\r\n    cursor.execute(statement, parameters)\r\nsqlalchemy.exc.ProgrammingError: (psycopg2.errors.SyntaxError) syntax error at or near \"Sure\"\r\nLINE 1: Sure! I'd be happy to help you with that. Here's the SQL que...\r\n        ^\r\n[SQL: Sure! I'd be happy to help you with that. Here's the SQL query to retrieve the aliases for <redacted>:\r\n\r\nSELECT ai.aliases\r\nFROM table1 ci\r\nJOIN table2 cch ON ci.id = cch.<redacted>_id\r\nJOIN table3 clp ON cch.diff LIKE '%%<redacted>%%'\r\nJOIN table4 clb ON clp.column1 = clb.name\r\nJOIN table5 cm ON clb.column2 = cm.name\r\nWHERE cm.id = 1; -- specify the id of the <redacted> you want to retrieve aliases for\r\n\r\nThe query joins several tables to retrieve all relevant information about <redacted>, including its aliases. The `JOIN` statements are used to link the tables based on common columns. The `WHERE` clause is used to filter the results to only include records with a specific <redacted> ID (in this case, 1).\r\nThe query will return a list of all known aliases for <redacted>, which can be useful in various applications such as <redacted>.\r\nNote that the query is written using PostgreSQL syntax and may need to be modified to work with other SQL databases. Additionally, the table names and column names may need to be adjusted based on the specific schema of your database.]\r\n(Background on this error at: https://sqlalche.me/e/20/f405)\r\npython-BaseException\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7865/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7865/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7864",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7864/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7864/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7864/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7864",
        "id": 1916383623,
        "node_id": "PR_kwDOIWuq585bYjiV",
        "number": 7864,
        "title": "add \"build RAG from scratch notebook\" - OSS/local ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-27T21:48:54Z",
        "updated_at": "2023-09-27T22:11:50Z",
        "closed_at": "2023-09-27T22:11:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7864",
            "html_url": "https://github.com/run-llama/llama_index/pull/7864",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7864.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7864.patch",
            "merged_at": "2023-09-27T22:11:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7864/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7864/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7863",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7863/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7863/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7863/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7863",
        "id": 1916266858,
        "node_id": "PR_kwDOIWuq585bYJZ7",
        "number": 7863,
        "title": "Markdown node parser, flat file reader and simple file node parser",
        "user": {
            "login": "ajhofmann",
            "id": 10040285,
            "node_id": "MDQ6VXNlcjEwMDQwMjg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/10040285?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajhofmann",
            "html_url": "https://github.com/ajhofmann",
            "followers_url": "https://api.github.com/users/ajhofmann/followers",
            "following_url": "https://api.github.com/users/ajhofmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajhofmann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajhofmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajhofmann/subscriptions",
            "organizations_url": "https://api.github.com/users/ajhofmann/orgs",
            "repos_url": "https://api.github.com/users/ajhofmann/repos",
            "events_url": "https://api.github.com/users/ajhofmann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajhofmann/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-27T20:27:36Z",
        "updated_at": "2023-10-04T04:03:28Z",
        "closed_at": "2023-10-04T04:03:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7863",
            "html_url": "https://github.com/run-llama/llama_index/pull/7863",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7863.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7863.patch",
            "merged_at": "2023-10-04T04:03:28Z"
        },
        "body": "# Description\r\n\r\nThe main pain points that we identified that we are targeting to resolve:\r\n- We want to be able to split text in a way that we can provide metadata in the splits (ie markdown headers as metadata for a section)\r\n- We want to avoid breaking the current workflow for users using the SimpleDirectoryReader and benefitting from the splitting that the loaders perform\r\n- We want to avoid re-implementing the same file based splitting logic\r\n\r\nProposal:\r\n- Create a raw file loader that opens up a file and attaches the filename/file extension to the metadata and loads it as essentially a single raw text Document\r\n  - This is to avoid making breaking changes to the existing file loaders and workflows\r\n- The file based text splitters can be implemented as NodeParser's, since they are producing text with metadata, so for example we make a MarkdownNodeParser\r\n- Create a SimpleFileNodeParser  that maps file extensions to NodeParser's and can process Document's by reading the file extension from the metadata and using the proper file based node parser, and then applying the TextSplitter it's been configured with\r\n  - So to get a similar workflow to what SimpleDirectoryReader + SimpleNodeParser does, you load all your files with the RawFileLoader and then pass the Document 's into SimpleFileNodeParser\r\n\r\nExample usage:\r\n```python\r\nfrom llama_index.node_parser.simple_file import SimpleFileNodeParser\r\nfrom llama_index.readers.file.flat_reader import FlatReader\r\nfrom llama_index.node_parser.simple import SimpleNodeParser\r\nfrom llama_index.text_splitter import SentenceSplitter\r\n\r\nfrom pathlib import Path\r\nreader = FlatReader()\r\nfile = reader.load_data(Path('./README.md'))\r\n\r\nparser = SimpleFileNodeParser()\r\nnodes = parser.get_nodes_from_documents(file)\r\n\r\n\r\nsentence_parser = SimpleNodeParser(text_splitter=SentenceSplitter(chunk_size=250, chunk_overlap=0))\r\n\r\nnodes = sentence_parser.get_nodes_from_documents(nodes)\r\n```\r\n\r\nOpen questions:\r\n- What do we do in the simple file node parser if the filetype is not yet supported?\r\n- Is chaining the SimpleFileNodeParser with another chunking node parser the preferred interface, or should the SimpleFileNodeParser accept a text splitter to apply?\r\n- ?\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7863/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7863/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7862",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7862/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7862/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7862/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7862",
        "id": 1916247478,
        "node_id": "PR_kwDOIWuq585bYFIH",
        "number": 7862,
        "title": "fix for the `UserWarning: Importing BasePromptTemplate from langchain root module is no longer supported.`",
        "user": {
            "login": "kambleakash0",
            "id": 11428589,
            "node_id": "MDQ6VXNlcjExNDI4NTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11428589?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kambleakash0",
            "html_url": "https://github.com/kambleakash0",
            "followers_url": "https://api.github.com/users/kambleakash0/followers",
            "following_url": "https://api.github.com/users/kambleakash0/following{/other_user}",
            "gists_url": "https://api.github.com/users/kambleakash0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kambleakash0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kambleakash0/subscriptions",
            "organizations_url": "https://api.github.com/users/kambleakash0/orgs",
            "repos_url": "https://api.github.com/users/kambleakash0/repos",
            "events_url": "https://api.github.com/users/kambleakash0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kambleakash0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-27T20:14:42Z",
        "updated_at": "2023-09-28T22:51:50Z",
        "closed_at": "2023-09-28T22:51:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7862",
            "html_url": "https://github.com/run-llama/llama_index/pull/7862",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7862.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7862.patch",
            "merged_at": "2023-09-28T22:51:50Z"
        },
        "body": "# Description\r\n\r\nJust changed the import statement a little bit the main `langchain` bridge, `llama_index/bridge/langchain.py`\r\n\r\nFixes #7861 ([[Bug]: UserWarning: Importing BasePromptTemplate from langchain root module is no longer supported.](https://github.com/jerryjliu/llama_index/issues/7861))\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I re-ran my app and no longer see the warning.\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7862/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7861",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7861/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7861/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7861/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7861",
        "id": 1916220763,
        "node_id": "I_kwDOIWuq585yNzVb",
        "number": 7861,
        "title": "[Bug]: UserWarning: Importing BasePromptTemplate from langchain root module is no longer supported.",
        "user": {
            "login": "kambleakash0",
            "id": 11428589,
            "node_id": "MDQ6VXNlcjExNDI4NTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11428589?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kambleakash0",
            "html_url": "https://github.com/kambleakash0",
            "followers_url": "https://api.github.com/users/kambleakash0/followers",
            "following_url": "https://api.github.com/users/kambleakash0/following{/other_user}",
            "gists_url": "https://api.github.com/users/kambleakash0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kambleakash0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kambleakash0/subscriptions",
            "organizations_url": "https://api.github.com/users/kambleakash0/orgs",
            "repos_url": "https://api.github.com/users/kambleakash0/repos",
            "events_url": "https://api.github.com/users/kambleakash0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kambleakash0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-27T19:55:01Z",
        "updated_at": "2023-09-28T22:51:51Z",
        "closed_at": "2023-09-28T22:51:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nFacing the above error when on latest llama_index version and trying to run my langchain-based app.\n\n### Version\n\n0.8.35\n\n### Steps to Reproduce\n\n- Just create an environment and have a `requirements.txt` with `llama-index==0.8.35`\r\n- Create a basic clone of ChatGPT or any other app that processes documents\n\n### Relevant Logs/Tracbacks\n\n```shell\n$ gradio langchainApp.py\r\n\r\nLaunching in *reload mode* on: http://127.0.0.1:7860 (Press CTRL+C to quit)\r\n\r\nWatching: '/home/ak/llm/he-venv/lib/python3.10/site-packages/gradio', '/home/ak/llm'\r\n\r\n/home/ak/llm/he-venv/lib/python3.10/site-packages/langchain/__init__.py:24: UserWarning: Importing BasePromptTemplate from langchain root module is no longer supported.\r\n  warnings.warn(\r\n/home/ak/llm/he-venv/lib/python3.10/site-packages/langchain/__init__.py:24: UserWarning: Importing PromptTemplate from langchain root module is no longer supported.\r\n  warnings.warn(\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7861/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7860",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7860/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7860/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7860/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7860",
        "id": 1916031807,
        "node_id": "I_kwDOIWuq585yNFM_",
        "number": 7860,
        "title": "[Bug]: Predibase client initialization bug",
        "user": {
            "login": "connor-mccorm",
            "id": 97468934,
            "node_id": "U_kgDOBc9CBg",
            "avatar_url": "https://avatars.githubusercontent.com/u/97468934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/connor-mccorm",
            "html_url": "https://github.com/connor-mccorm",
            "followers_url": "https://api.github.com/users/connor-mccorm/followers",
            "following_url": "https://api.github.com/users/connor-mccorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/connor-mccorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/connor-mccorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/connor-mccorm/subscriptions",
            "organizations_url": "https://api.github.com/users/connor-mccorm/orgs",
            "repos_url": "https://api.github.com/users/connor-mccorm/repos",
            "events_url": "https://api.github.com/users/connor-mccorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/connor-mccorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-27T17:33:05Z",
        "updated_at": "2023-09-27T18:00:55Z",
        "closed_at": "2023-09-27T18:00:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nPassing in the wrong argument in `initialize_client` method. Fixed in [this PR](https://github.com/jerryjliu/llama_index/pull/7859)\n\n### Version\n\nlatest\n\n### Steps to Reproduce\n\nTry to create a Predibase LLM\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7860/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7860/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7859",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7859/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7859/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7859/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7859",
        "id": 1916023238,
        "node_id": "PR_kwDOIWuq585bXUtX",
        "number": 7859,
        "title": "Fix Predibase client initialization",
        "user": {
            "login": "connor-mccorm",
            "id": 97468934,
            "node_id": "U_kgDOBc9CBg",
            "avatar_url": "https://avatars.githubusercontent.com/u/97468934?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/connor-mccorm",
            "html_url": "https://github.com/connor-mccorm",
            "followers_url": "https://api.github.com/users/connor-mccorm/followers",
            "following_url": "https://api.github.com/users/connor-mccorm/following{/other_user}",
            "gists_url": "https://api.github.com/users/connor-mccorm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/connor-mccorm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/connor-mccorm/subscriptions",
            "organizations_url": "https://api.github.com/users/connor-mccorm/orgs",
            "repos_url": "https://api.github.com/users/connor-mccorm/repos",
            "events_url": "https://api.github.com/users/connor-mccorm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/connor-mccorm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-27T17:26:32Z",
        "updated_at": "2023-09-27T18:00:43Z",
        "closed_at": "2023-09-27T18:00:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7859",
            "html_url": "https://github.com/run-llama/llama_index/pull/7859",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7859.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7859.patch",
            "merged_at": "2023-09-27T18:00:42Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7859/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7859/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7858",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7858/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7858/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7858/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7858",
        "id": 1916010261,
        "node_id": "PR_kwDOIWuq585bXR82",
        "number": 7858,
        "title": "add kg_schema to excluded meta keys",
        "user": {
            "login": "RobbieL-nlp",
            "id": 123534815,
            "node_id": "U_kgDOB1z93w",
            "avatar_url": "https://avatars.githubusercontent.com/u/123534815?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RobbieL-nlp",
            "html_url": "https://github.com/RobbieL-nlp",
            "followers_url": "https://api.github.com/users/RobbieL-nlp/followers",
            "following_url": "https://api.github.com/users/RobbieL-nlp/following{/other_user}",
            "gists_url": "https://api.github.com/users/RobbieL-nlp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RobbieL-nlp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RobbieL-nlp/subscriptions",
            "organizations_url": "https://api.github.com/users/RobbieL-nlp/orgs",
            "repos_url": "https://api.github.com/users/RobbieL-nlp/repos",
            "events_url": "https://api.github.com/users/RobbieL-nlp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RobbieL-nlp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-27T17:16:49Z",
        "updated_at": "2023-09-27T17:24:45Z",
        "closed_at": "2023-09-27T17:24:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7858",
            "html_url": "https://github.com/run-llama/llama_index/pull/7858",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7858.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7858.patch",
            "merged_at": "2023-09-27T17:24:45Z"
        },
        "body": "add kg_schema to excluded meta keys if kg_schema is not empty, so that the kg_schema isn't included in context\r\n\r\n# Description\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7858/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7857",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7857/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7857/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7857/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7857",
        "id": 1915997765,
        "node_id": "PR_kwDOIWuq585bXPNd",
        "number": 7857,
        "title": "add a doc for everlyai",
        "user": {
            "login": "david-huge",
            "id": 127131037,
            "node_id": "U_kgDOB5PdnQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/127131037?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david-huge",
            "html_url": "https://github.com/david-huge",
            "followers_url": "https://api.github.com/users/david-huge/followers",
            "following_url": "https://api.github.com/users/david-huge/following{/other_user}",
            "gists_url": "https://api.github.com/users/david-huge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david-huge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david-huge/subscriptions",
            "organizations_url": "https://api.github.com/users/david-huge/orgs",
            "repos_url": "https://api.github.com/users/david-huge/repos",
            "events_url": "https://api.github.com/users/david-huge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david-huge/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-27T17:08:10Z",
        "updated_at": "2023-09-27T17:18:11Z",
        "closed_at": "2023-09-27T17:18:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7857",
            "html_url": "https://github.com/run-llama/llama_index/pull/7857",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7857.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7857.patch",
            "merged_at": "2023-09-27T17:18:11Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7857/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7857/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7856",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7856/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7856/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7856/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7856",
        "id": 1915951863,
        "node_id": "PR_kwDOIWuq585bXFV1",
        "number": 7856,
        "title": "Update openai.py",
        "user": {
            "login": "tejeshbhalla",
            "id": 62867013,
            "node_id": "MDQ6VXNlcjYyODY3MDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/62867013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tejeshbhalla",
            "html_url": "https://github.com/tejeshbhalla",
            "followers_url": "https://api.github.com/users/tejeshbhalla/followers",
            "following_url": "https://api.github.com/users/tejeshbhalla/following{/other_user}",
            "gists_url": "https://api.github.com/users/tejeshbhalla/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tejeshbhalla/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tejeshbhalla/subscriptions",
            "organizations_url": "https://api.github.com/users/tejeshbhalla/orgs",
            "repos_url": "https://api.github.com/users/tejeshbhalla/repos",
            "events_url": "https://api.github.com/users/tejeshbhalla/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tejeshbhalla/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-27T16:35:56Z",
        "updated_at": "2023-10-01T16:25:44Z",
        "closed_at": "2023-09-27T17:18:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7856",
            "html_url": "https://github.com/run-llama/llama_index/pull/7856",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7856.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7856.patch",
            "merged_at": "2023-09-27T17:18:25Z"
        },
        "body": "Fixed bug in astream_chat\r\n\r\n# Description\r\n\r\nAzure openai api when used in astream_chat mode with query engine tools returns error : \r\n  `query_engine_tools = [\r\n    QueryEngineTool(\r\n        query_engine=vector_engine,\r\n        metadata=ToolMetadata(\r\n            name=\"ask_vector_engine\", description=\"Tool to query vector db to get questions answered from related files , good to fetch detail if specific\"\r\n        ),\r\n    ),\r\n    QueryEngineTool(\r\n        query_engine=graph_query_engine,\r\n        metadata=ToolMetadata(\r\n            name=\"ask_knowledge_index\", description=\"Tool to query knowledge graph index , use this tool to fetch relations and then use vector engine to detail the answer ,use recursively until statisfied\"\r\n        ),\r\n    ),\r\n]\r\nagent= OpenAIAgent.from_tools(query_engine_tools, verbose=True,llm=AZURE_LLM)\r\nresponse = await agent2.astream_chat(\r\n      \"hi what is the pdf's about ?\"\r\n  )\r\n\r\nresponse_gen = response.response_gen\r\n\r\n\r\nasync for token in response.async_response_gen():\r\n    print(token, end=\"\")\r\n\r\n`\r\nThe error was \r\n`\r\nWARNING:llama_index.chat_engine.types:Encountered exception writing response to history: 'arguments'\r\n\r\n`\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ \u2611] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ \u2611] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ \u2611] I have performed a self-review of my own code\r\n- [ \u2611] I have commented my code, particularly in hard-to-understand areas\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7856/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7855",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7855/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7855/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7855/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7855",
        "id": 1915934424,
        "node_id": "PR_kwDOIWuq585bXBfZ",
        "number": 7855,
        "title": "Logan/sub question parser",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-27T16:25:12Z",
        "updated_at": "2023-09-27T16:52:04Z",
        "closed_at": "2023-09-27T16:52:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7855",
            "html_url": "https://github.com/run-llama/llama_index/pull/7855",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7855.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7855.patch",
            "merged_at": "2023-09-27T16:52:03Z"
        },
        "body": "Small fix to avoid `NotImplementedError` in output parser",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7855/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7855/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7854",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7854/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7854/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7854/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7854",
        "id": 1915728969,
        "node_id": "I_kwDOIWuq585yL7RJ",
        "number": 7854,
        "title": "[Bug]: BaseSynthesizer does not work with TextNodes as nodex parameter",
        "user": {
            "login": "andreas-kopecky",
            "id": 832274,
            "node_id": "MDQ6VXNlcjgzMjI3NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/832274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andreas-kopecky",
            "html_url": "https://github.com/andreas-kopecky",
            "followers_url": "https://api.github.com/users/andreas-kopecky/followers",
            "following_url": "https://api.github.com/users/andreas-kopecky/following{/other_user}",
            "gists_url": "https://api.github.com/users/andreas-kopecky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andreas-kopecky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andreas-kopecky/subscriptions",
            "organizations_url": "https://api.github.com/users/andreas-kopecky/orgs",
            "repos_url": "https://api.github.com/users/andreas-kopecky/repos",
            "events_url": "https://api.github.com/users/andreas-kopecky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andreas-kopecky/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-27T14:33:54Z",
        "updated_at": "2023-09-28T02:45:31Z",
        "closed_at": "2023-09-27T15:19:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nBaseSynthesizer expects Node objects (passed in via nodes param) to have a \"node\" attribute (like NodeWithScore does).\r\nThis is, however, not the case for TextNode, Documents, etc.\r\n\r\nhttps://github.com/jerryjliu/llama_index/blob/f8c95479bb9e502eb1eb4f938b942cb2551d6f08/llama_index/response_synthesizers/base.py#L131 is the link to the faulty line.\r\n\r\nassuming that EVERY node object has a node attribute - which it does not.\n\n### Version\n\n0.8.35\n\n### Steps to Reproduce\n\n```\r\nfrom llama_index.schema import Node, Document, NodeWithScore\r\nfrom llama_index.response_synthesizers import ResponseMode, get_response_synthesizer\r\nfrom llama_index.indices.service_context import ServiceContext\r\nfrom llama_index.node_parser import SimpleNodeParser\r\n\r\nparser = SimpleNodeParser.from_defaults()\r\n\r\ncontent = [\"I am a funny text\", \"I should be in context\"]\r\nnodes = [Node(text=t) for t in content]\r\n\r\nresponse_synthesizer = get_response_synthesizer(\r\n    response_mode=ResponseMode.ACCUMULATE, \r\n    service_context=ServiceContext.from_defaults(llm=llm)\r\n)\r\n\r\nresponse_synthesizer.synthesize(\"All your base are belong to us.\", nodes=nodes)\r\n```\r\n\r\nresults in\r\n\r\n`AttributeError: 'TextNode' object has no attribute 'node'`\r\n\r\nWrapping nodes a second time as \"NodeWithScore\" fixes this but.\r\n\r\n```\r\nfrom llama_index.schema import Node, Document, NodeWithScore\r\nfrom llama_index.response_synthesizers import ResponseMode, get_response_synthesizer\r\nfrom llama_index.indices.service_context import ServiceContext\r\nfrom llama_index.node_parser import SimpleNodeParser\r\n\r\nparser = SimpleNodeParser.from_defaults()\r\n\r\ncontent = [\"I am a funny text\", \"I should be in context\"]\r\nnodes = [Node(text=t) for t in content]\r\nl2_nodes = [NodeWithScore(node=n, score=1.0) for n in nodes]\r\n\r\nresponse_synthesizer = get_response_synthesizer(\r\n    response_mode=ResponseMode.ACCUMULATE, \r\n    service_context=ServiceContext.from_defaults(llm=llm)\r\n)\r\n\r\nresponse_synthesizer.synthesize(\"All your base are belong to us.\", nodes=l2_nodes)\r\n```\r\nruns successfully but is rather stupid \r\n\r\n\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7854/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7854/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7853",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7853/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7853/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7853/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7853",
        "id": 1915592330,
        "node_id": "I_kwDOIWuq585yLZ6K",
        "number": 7853,
        "title": "[Question]: ",
        "user": {
            "login": "Prashantsaini25",
            "id": 64362251,
            "node_id": "MDQ6VXNlcjY0MzYyMjUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/64362251?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Prashantsaini25",
            "html_url": "https://github.com/Prashantsaini25",
            "followers_url": "https://api.github.com/users/Prashantsaini25/followers",
            "following_url": "https://api.github.com/users/Prashantsaini25/following{/other_user}",
            "gists_url": "https://api.github.com/users/Prashantsaini25/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Prashantsaini25/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Prashantsaini25/subscriptions",
            "organizations_url": "https://api.github.com/users/Prashantsaini25/orgs",
            "repos_url": "https://api.github.com/users/Prashantsaini25/repos",
            "events_url": "https://api.github.com/users/Prashantsaini25/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Prashantsaini25/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-27T13:28:20Z",
        "updated_at": "2023-09-27T15:24:28Z",
        "closed_at": "2023-09-27T15:24:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI want to run Subquery Engine without openAI key. Can we do that",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7853/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7853/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7852",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7852/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7852/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7852/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7852",
        "id": 1915198886,
        "node_id": "PR_kwDOIWuq585bUgSD",
        "number": 7852,
        "title": "[ElasticsearchStore] fix hybrid scoring",
        "user": {
            "login": "joemcelroy",
            "id": 49480,
            "node_id": "MDQ6VXNlcjQ5NDgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/49480?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joemcelroy",
            "html_url": "https://github.com/joemcelroy",
            "followers_url": "https://api.github.com/users/joemcelroy/followers",
            "following_url": "https://api.github.com/users/joemcelroy/following{/other_user}",
            "gists_url": "https://api.github.com/users/joemcelroy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joemcelroy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joemcelroy/subscriptions",
            "organizations_url": "https://api.github.com/users/joemcelroy/orgs",
            "repos_url": "https://api.github.com/users/joemcelroy/repos",
            "events_url": "https://api.github.com/users/joemcelroy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joemcelroy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-27T10:24:06Z",
        "updated_at": "2023-09-27T20:06:55Z",
        "closed_at": "2023-09-27T16:11:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7852",
            "html_url": "https://github.com/run-llama/llama_index/pull/7852",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7852.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7852.patch",
            "merged_at": "2023-09-27T16:11:04Z"
        },
        "body": "# Description\r\n\r\nfixes #7830\r\n\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7852/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7852/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7851",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7851/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7851/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7851/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7851",
        "id": 1915177497,
        "node_id": "I_kwDOIWuq585yJ0oZ",
        "number": 7851,
        "title": "[Bug]: Can not save 2 indexes with different ID into same folder?",
        "user": {
            "login": "huangjia2019",
            "id": 48795276,
            "node_id": "MDQ6VXNlcjQ4Nzk1Mjc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/48795276?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/huangjia2019",
            "html_url": "https://github.com/huangjia2019",
            "followers_url": "https://api.github.com/users/huangjia2019/followers",
            "following_url": "https://api.github.com/users/huangjia2019/following{/other_user}",
            "gists_url": "https://api.github.com/users/huangjia2019/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/huangjia2019/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/huangjia2019/subscriptions",
            "organizations_url": "https://api.github.com/users/huangjia2019/orgs",
            "repos_url": "https://api.github.com/users/huangjia2019/repos",
            "events_url": "https://api.github.com/users/huangjia2019/events{/privacy}",
            "received_events_url": "https://api.github.com/users/huangjia2019/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-27T10:14:10Z",
        "updated_at": "2023-09-27T15:26:34Z",
        "closed_at": "2023-09-27T15:26:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nBased on this page, we should be able to save 2 indexes with different ID into same folder.\r\nhttps://gpt-index.readthedocs.io/en/latest/core_modules/data_modules/storage/customization.html\r\n\r\n```\r\n# can also set index_id to save multiple indexes to the same folder\r\nindex.set_index_id = \"<index_id>\"\r\nindex.storage_context.persist(persist_dir=\"<persist_dir>\")\r\n```\r\n\r\nHowever, I face issue that the second save always overwrite the first Index. Is there anything wrong with my code? \r\nMy code is attached below.\n\n### Version\n\n0.8.29.post1\n\n### Steps to Reproduce\n\n```\r\nimport os\r\nfrom dotenv import load_dotenv\r\nimport openai\r\nload_dotenv()\r\napi_key = os.getenv(\"OPENAI_API_KEY\")\r\nopenai.api_key = api_key\r\n\r\nfrom llama_index import VectorStoreIndex, SimpleDirectoryReader\r\ndocuments = SimpleDirectoryReader('data/A100').load_data()\r\nindex_1 = VectorStoreIndex.from_documents(documents)\r\nindex_1.set_index_id(\"A100\")\r\ndocuments = SimpleDirectoryReader('data/B200').load_data()\r\nindex_2 = VectorStoreIndex.from_documents(documents)\r\nindex_2.set_index_id(\"B200\")\r\n\r\nindex_1.storage_context.persist()\r\nindex_2.storage_context.persist()\r\nprint(\"Data saved successfully!\")\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\nI only get B200 in the index store, and my A100 is overwritten.\r\n\r\n{\"index_store/data\": {\"B200\": {\"__type__\": \"vector_store\", \"__data__\": \"{\\\"index_id\\\": \\\"B200\\\", \\\"summary\\\": null, \\\"nodes_dict\\\": {\\\"38303fa2-08fc-49cb-8ba5-ed1c2bc6299b\\\": \\\"38303fa2-08fc-49cb-8ba5-ed1c2bc6299b\\\", \\\"9350d413-2cb6-4239-aa9f-bcb8f971bb3d\\\": \\\"9350d413-2cb6-4239-aa9f-bcb8f971bb3d\\\", \\\"0c96544c-7e97-4561-9a80-d40b083d82b8\\\": \\\"0c96544c-7e97-4561-9a80-d40b083d82b8\\\", \\\"3ae096c9-7174-4964-a6b4-98dab8dd0ef4\\\": \\\"3ae096c9-7174-4964-a6b4-98dab8dd0ef4\\\", \\\"070a2cba-10bd-4d6e-9d84-297d968786d5\\\": \\\"070a2cba-10bd-4d6e-9d84-297d968786d5\\\", \\\"86ae2663-de5b-45f6-98a8-1d0e90bd43a0\\\": \\\"86ae2663-de5b-45f6-98a8-1d0e90bd43a0\\\", \\\"cc43ad51-0f95-4557-a6b5-3beb730bf2ff\\\": \\\"cc43ad51-0f95-4557-a6b5-3beb730bf2ff\\\", \\\"919796bd-b39a-40d0-bac4-0a9cf700c959\\\": \\\"919796bd-b39a-40d0-bac4-0a9cf700c959\\\", \\\"104d246e-5b94-41fc-9f6b-81d651ed8ec8\\\": \\\"104d246e-5b94-41fc-9f6b-81d651ed8ec8\\\", \\\"677d7c23-d681-4d96-ae99-17beaf9ac332\\\": \\\"677d7c23-d681-4d96-ae99-17beaf9ac332\\\", \\\"2c75e1dc-ab97-4556-b2e0-f58063e3cd6a\\\": \\\"2c75e1dc-ab97-4556-b2e0-f58063e3cd6a\\\", \\\"689616f5-0c37-4cc8-bf1c-67102d76973f\\\": \\\"689616f5-0c37-4cc8-bf1c-67102d76973f\\\", \\\"1acaedab-f1d4-44c9-bdf6-0906f27d3f28\\\": \\\"1acaedab-f1d4-44c9-bdf6-0906f27d3f28\\\", \\\"d3d2c10f-88e1-47e1-874d-806c29724fbb\\\": \\\"d3d2c10f-88e1-47e1-874d-806c\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7851/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7851/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7850",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7850/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7850/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7850/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7850",
        "id": 1914919818,
        "node_id": "I_kwDOIWuq585yI1uK",
        "number": 7850,
        "title": "[Bug]: Neo4jQueryToolSpec > Could not use APOC procedures. Please ensure the APOC plugin is installed in Neo4j ",
        "user": {
            "login": "adriens",
            "id": 5235127,
            "node_id": "MDQ6VXNlcjUyMzUxMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5235127?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adriens",
            "html_url": "https://github.com/adriens",
            "followers_url": "https://api.github.com/users/adriens/followers",
            "following_url": "https://api.github.com/users/adriens/following{/other_user}",
            "gists_url": "https://api.github.com/users/adriens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adriens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adriens/subscriptions",
            "organizations_url": "https://api.github.com/users/adriens/orgs",
            "repos_url": "https://api.github.com/users/adriens/repos",
            "events_url": "https://api.github.com/users/adriens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adriens/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-27T07:55:39Z",
        "updated_at": "2023-09-27T08:29:45Z",
        "closed_at": "2023-09-27T08:29:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhile connecting to an AuraDB instance:\r\n\r\n```python\r\nfrom llama_hub.tools.neo4j_db.base import Neo4jQueryToolSpec\r\nfrom llama_index.llms import OpenAI\r\nfrom llama_index.agent import OpenAIAgent\r\n\r\n\r\n\r\ngds_db = Neo4jQueryToolSpec(\r\n    url=NEO4J_URI,\r\n    user=NEO4J_USERNAME,\r\n    password=NODES_NEO4J_AURADB_PASSWORD,\r\n    llm=ChatOpenAI(temperature=0, model_name=\"gpt-4\"),\r\n    database=AURA_INSTANCENAME\r\n)\r\n\r\ntools = gds_db.to_tool_list()\r\nagent = OpenAIAgent.from_tools(tools, verbose=True)\r\n```\r\n\r\nI get the following error:\r\n\r\n![image](https://github.com/jerryjliu/llama_index/assets/5235127/63191334-7421-4a93-ab25-31d8887b4495)\r\n\r\nYet, APOC is properly installed on the remote instance:\r\n\r\n![image](https://github.com/jerryjliu/llama_index/assets/5235127/695145c0-118b-48b9-852c-f095b7c75355)\r\n\r\n\r\nSo I wonder where things go wrong :thinking: \r\n\r\n```\r\nRequirement already satisfied: llama-index in /opt/conda/lib/python3.10/site-packages (0.8.35)\r\nRequirement already satisfied: llama-hub in /opt/conda/lib/python3.10/site-packages (0.0.33)\r\n```\n\n### Version\n\n0.8.35\n\n### Steps to Reproduce\n\nDetailed in the first section\n\n### Relevant Logs/Tracbacks\n\n```shell\n---------------------------------------------------------------------------\r\nClientError                               Traceback (most recent call last)\r\nFile /opt/conda/lib/python3.10/site-packages/llama_index/graph_stores/neo4j.py:68, in Neo4jGraphStore.__init__(self, username, password, url, database, node_label, **kwargs)\r\n     67 try:\r\n---> 68     self.refresh_schema()\r\n     69 except neo4j.exceptions.ClientError:\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/llama_index/graph_stores/neo4j.py:205, in Neo4jGraphStore.refresh_schema(self)\r\n    202 \"\"\"\r\n    203 Refreshes the Neo4j graph schema information.\r\n    204 \"\"\"\r\n--> 205 node_properties = self.query(node_properties_query)\r\n    206 relationships_properties = self.query(rel_properties_query)\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/llama_index/graph_stores/neo4j.py:228, in Neo4jGraphStore.query(self, query, param_map)\r\n    227 with self._driver.session(database=self._database) as session:\r\n--> 228     result = session.run(query, param_map)\r\n    229     return [d.data() for d in result]\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/neo4j/_sync/work/session.py:308, in Session.run(self, query, parameters, **kwargs)\r\n    307 if not self._connection:\r\n--> 308     self._connect(self._config.default_access_mode)\r\n    309 cx = self._connection\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/neo4j/_sync/work/session.py:141, in Session._connect(self, access_mode, **acquire_kwargs)\r\n    140 try:\r\n--> 141     super()._connect(\r\n    142         access_mode, auth=self._config.auth, **acquire_kwargs\r\n    143     )\r\n    144 except asyncio.CancelledError:\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/neo4j/_sync/work/workspace.py:178, in Workspace._connect(self, access_mode, auth, **acquire_kwargs)\r\n    177 acquire_kwargs_.update(acquire_kwargs)\r\n--> 178 self._connection = self._pool.acquire(**acquire_kwargs_)\r\n    179 self._connection_access_mode = access_mode\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/neo4j/_sync/io/_pool.py:912, in Neo4jPool.acquire(self, access_mode, timeout, database, bookmarks, auth, liveness_check_timeout)\r\n    910 log.debug(\"[#0000]  _: <POOL> acquire routing connection, \"\r\n    911           \"access_mode=%r, database=%r\", access_mode, database)\r\n--> 912 self.ensure_routing_table_is_fresh(\r\n    913     access_mode=access_mode, database=database,\r\n    914     imp_user=None, bookmarks=bookmarks, auth=auth,\r\n    915     acquisition_timeout=timeout\r\n    916 )\r\n    918 while True:\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/neo4j/_sync/io/_pool.py:854, in Neo4jPool.ensure_routing_table_is_fresh(self, access_mode, database, imp_user, bookmarks, auth, acquisition_timeout, database_callback)\r\n    852     return False\r\n--> 854 self.update_routing_table(\r\n    855     database=database, imp_user=imp_user, bookmarks=bookmarks,\r\n    856     auth=auth, acquisition_timeout=acquisition_timeout,\r\n    857     database_callback=database_callback\r\n    858 )\r\n    859 self.update_connection_pool(database=database)\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/neo4j/_sync/io/_pool.py:776, in Neo4jPool.update_routing_table(self, database, imp_user, bookmarks, auth, acquisition_timeout, database_callback)\r\n    774 if prefer_initial_routing_address:\r\n    775     # TODO: Test this state\r\n--> 776     if self._update_routing_table_from(\r\n    777         self.address, database=database,\r\n    778         imp_user=imp_user, bookmarks=bookmarks, auth=auth,\r\n    779         acquisition_timeout=acquisition_timeout,\r\n    780         database_callback=database_callback\r\n    781     ):\r\n    782         # Why is only the first initial routing address used?\r\n    783         return\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/neo4j/_sync/io/_pool.py:722, in Neo4jPool._update_routing_table_from(self, database, imp_user, bookmarks, auth, acquisition_timeout, database_callback, *routers)\r\n    719 for address in NetworkUtil.resolve_address(\r\n    720     router, resolver=self.pool_config.resolver\r\n    721 ):\r\n--> 722     new_routing_table = self.fetch_routing_table(\r\n    723         address=address, acquisition_timeout=acquisition_timeout,\r\n    724         database=database, imp_user=imp_user, bookmarks=bookmarks,\r\n    725         auth=auth\r\n    726     )\r\n    727     if new_routing_table is not None:\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/neo4j/_sync/io/_pool.py:659, in Neo4jPool.fetch_routing_table(self, address, acquisition_timeout, database, imp_user, bookmarks, auth)\r\n    658 try:\r\n--> 659     new_routing_info = self.fetch_routing_info(\r\n    660         address, database, imp_user, bookmarks, auth,\r\n    661         acquisition_timeout\r\n    662     )\r\n    663 except Neo4jError as e:\r\n    664     # checks if the code is an error that is caused by the client. In\r\n    665     # this case there is no sense in trying to fetch a RT from another\r\n    666     # router. Hence, the driver should fail fast during discovery.\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/neo4j/_sync/io/_pool.py:629, in Neo4jPool.fetch_routing_info(self, address, database, imp_user, bookmarks, auth, acquisition_timeout)\r\n    628 try:\r\n--> 629     routing_table = cx.route(\r\n    630         database=database or self.workspace_config.database,\r\n    631         imp_user=imp_user or self.workspace_config.impersonated_user,\r\n    632         bookmarks=bookmarks\r\n    633     )\r\n    634 finally:\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/neo4j/_sync/io/_bolt5.py:191, in Bolt5x0.route(self, database, imp_user, bookmarks, dehydration_hooks, hydration_hooks)\r\n    190 self.send_all()\r\n--> 191 self.fetch_all()\r\n    192 return [metadata.get(\"rt\")]\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/neo4j/_sync/io/_bolt.py:840, in Bolt.fetch_all(self)\r\n    839 while not response.complete:\r\n--> 840     detail_delta, summary_delta = self.fetch_message()\r\n    841     detail_count += detail_delta\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/neo4j/_sync/io/_bolt.py:826, in Bolt.fetch_message(self)\r\n    823 tag, fields = self.inbox.pop(\r\n    824     hydration_hooks=self.responses[0].hydration_hooks\r\n    825 )\r\n--> 826 res = self._process_message(tag, fields)\r\n    827 self.idle_since = perf_counter()\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/neo4j/_sync/io/_bolt5.py:370, in Bolt5x0._process_message(self, tag, fields)\r\n    369 try:\r\n--> 370     response.on_failure(summary_metadata or {})\r\n    371 except (ServiceUnavailable, DatabaseUnavailable):\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/neo4j/_sync/io/_common.py:247, in Response.on_failure(self, metadata)\r\n    246 Util.callback(handler)\r\n--> 247 raise Neo4jError.hydrate(**metadata)\r\n\r\nClientError: {code: Neo.ClientError.Database.DatabaseNotFound} {message: Unable to get a routing table for database 'Instance01' because this database does not exist}\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\nCell In[29], line 7\r\n      2 from llama_index.llms import OpenAI\r\n      3 from llama_index.agent import OpenAIAgent\r\n----> 7 gds_db = Neo4jQueryToolSpec(\r\n      8     url=NEO4J_URI,\r\n      9     user=NEO4J_USERNAME,\r\n     10     password=NODES_NEO4J_AURADB_PASSWORD,\r\n     11     llm=ChatOpenAI(temperature=0, model_name=\"gpt-4\"),\r\n     12     database=AURA_INSTANCENAME\r\n     13 )\r\n     15 tools = gds_db.to_tool_list()\r\n     16 agent = OpenAIAgent.from_tools(tools, verbose=True)\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/llama_hub/tools/neo4j_db/base.py:31, in Neo4jQueryToolSpec.__init__(self, url, user, password, database, llm)\r\n     26 except ImportError:\r\n     27     raise ImportError(\r\n     28         \"`neo4j` package not found, please run `pip install neo4j`\"\r\n     29     )\r\n---> 31 self.graph_store = Neo4jGraphStore(url=url, username=user, password=password, database=database)\r\n     32 self.llm = llm\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/llama_index/graph_stores/neo4j.py:70, in Neo4jGraphStore.__init__(self, username, password, url, database, node_label, **kwargs)\r\n     68     self.refresh_schema()\r\n     69 except neo4j.exceptions.ClientError:\r\n---> 70     raise ValueError(\r\n     71         \"Could not use APOC procedures. \"\r\n     72         \"Please ensure the APOC plugin is installed in Neo4j and that \"\r\n     73         \"'apoc.meta.data()' is allowed in Neo4j configuration \"\r\n     74     )\r\n     75 # Create constraint for faster insert and retrieval\r\n     76 try:  # Using Neo4j 5\r\n\r\nValueError: Could not use APOC procedures. Please ensure the APOC plugin is installed in Neo4j and that 'apoc.meta.data()' is allowed in Neo4j configuration\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7850/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7850/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7849",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7849/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7849/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7849/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7849",
        "id": 1914847478,
        "node_id": "PR_kwDOIWuq585bTXd7",
        "number": 7849,
        "title": "Fixed typo in myscale vectorstore notebook",
        "user": {
            "login": "mpskex",
            "id": 8456706,
            "node_id": "MDQ6VXNlcjg0NTY3MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8456706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mpskex",
            "html_url": "https://github.com/mpskex",
            "followers_url": "https://api.github.com/users/mpskex/followers",
            "following_url": "https://api.github.com/users/mpskex/following{/other_user}",
            "gists_url": "https://api.github.com/users/mpskex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mpskex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mpskex/subscriptions",
            "organizations_url": "https://api.github.com/users/mpskex/orgs",
            "repos_url": "https://api.github.com/users/mpskex/repos",
            "events_url": "https://api.github.com/users/mpskex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mpskex/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-27T07:09:45Z",
        "updated_at": "2023-09-27T15:52:44Z",
        "closed_at": "2023-09-27T15:52:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7849",
            "html_url": "https://github.com/run-llama/llama_index/pull/7849",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7849.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7849.patch",
            "merged_at": "2023-09-27T15:52:44Z"
        },
        "body": "# Description\r\n\r\nFixed typo in myscale vectorstore notebook\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7849/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7849/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7848",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7848/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7848/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7848/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7848",
        "id": 1914826619,
        "node_id": "PR_kwDOIWuq585bTS8_",
        "number": 7848,
        "title": "[version] bump version to 0.8.35",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-27T06:54:54Z",
        "updated_at": "2023-09-27T07:09:16Z",
        "closed_at": "2023-09-27T07:09:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7848",
            "html_url": "https://github.com/run-llama/llama_index/pull/7848",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7848.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7848.patch",
            "merged_at": "2023-09-27T07:09:15Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7848/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7848/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7847",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7847/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7847/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7847/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7847",
        "id": 1914780098,
        "node_id": "PR_kwDOIWuq585bTIxQ",
        "number": 7847,
        "title": "fix pandas query engine ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-27T06:21:22Z",
        "updated_at": "2023-09-27T06:53:46Z",
        "closed_at": "2023-09-27T06:53:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7847",
            "html_url": "https://github.com/run-llama/llama_index/pull/7847",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7847.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7847.patch",
            "merged_at": "2023-09-27T06:53:45Z"
        },
        "body": "notebook is largely unchagned (ended up getting reformatted, I added an extra example).\r\n\r\nBut the pandas query engine was breaking due to messy string handling. This should hopefully fix that ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7847/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7847/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7846",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7846/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7846/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7846/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7846",
        "id": 1914637853,
        "node_id": "I_kwDOIWuq585yHw4d",
        "number": 7846,
        "title": "[Bug]: ModuleNotFoundError: No module named 'eval_utils'",
        "user": {
            "login": "zxiaodong-mineral",
            "id": 134027468,
            "node_id": "U_kgDOB_0YzA",
            "avatar_url": "https://avatars.githubusercontent.com/u/134027468?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zxiaodong-mineral",
            "html_url": "https://github.com/zxiaodong-mineral",
            "followers_url": "https://api.github.com/users/zxiaodong-mineral/followers",
            "following_url": "https://api.github.com/users/zxiaodong-mineral/following{/other_user}",
            "gists_url": "https://api.github.com/users/zxiaodong-mineral/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zxiaodong-mineral/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zxiaodong-mineral/subscriptions",
            "organizations_url": "https://api.github.com/users/zxiaodong-mineral/orgs",
            "repos_url": "https://api.github.com/users/zxiaodong-mineral/repos",
            "events_url": "https://api.github.com/users/zxiaodong-mineral/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zxiaodong-mineral/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-27T03:51:12Z",
        "updated_at": "2023-09-27T15:27:33Z",
        "closed_at": "2023-09-27T15:27:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI have try to  fine tuning  adapter,when i import eval_utils, the model not found,\r\n```\r\nfrom eval_utils import evaluate, display_results\r\n```\r\nPlease tell me why this problem occurs\r\n\r\nThanks\uff01\n\n### Version\n\n 0.8.29.post1\n\n### Steps to Reproduce\n\nfrom eval_utils import evaluate, display_results\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7846/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7846/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7845",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7845/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7845/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7845/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7845",
        "id": 1914598142,
        "node_id": "PR_kwDOIWuq585bShZ3",
        "number": 7845,
        "title": "Replace print_text and get_color_mapping langchain dependency with internal implementation",
        "user": {
            "login": "Javtor",
            "id": 8462127,
            "node_id": "MDQ6VXNlcjg0NjIxMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8462127?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Javtor",
            "html_url": "https://github.com/Javtor",
            "followers_url": "https://api.github.com/users/Javtor/followers",
            "following_url": "https://api.github.com/users/Javtor/following{/other_user}",
            "gists_url": "https://api.github.com/users/Javtor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Javtor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Javtor/subscriptions",
            "organizations_url": "https://api.github.com/users/Javtor/orgs",
            "repos_url": "https://api.github.com/users/Javtor/repos",
            "events_url": "https://api.github.com/users/Javtor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Javtor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-27T02:55:34Z",
        "updated_at": "2023-09-28T01:28:25Z",
        "closed_at": "2023-09-27T16:10:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7845",
            "html_url": "https://github.com/run-llama/llama_index/pull/7845",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7845.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7845.patch",
            "merged_at": "2023-09-27T16:10:12Z"
        },
        "body": "# Description\r\n\r\nReplace print_text and get_color_mapping langchain dependency with internal implementation\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7845/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 3,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7845/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7844",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7844/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7844/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7844/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7844",
        "id": 1914456498,
        "node_id": "PR_kwDOIWuq585bSDO-",
        "number": 7844,
        "title": "share callback_manager between agent and its llm when callback_manager is None",
        "user": {
            "login": "RogerHYang",
            "id": 80478925,
            "node_id": "MDQ6VXNlcjgwNDc4OTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/80478925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RogerHYang",
            "html_url": "https://github.com/RogerHYang",
            "followers_url": "https://api.github.com/users/RogerHYang/followers",
            "following_url": "https://api.github.com/users/RogerHYang/following{/other_user}",
            "gists_url": "https://api.github.com/users/RogerHYang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RogerHYang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RogerHYang/subscriptions",
            "organizations_url": "https://api.github.com/users/RogerHYang/orgs",
            "repos_url": "https://api.github.com/users/RogerHYang/repos",
            "events_url": "https://api.github.com/users/RogerHYang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RogerHYang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-27T00:00:39Z",
        "updated_at": "2023-09-27T01:15:16Z",
        "closed_at": "2023-09-27T01:15:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7844",
            "html_url": "https://github.com/run-llama/llama_index/pull/7844",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7844.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7844.patch",
            "merged_at": "2023-09-27T01:15:15Z"
        },
        "body": "# Description\r\n\r\nAt agent initialization, if the `callback_manager` argument is None, initialize the agent's `callback_manager` to be the same as the one belonging to the agent's LLM, instead of constructing a brand new one.\r\n\r\nFixes #7843\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7844/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7844/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7843",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7843/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7843/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7843/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7843",
        "id": 1914446962,
        "node_id": "I_kwDOIWuq585yHCRy",
        "number": 7843,
        "title": "[Bug]: at initialization, `OpenAIAgent` should use the `callback_manager` from its `llm`",
        "user": {
            "login": "RogerHYang",
            "id": 80478925,
            "node_id": "MDQ6VXNlcjgwNDc4OTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/80478925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RogerHYang",
            "html_url": "https://github.com/RogerHYang",
            "followers_url": "https://api.github.com/users/RogerHYang/followers",
            "following_url": "https://api.github.com/users/RogerHYang/following{/other_user}",
            "gists_url": "https://api.github.com/users/RogerHYang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RogerHYang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RogerHYang/subscriptions",
            "organizations_url": "https://api.github.com/users/RogerHYang/orgs",
            "repos_url": "https://api.github.com/users/RogerHYang/repos",
            "events_url": "https://api.github.com/users/RogerHYang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RogerHYang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-26T23:46:28Z",
        "updated_at": "2023-09-27T01:15:17Z",
        "closed_at": "2023-09-27T01:15:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nThe [OpenAIAgent](https://github.com/jerryjliu/llama_index/blob/74c5534f3674283b262a7f8f9b3a5ccaa4e3697a/llama_index/agent/openai_agent.py#L125C17) should use the callback_manager from its LLM at initialization, i.e. \r\n```python\r\nself.callback_manager = callback_manager or self.llm.callback_manager\r\n```\r\nOtherwise the Agent's callback_manager can diverge from that of its LLM. \r\n\r\nThe following screenshot shows that LLM's `TreeMap` has no \"root\" key, i.e. the parent is not in the tree, because the LLM has a different tree, even though that the LLM is added to the tree under its parent's ID.\r\n\r\n<img width=\"546\" alt=\"Screenshot 2023-09-26 at 3 41 45 PM\" src=\"https://github.com/Arize-ai/phoenix/assets/80478925/0a83a35b-4c37-4b7b-a8b4-4007bbf70da0\">\n\n### Version\n\n0.8.34\n\n### Steps to Reproduce\n\nInitialize LLM and agent separately with no explicit callback_manager.\r\n\r\n```python\r\nllm = OpenAI()\r\nagent = OpenAIAgent.from_tools(\r\n    [multiply_tool, add_tool],\r\n    llm=llm,\r\n)\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7843/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7843/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7842",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7842/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7842/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7842/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7842",
        "id": 1914439785,
        "node_id": "PR_kwDOIWuq585bR_r4",
        "number": 7842,
        "title": "Update pull_request_template.md",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-26T23:35:19Z",
        "updated_at": "2023-09-26T23:36:07Z",
        "closed_at": "2023-09-26T23:36:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7842",
            "html_url": "https://github.com/run-llama/llama_index/pull/7842",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7842.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7842.patch",
            "merged_at": "2023-09-26T23:36:06Z"
        },
        "body": "To suggest running linter checks locally.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7842/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7842/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7841",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7841/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7841/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7841/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7841",
        "id": 1914436092,
        "node_id": "PR_kwDOIWuq585bR-5f",
        "number": 7841,
        "title": "[version] bump version to 0.8.34",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-26T23:29:16Z",
        "updated_at": "2023-09-26T23:40:41Z",
        "closed_at": "2023-09-26T23:40:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7841",
            "html_url": "https://github.com/run-llama/llama_index/pull/7841",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7841.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7841.patch",
            "merged_at": "2023-09-26T23:40:41Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7841/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7841/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7840",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7840/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7840/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7840/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7840",
        "id": 1914430957,
        "node_id": "PR_kwDOIWuq585bR9zH",
        "number": 7840,
        "title": "Fix dropping textnodes in recursive retriever",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-26T23:21:59Z",
        "updated_at": "2023-09-26T23:50:11Z",
        "closed_at": "2023-09-26T23:50:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7840",
            "html_url": "https://github.com/run-llama/llama_index/pull/7840",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7840.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7840.patch",
            "merged_at": "2023-09-26T23:50:04Z"
        },
        "body": "# Description\r\n\r\nThe RecursiveRetriever was dropping text nodes on the floor during a filter pass to avoid repeating index nodes.\r\n\r\nFixes #7749\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7840/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7840/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7839",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7839/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7839/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7839/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7839",
        "id": 1914386059,
        "node_id": "PR_kwDOIWuq585bR0DA",
        "number": 7839,
        "title": "Update ollama.py",
        "user": {
            "login": "gmgreg",
            "id": 853223,
            "node_id": "MDQ6VXNlcjg1MzIyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/853223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gmgreg",
            "html_url": "https://github.com/gmgreg",
            "followers_url": "https://api.github.com/users/gmgreg/followers",
            "following_url": "https://api.github.com/users/gmgreg/following{/other_user}",
            "gists_url": "https://api.github.com/users/gmgreg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gmgreg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gmgreg/subscriptions",
            "organizations_url": "https://api.github.com/users/gmgreg/orgs",
            "repos_url": "https://api.github.com/users/gmgreg/repos",
            "events_url": "https://api.github.com/users/gmgreg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gmgreg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-26T22:23:26Z",
        "updated_at": "2023-09-26T22:53:19Z",
        "closed_at": "2023-09-26T22:53:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7839",
            "html_url": "https://github.com/run-llama/llama_index/pull/7839",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7839.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7839.patch",
            "merged_at": "2023-09-26T22:53:19Z"
        },
        "body": "\r\n\r\n# Description\r\n\r\nEnable base_url default value to be overwritten\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7839/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7839/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7838",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7838/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7838/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7838/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7838",
        "id": 1914384328,
        "node_id": "PR_kwDOIWuq585bRzrZ",
        "number": 7838,
        "title": "Improved `NLSQLTableQueryEngine` docstring",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-26T22:21:47Z",
        "updated_at": "2023-09-27T16:11:50Z",
        "closed_at": "2023-09-27T16:10:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7838",
            "html_url": "https://github.com/run-llama/llama_index/pull/7838",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7838.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7838.patch",
            "merged_at": "2023-09-27T16:10:25Z"
        },
        "body": "# Description\r\n\r\n- Upstreams knowledge from https://github.com/jerryjliu/llama_index/issues/7837\r\n- Finishes deprecation comment\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7838/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7838/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7837",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7837/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7837/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7837/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7837",
        "id": 1914338332,
        "node_id": "I_kwDOIWuq585yGnwc",
        "number": 7837,
        "title": "[Question]: what is NL SQL?",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-26T21:35:18Z",
        "updated_at": "2023-09-26T22:24:05Z",
        "closed_at": "2023-09-26T22:12:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am looking at `NLSQLTableQueryEngine`, and its docstring talks about NL SQL. I am pretty sure NL = natural language.\r\n\r\nMy question is, what is NL SQL? Google searching \"natural language SQL\" doesn't come up with a match.  It matches NL to SQL, but not NL SQL directly.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7837/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7836",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7836/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7836/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7836/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7836",
        "id": 1914234427,
        "node_id": "I_kwDOIWuq585yGOY7",
        "number": 7836,
        "title": "Scaling Llamaindex for text summarization over 100k documents ",
        "user": {
            "login": "SkanderHellal",
            "id": 43438634,
            "node_id": "MDQ6VXNlcjQzNDM4NjM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/43438634?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SkanderHellal",
            "html_url": "https://github.com/SkanderHellal",
            "followers_url": "https://api.github.com/users/SkanderHellal/followers",
            "following_url": "https://api.github.com/users/SkanderHellal/following{/other_user}",
            "gists_url": "https://api.github.com/users/SkanderHellal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SkanderHellal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SkanderHellal/subscriptions",
            "organizations_url": "https://api.github.com/users/SkanderHellal/orgs",
            "repos_url": "https://api.github.com/users/SkanderHellal/repos",
            "events_url": "https://api.github.com/users/SkanderHellal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SkanderHellal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-26T20:16:17Z",
        "updated_at": "2023-09-27T15:33:43Z",
        "closed_at": "2023-09-27T15:33:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello,\r\n\r\nI am working on text summarization over 100k document. The idea is to create summaries of documents having the same topic. It is a summary of summaries. Therefore, I am using Treeindex for this task. However, it is computionnally expensive to go over the whole documents.\r\n\r\nI am asking if there are some tips and tricks to make the process running faster.\r\n\r\nAnother approach consists in using multiple GPU. I am asking if there is a framework for distributed calculation that can scale over the different GPUs? **Ray** is the best option for this case ?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7836/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7836/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7835",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7835/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7835/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7835/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7835",
        "id": 1914095533,
        "node_id": "PR_kwDOIWuq585bQ0M8",
        "number": 7835,
        "title": "add Arize Phoenix tracer to global handlers",
        "user": {
            "login": "RogerHYang",
            "id": 80478925,
            "node_id": "MDQ6VXNlcjgwNDc4OTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/80478925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RogerHYang",
            "html_url": "https://github.com/RogerHYang",
            "followers_url": "https://api.github.com/users/RogerHYang/followers",
            "following_url": "https://api.github.com/users/RogerHYang/following{/other_user}",
            "gists_url": "https://api.github.com/users/RogerHYang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RogerHYang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RogerHYang/subscriptions",
            "organizations_url": "https://api.github.com/users/RogerHYang/orgs",
            "repos_url": "https://api.github.com/users/RogerHYang/repos",
            "events_url": "https://api.github.com/users/RogerHYang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RogerHYang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-26T18:42:27Z",
        "updated_at": "2023-09-26T20:06:15Z",
        "closed_at": "2023-09-26T19:46:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7835",
            "html_url": "https://github.com/run-llama/llama_index/pull/7835",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7835.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7835.patch",
            "merged_at": "2023-09-26T19:46:52Z"
        },
        "body": "# Description\r\n\r\nAdd Arize Phoenix tracer to global handlers\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7835/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7835/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7834",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7834/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7834/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7834/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7834",
        "id": 1913938578,
        "node_id": "PR_kwDOIWuq585bQRj9",
        "number": 7834,
        "title": "fix bug for self._session_pool",
        "user": {
            "login": "RobbieL-nlp",
            "id": 123534815,
            "node_id": "U_kgDOB1z93w",
            "avatar_url": "https://avatars.githubusercontent.com/u/123534815?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RobbieL-nlp",
            "html_url": "https://github.com/RobbieL-nlp",
            "followers_url": "https://api.github.com/users/RobbieL-nlp/followers",
            "following_url": "https://api.github.com/users/RobbieL-nlp/following{/other_user}",
            "gists_url": "https://api.github.com/users/RobbieL-nlp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RobbieL-nlp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RobbieL-nlp/subscriptions",
            "organizations_url": "https://api.github.com/users/RobbieL-nlp/orgs",
            "repos_url": "https://api.github.com/users/RobbieL-nlp/repos",
            "events_url": "https://api.github.com/users/RobbieL-nlp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RobbieL-nlp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-26T17:01:52Z",
        "updated_at": "2023-09-27T00:25:56Z",
        "closed_at": "2023-09-26T19:47:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7834",
            "html_url": "https://github.com/run-llama/llama_index/pull/7834",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7834.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7834.patch",
            "merged_at": "2023-09-26T19:47:37Z"
        },
        "body": "fix bug that session_pool is not assigned to self._session_pool by default\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7834/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7834/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7833",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7833/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7833/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7833/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7833",
        "id": 1913901384,
        "node_id": "I_kwDOIWuq585yE9FI",
        "number": 7833,
        "title": "[Feature Request]: Support for OllamaEmbeddings",
        "user": {
            "login": "shauryr",
            "id": 12604876,
            "node_id": "MDQ6VXNlcjEyNjA0ODc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12604876?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shauryr",
            "html_url": "https://github.com/shauryr",
            "followers_url": "https://api.github.com/users/shauryr/followers",
            "following_url": "https://api.github.com/users/shauryr/following{/other_user}",
            "gists_url": "https://api.github.com/users/shauryr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shauryr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shauryr/subscriptions",
            "organizations_url": "https://api.github.com/users/shauryr/orgs",
            "repos_url": "https://api.github.com/users/shauryr/repos",
            "events_url": "https://api.github.com/users/shauryr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shauryr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-26T16:37:05Z",
        "updated_at": "2023-09-26T23:03:35Z",
        "closed_at": "2023-09-26T23:03:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nOllama LLM is supported by llama-index for generation but not for embedding. \r\n\r\nLangchain supports the embedding model - https://api.python.langchain.com/en/latest/embeddings/langchain.embeddings.ollama.OllamaEmbeddings.html\r\n\r\nIt would be great if we can get the ollama embeddings working for llama-index as well\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\nThis will allow the users to run everything locally!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7833/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7832",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7832/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7832/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7832/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7832",
        "id": 1913759339,
        "node_id": "PR_kwDOIWuq585bPqR1",
        "number": 7832,
        "title": "ElasticsearchStore: Update User-Agent + Add example docker compose",
        "user": {
            "login": "joemcelroy",
            "id": 49480,
            "node_id": "MDQ6VXNlcjQ5NDgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/49480?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joemcelroy",
            "html_url": "https://github.com/joemcelroy",
            "followers_url": "https://api.github.com/users/joemcelroy/followers",
            "following_url": "https://api.github.com/users/joemcelroy/following{/other_user}",
            "gists_url": "https://api.github.com/users/joemcelroy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joemcelroy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joemcelroy/subscriptions",
            "organizations_url": "https://api.github.com/users/joemcelroy/orgs",
            "repos_url": "https://api.github.com/users/joemcelroy/repos",
            "events_url": "https://api.github.com/users/joemcelroy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joemcelroy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-26T15:19:30Z",
        "updated_at": "2023-09-26T16:31:40Z",
        "closed_at": "2023-09-26T16:03:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7832",
            "html_url": "https://github.com/run-llama/llama_index/pull/7832",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7832.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7832.patch",
            "merged_at": "2023-09-26T16:03:30Z"
        },
        "body": "# Description\r\n\r\nThis updates the user agent for Elasticsearch client when used for llama-index.\r\n\r\nI've also added an example docker compose file so tests can be run against this local elasticsearch instance. \r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7832/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7832/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7831",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7831/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7831/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7831/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7831",
        "id": 1913637756,
        "node_id": "PR_kwDOIWuq585bPPf7",
        "number": 7831,
        "title": "Fix KeyError in delete method of `SimpleVectorStore` related to metadata filters",
        "user": {
            "login": "OliverFarren",
            "id": 5064282,
            "node_id": "MDQ6VXNlcjUwNjQyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5064282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OliverFarren",
            "html_url": "https://github.com/OliverFarren",
            "followers_url": "https://api.github.com/users/OliverFarren/followers",
            "following_url": "https://api.github.com/users/OliverFarren/following{/other_user}",
            "gists_url": "https://api.github.com/users/OliverFarren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OliverFarren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OliverFarren/subscriptions",
            "organizations_url": "https://api.github.com/users/OliverFarren/orgs",
            "repos_url": "https://api.github.com/users/OliverFarren/repos",
            "events_url": "https://api.github.com/users/OliverFarren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OliverFarren/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-26T14:24:25Z",
        "updated_at": "2023-09-26T14:54:24Z",
        "closed_at": "2023-09-26T14:54:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7831",
            "html_url": "https://github.com/run-llama/llama_index/pull/7831",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7831.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7831.patch",
            "merged_at": "2023-09-26T14:54:24Z"
        },
        "body": "# Description\r\n\r\nDetails in #7829, KeyError when trying to delete metadata that doesn't exist in indexes older than when metadata was introduced. This adds some safety. \r\n\r\nFixes #7829 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nTested locally on an index older than llama-index 0.8.29 that originally had the issue. Run unit tests on vector_store. \r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7831/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7831/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7830",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7830/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7830/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7830/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7830",
        "id": 1913517474,
        "node_id": "I_kwDOIWuq585yDfWi",
        "number": 7830,
        "title": "[Bug]: ElasticsearchStore: Exception when using Hybrid Search ",
        "user": {
            "login": "joemcelroy",
            "id": 49480,
            "node_id": "MDQ6VXNlcjQ5NDgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/49480?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joemcelroy",
            "html_url": "https://github.com/joemcelroy",
            "followers_url": "https://api.github.com/users/joemcelroy/followers",
            "following_url": "https://api.github.com/users/joemcelroy/following{/other_user}",
            "gists_url": "https://api.github.com/users/joemcelroy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joemcelroy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joemcelroy/subscriptions",
            "organizations_url": "https://api.github.com/users/joemcelroy/orgs",
            "repos_url": "https://api.github.com/users/joemcelroy/repos",
            "events_url": "https://api.github.com/users/joemcelroy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joemcelroy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-26T13:28:31Z",
        "updated_at": "2023-09-27T16:11:05Z",
        "closed_at": "2023-09-27T16:11:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nWhen Hybrid mode is on, we use RRF to normalise the scoring across both BM25 and vector search. When RRF is used, Elasticsearch does not return the score for each hit. \r\n\r\nIn the PR https://github.com/jerryjliu/llama_index/pull/7792 we normalise the similarities scores of the top_k scores. This causes an exception as scores aren't present in the response, only rank.\r\n\r\n### Version\r\n\r\nmain\r\n\r\n### Steps to Reproduce\r\n\r\nRun the elasticsearchstore integration tests with trial licence.  \r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nuse_async = False\r\n\r\n    @pytest.mark.skipif(\r\n        elasticsearch_not_available,\r\n        basic_license,\r\n        reason=\"elasticsearch is not available or license is basic\",\r\n    )\r\n    @pytest.mark.asyncio\r\n    @pytest.mark.parametrize(\"use_async\", [True, False])\r\n    async def test_add_to_es_and_hybrid_query(\r\n        es_store: ElasticsearchStore,\r\n        node_embeddings: List[TextNode],\r\n        use_async: bool,\r\n    ) -> None:\r\n        if use_async:\r\n            await es_store.async_add(node_embeddings)\r\n            res = await es_store.aquery(\r\n                VectorStoreQuery(\r\n                    query_str=\"lorem\",\r\n                    query_embedding=[1.0, 0.0, 0.0],\r\n                    mode=VectorStoreQueryMode.HYBRID,\r\n                    similarity_top_k=1,\r\n                )\r\n            )\r\n        else:\r\n            es_store.add(node_embeddings)\r\n>           res = es_store.query(\r\n                VectorStoreQuery(\r\n                    query_str=\"lorem\",\r\n                    query_embedding=[1.0, 0.0, 0.0],\r\n                    mode=VectorStoreQueryMode.HYBRID,\r\n                    similarity_top_k=1,\r\n                )\r\n            )\r\n\r\ntest_elasticsearch.py:254: \r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n../../llama_index/vector_stores/elasticsearch.py:449: in query\r\n    return asyncio.get_event_loop().run_until_complete(\r\n../../.venv/lib/python3.10/site-packages/nest_asyncio.py:99: in run_until_complete\r\n    return f.result()\r\n/Users/joe/.pyenv/versions/3.10.3/lib/python3.10/asyncio/futures.py:201: in result\r\n    raise self._exception\r\n/Users/joe/.pyenv/versions/3.10.3/lib/python3.10/asyncio/tasks.py:232: in __step\r\n    result = coro.send(None)\r\n../../llama_index/vector_stores/elasticsearch.py:567: in aquery\r\n    similarities=_to_llama_similarities(top_k_scores),\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nscores = [None]\r\n\r\n    def _to_llama_similarities(scores: List[float]) -> List[float]:\r\n        scores_to_norm: np.ndarray = np.array(scores)\r\n>       return np.exp(scores_to_norm - np.max(scores_to_norm)).tolist()\r\nE       TypeError: unsupported operand type(s) for -: 'NoneType' and 'NoneType'\r\n\r\n../../llama_index/vector_stores/elasticsearch.py:133: TypeError\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7830/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7829",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7829/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7829/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7829/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7829",
        "id": 1913500393,
        "node_id": "I_kwDOIWuq585yDbLp",
        "number": 7829,
        "title": "[Bug]: New metadata filtering feature in 0.8.29 for simple vector store now prevents deleting documents",
        "user": {
            "login": "OliverFarren",
            "id": 5064282,
            "node_id": "MDQ6VXNlcjUwNjQyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5064282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OliverFarren",
            "html_url": "https://github.com/OliverFarren",
            "followers_url": "https://api.github.com/users/OliverFarren/followers",
            "following_url": "https://api.github.com/users/OliverFarren/following{/other_user}",
            "gists_url": "https://api.github.com/users/OliverFarren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OliverFarren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OliverFarren/subscriptions",
            "organizations_url": "https://api.github.com/users/OliverFarren/orgs",
            "repos_url": "https://api.github.com/users/OliverFarren/repos",
            "events_url": "https://api.github.com/users/OliverFarren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OliverFarren/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-26T13:20:07Z",
        "updated_at": "2023-09-26T14:54:25Z",
        "closed_at": "2023-09-26T14:54:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nIt looks like a bug has been introduced in #7564, as part of the 0.8.29 release.\r\n\r\nWhen calling `index.delete_ref_doc(doc_id, delete_from_docstore=True)`, \r\n\r\nFrom inspecting my code it looks like my `SimpleVectorStore._data` has a new attribute `metadata_dict` which is empty. So when running  through this loop:\r\n```\r\n        for text_id in text_ids_to_delete:\r\n            del self._data.embedding_dict[text_id]\r\n            del self._data.metadata_dict[text_id]\r\n            del self._data.text_id_to_ref_doc_id[text_id]\r\n```\r\n\r\nI get a KeyError. \r\n\r\nI notice in the `query` method there is some safety built in around the new metadata filters: \r\n\r\n```\r\n    def query(\r\n        self,\r\n        query: VectorStoreQuery,\r\n        **kwargs: Any,\r\n    ) -> VectorStoreQueryResult:\r\n        \"\"\"Get nodes for response.\"\"\"\r\n        # Prevent metadata filtering on stores that were persisted without metadata.\r\n        if (\r\n            query.filters is not None\r\n            and self._data.embedding_dict\r\n            and not self._data.metadata_dict\r\n        ):\r\n            raise ValueError(\r\n                \"Cannot filter stores that were persisted without metadata. \"\r\n                \"Please rebuild the store with metadata to enable filtering.\"\r\n            )\r\n```\r\n\r\nCan I propose a similar safety is added to the deletion of source nodes for indexes that were persisted without metadata. I shouldn't have to rebuild my index in order to delete documents. \n\n### Version\n\n0.8.29\n\n### Steps to Reproduce\n\n- Load a Simple Vector Store index from llama-index version < 0.8.29 which contains documents.\r\n- Call `index.delete_ref_doc(doc_id, delete_from_docstore=True)`\n\n### Relevant Logs/Tracbacks\n\n```shell\ndelete_ref_doc\r\n    self._vector_store.delete(ref_doc_id)\r\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \r\n\r\nself = <llama_index.vector_stores.simple.SimpleVectorStore object at 0x122296610>\r\nref_doc_id = 'bcbec082-a406-4de1-beca-58c06ad22106', delete_kwargs = {}\r\ntext_ids_to_delete = {'9d75f807-2345-4ecd-9f01-1fdf2419e490'}\r\ntext_id = '9d75f807-2345-4ecd-9f01-1fdf2419e490'\r\nref_doc_id_ = 'cbc4b033-e78d-42bd-a331-8e55cf082fc1'\r\n\r\n    def delete(self, ref_doc_id: str, **delete_kwargs: Any) -> None:\r\n        \"\"\"\r\n        Delete nodes using with ref_doc_id.\r\n    \r\n        Args:\r\n            ref_doc_id (str): The doc_id of the document to delete.\r\n    \r\n        \"\"\"\r\n        text_ids_to_delete = set()\r\n        for text_id, ref_doc_id_ in self._data.text_id_to_ref_doc_id.items():\r\n            if ref_doc_id == ref_doc_id_:\r\n                text_ids_to_delete.add(text_id)\r\n    \r\n        for text_id in text_ids_to_delete:\r\n            del self._data.embedding_dict[text_id]\r\n>           del self._data.metadata_dict[text_id]\r\nE           KeyError: '9d75f807-2345-4ecd-9f01-1fdf2419e490'\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7829/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7829/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7828",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7828/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7828/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7828/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7828",
        "id": 1913336570,
        "node_id": "I_kwDOIWuq585yCzL6",
        "number": 7828,
        "title": "[Bug]:  responsequeries code is processing even after generate_response is false which gives an error for generate_questions_from_nodes with num",
        "user": {
            "login": "tejas1j",
            "id": 43401993,
            "node_id": "MDQ6VXNlcjQzNDAxOTkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/43401993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tejas1j",
            "html_url": "https://github.com/tejas1j",
            "followers_url": "https://api.github.com/users/tejas1j/followers",
            "following_url": "https://api.github.com/users/tejas1j/following{/other_user}",
            "gists_url": "https://api.github.com/users/tejas1j/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tejas1j/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tejas1j/subscriptions",
            "organizations_url": "https://api.github.com/users/tejas1j/orgs",
            "repos_url": "https://api.github.com/users/tejas1j/repos",
            "events_url": "https://api.github.com/users/tejas1j/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tejas1j/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-26T11:49:47Z",
        "updated_at": "2023-09-26T14:34:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nresponsequeries code is processing even after generate_response is false which gives an error for generate_questions_from_nodes with num\n\n### Version\n\n0.8.33\n\n### Steps to Reproduce\n\n data_generator = DatasetGenerator.from_documents(documents,service_context=service_context_gpt4)\r\n questions = data_generator.generate_questions_from_nodes(num=no_qa)\r\n\r\n\r\n![image](https://github.com/jerryjliu/llama_index/assets/43401993/62797a1f-50bd-45c4-aff6-f189ef2b9241)\r\n\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7828/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7828/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7827",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7827/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7827/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7827/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7827",
        "id": 1913095747,
        "node_id": "I_kwDOIWuq585yB4ZD",
        "number": 7827,
        "title": "[Documentation]: Broken Guide: Finetune Embeddings ",
        "user": {
            "login": "zynos",
            "id": 8973150,
            "node_id": "MDQ6VXNlcjg5NzMxNTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8973150?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zynos",
            "html_url": "https://github.com/zynos",
            "followers_url": "https://api.github.com/users/zynos/followers",
            "following_url": "https://api.github.com/users/zynos/following{/other_user}",
            "gists_url": "https://api.github.com/users/zynos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zynos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zynos/subscriptions",
            "organizations_url": "https://api.github.com/users/zynos/orgs",
            "repos_url": "https://api.github.com/users/zynos/repos",
            "events_url": "https://api.github.com/users/zynos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zynos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-26T09:31:10Z",
        "updated_at": "2023-09-26T09:48:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nIn\r\nhttps://gpt-index.readthedocs.io/en/latest/examples/finetuning/embeddings/finetune_embedding.html#baai-bge-small-en\r\n\r\nthere is an error output\r\n\r\nFileNotFoundError: [Errno 2] No such file or directory: 'results/Information-Retrieval_evaluation_bge_results.csv'\r\n\n\n### Documenation Link\n\nhttps://gpt-index.readthedocs.io/en/latest/examples/finetuning/embeddings/finetune_embedding.html#baai-bge-small-en",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7827/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7827/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7826",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7826/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7826/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7826/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7826",
        "id": 1912925124,
        "node_id": "PR_kwDOIWuq585bMzI5",
        "number": 7826,
        "title": "upgrade our evaluation batch runner",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-26T07:56:56Z",
        "updated_at": "2023-09-27T22:00:23Z",
        "closed_at": "2023-09-27T22:00:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7826",
            "html_url": "https://github.com/run-llama/llama_index/pull/7826",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7826.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7826.patch",
            "merged_at": "2023-09-27T22:00:22Z"
        },
        "body": "# Description\r\n\r\nThis upgrades our eval batch runner to allow it to evaluate over queries, responses, rather than having to run through the full query engine (which loses the ability to cache things). \r\n\r\nAlso made a mildly breaking change:\r\n- i found query_kwargs confusing to use, so instead replaced it with an eval_kwargs_list. you basically specify an argument name in the batch eval similar to how you would specify the argument name for a single evaluator, but the values are a list instead of a single value. \r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7826/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7826/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7825",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7825/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7825/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7825/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7825",
        "id": 1912914119,
        "node_id": "I_kwDOIWuq585yBMDH",
        "number": 7825,
        "title": "[Bug]: Cannot find metadata from RetrieverQueryEngine",
        "user": {
            "login": "playerjamesbattleground",
            "id": 447874,
            "node_id": "MDQ6VXNlcjQ0Nzg3NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/447874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/playerjamesbattleground",
            "html_url": "https://github.com/playerjamesbattleground",
            "followers_url": "https://api.github.com/users/playerjamesbattleground/followers",
            "following_url": "https://api.github.com/users/playerjamesbattleground/following{/other_user}",
            "gists_url": "https://api.github.com/users/playerjamesbattleground/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/playerjamesbattleground/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/playerjamesbattleground/subscriptions",
            "organizations_url": "https://api.github.com/users/playerjamesbattleground/orgs",
            "repos_url": "https://api.github.com/users/playerjamesbattleground/repos",
            "events_url": "https://api.github.com/users/playerjamesbattleground/events{/privacy}",
            "received_events_url": "https://api.github.com/users/playerjamesbattleground/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-26T07:50:40Z",
        "updated_at": "2023-09-26T22:48:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nI'm trying to use the sql join query engine, by using a sql query engine and a vector store engine together. The example I'm following is this link\r\n\r\nhttps://gpt-index.readthedocs.io/en/stable/examples/query_engine/SQLJoinQueryEngine.html#define-query-engines-set-as-tools\r\n\r\n\r\nWhen configuring the RetrieverQueryEngine for the vector store with below snippet\r\n\r\n```\r\nquery_engine = SQLJoinQueryEngine(\r\n    s_engine_tool, retriever_query_engine, service_context=service_context\r\n)\r\ns_engine_tool.metadata\r\nretriever_query_engine.metadata\r\n```\r\n\r\nthe retriever_query_engine in type of RetrieverQueryEngine doesn't have a `metadata` attribute, hence the code errors out \r\n\r\nThis is referring to the code from repo, as shown, it looks like always assuming other query tool would have metadata set, however in this case, there is none\r\n\r\nhttps://github.com/jerryjliu/llama_index/blob/b8699461cc922a9302df9cc3690131e596fa2470/llama_index/query_engine/sql_join_query_engine.py#L284\r\n\r\n### Version\r\n\r\n0.8.30\r\n\r\n### Steps to Reproduce\r\n\r\nconfigure the vector store retriever as\r\n\r\n```\r\nstorage_context = StorageContext.from_defaults(vector_store=vector_store)\r\nvector_index = VectorStoreIndex([], storage_context=storage_context)\r\nvector_retriever = VectorIndexAutoRetriever(index=vector_index, vector_store_info=vector_store_info)\r\nretriever_query_engine = RetrieverQueryEngine.from_args(\r\n  retriever=vector_retriever,\r\n  service_context=service_context,\r\n)\r\n```\r\n\r\nUp to the step from the document about configuring \r\n\r\n```\r\nquery_engine = SQLJoinQueryEngine(\r\n    s_engine_tool, retriever_query_engine, service_context=service_context\r\n)\r\n```\r\n\r\nthen it would error out saying `'RetrieverQueryEngine' object has no attribute 'metadata'`\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7825/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7825/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7824",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7824/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7824/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7824/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7824",
        "id": 1912605785,
        "node_id": "I_kwDOIWuq585yAAxZ",
        "number": 7824,
        "title": "[Feature Request]: Support for DeepInfra",
        "user": {
            "login": "shauryr",
            "id": 12604876,
            "node_id": "MDQ6VXNlcjEyNjA0ODc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/12604876?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shauryr",
            "html_url": "https://github.com/shauryr",
            "followers_url": "https://api.github.com/users/shauryr/followers",
            "following_url": "https://api.github.com/users/shauryr/following{/other_user}",
            "gists_url": "https://api.github.com/users/shauryr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shauryr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shauryr/subscriptions",
            "organizations_url": "https://api.github.com/users/shauryr/orgs",
            "repos_url": "https://api.github.com/users/shauryr/repos",
            "events_url": "https://api.github.com/users/shauryr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shauryr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-26T03:19:33Z",
        "updated_at": "2023-10-30T20:23:08Z",
        "closed_at": "2023-10-30T20:23:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\n[DeepInfra](https://deepinfra.com/) is pay per use service like OpenAI but way cheaper - 50% cheaper than gpt3.5-turbo for llama 2\r\n\r\nRight now they support [openai python api.](https://deepinfra.com/meta-llama/Llama-2-70b-chat-hf/api?example=openai-python)\r\n\r\nSo I tried to test my luck, what happens if you use it with llama-index.\r\n\r\n```python\r\nllm = OpenAI(model=\"meta-llama/Llama-2-70b-chat-hf\")\r\nservice_context = ServiceContext.from_defaults(llm=llm)\r\n```\r\n\r\nYou get this trace of error -\r\n\r\n```\r\n-> service_context = ServiceContext.from_defaults(llm=llm)\r\n\r\n[llama_index/indices/service_context.py:168]\r\nprompt_helper = prompt_helper or _get_default_prompt_helper(\r\n--> 168     llm_metadata=llm_predictor.metadata,\r\n    169     context_window=context_window,\r\n    170     num_output=num_output,\r\n    171 )\r\n\r\n[llama_index/llm_predictor/base.py:119]\r\n--> 119     return self._llm.metadata\r\n\r\n[llama_index/llms/openai.py:113]\r\n--> 113         context_window=openai_modelname_to_contextsize(self._get_model_name()),\r\n\r\n[llama_index/llms/openai_utils.py:192]\r\n--> 192     raise ValueError(\r\nValueError: Unknown model: meta-llama/Llama-2-70b-chat-hf. Please provide a valid OpenAI model name.Known models are: gpt-4, gpt-4-32k, gpt-4-0613, gpt-4-32k-0613, gpt-4-0314, gpt-4-32k-0314, gpt-3.5-turbo, gpt-3.5-turbo-16k, gpt-3.5-turbo-0613, gpt-3.5-turbo-16k-0613, gpt-3.5-turbo-0301, text-davinci-003, text-davinci-002, gpt-3.5-turbo-instruct, text-ada-001, text-babbage-001, text-curie-001, ada, babbage, curie, davinci, gpt-35-turbo-16k, gpt-35-turbo\r\n```\r\n\r\n\n\n### Reason\n\nDeepInfra seems like it is fairly new to the game. \n\n### Value of Feature\n\nTheir product is great! and it is much cheaper than gpt-4 with similar performance. As they add more models to their endpoints I imagine more and more people start using them as a better and cheaper alternative to OAI's GPT.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7824/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7824/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7823",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7823/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7823/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7823/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7823",
        "id": 1912386339,
        "node_id": "PR_kwDOIWuq585bK_1F",
        "number": 7823,
        "title": "Documenting chunk units",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-25T22:44:44Z",
        "updated_at": "2023-09-26T16:10:53Z",
        "closed_at": "2023-09-26T16:10:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7823",
            "html_url": "https://github.com/run-llama/llama_index/pull/7823",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7823.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7823.patch",
            "merged_at": "2023-09-26T16:10:53Z"
        },
        "body": "# Description\r\n\r\nUpstreams knowledge from https://github.com/jerryjliu/llama_index/issues/7822.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7823/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7823/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7822",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7822/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7822/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7822/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7822",
        "id": 1912355862,
        "node_id": "I_kwDOIWuq585x_DwW",
        "number": 7822,
        "title": "[Question]: chunk size units",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-25T22:11:15Z",
        "updated_at": "2023-09-25T22:44:50Z",
        "closed_at": "2023-09-25T22:44:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI legitimately searched around for a while.\r\n\r\nThe [`DEFAULT_CHUNK_SIZE`](https://github.com/jerryjliu/llama_index/blob/v0.8.33/llama_index/constants.py#L6) and `DEFAULT_CHUNK_OVERLAP`, what are the units for a chunk?\r\n\r\nI will open a PR to upstream this answer into the code as a code comment",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7822/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7822/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7821",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7821/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7821/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7821/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7821",
        "id": 1912152073,
        "node_id": "PR_kwDOIWuq585bKMbd",
        "number": 7821,
        "title": "Add before/after context sentence",
        "user": {
            "login": "JainVidit12",
            "id": 123282527,
            "node_id": "U_kgDOB1kkXw",
            "avatar_url": "https://avatars.githubusercontent.com/u/123282527?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JainVidit12",
            "html_url": "https://github.com/JainVidit12",
            "followers_url": "https://api.github.com/users/JainVidit12/followers",
            "following_url": "https://api.github.com/users/JainVidit12/following{/other_user}",
            "gists_url": "https://api.github.com/users/JainVidit12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JainVidit12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JainVidit12/subscriptions",
            "organizations_url": "https://api.github.com/users/JainVidit12/orgs",
            "repos_url": "https://api.github.com/users/JainVidit12/repos",
            "events_url": "https://api.github.com/users/JainVidit12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JainVidit12/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-25T19:29:30Z",
        "updated_at": "2023-09-26T17:17:34Z",
        "closed_at": "2023-09-26T17:17:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7821",
            "html_url": "https://github.com/run-llama/llama_index/pull/7821",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7821.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7821.patch",
            "merged_at": "2023-09-26T17:17:34Z"
        },
        "body": "# Description\r\n\r\nAdd before/after sentence context\r\n\r\nFixes #6842 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7821/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7821/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7820",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7820/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7820/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7820/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7820",
        "id": 1912126661,
        "node_id": "PR_kwDOIWuq585bKG0N",
        "number": 7820,
        "title": "EverlyAI integration with LlamaIndex through OpenAI library",
        "user": {
            "login": "david-huge",
            "id": 127131037,
            "node_id": "U_kgDOB5PdnQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/127131037?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david-huge",
            "html_url": "https://github.com/david-huge",
            "followers_url": "https://api.github.com/users/david-huge/followers",
            "following_url": "https://api.github.com/users/david-huge/following{/other_user}",
            "gists_url": "https://api.github.com/users/david-huge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david-huge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david-huge/subscriptions",
            "organizations_url": "https://api.github.com/users/david-huge/orgs",
            "repos_url": "https://api.github.com/users/david-huge/repos",
            "events_url": "https://api.github.com/users/david-huge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david-huge/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-25T19:12:23Z",
        "updated_at": "2023-09-26T17:41:51Z",
        "closed_at": "2023-09-26T17:41:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7820",
            "html_url": "https://github.com/run-llama/llama_index/pull/7820",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7820.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7820.patch",
            "merged_at": "2023-09-26T17:41:51Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7820/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7820/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7819",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7819/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7819/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7819/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7819",
        "id": 1911790941,
        "node_id": "PR_kwDOIWuq585bI87r",
        "number": 7819,
        "title": "[version] bump version to 0.8.33",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-25T15:40:46Z",
        "updated_at": "2023-09-25T16:35:04Z",
        "closed_at": "2023-09-25T16:35:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7819",
            "html_url": "https://github.com/run-llama/llama_index/pull/7819",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7819.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7819.patch",
            "merged_at": "2023-09-25T16:35:03Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7819/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7819/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7818",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7818/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7818/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7818/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7818",
        "id": 1911296181,
        "node_id": "I_kwDOIWuq585x7BC1",
        "number": 7818,
        "title": "[Feature Request]: vLLM support for faster inference using llama-index",
        "user": {
            "login": "DivyanshuMishra123",
            "id": 145986844,
            "node_id": "U_kgDOCLOVHA",
            "avatar_url": "https://avatars.githubusercontent.com/u/145986844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DivyanshuMishra123",
            "html_url": "https://github.com/DivyanshuMishra123",
            "followers_url": "https://api.github.com/users/DivyanshuMishra123/followers",
            "following_url": "https://api.github.com/users/DivyanshuMishra123/following{/other_user}",
            "gists_url": "https://api.github.com/users/DivyanshuMishra123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DivyanshuMishra123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DivyanshuMishra123/subscriptions",
            "organizations_url": "https://api.github.com/users/DivyanshuMishra123/orgs",
            "repos_url": "https://api.github.com/users/DivyanshuMishra123/repos",
            "events_url": "https://api.github.com/users/DivyanshuMishra123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DivyanshuMishra123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5870194649,
                "node_id": "LA_kwDOIWuq588AAAABXeQP2Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/llm",
                "name": "llm",
                "color": "799557",
                "default": false,
                "description": ""
            },
            {
                "id": 6129428377,
                "node_id": "LA_kwDOIWuq588AAAABbVenmQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/request%20contribution%20board",
                "name": "request contribution board",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "ravi03071991",
                "id": 12198101,
                "node_id": "MDQ6VXNlcjEyMTk4MTAx",
                "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/ravi03071991",
                "html_url": "https://github.com/ravi03071991",
                "followers_url": "https://api.github.com/users/ravi03071991/followers",
                "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
                "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
                "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
                "repos_url": "https://api.github.com/users/ravi03071991/repos",
                "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
                "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-25T11:40:54Z",
        "updated_at": "2023-11-25T19:04:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nI was finding a workaround to load LLM through the vLLM Library for faster inference. But when i was trying to initialize the HuggingFaceLLM from llama-index i was not able to give this pretrained model.Below is the code to load the model through vLLM and initialize it through HuggingFaceLLM from llama-index .\r\n\r\nfrom vllm import LLM, SamplingParams\r\nllm = LLM(model='meta-llama/Llama-2-7b-hf')\r\n\r\nname = \"meta-llama/Llama-2-7b-hf\"\r\ntokenizer = AutoTokenizer.from_pretrained(name, use_auth_token=auth_token)\r\n\r\nfrom llama_index.llms import HuggingFaceLLM \r\nllm = HuggingFaceLLM(context_window=4096,\r\n                    max_new_tokens=1024,\r\n                    system_prompt=system_prompt,\r\n                    query_wrapper_prompt=query_wrapper_prompt,\r\n                    model=llm,\r\n                    tokenizer=tokenizer)\r\n\r\nThe error logs for the same  ::\r\n\r\nAttributeError                            Traceback (most recent call last)\r\nCell In[13], line 5\r\n      2 from llama_index.llms import HuggingFaceLLM\r\n      3 # Create a HF LLM using the llama index wrapper \r\n      4 #from langchain.llms import SelfHostedHuggingFaceLLM\r\n----> 5 llm = HuggingFaceLLM(context_window=4096,\r\n      6                     max_new_tokens=1024,\r\n      7                     system_prompt=system_prompt,\r\n      8                     query_wrapper_prompt=query_wrapper_prompt,\r\n      9                     model=llm,\r\n     10                     tokenizer=tokenizer\r\n     11                  #   generate_kwargs={\"temperature\": 0.7, \"do_sample\": False},\r\n     12                 #    tokenizer_kwargs={\"max_length\": 4096},\r\n     13                     )\r\n     14                    # generate_kwargs={\"return_dict_in_generate\":True})\r\n\r\nFile ~/anaconda3/envs/pytorch_p310/lib/python3.10/site-packages/llama_index/llms/huggingface.py:56, in HuggingFaceLLM.__init__(self, context_window, max_new_tokens, system_prompt, query_wrapper_prompt, tokenizer_name, model_name, model, tokenizer, device_map, stopping_ids, tokenizer_kwargs, tokenizer_outputs_to_remove, model_kwargs, generate_kwargs, callback_manager)\r\n     51 self.model = model or AutoModelForCausalLM.from_pretrained(\r\n     52     model_name, device_map=device_map, **model_kwargs\r\n     53 )\r\n     55 # check context_window\r\n---> 56 config_dict = self.model.config.to_dict()\r\n     57 model_context_window = int(\r\n     58     config_dict.get(\"max_position_embeddings\", context_window)\r\n     59 )\r\n     60 if model_context_window and model_context_window < context_window:\r\nAttributeError: 'LLM' object has no attribute 'config'\r\n\r\n\r\nIs there any workaround for this??\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7818/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7818/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7817",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7817/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7817/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7817/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7817",
        "id": 1911046403,
        "node_id": "I_kwDOIWuq585x6EED",
        "number": 7817,
        "title": "[Bug]: In a Windows Machine Trying to import - import SemanticSimilarityEvaluator gives TypeError: Argument 'description' has incorrect type (expected str, got tuple)",
        "user": {
            "login": "rohan-paul",
            "id": 12703975,
            "node_id": "MDQ6VXNlcjEyNzAzOTc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12703975?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rohan-paul",
            "html_url": "https://github.com/rohan-paul",
            "followers_url": "https://api.github.com/users/rohan-paul/followers",
            "following_url": "https://api.github.com/users/rohan-paul/following{/other_user}",
            "gists_url": "https://api.github.com/users/rohan-paul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rohan-paul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rohan-paul/subscriptions",
            "organizations_url": "https://api.github.com/users/rohan-paul/orgs",
            "repos_url": "https://api.github.com/users/rohan-paul/repos",
            "events_url": "https://api.github.com/users/rohan-paul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rohan-paul/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-25T09:18:13Z",
        "updated_at": "2023-09-26T16:00:44Z",
        "closed_at": "2023-09-26T16:00:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nUntitled-1.ipynb Cell 1 line 1\r\n----> [1](vscode-notebook-cell:Untitled-1.ipynb?jupyter-notebook#W0sdW50aXRsZWQ%3D?line=0) from llama_index.evaluation import SemanticSimilarityEvaluator\r\n      [3](vscode-notebook-cell:Untitled-1.ipynb?jupyter-notebook#W0sdW50aXRsZWQ%3D?line=2) # evaluator = SemanticSimilarityEvaluator()\r\n\r\nFile [c:\\Users\\PC60\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\llama_index\\__init__.py:20](file:///C:/Users/PC60/AppData/Local/Programs/Python/Python310/lib/site-packages/llama_index/__init__.py:20)\r\n     16 from llama_index.embeddings.openai import OpenAIEmbedding\r\n     19 # indices\r\n---> 20 from llama_index.indices.keyword_table import (\r\n     21     KeywordTableIndex,\r\n     22     RAKEKeywordTableIndex,\r\n     23     SimpleKeywordTableIndex,\r\n     24     GPTKeywordTableIndex,\r\n     25     GPTRAKEKeywordTableIndex,\r\n     26     GPTSimpleKeywordTableIndex,\r\n     27 )\r\n     28 from llama_index.indices.knowledge_graph import (\r\n     29     KnowledgeGraphIndex,\r\n     30     GPTKnowledgeGraphIndex,\r\n     31 )\r\n     32 from llama_index.indices.list import ListIndex, GPTListIndex, SummaryIndex\r\n\r\nFile [c:\\Users\\PC60\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\llama_index\\indices\\__init__.py:4](file:///C:/Users/PC60/AppData/Local/Programs/Python/Python310/lib/site-packages/llama_index/indices/__init__.py:4)\r\n      1 \"\"\"LlamaIndex data structures.\"\"\"\r\n...\r\n    671 )\r\n    673 @classmethod\r\n    674 def class_name(cls) -> str:\r\n\r\nTypeError: Argument 'description' has incorrect type (expected str, got tuple)\r\n```\n\n### Version\n\nVersion: 0.8.32\n\n### Steps to Reproduce\n\nJust running the line \r\n\r\n```py\r\nfrom llama_index.evaluation import SemanticSimilarityEvaluator\r\n```\r\n\r\nGives the error\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7817/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7817/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7816",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7816/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7816/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7816/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7816",
        "id": 1910881354,
        "node_id": "I_kwDOIWuq585x5bxK",
        "number": 7816,
        "title": "[Question]: What's the recommendation in general for SQL data, should sql data be embedded or relying on SQL Query Engine",
        "user": {
            "login": "playerjamesbattleground",
            "id": 447874,
            "node_id": "MDQ6VXNlcjQ0Nzg3NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/447874?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/playerjamesbattleground",
            "html_url": "https://github.com/playerjamesbattleground",
            "followers_url": "https://api.github.com/users/playerjamesbattleground/followers",
            "following_url": "https://api.github.com/users/playerjamesbattleground/following{/other_user}",
            "gists_url": "https://api.github.com/users/playerjamesbattleground/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/playerjamesbattleground/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/playerjamesbattleground/subscriptions",
            "organizations_url": "https://api.github.com/users/playerjamesbattleground/orgs",
            "repos_url": "https://api.github.com/users/playerjamesbattleground/repos",
            "events_url": "https://api.github.com/users/playerjamesbattleground/events{/privacy}",
            "received_events_url": "https://api.github.com/users/playerjamesbattleground/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-09-25T07:44:10Z",
        "updated_at": "2023-10-24T06:31:38Z",
        "closed_at": "2023-10-24T06:31:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nIn our use case, we have our data stored in PostgreSQL as the foundation of our private knowledge base. We want to implement the RAG concept with llama_index, and achieve a chat for knowledge experience for our users. \r\n\r\nHad been going through the documentations, I found the examples such as https://github.com/jerryjliu/llama_index/blob/main/docs/examples/index_structs/struct_indices/SQLIndexDemo.ipynb\r\nare more assuming data stays at the SQL database side, and change the query approach from native sql query into the Gen AI enabled generative experience, via for example, NLSQLTableQueryEngine. I understand the solution, however, I would like more instruction on how to \r\n- Pragmatically test and demonstrate the query accuracy\r\n- improve the precision of sql query generated, especially when the actual queries getting complicated and have multiple tables involved.\r\n\r\nOn the other side, I also wonder, and this might be the core of this question, is whether it's also a recommended approach to load and embed the sql data into a vector database, and query with similarity search instead. Because the data are all in good tabular format already, with well templated prompts and vector schema configuration, I would see it could provide answers with good accuracy too. However I haven't seen much examples or instructions on this approach from documentation. So I would like to hear from the community here about this approach.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7816/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7816/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7815",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7815/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7815/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7815/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7815",
        "id": 1910795449,
        "node_id": "PR_kwDOIWuq585bFjOD",
        "number": 7815,
        "title": "Update document summary index",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6006591509,
                "node_id": "LA_kwDOIWuq588AAAABZgVQFQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/index",
                "name": "index",
                "color": "736D24",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-25T06:48:57Z",
        "updated_at": "2023-10-04T07:58:32Z",
        "closed_at": "2023-10-04T07:58:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7815",
            "html_url": "https://github.com/run-llama/llama_index/pull/7815",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7815.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7815.patch",
            "merged_at": "2023-10-04T07:58:31Z"
        },
        "body": "# Description\r\n* change default retrieval mode to embedding\r\n* embed summaries into vector store by default at indexing time (instead of calculating embedding on the fly)\r\n* support configuring top k in llm retriever\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7815/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7814",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7814/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7814/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7814/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7814",
        "id": 1910753375,
        "node_id": "I_kwDOIWuq585x48hf",
        "number": 7814,
        "title": "[Question]: For NLSQLTableQueryEngine, how to use a GGUF LLM model other than the default Llama 2 Q4_0?",
        "user": {
            "login": "ridho-0",
            "id": 61729558,
            "node_id": "MDQ6VXNlcjYxNzI5NTU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/61729558?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ridho-0",
            "html_url": "https://github.com/ridho-0",
            "followers_url": "https://api.github.com/users/ridho-0/followers",
            "following_url": "https://api.github.com/users/ridho-0/following{/other_user}",
            "gists_url": "https://api.github.com/users/ridho-0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ridho-0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ridho-0/subscriptions",
            "organizations_url": "https://api.github.com/users/ridho-0/orgs",
            "repos_url": "https://api.github.com/users/ridho-0/repos",
            "events_url": "https://api.github.com/users/ridho-0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ridho-0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-09-25T06:21:50Z",
        "updated_at": "2023-09-26T03:31:19Z",
        "closed_at": "2023-09-26T03:31:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI have successfully followed [this tutorial](https://gpt-index.readthedocs.io/en/stable/end_to_end_tutorials/structured_data/sql_guide.html). However, I encountered some problems while trying to test other GGUF models. None of them return any `sql_query`. That is, within the `Response`, I always get `metadata={'sql_query': ''}`.\r\n\r\nThen I tried to explicitly pass the default model (via `ServiceContext`) into `NLSQLTableQueryEngine`, but I'm still having the same problem as above. \r\n\r\nSpecifically, this works:\r\n```\r\nquery_engine = NLSQLTableQueryEngine(\r\n    sql_database=sql_database,\r\n    tables=[\"city_stats\"],\r\n)\r\n```\r\nand when calling `query_engine.query(query_str)` I would get responses like:\r\n`Response(response='  Based on the query results, the city with the highest population is Tokyo, with a population of 13960000.', source_nodes=[], metadata={'result': [('Tokyo', 13960000)], 'sql_query': 'SELECT city_name, population FROM city_stats WHERE population = (SELECT MAX(population) FROM city_stats);'})`\r\n\r\nBut this doesn't work:\r\n```\r\nllm_url = \"https://huggingface.co/TheBloke/Llama-2-13B-chat-GGUF/resolve/main/llama-2-13b-chat.Q4_0.gguf\"\r\nllm = LlamaCPP(model_url=llm_url, \r\n               model_kwargs={\"n_gpu_layers\": 1},\r\n              )\r\nservice_context = ServiceContext.from_defaults(llm=llm)\r\nquery_engine = NLSQLTableQueryEngine(\r\n    sql_database=sql_database,\r\n    tables=[\"city_stats\"],\r\n    service_context=service_context\r\n)\r\n```\r\ndespite the fact that it uses the exact same model. \r\nI get responses like:\r\n`Response(response='\\n\\nPlease provide the SQL query and the response you would like to generate based on that query. Then, I can help you synthesize a response from the query results.', source_nodes=[], metadata={'sql_query': ''})`\r\nthe `response`s can be different, and they can sometimes be gibberish, but in 10 questions that I have tested they all return empty `sql_query`. This doesn't happen when I did not specify the LLM explicitly (on the contrary it works well).\r\n\r\nI have checked my Cache folder (where the models are downloaded and stored), and I confirm that there is only one Llama 2 13B Chat Q4_0 GGUF model there.\r\n\r\nMaybe there are some other parameters on `LlamaCPP`, `service_context`, or `query_engine` that I also need to explicitly set? But after scouring the codebase, I see that everything should be set automatically in the same way when I let the `query_engine` retrieves the model itself.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7814/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7814/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7813",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7813/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7813/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7813/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7813",
        "id": 1910601933,
        "node_id": "PR_kwDOIWuq585bE5g2",
        "number": 7813,
        "title": "Minor cleanup in embedding class",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6003270643,
                "node_id": "LA_kwDOIWuq588AAAABZdKj8w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/embedding",
                "name": "embedding",
                "color": "1D775A",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-25T03:48:28Z",
        "updated_at": "2023-09-25T04:46:56Z",
        "closed_at": "2023-09-25T04:46:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7813",
            "html_url": "https://github.com/run-llama/llama_index/pull/7813",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7813.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7813.patch",
            "merged_at": "2023-09-25T04:46:55Z"
        },
        "body": "# Description\r\n* remove stateful \"text queue\" in base embedding class\r\n* use (renamed) `get_text_embedding_batch` instead",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7813/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7813/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7812",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7812/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7812/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7812/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7812",
        "id": 1910581554,
        "node_id": "I_kwDOIWuq585x4Sky",
        "number": 7812,
        "title": "[Bug]: Excessive Program Memory Usage Leading to Frequent Server Termination",
        "user": {
            "login": "wcw1996119",
            "id": 63002387,
            "node_id": "MDQ6VXNlcjYzMDAyMzg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/63002387?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wcw1996119",
            "html_url": "https://github.com/wcw1996119",
            "followers_url": "https://api.github.com/users/wcw1996119/followers",
            "following_url": "https://api.github.com/users/wcw1996119/following{/other_user}",
            "gists_url": "https://api.github.com/users/wcw1996119/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wcw1996119/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wcw1996119/subscriptions",
            "organizations_url": "https://api.github.com/users/wcw1996119/orgs",
            "repos_url": "https://api.github.com/users/wcw1996119/repos",
            "events_url": "https://api.github.com/users/wcw1996119/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wcw1996119/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-25T03:22:43Z",
        "updated_at": "2023-09-25T16:42:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nAfter deploying my code to the server, I've been encountering frequent terminations during queries. Upon investigating the logs, I discovered that it's primarily due to high memory usage, occasionally reaching 100%, resulting in the termination of the process. The server is already at its maximum capacity with 16GB of RAM. I'm puzzled as to why a simple document retrieval and question-answer functionality would consume such a significant amount of memory. How should I go about optimizing the code?\r\n\r\nThe following is the program code I have deployed to the server\uff1a\r\n`llm = OpenAI(temperature=3, model=\"text-davinci-003\", max_tokens=4096)\r\nservice_context = ServiceContext.from_defaults(llm=llm)\r\n\r\napp = Flask(__name__)\r\nqa_history = []\r\n\r\n@app.route(\"/\", methods=[\"GET\", \"POST\"])\r\ndef index():\r\n    client = Translate()\r\n\r\n    storage_context = StorageContext.from_defaults(persist_dir=\"./storage/knowledgebase\")\r\n    vindex = load_index_from_storage(storage_context)\r\n\r\n    if request.method == \"POST\":\r\n        prompt = request.form[\"question\"]+'Answer in Chinese'\r\n\r\n        query_engine = vindex.as_query_engine()\r\n        response = query_engine.query(prompt)\r\n\r\n        return redirect(url_for(\"index\", result=response))\r\n    result = request.args.get(\"result\")\r\n    return render_template(\"index.html\", result=result)\r\n\r\nif __name__ == \"__main__\":\r\n    app.run()`\n\n### Version\n\n0.8.9\n\n### Steps to Reproduce\n\nto deploy these code on a server.\n\n### Relevant Logs/Tracbacks\n\n```shell\nThu Sep 21 12:51:01 2023z Worker with pid 2702 was terminated due to signal 9\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7812/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7811",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7811/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7811/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7811/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7811",
        "id": 1910500981,
        "node_id": "PR_kwDOIWuq585bEkG_",
        "number": 7811,
        "title": "Misc updates to `OpenAIEmbedding`",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6003270643,
                "node_id": "LA_kwDOIWuq588AAAABZdKj8w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/embedding",
                "name": "embedding",
                "color": "1D775A",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-25T01:35:37Z",
        "updated_at": "2023-09-25T04:46:29Z",
        "closed_at": "2023-09-25T04:46:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7811",
            "html_url": "https://github.com/run-llama/llama_index/pull/7811",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7811.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7811.patch",
            "merged_at": "2023-09-25T04:46:28Z"
        },
        "body": "# Description\r\n* Update notebooks to use native openai embedding instead of langchain integration\r\n* update `OpenAIEmbedding` ctor to be more consistent with `AzureOpenAI` ctor.\r\n> * support directly passing in `api_key`, `api_type`, `api_base`, `api_version`.\r\n> * for both, support various aliases for setting the Azure deployment: `engine`, `deployment_name`, `deployment_id`, `deployment`. This is meant to be a catch-all, so user can specify it in any way they wish.\r\n\r\n### Todo\r\n- [x] Testing against live Azure deployment.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7811/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7810",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7810/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7810/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7810/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7810",
        "id": 1910482651,
        "node_id": "PR_kwDOIWuq585bEgOm",
        "number": 7810,
        "title": "add pairwise evaluator + benchmark auto-merging retriever",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6003268820,
                "node_id": "LA_kwDOIWuq588AAAABZdKc1A",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/evaluation",
                "name": "evaluation",
                "color": "0599AE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-25T01:11:36Z",
        "updated_at": "2023-09-25T15:36:04Z",
        "closed_at": "2023-09-25T15:36:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7810",
            "html_url": "https://github.com/run-llama/llama_index/pull/7810",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7810.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7810.patch",
            "merged_at": "2023-09-25T15:36:03Z"
        },
        "body": "This PR does the following:\r\n- redoes #7806, which was reverted due to some bugs. Fixed those bugs to generate QueryResponse pairs\r\n- adds a pairwise evaluator - given any \"reference\" answer, and a candidate answer, asks GPT-4 if it prefers the candidate answer more than the reference answer. This is good for comparing two retrieval techniques.\r\n- Adds benchmarking to our auto-merging evaluator using our pairwise evaluator ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7810/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7810/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7809",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7809/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7809/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7809/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7809",
        "id": 1910417360,
        "node_id": "PR_kwDOIWuq585bESQ0",
        "number": 7809,
        "title": "[version] bump version to 0.8.32",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-24T23:24:33Z",
        "updated_at": "2023-09-24T23:58:27Z",
        "closed_at": "2023-09-24T23:58:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7809",
            "html_url": "https://github.com/run-llama/llama_index/pull/7809",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7809.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7809.patch",
            "merged_at": "2023-09-24T23:58:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7809/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7809/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7808",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7808/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7808/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7808/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7808",
        "id": 1910394233,
        "node_id": "PR_kwDOIWuq585bENyW",
        "number": 7808,
        "title": "Revert \"extend DatasetGenerator to generate queries and responses, ad\u2026",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-24T22:01:38Z",
        "updated_at": "2023-09-24T22:07:19Z",
        "closed_at": "2023-09-24T22:07:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7808",
            "html_url": "https://github.com/run-llama/llama_index/pull/7808",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7808.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7808.patch",
            "merged_at": "2023-09-24T22:07:18Z"
        },
        "body": "noticed there were a few bugs, reverting for now ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7808/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7808/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7807",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7807/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7807/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7807/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7807",
        "id": 1910388287,
        "node_id": "PR_kwDOIWuq585bEMoK",
        "number": 7807,
        "title": "Update examples that use embeddings",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-24T21:39:17Z",
        "updated_at": "2023-09-24T22:51:58Z",
        "closed_at": "2023-09-24T22:51:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7807",
            "html_url": "https://github.com/run-llama/llama_index/pull/7807",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7807.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7807.patch",
            "merged_at": "2023-09-24T22:51:57Z"
        },
        "body": "# Description\r\n\r\nUpdate our embeddings examples to use preferred methods\r\n\r\n## Type of Change\r\n\r\n- [x] This change requires a documentation update\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7807/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7806",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7806/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7806/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7806/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7806",
        "id": 1910374967,
        "node_id": "PR_kwDOIWuq585bEKCB",
        "number": 7806,
        "title": "extend DatasetGenerator to generate queries and responses, add `QueryResponseDataset` module ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-24T20:50:37Z",
        "updated_at": "2023-09-24T21:00:23Z",
        "closed_at": "2023-09-24T21:00:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7806",
            "html_url": "https://github.com/run-llama/llama_index/pull/7806",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7806.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7806.patch",
            "merged_at": "2023-09-24T21:00:22Z"
        },
        "body": "before dataset generator beyond only generating questions.\r\n\r\nnow we feed (question, context) into LLM to generate a \"ground-truth\" response too. \r\n\r\nAdd a `QueryResponseDataset` to store queries and responses.\r\n\r\nShouldn't affect existing functionality (`dataset_generator.generate_questions_from_nodes`) ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7806/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7806/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7805",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7805/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7805/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7805/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7805",
        "id": 1910363894,
        "node_id": "PR_kwDOIWuq585bEH5L",
        "number": 7805,
        "title": "query using embedding-based node postprocessor, to use node_postprocessor_emb.",
        "user": {
            "login": "windson",
            "id": 1826682,
            "node_id": "MDQ6VXNlcjE4MjY2ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1826682?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/windson",
            "html_url": "https://github.com/windson",
            "followers_url": "https://api.github.com/users/windson/followers",
            "following_url": "https://api.github.com/users/windson/following{/other_user}",
            "gists_url": "https://api.github.com/users/windson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/windson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/windson/subscriptions",
            "organizations_url": "https://api.github.com/users/windson/orgs",
            "repos_url": "https://api.github.com/users/windson/repos",
            "events_url": "https://api.github.com/users/windson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/windson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-24T20:10:48Z",
        "updated_at": "2023-09-24T20:13:24Z",
        "closed_at": "2023-09-24T20:13:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7805",
            "html_url": "https://github.com/run-llama/llama_index/pull/7805",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7805.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7805.patch",
            "merged_at": "2023-09-24T20:13:21Z"
        },
        "body": "# Description\r\n\r\nquery using embedding-based node postprocessor, to use node_postprocessor_emb.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nYes\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7805/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7805/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7804",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7804/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7804/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7804/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7804",
        "id": 1910358867,
        "node_id": "PR_kwDOIWuq585bEG5l",
        "number": 7804,
        "title": "Update RecencyPostprocessorDemo.ipynb",
        "user": {
            "login": "windson",
            "id": 1826682,
            "node_id": "MDQ6VXNlcjE4MjY2ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1826682?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/windson",
            "html_url": "https://github.com/windson",
            "followers_url": "https://api.github.com/users/windson/followers",
            "following_url": "https://api.github.com/users/windson/following{/other_user}",
            "gists_url": "https://api.github.com/users/windson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/windson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/windson/subscriptions",
            "organizations_url": "https://api.github.com/users/windson/orgs",
            "repos_url": "https://api.github.com/users/windson/repos",
            "events_url": "https://api.github.com/users/windson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/windson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-24T19:53:37Z",
        "updated_at": "2023-09-24T20:05:02Z",
        "closed_at": "2023-09-24T20:04:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7804",
            "html_url": "https://github.com/run-llama/llama_index/pull/7804",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7804.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7804.patch",
            "merged_at": null
        },
        "body": "\r\n# Description\r\n\r\nquery using embedding-based node postprocessor,  to use node_postprocessor_emb.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nYes\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7804/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7804/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7803",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7803/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7803/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7803/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7803",
        "id": 1910345461,
        "node_id": "I_kwDOIWuq585x3Y71",
        "number": 7803,
        "title": "[Question]: Empty Response after query_engine.query",
        "user": {
            "login": "pranavbhat12",
            "id": 54463581,
            "node_id": "MDQ6VXNlcjU0NDYzNTgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/54463581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pranavbhat12",
            "html_url": "https://github.com/pranavbhat12",
            "followers_url": "https://api.github.com/users/pranavbhat12/followers",
            "following_url": "https://api.github.com/users/pranavbhat12/following{/other_user}",
            "gists_url": "https://api.github.com/users/pranavbhat12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pranavbhat12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pranavbhat12/subscriptions",
            "organizations_url": "https://api.github.com/users/pranavbhat12/orgs",
            "repos_url": "https://api.github.com/users/pranavbhat12/repos",
            "events_url": "https://api.github.com/users/pranavbhat12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pranavbhat12/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-24T19:08:51Z",
        "updated_at": "2023-10-24T06:31:36Z",
        "closed_at": "2023-10-24T06:31:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [x] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am trying to read the content of website and index it using llama_index but after I perform query_engine.query(question) I get a empty response.I have latest version of llama_index installed.(0.8.31)\r\n\r\nWhen I saw the index_store.json file its content was:\r\n{\"index_store/data\": {\"some_string\": {\"__type__\": \"vector_store\", \"__data__\": \"{\\\"index_id\\\": \\\"some_string\\\", \\\"summary\\\": null, \\\"nodes_dict\\\": {}, \\\"doc_id_dict\\\": {}, \\\"embeddings_dict\\\": {}}\"}}}\r\n\r\nBelow is the code:\r\n\r\ndef document_loader():\r\n  web_links = [\"https://www.databricks.com/\",\"https://help.databricks.com\",\"https://databricks.com/try-databricks\",\"https://help.databricks.com/s/\",\"https://docs.databricks.com\"]\r\n  loader = WebBaseLoader(web_links)\r\n  documents = loader.load()\r\n  docs=[Document(page_content=doc.page_content,metadata={\"source\":doc.metadata[\"source\"]}) for doc in documents]\r\n  model_name = \"sentence-transformers/all-mpnet-base-v2\"\r\n  model_kwargs = {\"device\": \"cuda\"}\r\n\r\n  embeddings =LangchainEmbedding(\r\n      HuggingFaceEmbeddings(model_name=model_name, model_kwargs=model_kwargs)\r\n  )\r\n\r\n  service_context = ServiceContext.from_defaults(\r\n    chunk_size=2048,\r\n    llm=llm,\r\n    embed_model=embeddings\r\n    )\r\n  set_global_service_context(service_context)\r\n  index=GPTVectorStoreIndex.from_documents(docs)\r\n  index.storage_context.persist(\"db/naval_index\")\r\n  storage_context = StorageContext.from_defaults(persist_dir=\"db/naval_index\")\r\n  new_index = load_index_from_storage(storage_context)\r\n  new_query_engine = new_index.as_query_engine()\r\n  new_query_engine.query(question)\r\n\r\n\r\nIs it the problem with llama_index or my approach is incorrect?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7803/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7802",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7802/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7802/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7802/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7802",
        "id": 1910275683,
        "node_id": "PR_kwDOIWuq585bD2nY",
        "number": 7802,
        "title": "docs updated",
        "user": {
            "login": "saadk8",
            "id": 97395496,
            "node_id": "U_kgDOBc4jKA",
            "avatar_url": "https://avatars.githubusercontent.com/u/97395496?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saadk8",
            "html_url": "https://github.com/saadk8",
            "followers_url": "https://api.github.com/users/saadk8/followers",
            "following_url": "https://api.github.com/users/saadk8/following{/other_user}",
            "gists_url": "https://api.github.com/users/saadk8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saadk8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saadk8/subscriptions",
            "organizations_url": "https://api.github.com/users/saadk8/orgs",
            "repos_url": "https://api.github.com/users/saadk8/repos",
            "events_url": "https://api.github.com/users/saadk8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saadk8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-24T15:35:35Z",
        "updated_at": "2023-09-24T19:51:45Z",
        "closed_at": "2023-09-24T19:51:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7802",
            "html_url": "https://github.com/run-llama/llama_index/pull/7802",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7802.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7802.patch",
            "merged_at": "2023-09-24T19:51:45Z"
        },
        "body": "# Description\r\n\r\nThis pull request corrects a typographical error in the documentation of the [specific file or feature]. This improvement will enhance the readability and clarity of the documentation, making it more user-friendly and reducing potential misunderstandings.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation updatee\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I reviewed the corrected documentation to ensure the typo has been fixed and no new errors have been introduced.\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code (since this is a documentation fix, this would refer to reviewing your own changes to the documentation.)\r\n- [x] I have commented my code, particularly in hard-to-understand areas (not applicable in this case, unless you added some comments to the documentation.)\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works (not applicable for a documentation fix)\r\n- [ ] New and existing unit tests pass locally with my changes (not applicable for a documentation fix)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7802/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7802/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7801",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7801/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7801/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7801/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7801",
        "id": 1910142576,
        "node_id": "PR_kwDOIWuq585bDc5X",
        "number": 7801,
        "title": "Roy/refactoring sentence splitter",
        "user": {
            "login": "HoneyJung",
            "id": 37574790,
            "node_id": "MDQ6VXNlcjM3NTc0Nzkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/37574790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HoneyJung",
            "html_url": "https://github.com/HoneyJung",
            "followers_url": "https://api.github.com/users/HoneyJung/followers",
            "following_url": "https://api.github.com/users/HoneyJung/following{/other_user}",
            "gists_url": "https://api.github.com/users/HoneyJung/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HoneyJung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HoneyJung/subscriptions",
            "organizations_url": "https://api.github.com/users/HoneyJung/orgs",
            "repos_url": "https://api.github.com/users/HoneyJung/repos",
            "events_url": "https://api.github.com/users/HoneyJung/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HoneyJung/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-24T07:51:29Z",
        "updated_at": "2023-09-24T20:12:44Z",
        "closed_at": "2023-09-24T20:12:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7801",
            "html_url": "https://github.com/run-llama/llama_index/pull/7801",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7801.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7801.patch",
            "merged_at": "2023-09-24T20:12:40Z"
        },
        "body": "# Description\r\n\r\njust enhancing code quality(refactoring) with no side effect.\r\nwant to enhance readability of _split function in sentence_splitter\r\n\r\n## Type of Change\r\n\r\nrefactoring \r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- stared at the code and made sure it makes sense\r\n- tested with existing test codes\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7801/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7800",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7800/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7800/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7800/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7800",
        "id": 1910122006,
        "node_id": "PR_kwDOIWuq585bDZFI",
        "number": 7800,
        "title": "Enable notebooks to run evaluators that were recently made async",
        "user": {
            "login": "brienna",
            "id": 9706870,
            "node_id": "MDQ6VXNlcjk3MDY4NzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9706870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brienna",
            "html_url": "https://github.com/brienna",
            "followers_url": "https://api.github.com/users/brienna/followers",
            "following_url": "https://api.github.com/users/brienna/following{/other_user}",
            "gists_url": "https://api.github.com/users/brienna/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brienna/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brienna/subscriptions",
            "organizations_url": "https://api.github.com/users/brienna/orgs",
            "repos_url": "https://api.github.com/users/brienna/repos",
            "events_url": "https://api.github.com/users/brienna/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brienna/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-24T06:26:08Z",
        "updated_at": "2023-09-25T03:12:48Z",
        "closed_at": "2023-09-24T21:07:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7800",
            "html_url": "https://github.com/run-llama/llama_index/pull/7800",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7800.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7800.patch",
            "merged_at": "2023-09-24T21:07:59Z"
        },
        "body": "# Description\r\n\r\n- Fixes two notebooks that stopped working after async evaluators were added in #7692. Jupyter Notebook runs an event loop behind the scenes, and it was interfering with `asyncio`'s event loop, causing runtime errors. \r\n\r\n    ```bash\r\n    ---> 33: raise RuntimeError(\r\n    34:     \"asyncio.run() cannot be called from a running event loop\"\r\n    )\r\n    ```\r\n\r\n- Updates an import statement to work with the `guideline` module which was renamed in #7661. \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7800/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7800/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7799",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7799/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7799/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7799/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7799",
        "id": 1910050322,
        "node_id": "I_kwDOIWuq585x2Q4S",
        "number": 7799,
        "title": "[Bug]: callback system registers duplicate exception callback events",
        "user": {
            "login": "axiomofjoy",
            "id": 15664869,
            "node_id": "MDQ6VXNlcjE1NjY0ODY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/15664869?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axiomofjoy",
            "html_url": "https://github.com/axiomofjoy",
            "followers_url": "https://api.github.com/users/axiomofjoy/followers",
            "following_url": "https://api.github.com/users/axiomofjoy/following{/other_user}",
            "gists_url": "https://api.github.com/users/axiomofjoy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axiomofjoy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axiomofjoy/subscriptions",
            "organizations_url": "https://api.github.com/users/axiomofjoy/orgs",
            "repos_url": "https://api.github.com/users/axiomofjoy/repos",
            "events_url": "https://api.github.com/users/axiomofjoy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axiomofjoy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-24T00:57:56Z",
        "updated_at": "2023-11-24T19:10:52Z",
        "closed_at": "2023-11-24T19:10:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nDuplicate exception events are registered by LlamaIndex's callback system (i.e., duplicate calls appear to be made to the `on_event_start` hook with the same exception in the payload).\r\n\r\n### Version\r\n\r\nlatest main (commit hash ef697320)\r\n\r\n### Steps to Reproduce\r\n\r\nRun the following script, which mocks `openai.ChatCompletions.create` to raise an `openai.error.RateLimitError`. Notice in the logs that the exception is registered three times.\r\n\r\n```python\r\n\"\"\"\r\nReproduces a LlamaIndex bug in which duplicate exception events are registered\r\nthrough the callback system.\r\n\"\"\"\r\n\r\nimport logging\r\nimport sys\r\nfrom unittest.mock import patch\r\nfrom typing import Any, Dict, Optional, List\r\n\r\nfrom llama_index.callbacks.schema import CBEventType\r\n\r\nimport pytest\r\nfrom llama_index import ListIndex, ServiceContext\r\nfrom llama_index.callbacks import CallbackManager\r\nfrom llama_index.callbacks.base import BaseCallbackHandler\r\nfrom llama_index.llms import OpenAI\r\nfrom llama_index.schema import Document, TextNode\r\nfrom openai import ChatCompletion\r\nfrom openai.error import RateLimitError\r\n\r\n\r\nclass ReproCallbackHandler(BaseCallbackHandler):\r\n    def __init__(\r\n        self,\r\n    ) -> None:\r\n        super().__init__(event_starts_to_ignore=[], event_ends_to_ignore=[])\r\n\r\n    def on_event_start(\r\n        self,\r\n        event_type: CBEventType,\r\n        payload: Optional[Dict[str, Any]] = None,\r\n        event_id: str = \"\",\r\n        **kwargs: Any,\r\n    ) -> str:\r\n        logging.info(f\"Event type: {event_type}\")\r\n        logging.info(f\"Payload: {payload}\")\r\n        logging.info(f\"Event id: {event_id}\")\r\n        logging.info(f\"Kwargs: {kwargs}\")\r\n\r\n    def on_event_end(\r\n        self,\r\n        event_type: CBEventType,\r\n        payload: Optional[Dict[str, Any]] = None,\r\n        event_id: str = \"\",\r\n        **kwargs: Any,\r\n    ) -> None:\r\n        ...\r\n\r\n    def start_trace(self, trace_id: Optional[str] = None) -> None:\r\n        ...\r\n\r\n    def end_trace(\r\n        self,\r\n        trace_id: Optional[str] = None,\r\n        trace_map: Optional[Dict[str, List[str]]] = None,\r\n    ) -> None:\r\n        ...\r\n\r\n\r\nlogging.basicConfig(level=logging.DEBUG, stream=sys.stdout)\r\n\r\nnodes = [\r\n    Document(\r\n        text=\"The Great Pyramid of Giza is one of the seven wonders\",\r\n        id=\"0\",\r\n        metadata={\"filename\": \"egypt.txt\", \"category\": \"pyramid\"},\r\n    ),\r\n    TextNode(text=\"The Hanging Gardens of Babylon is one of the seven wonders\", id=\"1\"),\r\n]\r\n\r\nllm = OpenAI(model=\"gpt-3.5-turbo\", max_retries=1)\r\nquery = \"What are the seven wonders of the world?\"\r\ncallback_handler = ReproCallbackHandler()\r\nindex = ListIndex(nodes)\r\nservice_context = ServiceContext.from_defaults(\r\n    llm=llm, callback_manager=CallbackManager([callback_handler])\r\n)\r\nquery_engine = index.as_query_engine(service_context=service_context)\r\n\r\nwith patch.object(ChatCompletion, \"create\") as mocked_chat_completion_create:\r\n    mocked_chat_completion_create.side_effect = RateLimitError(\"message\")\r\n    with pytest.raises(RateLimitError):\r\n        query_engine.query(query)\r\n```\r\n\r\nVerify that three exception events for the `RateLimitError` are registered in the callback system. Example output below.\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nINFO:root:Event type: query\r\nINFO:root:Payload: {<EventPayload.QUERY_STR: 'query_str'>: 'What are the seven wonders of the world?'}\r\nINFO:root:Event id: 0258f9ef-4632-4ea4-9003-23be2c7d8cd6\r\nINFO:root:Kwargs: {}\r\nINFO:root:Event type: retrieve\r\nINFO:root:Payload: {<EventPayload.QUERY_STR: 'query_str'>: 'What are the seven wonders of the world?'}\r\nINFO:root:Event id: 2fc7fabe-13cf-46d9-96f5-7ba54f75dac8\r\nINFO:root:Kwargs: {}\r\nINFO:root:Event type: synthesize\r\nINFO:root:Payload: {<EventPayload.QUERY_STR: 'query_str'>: 'What are the seven wonders of the world?'}\r\nINFO:root:Event id: da5d8c56-c816-4321-a139-5f0833626b29\r\nINFO:root:Kwargs: {}\r\nINFO:root:Event type: templating\r\nINFO:root:Payload: {<EventPayload.TEMPLATE: 'template'>: \"system: You are an expert Q&A system that is trusted around the world.\\nAlways answer the query using the provided context information, and not prior knowledge.\\nSome rules to follow:\\n1. Never directly reference the given context in your answer.\\n2. Avoid statements like 'Based on the context, ...' or 'The context information ...' or anything along those lines.\\nuser: Context information is below.\\n---------------------\\n{context_str}\\n---------------------\\nGiven the context information and not prior knowledge, answer the query.\\nQuery: {query_str}\\nAnswer: \\nassistant: \", <EventPayload.TEMPLATE_VARS: 'template_vars'>: {'context_str': 'filename: egypt.txt\\ncategory: pyramid\\n\\nThe Great Pyramid of Giza is one of the seven wonders\\n\\nThe Hanging Gardens of Babylon is one of the seven wonders'}, <EventPayload.SYSTEM_PROMPT: 'system_prompt'>: None, <EventPayload.QUERY_WRAPPER_PROMPT: 'query_wrapper_prompt'>: None}\r\nINFO:root:Event id: c21e846b-907d-4742-8999-5138cc0dd33e\r\nINFO:root:Kwargs: {}\r\nINFO:root:Event type: llm\r\nINFO:root:Payload: {<EventPayload.MESSAGES: 'messages'>: [ChatMessage(role=<MessageRole.SYSTEM: 'system'>, content=\"You are an expert Q&A system that is trusted around the world.\\nAlways answer the query using the provided context information, and not prior knowledge.\\nSome rules to follow:\\n1. Never directly reference the given context in your answer.\\n2. Avoid statements like 'Based on the context, ...' or 'The context information ...' or anything along those lines.\", additional_kwargs={}), ChatMessage(role=<MessageRole.USER: 'user'>, content='Context information is below.\\n---------------------\\nfilename: egypt.txt\\ncategory: pyramid\\n\\nThe Great Pyramid of Giza is one of the seven wonders\\n\\nThe Hanging Gardens of Babylon is one of the seven wonders\\n---------------------\\nGiven the context information and not prior knowledge, answer the query.\\nQuery: What are the seven wonders of the world?\\nAnswer: ', additional_kwargs={})], <EventPayload.ADDITIONAL_KWARGS: 'additional_kwargs'>: {}, <EventPayload.SERIALIZED: 'serialized'>: {'model': 'gpt-3.5-turbo', 'temperature': 0.1, 'max_tokens': None, 'additional_kwargs': {}, 'max_retries': 1, 'api_key': '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', 'api_type': 'open_ai', 'api_base': 'https://api.openai.com/v1', 'api_version': '', 'class_type': 'openai', 'class_name': 'openai_llm'}}\r\nINFO:root:Event id: 90ff5639-9495-4ac1-8590-b6c3d04a63a3\r\nINFO:root:Kwargs: {}\r\nINFO:root:Event type: exception\r\nINFO:root:Payload: {<EventPayload.EXCEPTION: 'exception'>: RateLimitError(message='message', http_status=None, request_id=None)}\r\nINFO:root:Event id: 78331efb-3fff-48b1-9b21-1cd8137e944c\r\nINFO:root:Kwargs: {}\r\nINFO:root:Event type: exception\r\nINFO:root:Payload: {<EventPayload.EXCEPTION: 'exception'>: RateLimitError(message='message', http_status=None, request_id=None)}\r\nINFO:root:Event id: 8d2e895d-4b0a-4e62-a21b-07b6f07439c4\r\nINFO:root:Kwargs: {}\r\nINFO:root:Event type: exception\r\nINFO:root:Payload: {<EventPayload.EXCEPTION: 'exception'>: RateLimitError(message='message', http_status=None, request_id=None)}\r\nINFO:root:Event id: 8bf3317a-6fa6-4d8d-a6cc-ab82b441e3a6\r\nINFO:root:Kwargs: {}\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7799/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7799/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7798",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7798/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7798/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7798/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7798",
        "id": 1910020750,
        "node_id": "PR_kwDOIWuq585bDE8L",
        "number": 7798,
        "title": "Fixes 2 typos in the chat prompt",
        "user": {
            "login": "seldo",
            "id": 185893,
            "node_id": "MDQ6VXNlcjE4NTg5Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/185893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seldo",
            "html_url": "https://github.com/seldo",
            "followers_url": "https://api.github.com/users/seldo/followers",
            "following_url": "https://api.github.com/users/seldo/following{/other_user}",
            "gists_url": "https://api.github.com/users/seldo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seldo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seldo/subscriptions",
            "organizations_url": "https://api.github.com/users/seldo/orgs",
            "repos_url": "https://api.github.com/users/seldo/repos",
            "events_url": "https://api.github.com/users/seldo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seldo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-23T22:32:51Z",
        "updated_at": "2023-09-23T22:56:43Z",
        "closed_at": "2023-09-23T22:56:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7798",
            "html_url": "https://github.com/run-llama/llama_index/pull/7798",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7798.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7798.patch",
            "merged_at": "2023-09-23T22:56:42Z"
        },
        "body": "# Description\r\n\r\nWhile debugging I noticed the CHAT_REFINE_PROMPT_TMPL_MSGS prompt template had two obvious typos: a missing \"t\" and a missing space at the end of a line, that caused two words to run together.\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7798/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7798/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7797",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7797/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7797/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7797/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7797",
        "id": 1909761727,
        "node_id": "PR_kwDOIWuq585bCSGr",
        "number": 7797,
        "title": "Add support for `vector_store_query_mode` to `VectorIndexAutoRetriever`.",
        "user": {
            "login": "yasyf",
            "id": 709645,
            "node_id": "MDQ6VXNlcjcwOTY0NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/709645?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yasyf",
            "html_url": "https://github.com/yasyf",
            "followers_url": "https://api.github.com/users/yasyf/followers",
            "following_url": "https://api.github.com/users/yasyf/following{/other_user}",
            "gists_url": "https://api.github.com/users/yasyf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yasyf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yasyf/subscriptions",
            "organizations_url": "https://api.github.com/users/yasyf/orgs",
            "repos_url": "https://api.github.com/users/yasyf/repos",
            "events_url": "https://api.github.com/users/yasyf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yasyf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-23T08:04:18Z",
        "updated_at": "2023-09-25T00:27:14Z",
        "closed_at": "2023-09-24T20:25:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7797",
            "html_url": "https://github.com/run-llama/llama_index/pull/7797",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7797.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7797.patch",
            "merged_at": "2023-09-24T20:25:12Z"
        },
        "body": "# Description\n\nAdd support for `vector_store_query_mode` to `VectorIndexAutoRetriever`. To support hybrid queries for Pinecone!\n\n\n## Type of Change\n\nPlease delete options that are not relevant.\n\n- [x] Bug fix (non-breaking change which fixes an issue)\n- [ ] New feature (non-breaking change which adds functionality)\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\n- [ ] This change requires a documentation update\n\n# How Has This Been Tested?\n\n- [ ] Added new unit/integration tests\n- [ ] Added new notebook (that tests end-to-end)\n- [x] I stared at the code and made sure it makes sense\n\n# Suggested Checklist:\n\n- [x] I have performed a self-review of my own code\n- [x] I have commented my code, particularly in hard-to-understand areas\n- [x] I have made corresponding changes to the documentation\n- [x] My changes generate no new warnings\n- [ ] I have added tests that prove my fix is effective or that my feature works\n- [x] New and existing unit tests pass locally with my changes\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7797/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7797/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7796",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7796/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7796/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7796/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7796",
        "id": 1909740302,
        "node_id": "PR_kwDOIWuq585bCN-7",
        "number": 7796,
        "title": "add proper retrieval evals to node references notebook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-23T06:44:56Z",
        "updated_at": "2023-09-23T16:49:35Z",
        "closed_at": "2023-09-23T16:49:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7796",
            "html_url": "https://github.com/run-llama/llama_index/pull/7796",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7796.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7796.patch",
            "merged_at": "2023-09-23T16:49:34Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7796/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7796/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7795",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7795/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7795/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7795/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7795",
        "id": 1909729412,
        "node_id": "PR_kwDOIWuq585bCL0p",
        "number": 7795,
        "title": "Add native huggingface embeddings",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-23T06:04:06Z",
        "updated_at": "2023-09-24T19:51:21Z",
        "closed_at": "2023-09-24T19:51:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7795",
            "html_url": "https://github.com/run-llama/llama_index/pull/7795",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7795.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7795.patch",
            "merged_at": "2023-09-24T19:51:21Z"
        },
        "body": "# Description\r\n\r\nThis PR adds native huggingface embedding support, including\r\n- Generic huggingface models (cls and mean pooling)\r\n- Instructor embeddings\r\n- Optimum embeddings for ONNX support (cls and mean pooling)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7795/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7795/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7794",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7794/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7794/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7794/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7794",
        "id": 1909716109,
        "node_id": "PR_kwDOIWuq585bCJNk",
        "number": 7794,
        "title": "add gradient llms and example",
        "user": {
            "login": "lilwilsond2",
            "id": 13373810,
            "node_id": "MDQ6VXNlcjEzMzczODEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/13373810?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lilwilsond2",
            "html_url": "https://github.com/lilwilsond2",
            "followers_url": "https://api.github.com/users/lilwilsond2/followers",
            "following_url": "https://api.github.com/users/lilwilsond2/following{/other_user}",
            "gists_url": "https://api.github.com/users/lilwilsond2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lilwilsond2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lilwilsond2/subscriptions",
            "organizations_url": "https://api.github.com/users/lilwilsond2/orgs",
            "repos_url": "https://api.github.com/users/lilwilsond2/repos",
            "events_url": "https://api.github.com/users/lilwilsond2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lilwilsond2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5870194649,
                "node_id": "LA_kwDOIWuq588AAAABXeQP2Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/llm",
                "name": "llm",
                "color": "799557",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-23T05:07:48Z",
        "updated_at": "2023-09-28T20:53:44Z",
        "closed_at": "2023-09-28T18:50:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7794",
            "html_url": "https://github.com/run-llama/llama_index/pull/7794",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7794.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7794.patch",
            "merged_at": "2023-09-28T18:50:17Z"
        },
        "body": "# Description\r\n\r\nAdds [Gradient](https://gradient.ai/) integration\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n  -- test would need access token and workspace, wasn't how to approach\r\n- [X] Added new notebook (that tests end-to-end)\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n  -- no new failures, at least\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7794/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7794/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7793",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7793/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7793/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7793/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7793",
        "id": 1909684832,
        "node_id": "PR_kwDOIWuq585bCC_6",
        "number": 7793,
        "title": "Do not auto-connect on ctor for postgres",
        "user": {
            "login": "Javtor",
            "id": 8462127,
            "node_id": "MDQ6VXNlcjg0NjIxMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8462127?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Javtor",
            "html_url": "https://github.com/Javtor",
            "followers_url": "https://api.github.com/users/Javtor/followers",
            "following_url": "https://api.github.com/users/Javtor/following{/other_user}",
            "gists_url": "https://api.github.com/users/Javtor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Javtor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Javtor/subscriptions",
            "organizations_url": "https://api.github.com/users/Javtor/orgs",
            "repos_url": "https://api.github.com/users/Javtor/repos",
            "events_url": "https://api.github.com/users/Javtor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Javtor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5804135704,
                "node_id": "LA_kwDOIWuq588AAAABWfQVGA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/vector%20store",
                "name": "vector store",
                "color": "4AE220",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-23T02:59:40Z",
        "updated_at": "2023-09-25T21:36:33Z",
        "closed_at": "2023-09-25T21:29:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7793",
            "html_url": "https://github.com/run-llama/llama_index/pull/7793",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7793.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7793.patch",
            "merged_at": "2023-09-25T21:29:04Z"
        },
        "body": "# Description\r\n\r\nRemove connection logic on constructor for postgres. Instead, connect on operations (add, query and delete). This way we avoid making a hidden network call within a component's __init__\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Updated existing unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7793/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7793/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7792",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7792/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7792/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7792/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7792",
        "id": 1909617312,
        "node_id": "PR_kwDOIWuq585bB1NZ",
        "number": 7792,
        "title": "Update ElasticsearchStore to return normalized similarities",
        "user": {
            "login": "stephenwebel",
            "id": 13646076,
            "node_id": "MDQ6VXNlcjEzNjQ2MDc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13646076?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stephenwebel",
            "html_url": "https://github.com/stephenwebel",
            "followers_url": "https://api.github.com/users/stephenwebel/followers",
            "following_url": "https://api.github.com/users/stephenwebel/following{/other_user}",
            "gists_url": "https://api.github.com/users/stephenwebel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stephenwebel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stephenwebel/subscriptions",
            "organizations_url": "https://api.github.com/users/stephenwebel/orgs",
            "repos_url": "https://api.github.com/users/stephenwebel/repos",
            "events_url": "https://api.github.com/users/stephenwebel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stephenwebel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5804135704,
                "node_id": "LA_kwDOIWuq588AAAABWfQVGA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/vector%20store",
                "name": "vector store",
                "color": "4AE220",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-22T23:26:39Z",
        "updated_at": "2023-09-25T23:52:26Z",
        "closed_at": "2023-09-25T18:35:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7792",
            "html_url": "https://github.com/run-llama/llama_index/pull/7792",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7792.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7792.patch",
            "merged_at": "2023-09-25T18:35:22Z"
        },
        "body": "# Description\r\n\r\nCurrently the ElasticsearchStore directly forwards the `hit[\"_score\"]` field creating the possibility to over prioritize responses from elasticsearch when auto merging. Discussioned here https://github.com/jerryjliu/llama_index/pull/7754#issuecomment-1730714823\r\n\r\nUpdate test for to validate similarity logic and graceful handling of free es installation.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n\r\nTesting w/ local elasticsearch, skipping some test due to lack of premium/enterprise license:\r\n![Screenshot from 2023-09-22 19-24-44](https://github.com/jerryjliu/llama_index/assets/13646076/3d862005-4eda-44d3-adac-a1ac85994003)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7792/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7791",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7791/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7791/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7791/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7791",
        "id": 1909481802,
        "node_id": "I_kwDOIWuq585x0GFK",
        "number": 7791,
        "title": "[Bug]: Additional exception handling needed in retriever.py",
        "user": {
            "login": "mphipps2",
            "id": 5166558,
            "node_id": "MDQ6VXNlcjUxNjY1NTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5166558?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mphipps2",
            "html_url": "https://github.com/mphipps2",
            "followers_url": "https://api.github.com/users/mphipps2/followers",
            "following_url": "https://api.github.com/users/mphipps2/following{/other_user}",
            "gists_url": "https://api.github.com/users/mphipps2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mphipps2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mphipps2/subscriptions",
            "organizations_url": "https://api.github.com/users/mphipps2/orgs",
            "repos_url": "https://api.github.com/users/mphipps2/repos",
            "events_url": "https://api.github.com/users/mphipps2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mphipps2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-22T20:27:09Z",
        "updated_at": "2023-10-03T22:49:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nThis line from _build_node_list_from_query_result in retriever.py:\r\n\r\nnode_ids = [\r\n    self._index.index_struct.nodes_dict[idx] for idx in query_result.ids if idx in self._index.index_struct.nodes_dict\r\n]\r\n\r\ncauses a crach and returns a KeyError: '-1' when the number of chunks is smaller than the length k from similarity_top_k=k. This happens because query_result.ids =  ['0', '1', '-1'] --- so that '-1' causes the crash then. This should be an easy fix, something like this would do the trick: \r\n\r\n****Edit: (10/03/23) fixing previous typo. The correct solution is: ****\r\n            node_ids = [\r\n                self._index.index_struct.nodes_dict[idx] for idx in query_result.ids if idx in self._index.index_struct.nodes_dict\r\n            ]\r\n\r\nor at the very least by having some sort of exception handling logic in place\r\n\r\n\r\n\r\n### Version\r\n\r\n0.8.30\r\n\r\n### Steps to Reproduce\r\n\r\nRunning a simple document qa pipeline with a custom LLM class, a local embedding model and using FAISS\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nTraceback (most recent call last):\r\nFile \"/python3.9/site-packages/llama_index/indices/vector_store/retrievers/retriever.py\", line 165, in _get_nodes_with_embeddings\r\n    return self._build_node_list_from_query_result(query_result)\r\nFile \"/python3.9/site-packages/llama_index/indices/vector_store/retrievers/retriever.py\", line 129, in <listcomp>\r\n    self._index.index_struct.nodes_dict[idx] for idx in query_result.ids\r\nKeyError: '-1'\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7791/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7791/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7790",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7790/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7790/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7790/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/7790",
        "id": 1909416489,
        "node_id": "PR_kwDOIWuq585bBKAV",
        "number": 7790,
        "title": "Allowing custom text field name for Milvus (#7789)",
        "user": {
            "login": "ytang07",
            "id": 17556662,
            "node_id": "MDQ6VXNlcjE3NTU2NjYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/17556662?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ytang07",
            "html_url": "https://github.com/ytang07",
            "followers_url": "https://api.github.com/users/ytang07/followers",
            "following_url": "https://api.github.com/users/ytang07/following{/other_user}",
            "gists_url": "https://api.github.com/users/ytang07/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ytang07/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ytang07/subscriptions",
            "organizations_url": "https://api.github.com/users/ytang07/orgs",
            "repos_url": "https://api.github.com/users/ytang07/repos",
            "events_url": "https://api.github.com/users/ytang07/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ytang07/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-22T19:25:52Z",
        "updated_at": "2023-09-25T16:21:21Z",
        "closed_at": "2023-09-24T21:21:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/7790",
            "html_url": "https://github.com/run-llama/llama_index/pull/7790",
            "diff_url": "https://github.com/run-llama/llama_index/pull/7790.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/7790.patch",
            "merged_at": "2023-09-24T21:21:38Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # 7789\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7790/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7790/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/7789",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/7789/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/7789/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/7789/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/7789",
        "id": 1909389862,
        "node_id": "I_kwDOIWuq585xzvom",
        "number": 7789,
        "title": "[Feature Request]: Allow Custom Text Field Key in Milvus",
        "user": {
            "login": "ytang07",
            "id": 17556662,
            "node_id": "MDQ6VXNlcjE3NTU2NjYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/17556662?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ytang07",
            "html_url": "https://github.com/ytang07",
            "followers_url": "https://api.github.com/users/ytang07/followers",
            "following_url": "https://api.github.com/users/ytang07/following{/other_user}",
            "gists_url": "https://api.github.com/users/ytang07/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ytang07/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ytang07/subscriptions",
            "organizations_url": "https://api.github.com/users/ytang07/orgs",
            "repos_url": "https://api.github.com/users/ytang07/repos",
            "events_url": "https://api.github.com/users/ytang07/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ytang07/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-22T19:02:01Z",
        "updated_at": "2023-09-25T18:13:56Z",
        "closed_at": "2023-09-25T18:13:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nAllows custom text field key in Milvus\n\n### Reason\n\nEnables \"bring your own collection\" type deal for Milvus\n\n### Value of Feature\n\nWe (Zilliz) are using this",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/7789/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/7789/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    }
]