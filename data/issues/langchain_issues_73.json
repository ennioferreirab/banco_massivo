[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6812",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6812/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6812/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6812/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6812",
        "id": 1776422008,
        "node_id": "PR_kwDOIPDwls5UAcVD",
        "number": 6812,
        "title": "Update link in apis.mdx",
        "user": {
            "login": "shashankdeshpande",
            "id": 47742503,
            "node_id": "MDQ6VXNlcjQ3NzQyNTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/47742503?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shashankdeshpande",
            "html_url": "https://github.com/shashankdeshpande",
            "followers_url": "https://api.github.com/users/shashankdeshpande/followers",
            "following_url": "https://api.github.com/users/shashankdeshpande/following{/other_user}",
            "gists_url": "https://api.github.com/users/shashankdeshpande/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shashankdeshpande/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shashankdeshpande/subscriptions",
            "organizations_url": "https://api.github.com/users/shashankdeshpande/orgs",
            "repos_url": "https://api.github.com/users/shashankdeshpande/repos",
            "events_url": "https://api.github.com/users/shashankdeshpande/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shashankdeshpande/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T08:57:04Z",
        "updated_at": "2023-06-28T06:00:27Z",
        "closed_at": "2023-06-28T06:00:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6812",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6812",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6812.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6812.patch",
            "merged_at": "2023-06-28T06:00:26Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6812/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6811",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6811/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6811/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6811/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6811",
        "id": 1776368368,
        "node_id": "I_kwDOIPDwls5p4Trw",
        "number": 6811,
        "title": "The latest version langchain encountered errors when saving Chroma locally, \"error \"AttributeError: 'Collection' object has no attribute 'upsert'\"\"",
        "user": {
            "login": "XuhuiRen",
            "id": 44249229,
            "node_id": "MDQ6VXNlcjQ0MjQ5MjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/44249229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/XuhuiRen",
            "html_url": "https://github.com/XuhuiRen",
            "followers_url": "https://api.github.com/users/XuhuiRen/followers",
            "following_url": "https://api.github.com/users/XuhuiRen/following{/other_user}",
            "gists_url": "https://api.github.com/users/XuhuiRen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/XuhuiRen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/XuhuiRen/subscriptions",
            "organizations_url": "https://api.github.com/users/XuhuiRen/orgs",
            "repos_url": "https://api.github.com/users/XuhuiRen/repos",
            "events_url": "https://api.github.com/users/XuhuiRen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/XuhuiRen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-27T08:25:25Z",
        "updated_at": "2023-06-27T13:13:29Z",
        "closed_at": "2023-06-27T13:13:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain 0.0.215 and langchain 0.0.216\r\npython 3.9\r\nchromadb 0.3.21\n\n### Who can help?\n\n@agola11 @hw\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chains import VectorDBQA\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.embeddings import HuggingFaceEmbeddings, HuggingFaceInstructEmbeddings\r\n\r\nloader = TextLoader('state_of_the_union.txt')\r\ndocuments = loader.load()\r\n\r\ntext_splitter = RecursiveCharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ntexts = text_splitter.split_documents(documents)\r\n\r\npersist_directory = 'db'\r\nembedding = HuggingFaceInstructEmbeddings(model_name=\u201chkunlp/instructor-large\u201d)\r\nvectordb = Chroma.from_documents(documents=documents, embedding=embedding, persist_directory=persist_directory)\r\nvectordb.persist()\r\nvectordb = None\r\n\r\n[state_of_the_union.txt](https://github.com/hwchase17/langchain/files/11879392/state_of_the_union.txt)\r\n\r\nThe detail error information is attached as follows,\r\n[error_info.txt](https://github.com/hwchase17/langchain/files/11879458/error_info.txt)\r\nI don't know why there will be a error \"AttributeError: 'Collection' object has no attribute 'upsert'\"\r\n\r\nAnd when i degrade the langchain version to 0.0.177, everything go back normal\r\n\n\n### Expected behavior\n\nThe document could be stored locally for the further retrieval.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6811/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6810",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6810/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6810/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6810/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6810",
        "id": 1776309539,
        "node_id": "I_kwDOIPDwls5p4FUj",
        "number": 6810,
        "title": "Support kwargs on GoogleSearchApiWrapper run / result ",
        "user": {
            "login": "skspark",
            "id": 118829871,
            "node_id": "U_kgDOBxUzLw",
            "avatar_url": "https://avatars.githubusercontent.com/u/118829871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skspark",
            "html_url": "https://github.com/skspark",
            "followers_url": "https://api.github.com/users/skspark/followers",
            "following_url": "https://api.github.com/users/skspark/following{/other_user}",
            "gists_url": "https://api.github.com/users/skspark/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skspark/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skspark/subscriptions",
            "organizations_url": "https://api.github.com/users/skspark/orgs",
            "repos_url": "https://api.github.com/users/skspark/repos",
            "events_url": "https://api.github.com/users/skspark/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skspark/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4678528826,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvOg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "7057ff",
                "default": true,
                "description": "Good for newcomers"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T07:52:22Z",
        "updated_at": "2023-08-31T04:06:32Z",
        "closed_at": "2023-08-31T04:06:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nWould you please consider supporting kwargs in GoogleSearchApiWrapper's run / result call,\r\nhttps://python.langchain.com/docs/modules/agents/tools/integrations/google_search\r\n\r\nfor the extra filtering on search. for example, I'd like to add \"cr\" option in cse search, but it seems that I cannot pass any options to run / result method, although internal function \"_google_search_results\" supports passing extra option to search engine.\r\n\r\n\r\n### Motivation\r\n\r\nI'd like to add \"cr\" option in cse search, but it seems that I cannot pass any options to run / result method, although internal function \"_google_search_results\" supports passing extra option to search engine.\r\n\r\n### Your contribution\r\n\r\nIf you allow me, I'd like to make pr for this change.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6810/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6810/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6809",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6809/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6809/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6809/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6809",
        "id": 1776305294,
        "node_id": "I_kwDOIPDwls5p4ESO",
        "number": 6809,
        "title": "Issue: How to iterate using agents",
        "user": {
            "login": "saswat0",
            "id": 32325136,
            "node_id": "MDQ6VXNlcjMyMzI1MTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/32325136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saswat0",
            "html_url": "https://github.com/saswat0",
            "followers_url": "https://api.github.com/users/saswat0/followers",
            "following_url": "https://api.github.com/users/saswat0/following{/other_user}",
            "gists_url": "https://api.github.com/users/saswat0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saswat0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saswat0/subscriptions",
            "organizations_url": "https://api.github.com/users/saswat0/orgs",
            "repos_url": "https://api.github.com/users/saswat0/repos",
            "events_url": "https://api.github.com/users/saswat0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saswat0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T07:49:29Z",
        "updated_at": "2023-10-05T16:07:41Z",
        "closed_at": "2023-10-05T16:07:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI have a sentence, and I'd like to extract entities from it. On each entity, I'd like to run a custom tool for validating. Is this possible via agents? I've looked through the documentation but couldn't find any related topics\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6809/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6809/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6808",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6808/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6808/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6808/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6808",
        "id": 1776271857,
        "node_id": "PR_kwDOIPDwls5T_7wI",
        "number": 6808,
        "title": "Update description in Evals notebook",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T07:26:30Z",
        "updated_at": "2023-06-27T07:26:51Z",
        "closed_at": "2023-06-27T07:26:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6808",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6808",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6808.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6808.patch",
            "merged_at": "2023-06-27T07:26:50Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6808/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6808/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6807",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6807/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6807/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6807/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6807",
        "id": 1776224638,
        "node_id": "PR_kwDOIPDwls5T_xZC",
        "number": 6807,
        "title": "Permit Constitutional Principles",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T06:58:29Z",
        "updated_at": "2023-06-27T07:23:55Z",
        "closed_at": "2023-06-27T07:23:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6807",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6807",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6807.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6807.patch",
            "merged_at": "2023-06-27T07:23:54Z"
        },
        "body": "In the criteria evaluator. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6807/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6806",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6806/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6806/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6806/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6806",
        "id": 1776192254,
        "node_id": "PR_kwDOIPDwls5T_qWv",
        "number": 6806,
        "title": "feat: add model architecture back to wandb tracer",
        "user": {
            "login": "parambharat",
            "id": 12809212,
            "node_id": "MDQ6VXNlcjEyODA5MjEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/12809212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/parambharat",
            "html_url": "https://github.com/parambharat",
            "followers_url": "https://api.github.com/users/parambharat/followers",
            "following_url": "https://api.github.com/users/parambharat/following{/other_user}",
            "gists_url": "https://api.github.com/users/parambharat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/parambharat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/parambharat/subscriptions",
            "organizations_url": "https://api.github.com/users/parambharat/orgs",
            "repos_url": "https://api.github.com/users/parambharat/repos",
            "events_url": "https://api.github.com/users/parambharat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/parambharat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T06:36:52Z",
        "updated_at": "2023-08-07T08:12:08Z",
        "closed_at": "2023-07-12T19:00:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6806",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6806",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6806.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6806.patch",
            "merged_at": "2023-07-12T19:00:19Z"
        },
        "body": "# Description\r\n\r\nThis PR adds model architecture to the `WandbTracer` from the Serialized Run kwargs. This allows visualization of the calling parameters of an Agent, LLM and Tool in Weights & Biases. \r\n    1. Safely serialize the run objects to WBTraceTree model_dict\r\n    2. Refactors the run processing logic to be more organized.\r\n\r\n- Tag maintainer: @agola11\r\n- Twitter handle: @parambharat",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6806/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6806/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6805",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6805/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6805/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6805/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6805",
        "id": 1776178595,
        "node_id": "I_kwDOIPDwls5p3lWj",
        "number": 6805,
        "title": "load_qa_chain with chain_type=\"map_reduce\" can not process long document",
        "user": {
            "login": "MrRace",
            "id": 10300313,
            "node_id": "MDQ6VXNlcjEwMzAwMzEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/10300313?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MrRace",
            "html_url": "https://github.com/MrRace",
            "followers_url": "https://api.github.com/users/MrRace/followers",
            "following_url": "https://api.github.com/users/MrRace/following{/other_user}",
            "gists_url": "https://api.github.com/users/MrRace/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MrRace/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MrRace/subscriptions",
            "organizations_url": "https://api.github.com/users/MrRace/orgs",
            "repos_url": "https://api.github.com/users/MrRace/repos",
            "events_url": "https://api.github.com/users/MrRace/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MrRace/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-27T06:25:37Z",
        "updated_at": "2023-10-05T16:09:37Z",
        "closed_at": "2023-10-05T16:09:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version: 0.0.215\r\npython version: Python 3.8.8\n\n### Who can help?\n\n@hwchase17 @agola11 @ey\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI take the example from https://python.langchain.com/docs/modules/chains/additional/question_answering#the-map_reduce-chain . I ignore the retrieval part and inject the whole document into `load_qa_chain` with set `chain_type=\"map_reduce\"`\uff1a\r\n```\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.chains.question_answering import load_qa_chain\r\nfrom langchain.llms import OpenAI\r\n\r\nloader = TextLoader(\"state_of_the_union.txt\")\r\ndocuments = loader.load()\r\n\r\nchain = load_qa_chain(OpenAI(temperature=0), chain_type=\"map_reduce\")\r\nquery = \"What did the president say about Justice Breyer\"\r\nchain({\"input_documents\": documents, \"question\": query}, return_only_outputs=True)\r\n```\r\ncomes error below:\r\n```\r\nInvalidRequestError: This model's maximum context length is 4097 tokens, however you requested 9640 tokens (9384 in your prompt; 256 for the completion). Please reduce your prompt; or completion length.\r\n```\r\nwhen `documents` is long document, set `chain_type=\"map_reduce\"` seems do not work, why and  how to solve it? \r\nThanks a lot!\n\n### Expected behavior\n\n load_qa_chain with `chain_type=\"map_reduce\"` setting  should can process long document directly\uff0cdoes it\uff1f",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6805/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6805/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6804",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6804/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6804/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6804/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6804",
        "id": 1776154818,
        "node_id": "PR_kwDOIPDwls5T_iSN",
        "number": 6804,
        "title": "Update to the latest Psychic python library version",
        "user": {
            "login": "Ayan-Bandyopadhyay",
            "id": 13636019,
            "node_id": "MDQ6VXNlcjEzNjM2MDE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13636019?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ayan-Bandyopadhyay",
            "html_url": "https://github.com/Ayan-Bandyopadhyay",
            "followers_url": "https://api.github.com/users/Ayan-Bandyopadhyay/followers",
            "following_url": "https://api.github.com/users/Ayan-Bandyopadhyay/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ayan-Bandyopadhyay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ayan-Bandyopadhyay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ayan-Bandyopadhyay/subscriptions",
            "organizations_url": "https://api.github.com/users/Ayan-Bandyopadhyay/orgs",
            "repos_url": "https://api.github.com/users/Ayan-Bandyopadhyay/repos",
            "events_url": "https://api.github.com/users/Ayan-Bandyopadhyay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ayan-Bandyopadhyay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T06:05:11Z",
        "updated_at": "2023-06-28T05:26:38Z",
        "closed_at": "2023-06-28T05:26:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6804",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6804",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6804.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6804.patch",
            "merged_at": "2023-06-28T05:26:38Z"
        },
        "body": "Update the Psychic document loader to use the latest `psychicapi` python library version: `0.8.0`\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6804/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6804/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6803",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6803/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6803/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6803/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6803",
        "id": 1776131453,
        "node_id": "I_kwDOIPDwls5p3Z19",
        "number": 6803,
        "title": "ValueError: RedisCache only supports caching of normal LLM generations, got <class 'langchain.schema.ChatGeneration'>",
        "user": {
            "login": "zhaidarbek",
            "id": 107963,
            "node_id": "MDQ6VXNlcjEwNzk2Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/107963?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhaidarbek",
            "html_url": "https://github.com/zhaidarbek",
            "followers_url": "https://api.github.com/users/zhaidarbek/followers",
            "following_url": "https://api.github.com/users/zhaidarbek/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhaidarbek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhaidarbek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhaidarbek/subscriptions",
            "organizations_url": "https://api.github.com/users/zhaidarbek/orgs",
            "repos_url": "https://api.github.com/users/zhaidarbek/repos",
            "events_url": "https://api.github.com/users/zhaidarbek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhaidarbek/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T05:41:52Z",
        "updated_at": "2023-06-29T12:08:37Z",
        "closed_at": "2023-06-29T12:08:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython 3.10, Langchain > v0.0.212\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nEnable caching with langchain.llm_cache = RedisCache\n\n### Expected behavior\n\nThis works with version <= v0.0.212",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6803/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6803/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6802",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6802/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6802/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6802/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6802",
        "id": 1776098909,
        "node_id": "PR_kwDOIPDwls5T_WXZ",
        "number": 6802,
        "title": "Improve docstrings for langchain.schema.py",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-27T05:05:12Z",
        "updated_at": "2023-07-01T16:46:53Z",
        "closed_at": "2023-07-01T16:46:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6802",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6802",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6802.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6802.patch",
            "merged_at": "2023-07-01T16:46:52Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6802/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6802/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6801",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6801/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6801/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6801/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6801",
        "id": 1776091677,
        "node_id": "PR_kwDOIPDwls5T_UyR",
        "number": 6801,
        "title": "Updated QA notebook",
        "user": {
            "login": "HashemAlsaket",
            "id": 17466553,
            "node_id": "MDQ6VXNlcjE3NDY2NTUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/17466553?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HashemAlsaket",
            "html_url": "https://github.com/HashemAlsaket",
            "followers_url": "https://api.github.com/users/HashemAlsaket/followers",
            "following_url": "https://api.github.com/users/HashemAlsaket/following{/other_user}",
            "gists_url": "https://api.github.com/users/HashemAlsaket/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HashemAlsaket/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HashemAlsaket/subscriptions",
            "organizations_url": "https://api.github.com/users/HashemAlsaket/orgs",
            "repos_url": "https://api.github.com/users/HashemAlsaket/repos",
            "events_url": "https://api.github.com/users/HashemAlsaket/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HashemAlsaket/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T04:58:09Z",
        "updated_at": "2023-06-29T22:54:59Z",
        "closed_at": "2023-06-29T22:41:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6801",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6801",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6801.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6801.patch",
            "merged_at": "2023-06-29T22:41:54Z"
        },
        "body": "Description: `all_metadatas` was not defined, `OpenAIEmbeddings` was not imported, \r\nIssue: #6723 the issue # it fixes (if applicable),\r\nDependencies: lark,\r\nTag maintainer: @vowelparrot , @dev2049 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6801/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6799",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6799/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6799/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6799/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6799",
        "id": 1776068456,
        "node_id": "PR_kwDOIPDwls5T_P7D",
        "number": 6799,
        "title": "Clean up agent trajectory interface",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T04:26:39Z",
        "updated_at": "2023-06-27T05:54:05Z",
        "closed_at": "2023-06-27T05:54:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6799",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6799",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6799.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6799.patch",
            "merged_at": "2023-06-27T05:54:04Z"
        },
        "body": "- Enable reference\r\n- Enable not specifying tools at the start\r\n- Add methods with keywords",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6799/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6799/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6798",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6798/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6798/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6798/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6798",
        "id": 1776011952,
        "node_id": "PR_kwDOIPDwls5T_EDu",
        "number": 6798,
        "title": "Adjusted OpenAI cost calculation",
        "user": {
            "login": "neilneuwirth",
            "id": 7329687,
            "node_id": "MDQ6VXNlcjczMjk2ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7329687?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neilneuwirth",
            "html_url": "https://github.com/neilneuwirth",
            "followers_url": "https://api.github.com/users/neilneuwirth/followers",
            "following_url": "https://api.github.com/users/neilneuwirth/following{/other_user}",
            "gists_url": "https://api.github.com/users/neilneuwirth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neilneuwirth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neilneuwirth/subscriptions",
            "organizations_url": "https://api.github.com/users/neilneuwirth/orgs",
            "repos_url": "https://api.github.com/users/neilneuwirth/repos",
            "events_url": "https://api.github.com/users/neilneuwirth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neilneuwirth/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T03:09:45Z",
        "updated_at": "2023-06-27T23:53:07Z",
        "closed_at": "2023-06-27T23:53:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6798",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6798",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6798.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6798.patch",
            "merged_at": "2023-06-27T23:53:06Z"
        },
        "body": "Added parentheses to ensure the division operation is performed before multiplication. This now correctly calculates the cost by dividing the number of tokens by 1000 first (to get the cost per token), and then multiplies it with the model's cost per 1k tokens @agola11 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6798/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6798/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6797",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6797/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6797/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6797/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6797",
        "id": 1775980014,
        "node_id": "PR_kwDOIPDwls5T-9gK",
        "number": 6797,
        "title": "Intermediate combine results in output of BaseConversationalRetrievalChain",
        "user": {
            "login": "vishalsrao",
            "id": 36671559,
            "node_id": "MDQ6VXNlcjM2NjcxNTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/36671559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishalsrao",
            "html_url": "https://github.com/vishalsrao",
            "followers_url": "https://api.github.com/users/vishalsrao/followers",
            "following_url": "https://api.github.com/users/vishalsrao/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishalsrao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishalsrao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishalsrao/subscriptions",
            "organizations_url": "https://api.github.com/users/vishalsrao/orgs",
            "repos_url": "https://api.github.com/users/vishalsrao/repos",
            "events_url": "https://api.github.com/users/vishalsrao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishalsrao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-27T02:32:46Z",
        "updated_at": "2023-11-07T03:55:06Z",
        "closed_at": "2023-11-07T03:55:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6797",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6797",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6797.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6797.patch",
            "merged_at": null
        },
        "body": "Add intermediate_steps from combine_docs_chain's results to the output of BaseConversationalRetrievalChain when combine_docs_chain.return_intermediate_steps is True. This can help while debugging and in some subsequent analyses.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6797/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6797/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6796",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6796/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6796/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6796/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6796",
        "id": 1775965146,
        "node_id": "PR_kwDOIPDwls5T-6gz",
        "number": 6796,
        "title": "docs: vectorstore upgrades 2",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T02:10:49Z",
        "updated_at": "2023-06-27T15:38:42Z",
        "closed_at": "2023-06-27T05:55:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6796",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6796",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6796.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6796.patch",
            "merged_at": "2023-06-27T05:55:05Z"
        },
        "body": "updated vectorstores/ notebooks; added new integrations into ecosystem/integrations/\r\n@dev2049\r\n@rlancemartin, @eyurtsev\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6796/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6796/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6795",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6795/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6795/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6795/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6795",
        "id": 1775936801,
        "node_id": "I_kwDOIPDwls5p2qUh",
        "number": 6795,
        "title": "Source info in map_rerank's answer",
        "user": {
            "login": "vishalsrao",
            "id": 36671559,
            "node_id": "MDQ6VXNlcjM2NjcxNTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/36671559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishalsrao",
            "html_url": "https://github.com/vishalsrao",
            "followers_url": "https://api.github.com/users/vishalsrao/followers",
            "following_url": "https://api.github.com/users/vishalsrao/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishalsrao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishalsrao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishalsrao/subscriptions",
            "organizations_url": "https://api.github.com/users/vishalsrao/orgs",
            "repos_url": "https://api.github.com/users/vishalsrao/repos",
            "events_url": "https://api.github.com/users/vishalsrao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishalsrao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T01:33:01Z",
        "updated_at": "2023-10-05T16:07:51Z",
        "closed_at": "2023-10-05T16:07:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nHave SOURCES info in map_rerank's answer similar to the information available for 'map_reduce' and 'stuff' chain_type options.\r\n\r\n### Motivation\r\n\r\nStandardization of output\r\nIndicate answer source when map-rerank is used with ConversationalRetrievalChain\r\n\r\n### Your contribution\r\n\r\nhttps://github.com/hwchase17/langchain/pull/6794",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6795/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6795/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6794",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6794/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6794/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6794/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6794",
        "id": 1775936560,
        "node_id": "PR_kwDOIPDwls5T-0gE",
        "number": 6794,
        "title": "Source info in map_rerank's answer",
        "user": {
            "login": "vishalsrao",
            "id": 36671559,
            "node_id": "MDQ6VXNlcjM2NjcxNTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/36671559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishalsrao",
            "html_url": "https://github.com/vishalsrao",
            "followers_url": "https://api.github.com/users/vishalsrao/followers",
            "following_url": "https://api.github.com/users/vishalsrao/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishalsrao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishalsrao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishalsrao/subscriptions",
            "organizations_url": "https://api.github.com/users/vishalsrao/orgs",
            "repos_url": "https://api.github.com/users/vishalsrao/repos",
            "events_url": "https://api.github.com/users/vishalsrao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishalsrao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-27T01:32:37Z",
        "updated_at": "2023-11-07T03:55:24Z",
        "closed_at": "2023-11-07T03:55:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6794",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6794",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6794.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6794.patch",
            "merged_at": null
        },
        "body": "Have SOURCES info in map_rerank's answer similar to the information available for 'map_reduce' and 'stuff' chain_type options.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6794/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6794/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6793",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6793/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6793/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6793/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6793",
        "id": 1775913567,
        "node_id": "I_kwDOIPDwls5p2kpf",
        "number": 6793,
        "title": "Azure rejects tokens sent by OpenAIEmbeddings, expects strings",
        "user": {
            "login": "billsanto",
            "id": 4108940,
            "node_id": "MDQ6VXNlcjQxMDg5NDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4108940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/billsanto",
            "html_url": "https://github.com/billsanto",
            "followers_url": "https://api.github.com/users/billsanto/followers",
            "following_url": "https://api.github.com/users/billsanto/following{/other_user}",
            "gists_url": "https://api.github.com/users/billsanto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/billsanto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/billsanto/subscriptions",
            "organizations_url": "https://api.github.com/users/billsanto/orgs",
            "repos_url": "https://api.github.com/users/billsanto/repos",
            "events_url": "https://api.github.com/users/billsanto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/billsanto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T01:01:39Z",
        "updated_at": "2023-09-26T16:09:43Z",
        "closed_at": "2023-09-26T16:09:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain .216, OS X 11.6, Python 3.11.\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Setup OpenAIEmbeddings method with Azure arguments\r\n2. Split text with a splitter like RecursiveCharacterTextSplitter\r\n3. Use text and embedding function in chroma.from_texts\r\n\r\n```python\r\nimport openai\r\nimport os\r\nfrom dotenv import load_dotenv, find_dotenv\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\nfrom langchain.vectorstores import Chroma\r\n\r\n_ = load_dotenv(find_dotenv())\r\n\r\nAPI_KEY = os.environ.get('STAGE_API_KEY')\r\nAPI_VERSION = os.environ.get('API_VERSION')\r\nRESOURCE_ENDPOINT = os.environ.get('RESOURCE_ENDPOINT')\r\n\r\nopenai.api_type = \"azure\"\r\nopenai.api_key = API_KEY\r\nopenai.api_base = RESOURCE_ENDPOINT\r\nopenai.api_version = API_VERSION\r\nopenai.log = \"debug\"\r\n\r\nsample_text = 'This metabolite causes atherosclerosis in the liver[55]. Strengths and limitations This is the first thorough bibliometric analysis of nutrition and gut microbiota research conducted on a global level.'\r\n\r\nembed_deployment_id = 'text-embedding-ada-002'\r\nembed_model = 'text-embedding-ada-002'\r\n\r\npersist_directory = \"./storage_openai_chunks\"  # will be created if not existing\r\n\r\nembeddings = OpenAIEmbeddings(\r\n    deployment=embed_deployment_id,\r\n    model=embed_model,\r\n    openai_api_key=API_KEY,\r\n    openai_api_base=RESOURCE_ENDPOINT,\r\n    openai_api_type=\"azure\",\r\n    openai_api_version=API_VERSION,\r\n)\r\n\r\ntext_splitter = RecursiveCharacterTextSplitter(chunk_size=40, chunk_overlap=10)\r\ntexts = text_splitter.split_text(sample_text)\r\n\r\nvectordb = Chroma.from_texts(collection_name='test40',\r\n                             texts=texts,\r\n                             embedding=embeddings,\r\n                             persist_directory=persist_directory)\r\n\r\nvectordb.persist()\r\nprint(vectordb.get())\r\n\r\nmessage='Request to OpenAI API' method=post path=https://***/openai/deployments/text-embedding-ada-002/embeddings?api-version=2023-05-15\r\napi_version=2023-05-15 data='{\"input\": [[2028, 28168, 635, 11384, 264, 91882, 91711], [258, 279, 26587, 58, 2131, 948, 32937, 82, 323], [438, 9669, 1115, 374, 279, 1176], [1820, 1176, 17879, 44615, 24264], [35584, 315, 26677, 323, 18340], [438, 18340, 53499, 6217, 3495, 13375], [444, 55015, 389, 264, 3728, 2237, 13]], \"encoding_format\": \"base64\"}' message='Post details'\r\nmessage='OpenAI API response' path=https://***/openai/deployments/text-embedding-ada-002/embeddings?api-version=2023-05-15 processing_ms=None request_id=None response_code=400\r\nbody='{\\n  \"error\": \"/input/6 expected type: String, found: JSONArray\\\\n/input/5 expected type: String, found: JSONArray\\\\n/input/4 expected type: String, found: JSONArray\\\\n/input/3 expected type: String, found: JSONArray\\\\n/input/2 expected type: String, found: JSONArray\\\\n/input/1 expected type: String, found: JSONArray\\\\n/input/0 expected type: String, found: JSONArray\\\\n/input expected: null, found: JSONArray\\\\n/input expected type: String, found: JSONArray\"\\n}' headers=\"{'Date': 'Tue, 27 Jun 2023 00:08:56 GMT', 'Content-Type': 'application/json; charset=UTF-8', 'Content-Length': '454', 'Connection': 'keep-alive', 'Strict-Transport-Security': 'max-age=16070400; includeSubDomains', 'Set-Cookie': 'TS01bd4155=0179bf738063e38fbf3fffb70b7f9705fd626c2df1126f29599084aa69d137b77c61d6377a118a5ebe5a1f1f9f314c22a777a0e861; Path=/; Domain=.***', 'Vary': 'Accept-Encoding'}\" message='API response body'\r\nTraceback (most recent call last):\r\n  File \"/Users/A/dev/python/openai/langchain_embed_issue.py\", line 39, in <module>\r\n    vectordb = Chroma.from_texts(collection_name='test40',\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/langchain/vectorstores/chroma.py\", line 403, in from_texts\r\n    chroma_collection.add_texts(texts=texts, metadatas=metadatas, ids=ids)\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/langchain/vectorstores/chroma.py\", line 148, in add_texts\r\n    embeddings = self._embedding_function.embed_documents(list(texts))\r\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/langchain/embeddings/openai.py\", line 465, in embed_documents\r\n    return self._get_len_safe_embeddings(texts, engine=self.deployment)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/langchain/embeddings/openai.py\", line 302, in _get_len_safe_embeddings\r\n    response = embed_with_retry(\r\n               ^^^^^^^^^^^^^^^^^\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/langchain/embeddings/openai.py\", line 97, in embed_with_retry\r\n    return _embed_with_retry(**kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/tenacity/__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/tenacity/__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/tenacity/__init__.py\", line 314, in iter\r\n    return fut.result()\r\n           ^^^^^^^^^^^^\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/concurrent/futures/_base.py\", line 449, in result\r\n    return self.__get_result()\r\n           ^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/concurrent/futures/_base.py\", line 401, in __get_result\r\n    raise self._exception\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/tenacity/__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/langchain/embeddings/openai.py\", line 95, in _embed_with_retry\r\n    return embeddings.client.create(**kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/openai/api_resources/embedding.py\", line 33, in create\r\n    response = super().create(*args, **kwargs)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 153, in create\r\n    response, _, api_key = requestor.request(\r\n                           ^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/openai/api_requestor.py\", line 298, in request\r\n    resp, got_stream = self._interpret_response(result, stream)\r\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/openai/api_requestor.py\", line 700, in _interpret_response\r\n    self._interpret_response_line(\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/openai/api_requestor.py\", line 763, in _interpret_response_line\r\n    raise self.handle_error_response(\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/A/anaconda3/envs/openai1/lib/python3.11/site-packages/openai/api_requestor.py\", line 418, in handle_error_response\r\n    error_code=error_data.get(\"code\"),\r\n               ^^^^^^^^^^^^^^\r\nAttributeError: 'str' object has no attribute 'get'\r\n\r\nProcess finished with exit code 1\r\n\r\n```\r\n\n\n### Expected behavior\n\nOpenAIEmbeddings should return embeddings instead of an error. \r\n\r\nBecause Azure currently only accepts str input, in contrast to OpenAI which accepts tokens or strings, the input is rejected because OpenAIEmbeddings sends tokens only. Azure embedding API docs confirm this, where the request body input parameter is of type string: https://learn.microsoft.com/en-us/azure/cognitive-services/openai/reference#embeddings\r\n\r\nSecond, after modifying openai.py to send strings, Azure complains that it currently accepts one input at a time--in other words, it doesn't accept batches of strings (or even tokens if it accepted tokens). So the for loop increment was modified to send one decoded batch of tokens (in other words, the original str chunk) at a time.\r\n\r\n\r\nModifying embeddings/openai.py with:\r\n```python\r\n        # batched_embeddings = []\r\n        # _chunk_size = chunk_size or self.chunk_size\r\n        # for i in range(0, len(tokens), _chunk_size):\r\n        #     response = embed_with_retry(\r\n        #         self,\r\n        #         input=tokens[i : i + _chunk_size],\r\n        #         **self._invocation_params,\r\n        #     )\r\n        #     batched_embeddings += [r[\"embedding\"] for r in response[\"data\"]]\r\n\r\n        batched_embeddings = []\r\n        _chunk_size = chunk_size or self.chunk_size if 'azure' not in self.openai_api_type else 1\r\n        # \r\n        # \r\n        for i in range(0, len(tokens), _chunk_size):\r\n            embed_input = encoding.decode(tokens[i]) if 'azure' in self.openai_api_type else tokens[i : i + _chunk_size]\r\n            response = embed_with_retry(\r\n                self,\r\n                input=embed_input,\r\n                **self._invocation_params,\r\n            )\r\n            batched_embeddings += [r[\"embedding\"] for r in response[\"data\"]]\r\n```\r\n\r\nand re-running the code:\r\n\r\n```text\r\n# same code\r\n...\r\nmessage='Request to OpenAI API' method=post path=https://***/openai/deployments/text-embedding-ada-002/embeddings?api-version=2023-05-15\r\napi_version=2023-05-15 data='{\"input\": \"This metabolite causes atherosclerosis\", \"encoding_format\": \"base64\"}' message='Post details'\r\nmessage='OpenAI API response' path=https://***/openai/deployments/text-embedding-ada-002/embeddings?api-version=2023-05-15 processing_ms=27.0109 request_id=47bee143-cb00-4782-8560-f267ee839af4 response_code=200\r\nbody='{\\n  \"object\": \"list\",\\n  \"data\": [\\n    {\\n      \"object\": \"embedding\",\\n      \"index\": 0,\\n      \"embedding\": \"5zPWu+V2e7w75Ia7HeCavKhhE71NQhA865WYvE+Y9DuB8ce8Xak7uhgQgble4z48H8L4uyePnzu2XVq8ucg+u7ZdWj28ofq7Jzd6PMFMkbvQiIq8nbuwPFJMLTxGe5i83c2lPIXQsjzPToc8taB/vZlZ7ryVjwM8jsiLPIvLfrywnBG9RjLEO2XkuTpOMz\r\n\r\n... (removed for brevity)\r\n\r\n/gP7uzTTC8RZf5PMOULTv2D4C7caQfvR60EbyqjZ48yqxUuzHeLzhSFJW8qDu5uwcj7zyeDnO8UMKvPNLEezxNixm6X7U3vBeDqzumrI08jzQqPDZObLzZS2c843itO9a+y7w+mJG8gChjPAIHqLqEeLg6ysUTvfqaizzT2yo77Di/u3A3azyziva8ct9VvI80Kry1n5U7ipJvvHy2FjuAQSK9\"\\n    }\\n  ],\\n  \"model\": \"ada\",\\n  \"usage\": {\\n    \"prompt_tokens\": 7,\\n    \"total_tokens\": 7\\n  }\\n}\\n' headers=\"{'Date': 'Tue, 27 Jun 2023 00:20:13 GMT', 'Content-Type': 'application/json', 'Content-Length': '8395', 'Connection': 'keep-alive', 'x-ms-region': 'East US', 'apim-request-id': 'b932333d-1eb9-415a-a84b-da1c5f95433b', 'x-content-type-options': 'nosniff, nosniff', 'openai-processing-ms': '26.8461', 'access-control-allow-origin': '*', 'x-request-id': '0677d084-2449-486c-9bff-b6ef07df004f', 'x-ms-client-request-id': 'b932333d-1eb9-415a-a84b-da1c5f95433b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload, max-age=16070400; includeSubDomains', 'X-Frame-Options': 'SAMEORIGIN', 'X-XSS-Protection': '1; mode=block'}\" message='API response body'\r\n{'ids': ['60336172-1480-11ee-b223-acde48001122', '6033621c-1480-11ee-b223-acde48001122', '60336280-1480-11ee-b223-acde48001122', '603362b2-1480-11ee-b223-acde48001122', '603362da-1480-11ee-b223-acde48001122', '603362f8-1480-11ee-b223-acde48001122', '60336370-1480-11ee-b223-acde48001122'], 'embeddings': None, 'documents': ['This metabolite causes atherosclerosis', 'in the liver[55]. Strengths and', 'and limitations This is the first', 'the first thorough bibliometric', 'analysis of nutrition and gut', 'and gut microbiota research conducted', 'conducted on a global level.'], 'metadatas': [None, None, None, None, None, None, None]}\r\n```\r\n\r\nAlso made the following change to openai.py a few lines later, although this is untested:\r\n```python\r\n        batched_embeddings = []\r\n        _chunk_size = chunk_size or self.chunk_size if 'azure' not in self.openai_api_type else 1\r\n        # azure only accepts str input, currently one list element at a time\r\n        for i in range(0, len(tokens), _chunk_size):\r\n            embed_input = encoding.decode(tokens[i]) if 'azure' in self.openai_api_type else tokens[i : i + _chunk_size]\r\n            response = await async_embed_with_retry(\r\n                self,\r\n                input=embed_input,\r\n                **self._invocation_params,\r\n            )\r\n            batched_embeddings += [r[\"embedding\"] for r in response[\"data\"]]\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6793/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6793/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6792",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6792/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6792/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6792/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6792",
        "id": 1775908191,
        "node_id": "PR_kwDOIPDwls5T-ubv",
        "number": 6792,
        "title": "Web Loader: Add proxy support",
        "user": {
            "login": "timothyasp",
            "id": 707699,
            "node_id": "MDQ6VXNlcjcwNzY5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/707699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timothyasp",
            "html_url": "https://github.com/timothyasp",
            "followers_url": "https://api.github.com/users/timothyasp/followers",
            "following_url": "https://api.github.com/users/timothyasp/following{/other_user}",
            "gists_url": "https://api.github.com/users/timothyasp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timothyasp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timothyasp/subscriptions",
            "organizations_url": "https://api.github.com/users/timothyasp/orgs",
            "repos_url": "https://api.github.com/users/timothyasp/repos",
            "events_url": "https://api.github.com/users/timothyasp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timothyasp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T00:56:24Z",
        "updated_at": "2023-06-28T05:27:50Z",
        "closed_at": "2023-06-28T05:27:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6792",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6792",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6792.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6792.patch",
            "merged_at": "2023-06-28T05:27:50Z"
        },
        "body": "Proxies are helpful, especially when you start querying against more anti-bot websites.\r\n\r\n[Proxy services](https://developers.oxylabs.io/advanced-proxy-solutions/web-unblocker/making-requests) (of which there are many) and `requests` make it easy to rotate IPs to prevent banning by just passing along a simple dict to `requests`.\r\n\r\nCC @rlancemartin, @eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6792/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6792/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6791",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6791/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6791/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6791/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6791",
        "id": 1775866961,
        "node_id": "PR_kwDOIPDwls5T-mrB",
        "number": 6791,
        "title": "add async to zapier nla tools",
        "user": {
            "login": "mplachter",
            "id": 15329913,
            "node_id": "MDQ6VXNlcjE1MzI5OTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/15329913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mplachter",
            "html_url": "https://github.com/mplachter",
            "followers_url": "https://api.github.com/users/mplachter/followers",
            "following_url": "https://api.github.com/users/mplachter/following{/other_user}",
            "gists_url": "https://api.github.com/users/mplachter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mplachter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mplachter/subscriptions",
            "organizations_url": "https://api.github.com/users/mplachter/orgs",
            "repos_url": "https://api.github.com/users/mplachter/repos",
            "events_url": "https://api.github.com/users/mplachter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mplachter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-27T00:06:52Z",
        "updated_at": "2023-06-27T23:53:36Z",
        "closed_at": "2023-06-27T23:53:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6791",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6791",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6791.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6791.patch",
            "merged_at": "2023-06-27T23:53:36Z"
        },
        "body": "Replace this comment with:\r\n  - Description: Add Async functionality to Zapier NLA Tools\r\n  - Issue:  n/a \r\n  - Dependencies: n/a\r\n  - Tag maintainer: \r\n\r\nMaintainer responsibilities:\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6791/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6791/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6790",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6790/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6790/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6790/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6790",
        "id": 1775853066,
        "node_id": "PR_kwDOIPDwls5T-jhe",
        "number": 6790,
        "title": "Docs  /redirects",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T23:54:58Z",
        "updated_at": "2023-06-29T00:07:54Z",
        "closed_at": "2023-06-29T00:07:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6790",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6790",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6790.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6790.patch",
            "merged_at": "2023-06-29T00:07:53Z"
        },
        "body": "Auto-generated a bunch of redirects from initial docs refactor commit",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6790/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6790/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6789",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6789/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6789/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6789/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6789",
        "id": 1775849655,
        "node_id": "PR_kwDOIPDwls5T-iy4",
        "number": 6789,
        "title": "Change Dep Name",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T23:48:50Z",
        "updated_at": "2023-07-12T06:49:50Z",
        "closed_at": "2023-07-12T06:49:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6789",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6789",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6789.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6789.patch",
            "merged_at": null
        },
        "body": "- [X] Change dependency to langsmith\r\n- [ ] Add langsmith to conda forge\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6789/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6789/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6788",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6788/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6788/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6788/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6788",
        "id": 1775840372,
        "node_id": "PR_kwDOIPDwls5T-g2c",
        "number": 6788,
        "title": "Initial Streamlit callback integration doc (md)",
        "user": {
            "login": "sfc-gh-jcarroll",
            "id": 116604821,
            "node_id": "U_kgDOBvM_lQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/116604821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sfc-gh-jcarroll",
            "html_url": "https://github.com/sfc-gh-jcarroll",
            "followers_url": "https://api.github.com/users/sfc-gh-jcarroll/followers",
            "following_url": "https://api.github.com/users/sfc-gh-jcarroll/following{/other_user}",
            "gists_url": "https://api.github.com/users/sfc-gh-jcarroll/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sfc-gh-jcarroll/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sfc-gh-jcarroll/subscriptions",
            "organizations_url": "https://api.github.com/users/sfc-gh-jcarroll/orgs",
            "repos_url": "https://api.github.com/users/sfc-gh-jcarroll/repos",
            "events_url": "https://api.github.com/users/sfc-gh-jcarroll/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sfc-gh-jcarroll/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T23:33:43Z",
        "updated_at": "2023-06-27T18:43:50Z",
        "closed_at": "2023-06-27T18:43:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6788",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6788",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6788.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6788.patch",
            "merged_at": "2023-06-27T18:43:49Z"
        },
        "body": "**Description:** Add a documentation page for the Streamlit Callback Handler integration (#6315)\r\n\r\nNotes:\r\n- Implemented as a markdown file instead of a notebook since example code runs in a Streamlit app (happy to discuss / consider alternatives now or later)\r\n- Contains an embedded Streamlit app -> https://mrkl-minimal.streamlit.app/ Currently this app is hosted out of a Streamlit repo but we're working to migrate the code to a LangChain owned repo\r\n\r\n![streamlit_docs](https://github.com/hwchase17/langchain/assets/116604821/0b7a6239-361f-470c-8539-f22c40098d1a)\r\n\r\ncc @dev2049 @tconkling \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6788/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6788/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6787",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6787/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6787/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6787/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6787",
        "id": 1775835842,
        "node_id": "PR_kwDOIPDwls5T-f50",
        "number": 6787,
        "title": "`RecusiveUrlLoader` to `RecursiveUrlLoader`",
        "user": {
            "login": "waseemhnyc",
            "id": 16570741,
            "node_id": "MDQ6VXNlcjE2NTcwNzQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16570741?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/waseemhnyc",
            "html_url": "https://github.com/waseemhnyc",
            "followers_url": "https://api.github.com/users/waseemhnyc/followers",
            "following_url": "https://api.github.com/users/waseemhnyc/following{/other_user}",
            "gists_url": "https://api.github.com/users/waseemhnyc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/waseemhnyc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/waseemhnyc/subscriptions",
            "organizations_url": "https://api.github.com/users/waseemhnyc/orgs",
            "repos_url": "https://api.github.com/users/waseemhnyc/repos",
            "events_url": "https://api.github.com/users/waseemhnyc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/waseemhnyc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-26T23:25:42Z",
        "updated_at": "2023-06-27T06:12:33Z",
        "closed_at": "2023-06-27T06:12:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6787",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6787",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6787.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6787.patch",
            "merged_at": "2023-06-27T06:12:15Z"
        },
        "body": "Heres my attempt to contribute in a small way haha. \r\nTwitter: https://twitter.com/waseemhnyc Not a big change but if you want to tag me \ud83d\ude05 \r\nDescription: Small spelling error fix\r\nMaintainers: @rlancemartin, @eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6787/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6787/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6786",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6786/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6786/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6786/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6786",
        "id": 1775824298,
        "node_id": "PR_kwDOIPDwls5T-ddn",
        "number": 6786,
        "title": "Rm lcp dep",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T23:10:42Z",
        "updated_at": "2023-08-11T01:25:11Z",
        "closed_at": "2023-08-11T01:25:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6786",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6786",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6786.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6786.patch",
            "merged_at": null
        },
        "body": "- Update to langsmith dependency.\r\n- Make optional with lazy loading",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6786/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6786/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6785",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6785/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6785/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6785/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6785",
        "id": 1775821240,
        "node_id": "PR_kwDOIPDwls5T-cxJ",
        "number": 6785,
        "title": "codespell: workflow, config + some (quite a few) typos fixed",
        "user": {
            "login": "yarikoptic",
            "id": 39889,
            "node_id": "MDQ6VXNlcjM5ODg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/39889?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yarikoptic",
            "html_url": "https://github.com/yarikoptic",
            "followers_url": "https://api.github.com/users/yarikoptic/followers",
            "following_url": "https://api.github.com/users/yarikoptic/following{/other_user}",
            "gists_url": "https://api.github.com/users/yarikoptic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yarikoptic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yarikoptic/subscriptions",
            "organizations_url": "https://api.github.com/users/yarikoptic/orgs",
            "repos_url": "https://api.github.com/users/yarikoptic/repos",
            "events_url": "https://api.github.com/users/yarikoptic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yarikoptic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-26T23:07:51Z",
        "updated_at": "2023-07-12T20:20:23Z",
        "closed_at": "2023-07-12T20:20:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6785",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6785",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6785.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6785.patch",
            "merged_at": "2023-07-12T20:20:08Z"
        },
        "body": "Probably the most  boring PR to review ;)\r\n\r\nIndividual commits might be easier to digest",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6785/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6785/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6784",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6784/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6784/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6784/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6784",
        "id": 1775737656,
        "node_id": "PR_kwDOIPDwls5T-JzI",
        "number": 6784,
        "title": "Update arize_callback.py - bug fix",
        "user": {
            "login": "hakantekgul",
            "id": 14350521,
            "node_id": "MDQ6VXNlcjE0MzUwNTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/14350521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hakantekgul",
            "html_url": "https://github.com/hakantekgul",
            "followers_url": "https://api.github.com/users/hakantekgul/followers",
            "following_url": "https://api.github.com/users/hakantekgul/following{/other_user}",
            "gists_url": "https://api.github.com/users/hakantekgul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hakantekgul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hakantekgul/subscriptions",
            "organizations_url": "https://api.github.com/users/hakantekgul/orgs",
            "repos_url": "https://api.github.com/users/hakantekgul/repos",
            "events_url": "https://api.github.com/users/hakantekgul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hakantekgul/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T22:02:27Z",
        "updated_at": "2023-06-26T23:49:47Z",
        "closed_at": "2023-06-26T23:49:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6784",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6784",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6784.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6784.patch",
            "merged_at": "2023-06-26T23:49:46Z"
        },
        "body": "  - Description: Bug Fix - Added a step variable to keep track of prompts\r\n  - Issue: Bug from internal Arize testing - The prompts and responses that are ingested were not mapped correctly\r\n  - Dependencies: N/A\r\n\r\n @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6784/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6784/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6783",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6783/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6783/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6783/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6783",
        "id": 1775640402,
        "node_id": "PR_kwDOIPDwls5T94Iu",
        "number": 6783,
        "title": "docstrings: `docstore` and `client`",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-26T21:20:54Z",
        "updated_at": "2023-07-09T14:34:23Z",
        "closed_at": "2023-07-09T05:34:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6783",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6783",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6783.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6783.patch",
            "merged_at": "2023-07-09T05:34:28Z"
        },
        "body": "updated docstrings in `docstore/` and `client/`\r\n\r\n@baskaryan \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6783/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6783/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6782",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6782/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6782/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6782/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6782",
        "id": 1775578476,
        "node_id": "PR_kwDOIPDwls5T9qLp",
        "number": 6782,
        "title": "Add support for passing headers and search params to openai openapi chain",
        "user": {
            "login": "homanp",
            "id": 2464556,
            "node_id": "MDQ6VXNlcjI0NjQ1NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2464556?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/homanp",
            "html_url": "https://github.com/homanp",
            "followers_url": "https://api.github.com/users/homanp/followers",
            "following_url": "https://api.github.com/users/homanp/following{/other_user}",
            "gists_url": "https://api.github.com/users/homanp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/homanp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/homanp/subscriptions",
            "organizations_url": "https://api.github.com/users/homanp/orgs",
            "repos_url": "https://api.github.com/users/homanp/repos",
            "events_url": "https://api.github.com/users/homanp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/homanp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-26T20:42:28Z",
        "updated_at": "2023-07-04T12:06:50Z",
        "closed_at": "2023-06-27T16:09:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6782",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6782",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6782.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6782.patch",
            "merged_at": "2023-06-27T16:09:03Z"
        },
        "body": "  - Description: add support for passing headers and search params to OpenAI OpenAPI chains. \r\n  - Issue: n/a\r\n  - Dependencies: n/a\r\n  - Tag maintainer: @hwchase17\r\n  - Twitter handle: @pelaseyed\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6782/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6782/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6781",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6781/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6781/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6781/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6781",
        "id": 1775520750,
        "node_id": "PR_kwDOIPDwls5T9dWL",
        "number": 6781,
        "title": "Docs/unstructured api key",
        "user": {
            "login": "MthwRobinson",
            "id": 1635179,
            "node_id": "MDQ6VXNlcjE2MzUxNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1635179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MthwRobinson",
            "html_url": "https://github.com/MthwRobinson",
            "followers_url": "https://api.github.com/users/MthwRobinson/followers",
            "following_url": "https://api.github.com/users/MthwRobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/MthwRobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MthwRobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MthwRobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/MthwRobinson/orgs",
            "repos_url": "https://api.github.com/users/MthwRobinson/repos",
            "events_url": "https://api.github.com/users/MthwRobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MthwRobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T20:07:59Z",
        "updated_at": "2023-06-27T23:54:16Z",
        "closed_at": "2023-06-27T23:54:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6781",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6781",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6781.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6781.patch",
            "merged_at": "2023-06-27T23:54:15Z"
        },
        "body": "### Summary\r\n\r\nThe Unstructured API will soon begin requiring API keys. This PR updates the Unstructured integrations docs with instructions on how to generate Unstructured API keys.\r\n\r\n### Reviewers\r\n\r\n@rlancemartin\r\n@eyurtsev\r\n@hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6781/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6781/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6780",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6780/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6780/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6780/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6780",
        "id": 1775519913,
        "node_id": "PR_kwDOIPDwls5T9dJw",
        "number": 6780,
        "title": "Zapier update oauth support",
        "user": {
            "login": "ralewis85",
            "id": 3906177,
            "node_id": "MDQ6VXNlcjM5MDYxNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3906177?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ralewis85",
            "html_url": "https://github.com/ralewis85",
            "followers_url": "https://api.github.com/users/ralewis85/followers",
            "following_url": "https://api.github.com/users/ralewis85/following{/other_user}",
            "gists_url": "https://api.github.com/users/ralewis85/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ralewis85/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ralewis85/subscriptions",
            "organizations_url": "https://api.github.com/users/ralewis85/orgs",
            "repos_url": "https://api.github.com/users/ralewis85/repos",
            "events_url": "https://api.github.com/users/ralewis85/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ralewis85/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T20:07:38Z",
        "updated_at": "2023-06-27T18:46:33Z",
        "closed_at": "2023-06-27T18:46:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6780",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6780",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6780.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6780.patch",
            "merged_at": "2023-06-27T18:46:33Z"
        },
        "body": "Description: Update documentation to\r\n\r\n1) point to updated documentation links at Zapier.com (we've revamped our help docs and paths), and\r\n2) To provide clarity how to use the wrapper with an access token for OAuth support\r\n\r\nDemo:\r\n\r\nInitializing the Zapier Wrapper with an OAuth Access Token\r\n\r\n`ZapierNLAWrapper(zapier_nla_oauth_access_token=\"<redacted>\")`\r\n\r\nUsing LangChain to resolve the current weather in Vancouver BC leveraging Zapier NLA to lookup weather by coords.\r\n\r\n```\r\n> Entering new  chain...\r\n I need to use a tool to get the current weather.\r\nAction: The Weather: Get Current Weather\r\nAction Input: Get the current weather for Vancouver BC\r\nObservation: {\"coord__lon\": -123.1207, \"coord__lat\": 49.2827, \"weather\": [{\"id\": 802, \"main\": \"Clouds\", \"description\": \"scattered clouds\", \"icon\": \"03d\", \"icon_url\": \"http://openweathermap.org/img/wn/03d@2x.png\"}], \"weather[]icon_url\": [\"http://openweathermap.org/img/wn/03d@2x.png\"], \"weather[]icon\": [\"03d\"], \"weather[]id\": [802], \"weather[]description\": [\"scattered clouds\"], \"weather[]main\": [\"Clouds\"], \"base\": \"stations\", \"main__temp\": 71.69, \"main__feels_like\": 71.56, \"main__temp_min\": 67.64, \"main__temp_max\": 76.39, \"main__pressure\": 1015, \"main__humidity\": 64, \"visibility\": 10000, \"wind__speed\": 3, \"wind__deg\": 155, \"wind__gust\": 11.01, \"clouds__all\": 41, \"dt\": 1687806607, \"sys__type\": 2, \"sys__id\": 2011597, \"sys__country\": \"CA\", \"sys__sunrise\": 1687781297, \"sys__sunset\": 1687839730, \"timezone\": -25200, \"id\": 6173331, \"name\": \"Vancouver\", \"cod\": 200, \"summary\": \"scattered clouds\", \"_zap_search_was_found_status\": true}\r\nThought: I now know the current weather in Vancouver BC.\r\nFinal Answer: The current weather in Vancouver BC is scattered clouds with a temperature of 71.69 and wind speed of 3\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6780/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6780/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6779",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6779/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6779/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6779/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6779",
        "id": 1775480124,
        "node_id": "I_kwDOIPDwls5p0608",
        "number": 6779,
        "title": "Request to Support other VertexAI's LLM model Support",
        "user": {
            "login": "techwithshadab",
            "id": 10863620,
            "node_id": "MDQ6VXNlcjEwODYzNjIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10863620?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/techwithshadab",
            "html_url": "https://github.com/techwithshadab",
            "followers_url": "https://api.github.com/users/techwithshadab/followers",
            "following_url": "https://api.github.com/users/techwithshadab/following{/other_user}",
            "gists_url": "https://api.github.com/users/techwithshadab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/techwithshadab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/techwithshadab/subscriptions",
            "organizations_url": "https://api.github.com/users/techwithshadab/orgs",
            "repos_url": "https://api.github.com/users/techwithshadab/repos",
            "events_url": "https://api.github.com/users/techwithshadab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/techwithshadab/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-26T19:48:47Z",
        "updated_at": "2023-12-06T18:49:00Z",
        "closed_at": "2023-06-26T23:51:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nRight now only `text-bison` model is support by Google PaLM. When tried `code-bison` its throwing below error:\r\n```\r\n---------------------------------------------------------------------------\r\nValidationError                           Traceback (most recent call last)\r\nCell In[39], line 1\r\n----> 1 llm = VertexAI(model_name='code-bison')\r\n\r\nFile /opt/conda/envs/python310/lib/python3.10/site-packages/pydantic/main.py:341, in pydantic.main.BaseModel.__init__()\r\n\r\nValidationError: 1 validation error for VertexAI\r\n__root__\r\n  Unknown model publishers/google/models/code-bison; {'gs://google-cloud-aiplatform/schema/predict/instance/text_generation_1.0.0.yaml': <class 'vertexai.language_models._language_models._PreviewTextGenerationModel'>} (type=value_error)\r\n```\r\n\r\nCan we get other model supports as well?\n\n### Motivation\n\nSupport for many other PaLM models\n\n### Your contribution\n\nI can update and test the code for different other models",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6779/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6779/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6778",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6778/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6778/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6778/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6778",
        "id": 1775453879,
        "node_id": "I_kwDOIPDwls5p00a3",
        "number": 6778,
        "title": "Verbose flag not outputting anything other than Entering chain and Finished chain",
        "user": {
            "login": "georgeherby",
            "id": 21989833,
            "node_id": "MDQ6VXNlcjIxOTg5ODMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/21989833?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/georgeherby",
            "html_url": "https://github.com/georgeherby",
            "followers_url": "https://api.github.com/users/georgeherby/followers",
            "following_url": "https://api.github.com/users/georgeherby/following{/other_user}",
            "gists_url": "https://api.github.com/users/georgeherby/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/georgeherby/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/georgeherby/subscriptions",
            "organizations_url": "https://api.github.com/users/georgeherby/orgs",
            "repos_url": "https://api.github.com/users/georgeherby/repos",
            "events_url": "https://api.github.com/users/georgeherby/events{/privacy}",
            "received_events_url": "https://api.github.com/users/georgeherby/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-26T19:31:15Z",
        "updated_at": "2023-07-09T13:23:46Z",
        "closed_at": "2023-07-09T13:23:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.216 (I have had this since i started with Langchain (198)\r\npython 3.10\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [x] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI run this function with \r\n\r\n```json\r\n{\r\n \"prompt\": \"some prompt\",\r\n \"temperature\": 0.2\r\n}\r\n```\r\n\r\n```python3\r\n\r\nfrom typing import Any\r\n\r\nfrom langchain.chains import RetrievalQAWithSourcesChain\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.prompts import PromptTemplate\r\n\r\nfrom app.config.api_keys import ApiKeys\r\nfrom app.repositories.pgvector_repository import PGVectorRepository\r\n\r\n\r\ndef completions_service(data) -> dict[str, Any]:\r\n    pgvector = PGVectorRepository().instance\r\n\r\n    tech_template = \"\"\"Some prompt info (redacted)\r\n\r\n        {summaries}\r\n\r\n        Q: {question}\r\n        A: \"\"\"\r\n    prompt_template = PromptTemplate(\r\n        template=tech_template, input_variables=[\"summaries\", \"question\"]\r\n    )\r\n\r\n    qa = RetrievalQAWithSourcesChain.from_chain_type(llm=ChatOpenAI(temperature=data['temperature'],\r\n                                                                    model_name=\"gpt-3.5-turbo\",\r\n                                                                    openai_api_key=ApiKeys.openai),\r\n                                                     chain_type=\"stuff\",\r\n                                                     retriever=pgvector.as_retriever(),\r\n                                                     chain_type_kwargs={\"prompt\": prompt_template},\r\n                                                     return_source_documents=True,\r\n                                                     verbose=True,\r\n                                                     )\r\n\r\n    output = qa({\"question\": data['prompt']})\r\n\r\n    return output\r\n```\r\n\r\nI get this in the command line\r\n```bash\r\n\r\n\r\n> Entering new  chain...\r\n\r\n> Finished chain.\r\n\r\n```\r\n\r\nFor some reason, there is a double space in the Entering line (as if there is meant to be something there) and then nothing until it says finish, I have set verbose = True but not luck\n\n### Expected behavior\n\nI would expect to see the embeddings, the full prompt being sent to openai etc. but I get nothing.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6778/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6778/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6777",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6777/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6777/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6777/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6777",
        "id": 1775450165,
        "node_id": "I_kwDOIPDwls5p0zg1",
        "number": 6777,
        "title": "Functions might not be supported through Azure OpenAI",
        "user": {
            "login": "GaborCC",
            "id": 99658935,
            "node_id": "U_kgDOBfCstw",
            "avatar_url": "https://avatars.githubusercontent.com/u/99658935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GaborCC",
            "html_url": "https://github.com/GaborCC",
            "followers_url": "https://api.github.com/users/GaborCC/followers",
            "following_url": "https://api.github.com/users/GaborCC/following{/other_user}",
            "gists_url": "https://api.github.com/users/GaborCC/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GaborCC/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GaborCC/subscriptions",
            "organizations_url": "https://api.github.com/users/GaborCC/orgs",
            "repos_url": "https://api.github.com/users/GaborCC/repos",
            "events_url": "https://api.github.com/users/GaborCC/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GaborCC/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-06-26T19:28:21Z",
        "updated_at": "2023-10-25T14:30:23Z",
        "closed_at": "2023-06-30T06:51:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nWindows 10\r\n\r\nName: langchain\r\nVersion: 0.0.208\r\nSummary: Building applications with LLMs through composability\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nfrom pydantic import BaseModel, Field\r\n\r\nfrom langchain.chat_models import ChatOpenAI, AzureChatOpenAI\r\nfrom langchain.agents import Tool\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.vectorstores import FAISS\r\nfrom langchain.document_loaders import PyPDFLoader\r\nfrom langchain.chains import RetrievalQA\r\n\r\n\r\n# Here a proper Azure OpenAI service needs to be defined\r\n\r\nOPENAI_API_KEY=\" \"\r\nOPENAI_DEPLOYMENT_ENDPOINT=\"https://gptkbopenai.openai.azure.com/\"\r\n\r\nOPENAI_DEPLOYMENT_NAME = \"gptkbopenai\"\r\nOPENAI_MODEL_NAME = \"GPT4\"\r\n#OPENAI_EMBEDDING_DEPLOYMENT_NAME = os.getenv(\"OPENAI_EMBEDDING_DEPLOYMENT_NAME\")\r\nOPENAI_EMBEDDING_MODEL_NAME = \"text-embedding-ada-002\"\r\nOPENAI_DEPLOYMENT_VERSION = \"2023-03-15-preview\"\r\n\r\nOPENAI_API_TYPE = \"azure\"\r\nOPENAI_API_BASE = \"https://gptkbopenai.openai.azure.com/\"\r\nOPENAI_EMBEDDING_DEPLOYMENT_NAME = \"text-embedding-ada-002\"\r\n\r\nfrom langchain.agents import initialize_agent\r\nfrom langchain.agents import AgentType\r\nfrom langchain.chat_models import AzureChatOpenAI\r\n\r\n\r\nimport os\r\nos.environ[\"OPENAI_API_TYPE\"] = OPENAI_API_TYPE\r\nos.environ[\"OPENAI_API_BASE\"] = OPENAI_API_BASE\r\nos.environ[\"OPENAI_API_KEY\"] = OPENAI_API_KEY\r\nos.environ[\"OPENAI_API_VERSION\"] = \"2023-03-15-preview\"\r\n\r\nimport faiss\r\n\r\n# Code adapted from Langchain document comparison toolkit\r\n\r\nclass DocumentInput(BaseModel):\r\n    question: str = Field()\r\n\r\n\r\n\r\ntools = []\r\nfiles = [\r\n    {\r\n        \"name\": \"belfast\", \r\n        \"path\": \"C:\\\\Users\\\\625050\\\\OneDrive - Clifford Chance LLP\\\\Documents\\\\Projects\\\\ChatGPT\\\\LeaseTest\\\\Belfast.pdf\",\r\n    }, \r\n    {\r\n        \"name\": \"bournemouth\", \r\n        \"path\": \"C:\\\\Users\\\\625050\\\\OneDrive - Clifford Chance LLP\\\\Documents\\\\Projects\\\\ChatGPT\\\\LeaseTest\\\\Bournemouth.pdf\",\r\n    }\r\n]\r\n\r\nllm = AzureChatOpenAI(deployment_name= \"GPT4\")\r\n\r\nfor file in files:\r\n    loader = PyPDFLoader(file[\"path\"])\r\n    pages = loader.load_and_split()\r\n    text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\n    docs = text_splitter.split_documents(pages)\r\n    print(docs[0])\r\n    embeddings = OpenAIEmbeddings(deployment=OPENAI_EMBEDDING_DEPLOYMENT_NAME , chunk_size=1)\r\n\r\n    #embeddings = OpenAIEmbeddings(model='text-embedding-ada-002',\r\n                              #deployment=OPENAI_DEPLOYMENT_NAME,\r\n                              #openai_api_base=OPENAI_DEPLOYMENT_ENDPOINT,\r\n                              #openai_api_type='azure',\r\n                              #openai_api_key= OPENAI_API_KEY,\r\n                              #chunk_size = 1\r\n    #                          )\r\n\r\n    # = OpenAIEmbeddings()\r\n    retriever = FAISS.from_documents(docs, embeddings).as_retriever()\r\n    \r\n    # Wrap retrievers in a Tool\r\n    tools.append(\r\n        Tool(\r\n            args_schema=DocumentInput,\r\n            name=file[\"name\"], \r\n            description=f\"useful when you want to answer questions about {file['name']}\",\r\n            func=RetrievalQA.from_chain_type(llm=llm, retriever=retriever)\r\n        )\r\n    )\r\n    \r\nagent = initialize_agent(\r\n    agent=AgentType.OPENAI_FUNCTIONS,\r\n    tools=tools,\r\n    llm=llm,\r\n    verbose=True,\r\n)\r\n\r\nagent({\"input\": \"Who are the landlords?\"})\r\n\r\nError:\r\nEntering new  chain...\r\n/openai/deployments/GPT4/chat/completions?api-version=2023-03-15-preview None False None None\r\n---------------------------------------------------------------------------\r\nInvalidRequestError                       Traceback (most recent call last)\r\nCell In[5], line 15\r\n      1 #llm = AzureChatOpenAI()#model_kwargs = {'deployment': \"GPT4\"},\r\n      2                       #model_name=OPENAI_MODEL_NAME,\r\n      3                       #openai_api_base=OPENAI_DEPLOYMENT_ENDPOINT,\r\n      4                       #openai_api_version=OPENAI_DEPLOYMENT_VERSION,\r\n      5                       #openai_api_key=OPENAI_API_KEY\r\n      6                       #)\r\n      8 agent = initialize_agent(\r\n      9     agent=AgentType.OPENAI_FUNCTIONS,\r\n     10     tools=tools,\r\n     11     llm=llm,\r\n     12     verbose=True,\r\n     13 )\r\n---> 15 agent({\"input\": \"Who are the landlords?\"})\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\langchain\\chains\\base.py:166, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    164 except (KeyboardInterrupt, Exception) as e:\r\n    165     run_manager.on_chain_error(e)\r\n--> 166     raise e\r\n    167 run_manager.on_chain_end(outputs)\r\n    168 final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    169     inputs, outputs, return_only_outputs\r\n    170 )\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\langchain\\chains\\base.py:160, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    154 run_manager = callback_manager.on_chain_start(\r\n    155     dumpd(self),\r\n    156     inputs,\r\n    157 )\r\n    158 try:\r\n    159     outputs = (\r\n--> 160         self._call(inputs, run_manager=run_manager)\r\n    161         if new_arg_supported\r\n    162         else self._call(inputs)\r\n    163     )\r\n    164 except (KeyboardInterrupt, Exception) as e:\r\n    165     run_manager.on_chain_error(e)\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\langchain\\agents\\agent.py:957, in AgentExecutor._call(self, inputs, run_manager)\r\n    955 # We now enter the agent loop (until it returns something).\r\n    956 while self._should_continue(iterations, time_elapsed):\r\n--> 957     next_step_output = self._take_next_step(\r\n    958         name_to_tool_map,\r\n    959         color_mapping,\r\n    960         inputs,\r\n    961         intermediate_steps,\r\n    962         run_manager=run_manager,\r\n    963     )\r\n    964     if isinstance(next_step_output, AgentFinish):\r\n    965         return self._return(\r\n    966             next_step_output, intermediate_steps, run_manager=run_manager\r\n    967         )\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\langchain\\agents\\agent.py:762, in AgentExecutor._take_next_step(self, name_to_tool_map, color_mapping, inputs, intermediate_steps, run_manager)\r\n    756 \"\"\"Take a single step in the thought-action-observation loop.\r\n    757 \r\n    758 Override this to take control of how the agent makes and acts on choices.\r\n    759 \"\"\"\r\n    760 try:\r\n    761     # Call the LLM to see what to do.\r\n--> 762     output = self.agent.plan(\r\n    763         intermediate_steps,\r\n    764         callbacks=run_manager.get_child() if run_manager else None,\r\n    765         **inputs,\r\n    766     )\r\n    767 except OutputParserException as e:\r\n    768     if isinstance(self.handle_parsing_errors, bool):\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\langchain\\agents\\openai_functions_agent\\base.py:209, in OpenAIFunctionsAgent.plan(self, intermediate_steps, callbacks, **kwargs)\r\n    207 prompt = self.prompt.format_prompt(**full_inputs)\r\n    208 messages = prompt.to_messages()\r\n--> 209 predicted_message = self.llm.predict_messages(\r\n    210     messages, functions=self.functions, callbacks=callbacks\r\n    211 )\r\n    212 agent_decision = _parse_ai_message(predicted_message)\r\n    213 return agent_decision\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\langchain\\chat_models\\base.py:258, in BaseChatModel.predict_messages(self, messages, stop, **kwargs)\r\n    256 else:\r\n    257     _stop = list(stop)\r\n--> 258 return self(messages, stop=_stop, **kwargs)\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\langchain\\chat_models\\base.py:208, in BaseChatModel.__call__(self, messages, stop, callbacks, **kwargs)\r\n    201 def __call__(\r\n    202     self,\r\n    203     messages: List[BaseMessage],\r\n   (...)\r\n    206     **kwargs: Any,\r\n    207 ) -> BaseMessage:\r\n--> 208     generation = self.generate(\r\n    209         [messages], stop=stop, callbacks=callbacks, **kwargs\r\n    210     ).generations[0][0]\r\n    211     if isinstance(generation, ChatGeneration):\r\n    212         return generation.message\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\langchain\\chat_models\\base.py:102, in BaseChatModel.generate(self, messages, stop, callbacks, tags, **kwargs)\r\n    100 except (KeyboardInterrupt, Exception) as e:\r\n    101     run_manager.on_llm_error(e)\r\n--> 102     raise e\r\n    103 llm_output = self._combine_llm_outputs([res.llm_output for res in results])\r\n    104 generations = [res.generations for res in results]\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\langchain\\chat_models\\base.py:94, in BaseChatModel.generate(self, messages, stop, callbacks, tags, **kwargs)\r\n     90 new_arg_supported = inspect.signature(self._generate).parameters.get(\r\n     91     \"run_manager\"\r\n     92 )\r\n     93 try:\r\n---> 94     results = [\r\n     95         self._generate(m, stop=stop, run_manager=run_manager, **kwargs)\r\n     96         if new_arg_supported\r\n     97         else self._generate(m, stop=stop)\r\n     98         for m in messages\r\n     99     ]\r\n    100 except (KeyboardInterrupt, Exception) as e:\r\n    101     run_manager.on_llm_error(e)\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\langchain\\chat_models\\base.py:95, in <listcomp>(.0)\r\n     90 new_arg_supported = inspect.signature(self._generate).parameters.get(\r\n     91     \"run_manager\"\r\n     92 )\r\n     93 try:\r\n     94     results = [\r\n---> 95         self._generate(m, stop=stop, run_manager=run_manager, **kwargs)\r\n     96         if new_arg_supported\r\n     97         else self._generate(m, stop=stop)\r\n     98         for m in messages\r\n     99     ]\r\n    100 except (KeyboardInterrupt, Exception) as e:\r\n    101     run_manager.on_llm_error(e)\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\langchain\\chat_models\\openai.py:359, in ChatOpenAI._generate(self, messages, stop, run_manager, **kwargs)\r\n    351     message = _convert_dict_to_message(\r\n    352         {\r\n    353             \"content\": inner_completion,\r\n   (...)\r\n    356         }\r\n    357     )\r\n    358     return ChatResult(generations=[ChatGeneration(message=message)])\r\n--> 359 response = self.completion_with_retry(messages=message_dicts, **params)\r\n    360 return self._create_chat_result(response)\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\langchain\\chat_models\\openai.py:307, in ChatOpenAI.completion_with_retry(self, **kwargs)\r\n    303 @retry_decorator\r\n    304 def _completion_with_retry(**kwargs: Any) -> Any:\r\n    305     return self.client.create(**kwargs)\r\n--> 307 return _completion_with_retry(**kwargs)\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\tenacity\\__init__.py:289, in BaseRetrying.wraps.<locals>.wrapped_f(*args, **kw)\r\n    287 @functools.wraps(f)\r\n    288 def wrapped_f(*args: t.Any, **kw: t.Any) -> t.Any:\r\n--> 289     return self(f, *args, **kw)\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\tenacity\\__init__.py:379, in Retrying.__call__(self, fn, *args, **kwargs)\r\n    377 retry_state = RetryCallState(retry_object=self, fn=fn, args=args, kwargs=kwargs)\r\n    378 while True:\r\n--> 379     do = self.iter(retry_state=retry_state)\r\n    380     if isinstance(do, DoAttempt):\r\n    381         try:\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\tenacity\\__init__.py:314, in BaseRetrying.iter(self, retry_state)\r\n    312 is_explicit_retry = fut.failed and isinstance(fut.exception(), TryAgain)\r\n    313 if not (is_explicit_retry or self.retry(retry_state)):\r\n--> 314     return fut.result()\r\n    316 if self.after is not None:\r\n    317     self.after(retry_state)\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\concurrent\\futures\\_base.py:451, in Future.result(self, timeout)\r\n    449     raise CancelledError()\r\n    450 elif self._state == FINISHED:\r\n--> 451     return self.__get_result()\r\n    453 self._condition.wait(timeout)\r\n    455 if self._state in [CANCELLED, CANCELLED_AND_NOTIFIED]:\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\concurrent\\futures\\_base.py:403, in Future.__get_result(self)\r\n    401 if self._exception:\r\n    402     try:\r\n--> 403         raise self._exception\r\n    404     finally:\r\n    405         # Break a reference cycle with the exception in self._exception\r\n    406         self = None\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\tenacity\\__init__.py:382, in Retrying.__call__(self, fn, *args, **kwargs)\r\n    380 if isinstance(do, DoAttempt):\r\n    381     try:\r\n--> 382         result = fn(*args, **kwargs)\r\n    383     except BaseException:  # noqa: B902\r\n    384         retry_state.set_exception(sys.exc_info())  # type: ignore[arg-type]\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\langchain\\chat_models\\openai.py:305, in ChatOpenAI.completion_with_retry.<locals>._completion_with_retry(**kwargs)\r\n    303 @retry_decorator\r\n    304 def _completion_with_retry(**kwargs: Any) -> Any:\r\n--> 305     return self.client.create(**kwargs)\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\openai\\api_resources\\chat_completion.py:25, in ChatCompletion.create(cls, *args, **kwargs)\r\n     23 while True:\r\n     24     try:\r\n---> 25         return super().create(*args, **kwargs)\r\n     26     except TryAgain as e:\r\n     27         if timeout is not None and time.time() > start + timeout:\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py:154, in EngineAPIResource.create(cls, api_key, api_base, api_type, request_id, api_version, organization, **params)\r\n    138 (\r\n    139     deployment_id,\r\n    140     engine,\r\n   (...)\r\n    150     api_key, api_base, api_type, api_version, organization, **params\r\n    151 )\r\n    153 print(url, headers, stream, request_id, request_timeout)\r\n--> 154 response, a, api_key = requestor.request(\r\n    155     \"post\",\r\n    156     url,\r\n    157     params=params,\r\n    158     headers=headers,\r\n    159     stream=stream,\r\n    160     request_id=request_id,\r\n    161     request_timeout=request_timeout,\r\n    162 )\r\n    164 print(response, a, api_key)\r\n    166 if stream:\r\n    167     # must be an iterator\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\openai\\api_requestor.py:230, in APIRequestor.request(self, method, url, params, headers, files, stream, request_id, request_timeout)\r\n    209 def request(\r\n    210     self,\r\n    211     method,\r\n   (...)\r\n    218     request_timeout: Optional[Union[float, Tuple[float, float]]] = None,\r\n    219 ) -> Tuple[Union[OpenAIResponse, Iterator[OpenAIResponse]], bool, str]:\r\n    220     result = self.request_raw(\r\n    221         method.lower(),\r\n    222         url,\r\n   (...)\r\n    228         request_timeout=request_timeout,\r\n    229     )\r\n--> 230     resp, got_stream = self._interpret_response(result, stream)\r\n    231     return resp, got_stream, self.api_key\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\openai\\api_requestor.py:624, in APIRequestor._interpret_response(self, result, stream)\r\n    616     return (\r\n    617         self._interpret_response_line(\r\n    618             line, result.status_code, result.headers, stream=True\r\n    619         )\r\n    620         for line in parse_stream(result.iter_lines())\r\n    621     ), True\r\n    622 else:\r\n    623     return (\r\n--> 624         self._interpret_response_line(\r\n    625             result.content.decode(\"utf-8\"),\r\n    626             result.status_code,\r\n    627             result.headers,\r\n    628             stream=False,\r\n    629         ),\r\n    630         False,\r\n    631     )\r\n\r\nFile c:\\Users\\625050\\Anaconda3\\envs\\DD\\lib\\site-packages\\openai\\api_requestor.py:687, in APIRequestor._interpret_response_line(self, rbody, rcode, rheaders, stream)\r\n    685 stream_error = stream and \"error\" in resp.data\r\n    686 if stream_error or not 200 <= rcode < 300:\r\n--> 687     raise self.handle_error_response(\r\n    688         rbody, rcode, resp.data, rheaders, stream_error=stream_error\r\n    689     )\r\n    690 return resp\r\n\r\nInvalidRequestError: Unrecognized request argument supplied: functions\n\n### Expected behavior\n\nAn answer should be generated and no error should be thrown.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6777/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6777/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6776",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6776/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6776/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6776/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6776",
        "id": 1775449400,
        "node_id": "PR_kwDOIPDwls5T9NSI",
        "number": 6776,
        "title": "Add tools description to OpenAI Multi Function request, and skip function call when there is no actions provided.",
        "user": {
            "login": "lowzhao",
            "id": 29053541,
            "node_id": "MDQ6VXNlcjI5MDUzNTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29053541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lowzhao",
            "html_url": "https://github.com/lowzhao",
            "followers_url": "https://api.github.com/users/lowzhao/followers",
            "following_url": "https://api.github.com/users/lowzhao/following{/other_user}",
            "gists_url": "https://api.github.com/users/lowzhao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lowzhao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lowzhao/subscriptions",
            "organizations_url": "https://api.github.com/users/lowzhao/orgs",
            "repos_url": "https://api.github.com/users/lowzhao/repos",
            "events_url": "https://api.github.com/users/lowzhao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lowzhao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-26T19:27:57Z",
        "updated_at": "2023-11-07T03:55:41Z",
        "closed_at": "2023-11-07T03:55:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6776",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6776",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6776.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6776.patch",
            "merged_at": null
        },
        "body": "## Description \r\n- Add tools description to OpenAI Multi-Function request, to provide more context on what the tool does.\r\n- Skip function call to break the infinite loop of agent on continuously trying to perform `function_call` with empty `actions` /`tools` array.  \r\n\r\n## Tag Maintainer\r\n@dev2049 @vowelparrot\r\n\r\n## Twitter handle \r\nZhiHaoLow\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6776/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6776/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6775",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6775/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6775/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6775/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6775",
        "id": 1775410162,
        "node_id": "PR_kwDOIPDwls5T9EkZ",
        "number": 6775,
        "title": "Fix inconsistent logging_and_data_dir parameter in AwaDB",
        "user": {
            "login": "mssalvatore",
            "id": 19957806,
            "node_id": "MDQ6VXNlcjE5OTU3ODA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/19957806?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mssalvatore",
            "html_url": "https://github.com/mssalvatore",
            "followers_url": "https://api.github.com/users/mssalvatore/followers",
            "following_url": "https://api.github.com/users/mssalvatore/following{/other_user}",
            "gists_url": "https://api.github.com/users/mssalvatore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mssalvatore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mssalvatore/subscriptions",
            "organizations_url": "https://api.github.com/users/mssalvatore/orgs",
            "repos_url": "https://api.github.com/users/mssalvatore/repos",
            "events_url": "https://api.github.com/users/mssalvatore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mssalvatore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-26T19:04:10Z",
        "updated_at": "2023-08-23T16:00:40Z",
        "closed_at": "2023-06-29T06:06:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6775",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6775",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6775.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6775.patch",
            "merged_at": "2023-06-29T06:06:53Z"
        },
        "body": "## Description\r\n\r\nTag maintainer: @rlancemartin, @eyurtsev \r\n\r\n### log_and_data_dir\r\n`AwaDB.__init__()` accepts a parameter named `log_and_data_dir`. But `AwaDB.from_texts()` and `AwaDB.from_documents()` accept a parameter named `logging_and_data_dir`. This inconsistency in this parameter name can lead to confusion on the part of the caller.\r\n\r\nThis PR renames `logging_and_data_dir` to `log_and_data_dir` to make all functions consistent with the constructor.\r\n\r\n### embedding\r\n\r\n`AwaDB.__init__()` accepts a parameter named `embedding_model`. But `AwaDB.from_texts()` and `AwaDB.from_documents()` accept a parameter named `embeddings`. This inconsistency in this parameter name can lead to confusion on the part of the caller.\r\n\r\nThis PR renames `embedding_model` to `embeddings` to make AwaDB's constructor consistent with the classmethod \"constructors\" as specified by `VectorStore` abstract base class.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6775/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6775/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6774",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6774/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6774/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6774/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6774",
        "id": 1775280407,
        "node_id": "PR_kwDOIPDwls5T8ogP",
        "number": 6774,
        "title": "Fix for #6696 : Added persist_directory to client_settings if persist_directory is not None in Chroma",
        "user": {
            "login": "jaikarnyu",
            "id": 114618778,
            "node_id": "U_kgDOBtTxmg",
            "avatar_url": "https://avatars.githubusercontent.com/u/114618778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jaikarnyu",
            "html_url": "https://github.com/jaikarnyu",
            "followers_url": "https://api.github.com/users/jaikarnyu/followers",
            "following_url": "https://api.github.com/users/jaikarnyu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jaikarnyu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jaikarnyu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jaikarnyu/subscriptions",
            "organizations_url": "https://api.github.com/users/jaikarnyu/orgs",
            "repos_url": "https://api.github.com/users/jaikarnyu/repos",
            "events_url": "https://api.github.com/users/jaikarnyu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jaikarnyu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-26T17:49:58Z",
        "updated_at": "2023-08-11T00:18:19Z",
        "closed_at": "2023-08-11T00:18:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6774",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6774",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6774.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6774.patch",
            "merged_at": null
        },
        "body": "Description:\r\n1. Fixed an issue in Chroma Integration : Add persist_directory to client_settings if persist_directory is not None.\r\n2. Added Tests for chroma integration to test persistence with client_settings.\r\nIssue: https://github.com/hwchase17/langchain/issues/6696\r\nMaintainers :  @dev2049 @eyurtsev @rlancemartin \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6774/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6774/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6773",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6773/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6773/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6773/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6773",
        "id": 1775264882,
        "node_id": "PR_kwDOIPDwls5T8lF9",
        "number": 6773,
        "title": "Fix/persist directory in chroma db",
        "user": {
            "login": "jaikarnyu",
            "id": 114618778,
            "node_id": "U_kgDOBtTxmg",
            "avatar_url": "https://avatars.githubusercontent.com/u/114618778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jaikarnyu",
            "html_url": "https://github.com/jaikarnyu",
            "followers_url": "https://api.github.com/users/jaikarnyu/followers",
            "following_url": "https://api.github.com/users/jaikarnyu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jaikarnyu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jaikarnyu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jaikarnyu/subscriptions",
            "organizations_url": "https://api.github.com/users/jaikarnyu/orgs",
            "repos_url": "https://api.github.com/users/jaikarnyu/repos",
            "events_url": "https://api.github.com/users/jaikarnyu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jaikarnyu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T17:38:42Z",
        "updated_at": "2023-06-26T17:43:01Z",
        "closed_at": "2023-06-26T17:39:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6773",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6773",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6773.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6773.patch",
            "merged_at": null
        },
        "body": "  - Description: \r\n          1. Fixed an issue in Chroma Integration : Add persist_directory to client_settings if persist_directory is not None.\r\n          2. Added Tests for chroma integration to test persistence with client_settings.\r\n  - Issue: #6696 \r\n  - Maintainers : @rlancemartin @eyurtsev @dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6773/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6773/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6772",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6772/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6772/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6772/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6772",
        "id": 1775209069,
        "node_id": "PR_kwDOIPDwls5T8Y27",
        "number": 6772,
        "title": "Add concurrent insertion of vector rows in the Cassandra Vector Store",
        "user": {
            "login": "hemidactylus",
            "id": 14221764,
            "node_id": "MDQ6VXNlcjE0MjIxNzY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/14221764?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemidactylus",
            "html_url": "https://github.com/hemidactylus",
            "followers_url": "https://api.github.com/users/hemidactylus/followers",
            "following_url": "https://api.github.com/users/hemidactylus/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemidactylus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemidactylus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemidactylus/subscriptions",
            "organizations_url": "https://api.github.com/users/hemidactylus/orgs",
            "repos_url": "https://api.github.com/users/hemidactylus/repos",
            "events_url": "https://api.github.com/users/hemidactylus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemidactylus/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 17,
        "created_at": "2023-06-26T17:02:53Z",
        "updated_at": "2023-07-01T13:44:15Z",
        "closed_at": "2023-06-30T21:36:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6772",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6772",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6772.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6772.patch",
            "merged_at": null
        },
        "body": "Using the newest `cassIO`, the Cassandra Vector Store can now perform concurrent DB insertion in its `add_texts` method, hence improving its performance.\r\n\r\n#### Linter unrelated errors\r\n\r\nRunning the linter, the following (likely unrelated) was observed:\r\n\r\n```\r\nlangchain/vectorstores/mongodb_atlas.py:137: error: Argument 1 to \"insert_many\" of \"Collection\" has incompatible type \"List[Dict[str, Sequence[object]]]\"; expected \"Iterable[Union[MongoDBDocumentType, RawBSONDocument]]\"  [arg-type]\r\nlangchain/vectorstores/mongodb_atlas.py:186: error: Argument 1 to \"aggregate\" of \"Collection\" has incompatible type \"List[object]\"; expected \"Sequence[Mapping[str, Any]]\"  [arg-type]\r\nlangchain/vectorstores/qdrant.py: error: Name \"grpc\" is not defined  [name-defined]\r\n```\r\n\r\nHappy to be pointed at a fix, if the above is somehow caused by the code in this PR!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6772/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6772/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6771",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6771/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6771/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6771/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6771",
        "id": 1775182893,
        "node_id": "PR_kwDOIPDwls5T8TGL",
        "number": 6771,
        "title": "Cassandra support for chat history using CassIO library",
        "user": {
            "login": "hemidactylus",
            "id": 14221764,
            "node_id": "MDQ6VXNlcjE0MjIxNzY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/14221764?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemidactylus",
            "html_url": "https://github.com/hemidactylus",
            "followers_url": "https://api.github.com/users/hemidactylus/followers",
            "following_url": "https://api.github.com/users/hemidactylus/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemidactylus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemidactylus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemidactylus/subscriptions",
            "organizations_url": "https://api.github.com/users/hemidactylus/orgs",
            "repos_url": "https://api.github.com/users/hemidactylus/repos",
            "events_url": "https://api.github.com/users/hemidactylus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemidactylus/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-26T16:47:20Z",
        "updated_at": "2023-08-31T00:06:04Z",
        "closed_at": "2023-06-29T17:50:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6771",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6771",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6771.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6771.patch",
            "merged_at": "2023-06-29T17:50:36Z"
        },
        "body": "### Overview\r\n\r\nThis PR aims at building on #4378, expanding the capabilities and building on top of the `cassIO` library to interface with the database (as opposed to using the core drivers directly).\r\n\r\nUsage of `cassIO` (a library abstracting Cassandra access for ML/GenAI-specific purposes) is already established since #6426  was merged, so no new dependencies are introduced.\r\n\r\nIn the same spirit, we try to uniform the interface for using Cassandra instances throughout LangChain: all our appreciation of the work by @jj701 notwithstanding, who paved the way for this incremental work (thank you!), we identified a few reasons for changing the way a `CassandraChatMessageHistory` is instantiated. Advocating a syntax change is something we don't take lighthearted way, so we add some explanations about this below.\r\n\r\nAdditionally, this PR expands on integration testing, enables use of Cassandra's native Time-to-Live (TTL) features and improves the phrasing around the notebook example and the short \"integrations\" documentation paragraph.\r\n\r\nWe would kindly request @hwchase to review (since this is an elaboration and proposed improvement of #4378 who had the same reviewer).\r\n\r\n### About the __init__ breaking changes\r\n\r\nThere are [many](https://docs.datastax.com/en/developer/python-driver/3.28/api/cassandra/cluster/) options when creating the `Cluster` object, and new ones might be added at any time. Choosing some of them and exposing them as `__init__` parameters `CassandraChatMessageHistory`  will prove to be insufficient for at least some users.\r\n\r\nOn the other hand, working through `kwargs` or adding a long, long list of arguments to `__init__` is not a desirable option either. For this reason, (as done in #6426), we propose that whoever instantiates the Chat Message History class provide a Cassandra `Session` object, ready to use. This also enables easier injection of mocks and usage of Cassandra-compatible connections (such as those to the cloud database DataStax Astra DB, obtained with a different set of init parameters than `contact_points` and `port`).\r\n\r\nWe feel that a breaking change might still be acceptable since LangChain is at `0.*`. However, while maintaining that the approach we propose will be more flexible in the future, room could be made for a \"compatibility layer\" that respects the current init method. Honestly, we would to that only if there are strong reasons for it, as that would entail an additional maintenance burden.\r\n\r\n### Other changes\r\n\r\nWe propose to remove the keyspace creation from the class code for two reasons: first, production Cassandra instances often employ RBAC so that the database user reading/writing from tables does not necessarily (and generally shouldn't) have permission to create keyspaces, and second that programmatic keyspace creation is not a best practice (it should be done more or less manually, with extra care about schema mismatched among nodes, etc). Removing this (usually unnecessary) operation from the `__init__` path would also improve initialization performance (shorter time).\r\n\r\nWe suggest, likewise, to remove the `__del__` method (which would close the database connection), for the following reason: it is the recommended best practice to create a single Cassandra `Session` object throughout an application (it is a resource-heavy object capable to handle concurrency internally), so in case Cassandra is used in other ways by the app there is the risk of truncating the connection for all usages when the history instance is destroyed. Moreover, the `Session` object, in typical applications, is best left to garbage-collect itself automatically.\r\n\r\nAs mentioned above, we defer the actual database I/O to the `cassIO` library, which is designed to encode practices optimized for LLM applications (among other) without the need to expose LangChain developers to the internals of CQL (Cassandra Query Language). CassIO is already employed by the LangChain's Vector Store support for Cassandra.\r\n\r\nWe added a few more connection options in the companion notebook example (most notably, Astra DB) to encourage usage by anyone who cannot run their own Cassandra cluster.\r\n\r\nWe surface the `ttl_seconds` option for automatic handling of an expiration time to chat history messages, a likely useful feature given that very old messages generally may lose their importance.\r\n\r\nWe elaborated a bit more on the integration testing (Time-to-live, separation of \"session ids\", ...).\r\n\r\n### Remarks from linter & co.\r\n\r\nWe reinstated `cassio` as a dependency both in the \"optional\" group and in the \"integration testing\" group of `pyproject.toml`. This might not be the right thing do to, in which case the author of this PR offer his apologies (lack of confidence with Poetry - happy to be pointed in the right direction, though!).\r\n\r\nDuring linter tests, we were hit by some errors which appear unrelated to the code in the PR. We left them here and report on them here for awareness:\r\n\r\n```\r\nlangchain/vectorstores/mongodb_atlas.py:137: error: Argument 1 to \"insert_many\" of \"Collection\" has incompatible type \"List[Dict[str, Sequence[object]]]\"; expected \"Iterable[Union[MongoDBDocumentType, RawBSONDocument]]\"  [arg-type]\r\nlangchain/vectorstores/mongodb_atlas.py:186: error: Argument 1 to \"aggregate\" of \"Collection\" has incompatible type \"List[object]\"; expected \"Sequence[Mapping[str, Any]]\"  [arg-type]\r\n\r\nlangchain/vectorstores/qdrant.py:16: error: Name \"grpc\" is not defined  [name-defined]\r\nlangchain/vectorstores/qdrant.py:19: error: Name \"grpc\" is not defined  [name-defined]\r\nlangchain/vectorstores/qdrant.py:20: error: Name \"grpc\" is not defined  [name-defined]\r\nlangchain/vectorstores/qdrant.py:22: error: Name \"grpc\" is not defined  [name-defined]\r\nlangchain/vectorstores/qdrant.py:23: error: Name \"grpc\" is not defined  [name-defined]\r\n```\r\n\r\nIn the same spirit, we observe that to even get `import langchain` run, it seems that a `pip install bs4` is missing from the minimal package installation path.\r\n\r\nThank you!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6771/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6771/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6770",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6770/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6770/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6770/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6770",
        "id": 1775172279,
        "node_id": "PR_kwDOIPDwls5T8Qzz",
        "number": 6770,
        "title": "bump version to 216",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T16:38:53Z",
        "updated_at": "2023-06-26T16:46:21Z",
        "closed_at": "2023-06-26T16:46:19Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6770",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6770",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6770.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6770.patch",
            "merged_at": "2023-06-26T16:46:19Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6770/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6770/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6769",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6769/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6769/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6769/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6769",
        "id": 1775138732,
        "node_id": "PR_kwDOIPDwls5T8JjU",
        "number": 6769,
        "title": "fix(memory): allow internal chains to use memory",
        "user": {
            "login": "nirga",
            "id": 4224692,
            "node_id": "MDQ6VXNlcjQyMjQ2OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4224692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nirga",
            "html_url": "https://github.com/nirga",
            "followers_url": "https://api.github.com/users/nirga/followers",
            "following_url": "https://api.github.com/users/nirga/following{/other_user}",
            "gists_url": "https://api.github.com/users/nirga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nirga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nirga/subscriptions",
            "organizations_url": "https://api.github.com/users/nirga/orgs",
            "repos_url": "https://api.github.com/users/nirga/repos",
            "events_url": "https://api.github.com/users/nirga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nirga/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-26T16:15:40Z",
        "updated_at": "2023-07-13T06:47:45Z",
        "closed_at": "2023-07-13T06:47:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6769",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6769",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6769.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6769.patch",
            "merged_at": "2023-07-13T06:47:45Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n\r\nFixed #6768.\r\n\r\nThis is a workaround only. I think a better longer-term solution is for chains to declare how many input variables they *actually* need (as opposed to ones that are in the prompt, where some may be satisfied by the memory). Then, a wrapping chain can check the input match against the actual input variables.\r\n\r\n@hwchase17 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6769/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6769/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6768",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6768/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6768/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6768/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6768",
        "id": 1775129370,
        "node_id": "I_kwDOIPDwls5pzlMa",
        "number": 6768,
        "title": "Can't use memory for an internal LLMChain inside a SequentialChain",
        "user": {
            "login": "nirga",
            "id": 4224692,
            "node_id": "MDQ6VXNlcjQyMjQ2OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4224692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nirga",
            "html_url": "https://github.com/nirga",
            "followers_url": "https://api.github.com/users/nirga/followers",
            "following_url": "https://api.github.com/users/nirga/following{/other_user}",
            "gists_url": "https://api.github.com/users/nirga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nirga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nirga/subscriptions",
            "organizations_url": "https://api.github.com/users/nirga/orgs",
            "repos_url": "https://api.github.com/users/nirga/repos",
            "events_url": "https://api.github.com/users/nirga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nirga/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-26T16:09:11Z",
        "updated_at": "2023-07-13T06:47:46Z",
        "closed_at": "2023-07-13T06:47:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.214\r\nPython 3.11.1\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Create a `SequentialChain` that contains 2 `LLMChain`s, and add a memory to the first one.\r\n2. When running, you'll get a validation error: \r\n```\r\nMissing required input keys: {'chat_history'}, only had {'human_input'} (type=value_error)\r\n```\n\n### Expected behavior\n\nYou should be able to add memory to one chain, not just the Sequential Chain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6768/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6768/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6767",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6767/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6767/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6767/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6767",
        "id": 1775037115,
        "node_id": "I_kwDOIPDwls5pzOq7",
        "number": 6767,
        "title": "Unknown parsing error on custom tool + custom agent implementation",
        "user": {
            "login": "saswat0",
            "id": 32325136,
            "node_id": "MDQ6VXNlcjMyMzI1MTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/32325136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saswat0",
            "html_url": "https://github.com/saswat0",
            "followers_url": "https://api.github.com/users/saswat0/followers",
            "following_url": "https://api.github.com/users/saswat0/following{/other_user}",
            "gists_url": "https://api.github.com/users/saswat0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saswat0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saswat0/subscriptions",
            "organizations_url": "https://api.github.com/users/saswat0/orgs",
            "repos_url": "https://api.github.com/users/saswat0/repos",
            "events_url": "https://api.github.com/users/saswat0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saswat0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-26T15:20:23Z",
        "updated_at": "2023-06-26T17:15:43Z",
        "closed_at": "2023-06-26T17:15:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain: 0.0.215\r\npython: 3.10.11\r\nOS: Ubuntu 18.04\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @agola11 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI'm implementing two custom tools that return column names and unique values in them. Their definition is as follows\r\n```\r\ndef get_unique_values(column_name):\r\n    all_values = metadata[column_name]\r\n    return all_values\r\n\r\ndef get_column_names():\r\n    return COLUMN_NAMES\r\n\r\n\r\ntools = [\r\n    Tool(\r\n        name=\"Get all column names\",\r\n        func=get_column_names,\r\n        description=\"Useful for getting the names of all available columns. This doesn't have any arguments as input and simply invoking it would return the list of columns\",\r\n    ),\r\n    Tool(\r\n        name=\"Get distinct values of a column\",\r\n        func=get_unique_values,\r\n        description=\"Useful for getting distinct values of a particular column. Knowing the distinct values is important to decide if a particular column should be considered in a given context or not. The input to this function should be a string representing the column name whose unique values are needed to be found out. For example, `gender` would be the input if you wanted to know what unique values are in `gender` column.\",\r\n    ),\r\n]\r\n\r\n```\r\n\r\nI'm using a custom agent as well defined as follows: (The definition is quite straightforward and taken from the official docs)\r\n```\r\nprompt = CustomPromptTemplate(\r\n    template=template,\r\n    tools=tools,\r\n    input_variables=[\"input\", \"intermediate_steps\"],\r\n)\r\n\r\nllm_chain = LLMChain(llm=llm, prompt=prompt)\r\ntool_names = [tool.name for tool in tools]\r\n\r\nagent = LLMSingleActionAgent(\r\n    llm_chain=llm_chain,\r\n    output_parser=output_parser,\r\n    stop=[\"\\nObservation:\"],\r\n    allowed_tools=tool_names,\r\n)\r\n\r\nagent_executor = AgentExecutor.from_agent_and_tools(\r\n    agent=agent, tools=tools, verbose=True\r\n)\r\n```\r\n\r\nWhen I provide a prompt using `agent_executor.run()` I get the error pasted below.\r\n\r\nSurprisingly, if I define the as follows, I don't get an error. Rather it doesn't follow my prompt template because there's no LLMChain used here and hence gets stuck in meaningless back and forth actions.\r\n```\r\nagent_executor = initialize_agent(\r\n    tools,\r\n    llm,\r\n    agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION,\r\n    verbose=True,\r\n)\r\n```\r\n\r\nError trace\r\n```\r\n> Entering new  chain...\r\nTraceback (most recent call last):\r\n  File \"/home/user/proj/agent_exp.py\", line 245, in <module>\r\n    agent_executor.run(\r\n  File \"/home/user/anaconda3/envs/proj/lib/python3.10/site-packages/langchain/chains/base.py\", line 290, in run\r\n    return self(args[0], callbacks=callbacks, tags=tags)[_output_key]\r\n  File \"/home/user/anaconda3/envs/proj/lib/python3.10/site-packages/langchain/chains/base.py\", line 166, in __call__\r\n    raise e\r\n  File \"/home/user/anaconda3/envs/proj/lib/python3.10/site-packages/langchain/chains/base.py\", line 160, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"/home/user/anaconda3/envs/proj/lib/python3.10/site-packages/langchain/agents/agent.py\", line 987, in _call\r\n    next_step_output = self._take_next_step(\r\n  File \"/home/user/anaconda3/envs/proj/lib/python3.10/site-packages/langchain/agents/agent.py\", line 803, in _take_next_step\r\n    raise e\r\n  File \"/home/user/anaconda3/envs/proj/lib/python3.10/site-packages/langchain/agents/agent.py\", line 792, in _take_next_step\r\n    output = self.agent.plan(\r\n  File \"/home/user/anaconda3/envs/proj/lib/python3.10/site-packages/langchain/agents/agent.py\", line 345, in plan\r\n    return self.output_parser.parse(output)\r\n  File \"/home/user/proj/agent_exp.py\", line 102, in parse\r\n    raise OutputParserException(f\"Could not parse LLM output: `{llm_output}`\")\r\nlangchain.schema.OutputParserException: Could not parse LLM output: `Thought: I need to get all the column names\r\nAction: Get all column names`\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe agent should have called these functions appropriately and returned a list of columns that have the string datatype",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6767/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6767/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6766",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6766/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6766/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6766/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6766",
        "id": 1775023349,
        "node_id": "I_kwDOIPDwls5pzLT1",
        "number": 6766,
        "title": "Issue: Qdrant does not support the vector_size parameter, which is a very common and frequently used parameter. I hope it can be supported.",
        "user": {
            "login": "zhugexinxin",
            "id": 42615243,
            "node_id": "MDQ6VXNlcjQyNjE1MjQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/42615243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhugexinxin",
            "html_url": "https://github.com/zhugexinxin",
            "followers_url": "https://api.github.com/users/zhugexinxin/followers",
            "following_url": "https://api.github.com/users/zhugexinxin/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhugexinxin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhugexinxin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhugexinxin/subscriptions",
            "organizations_url": "https://api.github.com/users/zhugexinxin/orgs",
            "repos_url": "https://api.github.com/users/zhugexinxin/repos",
            "events_url": "https://api.github.com/users/zhugexinxin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhugexinxin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-26T15:12:51Z",
        "updated_at": "2023-10-18T16:06:58Z",
        "closed_at": "2023-10-18T16:06:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nQdrant does not support the vector_size parameter, which is a very common and frequently used parameter. I hope it can be supported.\r\n\r\nlangchain/vectorstores/qdrant.py\r\n\r\n```\r\n# Just do a single quick embedding to get vector size\r\n   partial_embeddings = embedding.embed_documents(texts[:1])\r\n   vector_size = len(partial_embeddings[0])\r\n```\r\n\r\n\r\n\r\n\n\n### Suggestion:\n\nI hope it can be supported.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6766/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6766/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6765",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6765/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6765/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6765/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6765",
        "id": 1775022677,
        "node_id": "PR_kwDOIPDwls5T7wI0",
        "number": 6765,
        "title": "Fix breaking tags",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T15:12:34Z",
        "updated_at": "2023-06-26T16:28:13Z",
        "closed_at": "2023-06-26T16:28:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6765",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6765",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6765.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6765.patch",
            "merged_at": "2023-06-26T16:28:11Z"
        },
        "body": "Fix tags change that broke old way of initializing agent\r\n\r\nCloses #6756",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6765/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6765/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6764",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6764/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6764/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6764/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6764",
        "id": 1774991189,
        "node_id": "I_kwDOIPDwls5pzDdV",
        "number": 6764,
        "title": "`EmbeddingRouterChain.from_names_and_descriptions`  doesn't accept vectorstore kwargs",
        "user": {
            "login": "Robbie-Palmer",
            "id": 8760191,
            "node_id": "MDQ6VXNlcjg3NjAxOTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8760191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Robbie-Palmer",
            "html_url": "https://github.com/Robbie-Palmer",
            "followers_url": "https://api.github.com/users/Robbie-Palmer/followers",
            "following_url": "https://api.github.com/users/Robbie-Palmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Robbie-Palmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Robbie-Palmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Robbie-Palmer/subscriptions",
            "organizations_url": "https://api.github.com/users/Robbie-Palmer/orgs",
            "repos_url": "https://api.github.com/users/Robbie-Palmer/repos",
            "events_url": "https://api.github.com/users/Robbie-Palmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Robbie-Palmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-26T14:58:12Z",
        "updated_at": "2023-10-02T16:05:14Z",
        "closed_at": "2023-10-02T16:05:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nUbuntu 22.04.2\r\nPython 3.10.11\r\nlangchain 0.0.215\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nfrom pathlib import Path\r\n\r\nfrom langchain.chains.router.embedding_router import EmbeddingRouterChain\r\nfrom langchain.embeddings import LlamaCppEmbeddings\r\nfrom langchain.vectorstores import Weaviate\r\n\r\nmodel_dir = Path.home() / 'models'\r\nllama_path = model_dir / 'llama-7b.ggmlv3.q4_0.bin'\r\nencoder = LlamaCppEmbeddings(model_path=str(llama_path))\r\nencoder.client.verbose = False\r\nnames_and_descriptions = [\r\n    (\"physics\", [\"for questions about physics\"]),\r\n    (\"math\", [\"for questions about math\"]),\r\n]\r\nrouter_chain = EmbeddingRouterChain.from_names_and_descriptions(names_and_descriptions, Weaviate, encoder,\r\n                                                                weaviate_url='http://localhost:8080',\r\n                                                                routing_keys=[\"input\"])\r\n```\n\n### Expected behavior\n\nI expect to be able to configure the underlying vectorizer with kwargs passed into the `from_names_and_descriptions` e.g. `weaviate_url`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6764/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6764/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6762",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6762/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6762/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6762/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6762",
        "id": 1774957722,
        "node_id": "I_kwDOIPDwls5py7Sa",
        "number": 6762,
        "title": "Stream a response from LangChain's OpenAI with python fastapi",
        "user": {
            "login": "jhrsya",
            "id": 54741554,
            "node_id": "MDQ6VXNlcjU0NzQxNTU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/54741554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhrsya",
            "html_url": "https://github.com/jhrsya",
            "followers_url": "https://api.github.com/users/jhrsya/followers",
            "following_url": "https://api.github.com/users/jhrsya/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhrsya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhrsya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhrsya/subscriptions",
            "organizations_url": "https://api.github.com/users/jhrsya/orgs",
            "repos_url": "https://api.github.com/users/jhrsya/repos",
            "events_url": "https://api.github.com/users/jhrsya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhrsya/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T14:40:55Z",
        "updated_at": "2023-10-02T16:05:19Z",
        "closed_at": "2023-10-02T16:05:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain == 0.0.205\r\npython == 3.10.11\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [X] Async\r\n\r\n### Reproduction\r\n\r\n```\r\nfrom fastapi import FastAPI, Depends, Request, Response\r\nfrom typing import Any, Dict, List, Generator\r\nimport asyncio\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\nfrom langchain.schema import LLMResult, HumanMessage, SystemMessage\r\nfrom fastapi.middleware.cors import CORSMiddleware\r\nfrom fastapi.responses import StreamingResponse\r\nfrom html import escape\r\n\r\n\r\napp = FastAPI()\r\n\r\n# \u6dfb\u52a0 CORS \u4e2d\u95f4\u4ef6\r\napp.add_middleware(\r\n    CORSMiddleware,\r\n    allow_origins=[\"*\"],\r\n    allow_methods=[\"*\"],\r\n    allow_headers=[\"*\"],\r\n    allow_credentials=True,\r\n)\r\n\r\nq = asyncio.Queue()\r\nstop_item = \"###finish###\"\r\n\r\n\r\nclass StreamingStdOutCallbackHandlerYield(StreamingStdOutCallbackHandler):\r\n    async def on_llm_start(\r\n        self, serialized: Dict[str, Any], prompts: List[str], **kwargs: Any\r\n    ) -> None:\r\n        \"\"\"Run when LLM starts running.\"\"\"\r\n        # Clear the queue at the start\r\n        while not q.empty():\r\n            await q.get()\r\n\r\n    async def on_llm_new_token(self, token: str, **kwargs: Any) -> None:\r\n        \"\"\"Run on new LLM token. Only available when streaming is enabled.\"\"\"\r\n        await q.put(token)\r\n\r\n    async def on_llm_end(self, response: LLMResult, **kwargs: Any) -> None:\r\n        \"\"\"Run when LLM ends running.\"\"\"\r\n        await q.put(stop_item)\r\n\r\n\r\nasync def generate_llm_stream(prompt: str) -> Generator[str, None, None]:\r\n    llm = OpenAI(temperature=0.5, streaming=True, callbacks=[StreamingStdOutCallbackHandlerYield()])\r\n    result = await llm.agenerate([prompt])\r\n    \r\n    while True:\r\n        item = await q.get()\r\n        if item == stop_item:\r\n            break\r\n        yield item\r\n\r\n\r\n@app.get(\"/generate-song\", status_code=200)\r\nasync def generate_song() -> Response:\r\n    prompt = \"Write me a song about sparkling water.\"\r\n\r\n    async def event_stream() -> Generator[str, None, None]:\r\n        async for item in generate_llm_stream(prompt):\r\n            escaped_chunk = escape(item).replace(\"\\n\", \"<br>\").replace(\" \", \"&nbsp;\")\r\n            yield f\"data:{escaped_chunk}\\n\\n\"\r\n\r\n    return StreamingResponse(event_stream(), media_type=\"text/event-stream\")\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    import uvicorn\r\n    uvicorn.run(\"easy:app\", host=\"0.0.0.0\", port=8000, reload=True)\r\n```\r\n\r\n### Expected behavior\r\n\r\n```Retrying langchain.llms.openai.acompletion_with_retry.<locals>._completion_with_retry in 4.0 seconds as it raised APIConnectionError: Error communicating with OpenAI.\r\nRetrying langchain.llms.openai.acompletion_with_retry.<locals>._completion_with_retry in 4.0 seconds as it raised APIConnectionError: Error communicating with OpenAI.\r\nRetrying langchain.llms.openai.acompletion_with_retry.<locals>._completion_with_retry in 4.0 seconds as it raised APIConnectionError: Error communicating with OpenAI.\r\nRetrying langchain.llms.openai.acompletion_with_retry.<locals>._completion_with_retry in 8.0 seconds as it raised APIConnectionError: Error communicating with OpenAI.\r\nRetrying langchain.llms.openai.acompletion_with_retry.<locals>._completion_with_retry in 10.0 seconds as it raised APIConnectionError: Error communicating with OpenAI.\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\aiohttp\\connector.py\", line 980, in _wrap_create_connection\r\n    return await self._loop.create_connection(*args, **kwargs)  # type: ignore[return-value]  # noqa\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\asyncio\\base_events.py\", line 1076, in create_connection\r\n    raise exceptions[0]\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\asyncio\\base_events.py\", line 1060, in create_connection\r\n    sock = await self._connect_sock(\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\asyncio\\base_events.py\", line 969, in _connect_sock\r\n    await self.sock_connect(sock, address)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\asyncio\\selector_events.py\", line 501, in sock_connect\r\n    return await fut\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\asyncio\\selector_events.py\", line 541, in _sock_connect_cb\r\n    raise OSError(err, f'Connect call failed {address}')\r\nTimeoutError: [Errno 10060] Connect call failed ('108.160.166.253', 443)\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\openai\\api_requestor.py\", line 592, in arequest_raw\r\n    result = await session.request(**request_kwargs)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\aiohttp\\client.py\", line 536, in _request\r\n    conn = await self._connector.connect(\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\aiohttp\\connector.py\", line 540, in connect\r\n    proto = await self._create_connection(req, traces, timeout)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\aiohttp\\connector.py\", line 901, in _create_connection\r\n    _, proto = await self._create_direct_connection(req, traces, timeout)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\aiohttp\\connector.py\", line 1206, in _create_direct_connection\r\n    raise last_exc\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\aiohttp\\connector.py\", line 1175, in _create_direct_connection\r\n    transp, proto = await self._wrap_create_connection(\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\aiohttp\\connector.py\", line 988, in _wrap_create_connection\r\n    raise client_error(req.connection_key, exc) from exc\r\naiohttp.client_exceptions.ClientConnectorError: Cannot connect to host api.openai.com:443 ssl:default [Connect call failed ('108.160.166.253', 443)]\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\uvicorn\\protocols\\http\\httptools_impl.py\", line 435, in run_asgi\r\n    result = await app(  # type: ignore[func-returns-value]\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\uvicorn\\middleware\\proxy_headers.py\", line 78, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\fastapi\\applications.py\", line 282, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\starlette\\applications.py\", line 122, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\starlette\\middleware\\errors.py\", line 184, in __call__\r\n    raise exc\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\starlette\\middleware\\errors.py\", line 162, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\starlette\\middleware\\cors.py\", line 91, in __call__\r\n    await self.simple_response(scope, receive, send, request_headers=headers)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\starlette\\middleware\\cors.py\", line 146, in simple_response\r\n    await self.app(scope, receive, send)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\r\n    raise exc\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\fastapi\\middleware\\asyncexitstack.py\", line 20, in __call__\r\n    raise e\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\fastapi\\middleware\\asyncexitstack.py\", line 17, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\starlette\\routing.py\", line 718, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\starlette\\routing.py\", line 276, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\starlette\\routing.py\", line 69, in app\r\n    await response(scope, receive, send)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\starlette\\responses.py\", line 270, in __call__\r\n    async with anyio.create_task_group() as task_group:\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\anyio\\_backends\\_asyncio.py\", line 662, in __aexit__\r\n    raise exceptions[0]\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\starlette\\responses.py\", line 273, in wrap\r\n    await func()\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\starlette\\responses.py\", line 262, in stream_response\r\n    async for chunk in self.body_iterator:\r\n  File \"C:\\AI\\openai\\easy.py\", line 61, in event_stream\r\n    async for item in generate_llm_stream(prompt):\r\n  File \"C:\\AI\\openai\\easy.py\", line 47, in generate_llm_stream\r\n    result = await llm.agenerate([prompt])\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\langchain\\llms\\base.py\", line 287, in agenerate\r\n    raise e\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\langchain\\llms\\base.py\", line 279, in agenerate\r\n    await self._agenerate(\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\langchain\\llms\\openai.py\", line 355, in _agenerate\r\n    async for stream_resp in await acompletion_with_retry(\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\langchain\\llms\\openai.py\", line 120, in acompletion_with_retry\r\n    return await _completion_with_retry(**kwargs)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\tenacity\\_asyncio.py\", line 88, in async_wrapped\r\n    return await fn(*args, **kwargs)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\tenacity\\_asyncio.py\", line 47, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\tenacity\\__init__.py\", line 325, in iter\r\n    raise retry_exc.reraise()\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\tenacity\\__init__.py\", line 158, in reraise\r\n    raise self.last_attempt.result()\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\concurrent\\futures\\_base.py\", line 451, in result\r\n    return self.__get_result()\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\concurrent\\futures\\_base.py\", line 403, in __get_result\r\n    raise self._exception\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\tenacity\\_asyncio.py\", line 50, in __call__\r\n    result = await fn(*args, **kwargs)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\langchain\\llms\\openai.py\", line 118, in _completion_with_retry\r\n    return await llm.client.acreate(**kwargs)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\openai\\api_resources\\completion.py\", line 45, in acreate\r\n    return await super().acreate(*args, **kwargs)\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py\", line 217, in acreate\r\n    response, _, api_key = await requestor.arequest(\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\openai\\api_requestor.py\", line 304, in arequest\r\n    result = await self.arequest_raw(\r\n  File \"C:\\Users\\jhrsya\\Anaconda3\\envs\\langchain\\lib\\site-packages\\openai\\api_requestor.py\", line 609, in arequest_raw\r\n    raise error.APIConnectionError(\"Error communicating with OpenAI\") from e\r\nopenai.error.APIConnectionError: Error communicating with OpenAI```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6762/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6762/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6761",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6761/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6761/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6761/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6761",
        "id": 1774947874,
        "node_id": "I_kwDOIPDwls5py44i",
        "number": 6761,
        "title": "ConversationBufferMemory fails to capture OpenAI functions messages in LLMChain",
        "user": {
            "login": "paschembri",
            "id": 8329444,
            "node_id": "MDQ6VXNlcjgzMjk0NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8329444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/paschembri",
            "html_url": "https://github.com/paschembri",
            "followers_url": "https://api.github.com/users/paschembri/followers",
            "following_url": "https://api.github.com/users/paschembri/following{/other_user}",
            "gists_url": "https://api.github.com/users/paschembri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/paschembri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/paschembri/subscriptions",
            "organizations_url": "https://api.github.com/users/paschembri/orgs",
            "repos_url": "https://api.github.com/users/paschembri/repos",
            "events_url": "https://api.github.com/users/paschembri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/paschembri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-26T14:36:44Z",
        "updated_at": "2023-09-26T05:41:23Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nAdding memory to a LLMChain with OpenAI functions enabled fails because of `AIMessage` are generated instead of `FunctionMessage`\r\n\r\n```python\r\n    self.add_message(AIMessage(content=message))\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/pas/development/advanced-stack/sandbox/sublime-plugin-maker/venv/lib/python3.11/site-packages/langchain/load/serializable.py\", line 74, in __init__\r\n    super().__init__(**kwargs)\r\n  File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for AIMessage\r\ncontent\r\n  str type expected (type=type_error.str)\r\n```\r\n\r\nwhere `AIMessage.content` is in fact a dict.\r\n\r\n\r\nTested version : `0.0.215`\r\n\r\n\n\n### Who can help?\n\n@dev2049 \r\n@hwchase17 \r\n\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [X] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Create a LLMChain with both functions and memory\r\n2. Enjoy :)\n\n### Expected behavior\n\nWhen LLMChain is created with `functions` and memory, generate FunctionMessage and accept dict (or json dumps)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6761/reactions",
            "total_count": 7,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6761/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6760",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6760/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6760/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6760/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6760",
        "id": 1774817963,
        "node_id": "I_kwDOIPDwls5pyZKr",
        "number": 6760,
        "title": "Streaming Support For AzureOpenAI",
        "user": {
            "login": "YuvalBogachev",
            "id": 64986770,
            "node_id": "MDQ6VXNlcjY0OTg2Nzcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64986770?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YuvalBogachev",
            "html_url": "https://github.com/YuvalBogachev",
            "followers_url": "https://api.github.com/users/YuvalBogachev/followers",
            "following_url": "https://api.github.com/users/YuvalBogachev/following{/other_user}",
            "gists_url": "https://api.github.com/users/YuvalBogachev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YuvalBogachev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YuvalBogachev/subscriptions",
            "organizations_url": "https://api.github.com/users/YuvalBogachev/orgs",
            "repos_url": "https://api.github.com/users/YuvalBogachev/repos",
            "events_url": "https://api.github.com/users/YuvalBogachev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YuvalBogachev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-26T13:44:29Z",
        "updated_at": "2023-09-28T16:00:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nThere is a lack of support for the streaming option with AzureOpenAI.  As you can see from the following article (https://thivy.hashnode.dev/streaming-response-with-azure-openai) official API support on Azure's side is present. \r\n\r\nSpecifically, when trying to utilize the streaming argument with AzureOpenAI, we recieve the following error (with gpt-35-turbo model, which is possible on direct Azure interfacing):\r\n`InvalidRequestError: logprobs, best_of and echo parameters are not available on gpt-35-turbo model. Please remove the parameter and try again. For more details, see https://go.microsoft.com/fwlink/?linkid=2227346.`\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. Run the following code in a notebook:\r\n```\r\nfrom langchain.callbacks.base import CallbackManager\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\nfrom langchain.chains import (\r\n    ConversationalRetrievalChain,\r\n    LLMChain\r\n)\r\nfrom langchain.chains.question_answering import load_qa_chain\r\nfrom langchain.prompts.prompt import PromptTemplate\r\nfrom langchain.llms import AzureOpenAI\r\nfrom langchain.chat_models import AzureChatOpenAI\r\n\r\ntemplate = \"\"\"Given the following chat history and a follow up question, rephrase the follow up input question to be a standalone question.\r\nOr end the conversation if it seems like it's done.\r\n\r\nChat History:\\\"\"\"\r\n{chat_history}\r\n\\\"\"\"\r\n\r\nFollow Up Input: \\\"\"\"\r\n{question}\r\n\\\"\"\"\r\n\r\nStandalone question:\"\"\"\r\n\r\ncondense_question_prompt = PromptTemplate.from_template(template)\r\n\r\ntemplate = \"\"\"You are a friendly, conversational retail shopping assistant. Use the following context including product names, descriptions, and keywords to show the shopper whats available, help find what they want, and answer any questions.\r\nIt's ok if you don't know the answer.\r\n\r\nContext:\\\"\"\"\r\n{context}\r\n\\\"\"\"\r\n\r\nQuestion:\\\"\"\"\r\n\\\"\"\"\r\n\r\nHelpful Answer:\"\"\"\r\n\r\nqa_prompt= PromptTemplate.from_template(template)\r\n\r\nllm = AzureOpenAI(deployment_name=\"gpt-35-turbo\",  temperature=0)\r\n\r\nstreaming_llm = AzureOpenAI(\r\n    streaming=True,\r\n    callback_manager=CallbackManager([\r\n        StreamingStdOutCallbackHandler()]),\r\n    verbose=True,\r\n    engine=deployment_name,\r\n    temperature=0.2,\r\n    max_tokens=150\r\n)\r\n\r\n# use the LLM Chain to create a question creation chain\r\nquestion_generator = LLMChain(\r\n    llm=llm,\r\n    prompt=condense_question_prompt\r\n)\r\n\r\n# use the streaming LLM to create a question answering chain\r\ndoc_chain = load_qa_chain(\r\n    llm=streaming_llm,\r\n    #llm=llm,\r\n    chain_type=\"stuff\",\r\n    prompt=qa_prompt\r\n)\r\n\r\n\r\nchatbot = ConversationalRetrievalChain(\r\n    retriever=vectorstore.as_retriever(),\r\n    combine_docs_chain=doc_chain,\r\n    question_generator=question_generator\r\n)\r\n\r\n# create a chat history buffer\r\nchat_history = []\r\n\r\n# gather user input for the first question to kick off the bot\r\nquestion = input(\"Hi! What are you looking for today?\")\r\n\r\n# keep the bot running in a loop to simulate a conversation\r\nwhile True:\r\n    result = chatbot(\r\n        {\"question\": question, \"chat_history\": chat_history}\r\n    )\r\n    print(\"\\n\")\r\n    chat_history.append((result[\"question\"], result[\"answer\"]))\r\n    question = input()\r\n```\r\n\r\nEngine is \"gpt-35-turbo\" and the correct environment variables are provided.\r\n\r\n2. Input anything in the input field.\r\n3. Error Occurs.\r\n\r\nResults in the following error:\r\n`InvalidRequestError: logprobs, best_of and echo parameters are not available on gpt-35-turbo model. Please remove the parameter and try again. For more details, see https://go.microsoft.com/fwlink/?linkid=2227346.`\r\n\r\n### Expected behavior\r\n\r\nTo execute without error.\r\n\r\n### P.S.\r\nThis is my first bug report on GitHub, so if anything is missing please let me know.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6760/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6760/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6759",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6759/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6759/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6759/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6759",
        "id": 1774795023,
        "node_id": "I_kwDOIPDwls5pyTkP",
        "number": 6759,
        "title": "AzureChatOpenAI: InvalidRequestError",
        "user": {
            "login": "UlrikWKoren",
            "id": 63015561,
            "node_id": "MDQ6VXNlcjYzMDE1NTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/63015561?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UlrikWKoren",
            "html_url": "https://github.com/UlrikWKoren",
            "followers_url": "https://api.github.com/users/UlrikWKoren/followers",
            "following_url": "https://api.github.com/users/UlrikWKoren/following{/other_user}",
            "gists_url": "https://api.github.com/users/UlrikWKoren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UlrikWKoren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UlrikWKoren/subscriptions",
            "organizations_url": "https://api.github.com/users/UlrikWKoren/orgs",
            "repos_url": "https://api.github.com/users/UlrikWKoren/repos",
            "events_url": "https://api.github.com/users/UlrikWKoren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UlrikWKoren/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-26T13:32:27Z",
        "updated_at": "2023-10-05T16:07:56Z",
        "closed_at": "2023-10-05T16:07:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nWindows 11,\r\npython==3.10.5\r\nlangchain==0.0.215\r\nopenai==0.27.8\r\nfaiss-cpu==1.7.4\r\n\r\n### Who can help?\r\n@zeke \r\n@sbusso \r\n@deepblue \r\nwhen run this example code: \r\nhttps://python.langchain.com/docs/modules/model_io/models/chat/integrations/azure_chat_openai\r\nI get the following error...\r\n\r\n\"InvalidRequestError: The API deployment for this resource does not exist. If you created the deployment within the last 5 minutes, please wait a moment and try again.\"\r\n\r\nThe code works if you downgrade langchain to 0.0.132\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nFollow the instructions in the notebook.\r\nhttps://python.langchain.com/docs/modules/model_io/models/chat/integrations/azure_chat_openai\r\n\r\n### Expected behavior\r\n\r\nGet a response.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6759/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6759/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6758",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6758/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6758/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6758/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6758",
        "id": 1774668475,
        "node_id": "I_kwDOIPDwls5px0q7",
        "number": 6758,
        "title": "vectorstores/faiss.py load_local can't set normalize_L2",
        "user": {
            "login": "dylanwwang",
            "id": 16224113,
            "node_id": "MDQ6VXNlcjE2MjI0MTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/16224113?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dylanwwang",
            "html_url": "https://github.com/dylanwwang",
            "followers_url": "https://api.github.com/users/dylanwwang/followers",
            "following_url": "https://api.github.com/users/dylanwwang/following{/other_user}",
            "gists_url": "https://api.github.com/users/dylanwwang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dylanwwang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dylanwwang/subscriptions",
            "organizations_url": "https://api.github.com/users/dylanwwang/orgs",
            "repos_url": "https://api.github.com/users/dylanwwang/repos",
            "events_url": "https://api.github.com/users/dylanwwang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dylanwwang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-26T12:26:30Z",
        "updated_at": "2023-10-19T16:06:58Z",
        "closed_at": "2023-10-19T16:06:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/hwchase17/langchain/blob/1742db0c3076772db652c747df1524cd07695f51/langchain/vectorstores/faiss.py#L458\r\nthis from method can set 'normalize_L2' for un-norm embeddings\r\n\r\nhttps://github.com/hwchase17/langchain/blob/1742db0c3076772db652c747df1524cd07695f51/langchain/vectorstores/faiss.py#L588\r\n\r\nbut load_local no 'normalize_L2' argument, so cache&load cant't work as expected\r\n\r\nplease add 'normalize_L2'\uff0cor cache 'normalize_L2' to cache_file and restore it when load_local\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6758/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6758/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6757",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6757/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6757/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6757/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6757",
        "id": 1774605450,
        "node_id": "PR_kwDOIPDwls5T6UJi",
        "number": 6757,
        "title": "Add Minimax LLM and Chat",
        "user": {
            "login": "Lukalukaxxx",
            "id": 32508094,
            "node_id": "MDQ6VXNlcjMyNTA4MDk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/32508094?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lukalukaxxx",
            "html_url": "https://github.com/Lukalukaxxx",
            "followers_url": "https://api.github.com/users/Lukalukaxxx/followers",
            "following_url": "https://api.github.com/users/Lukalukaxxx/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lukalukaxxx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lukalukaxxx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lukalukaxxx/subscriptions",
            "organizations_url": "https://api.github.com/users/Lukalukaxxx/orgs",
            "repos_url": "https://api.github.com/users/Lukalukaxxx/repos",
            "events_url": "https://api.github.com/users/Lukalukaxxx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lukalukaxxx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-06-26T11:55:41Z",
        "updated_at": "2023-09-19T15:22:03Z",
        "closed_at": "2023-09-19T15:22:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6757",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6757",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6757.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6757.patch",
            "merged_at": null
        },
        "body": "- Add support for MiniMax LLM\r\n- [Doc](https://api.minimax.chat/document/algorithm-concept?id=6433f37594878d408fc8295d)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6757/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6757/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6756",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6756/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6756/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6756/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6756",
        "id": 1774503627,
        "node_id": "I_kwDOIPDwls5pxMbL",
        "number": 6756,
        "title": "Recent tags change causes AttributeError: 'str' object has no attribute 'value' on initialize_agent call",
        "user": {
            "login": "LittleColin",
            "id": 1062116,
            "node_id": "MDQ6VXNlcjEwNjIxMTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1062116?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LittleColin",
            "html_url": "https://github.com/LittleColin",
            "followers_url": "https://api.github.com/users/LittleColin/followers",
            "following_url": "https://api.github.com/users/LittleColin/following{/other_user}",
            "gists_url": "https://api.github.com/users/LittleColin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LittleColin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LittleColin/subscriptions",
            "organizations_url": "https://api.github.com/users/LittleColin/orgs",
            "repos_url": "https://api.github.com/users/LittleColin/repos",
            "events_url": "https://api.github.com/users/LittleColin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LittleColin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-26T11:00:29Z",
        "updated_at": "2023-06-27T02:03:29Z",
        "closed_at": "2023-06-26T16:28:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n- Langchain: 0.0.215\r\n- Platform: ubuntu\r\n- Python 3.10.12\n\n### Who can help?\n\n@vowelparrot \r\n\r\nhttps://github.com/hwchase17/langchain/blob/d84a3bcf7ab3edf8fe1d49083e066d51c9b5f621/langchain/agents/initialize.py#L54\r\n\r\n\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nFails if agent initialized as follows:\r\n```python\r\nagent = initialize_agent(\r\n        agent='zero-shot-react-description',\r\n        tools=tools,\r\n        llm=llm,\r\n        verbose=True,\r\n        max_iterations=30,\r\n        memory=ConversationBufferMemory(),\r\n        handle_parsing_errors=True)\r\n```\r\nWith\r\n```\r\n...\r\nlib/python3.10/site-packages/langchain/agents/initialize.py\", line 54, in initialize_agent\r\n    tags_.append(agent.value)\r\nAttributeError: 'str' object has no attribute 'value'\r\n````\n\n### Expected behavior\n\nExpected to work as before where agent is specified as a string (or if this is highlighting that agent should actually be an object, it should indicate that instead of the error being shown).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6756/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6756/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6755",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6755/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6755/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6755/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6755",
        "id": 1774484925,
        "node_id": "PR_kwDOIPDwls5T55WS",
        "number": 6755,
        "title": "\ud83c\udfafBug: format the url and path_params",
        "user": {
            "login": "0xbluesecurity",
            "id": 24714804,
            "node_id": "MDQ6VXNlcjI0NzE0ODA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/24714804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xbluesecurity",
            "html_url": "https://github.com/0xbluesecurity",
            "followers_url": "https://api.github.com/users/0xbluesecurity/followers",
            "following_url": "https://api.github.com/users/0xbluesecurity/following{/other_user}",
            "gists_url": "https://api.github.com/users/0xbluesecurity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/0xbluesecurity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/0xbluesecurity/subscriptions",
            "organizations_url": "https://api.github.com/users/0xbluesecurity/orgs",
            "repos_url": "https://api.github.com/users/0xbluesecurity/repos",
            "events_url": "https://api.github.com/users/0xbluesecurity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/0xbluesecurity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-26T10:50:34Z",
        "updated_at": "2023-06-27T06:03:58Z",
        "closed_at": "2023-06-27T06:03:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6755",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6755",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6755.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6755.patch",
            "merged_at": "2023-06-27T06:03:57Z"
        },
        "body": "  - Description: format the url and path_params correctly, \r\n  - Issue: #6753,\r\n  - Dependencies: None,\r\n  - Tag maintainer: @vowelparrot,\r\n  - Twitter handle: @0xbluesecurity\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6755/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6755/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6754",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6754/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6754/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6754/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6754",
        "id": 1774480128,
        "node_id": "I_kwDOIPDwls5pxGsA",
        "number": 6754,
        "title": "`RetrievalQAWithSourcesChain` with `max_tokens_limit` throws error `Requested tokens exceed context window`",
        "user": {
            "login": "Robbie-Palmer",
            "id": 8760191,
            "node_id": "MDQ6VXNlcjg3NjAxOTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8760191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Robbie-Palmer",
            "html_url": "https://github.com/Robbie-Palmer",
            "followers_url": "https://api.github.com/users/Robbie-Palmer/followers",
            "following_url": "https://api.github.com/users/Robbie-Palmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Robbie-Palmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Robbie-Palmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Robbie-Palmer/subscriptions",
            "organizations_url": "https://api.github.com/users/Robbie-Palmer/orgs",
            "repos_url": "https://api.github.com/users/Robbie-Palmer/repos",
            "events_url": "https://api.github.com/users/Robbie-Palmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Robbie-Palmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T10:47:36Z",
        "updated_at": "2023-10-02T16:05:29Z",
        "closed_at": "2023-10-02T16:05:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nUbuntu 22.04.2\r\nPython 3.10.11\r\nlangchain 0.0.215\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nfrom pathlib import Path\r\n\r\nfrom langchain import LlamaCpp\r\nfrom langchain.callbacks.manager import CallbackManager\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\nfrom langchain.chains import RetrievalQAWithSourcesChain\r\nfrom langchain.document_loaders import UnstructuredMarkdownLoader\r\nfrom langchain.embeddings import LlamaCppEmbeddings\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.vectorstores import Weaviate\r\n\r\nmodel_dir = Path.home() / 'models'\r\nllama_path = model_dir / 'llama-7b.ggmlv3.q4_0.bin'\r\nassert llama_path.exists()\r\nencoder = LlamaCppEmbeddings(model_path=str(llama_path))\r\nencoder.client.verbose = False\r\nreadme_path = Path(__file__).parent.parent / 'README.md'\r\nloader = UnstructuredMarkdownLoader(str(readme_path))\r\ndata = loader.load()\r\ntext_splitter = CharacterTextSplitter(\r\n    separator=\"\\n\\n\",\r\n    chunk_size=10,\r\n    chunk_overlap=2,\r\n    length_function=len,\r\n)\r\ntexts = text_splitter.split_documents(data)\r\ndb = Weaviate.from_documents(texts, encoder, weaviate_url='http://localhost:8080', by_text=False)\r\ncallback_manager = CallbackManager([StreamingStdOutCallbackHandler()])\r\nllm = LlamaCpp(model_path=str(llama_path), temperature=0, callback_manager=callback_manager, stop=[], verbose=False)\r\nllm.client.verbose = False\r\nchain = RetrievalQAWithSourcesChain.from_chain_type(llm, chain_type=\"stuff\", retriever=db.as_retriever(),\r\n                                                    reduce_k_below_max_tokens=True, max_tokens_limit=512)\r\nquery = \"How do I install this package?\"\r\nchain({\"question\": query})\r\n```\n\n### Expected behavior\n\nWhen setting `max_tokens_limit` I expect it to be the limit for the final prompt passed to the llm\r\nSeeing this error message is very confusing after checking that the question and loaded source documents do not reach the token limit\r\nWhen `BaseQAWithSourcesChain.from_llm` is called, it uses a long `combine_prompt_template` by default, which in the case of LlamaCpp is already over the token limit\r\nI would expect `max_tokens_limit` to apply to the full prompt, or to receive an error message explaining that the limit was breached because of the template, and ideally an example of how to alter the template",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6754/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6754/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6753",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6753/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6753/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6753/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6753",
        "id": 1774468457,
        "node_id": "I_kwDOIPDwls5pxD1p",
        "number": 6753,
        "title": "path_params and url format not work",
        "user": {
            "login": "0xbluesecurity",
            "id": 24714804,
            "node_id": "MDQ6VXNlcjI0NzE0ODA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/24714804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xbluesecurity",
            "html_url": "https://github.com/0xbluesecurity",
            "followers_url": "https://api.github.com/users/0xbluesecurity/followers",
            "following_url": "https://api.github.com/users/0xbluesecurity/following{/other_user}",
            "gists_url": "https://api.github.com/users/0xbluesecurity/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/0xbluesecurity/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/0xbluesecurity/subscriptions",
            "organizations_url": "https://api.github.com/users/0xbluesecurity/orgs",
            "repos_url": "https://api.github.com/users/0xbluesecurity/repos",
            "events_url": "https://api.github.com/users/0xbluesecurity/events{/privacy}",
            "received_events_url": "https://api.github.com/users/0xbluesecurity/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T10:39:55Z",
        "updated_at": "2023-10-02T16:05:34Z",
        "closed_at": "2023-10-02T16:05:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython 3.9.6\r\n\r\n_**Requirement**_\r\n\r\naiohttp==3.8.4\r\naiosignal==1.3.1\r\nasync-timeout==4.0.2\r\nattrs==23.1.0\r\ncertifi==2023.5.7\r\ncharset-normalizer==3.1.0\r\ndataclasses-json==0.5.8\r\ndocopt==0.6.2\r\nfrozenlist==1.3.3\r\nidna==3.4\r\nlangchain==0.0.215\r\nlangchainplus-sdk==0.0.17\r\nmarshmallow==3.19.0\r\nmarshmallow-enum==1.5.1\r\nmultidict==6.0.4\r\nmypy-extensions==1.0.0\r\nnumexpr==2.8.4\r\nnumpy==1.25.0\r\nopenai==0.27.8\r\nopenapi-schema-pydantic==1.2.4\r\npackaging==23.1\r\npipreqs==0.4.13\r\npydantic==1.10.9\r\nPyYAML==6.0\r\nrequests==2.31.0\r\nSQLAlchemy==2.0.17\r\ntenacity==8.2.2\r\ntqdm==4.65.0\r\ntyping-inspect==0.9.0\r\ntyping_extensions==4.6.3\r\nurllib3==2.0.3\r\nyarg==0.1.9\r\nyarl==1.9.2\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nEndpoint:\r\n\r\n**URL**: https://api.gopluslabs.io//api/v1/token_security/{chain_id}\r\n**arguments**:\r\n<img width=\"593\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/24714804/b2d1226d-2d0b-45d8-9400-7f420d463f38\">\r\n\r\nIn openapi.py: 160\r\n<img width=\"596\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/24714804/06d70353-47de-4e32-90c3-7f5f6c316047\">\r\nAfter the _format_url, url doesn't change, the result of printer is also https://api.gopluslabs.io//api/v1/token_security/{chain_id}\r\n\n\n### Expected behavior\n\nExpect URL and path parameters to be properly combined after formatting like:\r\n**https://api.gopluslabs.io//api/v1/token_security/1**\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6753/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6753/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6752",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6752/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6752/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6752/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6752",
        "id": 1774423676,
        "node_id": "I_kwDOIPDwls5pw458",
        "number": 6752,
        "title": "    from langchain.utilities import RequestsWrapper ImportError: cannot import name 'RequestsWrapper' from 'langchain.utilities'Issue: <Please write a comprehensive title after the 'Issue: ' prefix>",
        "user": {
            "login": "shrivijaya",
            "id": 44565748,
            "node_id": "MDQ6VXNlcjQ0NTY1NzQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/44565748?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shrivijaya",
            "html_url": "https://github.com/shrivijaya",
            "followers_url": "https://api.github.com/users/shrivijaya/followers",
            "following_url": "https://api.github.com/users/shrivijaya/following{/other_user}",
            "gists_url": "https://api.github.com/users/shrivijaya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shrivijaya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shrivijaya/subscriptions",
            "organizations_url": "https://api.github.com/users/shrivijaya/orgs",
            "repos_url": "https://api.github.com/users/shrivijaya/repos",
            "events_url": "https://api.github.com/users/shrivijaya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shrivijaya/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-26T10:13:50Z",
        "updated_at": "2023-10-02T16:05:39Z",
        "closed_at": "2023-10-02T16:05:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n_No response_\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6752/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6752/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6751",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6751/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6751/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6751/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6751",
        "id": 1774373240,
        "node_id": "I_kwDOIPDwls5pwsl4",
        "number": 6751,
        "title": "Weaviate.from_documents throws PosixPath is not JSON serializable when documents loaded via Pathlib",
        "user": {
            "login": "Robbie-Palmer",
            "id": 8760191,
            "node_id": "MDQ6VXNlcjg3NjAxOTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8760191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Robbie-Palmer",
            "html_url": "https://github.com/Robbie-Palmer",
            "followers_url": "https://api.github.com/users/Robbie-Palmer/followers",
            "following_url": "https://api.github.com/users/Robbie-Palmer/following{/other_user}",
            "gists_url": "https://api.github.com/users/Robbie-Palmer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Robbie-Palmer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Robbie-Palmer/subscriptions",
            "organizations_url": "https://api.github.com/users/Robbie-Palmer/orgs",
            "repos_url": "https://api.github.com/users/Robbie-Palmer/repos",
            "events_url": "https://api.github.com/users/Robbie-Palmer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Robbie-Palmer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-26T09:48:43Z",
        "updated_at": "2023-10-02T16:05:44Z",
        "closed_at": "2023-10-02T16:05:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nUbuntu 22.04.2\r\nPython 3.10.11\r\nlangchain 0.0.215\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nfrom pathlib import Path\r\n\r\nfrom langchain.document_loaders import UnstructuredMarkdownLoader\r\nfrom langchain.embeddings import LlamaCppEmbeddings\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.vectorstores import Weaviate\r\n\r\nmodel_dir = Path.home() / 'models'\r\nllama_path = model_dir / 'llama-7b.ggmlv3.q4_0.bin'\r\nencoder = LlamaCppEmbeddings(model_path=str(llama_path))\r\nreadme_path = Path(__file__).parent.parent / 'README.md'\r\nloader = UnstructuredMarkdownLoader(readme_path)\r\ndata = loader.load()\r\ntext_splitter = CharacterTextSplitter(\r\n    separator=\"\\n\\n\",\r\n    chunk_size=10,\r\n    chunk_overlap=2,\r\n    length_function=len,\r\n)\r\ntexts = text_splitter.split_documents(data)\r\ndb = Weaviate.from_documents(texts, encoder, weaviate_url='http://localhost:8080', by_text=False)\r\n```\n\n### Expected behavior\n\nThe `UnstructuredMarkdownLoader` loads the metadata as a `PosixPath` object\r\n`Weaviate.from_documents` then throws an error because it can't post this metadata, as `PosixPath` is not serializable\r\nIf I change `loader = UnstructuredMarkdownLoader(readme_path)` to `loader = UnstructuredMarkdownLoader(str(readme_path))` then the metadata is loaded as a string, and the posting to Weaviate works\r\n\r\nI would expect `UnstructuredMarkdownLoader` to have the same behaviour when I pass it a string or a path like object\r\nI would expect Weaviate to handle serialising a path like object to a string\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6751/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6751/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6749",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6749/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6749/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6749/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6749",
        "id": 1774318073,
        "node_id": "I_kwDOIPDwls5pwfH5",
        "number": 6749,
        "title": "Is there a way to improve the faiss index loading speed?",
        "user": {
            "login": "Helenailse1",
            "id": 110455476,
            "node_id": "U_kgDOBpVqtA",
            "avatar_url": "https://avatars.githubusercontent.com/u/110455476?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Helenailse1",
            "html_url": "https://github.com/Helenailse1",
            "followers_url": "https://api.github.com/users/Helenailse1/followers",
            "following_url": "https://api.github.com/users/Helenailse1/following{/other_user}",
            "gists_url": "https://api.github.com/users/Helenailse1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Helenailse1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Helenailse1/subscriptions",
            "organizations_url": "https://api.github.com/users/Helenailse1/orgs",
            "repos_url": "https://api.github.com/users/Helenailse1/repos",
            "events_url": "https://api.github.com/users/Helenailse1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Helenailse1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-26T09:17:14Z",
        "updated_at": "2023-11-02T09:53:30Z",
        "closed_at": "2023-10-02T16:05:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nThe Faiss index is too large, the loading time is very long, and the experience is not good. Is there any way to optimize it?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6749/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6749/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6748",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6748/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6748/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6748/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6748",
        "id": 1774313253,
        "node_id": "I_kwDOIPDwls5pwd8l",
        "number": 6748,
        "title": "Issue: ConversationBufferMemory stopped working",
        "user": {
            "login": "Dave86ch",
            "id": 87725170,
            "node_id": "MDQ6VXNlcjg3NzI1MTcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/87725170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Dave86ch",
            "html_url": "https://github.com/Dave86ch",
            "followers_url": "https://api.github.com/users/Dave86ch/followers",
            "following_url": "https://api.github.com/users/Dave86ch/following{/other_user}",
            "gists_url": "https://api.github.com/users/Dave86ch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Dave86ch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Dave86ch/subscriptions",
            "organizations_url": "https://api.github.com/users/Dave86ch/orgs",
            "repos_url": "https://api.github.com/users/Dave86ch/repos",
            "events_url": "https://api.github.com/users/Dave86ch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Dave86ch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-06-26T09:14:44Z",
        "updated_at": "2023-10-07T16:06:05Z",
        "closed_at": "2023-10-07T16:06:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello everyone. \r\nOddly enough, I've recently run into a problem with memory. \r\nIn the first version, I had no issues, but now it has stopped working. It's as though my agent has Alzheimer's disease. \r\nDoes anyone have any suggestions as to why it might have stopped working? \r\nThere doesn't seem to be any error message or any apparent reason. Thank you!\r\n\r\nI already tried reinstalling chromedb.\r\n\r\n\r\n```\r\ndef agent(tools):\r\n    llm = ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo-0613\")\r\n    agent_kwargs = {\r\n    \"user name is bob\": [MessagesPlaceholder(variable_name=\"chat_history\")],\r\n    }\r\n    template = \"\"\"This is a conversation between a human and a bot:\r\n\r\n    {chat_history}\r\n\r\n    Write a summary of the conversation for {input}:\r\n    \"\"\"\r\n\r\n    prompt = PromptTemplate(input_variables=[\"input\", \"chat_history\"], template=template)\r\n    memory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\n    #agent_chain = initialize_agent(tools, llm, agent=AgentType.CHAT_CONVERSATIONAL_REACT_DESCRIPTION, verbose=True, memory=memory)\r\n    agent_chain=initialize_agent(tools, llm, agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION, prompt = prompt, verbose=True, agent_kwargs=agent_kwargs, memory=memory, max_iterations=5, early_stopping_method=\"generate\")\r\n    return agent_chain\r\n```\r\n\r\nPerhaps this error is realated\r\n\r\n\u00b4\u00b4\u00b4\r\nWARNING:root:Failed to load default session, using empty session: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))\r\nFailed to load default session, using empty session: ('Connection aborted.', RemoteDisconnected('Remote end closed connection without response'))\r\n\r\n\u00b4\u00b4\u00b4\r\n\r\n\u00b4\u00b4\u00b4\r\nWARNING:root:Failed to persist run: HTTPConnectionPool(host='localhost', port=8000): Max retries exceeded with url: /chain-runs (Caused by NewConnectionError('<urllib3.connectio\r\nn.HTTPConnection object at 0x7f1458a82770>: Failed to establish a new connection: [Errno 111] Connection refused'))                                                              Failed to persist run: HTTPConnectionPool(host='localhost', port=8000): Max retries exceeded with url: /chain-runs (Caused by NewConnectionError('<urllib3.connection.HTTPConnect\r\nion object at 0x7f1458a82770>: Failed to establish a new connection: [Errno 111] Connection refused'))                                                                           I'm sorry, but I don't have access to personal information.\r\n\r\n\r\n\u00b4\u00b4\u00b4\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6748/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6748/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6747",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6747/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6747/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6747/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6747",
        "id": 1774202161,
        "node_id": "I_kwDOIPDwls5pwC0x",
        "number": 6747,
        "title": "Issue: Entity extraction using custom rules",
        "user": {
            "login": "saswat0",
            "id": 32325136,
            "node_id": "MDQ6VXNlcjMyMzI1MTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/32325136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saswat0",
            "html_url": "https://github.com/saswat0",
            "followers_url": "https://api.github.com/users/saswat0/followers",
            "following_url": "https://api.github.com/users/saswat0/following{/other_user}",
            "gists_url": "https://api.github.com/users/saswat0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saswat0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saswat0/subscriptions",
            "organizations_url": "https://api.github.com/users/saswat0/orgs",
            "repos_url": "https://api.github.com/users/saswat0/repos",
            "events_url": "https://api.github.com/users/saswat0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saswat0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-06-26T08:13:23Z",
        "updated_at": "2023-10-05T16:08:07Z",
        "closed_at": "2023-10-05T16:08:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI would like to perform a query on a database using natural language. However, running direct queries is not possible, and I have to do it via an API. For that, given a sentence, I'd like to extract some custom entities from it. \r\n\r\nFor example, if the sentence is: \"How many more than 20 years old male users viewed a page or logged in in the last 30 days?\"\r\nThe entities are:\r\n```\r\n<gender, equals, male>,\r\n<age, greater than, 20>,\r\n<event name, equals, view page>,\r\n<event name, equals, login>,\r\n<event timestamp, more than, 30 days>\r\n```\r\n\r\nThe first element of each entity (triplet) comes from the list of columns\r\nThe second element is inferred from context (nature of the operator if it's a single value or array to compare with)\r\nThe third element is also inferred from the context and must belong to the chosen column (first element)\r\n\r\nI'm not able to restrict either of these elements for the entity. I'd like an agent first to check all the columns that are available, choose one and view their unique values. Once it gets that, either choose that column (first element) and value (third element) or look again and repeat these steps.\r\n\r\nAny help on this would be great!\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6747/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6747/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6746",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6746/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6746/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6746/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6746",
        "id": 1774182414,
        "node_id": "PR_kwDOIPDwls5T43ZD",
        "number": 6746,
        "title": "Fixed caching bug for Multiple Caching types by correctly checking types",
        "user": {
            "login": "0xcrusher",
            "id": 113572970,
            "node_id": "U_kgDOBsT8ag",
            "avatar_url": "https://avatars.githubusercontent.com/u/113572970?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xcrusher",
            "html_url": "https://github.com/0xcrusher",
            "followers_url": "https://api.github.com/users/0xcrusher/followers",
            "following_url": "https://api.github.com/users/0xcrusher/following{/other_user}",
            "gists_url": "https://api.github.com/users/0xcrusher/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/0xcrusher/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/0xcrusher/subscriptions",
            "organizations_url": "https://api.github.com/users/0xcrusher/orgs",
            "repos_url": "https://api.github.com/users/0xcrusher/repos",
            "events_url": "https://api.github.com/users/0xcrusher/events{/privacy}",
            "received_events_url": "https://api.github.com/users/0xcrusher/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-26T08:03:45Z",
        "updated_at": "2023-06-26T08:14:33Z",
        "closed_at": "2023-06-26T08:14:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6746",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6746",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6746.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6746.patch",
            "merged_at": "2023-06-26T08:14:32Z"
        },
        "body": "\r\n  - Fixed an issue where some caching types check the wrong types, hence not allowing caching to work\r\n\r\n\r\nMaintainer responsibilities:\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6746/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6746/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6745",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6745/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6745/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6745/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6745",
        "id": 1774162267,
        "node_id": "I_kwDOIPDwls5pv5Fb",
        "number": 6745,
        "title": "LLM\u4e2d\u6587\u5e94\u7528\u4ea4\u6d41\u5fae\u4fe1\u7fa4",
        "user": {
            "login": "Anna10071",
            "id": 90118245,
            "node_id": "MDQ6VXNlcjkwMTE4MjQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/90118245?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Anna10071",
            "html_url": "https://github.com/Anna10071",
            "followers_url": "https://api.github.com/users/Anna10071/followers",
            "following_url": "https://api.github.com/users/Anna10071/following{/other_user}",
            "gists_url": "https://api.github.com/users/Anna10071/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Anna10071/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Anna10071/subscriptions",
            "organizations_url": "https://api.github.com/users/Anna10071/orgs",
            "repos_url": "https://api.github.com/users/Anna10071/repos",
            "events_url": "https://api.github.com/users/Anna10071/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Anna10071/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528829,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvPQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/invalid",
                "name": "invalid",
                "color": "e4e669",
                "default": true,
                "description": "This doesn't seem right"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-26T07:53:56Z",
        "updated_at": "2023-06-26T23:51:49Z",
        "closed_at": "2023-06-26T23:51:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\n\r\nLLM\u4e2d\u6587\u5e94\u7528\u548c\u6280\u672f\u4ea4\u6d41\u7fa4\uff0c\u5982\u679c\u4e8c\u7ef4\u7801\u8fc7\u671f\u53ef\u52a0\u5fae\u4fe1\u5907\u6ce8LLM\u5e94\u7528\uff1ayydsa0007\r\n\r\n![9cfa9a394442162b466b747db86b5c9](https://github.com/hwchase17/langchain/assets/90118245/27869c08-69aa-4cea-9a6b-f54ba020e9d2)\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6745/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6745/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6744",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6744/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6744/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6744/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6744",
        "id": 1774074429,
        "node_id": "I_kwDOIPDwls5pvjo9",
        "number": 6744,
        "title": "SitemapLoader is not working verify error from module",
        "user": {
            "login": "nick26",
            "id": 425538,
            "node_id": "MDQ6VXNlcjQyNTUzOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/425538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nick26",
            "html_url": "https://github.com/nick26",
            "followers_url": "https://api.github.com/users/nick26/followers",
            "following_url": "https://api.github.com/users/nick26/following{/other_user}",
            "gists_url": "https://api.github.com/users/nick26/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nick26/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nick26/subscriptions",
            "organizations_url": "https://api.github.com/users/nick26/orgs",
            "repos_url": "https://api.github.com/users/nick26/repos",
            "events_url": "https://api.github.com/users/nick26/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nick26/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T07:02:41Z",
        "updated_at": "2023-10-02T16:06:04Z",
        "closed_at": "2023-10-02T16:06:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version i got from \r\n!pip install langchain\r\n\r\nimport nest_asyncio\r\nnest_asyncio.apply()\r\n\r\nfrom langchain.document_loaders.sitemap import SitemapLoader\r\n\r\nSitemapLoader.requests_per_second = 2\r\n# Optional: avoid `[SSL: CERTIFICATE_VERIFY_FAILED]` issue\r\n#SitemapLoader.requests_kwargs = {'verify':True}\r\nloader = SitemapLoader(\r\n    \"https://www.infoblox.com/sitemap_index.xml\",\r\n)\r\ndocs = loader.load()  #this is where it fails it works with version\r\n\r\n\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n[<ipython-input-5-609988fd11f7>](https://localhost:8080/#) in <cell line: 13>()\r\n     11     \"https://www.infoblox.com/sitemap_index.xml\",\r\n     12 )\r\n---> 13 docs = loader.load()\r\n\r\n2 frames\r\n[/usr/local/lib/python3.10/dist-packages/langchain/document_loaders/web_base.py](https://localhost:8080/#) in _scrape(self, url, parser)\r\n    186         self._check_parser(parser)\r\n    187 \r\n--> 188         html_doc = self.session.get(url, verify=self.verify, **self.requests_kwargs)\r\n    189         html_doc.encoding = html_doc.apparent_encoding\r\n    190         return BeautifulSoup(html_doc.text, parser)\r\n\r\nTypeError: requests.sessions.Session.get() got multiple values for keyword argument 'verify'\r\n\r\n\r\n#this was working in older version\r\n!pip install langchain==0.0.189\r\n\r\nthanks\r\nnick\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfollow the code above\n\n### Expected behavior\n\nit should run not crash",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6744/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6744/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6743",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6743/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6743/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6743/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6743",
        "id": 1773971733,
        "node_id": "I_kwDOIPDwls5pvKkV",
        "number": 6743,
        "title": "id type in SupabaseVectorStore doesn't match SQL column",
        "user": {
            "login": "xleven",
            "id": 10850975,
            "node_id": "MDQ6VXNlcjEwODUwOTc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/10850975?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xleven",
            "html_url": "https://github.com/xleven",
            "followers_url": "https://api.github.com/users/xleven/followers",
            "following_url": "https://api.github.com/users/xleven/following{/other_user}",
            "gists_url": "https://api.github.com/users/xleven/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xleven/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xleven/subscriptions",
            "organizations_url": "https://api.github.com/users/xleven/orgs",
            "repos_url": "https://api.github.com/users/xleven/repos",
            "events_url": "https://api.github.com/users/xleven/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xleven/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-06-26T06:17:47Z",
        "updated_at": "2023-10-10T03:06:10Z",
        "closed_at": "2023-07-08T00:56:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version: 0.0.214\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSame as [Supabase docs](https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/supabase) with the exact table and function created, where `id` column has type of bigint.\r\n\r\n```Python\r\nfrom supabase.client import Client, create_client\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.vectorstores import SupabaseVectorStore\r\n\r\nloader = TextLoader(\"../../../state_of_the_union.txt\")\r\ndocuments = loader.load()\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ndocs = text_splitter.split_documents(documents)\r\n\r\nembeddings = OpenAIEmbeddings()\r\n\r\nsupabase_client: Client = create_client(\r\n    supabase_url=os.getenv(\"SUPABASE_URL\"),\r\n    supabase_key=os.getenv(\"SUPABASE_SERVICE_KEY\"),\r\n)\r\n\r\nsupabase_vector_store = SupabaseVectorStore.from_documents(\r\n    documents=docs,\r\n    client=supabase_client,\r\n    embedding=embeddings,\r\n)\r\n```\r\n\r\nGot\r\n> APIError: {'code': '22P02', 'details': None, 'hint': None, 'message': 'invalid input syntax for type bigint: \"64f03aff-0c0e-4f24-91e2-e01fcaxxxxxx\"'}\n\n### Expected behavior\n\nSuccessfully insert and embed the split docs into Supabase.\r\n\r\n\r\nTo be helpful, I believe it was introduced by [this commit](https://github.com/hwchase17/langchain/commit/be02572d586bcb33fffe89c37b81d5ba26762bec) regarding the List[str] type `ids`. But not sure if it was intended with docs not updated yet, or otherwise.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6743/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6743/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6741",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6741/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6741/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6741/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6741",
        "id": 1773840557,
        "node_id": "I_kwDOIPDwls5puqit",
        "number": 6741,
        "title": "Getting \"ValueError: Unsupported chat history format:\" while using ConversationalRetrievalChain with memory type VectorStoreRetrieverMemory",
        "user": {
            "login": "mail2mhossain",
            "id": 6905164,
            "node_id": "MDQ6VXNlcjY5MDUxNjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6905164?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mail2mhossain",
            "html_url": "https://github.com/mail2mhossain",
            "followers_url": "https://api.github.com/users/mail2mhossain/followers",
            "following_url": "https://api.github.com/users/mail2mhossain/following{/other_user}",
            "gists_url": "https://api.github.com/users/mail2mhossain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mail2mhossain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mail2mhossain/subscriptions",
            "organizations_url": "https://api.github.com/users/mail2mhossain/orgs",
            "repos_url": "https://api.github.com/users/mail2mhossain/repos",
            "events_url": "https://api.github.com/users/mail2mhossain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mail2mhossain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-26T04:47:59Z",
        "updated_at": "2023-10-24T16:07:18Z",
        "closed_at": "2023-10-24T16:07:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain-0.0.207, Windows, Python-3.9.16\r\n\r\nMemory (VectorStoreRetrieverMemory) Settings:\r\n\r\ndimension = 768\r\nindex = faiss.IndexFlatL2(dimension)\r\n\r\nembeddings = HuggingFaceEmbeddings()\r\n\r\nvectorstore = FAISS(embeddings.embed_query, index, InMemoryDocstore({}), {})\r\nretriever = vectorstore.as_retriever(search_kwargs=dict(k=3))\r\nmemory = VectorStoreRetrieverMemory(\r\n    memory_key=\"chat_history\",\r\n    return_docs=True,\r\n    retriever=retriever,\r\n    return_messages=True,\r\n)\r\n\r\nConversationalRetrievalChain Settings:\r\n\r\n_template = \"\"\"Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question, in its original language.\\\r\nMake sure to avoid using any unclear pronouns.\r\n\r\nChat History:\r\n{chat_history}\r\n(You do not need to use these pieces of information if not relevant)\r\nFollow Up Input: {question}\r\nStandalone question:\"\"\"\r\nCONDENSE_QUESTION_PROMPT = PromptTemplate(\r\n    input_variables=[\"chat_history\", \"question\"], template=_template\r\n)\r\n\r\nquestion_generator = LLMChain(llm=llm, prompt=CONDENSE_QUESTION_PROMPT)\r\ndoc_chain = load_qa_with_sources_chain(\r\n    llm, chain_type=\"refine\"\r\n)  # stuff  map_reduce  refine\r\n\r\nqa = ConversationalRetrievalChain(\r\n    retriever=chroma.as_retriever(search_kwargs=dict(k=5)),\r\n    memory=memory,\r\n    combine_docs_chain=doc_chain,\r\n    question_generator=question_generator,\r\n    return_source_documents=True,\r\n    # verbose=True,\r\n)\r\n\r\nresponses = qa({\"question\": user_input})\r\n\r\nISSUE: At first cal, it is giving results. BUT in second call, it is throwing an error as follows:\r\n\r\nValueError: Unsupported chat history format: <class 'langchain.schema.Document'>. Full chat history:\r\n\r\nWhat am I doing wrong here?\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [X] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Memory (VectorStoreRetrieverMemory) Settings:\r\n\r\ndimension = 768\r\nindex = faiss.IndexFlatL2(dimension)\r\n\r\nembeddings = HuggingFaceEmbeddings()\r\n\r\nvectorstore = FAISS(embeddings.embed_query, index, InMemoryDocstore({}), {})\r\nretriever = vectorstore.as_retriever(search_kwargs=dict(k=3))\r\nmemory = VectorStoreRetrieverMemory(\r\n    memory_key=\"chat_history\",\r\n    return_docs=True,\r\n    retriever=retriever,\r\n    return_messages=True,\r\n)\r\n\r\n2. ConversationalRetrievalChain Settings:\r\n\r\n_template = \"\"\"Given the following conversation and a follow up question, rephrase the follow up question to be a standalone question, in its original language.\\\r\nMake sure to avoid using any unclear pronouns.\r\n\r\nChat History:\r\n{chat_history}\r\n(You do not need to use these pieces of information if not relevant)\r\nFollow Up Input: {question}\r\nStandalone question:\"\"\"\r\nCONDENSE_QUESTION_PROMPT = PromptTemplate(\r\n    input_variables=[\"chat_history\", \"question\"], template=_template\r\n)\r\n\r\nquestion_generator = LLMChain(llm=llm, prompt=CONDENSE_QUESTION_PROMPT)\r\ndoc_chain = load_qa_with_sources_chain(\r\n    llm, chain_type=\"refine\"\r\n)  # stuff  map_reduce  refine\r\n\r\nqa = ConversationalRetrievalChain(\r\n    retriever=chroma.as_retriever(search_kwargs=dict(k=5)),\r\n    memory=memory,\r\n    combine_docs_chain=doc_chain,\r\n    question_generator=question_generator,\r\n    return_source_documents=True,\r\n    # verbose=True,\r\n)\r\n\r\nresponses = qa({\"question\": user_input})\r\n\r\nISSUE: At first cal, it is giving results. BUT in second call, it is throwing an error as follows:\r\n\r\nValueError: Unsupported chat history format: <class 'langchain.schema.Document'>. Full chat history:\r\n\r\nWhat am I doing wrong here?\n\n### Expected behavior\n\nChat history should be injected in chain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6741/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6741/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6740",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6740/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6740/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6740/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6740",
        "id": 1773789387,
        "node_id": "I_kwDOIPDwls5pueDL",
        "number": 6740,
        "title": "AttributeError: 'OpenAI' object has no attribute 'predict'",
        "user": {
            "login": "solon-ma",
            "id": 112145677,
            "node_id": "U_kgDOBq81DQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/112145677?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/solon-ma",
            "html_url": "https://github.com/solon-ma",
            "followers_url": "https://api.github.com/users/solon-ma/followers",
            "following_url": "https://api.github.com/users/solon-ma/following{/other_user}",
            "gists_url": "https://api.github.com/users/solon-ma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/solon-ma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/solon-ma/subscriptions",
            "organizations_url": "https://api.github.com/users/solon-ma/orgs",
            "repos_url": "https://api.github.com/users/solon-ma/repos",
            "events_url": "https://api.github.com/users/solon-ma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/solon-ma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-06-26T04:01:06Z",
        "updated_at": "2023-08-31T10:13:23Z",
        "closed_at": "2023-06-28T02:37:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain Version: 0.0.74\r\nopenai Version: 0.27.8\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nfrom langchain.llms import OpenAI \r\nllm = OpenAI(openai_api_key=INSERT_API_KEY, temperature=0.9)\r\nllm.predict(\"What would be a good company name for a company that makes colorful socks?\")\r\n\r\n\r\n### Expected behavior\r\n\r\nI was following the langchain quickstart guide, expected to see something similar to the output.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6740/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6740/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6739",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6739/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6739/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6739/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6739",
        "id": 1773782633,
        "node_id": "PR_kwDOIPDwls5T3nxB",
        "number": 6739,
        "title": "20230626",
        "user": {
            "login": "xinxiangbobby",
            "id": 8306832,
            "node_id": "MDQ6VXNlcjgzMDY4MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8306832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xinxiangbobby",
            "html_url": "https://github.com/xinxiangbobby",
            "followers_url": "https://api.github.com/users/xinxiangbobby/followers",
            "following_url": "https://api.github.com/users/xinxiangbobby/following{/other_user}",
            "gists_url": "https://api.github.com/users/xinxiangbobby/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xinxiangbobby/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xinxiangbobby/subscriptions",
            "organizations_url": "https://api.github.com/users/xinxiangbobby/orgs",
            "repos_url": "https://api.github.com/users/xinxiangbobby/repos",
            "events_url": "https://api.github.com/users/xinxiangbobby/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xinxiangbobby/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T03:52:48Z",
        "updated_at": "2023-06-26T07:36:49Z",
        "closed_at": "2023-06-26T07:36:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6739",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6739",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6739.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6739.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6739/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6739/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6738",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6738/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6738/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6738/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6738",
        "id": 1773774517,
        "node_id": "PR_kwDOIPDwls5T3mCa",
        "number": 6738,
        "title": "V215 sqlalchemyfix",
        "user": {
            "login": "abisek",
            "id": 7350893,
            "node_id": "MDQ6VXNlcjczNTA4OTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7350893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abisek",
            "html_url": "https://github.com/abisek",
            "followers_url": "https://api.github.com/users/abisek/followers",
            "following_url": "https://api.github.com/users/abisek/following{/other_user}",
            "gists_url": "https://api.github.com/users/abisek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abisek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abisek/subscriptions",
            "organizations_url": "https://api.github.com/users/abisek/orgs",
            "repos_url": "https://api.github.com/users/abisek/repos",
            "events_url": "https://api.github.com/users/abisek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abisek/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-26T03:40:45Z",
        "updated_at": "2023-06-26T18:54:52Z",
        "closed_at": "2023-06-26T18:54:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6738",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6738",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6738.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6738.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6738/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6738/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6737",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6737/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6737/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6737/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6737",
        "id": 1773754355,
        "node_id": "PR_kwDOIPDwls5T3h0u",
        "number": 6737,
        "title": "Myscale/improve string pattern match",
        "user": {
            "login": "mpskex",
            "id": 8456706,
            "node_id": "MDQ6VXNlcjg0NTY3MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8456706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mpskex",
            "html_url": "https://github.com/mpskex",
            "followers_url": "https://api.github.com/users/mpskex/followers",
            "following_url": "https://api.github.com/users/mpskex/following{/other_user}",
            "gists_url": "https://api.github.com/users/mpskex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mpskex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mpskex/subscriptions",
            "organizations_url": "https://api.github.com/users/mpskex/orgs",
            "repos_url": "https://api.github.com/users/mpskex/repos",
            "events_url": "https://api.github.com/users/mpskex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mpskex/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-26T03:09:11Z",
        "updated_at": "2023-09-07T09:42:51Z",
        "closed_at": "2023-09-07T09:42:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6737",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6737",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6737.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6737.patch",
            "merged_at": null
        },
        "body": "- Description: Improved prompts for comparator `LIKE` and `CONTAIN`. They are ambiguous under some circumstances like \"Answer this questions using papers published by Geoffrey Hinton\". In that example LLM tends to use `LIKE` instead of `CONTAIN` to column `authors`, which is actually a column with type list of strings.\r\n\r\nWe revised the prompt to address this problem:\r\n1. Changed prompt for comparator `LIKE` to `string_pattern_like`\r\n2. Changed prompt for comparator `CONTAIN` to `list_contain`\r\n\r\n@hwchase17 \r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  3. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6737/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6737/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6736",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6736/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6736/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6736/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6736",
        "id": 1773723486,
        "node_id": "PR_kwDOIPDwls5T3bfA",
        "number": 6736,
        "title": "Fixed bug in AnalyticDB Vector Store caused by upgrade SQLAlchemy version",
        "user": {
            "login": "wangxuqi",
            "id": 13748374,
            "node_id": "MDQ6VXNlcjEzNzQ4Mzc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13748374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wangxuqi",
            "html_url": "https://github.com/wangxuqi",
            "followers_url": "https://api.github.com/users/wangxuqi/followers",
            "following_url": "https://api.github.com/users/wangxuqi/following{/other_user}",
            "gists_url": "https://api.github.com/users/wangxuqi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wangxuqi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wangxuqi/subscriptions",
            "organizations_url": "https://api.github.com/users/wangxuqi/orgs",
            "repos_url": "https://api.github.com/users/wangxuqi/repos",
            "events_url": "https://api.github.com/users/wangxuqi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wangxuqi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-26T02:33:53Z",
        "updated_at": "2023-06-26T12:35:26Z",
        "closed_at": "2023-06-26T12:35:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6736",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6736",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6736.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6736.patch",
            "merged_at": "2023-06-26T12:35:25Z"
        },
        "body": "Fixed bug in AnalyticDB VectorStore caused by the SQLAlchemy upgrade version to 1.4.47\r\n\r\nThe new version no longer supports the `connection.commit()` function, resulting in the error: AttributeError: 'Connection' object has no attribute 'commit'. Replace it with `with conn.begin():`.\r\n\r\nThis commit is related to VectorStores. @rlancemartin @eyurtsev ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6736/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6736/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6735",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6735/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6735/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6735/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6735",
        "id": 1773715060,
        "node_id": "PR_kwDOIPDwls5T3aV_",
        "number": 6735,
        "title": "Update the token_max value in mp_reduce",
        "user": {
            "login": "llmadd",
            "id": 38323944,
            "node_id": "MDQ6VXNlcjM4MzIzOTQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/38323944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/llmadd",
            "html_url": "https://github.com/llmadd",
            "followers_url": "https://api.github.com/users/llmadd/followers",
            "following_url": "https://api.github.com/users/llmadd/following{/other_user}",
            "gists_url": "https://api.github.com/users/llmadd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/llmadd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/llmadd/subscriptions",
            "organizations_url": "https://api.github.com/users/llmadd/orgs",
            "repos_url": "https://api.github.com/users/llmadd/repos",
            "events_url": "https://api.github.com/users/llmadd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/llmadd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-26T02:30:57Z",
        "updated_at": "2023-11-07T03:56:07Z",
        "closed_at": "2023-11-07T03:56:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6735",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6735",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6735.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6735.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: When I use the gpt-3.5-turbo-16k model, I often encounter this ValueError 'A single document was so long it could not be combined' due to the small token_max.I always need to modify a larger value for token_max to resolve the issue.I hope to enhance the functionality by dynamically modifying the value of token_max through obtaining the model used by the current chain.\r\n  - Issue: The issue of encountering frequent errors with long documents when using the large tokens model has been addressed and fixed.\r\n  - Dependencies: We need a more dynamic way of obtaining the model name in order to retrieve the maximum tokens of the model. This aspect still requires further improvement.\r\n  - Tag maintainer: @hwchase17 @dev2049 @vowelparrot\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6735/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6735/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6734",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6734/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6734/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6734/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6734",
        "id": 1773682169,
        "node_id": "PR_kwDOIPDwls5T3WBm",
        "number": 6734,
        "title": "feat: fix the Chinese characters in the solution content will be conv\u2026",
        "user": {
            "login": "AaaCabbage",
            "id": 13863169,
            "node_id": "MDQ6VXNlcjEzODYzMTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13863169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AaaCabbage",
            "html_url": "https://github.com/AaaCabbage",
            "followers_url": "https://api.github.com/users/AaaCabbage/followers",
            "following_url": "https://api.github.com/users/AaaCabbage/following{/other_user}",
            "gists_url": "https://api.github.com/users/AaaCabbage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AaaCabbage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AaaCabbage/subscriptions",
            "organizations_url": "https://api.github.com/users/AaaCabbage/orgs",
            "repos_url": "https://api.github.com/users/AaaCabbage/repos",
            "events_url": "https://api.github.com/users/AaaCabbage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AaaCabbage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-26T02:20:18Z",
        "updated_at": "2023-06-26T20:14:49Z",
        "closed_at": "2023-06-26T20:14:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6734",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6734",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6734.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6734.patch",
            "merged_at": "2023-06-26T20:14:48Z"
        },
        "body": "fix the Chinese characters in the solution content will be converted to ascii encoding, resulting in an abnormally long number of tokens\r\n\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6734/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6733",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6733/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6733/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6733/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6733",
        "id": 1773678248,
        "node_id": "I_kwDOIPDwls5puC6o",
        "number": 6733,
        "title": "Issue: Continue from a saved checkpoint",
        "user": {
            "login": "yuanyuan-april-song",
            "id": 109009057,
            "node_id": "U_kgDOBn9YoQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/109009057?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuanyuan-april-song",
            "html_url": "https://github.com/yuanyuan-april-song",
            "followers_url": "https://api.github.com/users/yuanyuan-april-song/followers",
            "following_url": "https://api.github.com/users/yuanyuan-april-song/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuanyuan-april-song/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuanyuan-april-song/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuanyuan-april-song/subscriptions",
            "organizations_url": "https://api.github.com/users/yuanyuan-april-song/orgs",
            "repos_url": "https://api.github.com/users/yuanyuan-april-song/repos",
            "events_url": "https://api.github.com/users/yuanyuan-april-song/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuanyuan-april-song/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-26T02:17:33Z",
        "updated_at": "2023-09-26T03:51:58Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am looking for help to continue langchain Refine chain from a saved checkpoint. None of my code got completed because of GPT API overload. Any help would be appreciated.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6733/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6733/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6732",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6732/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6732/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6732/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6732",
        "id": 1773627774,
        "node_id": "PR_kwDOIPDwls5T3KTX",
        "number": 6732,
        "title": "Throw error if trying to deserialize python prompts",
        "user": {
            "login": "Jflick58",
            "id": 22459070,
            "node_id": "MDQ6VXNlcjIyNDU5MDcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/22459070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jflick58",
            "html_url": "https://github.com/Jflick58",
            "followers_url": "https://api.github.com/users/Jflick58/followers",
            "following_url": "https://api.github.com/users/Jflick58/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jflick58/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jflick58/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jflick58/subscriptions",
            "organizations_url": "https://api.github.com/users/Jflick58/orgs",
            "repos_url": "https://api.github.com/users/Jflick58/repos",
            "events_url": "https://api.github.com/users/Jflick58/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jflick58/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-26T01:19:26Z",
        "updated_at": "2023-08-03T20:23:01Z",
        "closed_at": "2023-08-03T20:23:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6732",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6732",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6732.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6732.patch",
            "merged_at": null
        },
        "body": "Removes the ability to deserialize Python prompts and throws an error informing of the security issues with a link to documentation on how to use JSON and YAML instead. \r\n\r\nThe docs don't even talk about Python, and the saving function in the base prompt class doesn't support saving to Python either. I'm guessing this is something left in for backwards compatibility, but I think due to the CVEs we should just remove it. \r\n\r\n\r\nFixes #6627\r\nFixes #4849",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6732/reactions",
            "total_count": 6,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 6,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6732/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6730",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6730/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6730/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6730/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6730",
        "id": 1773575506,
        "node_id": "I_kwDOIPDwls5ptp1S",
        "number": 6730,
        "title": "TypeError: __init__() takes exactly 1 positional argument (2 given)",
        "user": {
            "login": "heavenkiller2018",
            "id": 45555611,
            "node_id": "MDQ6VXNlcjQ1NTU1NjEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45555611?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/heavenkiller2018",
            "html_url": "https://github.com/heavenkiller2018",
            "followers_url": "https://api.github.com/users/heavenkiller2018/followers",
            "following_url": "https://api.github.com/users/heavenkiller2018/following{/other_user}",
            "gists_url": "https://api.github.com/users/heavenkiller2018/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/heavenkiller2018/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/heavenkiller2018/subscriptions",
            "organizations_url": "https://api.github.com/users/heavenkiller2018/orgs",
            "repos_url": "https://api.github.com/users/heavenkiller2018/repos",
            "events_url": "https://api.github.com/users/heavenkiller2018/events{/privacy}",
            "received_events_url": "https://api.github.com/users/heavenkiller2018/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-25T23:58:49Z",
        "updated_at": "2023-06-26T23:52:15Z",
        "closed_at": "2023-06-26T23:52:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain:0.0.215\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nfrom langchain.indexes import VectorstoreIndexCreator\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nindex = VectorstoreIndexCreator(embedding=OpenAIEmbeddings('gpt2')).from_loaders([loader])\r\n\r\n\r\n```\r\n\r\nerror:\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nCell In[6], line 3\r\n      1 from langchain.indexes import VectorstoreIndexCreator\r\n      2 from langchain.embeddings import OpenAIEmbeddings\r\n----> 3 index = VectorstoreIndexCreator(embedding=OpenAIEmbeddings('gpt2')).from_loaders([loader])\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/pydantic/main.py:332], in pydantic.main.BaseModel.__init__()\r\n\r\nTypeError: __init__() takes exactly 1 positional argument (2 given)\r\n```\r\n\n\n### Expected behavior\n\nno",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6730/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6730/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6729",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6729/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6729/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6729/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6729",
        "id": 1773566609,
        "node_id": "PR_kwDOIPDwls5T29Fp",
        "number": 6729,
        "title": "Grobid parser for Scientific Articles from PDF",
        "user": {
            "login": "corranmac",
            "id": 9087263,
            "node_id": "MDQ6VXNlcjkwODcyNjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9087263?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/corranmac",
            "html_url": "https://github.com/corranmac",
            "followers_url": "https://api.github.com/users/corranmac/followers",
            "following_url": "https://api.github.com/users/corranmac/following{/other_user}",
            "gists_url": "https://api.github.com/users/corranmac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/corranmac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/corranmac/subscriptions",
            "organizations_url": "https://api.github.com/users/corranmac/orgs",
            "repos_url": "https://api.github.com/users/corranmac/repos",
            "events_url": "https://api.github.com/users/corranmac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/corranmac/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-25T23:38:51Z",
        "updated_at": "2023-06-29T21:29:30Z",
        "closed_at": "2023-06-29T21:29:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6729",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6729",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6729.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6729.patch",
            "merged_at": "2023-06-29T21:29:29Z"
        },
        "body": "### Scientific Article PDF Parsing via Grobid\r\n\r\n`Description:`\r\nThis change adds the GrobidParser class, which uses the Grobid library to parse scientific articles into a universal XML format containing the article title, references, sections, section text etc. The GrobidParser uses a local Grobid server to return PDFs document as XML and parses the XML to optionally produce documents of individual sentences or of whole paragraphs. Metadata includes the text, paragraph number, pdf relative bboxes, pages (text may overlap over two pages), section title (Introduction, Methodology etc), section_number (i.e 1.1, 2.3), the title of the paper and finally the file path.\r\n      \r\nGrobid parsing is useful beyond standard pdf parsing as it accurately outputs sections and paragraphs within them. This allows for post-fitering of results for specific sections i.e. limiting results to the methodology section or results. While sections are split via headings, ideally they could be classified specifically into introduction, methodology, results, discussion, conclusion. I'm currently experimenting with chatgpt-3.5 for this function, which could later be implemented as a textsplitter. \r\n\r\n`Dependencies:`\r\nFor use, the grobid repo must be cloned and Java must be installed, for colab this is:\r\n\r\n```\r\n!apt-get install -y openjdk-11-jdk -q\r\n!update-alternatives --set java /usr/lib/jvm/java-11-openjdk-amd64/bin/java\r\n!git clone https://github.com/kermitt2/grobid.git\r\nos.environ[\"JAVA_HOME\"] = \"/usr/lib/jvm/java-11-openjdk-amd64\"\r\nos.chdir('grobid')\r\n!./gradlew clean install\r\n```\r\n\r\nOnce installed the server is ran on localhost:8070 via\r\n```\r\nget_ipython().system_raw('nohup ./gradlew run > grobid.log 2>&1 &')\r\n```\r\n\r\n@rlancemartin, @eyurtsev\r\n\r\nTwitter Handle: @Corranmac\r\n\r\nGrobid Demo Notebook is [here](https://colab.research.google.com/drive/1X-St_mQRmmm8YWtct_tcJNtoktbdGBmd?usp=sharing).\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6729/reactions",
            "total_count": 4,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6729/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6728",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6728/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6728/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6728/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6728",
        "id": 1773555241,
        "node_id": "PR_kwDOIPDwls5T26o3",
        "number": 6728,
        "title": "Zep Authentication",
        "user": {
            "login": "danielchalef",
            "id": 131175,
            "node_id": "MDQ6VXNlcjEzMTE3NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/131175?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danielchalef",
            "html_url": "https://github.com/danielchalef",
            "followers_url": "https://api.github.com/users/danielchalef/followers",
            "following_url": "https://api.github.com/users/danielchalef/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielchalef/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danielchalef/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielchalef/subscriptions",
            "organizations_url": "https://api.github.com/users/danielchalef/orgs",
            "repos_url": "https://api.github.com/users/danielchalef/repos",
            "events_url": "https://api.github.com/users/danielchalef/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danielchalef/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 19,
        "created_at": "2023-06-25T23:17:29Z",
        "updated_at": "2023-07-04T17:09:31Z",
        "closed_at": "2023-06-30T21:24:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6728",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6728",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6728.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6728.patch",
            "merged_at": "2023-06-30T21:24:26Z"
        },
        "body": "## Description: Add Zep API Key argument to ZepChatMessageHistory and ZepRetriever\r\n- correct docs site links\r\n- add zep api_key auth to constructors\r\n\r\nZepChatMessageHistory: @hwchase17, \r\nZepRetriever: @rlancemartin, @eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6728/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6728/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6727",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6727/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6727/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6727/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6727",
        "id": 1773554314,
        "node_id": "PR_kwDOIPDwls5T26dG",
        "number": 6727,
        "title": "prevent DuckDuckGoSearchAPIWrapper from consuming top result",
        "user": {
            "login": "galtay",
            "id": 663051,
            "node_id": "MDQ6VXNlcjY2MzA1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/663051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/galtay",
            "html_url": "https://github.com/galtay",
            "followers_url": "https://api.github.com/users/galtay/followers",
            "following_url": "https://api.github.com/users/galtay/following{/other_user}",
            "gists_url": "https://api.github.com/users/galtay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/galtay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/galtay/subscriptions",
            "organizations_url": "https://api.github.com/users/galtay/orgs",
            "repos_url": "https://api.github.com/users/galtay/repos",
            "events_url": "https://api.github.com/users/galtay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/galtay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-25T23:14:50Z",
        "updated_at": "2023-06-26T02:54:16Z",
        "closed_at": "2023-06-26T02:54:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6727",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6727",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6727.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6727.patch",
            "merged_at": "2023-06-26T02:54:16Z"
        },
        "body": "remove the `next` call that checks for None on the results generator\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: remove the `next` call that checks for None on the results generator\r\n  - Issue: #6724 ,\r\n  - Dependencies: none,\r\n  - Tag maintainer: @vowelparrot,\r\n  - Twitter handle: gabrielaltay\r\n  - \r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6727/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6727/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6726",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6726/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6726/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6726/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6726",
        "id": 1773551290,
        "node_id": "I_kwDOIPDwls5ptj66",
        "number": 6726,
        "title": "ValueError: Unknown encoding text-embedding-ada-002",
        "user": {
            "login": "heavenkiller2018",
            "id": 45555611,
            "node_id": "MDQ6VXNlcjQ1NTU1NjEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45555611?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/heavenkiller2018",
            "html_url": "https://github.com/heavenkiller2018",
            "followers_url": "https://api.github.com/users/heavenkiller2018/followers",
            "following_url": "https://api.github.com/users/heavenkiller2018/following{/other_user}",
            "gists_url": "https://api.github.com/users/heavenkiller2018/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/heavenkiller2018/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/heavenkiller2018/subscriptions",
            "organizations_url": "https://api.github.com/users/heavenkiller2018/orgs",
            "repos_url": "https://api.github.com/users/heavenkiller2018/repos",
            "events_url": "https://api.github.com/users/heavenkiller2018/events{/privacy}",
            "received_events_url": "https://api.github.com/users/heavenkiller2018/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-25T23:08:34Z",
        "updated_at": "2023-10-05T16:08:37Z",
        "closed_at": "2023-10-05T16:08:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nno\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [x] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [x] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n\r\n\r\nwhen running the following code:\r\n\r\n```\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\n\r\nembedding_model = OpenAIEmbeddings()\r\nembeddings = embedding_model.embed_documents(\r\n    [\r\n        \"Hi there!\",\r\n        \"Oh, hello!\",\r\n        \"What's your name?\",\r\n        \"My friends call me World\",\r\n        \"Hello World!\"\r\n    ]\r\n)\r\n```\r\n\r\n\r\n\r\nsuch errors occurred:\r\n\r\n```\r\nValueError                                Traceback (most recent call last)\r\nCell In[9], line 1\r\n----> 1 embeddings = embedding_model.embed_documents(\r\n      2     [\r\n      3         \"Hi there!\",\r\n      4         \"Oh, hello!\",\r\n      5         \"What's your name?\",\r\n      6         \"My friends call me World\",\r\n      7         \"Hello World!\"\r\n      8     ]\r\n      9 )\r\n     10 len(embeddings), len(embeddings[0])\r\n\r\nFile ~/micromamba/envs/openai/lib/python3.11/site-packages/langchain/embeddings/openai.py:305, in OpenAIEmbeddings.embed_documents(self, texts, chunk_size)\r\n    293 \"\"\"Call out to OpenAI's embedding endpoint for embedding search docs.\r\n    294 \r\n    295 Args:\r\n   (...)\r\n    301     List of embeddings, one for each text.\r\n    302 \"\"\"\r\n    303 # NOTE: to keep things simple, we assume the list may contain texts longer\r\n    304 #       than the maximum context and use length-safe embedding function.\r\n--> 305 return self._get_len_safe_embeddings(texts, engine=self.deployment)\r\n\r\nFile ~/micromamba/envs/openai/lib/python3.11/site-packages/langchain/embeddings/openai.py:225, in OpenAIEmbeddings._get_len_safe_embeddings(self, texts, engine, chunk_size)\r\n    223 tokens = []\r\n    224 indices = []\r\n--> 225 encoding = tiktoken.get_encoding(self.model)\r\n    226 for i, text in enumerate(texts):\r\n    227     if self.model.endswith(\"001\"):\r\n    228         # See: https://github.com/openai/openai-python/issues/418#issuecomment-1525939500\r\n    229         # replace newlines, which can negatively affect performance.\r\n\r\nFile ~/micromamba/envs/openai/lib/python3.11/site-packages/tiktoken/registry.py:60, in get_encoding(encoding_name)\r\n     57     assert ENCODING_CONSTRUCTORS is not None\r\n     59 if encoding_name not in ENCODING_CONSTRUCTORS:\r\n---> 60     raise ValueError(f\"Unknown encoding {encoding_name}\")\r\n     62 constructor = ENCODING_CONSTRUCTORS[encoding_name]\r\n     63 enc = Encoding(**constructor())\r\n\r\nValueError: Unknown encoding text-embedding-ada-002\r\n```\r\n\r\nhow to fix it?\n\n### Expected behavior\n\nno",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6726/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6726/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6725",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6725/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6725/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6725/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6725",
        "id": 1773549060,
        "node_id": "PR_kwDOIPDwls5T25XG",
        "number": 6725,
        "title": "Zep Authentication",
        "user": {
            "login": "danielchalef",
            "id": 131175,
            "node_id": "MDQ6VXNlcjEzMTE3NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/131175?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danielchalef",
            "html_url": "https://github.com/danielchalef",
            "followers_url": "https://api.github.com/users/danielchalef/followers",
            "following_url": "https://api.github.com/users/danielchalef/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielchalef/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danielchalef/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielchalef/subscriptions",
            "organizations_url": "https://api.github.com/users/danielchalef/orgs",
            "repos_url": "https://api.github.com/users/danielchalef/repos",
            "events_url": "https://api.github.com/users/danielchalef/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danielchalef/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-25T23:02:12Z",
        "updated_at": "2023-06-25T23:03:01Z",
        "closed_at": "2023-06-25T23:03:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6725",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6725",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6725.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6725.patch",
            "merged_at": null
        },
        "body": "- 2markdown loader (#4796)\n- Add dev option (#4828)\n- Add Support for Flexible Input Format for LLM and Chat Model Runs (#4805)\n- Typos (#4851)\n- Remove unnecessary comment (#4845)\n- bump 172 (#4864)\n- Hugging Face Loader: Add lazy load (#4799)\n- Fix TypeError in Vectorstore Redis class methods (#4857)\n- Add beautiful soup 4 to extended testing extra (#4869)\n- Remove unused variables in Milvus vectorstore (#4868)\n- Update getting_started.ipynb (#4850)\n- docs `retriever` improvements (#4430)\n- fix homepage typo (#4883)\n- Tiny code review and docs fix for Docugami DataLoader (#4877)\n- feat(Add FastAPI + Vercel deployment option): (#4520)\n- Bold Crumbs (#4876)\n- ConversationalChatAgent: Allow customizing `TEMPLATE_TOOL_RESPONSE` (#2361)\n- Faiss no avx2 (#4895)\n- Add a generic document loader (#4875)\n- Add html parsers (#4874)\n- Cadlabs/python tool sanitization (#4754)\n- Zep memory (#4898)\n- Update gallery (#4873)\n- Fix AzureOpenAI embeddings documentation example. model -> deployment (#4389)\n- Update getting_started.md (#4482)\n- docs: text splitters improvements (#4490)\n- Harrison/serper api bug (#4902)\n- Harrison/faiss norm (#4903)\n- Harrison/improved retry tool (#4842)\n- Harrison/unified objectives (#4905)\n- bump version to 173 (#4910)\n- Load specific file types from Google Drive (issue #4878) (#4926)\n- API update: Engines -> Models (#4915)\n- feat #4479: TextLoader auto detect encoding and improved exceptions (#4927)\n- Fix bilibili (#4860)\n- Add human message as input variable to chat agent prompt creation (#4542)\n- add alias for model (#4553)\n- dont error on sql import (#4647)\n- docs: compound ecosystem and integrations (#4870)\n- Update GPT4ALL integration (#4567)\n- FIX: GPTCache cache_obj creation loop (#4827)\n- Redis kwargs fix (#4936)\n- Update redis integration tests (#4937)\n- docs supabase update (#4935)\n- Correct typo in APIChain example notebook (Farenheit -> Fahrenheit) (#4938)\n- fix: error in gptcache example nb (#4930)\n- Update custom_multi_action_agent.ipynb (#4931)\n- docs: added `ecosystem/dependents` page (#4941)\n- docs: vectorstores, different updates and fixes (#4939)\n- Chatconv agent: output parser exception (#4923)\n- Zep Retriever - Vector Search Over Chat History (#4533)\n- Fix get_num_tokens for Anthropic models (#4911)\n- NIT: Instead of hardcoding k in each definition, define it as a param above. (#2675)\n- [nit] Simplify Spark Creation Validation Check A Little Bit (#4761)\n- Fix for syntax when setting search_path for Snowflake database (#4747)\n- Harrison/spell executor (#4914)\n- Add Spark SQL support (#4602) (#4956)\n- Support Databricks in SQLDatabase (#4702)\n- Fixed assumptions misspelling (#4961)\n- Update tutorials.md (#4960)\n- Update planner_prompt.py (#4967)\n- power bi api wrapper integration tests & bug fix (#4983)\n- bump v0.0.174 (#4988)\n- Remove autoreload in examples (#4994)\n- Bug fixes and error handling in Redis - Vectorstore (#4932)\n- Add async search with relevance score (#4558)\n- Make test gha workflow manually runnable (#4998)\n- Adds 'IN' metadata filter for pgvector for checking set presence (#4982)\n- Update python.py (#4971)\n- PGVector logger message level (#4920)\n- feature/4493 Improve Evernote Document Loader (#4577)\n- Fix graphql tool (#4984)\n- changed ValueError to ImportError (#5006)\n- docs: Big Mendable Improvements (#4964)\n- added instruction about pip install google-gerativeai (#5004)\n- Update the GPTCache example (#4985)\n- Revert \"API update: Engines -> Models (#4915)\" (#5008)\n- Add self query translator for weaviate vectorstore (#4804)\n- Check for single prompt in __call__ method of the BaseLLM class (#4892)\n- Add logs command (#5007)\n- fix prompt saving (#4987)\n- Streaming only final output of agent (#2483) (#4630)\n- bump v175 (#5041)\n- Fix annoying typo in docs (#5029)\n- Add documentation for Databricks integration (#5013)\n- DOC: Misspelling in agents.rst documentation (#5038)\n- change to type checking (#5062)\n- Harrison/psychic (#5063)\n- bump to 176 (#5064)\n- move docs\n- feat: batch multiple files in a single Unstructured API request (#4525)\n- preserve language in conversation retrieval (#4969)\n- docs: `Deployments` page moved into `Ecosystem/` (#4949)\n- Separate Runner Functions from Client (#5079)\n- Add 'get_token_ids' method (#4784)\n- Improved query, print & exception handling in REPL Tool (#4997)\n- Harrison/neo4j (#5078)\n- Bump 177 (#5095)\n- fix: revert docarray explicit transitive dependencies and use extras instead (#5015)\n- Improving Resilience of MRKL Agent (#5014)\n-  Improve pinecone hybrid search retriever adding metadata support (#5098)\n- Add the usage of SSL certificates for Elasticsearch and user password authentication (#5058)\n- add get_top_k_cosine_similarity method to get max top k score and index (#5059)\n- PowerBI major refinement in working of tool and tweaks in the rest (#5090)\n- fix: add_texts method of Weaviate vector store creats wrong embeddings (#4933)\n- update langchainplus client and docker file to reflect port changes (#5005)\n- Fixed import error for AutoGPT e.g. from langchain.experimental.auton\u2026 (#5101)\n- Update serpapi.py (#4947)\n- changed ValueError to ImportError (#5103)\n- fix: assign current_time to datetime.now() if current_time is None (#5045)\n- Add Mastodon toots loader (#5036)\n- Add OpenLM LLM multi-provider (#4993)\n- Pass Dataset Name by Name not Position (#5108)\n- Fixes issue #5072 - adds additional support to Weaviate (#5085)\n- Improve effeciency of TextSplitter.split_documents, iterate once (#5111)\n- WhyLabs callback (#4906)\n- Add AzureCognitiveServicesToolkit to call Azure Cognitive Services API (#5012)\n- Add link to Psychic from document loaders documentation page (#5115)\n- bump 178 (#5130)\n- docs: fix minor typo + add wikipedia package installation part in human_input_llm.ipynb (#5118)\n- solving #2887 (#5127)\n- Improve PlanningOutputParser whitespace handling (#5143)\n- Add ElasticsearchEmbeddings class for generating embeddings using Elasticsearch models (#3401)\n- Adding Weather Loader (#5056)\n- Add MosaicML inference endpoints (#4607)\n- Empty check before pop (#4929)\n- Add async versions of predict() and predict_messages() (#4867)\n- fix: fix current_time=Now bug for aadd_documents in TimeWeightedRetriever (#5155)\n- Docs: updated getting_started.md (#5151)\n- Clarification of the reference to the \"get_text_legth\" function in ge\u2026 (#5154)\n- docs: added missed `document_loaders` examples (#5150)\n- Add Typesense vector store (#1674)\n- Vectara (#5069)\n- Beam (#4996)\n- Update rellm_experimental.ipynb (#5189)\n- example usage (#5182)\n- adjust docarray docstrings (#5185)\n- bump 179 (#5200)\n- Harrison/modelscope (#5156)\n- Reuse `length_func` in `MapReduceDocumentsChain` (#5181)\n- Update Cypher QA prompt (#5173)\n- Improve weaviate vectorstore docs (#5201)\n- tfidf retriever (#5114)\n- standardize json parsing (#5168)\n- fixing total cost finetuned model giving zero (#5144)\n- Fixes scope of query Session in PGVector (#5194)\n- Output parsing variation allowance (#5178)\n- Allow readthedoc loader to pass custom html tag (#5175)\n- Add Iugu document loader (#5162)\n- Add Joplin document loader (#5153)\n- nit (#5208)\n- add option to pass openai key to langchain plus command (#5213)\n- Log warning (#5192)\n- Add Delete Session Method (#5193)\n- Add 'status' command to get server status (#5197)\n- Harrison/vertex (#5049)\n- fix a mistake in concepts.md (#5222)\n- Create async copy of from_text() inside GraphIndexCreator. (#5214)\n- Remove API key from docs (#5223)\n- Change Default GoogleDriveLoader Behavior to not Load Trashed Files (issue #5104) (#5220)\n- Allow to specify ID when adding to the FAISS vectorstore. (#5190)\n- Bibtex integration for document loader and retriever (#5137)\n- Add MiniMax embeddings (#5174)\n- Weaviate: Add QnA with sources example (#5247)\n- Fix typo in docstring of RetryWithErrorOutputParser (#5244)\n- bump 180 (#5248)\n- remove extra \"\\n\" to ensure that the format of the description, examp\u2026 (#5232)\n- Resolve error in StructuredOutputParser docs (#5240)\n- Added the option of specifying a proxy for the OpenAI API (#5246)\n- OpenSearch top k parameter fix (#5216)\n- Fixed regression in JoplinLoader's get note url (#5265)\n- Docs link custom agent page in getting started (#5250)\n- Zep sdk version (#5267)\n- Add C Transformers for GGML Models (#5218)\n- Add visible_only and strict_mode options to ClickTool (#4088)\n- Add Multi-CSV/DF support in CSV and DataFrame Toolkits (#5009)\n- OpenAI lint (#5273)\n- Added pipline args to `HuggingFacePipeline.from_model_id` (#5268)\n- Support bigquery dialect - SQL (#5261)\n- feat: add Momento as a standard cache and chat message history provider (#5221)\n- Fixed typo: 'ouput' to 'output' in all documentation (#5272)\n- Tedma4/twilio tool (#5136)\n- LLM wrapper for Databricks (#5142)\n- Add an example to make the prompt more robust (#5291)\n- Update CONTRIBUTION guidelines and PR Template (#5140)\n- Fixed passing creds to VertexAI LLM (#5297)\n- bump 181 (#5302)\n- Better docs for weaviate hybrid search (#5290)\n- Add instructions to pyproject.toml (#5138)\n- docs: improve flow of llm caching notebook (#5309)\n- Fix typos (#5323)\n- docs: added link to LangChain Handbook (#5311)\n- add enum output parser (#5165)\n- add enum output parser (#5165)\n- Add Chainlit to deployment options (#5314)\n- Fixing blank thoughts in verbose for \"_Exception\" Action (#5331)\n- fix: remove empty lines that cause InvalidRequestError (#5320)\n- Sample Notebook for DynamoDB Chat Message History (#5351)\n- added cosmos kwargs option (#5292)\n- feat: support for shopping search in SerpApi (#5259)\n- Add SKLearnVectorStore (#5305)\n- bump 182 (#5364)\n- Fixes iter error in FAISS add_embeddings call (#5367)\n- revert bad json (#5370)\n- bump to 183 (#5372)\n- Add path validation to DirectoryLoader (#5327)\n- Fix: Handle empty documents in ContextualCompressionRetriever (Issue #5304) (#5306)\n- handle json parsing errors (#5371)\n- Use Default Factory (#5380)\n- Update PR template with Twitter handle request (#5382)\n- fix: Blob.from_data mimetype is lost (#5395)\n- Add async support to routing chains (#5373)\n- Fix update_document function, add test and documentation. (#5359)\n- Update llamacpp demonstration notebook (#5344)\n- Removed deprecated llm attribute for load_chain (#5343)\n- Harrison/llamacpp (#5402)\n- Add pagination for Vertex AI embeddings (#5325)\n- Reformat openai proxy setting as code (#5330)\n- Harrison/deep infra (#5403)\n- Harrison/prediction guard update (#5404)\n- Implemented appending arbitrary messages (#5293)\n- docs: `ecosystem/integrations` update 2 (#5282)\n- docs: `ecosystem/integrations` update 1 (#5219)\n- Harrison/datetime parser (#4693)\n- bump version 184 (#5407)\n- Add ToolException that a tool can throw. (#5050)\n- Harrison/text splitter (#5417)\n- New Trello document loader (#4767)\n- DocumentLoader for GitHub (#5408)\n- Harrison/spark reader (#5405)\n- Set old LCTracer to default to port 8000 (#5381)\n- Rename and fix typo in lancedb (#5425)\n- Harrison/condense q llm (#5438)\n- adding MongoDBAtlasVectorSearch (#5338)\n- Add more code splitters (go, rst, js, java, cpp, scala, ruby, php, swift, rust) (#5171)\n- bump 185 (#5442)\n- fix (#5457)\n- bump 186 (#5459)\n- Fixed docstring in faiss.py for load_local (#5440)\n- Removes duplicated call from langchain/client/langchain.py (#5449)\n- `encoding_kwargs` for InstructEmbeddings (#5450)\n- MRKL output parser no longer breaks well formed queries (#5432)\n- docs: cleaning (#5413)\n- Added async _acall to FakeListLLM (#5439)\n- Feat: Add batching to Qdrant (#5443)\n- Update psychicapi version (#5471)\n- Add maximal relevance search to SKLearnVectorStore (#5430)\n- add simple test for imports (#5461)\n- Ability to specify credentials wihen using Google BigQuery as a data loader (#5466)\n- convert the parameter 'text' to uppercase in the function 'parse' of the class BooleanOutputParser (#5397)\n- added n_threads functionality for gpt4all (#5427)\n- Allow for async use of SelfAskWithSearchChain (#5394)\n- Allow ElasticsearchEmbeddings to create a connection with ES Client object (#5321)\n- SQLite-backed Entity Memory (#5129)\n- py tracer fixes (#5377)\n- Harrison/html splitter (#5468)\n- Feature: Qdrant filters supports (#5446)\n- Add matching engine vectorstore (#3350)\n- code splitter docs (#5480)\n- Bedrock llm and embeddings (#5464)\n- add more vars to text splitter (#5503)\n- bump 187 (#5504)\n- Add Feedback Methods + Evaluation examples (#5166)\n- Add allow_download as attribute for GPT4All (#5512)\n- added DeepLearing.AI course link (#5518)\n- Skips creating boto client for Bedrock if passed in constructor (#5523)\n- Add Managed Motorhead (#5507)\n- Replace enumerate with zip. (#5527)\n- Add minor fixes for PySpark Document Loader Docs (#5525)\n- docs: unstructured no longer requires installing detectron2 from source (#5524)\n- Replace list comprehension with generator. (#5526)\n- Add param requests_kwargs for WebBaseLoader (#5485)\n- Replace loop appends with list comprehension. (#5528)\n- [retrievers][knn] Replace loop appends with list comprehension. (#5529)\n- Fix wrong class instantiation in docs MMR example (#5501)\n- Add texts with embeddings to PGVector wrapper (#5500)\n- make BaseEntityStore inherit from BaseModel (#5478)\n- docs `ecosystem/integrations` update 3 (#5470)\n- feat(integrations): Add WandbTracer (#4521)\n- add maxcompute (#5533)\n- add brave search util (#5538)\n- Corrects inconsistently misspelled variable name. (#5559)\n- Qdrant self query (#5567)\n- bump 188 (#5568)\n- make the elasticsearch api support version which below 8.x (#5495)\n- Fix typo in docugami.ipynb (#5571)\n- Add missing comma in conv chat agent prompt json (#5573)\n- Fix bedrock auth validation (#5574)\n- Documentation fixes (linting and broken links) (#5563)\n- nit (#5578)\n- Fix SQLAlchemy truncating text when it is too big (#5206)\n- docs(integration): update colab and external links in WandbTracing docs (#5602)\n- Rm Template Title (#5616)\n- human approval callback (#5581)\n- Es knn index search  5346 (#5569)\n- Fix: Qdrant ids (#5515)\n- Dev2049/add argilla callback (#5621)\n- bump 189 (#5620)\n- fix chroma update_document to embed entire documents, fixes a characer-wise embedding bug (#5584)\n- Fix bedrock llm boto3 client instantiation (#5629)\n- Update Tracer Auth / Reduce Num Calls (#5517)\n- fix import issue (#5636)\n- feat: add `UnstructuredExcelLoader` for `.xlsx` and `.xls` files (#5617)\n- Fixed multi input prompt for MapReduceChain (#4979)\n- docs: `modules` pages simplified (#5116)\n- minor refactor GenerativeAgentMemory (#5315)\n- pref: reduce DB query error rate (#5339)\n- Update confluence.py to return spaces between elements (#5383)\n- Implements support for Personal Access Token Authentication in the ConfluenceLoader (#5385)\n- Adds the option to pass the original prompt into the AgentExecutor for PlanAndExecute agents (#5401)\n- QuickFix for FinalStreamingStdOutCallbackHandler: Ignore new lines & white spaces (#5497)\n- Add parameters to send_message() call for vertexai chat models (PaLM2) (#5566)\n- handle single arg to and/or (#5637)\n- docs `ecosystem/integrations` update 4 (#5590)\n- nit: pgvector python example notebook, fix variable reference (#5595)\n- Harrison/update azure nb (#5665)\n- Harrison/pubmed integration (#5664)\n- removing client+namespace in favor of collection (#5610)\n- fix: correct momento chat history notebook typo and title (#5646)\n- Created fix for 5475 (#5659)\n- FileCallbackHandler (#5589)\n- refactor: BaseStringMessagePromptTemplate from_template method  (#5332)\n- Update youtube.py - Fix metadata validation error in YoutubeLoader (#5479)\n- Improve Error Messaging for APOC Procedure Failure in Neo4jGraph (#5547)\n- Support similarity_score_threshold retrieval with Chroma (#5655)\n- This fixes issue #5651 - GPT4All wrapper loading issue (#5657)\n- Add args_schema to google_places tool (#5680)\n- Harrison/pipeline prompt (#5540)\n- Added Dependencies Status, Open issues and releases badges in Readme.md (#5681)\n- SQL agent : Improved prompt engineering prevents agent guessing database column names. (#5671)\n- Retitles Bedrock doc to appear in correct alphabetical order in site nav (#5639)\n- Update MongoDBChatMessageHistory to create an index on SessionId (#5632)\n- Raise an exception in MKRL and Chat Output Parsers if parsing text which contains both an action and a final answer (#5609)\n- refactor: extract token text splitter function (#5179)\n- sqlalchemy MovedIn20Warning declarative_base DEPRICATION fix  (#5676)\n- top_k and top_p transposed in vertexai (#5673)\n- bump version to 190 (#5704)\n- Addresses GPT4All wrapper model_type attribute issues  #5720. (#5743)\n- docs: Added Deploying LLMs into production + a new ecosystem (#4047)\n- Adding support to save multiple memories at a time. Cuts save time by \u2026 (#5172)\n- Cypher search: Check if generated Cypher is provided in backticks (#5541)\n- Zep Hybrid Search (#5742)\n- Removes unnecessary backslash escaping for backticks in python (#5751)\n- Fix a typo in the documentation for the Slack document loader (#5745)\n- Error in documentation: Chroma constructor (#5731)\n- Integrate Clickhouse as Vector Store (#5650)\n- Create OpenAIWhisperParser for generating Documents from audio files (#5580)\n- docs: `ecosystem/integrations` update 5 (#5752)\n- docs: updated `ecosystem/dependents` (#5753)\n- Add class attribute \"return_generated_question\" to class \"BaseConversationalRetrievalChain\" (#5749)\n- Add aviary support (#5661)\n- cohere retries (#5757)\n- Strips whitespace and \\n from loc before filtering urls from sitemap (#5728)\n- Harrison/youtube multi language (#5758)\n- fix markdown text splitter horizontal lines (#5625)\n- Tracing Group (#5326)\n- Update tutorials.md (#5761)\n- feat: Support for `Tigris` Vector Database for vector search (#5703)\n- Scores are explained in vectorestore docs (#5613)\n- bump ver 191 (#5766)\n- Use client from LCP-SDK (#5695)\n- fix ver 191 (#5784)\n- Set Falsey (#5783)\n- Attribute support for html tags (#5782)\n- support returning run info for llms, chat models and chains (#5666)\n- fixing from_documents method of the MongoDB Atlas vector store (#5794)\n- Revise DATABRICKS_API_TOKEN as DATABRICKS_TOKEN (#5796)\n- YoutubeAudioLoader and updates to OpenAIWhisperParser (#5772)\n- Base RunEvaluator Chain (#5750)\n- [Docs][Hotfix] Fix broken links (#5800)\n- Add UTF-8 json ouput support while langchain.debug is set to True. (#5802)\n- WIP: openai settings (#5792)\n- added support for different types in ResponseSchema class (#5789)\n- fixed faiss integ tests (#5808)\n- add doc about reusing MongoDBAtlasVectorSearch (#5805)\n- Update adding_memory.ipynb (#5806)\n- rm docs mongo (#5811)\n- bump ver to 192 (#5812)\n- fix: fullfill openai params when embedding (#5821)\n- bump version to 193 (#5838)\n- Add in the async methods and link the run id (#5810)\n- feat: issue-5712 add sleep tool (#5715)\n- Rm extraneous args to the trace group helper (#5801)\n- FIX: backslash escaped (#5815)\n- Add DeepInfra embeddings integration with tests and examples, better exception handling for Deep Infra LLM (#5854)\n- Add how to use a custom scraping function with the sitemap loader. (#5847)\n- feat: Add `UnstructuredCSVLoader` for CSV files (#5844)\n- Add logging in PBI tool (#5841)\n- Add additional VertexAI Params (#5837)\n- Update microsoft loader example with docx2txt dependency (#5832)\n- docs: add Shale Protocol integration guide (#5814)\n- qdrant vector store - search with relevancy scores (#5781)\n- Update to Getting Started docs page for Memory (#5855)\n- Fix exporting GCP Vertex Matching Engine from vectorstores (#5793)\n- Add knn and query search field options to ElasticKnnSearch (#5641)\n- propagate callbacks to ConversationalRetrievalChain (#5572)\n- Fix serialization issue with W&B (#5693)\n- Added SingleStoreDB Vector Store (#5619)\n- Refactor and update databricks integration page (#5575)\n- Implement saving and loading of RetrievalQA chain (#5818)\n- Harrison/fauna loader (#5864)\n- Harrison/nebula graph (#5865)\n- bump version to 194 (#5866)\n- fix: update qa_chain doc for \"chai_type\" (#5877)\n- Update run eval imports in init (#5858)\n- Fix the shortcut conflict for document page search (#5874)\n- Fixes model arguments for amazon models (#5896)\n- Feature/add AWS Kendra Index Retriever (#5856)\n- Use LCP Client in Tracer (#5908)\n- Create snowflake Loader (#5825)\n- arxiv: Correct name of search client attribute to 'arxiv_search' from incorrect 'arxiv_client' (#5917)\n- Fix typo (#5894)\n- Baseten integration (#5862)\n- Add start index to metadata in TextSplitter (#5912)\n- Fix openai proxy error (#5914)\n- Fix the issue where the parameters passed to VertexAI ignored #5889 (#5891)\n- Add support for the endpoint URL in DynamoDBChatMesasgeHistory (#5836)\n- Expose full params in Qdrant (#5947)\n- fixes to docs (#5919)\n- bump ver to 195 (#5949)\n- Add load() to snowflake loader (#5956)\n- LOTR: Lord of the Retrievers. A retriever that merge several retrievers together applying document_formatters to them. (#5798)\n- bump version to 196 (#5988)\n- Fix: SnowflakeLoader returning empty documents (#5967)\n- Fixed typo missing \"use\" (#5991)\n- add test for structured tools (#5989)\n- Fix handling of missing action & input for async MRKL agent (#5985)\n- Add additional parameters to Graph Cypher Chain  (#5979)\n- Add a new vector store - AwaDB  (#5971) (#5992)\n- Create Airtable loader (#5958)\n- feat: Add `UnstructuredXMLLoader` for `.xml` files (#5955)\n- Update to Vectara integration (#5950)\n- fix: use model token limit not tokenizer ditto (#5939)\n- Fix: Grammer fix in documentation (#5925)\n- Fix IndexError in RecursiveCharacterTextSplitter (#5902)\n- add ocr_languages param for ConfluenceLoader.load() (#5823)\n- Harrison/arxiv fix (#5993)\n- Obey handler.raise_error in _ahandle_event_for_handler (#6001)\n- support kwargs (#5990)\n- bump version to 197 (#6007)\n- Update databricks.md (#6006)\n- [APIChain] enhance the robustness or url (#6008)\n- feat: :sparkles: Added filtering option to FAISS vectorstore (#5966)\n- fix: TypeError when loading confluence pages by cql (#5878)\n- Harrison/embaas (#6010)\n- I before E (#6015)\n- nc/load (#5733)\n- Update check (#6020)\n- Langchain decorators (#6017)\n- Remove from PR template (#6018)\n- add from_documents interface in awadb vector store (#6023)\n- Harrison/hologres (#6012)\n- Update MongoDB Atlas support docs (#6022)\n- add dashscope text embedding (#5929)\n- Harrison/cognitive search (#6011)\n- bump ver to 198 (#6026)\n- Mongo db doc fix (#6042)\n- embaas title\n- comment out\n- chore: spedd up integration test by using smaller model (#6044)\n- Text splitter for Markdown files by header (#5860)\n- Log tracer errors (#6066)\n- Add embaas document extraction api endpoints  (#6048)\n- improve tools (#6062)\n- propogate kwargs fully (#6076)\n- Enable serialization for anthropic (#6049)\n- turn off repr (#6078)\n- Use Run object from SDK (#6067)\n- Fix for ModuleNotFoundError while running langchain-server. Issue #5833 (#6077)\n- Add tests and update notebook for MarkdownHeaderTextSplitter (#6069)\n- support functions (#6099)\n- convert tools to openai (#6100)\n- Implement `max_marginal_relevance_search` in `VectorStore` of Pinecone (#6056)\n- bump version to 199 (#6102)\n- Harrison/notebook functions (#6103)\n- Add support for tags (#5898)\n- support streaming for functions (#6115)\n- Return session name in runner response (#6112)\n- add functions agent (#6113)\n- bump ver to 200 (#6130)\n- Add Run Collector Callback (#6133)\n- Update Name (#6136)\n- Update readthedocs_documentation.ipynb (#6148)\n- typo: 'following following' to 'following' (#6163)\n- Add docs for tags (#6155)\n-  feat: Add support for the Solidity language (#6054)\n- feat: add content_format param to ConfluenceLoader.load() (#5922)\n- count tokens for new OpenAI model versions (#6195)\n- Fix typo `pandocs` to `pandoc` (#6203)\n- Harrison/use functions agent (#6185)\n- bump version to 201 (#6233)\n- Add Tags for LLMs (#6229)\n- Feature/add acreom loader (#5780)\n- Support chat history persistence in AutoGPT (#5716)\n- Improve Error Message for failed callback (#6247)\n- Harrison/openai functions (#6223)\n- Harrison/openai functions (#6261)\n- Fix: change the chatgpt plugin retriever metadata format (#5920)\n- Update output format of MosaicML endpoint to be more flexible (#6060)\n- ArxivAPIWrapper - doc_content_chars_max (#6063)\n- bump to 202 (#6262)\n- Doc refactor (#6300)\n- rm ignore_vercel (#6302)\n- update api link (#6303)\n- update readme (#6304)\n- basic redirect (#6309)\n- more redirect (#6314)\n- Update dev container (#6189)\n- Del linkcheck readme (#6317)\n- Fixes #6282 (#6283)\n- nit (#6305)\n- Improve the performance of add_texts interface and upgrade the AwaDB from 0.3.2 to 0.3.3 (#6316)\n- fix eval guide links (#6319)\n- Harrison/deeplake new features (#6263)\n- Better Entity Memory code documentation (#6318)\n- Handle Managed Motorhead Data Key (#6169)\n- changed height in the nb example (#6327)\n- fix links to prompt templates and example selectors (#6332)\n- DocArray as a Retriever (#6031)\n- make modelname_to_contextsize as a staticmethod (#6040)\n- Improve AnalyticDB Vector Store implementation without affecting user  (#6086)\n- Add oobabooga/text-generation-webui support as a llm (#5997)\n- Allow GoogleDrive to authenticate via application default credentials on Cloud Run/GCE etc without service key (#6035)\n- qdrant: search by vector (#6043)\n- Harrison/error zero tools (#6340)\n- Harrison/faiss score (#6341)\n- Custom Anthropic API URL (#6221)\n- fix spelling\n- Make lckwargs private (#6344)\n- fix titles in documentation\n- update web_base.py to have verify option (#6107)\n- Add new openai 0613 model costs (#6110)\n- Add ignore vercel preview script (#6320)\n- Harrison/mmr support for opensearch (#6349)\n- Update MD header text splitter notebook (#6339)\n- Add self query retriever example with MD header splitting (#6359)\n- bump 203 (#6372)\n- Guardrails output parser: Pass LLM api for reasking (#6089)\n- Harrison/gdrive enhancements (#6375)\n- Extend `ArgillaCallbackHandler` support (#6153)\n- Add the ability to run the map_reduce chains  process results step as async  (#6181)\n- fix link of callbacks on modules page (#6323)\n- Fixed PermissionError on windows (#6170)\n- searx - docs\n- Harrison/myscale self query (#6376)\n- Harrison/metaphor search fix (#6387)\n- Harrison/zep mem (#6388)\n- Fix class promotion (#6187)\n- Harrison/functions docs improvements (#6389)\n- Add option to save/load graph cypher QA (#6219)\n- Fix output final text for HuggingFaceTextGenInference when streaming (#6211)\n- OpenAI functions dont work with async streaming... #6225 (#6226)\n- searx_search: updated tools and doc (#6276)\n- Fix integration tests for Faiss vector store (#6281)\n- [hotfix] Deep Lake fails on newer version due to hardcode (#6383)\n- Fix latest clickhouse vector schema change  (#6385)\n- Fix typo in the CAI critique prompt (#6123)\n- Correct AzureSearch Vector Store not applying search_kwargs when searching (#6132)\n- Fixed an unhandled error that was raised when DynamoDB did not have any chat history. (#6141)\n- Fix LLM types so that they can be loaded from config dicts (#6235)\n- add max_context_size property in BaseOpenAI (#6239)\n- Add markdown to specify important arguments (#6246)\n- Update web_base.ipynb for guiding purposes (#6248)\n- Iterate through filtered file types instead of all listed files (#6258)\n- Fixes typo in Vectara.similarity_search (#6277)\n- - Fix pass system_message argument in new feature openai_functions_agent (#6297)\n- Added gpt-3.5-turbo 0613 16k and 16k-0613 pricing (#6287)\n- rm pandas from arize (#6392)\n- Harrison/typesense fix (#6391)\n- Harrison/chroma fix (#6390)\n- Update web_base.py  _fetch() method For SiteMapLoader (#6256)\n- support memory for functions (#6165)\n- fix prod docs build (#6402)\n- Docs nit (#6350)\n- changes to llm chain (#6328)\n- Harrison/refactor functions (#6408)\n- bump version to 205 (#6410)\n- Include placeholder value for all secrets, not just kwargs (#6421)\n- remove mongo\n- expose docs chains (#6453)\n- Run eval in eval mode (#6447)\n- Update arize_callback.py (#6433)\n- Add Trajectory Eval RunEvaluator (#6449)\n- fix anthropic chat model mutating input list (#6457)\n- Remove extra word in the introduction documentation (#6450)\n- Add example for question answering over documents with OpenAI Function Agent (#6448)\n- Add `_similarity_search_with_relevance_scores` in `Pinecone` (#6446)\n- Update web_base.ipynb (#6430)\n- Remove backticks without clear purpose from docs (#6442)\n- Fix Custom LLM Agent example (#6429)\n- Update introduction.mdx (#6425)\n- docs `retrievers` fixes (#6299)\n- Fixed a link typo /-/route -> /-/routes. and change endpoint format (#6186)\n- Incorrect argument count handling (#5543)\n- Harrison/functions in retrieval (#6463)\n- Fix for #6431 - chatprompt template with partial variables giing validation error (#6456)\n- Update SinglStoreDB vectorstore (#6423)\n- Fix broken links in autonomous agents docs (#6398)\n- Fix the issue where ANTHROPIC_API_URL set in environment is not takin\u2026 (#6400)\n- Improve error message (#6275)\n- Harrison/unstructured page number (#6464)\n- feat: use latest duckduckgo_search API to call (#6409)\n- fix: llm caching for replicate (#6396)\n- Update serpapi.py Support baidu list type answer_box (#6386)\n- fix neo4j schema query (#6381)\n- bump version to 206 (#6465)\n- add FunctionMessage support to `_convert_dict_to_message()` in OpenAI chat model (#6382)\n- fix openai qa chain (#6487)\n- Add Alibaba Cloud OpenSearch as a new vector store (#6154)\n- release 207 (#6488)\n- fix: change ddg to DDGS (#6480)\n- improve documentation on base chain (#6468)\n- Vector store support for Cassandra (#6426)\n- Update notebook for MD header splitter and create new cookbook (#6399)\n- docs/fix links (#6498)\n- Fix link (#6501)\n- Documentation Fix: Correct the example code output in the prompt templates doc (#6496)\n- Fixed: 'readible' -> readable (#6492)\n- Make streamlit import optional (#6510)\n- Fix typo in docstring of format_tool_to_openai_function (#6479)\n- typo(llamacpp.ipynb): 'condiser' -> 'consider' (#6474)\n- Export trajectory eval fn (#6509)\n- Update index.mdx (#6326)\n- Add KuzuQAChain (#6454)\n- Be able to use Codey models on Vertex AI (#6354)\n- Add async support for HuggingFaceTextGenInference (#6507)\n- Feat: Add a prompt template parameter to qa with structure chains (#6495)\n- Integrate Rockset as Vectorstore (#6216)\n- Fix issue with non-list `To` header in GmailSendMessage Tool (#6242)\n- Update model token mappings/cost to include 0613 models (#6122)\n- Infino integration for simplified logs, metrics & search across LLM data & token usage (#6218)\n- Harrison/multi tool (#6518)\n- bump to ver 208 (#6540)\n- Relax string input mapper check (#6544)\n- [Feature][VectorStore] Support StarRocks as vector db (#6119)\n- Minor Grammar Fixes in Docs and Comments (#6536)\n- Remove unintended double negation in docstring (#6541)\n- update pr tmpl (#6552)\n- feat: faiss filter from list (#6537)\n- Wait for all futures (#6554)\n- Fix whatsappchatloader - enable parsing new datetime format on WhatsApp chat (#6555)\n- Remove duplicate databricks entries in ecosystem integrations (#6569)\n- Change Data Loader Namespace (#6568)\n- Detailed using the Twilio tool to send messages with 3rd party apps incl. WhatsApp (#6562)\n- add motherduck docs (#6572)\n- Upgrade the version of AwaDB and add some new interfaces (#6565)\n- feat: interfaces for async embeddings, implement async openai (#6563)\n- Add OpenLLM wrapper(#6578)\n- Add AzureML endpoint LLM wrapper (#6580)\n- Add missing word in comment (#6587)\n- Clarifai integration (#5954)\n- bump 209 (#6593)\n- Fix callback forwarding in async plan method for OpenAI function agent (#6584)\n- MD header text splitter returns Documents (#6571)\n- add mongo (HOLD) (#6437)\n- Allow callback handlers to opt into being run inline (#6424)\n- StreamlitCallbackHandler (#6315)\n- added redis method to delete entries by keys (#6222)\n- Loader for OpenCityData and minor cleanups to Pandas, Airtable loaders (#6301)\n- Add tags in agent initialization (#6559)\n- Session to project (#6249)\n- fix: remove callbacks arg from Tool and StructuredTool inferred schema (#6483)\n- bump 210 (#6656)\n- Openapi to openai (#6658)\n- bump 211 (#6660)\n- openapi_openai docstring (#6661)\n- Create merge loader that combines documents from a set of loaders (#6659)\n- Add delete and ensure add_texts performs upsert (w/ ID optional) (#6126)\n- Recursive URL loader (#6455)\n- ChatVertexAI broken - Fix error with sending context in params (#6652)\n- Dev2049/bump 212 (#6665)\n- fix(docs): broken link for OpenLLM (#6622)\n- Fix grammar mistake in base.py in planners (#6611)\n- Fix ray-project/Aviary integration (#6607)\n- Fix Typo (#6595)\n- Fix typo in myscale_self_query.ipynb (#6601)\n- fix minor typo in vector_db_qa.mdx (#6604)\n- Kendra retriever api (#6616)\n- PowerBI: catch outdated token (#6634)\n- update chroma notebook (#6664)\n- openapi -> openai nit (#6667)\n- adds doc_content_chars_max argument to WikipediaLoader (#6645)\n- chroma nb close img tag (#6669)\n- Changed generate_prompt.py (#6644)\n- added docstrings where they missed (#6626)\n- Wiki loader lint (#6670)\n- Just corrected a small inconsistency on a doc page (#6603)\n- Fix openapi parameter parsing (#6676)\n- Amazon API Gateway hosted LLM (#6673)\n- Session deletion method in motorhead memory (#6609)\n- Harrison/optional ids opensearch (#6684)\n-  Add caching to BaseChatModel (issue #1644) (#5089)\n- bump to version 213 (#6688)\n- Make bs4 a local import in recursive_url_loader.py (#6693)\n- bump v214 (#6694)\n- split up batch llm calls into separate runs (#5804)\n- bump version to 215 (#6719)\n- Fix Multi Functions Agent Tracing (#6702)\n- fix chroma _similarity_search_with_relevance_scores missing `kwargs` \u2026 (#6708)\n- Fix Typo in LangChain MyScale Integration  Doc (#6705)\n- updated sql_database.py for returning sorted table names. (#6692)\n- Fix WhatsAppChatLoader : Enable parsing additional formats (#6663)\n- feat: added tqdm progress bar to UnstructuredURLLoader (#6600)\n- feat: Add `UnstructuredRSTLoader` (#6594)\n- beautifulsoup get_text kwargs in WebBaseLoader (#6591)\n- Added a MHTML document loader (#6311)\n- correct docs site links\n- zep api_key auth\n\n<!-- Thank you for contributing to LangChain!\n\nReplace this comment with:\n  - Description: a description of the change, \n  - Issue: the issue # it fixes (if applicable),\n  - Dependencies: any dependencies required for this change,\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\n\nIf you're adding a new integration, please include:\n  1. a test for the integration, preferably unit tests that do not rely on network access,\n  2. an example notebook showing its use.\n\nMaintainer responsibilities:\n  - General / Misc / if you don't know who to tag: @dev2049\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\n  - Models / Prompts: @hwchase17, @dev2049\n  - Memory: @hwchase17\n  - Agents / Tools / Toolkits: @vowelparrot\n  - Tracing / Callbacks: @agola11\n  - Async: @agola11\n\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\n\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\n -->\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6725/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6725/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6724",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6724/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6724/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6724/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6724",
        "id": 1773540838,
        "node_id": "I_kwDOIPDwls5pthXm",
        "number": 6724,
        "title": "DuckDuckGoSearchAPIWrapper Consumes results w/o returning them",
        "user": {
            "login": "galtay",
            "id": 663051,
            "node_id": "MDQ6VXNlcjY2MzA1MQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/663051?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/galtay",
            "html_url": "https://github.com/galtay",
            "followers_url": "https://api.github.com/users/galtay/followers",
            "following_url": "https://api.github.com/users/galtay/following{/other_user}",
            "gists_url": "https://api.github.com/users/galtay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/galtay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/galtay/subscriptions",
            "organizations_url": "https://api.github.com/users/galtay/orgs",
            "repos_url": "https://api.github.com/users/galtay/repos",
            "events_url": "https://api.github.com/users/galtay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/galtay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-25T22:54:36Z",
        "updated_at": "2023-06-26T13:58:17Z",
        "closed_at": "2023-06-26T13:58:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain: 0.0.215\r\nplatform: ubuntu 22.04 LTS\r\npython: 3.10\n\n### Who can help?\n\n@eyurtsev :) \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nhttps://colab.research.google.com/drive/1vraycYUuF-BZ0UA8EoUT0hPt15HoeGPV?usp=sharing\n\n### Expected behavior\n\nThe first result of DuckDuckGoSearch to be returned in the `get_snippets` and `results` methods of the DuckDuckGoSearchAPIWrapper. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6724/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6724/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6723",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6723/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6723/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6723/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6723",
        "id": 1773490075,
        "node_id": "I_kwDOIPDwls5ptU-b",
        "number": 6723,
        "title": "https://python.langchain.com/docs/use_cases/question_answering/document-context-aware-QA code is not working,",
        "user": {
            "login": "WaelAbou",
            "id": 128493940,
            "node_id": "U_kgDOB6ipdA",
            "avatar_url": "https://avatars.githubusercontent.com/u/128493940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/WaelAbou",
            "html_url": "https://github.com/WaelAbou",
            "followers_url": "https://api.github.com/users/WaelAbou/followers",
            "following_url": "https://api.github.com/users/WaelAbou/following{/other_user}",
            "gists_url": "https://api.github.com/users/WaelAbou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/WaelAbou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/WaelAbou/subscriptions",
            "organizations_url": "https://api.github.com/users/WaelAbou/orgs",
            "repos_url": "https://api.github.com/users/WaelAbou/repos",
            "events_url": "https://api.github.com/users/WaelAbou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/WaelAbou/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-25T21:07:51Z",
        "updated_at": "2023-10-12T16:08:27Z",
        "closed_at": "2023-10-12T16:08:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\ncolab\n\n### Who can help?\n\n@hwchase17 hi i am trying to use Context aware text splitting and QA / Chat\r\n\r\n\r\nthe code doesnt work starting the vectore indes\r\n\r\n# Build vectorstore and keep the metadata\r\nfrom langchain.vectorstores import Chroma\r\nvectorstore = Chroma.from_documents(texts=all_splits,metadatas=all_metadatas,embedding=OpenAIEmbeddings())\r\n\r\n\r\n\r\n\r\n\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\ni am only following the notebood \n\n### Expected behavior\n\nit should work",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6723/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6723/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6722",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6722/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6722/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6722/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6722",
        "id": 1773482364,
        "node_id": "I_kwDOIPDwls5ptTF8",
        "number": 6722,
        "title": "Handling larger responses in the API chain",
        "user": {
            "login": "FluffyKebab",
            "id": 61425964,
            "node_id": "MDQ6VXNlcjYxNDI1OTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/61425964?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FluffyKebab",
            "html_url": "https://github.com/FluffyKebab",
            "followers_url": "https://api.github.com/users/FluffyKebab/followers",
            "following_url": "https://api.github.com/users/FluffyKebab/following{/other_user}",
            "gists_url": "https://api.github.com/users/FluffyKebab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FluffyKebab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FluffyKebab/subscriptions",
            "organizations_url": "https://api.github.com/users/FluffyKebab/orgs",
            "repos_url": "https://api.github.com/users/FluffyKebab/repos",
            "events_url": "https://api.github.com/users/FluffyKebab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FluffyKebab/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-25T20:44:41Z",
        "updated_at": "2023-09-20T23:01:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nCurrently, the API chain takes the result from the API and gives it directly to a LLM chain. If the result is larger then the context length of the LLM, the chain will give an error. To address this issue I propose that the chain should split the API result using a text splitter, then give the result to combine documents chain that answers the question. \n\n### Motivation\n\nI have found that certain question given to the API chain gives results from the API that exede the context length of the standard openai model. For example:  \r\n```python\r\nfrom langchain.chains import APIChain\r\nfrom langchain.prompts.prompt import PromptTemplate\r\nfrom langchain.llms import OpenAI\r\n\r\nllm = OpenAI(temperature=0)\r\n\r\nfrom langchain.chains.api import open_meteo_docs\r\nchain_new = APIChain.from_llm_and_api_docs(llm, open_meteo_docs.OPEN_METEO_DOCS, verbose=True)\r\n\r\nchain_new.run('What is the weather of [latitude:52.52, longitude:13.419998]?')\r\n```\r\nThe LLM creates the this URL: https://api.open-meteo.com/v1/forecast?latitude=52.52&longitude=13.419998&hourly=temperature_2m,weathercode,snow_depth,freezinglevel_height,visibility.  The content from this URL is kind of large. This causes the prompt to have 6382 tokens and be lager then the max context length. I think the chain should be able to handle larger responses. \n\n### Your contribution\n\nI can try to submit a PR to implement this solution. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6722/reactions",
            "total_count": 6,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 3
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6722/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6721",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6721/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6721/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6721/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6721",
        "id": 1773371161,
        "node_id": "I_kwDOIPDwls5ps38Z",
        "number": 6721,
        "title": "ChromaDB Chroma.from_documents error:   AttributeError: 'Collection' object has no attribute 'upsert'",
        "user": {
            "login": "luca-git",
            "id": 2820583,
            "node_id": "MDQ6VXNlcjI4MjA1ODM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2820583?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luca-git",
            "html_url": "https://github.com/luca-git",
            "followers_url": "https://api.github.com/users/luca-git/followers",
            "following_url": "https://api.github.com/users/luca-git/following{/other_user}",
            "gists_url": "https://api.github.com/users/luca-git/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luca-git/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luca-git/subscriptions",
            "organizations_url": "https://api.github.com/users/luca-git/orgs",
            "repos_url": "https://api.github.com/users/luca-git/repos",
            "events_url": "https://api.github.com/users/luca-git/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luca-git/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-25T16:40:21Z",
        "updated_at": "2023-06-25T17:48:54Z",
        "closed_at": "2023-06-25T17:48:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nwindows 11, python 3.9.16 , langchain-0.0.215\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThe loaded documents succesfully get indexd in FAISS, Deeplake and Pinecone, so I guess the issue is not there. When using  Chroma.from_documents the error is thrown:\r\n\r\n```\r\n  File ~\\...langchain\\vectorstores\\chroma.py:149 in add_texts\r\n    self._collection.upsert(\r\n        AttributeError: 'Collection' object has no attribute 'upsert'\r\n```\r\nCode:\r\n```python\r\nwith open('docs.pkl', 'rb') as file:\r\n    documents= pickle.load(file)   \r\ntext_splitter = RecursiveCharacterTextSplitter(chunk_size=512, chunk_overlap=200)\r\ndocs = text_splitter.split_documents(documents)\r\nchroma_dir = base_dir + \"ChromaDB\" + \"_\" + str(chunk_size) + \"_\" + str(overlap)\r\ndb2 = Chroma.from_documents(docs, embeddings, persist_directory=chroma_dir)\r\n```\r\nUploaded the pickle zipped as .pkl is not supported for upload.\r\n[docs.zip](https://github.com/hwchase17/langchain/files/11860249/docs.zip)\r\n\n\n### Expected behavior\n\nIndex the docs",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6721/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6721/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6720",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6720/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6720/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6720/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6720",
        "id": 1773353594,
        "node_id": "I_kwDOIPDwls5pszp6",
        "number": 6720,
        "title": "search specific vector by tag or key",
        "user": {
            "login": "easonktsai",
            "id": 127067183,
            "node_id": "U_kgDOB5LkLw",
            "avatar_url": "https://avatars.githubusercontent.com/u/127067183?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/easonktsai",
            "html_url": "https://github.com/easonktsai",
            "followers_url": "https://api.github.com/users/easonktsai/followers",
            "following_url": "https://api.github.com/users/easonktsai/following{/other_user}",
            "gists_url": "https://api.github.com/users/easonktsai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/easonktsai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/easonktsai/subscriptions",
            "organizations_url": "https://api.github.com/users/easonktsai/orgs",
            "repos_url": "https://api.github.com/users/easonktsai/repos",
            "events_url": "https://api.github.com/users/easonktsai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/easonktsai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-25T15:52:23Z",
        "updated_at": "2023-10-24T21:10:03Z",
        "closed_at": "2023-10-22T16:07:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi teams,\r\n\r\nCan I make the embedding with tag or any key, I want to make user with different auth. to query specific vector of document.\r\n\r\nI was trying to use Redis as vectorstore.Would it recommend to be my vectorstore if I want to implement something authentication.\r\n\r\nI'll embed my document into vectorstore and each embedding has its permission. And then I'll have users with different permission. The user who be granted the permission of document can query that vector of document.\r\n\r\nFor example, Embed three docuemnts into vectorstore and there are two user with different permission.\r\n| Docs   | key | \r\n| :----- | :--: | \r\n| Docs_A |  A  | \r\n| Docs_B |  B  | \r\n| Docs_C |  C |\r\n\r\n| User| permission | \r\n| :----- | :--: | \r\n| User_A |  A, C |  \r\n| User_B |  B | \r\n\r\nAt this use case, User_A can query the vector of Docs_A and Docs_C, and User_B just Docs_B",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6720/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6720/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6719",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6719/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6719/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6719/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6719",
        "id": 1773352220,
        "node_id": "PR_kwDOIPDwls5T2Pou",
        "number": 6719,
        "title": "bump version to 215",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-25T15:48:57Z",
        "updated_at": "2023-06-25T15:52:52Z",
        "closed_at": "2023-06-25T15:52:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6719",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6719",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6719.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6719.patch",
            "merged_at": "2023-06-25T15:52:51Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6719/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6719/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6718",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6718/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6718/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6718/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6718",
        "id": 1773336111,
        "node_id": "I_kwDOIPDwls5psvYv",
        "number": 6718,
        "title": "DOC: some upgrades to  https://langchainers.hashnode.dev/getting-started-with-langchainjs",
        "user": {
            "login": "scenaristeur",
            "id": 4020744,
            "node_id": "MDQ6VXNlcjQwMjA3NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4020744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scenaristeur",
            "html_url": "https://github.com/scenaristeur",
            "followers_url": "https://api.github.com/users/scenaristeur/followers",
            "following_url": "https://api.github.com/users/scenaristeur/following{/other_user}",
            "gists_url": "https://api.github.com/users/scenaristeur/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scenaristeur/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scenaristeur/subscriptions",
            "organizations_url": "https://api.github.com/users/scenaristeur/orgs",
            "repos_url": "https://api.github.com/users/scenaristeur/repos",
            "events_url": "https://api.github.com/users/scenaristeur/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scenaristeur/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5496666150,
                "node_id": "LA_kwDOIPDwls8AAAABR6B4Jg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/for-langchain-js",
                "name": "for-langchain-js",
                "color": "F84AC2",
                "default": false,
                "description": "Issue should be posted in langchain-js repo"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-25T15:05:51Z",
        "updated_at": "2023-06-25T15:19:55Z",
        "closed_at": "2023-06-25T15:19:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\ni've made some comments on https://langchainers.hashnode.dev/getting-started-with-langchainjs\r\n\r\nand https://langchainers.hashnode.dev/learn-how-to-integrate-language-models-llms-with-sql-databases-using-langchainjs\r\nsome things to update to make it working with the last langchain JS/TS packages\r\n\r\n### Idea or request for content:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6718/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6718/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6716",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6716/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6716/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6716/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6716",
        "id": 1773318895,
        "node_id": "I_kwDOIPDwls5psrLv",
        "number": 6716,
        "title": "Pinecone hybrid search is incomplete, missing add_documents method",
        "user": {
            "login": "OmriNach",
            "id": 32659330,
            "node_id": "MDQ6VXNlcjMyNjU5MzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/32659330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OmriNach",
            "html_url": "https://github.com/OmriNach",
            "followers_url": "https://api.github.com/users/OmriNach/followers",
            "following_url": "https://api.github.com/users/OmriNach/following{/other_user}",
            "gists_url": "https://api.github.com/users/OmriNach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OmriNach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OmriNach/subscriptions",
            "organizations_url": "https://api.github.com/users/OmriNach/orgs",
            "repos_url": "https://api.github.com/users/OmriNach/repos",
            "events_url": "https://api.github.com/users/OmriNach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OmriNach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-25T14:29:47Z",
        "updated_at": "2023-10-01T16:04:53Z",
        "closed_at": "2023-10-01T16:04:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nAll regular retrievers have an add_document method that handles adding a list of documents, and this one retriever only handles add_text, a list of strings and not langchain documents. \r\n\r\nFor comparison, weaviate hybrid search is able to handle document lists:\r\n\r\n`   def add_documents(self, docs: List[Document], **kwargs: Any) -> List[str]:\r\n        \"\"\"Upload documents to Weaviate.\"\"\"\r\n        from weaviate.util import get_valid_uuid\r\n\r\n        with self._client.batch as batch:\r\n            ids = []\r\n            for i, doc in enumerate(docs):\r\n                metadata = doc.metadata or {}\r\n                data_properties = {self._text_key: doc.page_content, **metadata}\r\n\r\n                # If the UUID of one of the objects already exists\r\n                # then the existing objectwill be replaced by the new object.\r\n                if \"uuids\" in kwargs:\r\n                    _id = kwargs[\"uuids\"][i]\r\n                else:\r\n                    _id = get_valid_uuid(uuid4())\r\n\r\n                batch.add_data_object(data_properties, self._index_name, _id)\r\n                ids.append(_id)\r\n        return ids`\n\n### Who can help?\n\n@hw\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nImport PineconeHybridSearch\r\n\n\n### Expected behavior\n\nretriever.add_documents(DocumentList) ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6716/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6716/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6715",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6715/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6715/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6715/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6715",
        "id": 1773252216,
        "node_id": "I_kwDOIPDwls5psa54",
        "number": 6715,
        "title": "cannot import name 'get_callback_manager' from 'langchain.callbacks' ",
        "user": {
            "login": "giuliaciardi",
            "id": 37875658,
            "node_id": "MDQ6VXNlcjM3ODc1NjU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/37875658?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/giuliaciardi",
            "html_url": "https://github.com/giuliaciardi",
            "followers_url": "https://api.github.com/users/giuliaciardi/followers",
            "following_url": "https://api.github.com/users/giuliaciardi/following{/other_user}",
            "gists_url": "https://api.github.com/users/giuliaciardi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/giuliaciardi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/giuliaciardi/subscriptions",
            "organizations_url": "https://api.github.com/users/giuliaciardi/orgs",
            "repos_url": "https://api.github.com/users/giuliaciardi/repos",
            "events_url": "https://api.github.com/users/giuliaciardi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/giuliaciardi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-25T12:28:06Z",
        "updated_at": "2023-10-01T16:04:58Z",
        "closed_at": "2023-10-01T16:04:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.125, Python 3.9 within Databricks\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain import PromptTemplate, HuggingFaceHub, LLMChain\n\n### Expected behavior\n\nInstallation without issues",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6715/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6715/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6714",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6714/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6714/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6714/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6714",
        "id": 1773197314,
        "node_id": "I_kwDOIPDwls5psNgC",
        "number": 6714,
        "title": "Update the token_max value in mp_reduce.ValueError:\"A single document was so long it could not be combined \"\u3001\"A single document was longer than the context length,\"",
        "user": {
            "login": "llmadd",
            "id": 38323944,
            "node_id": "MDQ6VXNlcjM4MzIzOTQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/38323944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/llmadd",
            "html_url": "https://github.com/llmadd",
            "followers_url": "https://api.github.com/users/llmadd/followers",
            "following_url": "https://api.github.com/users/llmadd/following{/other_user}",
            "gists_url": "https://api.github.com/users/llmadd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/llmadd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/llmadd/subscriptions",
            "organizations_url": "https://api.github.com/users/llmadd/orgs",
            "repos_url": "https://api.github.com/users/llmadd/repos",
            "events_url": "https://api.github.com/users/llmadd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/llmadd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-25T10:19:42Z",
        "updated_at": "2023-07-05T08:13:50Z",
        "closed_at": "2023-07-05T08:13:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThe value of token_max in mp_reduce should vary according to the model, not the fixed 3000.\r\n![image](https://github.com/hwchase17/langchain/assets/38323944/58ab4760-9787-40e1-a831-6b3a895d4806)\r\n\n\n### Motivation\n\nWhen I use the gpt-3.5-turbo-16k model, I often encounter this ValueError 'A single document was so long it could not be combined' due to the small token_max.I always need to modify a larger value for token_max to resolve the issue.\r\n![image](https://github.com/hwchase17/langchain/assets/38323944/e4c8b4cc-23b8-48e0-ba09-160ab4888c80)\r\n\n\n### Your contribution\n\nI hope to enhance the functionality by dynamically modifying the value of token_max through obtaining the model used by the current chain.\r\n![image](https://github.com/hwchase17/langchain/assets/38323944/a289a1c9-677b-4227-b3f4-b5d8c7620eb6)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6714/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6714/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6712",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6712/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6712/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6712/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6712",
        "id": 1773116562,
        "node_id": "I_kwDOIPDwls5pr5yS",
        "number": 6712,
        "title": "A swift langchain copy, for ios or mac apps.",
        "user": {
            "login": "buhe",
            "id": 650753,
            "node_id": "MDQ6VXNlcjY1MDc1Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/650753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/buhe",
            "html_url": "https://github.com/buhe",
            "followers_url": "https://api.github.com/users/buhe/followers",
            "following_url": "https://api.github.com/users/buhe/following{/other_user}",
            "gists_url": "https://api.github.com/users/buhe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/buhe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/buhe/subscriptions",
            "organizations_url": "https://api.github.com/users/buhe/orgs",
            "repos_url": "https://api.github.com/users/buhe/repos",
            "events_url": "https://api.github.com/users/buhe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/buhe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-25T07:29:55Z",
        "updated_at": "2023-10-01T16:05:03Z",
        "closed_at": "2023-10-01T16:05:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi there, awesome project!\r\n\r\nhttps://github.com/buhe/langchain-swift is a swift langchain copy, for ios or mac apps.\r\nChatbots , QA bot and  Agent is done.\r\nCurrent step:\r\n- [ ] LLMs\r\n  - [x] OpenAI\r\n- [ ] Vectorstore\r\n  - [x] Supabase\r\n- [ ] Embedding\r\n  - [x] OpenAI\r\n- [ ] Chain\r\n  - [x] Base\r\n  - [x] LLM\r\n- [ ] Tools\r\n  - [x] Dummy\r\n  - [x] InvalidTool\r\n  - [ ] Serper\r\n  - [ ] Zapier\r\n- [ ] Agent\r\n  - [x] ZeroShotAgent\r\n- [ ] Memory\r\n    - [x] BaseMemory\r\n    - [x] BaseChatMemory\r\n    - [x] ConversationBufferWindowMemory\r\n- [ ] Text Splitter\r\n    - [x] CharacterTextSplitter\r\n- [ ] Document Loader\r\n    - [x] TextLoader\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6712/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6712/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6711",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6711/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6711/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6711/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6711",
        "id": 1773115263,
        "node_id": "I_kwDOIPDwls5pr5d_",
        "number": 6711,
        "title": "How can i get execution order inside agent?",
        "user": {
            "login": "yuhengShii",
            "id": 35354623,
            "node_id": "MDQ6VXNlcjM1MzU0NjIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/35354623?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuhengShii",
            "html_url": "https://github.com/yuhengShii",
            "followers_url": "https://api.github.com/users/yuhengShii/followers",
            "following_url": "https://api.github.com/users/yuhengShii/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuhengShii/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuhengShii/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuhengShii/subscriptions",
            "organizations_url": "https://api.github.com/users/yuhengShii/orgs",
            "repos_url": "https://api.github.com/users/yuhengShii/repos",
            "events_url": "https://api.github.com/users/yuhengShii/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuhengShii/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-25T07:26:30Z",
        "updated_at": "2023-10-01T16:05:08Z",
        "closed_at": "2023-10-01T16:05:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I defined some agents and some tools. \r\n How can i get execution order about llm, tool inside agent? Use Callback or other? \r\nIf i use  callback print, there results is in order? \r\n```\r\nagent_orange = ChatAgent(llm_chain=orange_chain, allowed_tools=tool_names, output_parser=MyChatOutputParser())\r\nagent_chatgpt = ChatAgent(llm_chain=chatgpt_chain, allowed_tools=tool_names, \r\n\r\noutput_parser=MyChatOutputParser())\r\nagent_executor = MyAgentExecutor.from_agent_and_tools(agent=[agent_orange, agent_chatgpt],\r\n    tools=tools,\r\n    verbose=True\r\n)\r\nresult = agent_executor.run(\"my query\", callbacks=[my_handle])\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6711/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6711/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6710",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6710/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6710/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6710/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6710",
        "id": 1773105959,
        "node_id": "PR_kwDOIPDwls5T1buL",
        "number": 6710,
        "title": "Improve performance when retrieving Notion DB pages",
        "user": {
            "login": "jamesmcroft",
            "id": 13505183,
            "node_id": "MDQ6VXNlcjEzNTA1MTgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/13505183?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesmcroft",
            "html_url": "https://github.com/jamesmcroft",
            "followers_url": "https://api.github.com/users/jamesmcroft/followers",
            "following_url": "https://api.github.com/users/jamesmcroft/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesmcroft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesmcroft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesmcroft/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesmcroft/orgs",
            "repos_url": "https://api.github.com/users/jamesmcroft/repos",
            "events_url": "https://api.github.com/users/jamesmcroft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesmcroft/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-25T07:04:33Z",
        "updated_at": "2023-06-26T13:35:53Z",
        "closed_at": "2023-06-26T12:46:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6710",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6710",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6710.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6710.patch",
            "merged_at": "2023-06-26T12:46:09Z"
        },
        "body": "Update to the existing `NotionDBLoader` to reduce duplicate calls to retrieve the metadata information. \r\n\r\nWhen calling out to retrieve the database objects, the property metadata is already returned as part of the request. This change removes the secondary call out, speeding up the process of loading documents from Notion.\r\n\r\n@rlancemartin @eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6710/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6710/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6709",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6709/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6709/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6709/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6709",
        "id": 1773096079,
        "node_id": "I_kwDOIPDwls5pr0yP",
        "number": 6709,
        "title": "Error while running on Apple M1 Pro",
        "user": {
            "login": "mohammedX6",
            "id": 24648104,
            "node_id": "MDQ6VXNlcjI0NjQ4MTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/24648104?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mohammedX6",
            "html_url": "https://github.com/mohammedX6",
            "followers_url": "https://api.github.com/users/mohammedX6/followers",
            "following_url": "https://api.github.com/users/mohammedX6/following{/other_user}",
            "gists_url": "https://api.github.com/users/mohammedX6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mohammedX6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mohammedX6/subscriptions",
            "organizations_url": "https://api.github.com/users/mohammedX6/orgs",
            "repos_url": "https://api.github.com/users/mohammedX6/repos",
            "events_url": "https://api.github.com/users/mohammedX6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mohammedX6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-25T06:37:18Z",
        "updated_at": "2023-06-25T08:28:05Z",
        "closed_at": "2023-06-25T08:28:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nApple M1\n\n### Who can help?\n\nI get this error : (mach-o file, but is an incompatible architecture (have 'arm64', need 'x86_64'))\u00a0\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nJust run the model\n\n### Expected behavior\n\nmust run on apple m1",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6709/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6709/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6708",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6708/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6708/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6708/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6708",
        "id": 1773086475,
        "node_id": "PR_kwDOIPDwls5T1XmU",
        "number": 6708,
        "title": "fix chroma _similarity_search_with_relevance_scores missing `kwargs` \u2026",
        "user": {
            "login": "sudolong",
            "id": 16191094,
            "node_id": "MDQ6VXNlcjE2MTkxMDk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/16191094?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sudolong",
            "html_url": "https://github.com/sudolong",
            "followers_url": "https://api.github.com/users/sudolong/followers",
            "following_url": "https://api.github.com/users/sudolong/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudolong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sudolong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudolong/subscriptions",
            "organizations_url": "https://api.github.com/users/sudolong/orgs",
            "repos_url": "https://api.github.com/users/sudolong/repos",
            "events_url": "https://api.github.com/users/sudolong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sudolong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-25T06:18:08Z",
        "updated_at": "2023-06-25T18:53:43Z",
        "closed_at": "2023-06-25T18:53:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6708",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6708",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6708.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6708.patch",
            "merged_at": "2023-06-25T18:53:42Z"
        },
        "body": "Issue: https://github.com/hwchase17/langchain/issues/6707\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6708/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6708/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6707",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6707/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6707/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6707/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6707",
        "id": 1773077539,
        "node_id": "I_kwDOIPDwls5prwQj",
        "number": 6707,
        "title": "chroma func _similarity_search_with_relevance_scores missing \"kwargs\" parameter",
        "user": {
            "login": "sudolong",
            "id": 16191094,
            "node_id": "MDQ6VXNlcjE2MTkxMDk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/16191094?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sudolong",
            "html_url": "https://github.com/sudolong",
            "followers_url": "https://api.github.com/users/sudolong/followers",
            "following_url": "https://api.github.com/users/sudolong/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudolong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sudolong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudolong/subscriptions",
            "organizations_url": "https://api.github.com/users/sudolong/orgs",
            "repos_url": "https://api.github.com/users/sudolong/repos",
            "events_url": "https://api.github.com/users/sudolong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sudolong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-25T05:57:30Z",
        "updated_at": "2023-10-01T16:05:14Z",
        "closed_at": "2023-10-01T16:05:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain: v0.0.214\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\nhttps://github.com/hwchase17/langchain/blob/v0.0.214/langchain/vectorstores/base.py#L410\r\nhttps://github.com/hwchase17/langchain/blob/v0.0.214/langchain/vectorstores/chroma.py#L225\r\nhttps://github.com/hwchase17/langchain/blob/v0.0.214/langchain/vectorstores/chroma.py#L198\r\n\r\nThe `filter` option does not work when search_type is similarity_score_threshold\r\n\r\n### Expected behavior\r\n\r\nwork:\r\n```python\r\ndef _similarity_search_with_relevance_scores(\r\n        self,\r\n        query: str,\r\n        k: int = 4,\r\n        **kwargs: Any,\r\n    ) -> List[Tuple[Document, float]]:\r\n        return self.similarity_search_with_score(query, k, **kwargs)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6707/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6707/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6706",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6706/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6706/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6706/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6706",
        "id": 1773070930,
        "node_id": "I_kwDOIPDwls5prupS",
        "number": 6706,
        "title": "ChatOpenAI.get_num_tokens_from_messages raises TypeError with function call response",
        "user": {
            "login": "nyanp",
            "id": 378738,
            "node_id": "MDQ6VXNlcjM3ODczOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/378738?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nyanp",
            "html_url": "https://github.com/nyanp",
            "followers_url": "https://api.github.com/users/nyanp/followers",
            "following_url": "https://api.github.com/users/nyanp/following{/other_user}",
            "gists_url": "https://api.github.com/users/nyanp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nyanp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nyanp/subscriptions",
            "organizations_url": "https://api.github.com/users/nyanp/orgs",
            "repos_url": "https://api.github.com/users/nyanp/repos",
            "events_url": "https://api.github.com/users/nyanp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nyanp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-25T05:36:02Z",
        "updated_at": "2023-10-01T16:05:18Z",
        "closed_at": "2023-10-01T16:05:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n- LangChain version: 0.0.214\r\n- tiktoken version: 0.4.0\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nExecuting following code raises `TypeError: expected string or buffer`.\r\n\r\n```python\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.schema import HumanMessage\r\n\r\nllm = ChatOpenAI(model_name=\"gpt-3.5-turbo-0613\", temperature=0)\r\n\r\nfunctions = [\r\n    {\r\n      \"name\": \"get_current_weather\",\r\n      \"description\": \"Get the current weather in a given location\",\r\n      \"parameters\": {\r\n        \"type\": \"object\",\r\n        \"properties\": {\r\n          \"location\": {\r\n            \"type\": \"string\",\r\n            \"description\": \"The city and state, e.g. San Francisco, CA\"\r\n          },\r\n          \"unit\": {\r\n            \"type\": \"string\",\r\n            \"enum\": [\"celsius\", \"fahrenheit\"]\r\n          }\r\n        },\r\n        \"required\": [\"location\"]\r\n      }\r\n    }  \r\n]\r\n\r\nresponse = llm([HumanMessage(content=\"What is the weather like in Boston?\")], functions=functions)\r\n\r\nllm.get_num_tokens_from_messages([response])\r\n```\r\n\r\n`get_num_tokens_from_messages` internally converts messages to dict with `_convert_message_to_dict` and then interates all key-value pairs to count the number of tokens.\r\nThe code expects value to be a string, but when a function call is included, an exception seems to be raised because value contains a dictionary.\n\n### Expected behavior\n\nAs far as I know, there is no officially documented way to calculate the exact token count consumption when using function call.\r\n\r\nSomeone on the OpenAI forum has [posted](https://community.openai.com/t/how-to-calculate-the-tokens-when-using-function-call/266573/10) a method for calculating the tokens, so perhaps that method could be adopted.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6706/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6706/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    }
]