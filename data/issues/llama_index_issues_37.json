[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1231",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1231/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1231/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1231/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1231",
        "id": 1673137105,
        "node_id": "PR_kwDOIWuq585OlIQH",
        "number": 1231,
        "title": "Add Question Generation module for evaluation.",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-18T13:27:20Z",
        "updated_at": "2023-04-19T06:12:25Z",
        "closed_at": "2023-04-19T06:12:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1231",
            "html_url": "https://github.com/run-llama/llama_index/pull/1231",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1231.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1231.patch",
            "merged_at": "2023-04-19T06:12:25Z"
        },
        "body": "Hi,\r\n\r\nAdded Question Generation module to DatasetGenerator for model evaluation and metrics. This module enables the evaluation of the model's performance in a QA system by generating questions and subsequently using the evaluation module for evaluating and proving metrics.\r\n\r\nThank you.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1231/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1231/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1230",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1230/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1230/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1230/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1230",
        "id": 1672899810,
        "node_id": "I_kwDOIWuq585jtmzi",
        "number": 1230,
        "title": "Question: Is it possible to get the full query string before it is sent?",
        "user": {
            "login": "cheerlessDreamer",
            "id": 67026384,
            "node_id": "MDQ6VXNlcjY3MDI2Mzg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/67026384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cheerlessDreamer",
            "html_url": "https://github.com/cheerlessDreamer",
            "followers_url": "https://api.github.com/users/cheerlessDreamer/followers",
            "following_url": "https://api.github.com/users/cheerlessDreamer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cheerlessDreamer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cheerlessDreamer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cheerlessDreamer/subscriptions",
            "organizations_url": "https://api.github.com/users/cheerlessDreamer/orgs",
            "repos_url": "https://api.github.com/users/cheerlessDreamer/repos",
            "events_url": "https://api.github.com/users/cheerlessDreamer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cheerlessDreamer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-18T11:19:24Z",
        "updated_at": "2023-06-06T06:50:59Z",
        "closed_at": "2023-06-06T06:50:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I'd like to expose the full 'built' query before it is sent to the LLM - I can't see a simple way in the documentation to do this. Has anybody else had any luck with something like this?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1230/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1230/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1229",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1229/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1229/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1229/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1229",
        "id": 1672783533,
        "node_id": "I_kwDOIWuq585jtKat",
        "number": 1229,
        "title": "Question: serialize AgentExecutor object",
        "user": {
            "login": "pelyhe",
            "id": 75569619,
            "node_id": "MDQ6VXNlcjc1NTY5NjE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/75569619?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pelyhe",
            "html_url": "https://github.com/pelyhe",
            "followers_url": "https://api.github.com/users/pelyhe/followers",
            "following_url": "https://api.github.com/users/pelyhe/following{/other_user}",
            "gists_url": "https://api.github.com/users/pelyhe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pelyhe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pelyhe/subscriptions",
            "organizations_url": "https://api.github.com/users/pelyhe/orgs",
            "repos_url": "https://api.github.com/users/pelyhe/repos",
            "events_url": "https://api.github.com/users/pelyhe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pelyhe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-18T10:06:57Z",
        "updated_at": "2023-07-23T01:02:11Z",
        "closed_at": "2023-07-23T01:02:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi!\r\n\r\nI am creating an AgentExecutor with `llama_index.langchain_helpers.agents`'s `create_llama_chat_agent` function. I want to build a webpage, where users can log in and I store the AgentExecutor objects to each user in the database somehow (to keep the context). \r\nDo you have any idea how can I serlialize/deseralize an AgentExecutor object in my database? \r\nI tried load_agent function earlier but it throws [this](https://github.com/hwchase17/langchain/issues/2627) error. I also tried to serialize it with pickle, but I get an error here as well, which says: `cannot pickle 'builtins.CoreBPE' object`. \r\nAny idea would be appreciated, I am not sticking to serialize the AgentExecutor object. \r\n\r\nThanks in advance!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1229/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1229/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1228",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1228/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1228/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1228/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1228",
        "id": 1672632090,
        "node_id": "I_kwDOIWuq585jslca",
        "number": 1228,
        "title": "Getting type = vector_store_dict[TYPE_KEY] KeyError: 'type' error only on streamlit cloud",
        "user": {
            "login": "EvolveChat-AI",
            "id": 126576386,
            "node_id": "O_kgDOB4tnAg",
            "avatar_url": "https://avatars.githubusercontent.com/u/126576386?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EvolveChat-AI",
            "html_url": "https://github.com/EvolveChat-AI",
            "followers_url": "https://api.github.com/users/EvolveChat-AI/followers",
            "following_url": "https://api.github.com/users/EvolveChat-AI/following{/other_user}",
            "gists_url": "https://api.github.com/users/EvolveChat-AI/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EvolveChat-AI/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EvolveChat-AI/subscriptions",
            "organizations_url": "https://api.github.com/users/EvolveChat-AI/orgs",
            "repos_url": "https://api.github.com/users/EvolveChat-AI/repos",
            "events_url": "https://api.github.com/users/EvolveChat-AI/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EvolveChat-AI/received_events",
            "type": "Organization",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2023-04-18T08:37:57Z",
        "updated_at": "2023-09-10T17:04:02Z",
        "closed_at": "2023-09-10T17:04:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "hello, I'm getting this error with my app only when I run it on streamlit cloud and couldn't resolve it, what might be causing it?\r\n\r\nCollecting usage statistics. To deactivate, set browser.gatherUsageStats to False.\r\n\r\n2023-04-17 23:08:01.114 Uncaught app exception\r\n\r\nTraceback (most recent call last):\r\n\r\nFile \"/home/appuser/venv/lib/python3.9/site-packages/streamlit/runtime/scriptrunner/script_runner.py\", line 565, in _run_script\r\n\r\nexec(code, module.__dict__)\r\nFile \"/app/chat6529/6529GPT.py\", line 99, in\r\n\r\nst.session_state.response_text, st.session_state.similarity_score = process_question(query)\r\nFile \"/app/chat6529/6529GPT.py\", line 54, in process_question\r\n\r\nindex = GPTSimpleVectorIndex.load_from_disk(input_index)\r\nFile \"/home/appuser/venv/lib/python3.9/site-packages/llama_index/indices/base.py\", line 364, in load_from_disk\r\n\r\nreturn cls.load_from_string(file_contents, **kwargs)\r\nFile \"/home/appuser/venv/lib/python3.9/site-packages/llama_index/indices/base.py\", line 340, in load_from_string\r\n\r\nreturn cls.load_from_dict(result_dict, **kwargs)\r\nFile \"/home/appuser/venv/lib/python3.9/site-packages/llama_index/indices/vector_store/base.py\", line 260, in load_from_dict\r\n\r\nvector_store = load_vector_store_from_dict(\r\nFile \"/home/appuser/venv/lib/python3.9/site-packages/llama_index/vector_stores/registry.py\", line 52, in load_vector_store_from_dict\r\n\r\ntype = vector_store_dict[TYPE_KEY]\r\nKeyError: 'type'\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1228/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1228/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1227",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1227/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1227/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1227/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1227",
        "id": 1672457436,
        "node_id": "PR_kwDOIWuq585Oi2_h",
        "number": 1227,
        "title": "[version] bump version to 0.5.17",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-18T06:44:08Z",
        "updated_at": "2023-04-18T07:03:36Z",
        "closed_at": "2023-04-18T07:03:35Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1227",
            "html_url": "https://github.com/run-llama/llama_index/pull/1227",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1227.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1227.patch",
            "merged_at": "2023-04-18T07:03:35Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1227/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1227/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1226",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1226/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1226/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1226/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1226",
        "id": 1672382205,
        "node_id": "PR_kwDOIWuq585OinJW",
        "number": 1226,
        "title": "update readme with llama-lab",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-18T05:35:17Z",
        "updated_at": "2023-04-18T05:53:52Z",
        "closed_at": "2023-04-18T05:53:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1226",
            "html_url": "https://github.com/run-llama/llama_index/pull/1226",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1226.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1226.patch",
            "merged_at": "2023-04-18T05:53:51Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1226/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1226/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1225",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1225/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1225/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1225/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1225",
        "id": 1672312005,
        "node_id": "PR_kwDOIWuq585OiYMR",
        "number": 1225,
        "title": "Add sources to create_llama_agent wrapper",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-18T04:04:35Z",
        "updated_at": "2023-04-18T06:41:20Z",
        "closed_at": "2023-04-18T06:41:19Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1225",
            "html_url": "https://github.com/run-llama/llama_index/pull/1225",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1225.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1225.patch",
            "merged_at": "2023-04-18T06:41:19Z"
        },
        "body": "A (highly requested) feature is to add some sort of \"sources\" option to the llama+langchain agent wrappers\r\n\r\nSo, here is my initial attempt at doing that \ud83d\udc4d\ud83c\udffb \r\n\r\nBasically, in your tool kwargs, you can set `{..., return_sources: True}`, and the agent will spit on a json string containing the answer + source details. (since the response have to be a string, you can load the response with `json.loads()`)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1225/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1225/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1224",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1224/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1224/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1224/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1224",
        "id": 1671899362,
        "node_id": "PR_kwDOIWuq585OhATc",
        "number": 1224,
        "title": "include_extra_info fix ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-17T20:12:14Z",
        "updated_at": "2023-04-17T20:15:56Z",
        "closed_at": "2023-04-17T20:15:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1224",
            "html_url": "https://github.com/run-llama/llama_index/pull/1224",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1224.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1224.patch",
            "merged_at": "2023-04-17T20:15:55Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1224/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1224/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1223",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1223/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1223/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1223/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1223",
        "id": 1671616593,
        "node_id": "I_kwDOIWuq585jothR",
        "number": 1223,
        "title": "`GPTQdrantIndex` is returning None",
        "user": {
            "login": "estebanpdl",
            "id": 13058422,
            "node_id": "MDQ6VXNlcjEzMDU4NDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13058422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/estebanpdl",
            "html_url": "https://github.com/estebanpdl",
            "followers_url": "https://api.github.com/users/estebanpdl/followers",
            "following_url": "https://api.github.com/users/estebanpdl/following{/other_user}",
            "gists_url": "https://api.github.com/users/estebanpdl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/estebanpdl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/estebanpdl/subscriptions",
            "organizations_url": "https://api.github.com/users/estebanpdl/orgs",
            "repos_url": "https://api.github.com/users/estebanpdl/repos",
            "events_url": "https://api.github.com/users/estebanpdl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/estebanpdl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-17T17:04:53Z",
        "updated_at": "2023-07-23T01:03:11Z",
        "closed_at": "2023-07-23T01:03:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am using `llama-index==0.5.15`.\r\n\r\nWhen running Paul Graham's example, it seems `GPTQdrantIndex` is not processing documents correctly. Although, OpenAI charged tokens. \r\n\r\n```\r\n# text file is located in test-data\r\ndocuments = SimpleDirectoryReader('./test-data').load_data()\r\nindex = GPTQdrantIndex.from_documents(documents, client=client, collection_name=\"paul_graham\")\r\n\r\n# save index to disk\r\nindex.save_to_disk(\"./test-response/index_qdrant.json\")\r\n\r\nresponse = index.query(\"What happened with microcomputers?\")\r\nprint (response)\r\n```\r\n\r\n**Output**\r\n\r\n```\r\nINFO:httpx:HTTP Request: GET https://e952af18-199d-4eee-9662-9513ab96f3be.us-east-1-0.aws.cloud.qdrant.io:6333/collections/paul_graham \"HTTP/2 200 OK\"\r\nINFO:httpx:HTTP Request: PUT https://e952af18-199d-4eee-9662-9513ab96f3be.us-east-1-0.aws.cloud.qdrant.io:6333/collections/paul_graham/points?wait=true \"HTTP/2 200 OK\"\r\nINFO:llama_index.token_counter.token_counter:> [build_index_from_nodes] Total LLM token usage: 0 tokens\r\nINFO:llama_index.token_counter.token_counter:> [build_index_from_nodes] Total embedding token usage: 17609 tokens\r\nINFO:httpx:HTTP Request: POST https://e952af18-199d-4eee-9662-9513ab96f3be.us-east-1-0.aws.cloud.qdrant.io:6333/collections/paul_graham/points/search \"HTTP/2 200 OK\"\r\nINFO:llama_index.token_counter.token_counter:> [query] Total LLM token usage: 0 tokens\r\nINFO:llama_index.token_counter.token_counter:> [query] Total embedding token usage: 7 tokens\r\nNone\r\n```\r\n\r\nHowever, when using `GPTSimpleVectorIndex` with `llama-index==0.5.15`, the script gets the response:\r\n\r\n```\r\nINFO:llama_index.token_counter.token_counter:> [build_index_from_nodes] Total LLM token usage: 0 tokens\r\nINFO:llama_index.token_counter.token_counter:> [build_index_from_nodes] Total embedding token usage: 17609 tokens\r\nINFO:llama_index.token_counter.token_counter:> [query] Total LLM token usage: 3877 tokens\r\nINFO:llama_index.token_counter.token_counter:> [query] Total embedding token usage: 7 tokens\r\n\r\n\r\nMicrocomputers allowed people to have a computer sitting right in front of them on a desk that could respond to their keystrokes as it was running instead of just churning through a stack of punch cards and then stopping. This made programming much easier and more accessible, allowing students to learn and experiment with programming without needing to rely on faculty instruction. It also enabled people to create art and other projects in the comfort of their own homes, as evidenced by the example of the student painting still lives in their bedroom at night.\r\n```\r\n\r\nHere is an example of the JSON file, based on `index.save_to_disk(\"./test-response/index_qdrant.json\")`\r\n\r\n![Screenshot 2023-04-17 12 01 48](https://user-images.githubusercontent.com/13058422/232558428-88aaa214-e3bc-425e-b5ac-a909bcf7666f.png)\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1223/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1223/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1222",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1222/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1222/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1222/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1222",
        "id": 1671514474,
        "node_id": "I_kwDOIWuq585joUlq",
        "number": 1222,
        "title": "Llama-index not working with AWS lambda",
        "user": {
            "login": "siddhart1o1",
            "id": 59279771,
            "node_id": "MDQ6VXNlcjU5Mjc5Nzcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/59279771?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/siddhart1o1",
            "html_url": "https://github.com/siddhart1o1",
            "followers_url": "https://api.github.com/users/siddhart1o1/followers",
            "following_url": "https://api.github.com/users/siddhart1o1/following{/other_user}",
            "gists_url": "https://api.github.com/users/siddhart1o1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/siddhart1o1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/siddhart1o1/subscriptions",
            "organizations_url": "https://api.github.com/users/siddhart1o1/orgs",
            "repos_url": "https://api.github.com/users/siddhart1o1/repos",
            "events_url": "https://api.github.com/users/siddhart1o1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/siddhart1o1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-04-17T16:00:14Z",
        "updated_at": "2023-10-17T16:04:54Z",
        "closed_at": "2023-10-17T16:04:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am using Llama Index to create a custom bot using AWS Lambda, but when I try to create its layer and upload it to the AWS layer, I am getting \"package not found\" errors for different libraries. I tried to delete some packages from the Llama Index package and use AWS packages like Pandas and NumPy, but I got a \"max size\" error.\r\n\r\nI created the package using WSL2 Ubuntu.\r\n\r\nthis is the error I got when I try to use layer \r\n```\r\n{\r\n  \"errorMessage\": \"Unable to import module 'lambda_handler': Unable to import required dependencies:\\nnumpy: \\n\\nIMPORTANT: PLEASE READ THIS FOR ADVICE ON HOW TO SOLVE THIS ISSUE!\\n\\nImporting the numpy C-extensions failed. This error can happen for\\nmany reasons, often due to issues with your setup or how NumPy was\\ninstalled.\\n\\nWe have compiled some common reasons and troubleshooting tips at:\\n\\n    https://numpy.org/devdocs/user/troubleshooting-importerror.html\\n\\nPlease note and check the following:\\n\\n  * The Python version is: Python3.8 from \\\"/var/lang/bin/python3.8\\\"\\n  * The NumPy version is: \\\"1.24.2\\\"\\n\\nand make sure that they are the versions you expect.\\nPlease carefully study the documentation linked above for further help.\\n\\nOriginal error was: No module named 'numpy.core._multiarray_umath'\\n\",\r\n  \"errorType\": \"Runtime.ImportModuleError\",\r\n  \"stackTrace\": []\r\n}\r\n``` \r\n\r\nsample code \r\n```\r\nimport json\r\nfrom llama_index import GPTSimpleVectorIndex\r\nimport os\r\nimport boto3\r\n\r\n\r\n\r\ndef lambda_handler(event, context): \r\n    s3 = boto3.resource('s3')\r\n    #added key\r\n    try:\r\n        event = json.loads(event['body'])\r\n        prompt = event.get(\"prompt\", None)\r\n        if(prompt is None):\r\n            raise Exception(\"prompt is None\")\r\n\r\n        bucket_name = ''\r\n        object_key = ''\r\n        index_object = s3.Object(bucket_name, object_key)\r\n        index_content = index_object.get()['Body'].read()\r\n        index = GPTSimpleVectorIndex.load_from_disk(index_content)\r\n        # Query the index\r\n        RESPONSE = index.query(prompt)\r\n\r\n        return {\r\n            \"headers\": {\r\n                \"Access-Control-Allow-Headers\": \"Content-Type\",\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Access-Control-Allow-Methods\": \"POST\"\r\n            },\r\n            \"statusCode\": 200,\r\n            \"body\": json.dumps(\r\n                {'message': json.dumps({\"message\": RESPONSE})}\r\n            )\r\n        }\r\n    except Exception as e:\r\n        print(e)\r\n        return {\r\n            \"headers\": {\r\n                \"Access-Control-Allow-Headers\": \"Content-Type\",\r\n                \"Access-Control-Allow-Origin\": \"*\",\r\n                \"Access-Control-Allow-Methods\": \"POST\"\r\n            },\r\n            \"statusCode\": 500,\r\n            \"body\": json.dumps(\r\n                {'message': json.dumps(e, default=str)}\r\n            )\r\n        }\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1222/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1222/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1221",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1221/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1221/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1221/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1221",
        "id": 1671258084,
        "node_id": "I_kwDOIWuq585jnV_k",
        "number": 1221,
        "title": "Loading index from disk works really slow for me",
        "user": {
            "login": "daxeel",
            "id": 5646280,
            "node_id": "MDQ6VXNlcjU2NDYyODA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5646280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daxeel",
            "html_url": "https://github.com/daxeel",
            "followers_url": "https://api.github.com/users/daxeel/followers",
            "following_url": "https://api.github.com/users/daxeel/following{/other_user}",
            "gists_url": "https://api.github.com/users/daxeel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daxeel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daxeel/subscriptions",
            "organizations_url": "https://api.github.com/users/daxeel/orgs",
            "repos_url": "https://api.github.com/users/daxeel/repos",
            "events_url": "https://api.github.com/users/daxeel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daxeel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-17T14:02:02Z",
        "updated_at": "2023-07-23T03:21:12Z",
        "closed_at": "2023-07-23T03:21:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Here is how my program works\r\n\r\n1. I have built 2 indices with GPTSimpleVectorIndex from almost 300 website pages content and 1 csv data\r\n2. Then saved 2 indices in the disk\r\n3. Built graph with List index and make queries\r\n\r\nWhen I create fresh indices in google collab, it tasks around 7-10 seconds, but when I load indices from disk in the same google collab, it tasks 20+ seconds.\r\n\r\nAm I doing something incorrectly?\r\n\r\nLet me know how to improve the speed.\r\n\r\nThis is how I am constructing a composable graph\r\n\r\n`graph = ComposableGraph.from_indices(\r\n    GPTListIndex,\r\n    [website_index, faq_csv_index],\r\n    index_summaries=[\"website index\", \"faq index\"],\r\n)\r\n\r\nquery_configs = [\r\n    {\r\n        \"index_struct_type\": \"simple_dict\",\r\n        \"query_mode\": \"default\",\r\n        \"query_kwargs\": {\r\n            \"similarity_top_k\": 1,\r\n            # \"include_summary\": True\r\n        }\r\n    },\r\n    {\r\n        \"index_struct_type\": \"list\",\r\n        \"query_mode\": \"default\",\r\n        \"query_kwargs\": {\r\n            \"response_mode\": \"default\"\r\n        }\r\n    },\r\n]`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1221/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1221/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1220",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1220/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1220/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1220/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1220",
        "id": 1671116474,
        "node_id": "PR_kwDOIWuq585OeV88",
        "number": 1220,
        "title": "Deeplake vectore store",
        "user": {
            "login": "adolkhan",
            "id": 54854336,
            "node_id": "MDQ6VXNlcjU0ODU0MzM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/54854336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adolkhan",
            "html_url": "https://github.com/adolkhan",
            "followers_url": "https://api.github.com/users/adolkhan/followers",
            "following_url": "https://api.github.com/users/adolkhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/adolkhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adolkhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adolkhan/subscriptions",
            "organizations_url": "https://api.github.com/users/adolkhan/orgs",
            "repos_url": "https://api.github.com/users/adolkhan/repos",
            "events_url": "https://api.github.com/users/adolkhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adolkhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-17T12:56:52Z",
        "updated_at": "2023-04-19T07:30:33Z",
        "closed_at": "2023-04-19T07:30:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1220",
            "html_url": "https://github.com/run-llama/llama_index/pull/1220",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1220.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1220.patch",
            "merged_at": "2023-04-19T07:30:33Z"
        },
        "body": "Added support for deeplake Vector store. Also provided Jupyter notebook with example on how to use deeplake with Llama index",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1220/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1220/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1219",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1219/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1219/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1219/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1219",
        "id": 1670780769,
        "node_id": "I_kwDOIWuq585jlhdh",
        "number": 1219,
        "title": "Cannot choose a different model",
        "user": {
            "login": "cheerlessDreamer",
            "id": 67026384,
            "node_id": "MDQ6VXNlcjY3MDI2Mzg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/67026384?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cheerlessDreamer",
            "html_url": "https://github.com/cheerlessDreamer",
            "followers_url": "https://api.github.com/users/cheerlessDreamer/followers",
            "following_url": "https://api.github.com/users/cheerlessDreamer/following{/other_user}",
            "gists_url": "https://api.github.com/users/cheerlessDreamer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cheerlessDreamer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cheerlessDreamer/subscriptions",
            "organizations_url": "https://api.github.com/users/cheerlessDreamer/orgs",
            "repos_url": "https://api.github.com/users/cheerlessDreamer/repos",
            "events_url": "https://api.github.com/users/cheerlessDreamer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cheerlessDreamer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-17T09:33:13Z",
        "updated_at": "2023-04-18T23:04:03Z",
        "closed_at": "2023-04-18T10:45:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I have the following script that builds an index from a bunch of text files and takes a query. I have specified the model to be `gpt-3.5-turbo`. I understand that the embeddings will not be affected by this choice (this shows up in my usage as `text-embedding-ada-002-v2`), but when I look at my usage in the OpenAI platform, I see that completions are still being carried out using the `text-davinci` model. Incidentally, if I pass something deliberately wrong to `model_name` (such as `model_name=\"blah_blah_blah\"`), no error is thrown, the index builds fine, and the query returns a correct answer - this leads me to think that `GPTSimpleVectorIndex` is not looking at `model_name` at all.\r\n\r\n```\r\nfrom llama_index import GPTSimpleVectorIndex, Document, SimpleDirectoryReader\r\nfrom llama_index import LLMPredictor, GPTSimpleVectorIndex, PromptHelper, ServiceContext\r\nfrom langchain.llms import OpenAIChat\r\nfrom dotenv import load_dotenv\r\nimport os\r\n\r\nload_dotenv()\r\nos.environ[\"OPENAI_API_KEY\"] = os.getenv('OPENAI_API_KEY')\r\n\r\nllm_predictor = LLMPredictor(llm=OpenAIChat(temperature=0.2, model_name=\"gpt-3.5-turbo\"))\r\nmax_input_size = 4096\r\nnum_output = 256\r\nmax_chunk_overlap = 20\r\nprompt_helper = PromptHelper(max_input_size, num_output, max_chunk_overlap)\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper)\r\ndocuments = SimpleDirectoryReader('data').load_data()\r\n\r\nindex = GPTSimpleVectorIndex.from_documents(\r\n    documents, service_context=service_context\r\n)\r\n\r\nindex.save_to_disk('index.json')\r\nindex = GPTSimpleVectorIndex.load_from_disk('index.json')\r\n\r\nprint(index.query(\"What are these documents about?\"))\r\n```\r\n\r\nAny help is greatly appreciated. I've been hitting my head against a wall all weekend\u2026",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1219/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1219/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1218",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1218/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1218/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1218/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1218",
        "id": 1670658171,
        "node_id": "I_kwDOIWuq585jlDh7",
        "number": 1218,
        "title": "BaseGPTIndex update and docstore.get_document method not working as expected",
        "user": {
            "login": "diridiri",
            "id": 8726370,
            "node_id": "MDQ6VXNlcjg3MjYzNzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8726370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/diridiri",
            "html_url": "https://github.com/diridiri",
            "followers_url": "https://api.github.com/users/diridiri/followers",
            "following_url": "https://api.github.com/users/diridiri/following{/other_user}",
            "gists_url": "https://api.github.com/users/diridiri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/diridiri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/diridiri/subscriptions",
            "organizations_url": "https://api.github.com/users/diridiri/orgs",
            "repos_url": "https://api.github.com/users/diridiri/repos",
            "events_url": "https://api.github.com/users/diridiri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/diridiri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-17T08:16:38Z",
        "updated_at": "2023-07-23T01:04:38Z",
        "closed_at": "2023-07-23T01:04:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "In llama-index 0.5.16, I guess document inserted cannot be found with docstore.get_document method,\r\nhere's simple test code to reproduce an error,\r\n\r\n```\r\nfrom llama_index import GPTSimpleVectorIndex, Document\r\n\r\ndoc = Document(text=\"11\", doc_id=\"original_doc_id\")\r\nindex = GPTSimpleVectorIndex.from_documents([doc])\r\nprint (index.docstore.get_document(\"original_doc_id\"))\r\n```\r\n\r\nthis gives ValueError: doc_id original_doc_id not found. \r\n\r\nAnd also, update is not working as expected to replace original document in index's docstore, it adds new document with new id.\r\nhere's simple test code to reproduce error again,\r\n\r\n```\r\nfrom llama_index import GPTSimpleVectorIndex, Document\r\n\r\ndocument1 = Document(text=\"11\", doc_id=\"original_doc_id\")\r\nindex = GPTSimpleVectorIndex.from_documents([document1])\r\n\r\nprint (index.docstore)\r\ndocument1.text = \"asdf\"\r\nindex.update(document1)\r\nprint (\"----------- after doc1 update ----------\")\r\nprint (index.docstore)\r\n```\r\n\r\nthis gives 2 documents created in docstore.\r\n\r\nAlways thanks for your support & maintaining this amazing project!!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1218/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1218/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1217",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1217/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1217/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1217/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1217",
        "id": 1670601771,
        "node_id": "I_kwDOIWuq585jk1wr",
        "number": 1217,
        "title": "Auto calls the OpenAI API three times",
        "user": {
            "login": "liuzy1314",
            "id": 45117041,
            "node_id": "MDQ6VXNlcjQ1MTE3MDQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45117041?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liuzy1314",
            "html_url": "https://github.com/liuzy1314",
            "followers_url": "https://api.github.com/users/liuzy1314/followers",
            "following_url": "https://api.github.com/users/liuzy1314/following{/other_user}",
            "gists_url": "https://api.github.com/users/liuzy1314/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liuzy1314/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liuzy1314/subscriptions",
            "organizations_url": "https://api.github.com/users/liuzy1314/orgs",
            "repos_url": "https://api.github.com/users/liuzy1314/repos",
            "events_url": "https://api.github.com/users/liuzy1314/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liuzy1314/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-17T07:41:36Z",
        "updated_at": "2023-07-23T03:21:33Z",
        "closed_at": "2023-07-23T03:21:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/jerryjliu/llama_index/blob/c811e2d4775b98f5a7cf82383c876018c4f27ec4/examples/langchain_demo/LangchainDemo.ipynb\r\nHello, I found that every time I execute the \"input\" function in the example above, it calls the OpenAI API three times. However, I couldn't find any parameter settings related to this behavior. Could you tell me where to find the default parameter configuration for this API?I am using the latest lib, llama_index-0.5.16\r\n```\r\nindex = GPTListIndex([])\r\n\r\nmemory = GPTIndexChatMemory(\r\n    index=index,\r\n    memory_key=\"chat_history\",\r\n    query_kwargs={\"response_mode\": \"compact\"},\r\n    # return_source returns source nodes instead of querying index\r\n    return_source=True,\r\n    # return_messages returns context in message format\r\n    return_messages=True\r\n)\r\nllm = OpenAI(temperature=0)\r\nagent_chain = initialize_agent([], llm, agent=\"conversational-react-description\", memory=memory)\r\nresponse = agent_chain.run(input=\"the question\")\r\n```\r\n<img width=\"975\" alt=\"image\" src=\"https://user-images.githubusercontent.com/45117041/232418927-4ebbfecf-8165-4a2c-8889-cc4a34d3db2f.png\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1217/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1217/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1216",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1216/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1216/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1216/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1216",
        "id": 1670433653,
        "node_id": "I_kwDOIWuq585jkMt1",
        "number": 1216,
        "title": "Query Response Returning NONE (Custom LLM)",
        "user": {
            "login": "onnyyonn",
            "id": 963267,
            "node_id": "MDQ6VXNlcjk2MzI2Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/963267?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/onnyyonn",
            "html_url": "https://github.com/onnyyonn",
            "followers_url": "https://api.github.com/users/onnyyonn/followers",
            "following_url": "https://api.github.com/users/onnyyonn/following{/other_user}",
            "gists_url": "https://api.github.com/users/onnyyonn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/onnyyonn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/onnyyonn/subscriptions",
            "organizations_url": "https://api.github.com/users/onnyyonn/orgs",
            "repos_url": "https://api.github.com/users/onnyyonn/repos",
            "events_url": "https://api.github.com/users/onnyyonn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/onnyyonn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-17T05:20:37Z",
        "updated_at": "2023-07-23T03:25:58Z",
        "closed_at": "2023-07-23T03:25:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am trying to reprduce the Paul Graham Essay example with custom LLM. Here is my code:\r\n\r\n```python\r\nfrom langchain.llms.base import LLM\r\nfrom llama_index import SimpleDirectoryReader, GPTTreeIndex, PromptHelper\r\nfrom llama_index import LLMPredictor, ServiceContext\r\nfrom transformers import pipeline\r\nfrom typing import Optional, List, Mapping, Any\r\n\r\n# define prompt helper\r\n# set maximum input size\r\nmax_input_size = 2048\r\n# set number of output tokens\r\nnum_output = 256\r\n# set maximum chunk overlap\r\nmax_chunk_overlap = 20\r\nprompt_helper = PromptHelper(max_input_size, num_output, max_chunk_overlap)\r\n\r\nclass CustomLLM(LLM):\r\n    model_name = \"google/flan-t5-base\"\r\n    pipeline = pipeline(\"text2text-generation\", model=model_name, device=\"cuda:3\")\r\n\r\n    def _call(self, prompt: str, stop: Optional[List[str]] = None) -> str:\r\n        prompt_length = len(prompt)\r\n        response = self.pipeline(prompt, max_new_tokens=num_output)[0][\"generated_text\"]\r\n\r\n        # only return newly generated tokens\r\n        return response[prompt_length:]\r\n\r\n    @property\r\n    def _identifying_params(self) -> Mapping[str, Any]:\r\n        return {\"name_of_model\": self.model_name}\r\n\r\n    @property\r\n    def _llm_type(self) -> str:\r\n        return \"custom\"\r\n\r\n# define our LLM\r\nllm_predictor = LLMPredictor(llm=CustomLLM())\r\n\r\ndocuments = SimpleDirectoryReader('data').load_data()\r\n\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper)    \r\nindex = GPTTreeIndex.from_documents(documents, service_context=service_context)\r\n\r\nresponse = index.query(\"What did the author do growing up?\")\r\nprint(response)\r\n```\r\nI am getting response `None`. Any idea what may be the issue?\r\n\r\nI am running 0.5.16 version of llama-index.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1216/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1216/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1215",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1215/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1215/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1215/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1215",
        "id": 1670227105,
        "node_id": "PR_kwDOIWuq585ObW8H",
        "number": 1215,
        "title": "Refactor response synthesis",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-17T00:58:32Z",
        "updated_at": "2023-04-17T08:04:22Z",
        "closed_at": "2023-04-17T08:04:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1215",
            "html_url": "https://github.com/run-llama/llama_index/pull/1215",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1215.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1215.patch",
            "merged_at": "2023-04-17T08:04:21Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1215/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1215/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1214",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1214/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1214/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1214/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1214",
        "id": 1670222466,
        "node_id": "PR_kwDOIWuq585ObWAt",
        "number": 1214,
        "title": "[version] bump version to 0.5.16 ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-17T00:48:22Z",
        "updated_at": "2023-04-17T00:54:49Z",
        "closed_at": "2023-04-17T00:54:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1214",
            "html_url": "https://github.com/run-llama/llama_index/pull/1214",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1214.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1214.patch",
            "merged_at": "2023-04-17T00:54:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1214/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1214/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1213",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1213/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1213/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1213/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1213",
        "id": 1670168794,
        "node_id": "PR_kwDOIWuq585ObLKU",
        "number": 1213,
        "title": "add evaluation guide ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T22:22:11Z",
        "updated_at": "2023-04-17T00:55:57Z",
        "closed_at": "2023-04-17T00:55:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1213",
            "html_url": "https://github.com/run-llama/llama_index/pull/1213",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1213.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1213.patch",
            "merged_at": "2023-04-17T00:55:56Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1213/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1213/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1212",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1212/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1212/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1212/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1212",
        "id": 1669934874,
        "node_id": "PR_kwDOIWuq585OacBp",
        "number": 1212,
        "title": "Update ResponseEvaluator",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T12:17:10Z",
        "updated_at": "2023-04-17T00:43:21Z",
        "closed_at": "2023-04-17T00:43:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1212",
            "html_url": "https://github.com/run-llama/llama_index/pull/1212",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1212.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1212.patch",
            "merged_at": "2023-04-17T00:43:21Z"
        },
        "body": "Hi,\r\n\r\nAdded `evaluate_source_nodes` in the `ResponseEvaluator` module.\r\n\r\nThank you.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1212/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1212/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1211",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1211/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1211/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1211/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1211",
        "id": 1669879929,
        "node_id": "I_kwDOIWuq585jiFh5",
        "number": 1211,
        "title": "PIP INSTALL...",
        "user": {
            "login": "ortizalfano",
            "id": 42744183,
            "node_id": "MDQ6VXNlcjQyNzQ0MTgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/42744183?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ortizalfano",
            "html_url": "https://github.com/ortizalfano",
            "followers_url": "https://api.github.com/users/ortizalfano/followers",
            "following_url": "https://api.github.com/users/ortizalfano/following{/other_user}",
            "gists_url": "https://api.github.com/users/ortizalfano/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ortizalfano/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ortizalfano/subscriptions",
            "organizations_url": "https://api.github.com/users/ortizalfano/orgs",
            "repos_url": "https://api.github.com/users/ortizalfano/repos",
            "events_url": "https://api.github.com/users/ortizalfano/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ortizalfano/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-16T11:29:42Z",
        "updated_at": "2023-07-23T03:25:00Z",
        "closed_at": "2023-07-23T03:25:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello, hpew everything goes well! Thank you so much to share your code guys!! I have one question about this file \"llama_index/tree/main/examples/data_connectors)/DatabaseReaderDemo.ipynb\"\r\n\r\nI\u00b4m working on this step:\r\n\r\n# Initialize DatabaseReader object with the following parameters:\r\n\r\ndb = DatabaseReader(\r\n    scheme = \"postgresql\", # Database Scheme\r\n    host = \"localhost\", # Database Host\r\n    port = \"5432\", # Database Port\r\n    user = \"postgres\", # Database User\r\n    password = \"FakeExamplePassword\", # Database Password\r\n    dbname = \"postgres\", # Database Name\r\n)\r\nI \r\n(Obviously, I complete that with my data) but is giving me an error:\r\n\r\n\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nCell In[5], line 1\r\n----> 1 db = DatabaseReader(\r\n      2     host=\"mydata\",\r\n      3     user=\"mydata\",\r\n      4     password=\"mydata\",\r\n      5     dbname=\"mydata\",\r\n      6 )\r\n\r\nFile ~/anaconda3/lib/python3.10/site-packages/llama_index/readers/database.py:71, in DatabaseReader.__init__(self, sql_database, engine, uri, scheme, host, port, user, password, dbname, *args, **kwargs)\r\n     69     self.sql_database = SQLDatabase.from_uri(uri, *args, **kwargs)\r\n     70 else:\r\n---> 71     raise ValueError(\r\n     72         \"You must provide either a SQLDatabase, \"\r\n     73         \"a SQL Alchemy Engine, a valid connection URI, or a valid \"\r\n     74         \"set of credentials.\"\r\n     75     )\r\n\r\nValueError: You must provide either a SQLDatabase, a SQL Alchemy Engine, a valid connection URI, or a valid set of credentials.\r\n\r\nand my code is exactly what do you have on the path https://github.com/jerryjliu/llama_index/blob/main/examples/data_connectors/DatabaseReaderDemo.ipynb\r\n\r\nWell, thank you.. I\u00b4m learning sorry if this is a stupid question. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1211/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1211/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1210",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1210/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1210/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1210/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1210",
        "id": 1669745981,
        "node_id": "PR_kwDOIWuq585OZ0Wz",
        "number": 1210,
        "title": "add source evaluation to eval nb ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T07:50:05Z",
        "updated_at": "2023-04-16T08:00:05Z",
        "closed_at": "2023-04-16T08:00:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1210",
            "html_url": "https://github.com/run-llama/llama_index/pull/1210",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1210.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1210.patch",
            "merged_at": "2023-04-16T08:00:04Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1210/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1210/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1209",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1209/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1209/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1209/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1209",
        "id": 1669687970,
        "node_id": "I_kwDOIWuq585jhWqi",
        "number": 1209,
        "title": "The completion could only show 140 words in Chinese",
        "user": {
            "login": "DeceiverLeblanc",
            "id": 52729236,
            "node_id": "MDQ6VXNlcjUyNzI5MjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/52729236?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DeceiverLeblanc",
            "html_url": "https://github.com/DeceiverLeblanc",
            "followers_url": "https://api.github.com/users/DeceiverLeblanc/followers",
            "following_url": "https://api.github.com/users/DeceiverLeblanc/following{/other_user}",
            "gists_url": "https://api.github.com/users/DeceiverLeblanc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DeceiverLeblanc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DeceiverLeblanc/subscriptions",
            "organizations_url": "https://api.github.com/users/DeceiverLeblanc/orgs",
            "repos_url": "https://api.github.com/users/DeceiverLeblanc/repos",
            "events_url": "https://api.github.com/users/DeceiverLeblanc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DeceiverLeblanc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-16T05:18:57Z",
        "updated_at": "2023-04-29T15:35:37Z",
        "closed_at": "2023-04-17T14:43:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When using Chinese, the reply from the chatgpt only shows 140 words. After modifying the output_nums , the problems still occurs. And I also found lots of people occur this problem too in Chinese internet community but no one post the proper way to solve it. After reading the document I still don't know how to fix this problem, could you please have a look? Thanks.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1209/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1209/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1208",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1208/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1208/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1208/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1208",
        "id": 1669672743,
        "node_id": "PR_kwDOIWuq585OZlTd",
        "number": 1208,
        "title": "[tentative] revert embedding nb's in docs",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T04:53:20Z",
        "updated_at": "2023-04-16T05:02:09Z",
        "closed_at": "2023-04-16T05:02:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1208",
            "html_url": "https://github.com/run-llama/llama_index/pull/1208",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1208.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1208.patch",
            "merged_at": "2023-04-16T05:02:09Z"
        },
        "body": "Seems like this might've broken the mendable bot ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1208/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1208/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1207",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1207/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1207/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1207/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1207",
        "id": 1669664606,
        "node_id": "PR_kwDOIWuq585OZjtZ",
        "number": 1207,
        "title": "chore: enable to pass tokenizer to embedding",
        "user": {
            "login": "xhiroga",
            "id": 13391129,
            "node_id": "MDQ6VXNlcjEzMzkxMTI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13391129?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xhiroga",
            "html_url": "https://github.com/xhiroga",
            "followers_url": "https://api.github.com/users/xhiroga/followers",
            "following_url": "https://api.github.com/users/xhiroga/following{/other_user}",
            "gists_url": "https://api.github.com/users/xhiroga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xhiroga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xhiroga/subscriptions",
            "organizations_url": "https://api.github.com/users/xhiroga/orgs",
            "repos_url": "https://api.github.com/users/xhiroga/repos",
            "events_url": "https://api.github.com/users/xhiroga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xhiroga/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-16T04:19:02Z",
        "updated_at": "2023-04-16T08:56:57Z",
        "closed_at": "2023-04-16T08:20:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1207",
            "html_url": "https://github.com/run-llama/llama_index/pull/1207",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1207.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1207.patch",
            "merged_at": "2023-04-16T08:20:47Z"
        },
        "body": "## Summary\r\n\r\nEnable to pass tokenizer to `BaseEmbedding` to abvoid special character check.\r\n\r\n## Motivation\r\n\r\nhttps://github.com/jerryjliu/llama_index/issues/1206\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1207/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1207/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1206",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1206/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1206/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1206/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1206",
        "id": 1669661414,
        "node_id": "I_kwDOIWuq585jhQLm",
        "number": 1206,
        "title": "Handling documents containing <|endoftext|> is little cumbersome",
        "user": {
            "login": "xhiroga",
            "id": 13391129,
            "node_id": "MDQ6VXNlcjEzMzkxMTI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13391129?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xhiroga",
            "html_url": "https://github.com/xhiroga",
            "followers_url": "https://api.github.com/users/xhiroga/followers",
            "following_url": "https://api.github.com/users/xhiroga/following{/other_user}",
            "gists_url": "https://api.github.com/users/xhiroga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xhiroga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xhiroga/subscriptions",
            "organizations_url": "https://api.github.com/users/xhiroga/orgs",
            "repos_url": "https://api.github.com/users/xhiroga/repos",
            "events_url": "https://api.github.com/users/xhiroga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xhiroga/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-16T04:10:04Z",
        "updated_at": "2023-06-22T14:04:29Z",
        "closed_at": "2023-04-18T06:25:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## Premise\r\n\r\nIf text conrtains `<|endoftext|>`, indexing will fail.\r\n\r\n```python\r\nfrom llama_index import Document, GPTSimpleVectorIndex\r\n\r\ndocs = [Document(\"Hello world!<|endoftext|>\")]\r\n\r\nindex = GPTSimpleVectorIndex.from_documents(docs)\r\n\r\n# ValueError: Encountered text corresponding to disallowed special token '<|endoftext|>'.\r\n# If you want this text to be encoded as a special token, pass it to `allowed_special`, e.g. `allowed_special={'<|endoftext|>', ...}`.\r\n# If you want this text to be encoded as normal text, disable the check for this token by passing `disallowed_special=(enc.special_tokens_set - {'<|endoftext|>'})`.\r\n# To disable this check for all special tokens, pass `disallowed_special=()`.\r\n```\r\n\r\n## Cause\r\n\r\nThere are two places where encoding is performed by the Tokenizer, and it is necessary to pass an option to ignore special text in both cases.\r\n\r\n- Text splitting inside `node_utils#get_nodes_from_document`\r\n- In `GPTSimpleVectorIndex#from_documents` when instantiating the class, the process of counting the number of tokens to obtain `embedding_results` inside `BaseGPTIndex#build_index_from_nodes`\r\n\r\n## Simple workaround\r\n\r\nPass `service_context` as an argument to `GPTSimpleVectorIndex.from_documents()`.\r\n\r\n```python\r\nenc = tiktoken.get_encoding(\"gpt2\")\r\ntokenizer = lambda text: enc.encode(text, allowed_special={\"<|endoftext|>\"})\r\nembed_model = OpenAIEmbedding()\r\nembed_model._tokenizer = tokenizer\r\nnode_parser = SimpleNodeParser(text_splitter=TokenTextSplitter(tokenizer=tokenizer))\r\nservice_context = ServiceContext.from_defaults(\r\n    embed_model=embed_model, node_parser=node_parser\r\n)\r\n\r\ndocs = [Document(\"Hello world!<|endoftext|>\")]\r\n\r\nindex = GPTSimpleVectorIndex.from_documents(docs, service_context=service_context)\r\n```\r\n\r\n## Suggested improvements\r\n\r\nIt might be slightly more readable if the `BaseEmbedding` class can accept a tokenizer as an argument, similar to `TokenTextSplitter`. There might be a more fundamental improvement, but I can't think of any ideas at the moment.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1206/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1206/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1205",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1205/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1205/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1205/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1205",
        "id": 1669516296,
        "node_id": "I_kwDOIWuq585jgswI",
        "number": 1205,
        "title": "Use correct tiktoken encoding based on LLM model",
        "user": {
            "login": "ZhaoTzuHsien",
            "id": 37932792,
            "node_id": "MDQ6VXNlcjM3OTMyNzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/37932792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZhaoTzuHsien",
            "html_url": "https://github.com/ZhaoTzuHsien",
            "followers_url": "https://api.github.com/users/ZhaoTzuHsien/followers",
            "following_url": "https://api.github.com/users/ZhaoTzuHsien/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZhaoTzuHsien/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZhaoTzuHsien/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZhaoTzuHsien/subscriptions",
            "organizations_url": "https://api.github.com/users/ZhaoTzuHsien/orgs",
            "repos_url": "https://api.github.com/users/ZhaoTzuHsien/repos",
            "events_url": "https://api.github.com/users/ZhaoTzuHsien/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZhaoTzuHsien/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-15T18:02:20Z",
        "updated_at": "2023-09-12T20:48:09Z",
        "closed_at": "2023-09-06T23:58:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I find that both embedding and LLM predictor using the global tiktoken as their tokenizer and use \"gpt-2\" for encoding.\r\n\r\nhttps://github.com/jerryjliu/llama_index/blob/468e8443a9c0ba4f36dcf043b169ca9e3a3125bb/gpt_index/utils.py#L50\r\n\r\nHowever, the default model for embbeding is `text-embedding-ada-002` and the LLM predictor is `text-davinci-003`, which uses `cl100k_base` and `p50k_base` encoding respectively. Furthermore, the user may choose their custom LLM model like `gpt-3.5-turbo` or `gpt-4`, and the encoding should also be `cl100k_base`.\r\n\r\n\r\n\r\nEncoding name | OpenAI models\r\n-- | --\r\n`cl100k_base` | `gpt-4`,\u00a0`gpt-3.5-turbo`,\u00a0`text-embedding-ada-002`\r\n`p50k_base` | `Codex models`,\u00a0`text-davinci-002`,\u00a0`text-davinci-003`\r\n`r50k_base\u00a0(or\u00a0gpt2)` | `GPT-3 models like\u00a0davinci`\r\n\r\n\r\n\r\nFor these reasons, I suggest `BaseEmbedding` and `LLMPredictor` should choose correct encoding based on the model used, not using the global immutable one.\r\n\r\nIf you need some help, I can work on it and make a pull request against it.\r\n\r\nReference\r\n- [Tiktoken cookbook](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_count_tokens_with_tiktoken.ipynb)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1205/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1205/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1204",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1204/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1204/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1204/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1204",
        "id": 1669495212,
        "node_id": "I_kwDOIWuq585jgnms",
        "number": 1204,
        "title": "Possible to add `memory` to index.query?",
        "user": {
            "login": "iners-max",
            "id": 50537194,
            "node_id": "MDQ6VXNlcjUwNTM3MTk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/50537194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iners-max",
            "html_url": "https://github.com/iners-max",
            "followers_url": "https://api.github.com/users/iners-max/followers",
            "following_url": "https://api.github.com/users/iners-max/following{/other_user}",
            "gists_url": "https://api.github.com/users/iners-max/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iners-max/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iners-max/subscriptions",
            "organizations_url": "https://api.github.com/users/iners-max/orgs",
            "repos_url": "https://api.github.com/users/iners-max/repos",
            "events_url": "https://api.github.com/users/iners-max/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iners-max/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-15T17:24:38Z",
        "updated_at": "2023-07-23T03:22:20Z",
        "closed_at": "2023-07-23T03:22:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Per title, I have successfully implement memory in the level of langchain. However, it involves a lot of lines and config. I would like to see if there is any shorthand in the llama_index level to use memory?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1204/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1204/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1203",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1203/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1203/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1203/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1203",
        "id": 1669482738,
        "node_id": "I_kwDOIWuq585jgkjy",
        "number": 1203,
        "title": "GPTQdrantIndex query always returns None when upgrading to 0.5.15",
        "user": {
            "login": "ZhaoTzuHsien",
            "id": 37932792,
            "node_id": "MDQ6VXNlcjM3OTMyNzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/37932792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZhaoTzuHsien",
            "html_url": "https://github.com/ZhaoTzuHsien",
            "followers_url": "https://api.github.com/users/ZhaoTzuHsien/followers",
            "following_url": "https://api.github.com/users/ZhaoTzuHsien/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZhaoTzuHsien/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZhaoTzuHsien/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZhaoTzuHsien/subscriptions",
            "organizations_url": "https://api.github.com/users/ZhaoTzuHsien/orgs",
            "repos_url": "https://api.github.com/users/ZhaoTzuHsien/repos",
            "events_url": "https://api.github.com/users/ZhaoTzuHsien/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZhaoTzuHsien/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-15T16:55:29Z",
        "updated_at": "2023-06-05T23:53:34Z",
        "closed_at": "2023-06-05T23:53:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "As the title, the GPTQdrantIndex has a weird behavior when querying result. The issue wasn't present in version 0.5.13. I think that is because the qdrant vector integration codes are upgraded in 0.5.15, but causes some bugs.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1203/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1203/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1202",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1202/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1202/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1202/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1202",
        "id": 1669475211,
        "node_id": "I_kwDOIWuq585jgiuL",
        "number": 1202,
        "title": "System content message",
        "user": {
            "login": "luc-kalaora",
            "id": 1401927,
            "node_id": "MDQ6VXNlcjE0MDE5Mjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1401927?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luc-kalaora",
            "html_url": "https://github.com/luc-kalaora",
            "followers_url": "https://api.github.com/users/luc-kalaora/followers",
            "following_url": "https://api.github.com/users/luc-kalaora/following{/other_user}",
            "gists_url": "https://api.github.com/users/luc-kalaora/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luc-kalaora/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luc-kalaora/subscriptions",
            "organizations_url": "https://api.github.com/users/luc-kalaora/orgs",
            "repos_url": "https://api.github.com/users/luc-kalaora/repos",
            "events_url": "https://api.github.com/users/luc-kalaora/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luc-kalaora/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-15T16:29:14Z",
        "updated_at": "2023-04-17T14:16:22Z",
        "closed_at": "2023-04-17T14:16:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi\r\nfirst thanks for your work. \r\nI'm using the OpenAi Api today and I'm facing problems with prompt size limitation.\r\nSo I test llama_index. During testing, I did not find how to add in the api  a\"system content\" message like\r\n{\"role\": \"system\", \"content\":\"You are a blog post summarization bot\"\r\nOpenAI wrote that the \u201csystem\u201d content enhancing the response especially with gpt4\r\nIs it possible to do this with the prompt customization?\r\nThanks for your help",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1202/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1202/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1201",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1201/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1201/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1201/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1201",
        "id": 1669335478,
        "node_id": "PR_kwDOIWuq585OYieH",
        "number": 1201,
        "title": "Fixed a grammatical mistake in the docs",
        "user": {
            "login": "arijit-chowdhury-genea",
            "id": 104769013,
            "node_id": "U_kgDOBj6l9Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/104769013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arijit-chowdhury-genea",
            "html_url": "https://github.com/arijit-chowdhury-genea",
            "followers_url": "https://api.github.com/users/arijit-chowdhury-genea/followers",
            "following_url": "https://api.github.com/users/arijit-chowdhury-genea/following{/other_user}",
            "gists_url": "https://api.github.com/users/arijit-chowdhury-genea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arijit-chowdhury-genea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arijit-chowdhury-genea/subscriptions",
            "organizations_url": "https://api.github.com/users/arijit-chowdhury-genea/orgs",
            "repos_url": "https://api.github.com/users/arijit-chowdhury-genea/repos",
            "events_url": "https://api.github.com/users/arijit-chowdhury-genea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arijit-chowdhury-genea/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T12:13:30Z",
        "updated_at": "2023-04-15T15:53:00Z",
        "closed_at": "2023-04-15T15:52:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1201",
            "html_url": "https://github.com/run-llama/llama_index/pull/1201",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1201.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1201.patch",
            "merged_at": "2023-04-15T15:52:59Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1201/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1201/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1200",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1200/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1200/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1200/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1200",
        "id": 1669335119,
        "node_id": "I_kwDOIWuq585jgAhP",
        "number": 1200,
        "title": "AttributeError: 'GPTSimpleVectorIndex' object has no attribute 'set_text', version '0.5.15'",
        "user": {
            "login": "hezhefly",
            "id": 35137227,
            "node_id": "MDQ6VXNlcjM1MTM3MjI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/35137227?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hezhefly",
            "html_url": "https://github.com/hezhefly",
            "followers_url": "https://api.github.com/users/hezhefly/followers",
            "following_url": "https://api.github.com/users/hezhefly/following{/other_user}",
            "gists_url": "https://api.github.com/users/hezhefly/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hezhefly/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hezhefly/subscriptions",
            "organizations_url": "https://api.github.com/users/hezhefly/orgs",
            "repos_url": "https://api.github.com/users/hezhefly/repos",
            "events_url": "https://api.github.com/users/hezhefly/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hezhefly/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-15T12:12:11Z",
        "updated_at": "2023-04-17T16:10:11Z",
        "closed_at": "2023-04-17T16:10:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "<img width=\"703\" alt=\"image\" src=\"https://user-images.githubusercontent.com/35137227/232222222-4d8a363f-d229-484f-aa75-1672486c44a0.png\">\r\nAs title, Why?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1200/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1200/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1199",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1199/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1199/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1199/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1199",
        "id": 1669322340,
        "node_id": "I_kwDOIWuq585jf9Zk",
        "number": 1199,
        "title": "Best index to create a good response taking \"accurate\" prompt",
        "user": {
            "login": "davidcerezal",
            "id": 6617709,
            "node_id": "MDQ6VXNlcjY2MTc3MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6617709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidcerezal",
            "html_url": "https://github.com/davidcerezal",
            "followers_url": "https://api.github.com/users/davidcerezal/followers",
            "following_url": "https://api.github.com/users/davidcerezal/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidcerezal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidcerezal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidcerezal/subscriptions",
            "organizations_url": "https://api.github.com/users/davidcerezal/orgs",
            "repos_url": "https://api.github.com/users/davidcerezal/repos",
            "events_url": "https://api.github.com/users/davidcerezal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidcerezal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-15T11:40:53Z",
        "updated_at": "2023-09-10T17:04:12Z",
        "closed_at": "2023-09-10T17:04:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Having a basic index.json that consists mainly of:\r\n\r\n```\r\n{\r\n'Article 55: The basics of legal issues consist of....\",\r\n'Article 56: Text B with other numbers...',\r\n'Article 57: Text C with other numbers...'\r\n....\r\n}\r\n\r\n```\r\nIf I prompt something like 'Article 57':\r\n```\r\nindex = GPTSimpleVectorIndex.load_from_disk('testIndex.json')\r\nprint(index.query(prompt))\r\n```\r\nUsually, the query mixes the parameters and responds with article 55, since it's more relevant. I have been playing with the 'similarity_top_k' parameter, but the results don't improve too much.\r\n\r\nWhich index and query method do you recommend for these cases?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1199/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1199/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1198",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1198/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1198/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1198/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1198",
        "id": 1669303677,
        "node_id": "PR_kwDOIWuq585OYcG2",
        "number": 1198,
        "title": "Add evaluatesourcenodes to evaluation ",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-15T10:39:42Z",
        "updated_at": "2023-04-16T06:31:00Z",
        "closed_at": "2023-04-16T06:30:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1198",
            "html_url": "https://github.com/run-llama/llama_index/pull/1198",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1198.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1198.patch",
            "merged_at": "2023-04-16T06:30:59Z"
        },
        "body": "Hi,\r\n\r\nQueryResponseEvaluator now includes the feature 'evaluatesourcenodes' which enables identification of the source nodes containing the answer.\r\n\r\nThank you.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1198/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1198/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1197",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1197/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1197/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1197/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1197",
        "id": 1669303156,
        "node_id": "I_kwDOIWuq585jf4t0",
        "number": 1197,
        "title": "About Embedding support",
        "user": {
            "login": "Haibarayu",
            "id": 50996772,
            "node_id": "MDQ6VXNlcjUwOTk2Nzcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/50996772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Haibarayu",
            "html_url": "https://github.com/Haibarayu",
            "followers_url": "https://api.github.com/users/Haibarayu/followers",
            "following_url": "https://api.github.com/users/Haibarayu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Haibarayu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Haibarayu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Haibarayu/subscriptions",
            "organizations_url": "https://api.github.com/users/Haibarayu/orgs",
            "repos_url": "https://api.github.com/users/Haibarayu/repos",
            "events_url": "https://api.github.com/users/Haibarayu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Haibarayu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-15T10:37:52Z",
        "updated_at": "2023-04-17T08:04:40Z",
        "closed_at": "2023-04-17T08:04:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have read [this document](https://gpt-index.readthedocs.io/en/latest/how_to/customization/embeddings.html#how-are-embeddings-generated) and have some puzzles.\r\n\r\n1. If embeddings is not generated for all text chunks during index construction, how to do max-similarity retrieval of nodes during query-time?\r\n\r\n2. I want to use a custom embedding model and generate embeddings during index construction, is this the right way?\r\n\r\nIndex construction:\r\n```python\r\n# define LLM\r\nllm_predictor = LLMPredictor(llm=CustomLLM())\r\n# define embedding model\r\nembed_model = LangchainEmbedding(HuggingFaceEmbeddings(model_name=embedding_model))\r\n# define prompt helper\r\nprompt_helper = PromptHelper(max_input_size, num_output, max_chunk_overlap)\r\n\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, embed_model=embed_model, prompt_helper=prompt_helper)\r\n\r\n# load data\r\n...\r\n\r\n# build index\r\nindex = GPTSimpleVectorIndex.from_documents(documents, service_context=service_context)\r\nindex.save_to_disk('index_simple_vector.json')\r\n```\r\n\r\nQuery:\r\n```python\r\nembed_model = LangchainEmbedding(HuggingFaceEmbeddings(model_name=embedding_model))\r\nservice_context = ServiceContext.from_defaults(embed_model=embed_model)\r\n\r\n# load index\r\nnew_index = GPTSimpleVectorIndex.load_from_disk('index_simple_vector.json')\r\n\r\n# query with the same embed_model\r\nresponse = new_index.query(\r\n    \"<query_text>\", \r\n    mode=\"default\", \r\n    verbose=True, \r\n    service_context=service_context\r\n)\r\nprint(response)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1197/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1197/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1196",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1196/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1196/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1196/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1196",
        "id": 1669231053,
        "node_id": "I_kwDOIWuq585jfnHN",
        "number": 1196,
        "title": "ValueError: A single term is larger than the allowed chunk size.",
        "user": {
            "login": "cxgreat2014",
            "id": 15062548,
            "node_id": "MDQ6VXNlcjE1MDYyNTQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/15062548?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cxgreat2014",
            "html_url": "https://github.com/cxgreat2014",
            "followers_url": "https://api.github.com/users/cxgreat2014/followers",
            "following_url": "https://api.github.com/users/cxgreat2014/following{/other_user}",
            "gists_url": "https://api.github.com/users/cxgreat2014/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cxgreat2014/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cxgreat2014/subscriptions",
            "organizations_url": "https://api.github.com/users/cxgreat2014/orgs",
            "repos_url": "https://api.github.com/users/cxgreat2014/repos",
            "events_url": "https://api.github.com/users/cxgreat2014/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cxgreat2014/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-15T08:13:35Z",
        "updated_at": "2023-09-10T17:04:19Z",
        "closed_at": "2023-09-10T17:04:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "```log\r\nError: \r\n---------------------------------------------------------------------------\r\nTraceback (most recent call last):\r\n  File \"/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/multiprocessing/managers.py\", line 211, in handle_request\r\n    result = func(c, *args, **kwds)\r\n  File \"/Applications/Xcode.app/Contents/Developer/Library/Frameworks/Python3.framework/Versions/3.9/lib/python3.9/multiprocessing/managers.py\", line 378, in create\r\n    obj = callable(*args, **kwds)\r\n  File \"/Users/macuser/PycharmProjects/GPTKB/llama_index_starter_pack/flask_react/./index_server.py\", line 54, in insert_into_index\r\n    index.insert(document)\r\n  File \"/Users/macuser/PycharmProjects/GPTKB/venv/lib/python3.9/site-packages/llama_index/indices/base.py\", line 143, in insert\r\n    nodes = self.service_context.node_parser.get_nodes_from_documents([document])\r\n  File \"/Users/macuser/PycharmProjects/GPTKB/venv/lib/python3.9/site-packages/llama_index/node_parser/simple.py\", line 30, in get_nodes_from_documents\r\n    nodes = get_nodes_from_document(\r\n  File \"/Users/macuser/PycharmProjects/GPTKB/venv/lib/python3.9/site-packages/llama_index/node_parser/node_utils.py\", line 49, in get_nodes_from_document\r\n    text_splits = get_text_splits_from_document(\r\n  File \"/Users/macuser/PycharmProjects/GPTKB/venv/lib/python3.9/site-packages/llama_index/node_parser/node_utils.py\", line 30, in get_text_splits_from_document\r\n    text_splits = text_splitter.split_text_with_overlaps(\r\n  File \"/Users/macuser/PycharmProjects/GPTKB/venv/lib/python3.9/site-packages/llama_index/langchain_helpers/text_splitter.py\", line 157, in split_text_with_overlaps\r\n    raise ValueError(\r\nValueError: A single term is larger than the allowed chunk size.\r\nTerm size: 1042\r\nChunk size: 512Effective chunk size: 512\r\n---------------------------------------------------------------------------\r\n```\r\n\r\ntest_document.md :\r\n\r\n[test_document.md](https://github.com/jerryjliu/llama_index/files/11238817/test_document.md)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1196/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1196/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1195",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1195/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1195/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1195/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1195",
        "id": 1669075761,
        "node_id": "PR_kwDOIWuq585OXtz2",
        "number": 1195,
        "title": "fix delete document bug for json indexes",
        "user": {
            "login": "achempak-polymer",
            "id": 111532624,
            "node_id": "U_kgDOBqXaUA",
            "avatar_url": "https://avatars.githubusercontent.com/u/111532624?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achempak-polymer",
            "html_url": "https://github.com/achempak-polymer",
            "followers_url": "https://api.github.com/users/achempak-polymer/followers",
            "following_url": "https://api.github.com/users/achempak-polymer/following{/other_user}",
            "gists_url": "https://api.github.com/users/achempak-polymer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/achempak-polymer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/achempak-polymer/subscriptions",
            "organizations_url": "https://api.github.com/users/achempak-polymer/orgs",
            "repos_url": "https://api.github.com/users/achempak-polymer/repos",
            "events_url": "https://api.github.com/users/achempak-polymer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/achempak-polymer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-15T00:29:12Z",
        "updated_at": "2023-05-01T18:07:59Z",
        "closed_at": "2023-05-01T18:07:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1195",
            "html_url": "https://github.com/run-llama/llama_index/pull/1195",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1195.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1195.patch",
            "merged_at": null
        },
        "body": "When documents are deleted from an index, they're removed from `index_struct` but not `docstore`. This PR addresses that.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1195/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1195/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1194",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1194/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1194/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1194/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1194",
        "id": 1669059029,
        "node_id": "I_kwDOIWuq585je9HV",
        "number": 1194,
        "title": "KeyError: 'commit' when loading data from GitHub repository using branch name",
        "user": {
            "login": "xhiroga",
            "id": 13391129,
            "node_id": "MDQ6VXNlcjEzMzkxMTI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13391129?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xhiroga",
            "html_url": "https://github.com/xhiroga",
            "followers_url": "https://api.github.com/users/xhiroga/followers",
            "following_url": "https://api.github.com/users/xhiroga/following{/other_user}",
            "gists_url": "https://api.github.com/users/xhiroga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xhiroga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xhiroga/subscriptions",
            "organizations_url": "https://api.github.com/users/xhiroga/orgs",
            "repos_url": "https://api.github.com/users/xhiroga/repos",
            "events_url": "https://api.github.com/users/xhiroga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xhiroga/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-14T23:54:40Z",
        "updated_at": "2023-04-23T00:29:18Z",
        "closed_at": "2023-04-23T00:29:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "## Minimum reproduction code\r\n\r\n```python\r\nimport os\r\n\r\nfrom llama_index import GPTSimpleVectorIndex, GithubRepositoryReader\r\n\r\nloader = GithubRepositoryReader(\r\n    github_token=os.environ[\"GITHUB_TOKEN\"],\r\n    owner=\"jerryjliu\",\r\n    repo=\"llama_index\",\r\n    use_parser=False,\r\n    verbose=True,\r\n    ignore_directories=[\"examples\"],\r\n)\r\n\r\ndocs = loader.load_data(branch='main')\r\n\r\nfor doc in docs:\r\n    print(doc.extra_info)\r\n\r\nindex = GPTSimpleVectorIndex.from_documents(docs)\r\nindex.save_to_disk('data/llama_index.index.json')\r\n\r\n```\r\n\r\n## Error\r\n\r\n```error\r\n% make data/llamaindex_index.json\r\n.venv/bin/dotenv run -- .venv/bin/python scripts/create_index_llamaindex.py\r\nTraceback (most recent call last):\r\n  File \"/Users/hiroga/.ghq/github.com/xhiroga/agent/scripts/create_index_llamaindex.py\", line 13, in <module>\r\n    docs = loader.load_data(branch=\"main\")\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/hiroga/.ghq/github.com/xhiroga/agent/.venv/lib/python3.11/site-packages/llama_index/readers/github_readers/github_repository_reader.py\", line 185, in load_data\r\n    return self._load_data_from_branch(branch)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/hiroga/.ghq/github.com/xhiroga/agent/.venv/lib/python3.11/site-packages/llama_index/readers/github_readers/github_repository_reader.py\", line 147, in _load_data_from_branch\r\n    branch_data: GitBranchResponseModel = self._loop.run_until_complete(\r\n                                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/opt/homebrew/Cellar/python@3.11/3.11.2_1/Frameworks/Python.framework/Versions/3.11/lib/python3.11/asyncio/base_events.py\", line 653, in run_until_complete\r\n    return future.result()\r\n           ^^^^^^^^^^^^^^^\r\n  File \"/Users/hiroga/.ghq/github.com/xhiroga/agent/.venv/lib/python3.11/site-packages/llama_index/readers/github_readers/github_api_client.py\", line 283, in get_branch\r\n    return GitBranchResponseModel.from_json(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/hiroga/.ghq/github.com/xhiroga/agent/.venv/lib/python3.11/site-packages/dataclasses_json/api.py\", line 65, in from_json\r\n    return cls.from_dict(kvs, infer_missing=infer_missing)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/hiroga/.ghq/github.com/xhiroga/agent/.venv/lib/python3.11/site-packages/dataclasses_json/api.py\", line 72, in from_dict\r\n    return _decode_dataclass(cls, kvs, infer_missing)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/hiroga/.ghq/github.com/xhiroga/agent/.venv/lib/python3.11/site-packages/dataclasses_json/core.py\", line 159, in _decode_dataclass\r\n    field_value = kvs[field.name]\r\n                  ~~~^^^^^^^^^^^^\r\nKeyError: 'commit'\r\nmake: *** [data/llamaindex_index.json] Error 1\r\n```\r\n\r\n## Note\r\n\r\nIf use `docs = loader.load_data('703073ef41f0dd035cdf5c720d9e8b53eaf18bbd')`, the same error does not happen.\r\n\r\n## Environment\r\n```toml\r\n[tool.poetry.dependencies]\r\npython = \"^3.11.2\"\r\nslack-bolt = \">=1.17.0,<2\"\r\nopenai = \">=0.27,<0.28\"\r\ntiktoken = \">=0.3.0,<0.4\"\r\nlangchain = \"^0.0.138\"\r\nllama-index = \"^0.5.13.post1\"\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1194/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1194/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1193",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1193/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1193/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1193/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1193",
        "id": 1668991776,
        "node_id": "I_kwDOIWuq585jessg",
        "number": 1193,
        "title": "T\u00fck\u00e7e",
        "user": {
            "login": "ethdig",
            "id": 43565129,
            "node_id": "MDQ6VXNlcjQzNTY1MTI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/43565129?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethdig",
            "html_url": "https://github.com/ethdig",
            "followers_url": "https://api.github.com/users/ethdig/followers",
            "following_url": "https://api.github.com/users/ethdig/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethdig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethdig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethdig/subscriptions",
            "organizations_url": "https://api.github.com/users/ethdig/orgs",
            "repos_url": "https://api.github.com/users/ethdig/repos",
            "events_url": "https://api.github.com/users/ethdig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethdig/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-14T21:54:15Z",
        "updated_at": "2023-04-17T16:14:01Z",
        "closed_at": "2023-04-17T16:14:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Bu link, Jerry Liu taraf\u0131ndan olu\u015fturulan \"llama_index\" adl\u0131 bir GitHub deposuna y\u00f6nlendiriyor. Bu depo, \"Llama\" adl\u0131 bir arama motoru i\u00e7in bir dizinleme (indexing) sistemini i\u00e7eriyor. Bu dizinleme sistemi, belirli bir URL listesi \u00fczerinde gezinerek web sayfalar\u0131n\u0131 indiriyor ve bu sayfalar\u0131n i\u00e7eri\u011fini bir indeks dosyas\u0131na kaydediyor.\r\n\r\nDepoda birka\u00e7 farkl\u0131 dosya bulunmaktad\u0131r. \"llama.py\" dosyas\u0131, ana arama motoru uygulamas\u0131n\u0131 i\u00e7erir ve belirli bir anahtar kelime veya kelime \u00f6be\u011fi i\u00e7in indeks dosyas\u0131nda arama yapar. \"crawler.py\" dosyas\u0131, web sayfalar\u0131n\u0131 indirmek ve indeks dosyas\u0131n\u0131 g\u00fcncellemek i\u00e7in kullan\u0131lan web \u00f6r\u00fcmce\u011fi (crawler) kodunu i\u00e7erir. \"pageRank.py\" dosyas\u0131, sayfa s\u0131ralamas\u0131n\u0131 hesaplamak i\u00e7in kullan\u0131lan PageRank algoritmas\u0131n\u0131 uygular. \"server.py\" dosyas\u0131, arama motorunun bir web sunucusu \u00fczerinde \u00e7al\u0131\u015fmas\u0131n\u0131 sa\u011flar.\r\n\r\nKodlar, Python programlama dilinde yaz\u0131lm\u0131\u015ft\u0131r ve kodun yorum sat\u0131rlar\u0131, kodun ne yapt\u0131\u011f\u0131n\u0131 ve nas\u0131l \u00e7al\u0131\u015ft\u0131\u011f\u0131n\u0131 a\u00e7\u0131klamaktad\u0131r. Kodlarda, veri yap\u0131lar\u0131, sorgular ve algoritmalar gibi konular ele al\u0131nmaktad\u0131r. Kodlar\u0131n analizi, arama motoru geli\u015ftirme, web \u00f6r\u00fcmce\u011fi yazma ve sayfa s\u0131ralama algoritmalar\u0131 hakk\u0131nda bir\u00e7ok bilgi sa\u011flayabilir.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1193/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1193/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1192",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1192/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1192/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1192/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1192",
        "id": 1668915152,
        "node_id": "I_kwDOIWuq585jeZ_Q",
        "number": 1192,
        "title": "Case Sensitive File Extensions",
        "user": {
            "login": "DrShrinker",
            "id": 130606836,
            "node_id": "U_kgDOB8jm9A",
            "avatar_url": "https://avatars.githubusercontent.com/u/130606836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DrShrinker",
            "html_url": "https://github.com/DrShrinker",
            "followers_url": "https://api.github.com/users/DrShrinker/followers",
            "following_url": "https://api.github.com/users/DrShrinker/following{/other_user}",
            "gists_url": "https://api.github.com/users/DrShrinker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DrShrinker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DrShrinker/subscriptions",
            "organizations_url": "https://api.github.com/users/DrShrinker/orgs",
            "repos_url": "https://api.github.com/users/DrShrinker/repos",
            "events_url": "https://api.github.com/users/DrShrinker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DrShrinker/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4751318873,
                "node_id": "LA_kwDOIWuq588AAAABGzNfWQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "7057ff",
                "default": true,
                "description": "Good for newcomers"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-14T20:30:28Z",
        "updated_at": "2023-04-29T23:41:59Z",
        "closed_at": "2023-04-29T23:41:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I was playing around with SimpleDirectoryReader and noticed that a Word document with a .DOCX  extension wasn't getting loaded but files with .docx extensions were loading file.  After changing the extension to lowercase, it seemed to work OK. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1192/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1192/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1191",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1191/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1191/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1191/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1191",
        "id": 1668779194,
        "node_id": "PR_kwDOIWuq585OWuAt",
        "number": 1191,
        "title": "done",
        "user": {
            "login": "lukeb1986",
            "id": 85369088,
            "node_id": "MDQ6VXNlcjg1MzY5MDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/85369088?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lukeb1986",
            "html_url": "https://github.com/lukeb1986",
            "followers_url": "https://api.github.com/users/lukeb1986/followers",
            "following_url": "https://api.github.com/users/lukeb1986/following{/other_user}",
            "gists_url": "https://api.github.com/users/lukeb1986/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lukeb1986/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lukeb1986/subscriptions",
            "organizations_url": "https://api.github.com/users/lukeb1986/orgs",
            "repos_url": "https://api.github.com/users/lukeb1986/repos",
            "events_url": "https://api.github.com/users/lukeb1986/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lukeb1986/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-14T18:35:04Z",
        "updated_at": "2023-04-17T06:55:59Z",
        "closed_at": "2023-04-17T06:55:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1191",
            "html_url": "https://github.com/run-llama/llama_index/pull/1191",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1191.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1191.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1191/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1191/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1190",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1190/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1190/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1190/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1190",
        "id": 1667984438,
        "node_id": "I_kwDOIWuq585ja2w2",
        "number": 1190,
        "title": "SimpleDirectoryReader not found",
        "user": {
            "login": "gezgblack",
            "id": 7914065,
            "node_id": "MDQ6VXNlcjc5MTQwNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7914065?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gezgblack",
            "html_url": "https://github.com/gezgblack",
            "followers_url": "https://api.github.com/users/gezgblack/followers",
            "following_url": "https://api.github.com/users/gezgblack/following{/other_user}",
            "gists_url": "https://api.github.com/users/gezgblack/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gezgblack/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gezgblack/subscriptions",
            "organizations_url": "https://api.github.com/users/gezgblack/orgs",
            "repos_url": "https://api.github.com/users/gezgblack/repos",
            "events_url": "https://api.github.com/users/gezgblack/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gezgblack/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-14T10:25:31Z",
        "updated_at": "2023-06-07T16:35:26Z",
        "closed_at": "2023-06-07T16:35:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi folks,\r\n\r\nI'm trying to setup a SimpleDirectoryReader but getting an error about it not existing\r\n\r\n```\r\nfrom llama_index import download_loader\r\n\r\nSimpleDirectoryReader = download_loader(\"SimpleDirectoryReader\")\r\n\r\nloader = SimpleDirectoryReader('./data', recursive=True, exclude_hidden=True)\r\ndocuments = loader.load_data()\r\n```\r\n\r\n```\r\n[Errno 2] No such file or directory: '/Users/ghost/Desktop/projects/Bot/.venv/lib/python3.10/site-packages/llama_index/readers/llamahub_modules/file/base.py'\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1190/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1190/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1189",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1189/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1189/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1189/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1189",
        "id": 1667723147,
        "node_id": "I_kwDOIWuq585jZ2-L",
        "number": 1189,
        "title": "Querying index outputs lots of unnecessary info ",
        "user": {
            "login": "BayramAnnakov",
            "id": 774131,
            "node_id": "MDQ6VXNlcjc3NDEzMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/774131?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BayramAnnakov",
            "html_url": "https://github.com/BayramAnnakov",
            "followers_url": "https://api.github.com/users/BayramAnnakov/followers",
            "following_url": "https://api.github.com/users/BayramAnnakov/following{/other_user}",
            "gists_url": "https://api.github.com/users/BayramAnnakov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BayramAnnakov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BayramAnnakov/subscriptions",
            "organizations_url": "https://api.github.com/users/BayramAnnakov/orgs",
            "repos_url": "https://api.github.com/users/BayramAnnakov/repos",
            "events_url": "https://api.github.com/users/BayramAnnakov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BayramAnnakov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-14T07:54:14Z",
        "updated_at": "2023-04-14T08:56:14Z",
        "closed_at": "2023-04-14T08:56:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When I query the index with CustomLLM and embeddings, I am getting a lot of unnecessary output, such as:\r\n\r\n\"\"\"\r\nContext information is below. \r\n---------------------\r\n<chunks of data from the input documents>\r\n....\r\n\r\n------------\r\nGiven the new context, refine the original answer to better answer the question. If the context isn't useful, return the original answer.\r\n\r\n.....\r\n<chunks of data from the input documents>\r\n---------------------\r\nGiven the context information and not prior knowledge, answer the question: <question>\r\n....\r\n\"\"\"\r\n\r\nAny help to turn this off would be much appreciated - thank you! I've tried setting logger to CRITICAL level",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1189/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1189/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1188",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1188/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1188/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1188/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1188",
        "id": 1667698750,
        "node_id": "PR_kwDOIWuq585OTGRS",
        "number": 1188,
        "title": "add unified query interface guide",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-14T07:38:09Z",
        "updated_at": "2023-04-14T22:36:12Z",
        "closed_at": "2023-04-14T22:36:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1188",
            "html_url": "https://github.com/run-llama/llama_index/pull/1188",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1188.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1188.patch",
            "merged_at": "2023-04-14T22:36:11Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1188/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1188/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1187",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1187/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1187/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1187/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1187",
        "id": 1667587695,
        "node_id": "PR_kwDOIWuq585OSvSQ",
        "number": 1187,
        "title": "Enable configurable download path for `download_loader`",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-14T06:23:52Z",
        "updated_at": "2023-04-14T07:47:26Z",
        "closed_at": "2023-04-14T07:47:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1187",
            "html_url": "https://github.com/run-llama/llama_index/pull/1187",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1187.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1187.patch",
            "merged_at": "2023-04-14T07:47:25Z"
        },
        "body": "Resolves: https://github.com/jerryjliu/llama_index/issues/1185",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1187/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1187/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1186",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1186/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1186/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1186/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1186",
        "id": 1667469062,
        "node_id": "I_kwDOIWuq585jY48G",
        "number": 1186,
        "title": "Have you considered writing a code loader?",
        "user": {
            "login": "Minweiwangaaaa",
            "id": 115546916,
            "node_id": "U_kgDOBuMbJA",
            "avatar_url": "https://avatars.githubusercontent.com/u/115546916?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Minweiwangaaaa",
            "html_url": "https://github.com/Minweiwangaaaa",
            "followers_url": "https://api.github.com/users/Minweiwangaaaa/followers",
            "following_url": "https://api.github.com/users/Minweiwangaaaa/following{/other_user}",
            "gists_url": "https://api.github.com/users/Minweiwangaaaa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Minweiwangaaaa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Minweiwangaaaa/subscriptions",
            "organizations_url": "https://api.github.com/users/Minweiwangaaaa/orgs",
            "repos_url": "https://api.github.com/users/Minweiwangaaaa/repos",
            "events_url": "https://api.github.com/users/Minweiwangaaaa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Minweiwangaaaa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-14T03:57:01Z",
        "updated_at": "2023-09-10T17:04:28Z",
        "closed_at": "2023-09-10T17:04:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I want to import code, but I don't seem to see any code loaders for languages like Python, Java, C++, etc. There is only a general one, but it is not very user-friendly. The results of the vector search are not as expected.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1186/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1186/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1185",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1185/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1185/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1185/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1185",
        "id": 1667434576,
        "node_id": "I_kwDOIWuq585jYwhQ",
        "number": 1185,
        "title": "[AWS Lambda] Allow arbitrary directory for downloads with download_loader",
        "user": {
            "login": "bkamapantula",
            "id": 1143687,
            "node_id": "MDQ6VXNlcjExNDM2ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1143687?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bkamapantula",
            "html_url": "https://github.com/bkamapantula",
            "followers_url": "https://api.github.com/users/bkamapantula/followers",
            "following_url": "https://api.github.com/users/bkamapantula/following{/other_user}",
            "gists_url": "https://api.github.com/users/bkamapantula/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bkamapantula/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bkamapantula/subscriptions",
            "organizations_url": "https://api.github.com/users/bkamapantula/orgs",
            "repos_url": "https://api.github.com/users/bkamapantula/repos",
            "events_url": "https://api.github.com/users/bkamapantula/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bkamapantula/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-14T03:02:06Z",
        "updated_at": "2023-04-14T07:47:26Z",
        "closed_at": "2023-04-14T07:47:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm using llama-index as one of the dependencies in AWS Lambda but receive an error: `OSError: [Errno 30] Read-only file system`\r\n\r\nI tried setting the path to `/tmp` in the file where the logic is invoked but that\u2019s not doing anything. Wikipedia reader code:\r\n\r\n```py\r\nWikipediaReader = download_loader(\"WikipediaReader\")\r\n```\r\n\r\n```bash\r\nOSError: [Errno 30] Read-only file system: '/var/task/llama_index/readers/llamahub_modules/library.json'\r\n```\r\n\r\nIt'll be good to have an argument to pass an arbitrary download directory. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1185/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1185/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1184",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1184/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1184/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1184/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1184",
        "id": 1667432689,
        "node_id": "PR_kwDOIWuq585OSOq6",
        "number": 1184,
        "title": "update docs template only",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-14T03:00:01Z",
        "updated_at": "2023-04-14T05:03:19Z",
        "closed_at": "2023-04-14T05:03:19Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1184",
            "html_url": "https://github.com/run-llama/llama_index/pull/1184",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1184.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1184.patch",
            "merged_at": "2023-04-14T05:03:19Z"
        },
        "body": "Separete PR to update the docs template only\r\n\r\nThese changes are the same as https://github.com/jerryjliu/llama_index/pull/1164 minus the changes that added notebooks",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1184/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1184/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1183",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1183/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1183/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1183/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1183",
        "id": 1667287347,
        "node_id": "PR_kwDOIWuq585ORwXq",
        "number": 1183,
        "title": "Add `MongoDocumentStore` ",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-13T23:47:44Z",
        "updated_at": "2023-04-17T06:54:39Z",
        "closed_at": "2023-04-17T06:54:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1183",
            "html_url": "https://github.com/run-llama/llama_index/pull/1183",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1183.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1183.patch",
            "merged_at": "2023-04-17T06:54:38Z"
        },
        "body": "### Summary\r\n* Add MongoDB as `DocumentStore` backend\r\n\r\n### Notes\r\n* Right now, we still store additional metadata (e.g. index struct) as json blobs on disk. Future PR to unify storage layer across nodes, index structs, and other configuration related metadata\r\n\r\n### Todos\r\n- [x] Fix support for graph\r\n- [x] Fix support for document hash\r\n- [x] Unit testing\r\n- [x] Notebooks\r\n- [x] Lint  ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1183/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1183/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1182",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1182/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1182/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1182/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1182",
        "id": 1667060109,
        "node_id": "PR_kwDOIWuq585OQ_Px",
        "number": 1182,
        "title": "Update PineconeDemo-CityAnalysis.ipynb",
        "user": {
            "login": "kalufinnle",
            "id": 23731053,
            "node_id": "MDQ6VXNlcjIzNzMxMDUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/23731053?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kalufinnle",
            "html_url": "https://github.com/kalufinnle",
            "followers_url": "https://api.github.com/users/kalufinnle/followers",
            "following_url": "https://api.github.com/users/kalufinnle/following{/other_user}",
            "gists_url": "https://api.github.com/users/kalufinnle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kalufinnle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kalufinnle/subscriptions",
            "organizations_url": "https://api.github.com/users/kalufinnle/orgs",
            "repos_url": "https://api.github.com/users/kalufinnle/repos",
            "events_url": "https://api.github.com/users/kalufinnle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kalufinnle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-13T20:07:01Z",
        "updated_at": "2023-04-14T02:38:17Z",
        "closed_at": "2023-04-14T02:38:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1182",
            "html_url": "https://github.com/run-llama/llama_index/pull/1182",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1182.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1182.patch",
            "merged_at": "2023-04-14T02:38:17Z"
        },
        "body": " Paul Graham's \\\"What I Worked On\\\" essay is not included or not relevant",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1182/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1182/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1181",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1181/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1181/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1181/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1181",
        "id": 1666969967,
        "node_id": "PR_kwDOIWuq585OQsSO",
        "number": 1181,
        "title": "Qdrant index filters results by MUST match on query",
        "user": {
            "login": "Mikkolehtimaki",
            "id": 13274545,
            "node_id": "MDQ6VXNlcjEzMjc0NTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13274545?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mikkolehtimaki",
            "html_url": "https://github.com/Mikkolehtimaki",
            "followers_url": "https://api.github.com/users/Mikkolehtimaki/followers",
            "following_url": "https://api.github.com/users/Mikkolehtimaki/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mikkolehtimaki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mikkolehtimaki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mikkolehtimaki/subscriptions",
            "organizations_url": "https://api.github.com/users/Mikkolehtimaki/orgs",
            "repos_url": "https://api.github.com/users/Mikkolehtimaki/repos",
            "events_url": "https://api.github.com/users/Mikkolehtimaki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mikkolehtimaki/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-13T18:53:44Z",
        "updated_at": "2023-04-15T01:26:50Z",
        "closed_at": "2023-04-15T01:26:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1181",
            "html_url": "https://github.com/run-llama/llama_index/pull/1181",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1181.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1181.patch",
            "merged_at": "2023-04-15T01:26:50Z"
        },
        "body": "Qdrant client was adding the query string as MUST match filter, which effectively filtered all nodes out from query results, if using queries longer than a few words.\r\n\r\nThis should only be added when the user defines must match keywords, not by default, imo. So I deleted it :shrug:\r\n\r\nThere's a chance I'm misreading this, but what do you think?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1181/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1181/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1180",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1180/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1180/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1180/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1180",
        "id": 1666948114,
        "node_id": "I_kwDOIWuq585jW5wS",
        "number": 1180,
        "title": "Error with index.query(\"Question\", chroma_collection=chroma_collection)",
        "user": {
            "login": "vrolok",
            "id": 4700912,
            "node_id": "MDQ6VXNlcjQ3MDA5MTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4700912?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vrolok",
            "html_url": "https://github.com/vrolok",
            "followers_url": "https://api.github.com/users/vrolok/followers",
            "following_url": "https://api.github.com/users/vrolok/following{/other_user}",
            "gists_url": "https://api.github.com/users/vrolok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vrolok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vrolok/subscriptions",
            "organizations_url": "https://api.github.com/users/vrolok/orgs",
            "repos_url": "https://api.github.com/users/vrolok/repos",
            "events_url": "https://api.github.com/users/vrolok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vrolok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-13T18:41:25Z",
        "updated_at": "2023-04-14T06:25:51Z",
        "closed_at": "2023-04-14T06:25:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Init Code:\r\n```python\r\n...\r\ndocuments = TrafilaturaWebReader().load_data([\"http://example.com\"])\r\nindex = GPTChromaIndex.from_documents(documents, chroma_collection=chroma_collection)\r\n...\r\n```\r\n\r\nOutput:\r\n```\r\nDEBUG:chromadb.db.index.hnswlib:Index saved to .chroma/index/index.bin\r\nIndex saved to .chroma/index/index.bin\r\nDEBUG:chromadb.db.index.hnswlib:Index saved to .chroma/index/index.bin\r\nIndex saved to .chroma/index/index.bin\r\nINFO:llama_index.token_counter.token_counter:> [build_index_from_nodes] Total LLM token usage: 0 tokens\r\n> [build_index_from_nodes] Total LLM token usage: 0 tokens\r\nINFO:llama_index.token_counter.token_counter:> [build_index_from_nodes] Total embedding token usage: 55721 tokens\r\n> [build_index_from_nodes] Total embedding token usage: 55721 tokens\r\n```\r\n\r\nWhen I try ```response = index.query(\"Question\", chroma_collection=chroma_collection)```, it produces this error:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nCell In[11], line 2\r\n      1 # set Logging to DEBUG for more detailed outputs\r\n----> 2 response = index.query(\"What is tacit knowledge?\", chroma_collection=chroma_collection)\r\n\r\nFile ~/.pyenv/versions/3.9.13/lib/python3.9/site-packages/llama_index/indices/base.py:255, in BaseGPTIndex.query(self, query_str, mode, query_transform, use_async, **query_kwargs)\r\n    240 query_config = QueryConfig(\r\n    241     index_struct_type=self._index_struct.get_type(),\r\n    242     query_mode=mode_enum,\r\n    243     query_kwargs=query_kwargs,\r\n    244 )\r\n    245 query_runner = QueryRunner(\r\n    246     index_struct=self._index_struct,\r\n    247     service_context=self._service_context,\r\n   (...)\r\n    253     use_async=use_async,\r\n    254 )\r\n--> 255 return query_runner.query(query_str)\r\n\r\nFile ~/.pyenv/versions/3.9.13/lib/python3.9/site-packages/llama_index/indices/query/query_runner.py:349, in QueryRunner.query(self, query_str_or_bundle, index_id, level)\r\n    331 \"\"\"Run query.\r\n    332 \r\n    333 NOTE: Relies on mutual recursion between\r\n   (...)\r\n    344     composable graph.\r\n    345 \"\"\"\r\n    346 query_combiner, query_bundle = self._prepare_query_objects(\r\n    347     query_str_or_bundle, index_id=index_id\r\n    348 )\r\n--> 349 return query_combiner.run(query_bundle, level)\r\n\r\nFile ~/.pyenv/versions/3.9.13/lib/python3.9/site-packages/llama_index/indices/query/query_combiner/base.py:66, in SingleQueryCombiner.run(self, query_bundle, level)\r\n     64 \"\"\"Run query combiner.\"\"\"\r\n     65 updated_query_bundle = self._prepare_update(query_bundle)\r\n---> 66 return self._query_runner.query_transformed(\r\n     67     updated_query_bundle, self._index_struct, level=level\r\n     68 )\r\n\r\nFile ~/.pyenv/versions/3.9.13/lib/python3.9/site-packages/llama_index/indices/query/query_runner.py:189, in QueryRunner.query_transformed(self, query_bundle, index_struct, level)\r\n    182 def query_transformed(\r\n    183     self,\r\n    184     query_bundle: QueryBundle,\r\n    185     index_struct: V2IndexStruct,\r\n    186     level: int = 0,\r\n    187 ) -> RESPONSE_TYPE:\r\n    188     \"\"\"This is called via BaseQueryCombiner.run.\"\"\"\r\n--> 189     query_obj = self._get_query_obj(index_struct)\r\n    190     if self._recursive:\r\n    191         logger.debug(f\"> Query level : {level} on {index_struct.get_type()}\")\r\n\r\nFile ~/.pyenv/versions/3.9.13/lib/python3.9/site-packages/llama_index/indices/query/query_runner.py:174, in QueryRunner._get_query_obj(self, index_struct)\r\n    171 query_context = self._query_context.get(index_struct.index_id, {})\r\n    172 query_kwargs.update(query_context)\r\n--> 174 query_obj = query_cls(\r\n    175     index_struct=index_struct,\r\n    176     docstore=self._docstore,\r\n    177     **query_kwargs,\r\n    178 )\r\n    180 return query_obj\r\n\r\nFile ~/.pyenv/versions/3.9.13/lib/python3.9/site-packages/llama_index/indices/vector_store/base_query.py:42, in GPTVectorStoreIndexQuery.__init__(self, index_struct, service_context, vector_store, similarity_top_k, vector_store_query_mode, alpha, **kwargs)\r\n     31 def __init__(\r\n     32     self,\r\n     33     index_struct: IndexDict,\r\n   (...)\r\n     39     **kwargs: Any,\r\n     40 ) -> None:\r\n     41     \"\"\"Initialize params.\"\"\"\r\n---> 42     super().__init__(\r\n     43         index_struct=index_struct, service_context=service_context, **kwargs\r\n     44     )\r\n     45     self._similarity_top_k = similarity_top_k\r\n     46     if vector_store is None:\r\n\r\nTypeError: __init__() got an unexpected keyword argument 'chroma_collection'\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1180/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1180/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1179",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1179/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1179/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1179/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1179",
        "id": 1666914197,
        "node_id": "PR_kwDOIWuq585OQgrM",
        "number": 1179,
        "title": "docs: Mendable Search Integration",
        "user": {
            "login": "nickscamara",
            "id": 20311743,
            "node_id": "MDQ6VXNlcjIwMzExNzQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20311743?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickscamara",
            "html_url": "https://github.com/nickscamara",
            "followers_url": "https://api.github.com/users/nickscamara/followers",
            "following_url": "https://api.github.com/users/nickscamara/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickscamara/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickscamara/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickscamara/subscriptions",
            "organizations_url": "https://api.github.com/users/nickscamara/orgs",
            "repos_url": "https://api.github.com/users/nickscamara/repos",
            "events_url": "https://api.github.com/users/nickscamara/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickscamara/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-13T18:16:14Z",
        "updated_at": "2023-04-14T06:58:25Z",
        "closed_at": "2023-04-14T06:58:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1179",
            "html_url": "https://github.com/run-llama/llama_index/pull/1179",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1179.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1179.patch",
            "merged_at": "2023-04-14T06:58:25Z"
        },
        "body": "Hi @jerryjliu,\r\n\r\nSuper excited to get Mendable search on Llama index docs. Here is an implementation of our floating button that stays in the bottom right, which doesn't interfere with the normal readthedocs search. Eric will message you the admin dashboard details so you can see all the insights! \r\n\r\nLet me know if you have any feedback or customization requests.\r\n\r\nI believe this should also work fine with the new theme on #1164 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1179/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1179/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1178",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1178/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1178/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1178/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1178",
        "id": 1666655899,
        "node_id": "PR_kwDOIWuq585OPotC",
        "number": 1178,
        "title": "[version] bump version to 0.5.15",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-13T15:31:05Z",
        "updated_at": "2023-04-13T15:33:38Z",
        "closed_at": "2023-04-13T15:33:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1178",
            "html_url": "https://github.com/run-llama/llama_index/pull/1178",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1178.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1178.patch",
            "merged_at": "2023-04-13T15:33:37Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1178/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1178/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1177",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1177/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1177/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1177/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1177",
        "id": 1666655136,
        "node_id": "I_kwDOIWuq585jVyOg",
        "number": 1177,
        "title": "Defining Summary Text documentation appears to indicate an invalid option",
        "user": {
            "login": "danielaixer",
            "id": 5376720,
            "node_id": "MDQ6VXNlcjUzNzY3MjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5376720?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danielaixer",
            "html_url": "https://github.com/danielaixer",
            "followers_url": "https://api.github.com/users/danielaixer/followers",
            "following_url": "https://api.github.com/users/danielaixer/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielaixer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danielaixer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielaixer/subscriptions",
            "organizations_url": "https://api.github.com/users/danielaixer/orgs",
            "repos_url": "https://api.github.com/users/danielaixer/repos",
            "events_url": "https://api.github.com/users/danielaixer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danielaixer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-13T15:30:36Z",
        "updated_at": "2023-04-25T09:44:24Z",
        "closed_at": "2023-04-25T09:44:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://gpt-index.readthedocs.io/en/latest/how_to/index_structs/composability.html#defining-summary-text\r\n\r\nWhere it says\r\n`summary = index1.query(\r\n    \"What is a summary of this document?\", mode=\"summarize\"\r\n)`\r\n\r\nIt think it should be:\r\n`summary = index1.query(\r\n    \"What is a summary of this document?\", response_mode=\"tree_summarize\"\r\n)`\r\n\r\nCorrect me if I'm wrong, but AFAIK, the \"mode\" option is invalid for an index query, and \"summarize\" is not even a valid response mode. I get this error with mode=\"summarize\":\r\n`query_cls = INDEX_STRUT_TYPE_TO_QUERY_MAP[index_struct_type][mode]`\r\n`KeyError: <QueryMode.SUMMARIZE: 'summarize'>`\r\n\r\nHowever, response_mode=\"tree_summarize\" works just fine.\r\n\r\nI'm new to Python, gpt and indexing and I didn't want to edit the github file myself in case of messing up something.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1177/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1177/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1176",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1176/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1176/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1176/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1176",
        "id": 1666602273,
        "node_id": "PR_kwDOIWuq585OPdFH",
        "number": 1176,
        "title": "Add a batched query method in LangchainEmbedding for the LangChain embeddings interface",
        "user": {
            "login": "habaneraa",
            "id": 95517280,
            "node_id": "U_kgDOBbF6YA",
            "avatar_url": "https://avatars.githubusercontent.com/u/95517280?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/habaneraa",
            "html_url": "https://github.com/habaneraa",
            "followers_url": "https://api.github.com/users/habaneraa/followers",
            "following_url": "https://api.github.com/users/habaneraa/following{/other_user}",
            "gists_url": "https://api.github.com/users/habaneraa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/habaneraa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/habaneraa/subscriptions",
            "organizations_url": "https://api.github.com/users/habaneraa/orgs",
            "repos_url": "https://api.github.com/users/habaneraa/repos",
            "events_url": "https://api.github.com/users/habaneraa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/habaneraa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-13T14:59:51Z",
        "updated_at": "2023-04-14T06:55:38Z",
        "closed_at": "2023-04-14T06:55:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1176",
            "html_url": "https://github.com/run-llama/llama_index/pull/1176",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1176.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1176.patch",
            "merged_at": "2023-04-14T06:55:38Z"
        },
        "body": "Currently the class LangchainEmbedding that wrappers a LangChain Embeddings class does not have a batched query method. If someone uses LangchainEmbedding to get embeddings of a bunch of documents, it will always call the method `langchain.embeddings.base.Embeddings.embed_documents` one by one like this: \r\n\r\n1. `BaseEmbedding.get_queued_text_embeddings` convert texts in queue into batches\r\n2. `_get_text_embeddings` is called but there is no such method in LangchainEmbedding\r\n3. `BaseEmbedding._get_text_embeddings` is called and the `LangchainEmbedding._get_text_embedding` for every single text.\r\n\r\nSimply adding a `_get_text_embeddings` overriding it can fix is issue :)\r\n\r\nI think #843 is propably related to this. He set the `chunk_size` of LangChain's embedding class but that class is wrappered by LangchainEmbedding in llama_index so the `chunk_size` just doesn't work.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1176/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1176/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1175",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1175/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1175/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1175/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1175",
        "id": 1666519433,
        "node_id": "PR_kwDOIWuq585OPK8X",
        "number": 1175,
        "title": "Fix:  #1042 add insert for empty GPTTreeIndex",
        "user": {
            "login": "hxbs-zyy",
            "id": 54540775,
            "node_id": "MDQ6VXNlcjU0NTQwNzc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/54540775?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hxbs-zyy",
            "html_url": "https://github.com/hxbs-zyy",
            "followers_url": "https://api.github.com/users/hxbs-zyy/followers",
            "following_url": "https://api.github.com/users/hxbs-zyy/following{/other_user}",
            "gists_url": "https://api.github.com/users/hxbs-zyy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hxbs-zyy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hxbs-zyy/subscriptions",
            "organizations_url": "https://api.github.com/users/hxbs-zyy/orgs",
            "repos_url": "https://api.github.com/users/hxbs-zyy/repos",
            "events_url": "https://api.github.com/users/hxbs-zyy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hxbs-zyy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-13T14:17:51Z",
        "updated_at": "2023-04-14T07:02:07Z",
        "closed_at": "2023-04-14T07:02:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1175",
            "html_url": "https://github.com/run-llama/llama_index/pull/1175",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1175.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1175.patch",
            "merged_at": "2023-04-14T07:02:06Z"
        },
        "body": "Fix GPTTreeIndex insertion issues.\r\nFor the #1042 ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1175/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1175/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1174",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1174/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1174/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1174/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1174",
        "id": 1666440078,
        "node_id": "I_kwDOIWuq585jU9uO",
        "number": 1174,
        "title": "How to use Free-dolly with llama_index?",
        "user": {
            "login": "nazkhan-8451",
            "id": 108809950,
            "node_id": "U_kgDOBnxO3g",
            "avatar_url": "https://avatars.githubusercontent.com/u/108809950?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nazkhan-8451",
            "html_url": "https://github.com/nazkhan-8451",
            "followers_url": "https://api.github.com/users/nazkhan-8451/followers",
            "following_url": "https://api.github.com/users/nazkhan-8451/following{/other_user}",
            "gists_url": "https://api.github.com/users/nazkhan-8451/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nazkhan-8451/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nazkhan-8451/subscriptions",
            "organizations_url": "https://api.github.com/users/nazkhan-8451/orgs",
            "repos_url": "https://api.github.com/users/nazkhan-8451/repos",
            "events_url": "https://api.github.com/users/nazkhan-8451/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nazkhan-8451/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2023-04-13T13:37:58Z",
        "updated_at": "2023-07-04T09:55:47Z",
        "closed_at": "2023-04-18T14:51:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The free-dolly (dolly-v2) from databricks https://huggingface.co/databricks/dolly-v2-12b, how do I use it for query and embedding? Will it be possible to create a notebook to show it?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1174/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1174/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1173",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1173/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1173/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1173/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1173",
        "id": 1666437056,
        "node_id": "I_kwDOIWuq585jU8_A",
        "number": 1173,
        "title": "Azure - ValueError: nodes must be a list of Node objects. ",
        "user": {
            "login": "geg00",
            "id": 10646838,
            "node_id": "MDQ6VXNlcjEwNjQ2ODM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/10646838?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/geg00",
            "html_url": "https://github.com/geg00",
            "followers_url": "https://api.github.com/users/geg00/followers",
            "following_url": "https://api.github.com/users/geg00/following{/other_user}",
            "gists_url": "https://api.github.com/users/geg00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/geg00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/geg00/subscriptions",
            "organizations_url": "https://api.github.com/users/geg00/orgs",
            "repos_url": "https://api.github.com/users/geg00/repos",
            "events_url": "https://api.github.com/users/geg00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/geg00/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-13T13:36:05Z",
        "updated_at": "2023-07-22T19:10:04Z",
        "closed_at": "2023-07-22T19:10:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have few files to load\r\nI'm using Azure \r\n\r\n` \r\nWindows version\r\nPython 3.11.2 | packaged by conda-forge | (main, Mar 31 2023, 17:45:57) [MSC v.1934 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>>\r\n`\r\n\r\n`\r\ntext_files = ['../Files/F0.txt', \r\n          '../Files/F1.txt',\r\n          '../Files/F2.txt',\r\n          '../Files/F3.txt', \r\n          '../Files/F4.txt'\r\n          ]\r\n`\r\n`\r\nimport openai\r\n\r\nfrom llama_index import GPTSimpleVectorIndex, SimpleDirectoryReader\r\n\r\nfrom gpt_index import ServiceContext\r\n\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\n\r\nsc = ServiceContext.from_defaults(embed_model=OpenAIEmbeddings(chunk_size=1))\r\n\r\ndocuments = SimpleDirectoryReader(input_files=text_files).load_data()\r\n\r\nindex = GPTSimpleVectorIndex.from_documents(documents=documents, service_context=sc)\r\n\r\n`\r\n\r\nI'm getting the following error\r\n\r\n`\r\nOutput exceeds the size limit. Open the full output data in a text editor---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nCell In[2], line 13\r\n     11 sc = ServiceContext.from_defaults(embed_model=OpenAIEmbeddings(chunk_size=1))\r\n     12 documents = SimpleDirectoryReader(input_files=text_files).load_data()\r\n---> 13 index = GPTSimpleVectorIndex.from_documents(documents=documents, service_context=sc)\r\n     14 #index = GPTSimpleVectorIndex.from_documents(documents)\r\n     15 #index  = GPTSimpleVectorIndex.from_documents(documents=documents, service_context=sc)\r\n\r\nFile c:\\Users\\AppData\\Local\\mambaforge\\envs\\kase-webapp\\Lib\\site-packages\\llama_index\\indices\\base.py:100, in BaseGPTIndex.from_documents(cls, documents, docstore, service_context, **kwargs)\r\n     96     docstore.set_document_hash(doc.get_doc_id(), doc.get_doc_hash())\r\n     98 nodes = service_context.node_parser.get_nodes_from_documents(documents)\r\n--> 100 return cls(\r\n    101     nodes=nodes,\r\n    102     docstore=docstore,\r\n    103     service_context=service_context,\r\n    104     **kwargs,\r\n    105 )\r\n\r\nFile c:\\Users\\AppData\\Local\\mambaforge\\envs\\kase-webapp\\Lib\\site-packages\\llama_index\\indices\\vector_store\\vector_indices.py:69, in GPTSimpleVectorIndex.__init__(self, nodes, index_struct, service_context, vector_store, **kwargs)\r\n     60 def __init__(\r\n     61     self,\r\n     62     nodes: Optional[Sequence[Node]] = None,\r\n   (...)\r\n     66     **kwargs: Any,\r\n...\r\n---> 62         raise ValueError(\"nodes must be a list of Node objects.\")\r\n     64 self._service_context = service_context or ServiceContext.from_defaults()\r\n     65 self._docstore = docstore or DocumentStore()\r\n\r\nValueError: nodes must be a list of Node objects.\r\n`\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1173/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1173/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1172",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1172/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1172/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1172/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1172",
        "id": 1666031786,
        "node_id": "I_kwDOIWuq585jTaCq",
        "number": 1172,
        "title": "\u4e3a\u4ec0\u4e48\u6784\u5efa\u7d22\u5f15\u7684\u65f6\u5019\u4f1a\u4f7f\u7528openai\u7684\u63a5\u53e3",
        "user": {
            "login": "xinyue0318343",
            "id": 125643602,
            "node_id": "U_kgDOB30rUg",
            "avatar_url": "https://avatars.githubusercontent.com/u/125643602?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xinyue0318343",
            "html_url": "https://github.com/xinyue0318343",
            "followers_url": "https://api.github.com/users/xinyue0318343/followers",
            "following_url": "https://api.github.com/users/xinyue0318343/following{/other_user}",
            "gists_url": "https://api.github.com/users/xinyue0318343/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xinyue0318343/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xinyue0318343/subscriptions",
            "organizations_url": "https://api.github.com/users/xinyue0318343/orgs",
            "repos_url": "https://api.github.com/users/xinyue0318343/repos",
            "events_url": "https://api.github.com/users/xinyue0318343/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xinyue0318343/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-13T09:11:06Z",
        "updated_at": "2023-04-14T06:37:40Z",
        "closed_at": "2023-04-14T06:37:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "![4a4d8c74582251976990affc6d6bfe3](https://user-images.githubusercontent.com/125643602/231712189-dfa29b29-1269-4c7c-9195-1cc2271a1e37.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1172/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1172/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1171",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1171/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1171/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1171/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1171",
        "id": 1665912099,
        "node_id": "I_kwDOIWuq585jS80j",
        "number": 1171,
        "title": "How can I get the full prompt and not query OPENAI?",
        "user": {
            "login": "JarvisYan0802",
            "id": 130642211,
            "node_id": "U_kgDOB8lxIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/130642211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JarvisYan0802",
            "html_url": "https://github.com/JarvisYan0802",
            "followers_url": "https://api.github.com/users/JarvisYan0802/followers",
            "following_url": "https://api.github.com/users/JarvisYan0802/following{/other_user}",
            "gists_url": "https://api.github.com/users/JarvisYan0802/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JarvisYan0802/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JarvisYan0802/subscriptions",
            "organizations_url": "https://api.github.com/users/JarvisYan0802/orgs",
            "repos_url": "https://api.github.com/users/JarvisYan0802/repos",
            "events_url": "https://api.github.com/users/JarvisYan0802/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JarvisYan0802/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-13T07:55:50Z",
        "updated_at": "2023-09-10T17:04:36Z",
        "closed_at": "2023-09-10T17:04:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The \"index\" jsut can query. But I just want the full prompt. I can call the API of OPENAI by my own. Is there any way?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1171/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1171/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1170",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1170/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1170/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1170/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1170",
        "id": 1665902134,
        "node_id": "I_kwDOIWuq585jS6Y2",
        "number": 1170,
        "title": "how should I limit the embedding tokens in prompt? INFO:llama_index.token_counter.token_counter:> [query] Total LLM token usage: 3986 tokens INFO:llama_index.token_counter.token_counter:> [query] Total embedding token usage: 51 tokens",
        "user": {
            "login": "leeleersun",
            "id": 56867254,
            "node_id": "MDQ6VXNlcjU2ODY3MjU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/56867254?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leeleersun",
            "html_url": "https://github.com/leeleersun",
            "followers_url": "https://api.github.com/users/leeleersun/followers",
            "following_url": "https://api.github.com/users/leeleersun/following{/other_user}",
            "gists_url": "https://api.github.com/users/leeleersun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leeleersun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leeleersun/subscriptions",
            "organizations_url": "https://api.github.com/users/leeleersun/orgs",
            "repos_url": "https://api.github.com/users/leeleersun/repos",
            "events_url": "https://api.github.com/users/leeleersun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leeleersun/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-13T07:48:25Z",
        "updated_at": "2023-07-22T19:11:04Z",
        "closed_at": "2023-07-22T19:11:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1170/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1170/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1169",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1169/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1169/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1169/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1169",
        "id": 1665863564,
        "node_id": "PR_kwDOIWuq585OM-KB",
        "number": 1169,
        "title": "add pinecone namespace",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-13T07:19:09Z",
        "updated_at": "2023-04-13T07:23:33Z",
        "closed_at": "2023-04-13T07:23:32Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1169",
            "html_url": "https://github.com/run-llama/llama_index/pull/1169",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1169.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1169.patch",
            "merged_at": "2023-04-13T07:23:32Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1169/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1169/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1168",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1168/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1168/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1168/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1168",
        "id": 1665830251,
        "node_id": "I_kwDOIWuq585jSo1r",
        "number": 1168,
        "title": "save_to_disk and load_from_disk are not working for GTPSimpleVectorIndex in Azure",
        "user": {
            "login": "spoot82",
            "id": 130639187,
            "node_id": "U_kgDOB8llUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/130639187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/spoot82",
            "html_url": "https://github.com/spoot82",
            "followers_url": "https://api.github.com/users/spoot82/followers",
            "following_url": "https://api.github.com/users/spoot82/following{/other_user}",
            "gists_url": "https://api.github.com/users/spoot82/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/spoot82/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/spoot82/subscriptions",
            "organizations_url": "https://api.github.com/users/spoot82/orgs",
            "repos_url": "https://api.github.com/users/spoot82/repos",
            "events_url": "https://api.github.com/users/spoot82/events{/privacy}",
            "received_events_url": "https://api.github.com/users/spoot82/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-13T06:54:13Z",
        "updated_at": "2023-04-14T06:45:36Z",
        "closed_at": "2023-04-14T06:45:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am working in Azure with an Azure OpenAI subscription to create an index using the GTPSimpleVectorIndex. \r\nWhen I initially create the index, I can easily choose the model deployment (for both llm_predictor & embedding model) from my OpenAI resource, and querying on the index works fine. \r\nHowever, I want to be able to save the index such that I can test different GPT parameter settings and see which works best, without having to create a new index every time. \r\n\r\nThe method save_to_disk works kind of, since I am able to save the index into json. But when I then load this in, it gives the error \"INFO:openai:error_code=DeploymentNotFound error_message='The API deployment for this resource does not exist. If you created the deployment within the last 5 minutes, please wait a moment and try again.' error_param=None error_type=None message='OpenAI API error received' stream_error=False\"\r\nThis error does not occur when I use the original index.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1168/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1168/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1167",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1167/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1167/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1167/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1167",
        "id": 1665816002,
        "node_id": "I_kwDOIWuq585jSlXC",
        "number": 1167,
        "title": "I have converted the document type into a json vector file, if I want to query some questions in multiple json vector files, what should I do?",
        "user": {
            "login": "xiaojun2sheng",
            "id": 33241230,
            "node_id": "MDQ6VXNlcjMzMjQxMjMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/33241230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xiaojun2sheng",
            "html_url": "https://github.com/xiaojun2sheng",
            "followers_url": "https://api.github.com/users/xiaojun2sheng/followers",
            "following_url": "https://api.github.com/users/xiaojun2sheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/xiaojun2sheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xiaojun2sheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xiaojun2sheng/subscriptions",
            "organizations_url": "https://api.github.com/users/xiaojun2sheng/orgs",
            "repos_url": "https://api.github.com/users/xiaojun2sheng/repos",
            "events_url": "https://api.github.com/users/xiaojun2sheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xiaojun2sheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-13T06:42:08Z",
        "updated_at": "2023-09-10T17:04:44Z",
        "closed_at": "2023-09-10T17:04:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have converted the document type into a json vector file, if I want to query some questions in multiple json vector files, what should I do?\r\nHow to use the index collection to search, the code is as follows, I need to query the document content in the two json vectors\u3002\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1167/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1167/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1166",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1166/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1166/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1166/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1166",
        "id": 1665804443,
        "node_id": "I_kwDOIWuq585jSiib",
        "number": 1166,
        "title": "Q: How to add Logging to see what data is sent to OPENAI API",
        "user": {
            "login": "DrorSegev",
            "id": 12187079,
            "node_id": "MDQ6VXNlcjEyMTg3MDc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/12187079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DrorSegev",
            "html_url": "https://github.com/DrorSegev",
            "followers_url": "https://api.github.com/users/DrorSegev/followers",
            "following_url": "https://api.github.com/users/DrorSegev/following{/other_user}",
            "gists_url": "https://api.github.com/users/DrorSegev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DrorSegev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DrorSegev/subscriptions",
            "organizations_url": "https://api.github.com/users/DrorSegev/orgs",
            "repos_url": "https://api.github.com/users/DrorSegev/repos",
            "events_url": "https://api.github.com/users/DrorSegev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DrorSegev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-13T06:31:41Z",
        "updated_at": "2023-04-14T06:46:18Z",
        "closed_at": "2023-04-14T06:46:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\nI'm embedding some sensitive internal documents and query it using davinci 003.\r\nHow do I Log every node text sent to open AI for embedding?\r\nAlso How do I log the \"context\" of the prompt when performing query?\r\n\r\nThanks\r\nDror",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1166/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1166/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1165",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1165/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1165/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1165/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1165",
        "id": 1665688761,
        "node_id": "I_kwDOIWuq585jSGS5",
        "number": 1165,
        "title": "Choosing a model without the context",
        "user": {
            "login": "gezgblack",
            "id": 7914065,
            "node_id": "MDQ6VXNlcjc5MTQwNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7914065?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gezgblack",
            "html_url": "https://github.com/gezgblack",
            "followers_url": "https://api.github.com/users/gezgblack/followers",
            "following_url": "https://api.github.com/users/gezgblack/following{/other_user}",
            "gists_url": "https://api.github.com/users/gezgblack/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gezgblack/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gezgblack/subscriptions",
            "organizations_url": "https://api.github.com/users/gezgblack/orgs",
            "repos_url": "https://api.github.com/users/gezgblack/repos",
            "events_url": "https://api.github.com/users/gezgblack/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gezgblack/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-13T04:31:03Z",
        "updated_at": "2023-04-14T10:02:18Z",
        "closed_at": "2023-04-14T10:02:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi folks, I'm trying to choose the model(`gpt-3.5-turbo`) for completion but without persisting context. Currently this is how I am choosing the model that I want to use for my completion:\r\n\r\n```\r\n# define LLM\r\nllm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\", max_tokens=512))\r\n\r\n# define prompt helper\r\n# set maximum input size\r\nmax_input_size = 4096\r\n# set number of output tokens\r\nnum_output = 256\r\n# set maximum chunk overlap\r\nmax_chunk_overlap = 20\r\nprompt_helper = PromptHelper(max_input_size, num_output, max_chunk_overlap)\r\n\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper)\r\n\r\n# Load the GPT index from disk\r\nindex = GPTSimpleVectorIndex.load_from_disk('docs.json', service_context=service_context)\r\n\r\nwhile True:\r\n    val = input(\"Enter your value: \")\r\n    response = index.query(val)\r\n    print(response) \r\n```\r\n\r\nThis works well however my context seems to persist. So If I ask question A and then I ask question B, the answer in question B seems to be given based on context from question A as if it's a continuation from the ask that I requested at question A. How can I remove this context persistence? I want every single question that I ask to be an individual question without the context persisting.\r\n\r\nIf I just remove `service_context=service_context` that seems to remove the persisting context and each question is treated as a new question but then the problem is that I am no longer using the model that I chose myself(`gpt-3.5-turbo`), without that I am using the default `text-davinci` model.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1165/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1165/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1164",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1164/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1164/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1164/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1164",
        "id": 1665680508,
        "node_id": "PR_kwDOIWuq585OMXgY",
        "number": 1164,
        "title": "Add notebooks to docs",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-04-13T04:21:21Z",
        "updated_at": "2023-04-16T03:22:42Z",
        "closed_at": "2023-04-16T03:22:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1164",
            "html_url": "https://github.com/run-llama/llama_index/pull/1164",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1164.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1164.patch",
            "merged_at": "2023-04-16T03:22:42Z"
        },
        "body": "Ok, two main imrpvoments here:\r\n\r\n1. (EDIT, this is already merged separately) A new template that looks a little more modern, but more importantly, allows you to expand the tree in the sidebar\r\n2. Embeds notebooks. I know this broke some things last time, but I thiiiiink I added the right files this time so that readthedocs autobuild works. The one hard part is I'm not sure how to fully test it (`make html` works fine), since PRs seems to follow a different build process than mainline builds \ud83e\udd14 \r\n\r\n(Side note on the notebooks. Like last time, I had to do some ninja edits to the two notebooks that used the display_response function -- putting markdown linebreaks seems to break nbsphinx parsing)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1164/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1164/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1163",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1163/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1163/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1163/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1163",
        "id": 1665601581,
        "node_id": "PR_kwDOIWuq585OMGxR",
        "number": 1163,
        "title": "[WIP] [EXPERIMENTAL] detecting irrelevent responses",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-13T02:59:45Z",
        "updated_at": "2023-04-17T05:18:02Z",
        "closed_at": "2023-04-17T05:18:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1163",
            "html_url": "https://github.com/run-llama/llama_index/pull/1163",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1163.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1163.patch",
            "merged_at": null
        },
        "body": "Lately, a ton of comments have come up about the refine template being broken for gpt-3.5. Lots of stubborn answers along the lines of `The context provided is about ... Therefore, the original answer remains the same.`\r\n\r\nWhile the refine template might need some tweaking, it got me thinking of how to possibly make the synthesize process better. One idea is to use ROUGE to measure overlap between the response and context and compare to some threshold. This led to two main features -> stopping when the overlap over the threshold, and not using responses that go under the threshold.\r\n\r\nI added some functionality to do this. I need to test it a bit more, but wanted to get the idea out there sooner rather than later \ud83d\udc4d\ud83c\udffb\r\n\r\nI didn't add it to the requirements yet, but you'll want to install the [rouge-score package](https://pypi.org/project/rouge-score/):\r\n`pip install rouge-score` \r\n\r\nYou can use the new features like so (this uses default settings, you can turn things on as needed):\r\n`response = index.query(\"my query\", similarity_top_k=5, remove_outlier_responses=False, early_stopping=False, overlap_threshold=0.4)`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1163/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1163/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1162",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1162/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1162/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1162/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1162",
        "id": 1665465215,
        "node_id": "PR_kwDOIWuq585OLpBu",
        "number": 1162,
        "title": "Remove mutual exclusion re: persist_directory boolean in forming ChromaDB client",
        "user": {
            "login": "DylanAlloy",
            "id": 12659763,
            "node_id": "MDQ6VXNlcjEyNjU5NzYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/12659763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DylanAlloy",
            "html_url": "https://github.com/DylanAlloy",
            "followers_url": "https://api.github.com/users/DylanAlloy/followers",
            "following_url": "https://api.github.com/users/DylanAlloy/following{/other_user}",
            "gists_url": "https://api.github.com/users/DylanAlloy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DylanAlloy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DylanAlloy/subscriptions",
            "organizations_url": "https://api.github.com/users/DylanAlloy/orgs",
            "repos_url": "https://api.github.com/users/DylanAlloy/repos",
            "events_url": "https://api.github.com/users/DylanAlloy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DylanAlloy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-13T00:39:36Z",
        "updated_at": "2023-04-23T21:42:06Z",
        "closed_at": "2023-04-23T21:42:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1162",
            "html_url": "https://github.com/run-llama/llama_index/pull/1162",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1162.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1162.patch",
            "merged_at": "2023-04-23T21:42:06Z"
        },
        "body": "this fixes the broken remote host implementation (_when persistent dir is used_) in ChromaDB\r\n\r\n**before** \ud83d\udeab\r\n\r\n``` python\r\nif persist_directory:\r\n          self._client = chromadb.Client(\r\n               Settings(\r\n                    chroma_db_impl=\"duckdb+parquet\", persist_directory=persist_directory\r\n               )\r\n          )\r\nelse:\r\n          self._client = chromadb.Client(\r\n               Settings(\r\n                    chroma_api_impl=\"rest\",\r\n                    chroma_server_host=host,\r\n                    chroma_server_http_port=port,\r\n               )\r\n          )\r\n```\r\n\r\n**after** \u2705\r\n\r\n``` python\r\nself._client = chromadb.Client(\r\n     Settings(\r\n          chroma_api_impl=\"rest\",\r\n          chroma_server_host=host,\r\n          chroma_server_http_port=port,\r\n          persist_directory=persist_directory if persist_directory else './chroma'\r\n     )\r\n)\r\n```\r\n\r\nas you can imagine, the previous version creates confusing situations for people using remote host + persistent_db + just created a collection\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1162/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1162/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1161",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1161/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1161/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1161/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1161",
        "id": 1665452804,
        "node_id": "PR_kwDOIWuq585OLmYQ",
        "number": 1161,
        "title": "Updating Zilliz documentation",
        "user": {
            "login": "filip-halt",
            "id": 81822489,
            "node_id": "MDQ6VXNlcjgxODIyNDg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/81822489?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/filip-halt",
            "html_url": "https://github.com/filip-halt",
            "followers_url": "https://api.github.com/users/filip-halt/followers",
            "following_url": "https://api.github.com/users/filip-halt/following{/other_user}",
            "gists_url": "https://api.github.com/users/filip-halt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/filip-halt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/filip-halt/subscriptions",
            "organizations_url": "https://api.github.com/users/filip-halt/orgs",
            "repos_url": "https://api.github.com/users/filip-halt/repos",
            "events_url": "https://api.github.com/users/filip-halt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/filip-halt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-13T00:26:31Z",
        "updated_at": "2023-04-13T06:10:22Z",
        "closed_at": "2023-04-13T06:10:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1161",
            "html_url": "https://github.com/run-llama/llama_index/pull/1161",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1161.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1161.patch",
            "merged_at": "2023-04-13T06:10:21Z"
        },
        "body": "Updating the documentation to clean it up and create better example display",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1161/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1161/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1160",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1160/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1160/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1160/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1160",
        "id": 1665448023,
        "node_id": "PR_kwDOIWuq585OLlWH",
        "number": 1160,
        "title": "Remove mutual exclusion re: persist_directory boolean in forming ChromaDB client",
        "user": {
            "login": "DylanAlloy",
            "id": 12659763,
            "node_id": "MDQ6VXNlcjEyNjU5NzYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/12659763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DylanAlloy",
            "html_url": "https://github.com/DylanAlloy",
            "followers_url": "https://api.github.com/users/DylanAlloy/followers",
            "following_url": "https://api.github.com/users/DylanAlloy/following{/other_user}",
            "gists_url": "https://api.github.com/users/DylanAlloy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DylanAlloy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DylanAlloy/subscriptions",
            "organizations_url": "https://api.github.com/users/DylanAlloy/orgs",
            "repos_url": "https://api.github.com/users/DylanAlloy/repos",
            "events_url": "https://api.github.com/users/DylanAlloy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DylanAlloy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-13T00:20:06Z",
        "updated_at": "2023-04-13T00:37:23Z",
        "closed_at": "2023-04-13T00:37:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1160",
            "html_url": "https://github.com/run-llama/llama_index/pull/1160",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1160.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1160.patch",
            "merged_at": null
        },
        "body": "this fixes the broken remote host implementation (_when persistent dir is used_) in ChromaDB\r\n\r\n**before** \ud83d\udeab\r\n\r\n``` python\r\nif persist_directory:\r\n          self._client = chromadb.Client(\r\n               Settings(\r\n                    chroma_db_impl=\"duckdb+parquet\", persist_directory=persist_directory\r\n               )\r\n          )\r\nelse:\r\n          self._client = chromadb.Client(\r\n               Settings(\r\n                    chroma_api_impl=\"rest\",\r\n                    chroma_server_host=host,\r\n                    chroma_server_http_port=port,\r\n               )\r\n          )\r\n```\r\n\r\n**after** \u2705\r\n\r\n``` python\r\nself._client = chromadb.Client(\r\n     Settings(\r\n          chroma_api_impl=\"rest\",\r\n          chroma_server_host=host,\r\n          chroma_server_http_port=port,\r\n          persist_directory=persist_directory if persist_directory else './chroma'\r\n     )\r\n)\r\n```\r\n\r\nas you can imagine, the previous version creates confusing situations for people using remote host + persistent_db + just created a collection\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1160/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1160/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1159",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1159/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1159/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1159/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1159",
        "id": 1665039330,
        "node_id": "I_kwDOIWuq585jPnvi",
        "number": 1159,
        "title": "ImportError: cannot import name 'VectorIndexDocument' from 'llama_index'",
        "user": {
            "login": "Karthikeya2302",
            "id": 130597328,
            "node_id": "U_kgDOB8jB0A",
            "avatar_url": "https://avatars.githubusercontent.com/u/130597328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Karthikeya2302",
            "html_url": "https://github.com/Karthikeya2302",
            "followers_url": "https://api.github.com/users/Karthikeya2302/followers",
            "following_url": "https://api.github.com/users/Karthikeya2302/following{/other_user}",
            "gists_url": "https://api.github.com/users/Karthikeya2302/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Karthikeya2302/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Karthikeya2302/subscriptions",
            "organizations_url": "https://api.github.com/users/Karthikeya2302/orgs",
            "repos_url": "https://api.github.com/users/Karthikeya2302/repos",
            "events_url": "https://api.github.com/users/Karthikeya2302/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Karthikeya2302/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-04-12T18:23:58Z",
        "updated_at": "2023-04-12T20:21:02Z",
        "closed_at": "2023-04-12T20:21:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am experiencing with the llama_index package. Specifically, I am encountering an ImportError when trying to import the VectorIndexDocument module. The error message reads: \"ImportError: cannot import name 'VectorIndexDocument' from 'llama_index'\".\r\n\r\nI have tried several solutions, including checking that all required dependencies are installed, uninstalling and reinstalling the llama_index package, and verifying that the package is installed in the correct Python environment. However, none of these solutions have resolved the issue.\r\n\r\nCould you please advise on a potential solution or workaround for this problem? Alternatively, if this is a known issue with the llama_index package, could you please let me know if there is a fix planned for a future release?\r\n\r\nThank you for your time and attention to this matter.\r\n\r\n![image](https://user-images.githubusercontent.com/130597328/231550268-9660ca22-e9d5-4bc8-94b5-0af0fcc1cbbd.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1159/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1159/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1158",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1158/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1158/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1158/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1158",
        "id": 1665010140,
        "node_id": "I_kwDOIWuq585jPgnc",
        "number": 1158,
        "title": "Receiving ValueError When Trying to Build GPTChromaIndex",
        "user": {
            "login": "michelle-wheatley",
            "id": 128729315,
            "node_id": "U_kgDOB6xA4w",
            "avatar_url": "https://avatars.githubusercontent.com/u/128729315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michelle-wheatley",
            "html_url": "https://github.com/michelle-wheatley",
            "followers_url": "https://api.github.com/users/michelle-wheatley/followers",
            "following_url": "https://api.github.com/users/michelle-wheatley/following{/other_user}",
            "gists_url": "https://api.github.com/users/michelle-wheatley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michelle-wheatley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michelle-wheatley/subscriptions",
            "organizations_url": "https://api.github.com/users/michelle-wheatley/orgs",
            "repos_url": "https://api.github.com/users/michelle-wheatley/repos",
            "events_url": "https://api.github.com/users/michelle-wheatley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michelle-wheatley/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-12T18:03:38Z",
        "updated_at": "2023-07-22T19:12:34Z",
        "closed_at": "2023-07-22T19:12:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "After the 'ServiceContext' update (and subsequent removal of 'embed_model=' as an argument to GPTChromaIndex), I have been consistently getting errors when I try to use GPTChromaIndex to build an index. I am 100% sure that the issue is coming from ServiceContext since I didn't have this issue until I updated the package today. The error I am getting is as follows, and it happens when I try to run the \"except FileNotFoundError\" -> \"self.index = ...\" code:\r\n\r\nValueError: Cannot use llm_token_counter on an instance without a service context\r\n\r\nBelow is the part of the code that I am having issues with. I did a bit of copy and pasting to remove code not applicable to this issue that was in between.\r\n\r\n```python\r\ndef initialize_database(self):  # initializing chromadb database\r\n    self.collection_name = \"quickstart\"  # chroma collection\r\n    self.corpus_location = './corpus/archive/train_data_transformer_preproc.txt'\r\n\r\n    if self.embed_model_name == \"SentenceTransformer\":  # huggingface transformer (runs locally)\r\n        self.chromadb_folder = f'{self.index_dir}/huggingface/chromadb'  # creating path to chromadb files\r\n        self.model_dir = f'{self.index_dir}/huggingface'  # creating path to save index\r\n        self.index_json = f'{self.index_dir}/huggingface/index_small.json'  # file path where index is saved\r\n        self.hugface_embed_model = \"all-MiniLM-L6-v2\"  # defining embedding model to use\r\n        self.chromadb_embed_model = embedding_functions.SentenceTransformerEmbeddingFunction(\r\n            model_name=self.hugface_embed_model)\r\n        self.gptindex_embed_model = LangchainEmbedding(HuggingFaceEmbeddings(model_name=self.hugface_embed_model))\r\n        self.llm_predictor = LLMPredictor(llm=HuggingFacePipeline.from_model_id(model_id='gpt2',\r\n                                                                                task='text-generation'))\r\n        self.service_context = ServiceContext.from_defaults(embed_model=self.gptindex_embed_model,\r\n                                                            llm_predictor=self.llm_predictor)\r\n    #  .. code setting/loading chroma collection ..\r\n    # Loading index if it exists, and creating it if it doesn't\r\n    try:\r\n        self.index = GPTChromaIndex.load_from_disk(self.index_json,\r\n                                                   chroma_collection=self.collection,\r\n                                                   embed_model=self.gptindex_embed_model)\r\n    except FileNotFoundError:\r\n        print('no index.json found, building new one from scratch')\r\n\r\n        self.index = GPTChromaIndex([],  # defining empty index list\r\n                                    chroma_collection=self.collection,  # setting chroma collection to use w/ index\r\n                                    # embed_model=self.gptindex_embed_model)  # setting embedding model for index\r\n                                    service_context=self.service_context)\r\n        knowledge_management.read_data_from_directory(self.corpus_location,\r\n                                                      self.index)\r\n        self.index.save_to_disk(f'{self.model_dir}/index_small.json')  # saving index to appropriate folder\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1158/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1158/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1157",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1157/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1157/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1157/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1157",
        "id": 1665005989,
        "node_id": "PR_kwDOIWuq585OKFTi",
        "number": 1157,
        "title": "[version] bump version to 0.5.13.post1",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-12T18:00:49Z",
        "updated_at": "2023-04-12T18:03:10Z",
        "closed_at": "2023-04-12T18:03:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1157",
            "html_url": "https://github.com/run-llama/llama_index/pull/1157",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1157.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1157.patch",
            "merged_at": "2023-04-12T18:03:09Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1157/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1157/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1156",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1156/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1156/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1156/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1156",
        "id": 1664990253,
        "node_id": "PR_kwDOIWuq585OKB5t",
        "number": 1156,
        "title": "Revert \"Add namespace to pinecone index (#1146)\"",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-12T17:49:18Z",
        "updated_at": "2023-04-12T18:49:21Z",
        "closed_at": "2023-04-12T17:59:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1156",
            "html_url": "https://github.com/run-llama/llama_index/pull/1156",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1156.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1156.patch",
            "merged_at": "2023-04-12T17:59:15Z"
        },
        "body": "This reverts commit 63b5dc374fdad8bcf7b391230f2e97bfbcfbdd3d.\r\n\r\nThere was some issues caused by adding namespace to the pinecone entries.\r\n\r\nThe namespace field doesn't seem to be allowed. I confirmed by checking the latest version of the [pinecone-client repo](https://github.com/pinecone-io/pinecone-python-client/blob/main/pinecone/index.py#L176)\r\n\r\n```\r\nValueError: Found excess keys in the vector dictionary: ['namespace']. The allowed keys are: ['id', 'values', 'sparse_values', 'metadata']\r\n/usr/local/lib/python3.9/dist-packages/pinecone/index.py in _dict_to_vector(item)\r\n    176             excessive_keys = item_keys - (REQUIRED_VECTOR_FIELDS | OPTIONAL_VECTOR_FIELDS)\r\n    177             if len(excessive_keys) > 0:\r\n--> 178                 raise ValueError(f\"Found excess keys in the vector dictionary: {list(excessive_keys)}. \"\r\n    179                                  f\"The allowed keys are: {list(REQUIRED_VECTOR_FIELDS | OPTIONAL_VECTOR_FIELDS)}\")\r\n    180\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1156/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1156/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1155",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1155/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1155/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1155/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1155",
        "id": 1664839999,
        "node_id": "I_kwDOIWuq585jO3E_",
        "number": 1155,
        "title": "Documentation Example for GPTSimpleVectorIndex broken",
        "user": {
            "login": "DylanAlloy",
            "id": 12659763,
            "node_id": "MDQ6VXNlcjEyNjU5NzYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/12659763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DylanAlloy",
            "html_url": "https://github.com/DylanAlloy",
            "followers_url": "https://api.github.com/users/DylanAlloy/followers",
            "following_url": "https://api.github.com/users/DylanAlloy/following{/other_user}",
            "gists_url": "https://api.github.com/users/DylanAlloy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DylanAlloy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DylanAlloy/subscriptions",
            "organizations_url": "https://api.github.com/users/DylanAlloy/orgs",
            "repos_url": "https://api.github.com/users/DylanAlloy/repos",
            "events_url": "https://api.github.com/users/DylanAlloy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DylanAlloy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-12T16:01:19Z",
        "updated_at": "2023-04-18T20:14:24Z",
        "closed_at": "2023-04-13T09:22:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "https://github.com/jerryjliu/llama_index/blob/main/examples/langchain_demo/LangchainDemo.ipynb\r\n\r\n``` python\r\nimport os\r\nfrom llama_index import GPTSimpleVectorIndex\r\n\r\n# load index\r\n!echo $(pwd)\r\nprint(os.path.abspath('../vector_indices/index_simple.json'))\r\nindex = GPTSimpleVectorIndex.load_from_disk(os.path.abspath('../vector_indices/index_simple.json'))\r\n```\r\n\r\nmy script here is a small implementation that demonstrates the issue with sanity checks for working directory...\r\n\r\n>   File /opt/conda/lib/python3.10/site-packages/llama_index/vector_stores/registry.py:52, in load_vector_store_from_dict(vector_store_dict, type_to_cls, **kwargs)\r\n>        46 def load_vector_store_from_dict(\r\n>        47     vector_store_dict: Dict[str, Any],\r\n>        48     type_to_cls: Optional[Dict[VectorStoreType, Type[VectorStore]]] = None,\r\n>        49     **kwargs: Any,\r\n>        50 ) -> VectorStore:\r\n>        51     type_to_cls = type_to_cls or VECTOR_STORE_TYPE_TO_VECTOR_STORE_CLASS\r\n>   ---> 52     type = vector_store_dict[TYPE_KEY]\r\n>        53     config_dict: Dict[str, Any] = vector_store_dict[DATA_KEY]\r\n>        55     # Inject kwargs into data dict.\r\n>        56     # This allows us to explicitly pass in unserializable objects\r\n>        57     # like the vector store client.\r\n>   \r\n>   KeyError: '\\_\\_type\\_\\_'",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1155/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1155/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1154",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1154/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1154/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1154/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1154",
        "id": 1664757022,
        "node_id": "I_kwDOIWuq585jOi0e",
        "number": 1154,
        "title": "Ask about the time cost of corpus about 40w document.",
        "user": {
            "login": "AlanSwift",
            "id": 18572829,
            "node_id": "MDQ6VXNlcjE4NTcyODI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/18572829?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlanSwift",
            "html_url": "https://github.com/AlanSwift",
            "followers_url": "https://api.github.com/users/AlanSwift/followers",
            "following_url": "https://api.github.com/users/AlanSwift/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlanSwift/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlanSwift/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlanSwift/subscriptions",
            "organizations_url": "https://api.github.com/users/AlanSwift/orgs",
            "repos_url": "https://api.github.com/users/AlanSwift/repos",
            "events_url": "https://api.github.com/users/AlanSwift/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlanSwift/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-12T15:10:30Z",
        "updated_at": "2023-09-10T17:04:53Z",
        "closed_at": "2023-09-10T17:04:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Thanks for your excellent work!\r\nI'm using this tool for my private dataset which has about 40w documents. Each document contains about 2000 tokens.\r\nWe first cut each document into chunks with a chunk size of 512.\r\nThen we use BERT to extract document embedding and use faiss FlatIP to build the index.\r\nHowever, it has been running for about 10 days and hasn't finished yet.\r\nI wonder when I can finish the index-building process.\r\n\r\nSome information: \r\nWe have tried the subset which has about 10w and costs about 1 day.\r\nThe python process is not hung when I use \"top\":\r\n![image](https://user-images.githubusercontent.com/18572829/231500579-fde9a189-93fb-4049-97d3-399ecbbf7bcb.png)\r\nBut the GPU has no utilization.\r\n\r\nEnvironment:\r\nGPU: A100\r\nCPU is not the bottleneck.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1154/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1154/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1153",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1153/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1153/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1153/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1153",
        "id": 1664444640,
        "node_id": "PR_kwDOIWuq585OIMMu",
        "number": 1153,
        "title": "Qdrant local mode",
        "user": {
            "login": "kacperlukawski",
            "id": 2649301,
            "node_id": "MDQ6VXNlcjI2NDkzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2649301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kacperlukawski",
            "html_url": "https://github.com/kacperlukawski",
            "followers_url": "https://api.github.com/users/kacperlukawski/followers",
            "following_url": "https://api.github.com/users/kacperlukawski/following{/other_user}",
            "gists_url": "https://api.github.com/users/kacperlukawski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kacperlukawski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kacperlukawski/subscriptions",
            "organizations_url": "https://api.github.com/users/kacperlukawski/orgs",
            "repos_url": "https://api.github.com/users/kacperlukawski/repos",
            "events_url": "https://api.github.com/users/kacperlukawski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kacperlukawski/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-12T12:11:50Z",
        "updated_at": "2023-04-12T18:13:32Z",
        "closed_at": "2023-04-12T18:13:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1153",
            "html_url": "https://github.com/run-llama/llama_index/pull/1153",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1153.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1153.patch",
            "merged_at": "2023-04-12T18:13:32Z"
        },
        "body": "This PR makes sure Qdrant integration supports HTTP, gRPC and local modes at the same time. There were some previous issues reported in #1109 and #1072. It's all fixed now. In addition to that, text filters have been implemented in Qdrant.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1153/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1153/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1152",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1152/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1152/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1152/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1152",
        "id": 1664261298,
        "node_id": "I_kwDOIWuq585jMpyy",
        "number": 1152,
        "title": "How to access document information from AgentExecutor ChatAgent",
        "user": {
            "login": "GillesJ",
            "id": 9109832,
            "node_id": "MDQ6VXNlcjkxMDk4MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9109832?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GillesJ",
            "html_url": "https://github.com/GillesJ",
            "followers_url": "https://api.github.com/users/GillesJ/followers",
            "following_url": "https://api.github.com/users/GillesJ/following{/other_user}",
            "gists_url": "https://api.github.com/users/GillesJ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GillesJ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GillesJ/subscriptions",
            "organizations_url": "https://api.github.com/users/GillesJ/orgs",
            "repos_url": "https://api.github.com/users/GillesJ/repos",
            "events_url": "https://api.github.com/users/GillesJ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GillesJ/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-12T10:10:05Z",
        "updated_at": "2023-07-22T19:19:21Z",
        "closed_at": "2023-07-22T19:19:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I want to display the retrieved documents/nodes in a RetrievalQA Chatbot. I am using the setup described in the SEC Chatbot tutorial here: https://github.com/jerryjliu/llama_index/blob/main/examples/chatbot/Chatbot_SEC.ipynb\r\n\r\nHow do I access the Response objects that are normally returned when running the `query()` on an Index object in this set up?\r\n\r\nI looked in the Configuration object documentation of all the components that go into the AgentChain, but I couldn't find the option or callback mechanism to retrieve the actual document or index node information in either kwargs for Index, Query, IndexTool, Toolkit, or Chain config. Below is a reproduction of the configuration and run() code.\r\n\r\nWhat is the canonical Llama_index approach to displaying the retrieved document/node information in the chain output?\r\n\r\n```\r\nfrom langchain.agents import Tool\r\nfrom langchain.chains.conversation.memory import ConversationBufferMemory\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.agents import initialize_agent\r\n\r\nfrom gpt_index.langchain_helpers.agents import LlamaToolkit, create_llama_chat_agent, IndexToolConfig, GraphToolConfig\r\n# define a decompose transform\r\nfrom gpt_index.indices.query.query_transform.base import DecomposeQueryTransform\r\ndecompose_transform = DecomposeQueryTransform(\r\n    llm_predictor, verbose=True\r\n)\r\n\r\n# define query configs for graph \r\nquery_configs = [\r\n    {\r\n        \"index_struct_type\": \"simple_dict\",\r\n        \"query_mode\": \"default\",\r\n        \"query_kwargs\": {\r\n            \"similarity_top_k\": 1,\r\n            # \"include_summary\": True\r\n        },\r\n        \"query_transform\": decompose_transform\r\n    },\r\n    {\r\n        \"index_struct_type\": \"list\",\r\n        \"query_mode\": \"default\",\r\n        \"query_kwargs\": {\r\n            \"response_mode\": \"tree_summarize\",\r\n            \"verbose\": True\r\n        }\r\n    },\r\n]\r\n# define toolkit\r\nindex_configs = []\r\nfor y in range(2019, 2023):\r\n    tool_config = IndexToolConfig(\r\n        index=index_set[y], \r\n        name=f\"Vector Index {y}\",\r\n        description=f\"useful for when you want to answer queries about the {y} SEC 10-K for Uber\",\r\n        index_query_kwargs={\"similarity_top_k\": 3},\r\n        tool_kwargs={\"return_direct\": True}\r\n    )\r\n    index_configs.append(tool_config)\r\n    \r\n# graph config\r\ngraph_config = GraphToolConfig(\r\n    graph=graph,\r\n    name=f\"Graph Index\",\r\n    description=\"useful for when you want to answer queries that require analyzing multiple SEC 10-K documents for Uber.\",\r\n    query_configs=query_configs,\r\n    tool_kwargs={\"return_direct\": True}\r\n)\r\n\r\ntoolkit = LlamaToolkit(\r\n    index_configs=index_configs,\r\n    graph_configs=[graph_config]\r\n)\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\")\r\nllm=OpenAI(temperature=0)\r\nagent_chain = create_llama_chat_agent(\r\n    toolkit,\r\n    llm,\r\n    memory=memory,\r\n    verbose=True\r\n)\r\nagent_chain.run(input=\"hi, i am bob\")\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1152/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1152/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1151",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1151/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1151/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1151/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1151",
        "id": 1664059096,
        "node_id": "PR_kwDOIWuq585OG5Tb",
        "number": 1151,
        "title": "[version] bump version to 0.5.13",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-12T08:05:00Z",
        "updated_at": "2023-04-12T08:10:45Z",
        "closed_at": "2023-04-12T08:10:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1151",
            "html_url": "https://github.com/run-llama/llama_index/pull/1151",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1151.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1151.patch",
            "merged_at": "2023-04-12T08:10:44Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1151/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1151/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1150",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1150/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1150/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1150/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1150",
        "id": 1663887097,
        "node_id": "PR_kwDOIWuq585OGUPX",
        "number": 1150,
        "title": "Fix typo in document",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-12T06:08:35Z",
        "updated_at": "2023-04-12T06:08:58Z",
        "closed_at": "2023-04-12T06:08:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1150",
            "html_url": "https://github.com/run-llama/llama_index/pull/1150",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1150.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1150.patch",
            "merged_at": "2023-04-12T06:08:57Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1150/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1150/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1149",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1149/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1149/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1149/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1149",
        "id": 1663249945,
        "node_id": "I_kwDOIWuq585jIy4Z",
        "number": 1149,
        "title": "Log/view openai API Request/Response",
        "user": {
            "login": "gladiatorksk",
            "id": 130208803,
            "node_id": "U_kgDOB8LUIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/130208803?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gladiatorksk",
            "html_url": "https://github.com/gladiatorksk",
            "followers_url": "https://api.github.com/users/gladiatorksk/followers",
            "following_url": "https://api.github.com/users/gladiatorksk/following{/other_user}",
            "gists_url": "https://api.github.com/users/gladiatorksk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gladiatorksk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gladiatorksk/subscriptions",
            "organizations_url": "https://api.github.com/users/gladiatorksk/orgs",
            "repos_url": "https://api.github.com/users/gladiatorksk/repos",
            "events_url": "https://api.github.com/users/gladiatorksk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gladiatorksk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-11T21:35:33Z",
        "updated_at": "2023-05-30T09:29:26Z",
        "closed_at": "2023-04-12T06:10:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi There,\r\n\r\nIs there a way to log openai api request and response? \r\n\r\nI am using llamaindex by creating index based on pdf files. I wan to see what is being sent to openai api. \r\n\r\nThank You.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1149/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1149/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1148",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1148/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1148/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1148/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1148",
        "id": 1663103326,
        "node_id": "I_kwDOIWuq585jIPFe",
        "number": 1148,
        "title": "Merge two or more SimpleVectorIndex json files",
        "user": {
            "login": "ProgramItUp",
            "id": 12467188,
            "node_id": "MDQ6VXNlcjEyNDY3MTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12467188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ProgramItUp",
            "html_url": "https://github.com/ProgramItUp",
            "followers_url": "https://api.github.com/users/ProgramItUp/followers",
            "following_url": "https://api.github.com/users/ProgramItUp/following{/other_user}",
            "gists_url": "https://api.github.com/users/ProgramItUp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ProgramItUp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ProgramItUp/subscriptions",
            "organizations_url": "https://api.github.com/users/ProgramItUp/orgs",
            "repos_url": "https://api.github.com/users/ProgramItUp/repos",
            "events_url": "https://api.github.com/users/ProgramItUp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ProgramItUp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-04-11T19:45:36Z",
        "updated_at": "2023-09-10T17:05:04Z",
        "closed_at": "2023-09-10T17:05:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Is it possible to merge two or more saved SimpleVectorIndex json files?\r\n\r\nVery similar to this:\r\n\r\n[https://gpt-index.readthedocs.io/en/latest/guides/primer/usage_pattern.html#optional-advanced-building-indices-on-top-of-other-indices](https://gpt-index.readthedocs.io/en/latest/guides/primer/usage_pattern.html#optional-advanced-building-indices-on-top-of-other-indices\r\n)\r\n```\r\nfrom llama_index import GPTSimpleVectorIndex, GPTListIndex\r\n\r\nindex1 = GPTSimpleVectorIndex.from_documents(documents1)\r\nindex2 = GPTSimpleVectorIndex.from_documents(documents2)\r\n\r\n# Set summary text\r\n# you can set the summary manually, or you can\r\n# generate the summary itself using LlamaIndex\r\nindex1.set_text(\"summary1\")\r\nindex2.set_text(\"summary2\")\r\n\r\nindex3 = GPTListIndex([index1, index2])\r\n\r\n#Throws error : ValueError: nodes must be a list of Node objects.\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1148/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1148/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1147",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1147/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1147/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1147/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1147",
        "id": 1663014718,
        "node_id": "PR_kwDOIWuq585ODVA4",
        "number": 1147,
        "title": "Modify MilvusIndex to support Zilliz",
        "user": {
            "login": "filip-halt",
            "id": 81822489,
            "node_id": "MDQ6VXNlcjgxODIyNDg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/81822489?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/filip-halt",
            "html_url": "https://github.com/filip-halt",
            "followers_url": "https://api.github.com/users/filip-halt/followers",
            "following_url": "https://api.github.com/users/filip-halt/following{/other_user}",
            "gists_url": "https://api.github.com/users/filip-halt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/filip-halt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/filip-halt/subscriptions",
            "organizations_url": "https://api.github.com/users/filip-halt/orgs",
            "repos_url": "https://api.github.com/users/filip-halt/repos",
            "events_url": "https://api.github.com/users/filip-halt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/filip-halt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-11T18:32:46Z",
        "updated_at": "2023-04-12T18:09:32Z",
        "closed_at": "2023-04-12T18:09:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1147",
            "html_url": "https://github.com/run-llama/llama_index/pull/1147",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1147.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1147.patch",
            "merged_at": "2023-04-12T18:09:31Z"
        },
        "body": "Adding Zilliz support in milvus index and documentation on how to use.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1147/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1147/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1146",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1146/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1146/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1146/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1146",
        "id": 1662994995,
        "node_id": "PR_kwDOIWuq585ODQyc",
        "number": 1146,
        "title": "Add namespace to pinecone index",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-11T18:15:18Z",
        "updated_at": "2023-04-12T17:38:35Z",
        "closed_at": "2023-04-12T08:03:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1146",
            "html_url": "https://github.com/run-llama/llama_index/pull/1146",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1146.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1146.patch",
            "merged_at": "2023-04-12T08:03:10Z"
        },
        "body": "Hi,\r\n\r\nI have added the namespace to the pinecone index which will be useful while inserting and querying the index.\r\n\r\nThank you.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1146/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1146/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1145",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1145/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1145/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1145/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1145",
        "id": 1662856947,
        "node_id": "I_kwDOIWuq585jHS7z",
        "number": 1145,
        "title": "Not getting an answer",
        "user": {
            "login": "BoccheseGiacomo",
            "id": 104854120,
            "node_id": "U_kgDOBj_yaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/104854120?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BoccheseGiacomo",
            "html_url": "https://github.com/BoccheseGiacomo",
            "followers_url": "https://api.github.com/users/BoccheseGiacomo/followers",
            "following_url": "https://api.github.com/users/BoccheseGiacomo/following{/other_user}",
            "gists_url": "https://api.github.com/users/BoccheseGiacomo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BoccheseGiacomo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BoccheseGiacomo/subscriptions",
            "organizations_url": "https://api.github.com/users/BoccheseGiacomo/orgs",
            "repos_url": "https://api.github.com/users/BoccheseGiacomo/repos",
            "events_url": "https://api.github.com/users/BoccheseGiacomo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BoccheseGiacomo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-11T16:27:30Z",
        "updated_at": "2023-04-13T07:25:47Z",
        "closed_at": "2023-04-13T07:25:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "`\r\nfrom llama_index import GPTSimpleVectorIndex, SimpleDirectoryReader\r\nimport openai\r\nimport os\r\n\r\nos.environ['OPENAI_API_KEY'] = 'sk-xxxxx' # my api key\r\ndocuments=SimpleDirectoryReader('data').load_data()\r\nindex=GPTSimpleVectorIndex.from_documents(documents)\r\n\r\nresponse=index.query('what is a cat?')\r\nprint(response)\r\n`\r\n\r\nThis is the basic code to get an answer, and should work, but in the response i only get some runtime messages and not the answer:\r\n\r\nINFO:llama_index.token_counter.token_counter:> [query] Total LLM token usage: 0 tokens\r\nINFO:llama_index.token_counter.token_counter:> [query] Total embedding token usage: 5 tokens\r\n\r\nand the value of the variable response is None\r\n\r\nwhy? thank you",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1145/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1145/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1144",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1144/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1144/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1144/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1144",
        "id": 1662829421,
        "node_id": "I_kwDOIWuq585jHMNt",
        "number": 1144,
        "title": "build_from_indices out of date?",
        "user": {
            "login": "gezgblack",
            "id": 7914065,
            "node_id": "MDQ6VXNlcjc5MTQwNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7914065?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gezgblack",
            "html_url": "https://github.com/gezgblack",
            "followers_url": "https://api.github.com/users/gezgblack/followers",
            "following_url": "https://api.github.com/users/gezgblack/following{/other_user}",
            "gists_url": "https://api.github.com/users/gezgblack/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gezgblack/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gezgblack/subscriptions",
            "organizations_url": "https://api.github.com/users/gezgblack/orgs",
            "repos_url": "https://api.github.com/users/gezgblack/repos",
            "events_url": "https://api.github.com/users/gezgblack/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gezgblack/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-11T16:10:46Z",
        "updated_at": "2023-04-13T04:21:10Z",
        "closed_at": "2023-04-12T06:09:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Trying to use build_from_indices as outlined in the example [here](https://github.com/jerryjliu/llama_index/blob/66db86d2e875fb47384a77a0469bc6c6f45c866e/docs/how_to/index_structs/composability.md) but getting the error:\r\n`AttributeError: type object 'ComposableGraph' has no attribute 'build_from_indices'`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1144/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1144/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1143",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1143/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1143/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1143/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1143",
        "id": 1662784115,
        "node_id": "PR_kwDOIWuq585OCjfs",
        "number": 1143,
        "title": "Update building_a_chatbot.md",
        "user": {
            "login": "arpitsr",
            "id": 4772479,
            "node_id": "MDQ6VXNlcjQ3NzI0Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4772479?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arpitsr",
            "html_url": "https://github.com/arpitsr",
            "followers_url": "https://api.github.com/users/arpitsr/followers",
            "following_url": "https://api.github.com/users/arpitsr/following{/other_user}",
            "gists_url": "https://api.github.com/users/arpitsr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arpitsr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arpitsr/subscriptions",
            "organizations_url": "https://api.github.com/users/arpitsr/orgs",
            "repos_url": "https://api.github.com/users/arpitsr/repos",
            "events_url": "https://api.github.com/users/arpitsr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arpitsr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-11T15:46:01Z",
        "updated_at": "2023-04-11T20:11:48Z",
        "closed_at": "2023-04-11T20:11:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1143",
            "html_url": "https://github.com/run-llama/llama_index/pull/1143",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1143.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1143.patch",
            "merged_at": "2023-04-11T20:11:42Z"
        },
        "body": "Correction for documentation. Instead of questions it should be 4 years.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1143/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1143/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1142",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1142/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1142/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1142/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1142",
        "id": 1662474307,
        "node_id": "I_kwDOIWuq585jF1hD",
        "number": 1142,
        "title": "GPTIndex for custom tagging",
        "user": {
            "login": "Mrs-Hudson",
            "id": 7013661,
            "node_id": "MDQ6VXNlcjcwMTM2NjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7013661?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mrs-Hudson",
            "html_url": "https://github.com/Mrs-Hudson",
            "followers_url": "https://api.github.com/users/Mrs-Hudson/followers",
            "following_url": "https://api.github.com/users/Mrs-Hudson/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mrs-Hudson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mrs-Hudson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mrs-Hudson/subscriptions",
            "organizations_url": "https://api.github.com/users/Mrs-Hudson/orgs",
            "repos_url": "https://api.github.com/users/Mrs-Hudson/repos",
            "events_url": "https://api.github.com/users/Mrs-Hudson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mrs-Hudson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-11T13:21:24Z",
        "updated_at": "2023-07-22T19:20:12Z",
        "closed_at": "2023-07-22T19:20:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi\r\nI want to use GPTIndex for custom tagging using an ontology of size ~ 40K. The ontology just contains names and no metadata (very short documents)\r\n\r\n Example:\r\n\"Your job is to help clients accumulate their wealth  and assist  them with any other concerns\" and we want to tag  this sentence with nodes from the ontology as such:\r\n\"Your job is to help clients [accumulate their wealth]_wealth_creation and [assist  them]_customer_service with any other concerns\" (where Wealth Creation and Customer service are the relevant tags. \r\n\r\nI attempted this with the GPT Vector index but face the following issues:\r\n1. All tags are not from the ontology (GPT makes up it own tags)\r\n2. Even with a [STOP] token specified in the LLM instantiation, the response continues beyond the [STOP] token\r\n3. Certain phrases are not tagged at all (true negatives). \r\n\r\nAny advice on which index is best for this usecase would be super helpful!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1142/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1142/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1141",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1141/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1141/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1141/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1141",
        "id": 1662437711,
        "node_id": "I_kwDOIWuq585jFslP",
        "number": 1141,
        "title": "Indexing and query response time",
        "user": {
            "login": "rajache-affine",
            "id": 127823028,
            "node_id": "U_kgDOB55stA",
            "avatar_url": "https://avatars.githubusercontent.com/u/127823028?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rajache-affine",
            "html_url": "https://github.com/rajache-affine",
            "followers_url": "https://api.github.com/users/rajache-affine/followers",
            "following_url": "https://api.github.com/users/rajache-affine/following{/other_user}",
            "gists_url": "https://api.github.com/users/rajache-affine/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rajache-affine/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rajache-affine/subscriptions",
            "organizations_url": "https://api.github.com/users/rajache-affine/orgs",
            "repos_url": "https://api.github.com/users/rajache-affine/repos",
            "events_url": "https://api.github.com/users/rajache-affine/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rajache-affine/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-11T13:02:52Z",
        "updated_at": "2023-07-22T19:20:30Z",
        "closed_at": "2023-07-22T19:20:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "We built a QnA bot based on llama index. We tried with both Keyword Rake and Tree index. When we use Tree index, the indexing time is high if we keep on adding more documents, but we feel that the quality response is good. But if we use RAKE index, the indexing time is less but the response quality is not upto the mark. \r\n\r\nHow we can improve, the indexing and response time in Tree index? Please suggest best practices for using these indices.\r\n\r\nWhen we get delete option for tree index? if you have built any sample code build delete index functionality using tree index, please share. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1141/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1141/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1140",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1140/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1140/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1140/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1140",
        "id": 1662251035,
        "node_id": "I_kwDOIWuq585jE_Ab",
        "number": 1140,
        "title": "Not able to choose model ",
        "user": {
            "login": "gezgblack",
            "id": 7914065,
            "node_id": "MDQ6VXNlcjc5MTQwNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7914065?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gezgblack",
            "html_url": "https://github.com/gezgblack",
            "followers_url": "https://api.github.com/users/gezgblack/followers",
            "following_url": "https://api.github.com/users/gezgblack/following{/other_user}",
            "gists_url": "https://api.github.com/users/gezgblack/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gezgblack/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gezgblack/subscriptions",
            "organizations_url": "https://api.github.com/users/gezgblack/orgs",
            "repos_url": "https://api.github.com/users/gezgblack/repos",
            "events_url": "https://api.github.com/users/gezgblack/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gezgblack/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-11T11:03:42Z",
        "updated_at": "2023-04-13T04:21:52Z",
        "closed_at": "2023-04-13T04:21:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm trying to create the index using the `gpt-3.5-turbo` model but despite selecting it via LLMPredictor, my useage shows that I'm using other models. What could be the cause? Can I possibly force it to use `gpt-3.5-turbo`?\r\n\r\n`# define LLM\r\nllm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0.7, model_name=\"gpt-3.5-turbo\", max_tokens=512))\r\n\r\nprompt_helper = PromptHelper(4096, 512, 20, chunk_size_limit=600)\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n  llm_predictor=llm_predictor, prompt_helper=prompt_helper\r\n  )\r\n\r\nJSONReader = download_loader(\"JSONReader\")\r\n\r\nloader = JSONReader()\r\ndocuments = loader.load_data(Path('./data.json'))\r\nindex = GPTSimpleVectorIndex.from_documents(documents, service_context=service_context)`\r\n\r\n![image](https://user-images.githubusercontent.com/7914065/231141414-fa18f3cd-69a0-4c0b-b2cf-128487b4910b.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1140/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1140/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1139",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1139/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1139/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1139/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1139",
        "id": 1662031156,
        "node_id": "I_kwDOIWuq585jEJU0",
        "number": 1139,
        "title": "AssertionError while using GPTFaissIndex.load_from_disk()",
        "user": {
            "login": "zeonn",
            "id": 786821,
            "node_id": "MDQ6VXNlcjc4NjgyMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/786821?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zeonn",
            "html_url": "https://github.com/zeonn",
            "followers_url": "https://api.github.com/users/zeonn/followers",
            "following_url": "https://api.github.com/users/zeonn/following{/other_user}",
            "gists_url": "https://api.github.com/users/zeonn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zeonn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zeonn/subscriptions",
            "organizations_url": "https://api.github.com/users/zeonn/orgs",
            "repos_url": "https://api.github.com/users/zeonn/repos",
            "events_url": "https://api.github.com/users/zeonn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zeonn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-11T08:46:34Z",
        "updated_at": "2023-04-13T15:20:42Z",
        "closed_at": "2023-04-12T21:01:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Trying to load the Faiss index from the file throws the AssertionError.\r\n\r\n## Pseudo code to build an index\r\n```python\r\n# Create index\r\nfaiss_index = faiss.IndexFlatL2(1536)\r\nindex_struct = IndexDict()\r\nindex = GPTFaissIndex(faiss_index=faiss_index, index_struct=index_struct)\r\n\r\n# Insert documents\r\nreader: Type[BaseReader] = download_loader(\"ZendeskReader\")\r\nloader: ZendeskReader = reader(zendesk_subdomain='my-account', locale=\"en-us\")\r\ndocuments: list[Document] = loader.load_data()\r\nfor document in documents:\r\n    document.doc_id = 'zendesk'\r\n    index.insert(document=document)\r\n\r\n# Save index\r\nindex.save_to_disk(save_path='index.json', faiss_index_save_path='faiss.index', encoding='utf-8')\r\n```\r\n\r\n## Pseudo code to load the index\r\n```python\r\nindex = GPTFaissIndex.load_from_disk(save_path='index.json', faiss_index_save_path='faiss.index')\r\n```\r\n\r\n## Error that is raised\r\n```\r\n  File \".../llama_index/indices/vector_store/vector_indices.py\", line 152, in load_from_disk\r\n    return super().load_from_disk(save_path, faiss_index=faiss_index, **kwargs)\r\n  File \".../llama_index/indices/base.py\", line 365, in load_from_disk\r\n    return cls.load_from_string(file_contents, **kwargs)\r\n  File \".../llama_index/indices/base.py\", line 341, in load_from_string\r\n    return cls.load_from_dict(result_dict, **kwargs)\r\n  File \".../llama_index/indices/vector_store/base.py\", line 263, in load_from_dict\r\n    return super().load_from_dict(result_dict, vector_store=vector_store, **kwargs)\r\n  File \".../llama_index/indices/base.py\", line 316, in load_from_dict\r\n    assert isinstance(index_struct, cls.index_struct_cls)\r\nAssertionError\r\n```\r\n\r\n## Fix\r\nRemove (or comment) the line `assert isinstance(index_struct, cls.index_struct_cls)` in `indices/base.py:316`\r\n\r\n## Library version\r\nllama-index 0.5.12\r\n\r\n## Faiss version\r\nfaiss-cpu 1.7.3\r\n\r\n## Python version\r\n3.10",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1139/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1139/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1138",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1138/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1138/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1138/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1138",
        "id": 1661904536,
        "node_id": "I_kwDOIWuq585jDqaY",
        "number": 1138,
        "title": "How to use the index collection to search, the code is as follows, I need to query the document content in the two json vectors",
        "user": {
            "login": "xiaojun2sheng",
            "id": 33241230,
            "node_id": "MDQ6VXNlcjMzMjQxMjMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/33241230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xiaojun2sheng",
            "html_url": "https://github.com/xiaojun2sheng",
            "followers_url": "https://api.github.com/users/xiaojun2sheng/followers",
            "following_url": "https://api.github.com/users/xiaojun2sheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/xiaojun2sheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xiaojun2sheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xiaojun2sheng/subscriptions",
            "organizations_url": "https://api.github.com/users/xiaojun2sheng/orgs",
            "repos_url": "https://api.github.com/users/xiaojun2sheng/repos",
            "events_url": "https://api.github.com/users/xiaojun2sheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xiaojun2sheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-11T07:16:55Z",
        "updated_at": "2023-09-10T17:05:12Z",
        "closed_at": "2023-09-10T17:05:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "code show as below\r\n![image](https://user-images.githubusercontent.com/33241230/231084734-d3a64300-e80c-4c30-ad0b-79404df83227.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1138/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1138/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1137",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1137/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1137/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1137/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1137",
        "id": 1661831537,
        "node_id": "I_kwDOIWuq585jDYlx",
        "number": 1137,
        "title": "HowUsing a Custom LLM Model ",
        "user": {
            "login": "rjc7011855",
            "id": 39355300,
            "node_id": "MDQ6VXNlcjM5MzU1MzAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/39355300?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rjc7011855",
            "html_url": "https://github.com/rjc7011855",
            "followers_url": "https://api.github.com/users/rjc7011855/followers",
            "following_url": "https://api.github.com/users/rjc7011855/following{/other_user}",
            "gists_url": "https://api.github.com/users/rjc7011855/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rjc7011855/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rjc7011855/subscriptions",
            "organizations_url": "https://api.github.com/users/rjc7011855/orgs",
            "repos_url": "https://api.github.com/users/rjc7011855/repos",
            "events_url": "https://api.github.com/users/rjc7011855/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rjc7011855/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-11T06:11:20Z",
        "updated_at": "2023-07-22T19:21:40Z",
        "closed_at": "2023-07-22T19:21:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1137/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1137/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1136",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1136/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1136/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1136/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1136",
        "id": 1661724602,
        "node_id": "I_kwDOIWuq585jC-e6",
        "number": 1136,
        "title": "question about summary",
        "user": {
            "login": "TomShenTom",
            "id": 129914335,
            "node_id": "U_kgDOB75V3w",
            "avatar_url": "https://avatars.githubusercontent.com/u/129914335?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomShenTom",
            "html_url": "https://github.com/TomShenTom",
            "followers_url": "https://api.github.com/users/TomShenTom/followers",
            "following_url": "https://api.github.com/users/TomShenTom/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomShenTom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomShenTom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomShenTom/subscriptions",
            "organizations_url": "https://api.github.com/users/TomShenTom/orgs",
            "repos_url": "https://api.github.com/users/TomShenTom/repos",
            "events_url": "https://api.github.com/users/TomShenTom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomShenTom/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-11T03:50:50Z",
        "updated_at": "2023-07-22T19:22:28Z",
        "closed_at": "2023-07-22T19:22:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Why is it necessary to build a graph for multi-document question answering, and why does the graph require a summary for each document? Automatic summarization does not produce good enough results, while manual summarization is impractical for a large number of documents. Are there any other methods for multi-document question answering besides building a graph?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1136/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1136/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1135",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1135/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1135/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1135/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/1135",
        "id": 1661682749,
        "node_id": "PR_kwDOIWuq585N-2DX",
        "number": 1135,
        "title": "Fix link to Cost Analysis page",
        "user": {
            "login": "RockerFlower",
            "id": 5019152,
            "node_id": "MDQ6VXNlcjUwMTkxNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5019152?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RockerFlower",
            "html_url": "https://github.com/RockerFlower",
            "followers_url": "https://api.github.com/users/RockerFlower/followers",
            "following_url": "https://api.github.com/users/RockerFlower/following{/other_user}",
            "gists_url": "https://api.github.com/users/RockerFlower/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RockerFlower/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RockerFlower/subscriptions",
            "organizations_url": "https://api.github.com/users/RockerFlower/orgs",
            "repos_url": "https://api.github.com/users/RockerFlower/repos",
            "events_url": "https://api.github.com/users/RockerFlower/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RockerFlower/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-11T02:45:50Z",
        "updated_at": "2023-04-11T02:47:44Z",
        "closed_at": "2023-04-11T02:47:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/1135",
            "html_url": "https://github.com/run-llama/llama_index/pull/1135",
            "diff_url": "https://github.com/run-llama/llama_index/pull/1135.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/1135.patch",
            "merged_at": "2023-04-11T02:47:44Z"
        },
        "body": "Update link from\r\n`https://gpt-index.readthedocs.io/en/latest/reference/how_to/cost_analysis.html` to\r\n`https://gpt-index.readthedocs.io/en/latest/how_to/analysis/cost_analysis.html`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1135/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1135/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1134",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1134/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1134/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1134/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1134",
        "id": 1661670732,
        "node_id": "I_kwDOIWuq585jCxVM",
        "number": 1134,
        "title": "[Bug] GPTFaissIndex.load_from_disk crashes when passing faiss_index_save_path and service_context",
        "user": {
            "login": "titu1994",
            "id": 3048602,
            "node_id": "MDQ6VXNlcjMwNDg2MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3048602?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/titu1994",
            "html_url": "https://github.com/titu1994",
            "followers_url": "https://api.github.com/users/titu1994/followers",
            "following_url": "https://api.github.com/users/titu1994/following{/other_user}",
            "gists_url": "https://api.github.com/users/titu1994/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/titu1994/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/titu1994/subscriptions",
            "organizations_url": "https://api.github.com/users/titu1994/orgs",
            "repos_url": "https://api.github.com/users/titu1994/repos",
            "events_url": "https://api.github.com/users/titu1994/events{/privacy}",
            "received_events_url": "https://api.github.com/users/titu1994/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-11T02:26:49Z",
        "updated_at": "2023-07-23T03:27:15Z",
        "closed_at": "2023-07-23T03:27:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Trying to restore a GPTFaissIndex with a custom service_context in load_from_disk will throw an error (shown below) due to incorrect dict being passed into its constructor.\r\n\r\n-----\r\n\r\n# Pseudo code to build an index \r\n\r\n```python\r\nllm = CustomLLM()\r\nllm_predictor = LLMPredictor(llm=llm)\r\nprompt_helper = llm.get_prompt_helper()\r\n\r\n# Embedding model setup\r\nembedding_model, embed_dim = get_hf_embedding_model()\r\nembedding_model = LangchainEmbedding(embedding_model)\r\n\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper,\r\n                                               embed_model=embedding_model)\r\n\r\nfaiss_index = faiss.IndexFlatL2(embed_dim)\r\n\r\n# Load the your data\r\ndocuments = SimpleDirectoryReader(input_files=[data_path], recursive=True).load_data()\r\nindex = GPTFaissIndex.from_documents(documents, faiss_index=faiss_index, service_context=service_context)\r\n\r\nsave_dir, filename = os.path.split(index_save_path)\r\nfilename, filext = os.path.splitext(filename)\r\n\r\nif not os.path.exists(save_dir):\r\n    os.makedirs(save_dir, exist_ok=True)\r\n\r\nfaiss_index_save_path = os.path.join(save_dir, f'{filename}-faiss.index')\r\n\r\nindex.save_to_disk(index_save_path, faiss_index_save_path=faiss_index_save_path, encoding='utf-8')\r\n\r\n```\r\n\r\n-----\r\n\r\n# Pseudo code to load an index \r\n\r\n```python\r\n\r\n# LLM setup\r\nllm = CustomLLM()\r\nllm_predictor = LLMPredictor(llm=llm)\r\nprompt_helper = llm.get_prompt_helper()\r\n\r\n# Embedding model setup\r\nembedding_model, embed_dim = get_hf_embedding_model()\r\nembedding_model = LangchainEmbedding(embedding_model)\r\n\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper,\r\n                                               embed_model=embedding_model)\r\n\r\n# Load the index\r\nindex_dir, filename = os.path.split(cfg.index_path)\r\nfilename, filext = os.path.splitext(filename)\r\nfaiss_index_load_path = os.path.join(index_dir, f'{filename}-faiss.index')\r\n\r\nindex = GPTFaissIndex.load_from_disk(\r\n    cfg.index_path,\r\n    faiss_index_save_path=faiss_index_load_path,\r\n    service_context=service_context,\r\n)\r\n\r\n```\r\n\r\n# Error that is raised\r\n\r\n```python\r\n\r\nTraceback (most recent call last):\r\n  ...\r\n    index = GPTFaissIndex.load_from_disk(\r\n  File \".../llama_index/indices/vector_store/vector_indices.py\", line 152, in load_from_disk\r\n    return super().load_from_disk(save_path, faiss_index=faiss_index, **kwargs)\r\n  File \".../llama_index/indices/base.py\", line 364, in load_from_disk\r\n    return cls.load_from_string(file_contents, **kwargs)\r\n  File \".../llama_index/indices/base.py\", line 340, in load_from_string\r\n    return cls.load_from_dict(result_dict, **kwargs)\r\n  File \".../llama_index/indices/vector_store/base.py\", line 260, in load_from_dict\r\n    vector_store = load_vector_store_from_dict(\r\n  File \".../llama_index/vector_stores/registry.py\", line 61, in load_vector_store_from_dict\r\n    return cls.from_dict(config_dict)\r\n  File \".../llama_index/vector_stores/faiss.py\", line 52, in from_dict\r\n    return cls(**config_dict)\r\nTypeError: __init__() got an unexpected keyword argument 'service_context'\r\n\r\n```\r\n\r\nThis error shows up in `faiss.py` in the class method `from_dict()`\r\n\r\n```python\r\n @classmethod\r\n    def from_dict(cls, config_dict: Dict[str, Any]) -> \"FaissVectorStore\":\r\n        if \"faiss_index\" in config_dict:\r\n            return cls(**config_dict)\r\n        else:\r\n            ...\r\n```\r\n\r\n# Fix\r\n\r\nOne line modification of the if condition to explicitly extract arguments (or at least pop out unnecessary arguments)\r\n\r\n```python\r\n @classmethod\r\n    def from_dict(cls, config_dict: Dict[str, Any]) -> \"FaissVectorStore\":\r\n        if \"faiss_index\" in config_dict:\r\n            return cls(faiss_index=config_dict['faiss_index'], save_path=config_dict['save_path'])\r\n        else:\r\n            ...\r\n```\r\n\r\n# Minor Bug\r\n\r\nAnother thing is that the build index code above will save both json and index file to the correct location, but also save a duplicate of the index at PWD called `faiss.json`. The code also has hard coded assumptions of where this \"default\" index should be - and it will be overridden when you try to construct multiple indices.\r\n\r\n# Library version\r\n\r\nllama_index 0.5.12",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1134/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1134/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1133",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1133/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1133/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1133/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1133",
        "id": 1661575126,
        "node_id": "I_kwDOIWuq585jCZ_W",
        "number": 1133,
        "title": "ZeroDivisionError: integer division or modulo by zero",
        "user": {
            "login": "ryanshrott",
            "id": 13425718,
            "node_id": "MDQ6VXNlcjEzNDI1NzE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/13425718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryanshrott",
            "html_url": "https://github.com/ryanshrott",
            "followers_url": "https://api.github.com/users/ryanshrott/followers",
            "following_url": "https://api.github.com/users/ryanshrott/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryanshrott/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryanshrott/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryanshrott/subscriptions",
            "organizations_url": "https://api.github.com/users/ryanshrott/orgs",
            "repos_url": "https://api.github.com/users/ryanshrott/repos",
            "events_url": "https://api.github.com/users/ryanshrott/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryanshrott/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-04-11T00:09:22Z",
        "updated_at": "2023-09-10T17:05:21Z",
        "closed_at": "2023-09-10T17:05:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am directly running this example and getting this error:\r\n\r\nCode:\r\nhttps://github.com/jerryjliu/llama_index/blob/main/examples/composable_indices/city_analysis/PineconeDemo-CityAnalysis.ipynb\r\n\r\nError:\r\nquery_str = \"Tell me more about Boston\"\r\nresponse_chatgpt = graph.query(query_str, query_configs=query_configs, service_context=service_context)\r\n\r\nINFO:llama_index.indices.keyword_table.query:> Starting query: Tell me more about Boston\r\n> Starting query: Tell me more about Boston\r\nINFO:llama_index.indices.keyword_table.query:query keywords: ['boston', 'tell']\r\nquery keywords: ['boston', 'tell']\r\nINFO:llama_index.indices.keyword_table.query:> Extracted keywords: []\r\n> Extracted keywords: []\r\nOutput exceeds the [size limit](command:workbench.action.openSettings?%5B%22notebook.output.textLineLimit%22%5D). Open the full output data [in a text editor](command:workbench.action.openLargeOutput?bf57b57a-62b0-4544-9412-d7c2eb470009)---------------------------------------------------------------------------\r\nZeroDivisionError                         Traceback (most recent call last)\r\nCell In[41], line 2\r\n      1 query_str = \"Tell me more about Boston\"\r\n----> 2 response_chatgpt = graph.query(query_str, query_configs=query_configs, service_context=service_context)\r\n\r\nFile [c:\\Users\\Ryan\\anaconda3\\lib\\site-packages\\llama_index\\indices\\composability\\graph.py:164](file:///C:/Users/Ryan/anaconda3/lib/site-packages/llama_index/indices/composability/graph.py:164), in ComposableGraph.query(self, query_str, query_configs, query_transform, service_context)\r\n    154 service_context = service_context or self._service_context\r\n    155 query_runner = QueryRunner(\r\n    156     index_struct=self._index_struct,\r\n    157     service_context=service_context,\r\n   (...)\r\n    162     recursive=True,\r\n    163 )\r\n--> 164 return query_runner.query(query_str)\r\n\r\nFile [c:\\Users\\Ryan\\anaconda3\\lib\\site-packages\\llama_index\\indices\\query\\query_runner.py:349](file:///C:/Users/Ryan/anaconda3/lib/site-packages/llama_index/indices/query/query_runner.py:349), in QueryRunner.query(self, query_str_or_bundle, index_id, level)\r\n    331 \"\"\"Run query.\r\n    332 \r\n    333 NOTE: Relies on mutual recursion between\r\n   (...)\r\n    344     composable graph.\r\n    345 \"\"\"\r\n    346 query_combiner, query_bundle = self._prepare_query_objects(\r\n    347     query_str_or_bundle, index_id=index_id\r\n    348 )\r\n--> 349 return query_combiner.run(query_bundle, level)\r\n\r\nFile [c:\\Users\\Ryan\\anaconda3\\lib\\site-packages\\llama_index\\indices\\query\\query_combiner\\base.py:66](file:///C:/Users/Ryan/anaconda3/lib/site-packages/llama_index/indices/query/query_combiner/base.py:66), in SingleQueryCombiner.run(self, query_bundle, level)\r\n     64 \"\"\"Run query combiner.\"\"\"\r\n     65 updated_query_bundle = self._prepare_update(query_bundle)\r\n---> 66 return self._query_runner.query_transformed(\r\n     67     updated_query_bundle, self._index_struct, level=level\r\n     68 )\r\n\r\nFile [c:\\Users\\Ryan\\anaconda3\\lib\\site-packages\\llama_index\\indices\\query\\query_runner.py:204](file:///C:/Users/Ryan/anaconda3/lib/site-packages/llama_index/indices/query/query_runner.py:204), in QueryRunner.query_transformed(self, query_bundle, index_struct, level)\r\n    202         nodes_for_synthesis.append(node_with_score)\r\n    203         additional_source_nodes.extend(source_nodes)\r\n--> 204     response = query_obj.synthesize(\r\n    205         query_bundle, nodes_for_synthesis, additional_source_nodes\r\n    206     )\r\n    207     return response\r\n    208 else:\r\n\r\nFile [c:\\Users\\Ryan\\anaconda3\\lib\\site-packages\\llama_index\\indices\\query\\base.py:340](file:///C:/Users/Ryan/anaconda3/lib/site-packages/llama_index/indices/query/base.py:340), in BaseGPTIndexQuery.synthesize(self, query_bundle, nodes, additional_source_nodes)\r\n    332 self._prepare_response_builder(\r\n    333     self.response_builder,\r\n    334     query_bundle,\r\n    335     nodes,\r\n    336     additional_source_nodes=additional_source_nodes,\r\n    337 )\r\n    339 if self._response_mode != ResponseMode.NO_TEXT:\r\n--> 340     response_str = self._give_response_for_nodes(\r\n    341         self.response_builder, query_bundle.query_str\r\n    342     )\r\n...\r\n    107 ) // num_chunks\r\n    108 if padding is not None:\r\n    109     result -= padding\r\n\r\nZeroDivisionError: integer division or modulo by zero",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1133/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1133/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/1132",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/1132/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/1132/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/1132/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/1132",
        "id": 1661525489,
        "node_id": "I_kwDOIWuq585jCN3x",
        "number": 1132,
        "title": "save_to_disk and load_from_disk do not work for GPTSQLStructStoreIndex",
        "user": {
            "login": "jamesoutgo",
            "id": 124407995,
            "node_id": "U_kgDOB2pQuw",
            "avatar_url": "https://avatars.githubusercontent.com/u/124407995?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesoutgo",
            "html_url": "https://github.com/jamesoutgo",
            "followers_url": "https://api.github.com/users/jamesoutgo/followers",
            "following_url": "https://api.github.com/users/jamesoutgo/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesoutgo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesoutgo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesoutgo/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesoutgo/orgs",
            "repos_url": "https://api.github.com/users/jamesoutgo/repos",
            "events_url": "https://api.github.com/users/jamesoutgo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesoutgo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-10T23:07:31Z",
        "updated_at": "2023-10-16T16:04:56Z",
        "closed_at": "2023-10-16T16:04:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, I used sqlalchemy to read my database, and llama-index was able to generate a correct query from my prompt. I would like to be able to save the index into a JSON so it does not have to read the whole database every time I want to submit a query. However, I keep getting an error that suggests that the `save_to_disk` and `load_to_disk` are looking for different keys.\r\n\r\nMy saving file:\r\n```\r\nconn_string = <connection_string>\r\nengine = create_engine(\r\n    conn_string\r\n)\r\n\r\nsql_database = SQLDatabase(\r\n    engine,\r\n    include_tables=[<tables>]\r\n)\r\n\r\nllm_predictor = LLMPredictor(llm=OpenAI(temperature=0, model_name=\"text-davinci-002\"))\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor)\r\n\r\nindex = GPTSQLStructStoreIndex(\r\n    sql_database=sql_database,\r\n    service_context=service_context,\r\n)\r\n\r\nindex.save_to_disk(<my_path>)\r\n```\r\n\r\nMy loading file:\r\n```\r\nindex = GPTSQLStructStoreIndex.load_from_disk(<my_path>)\r\n\r\nresponse = index.query(<my_prompt>, mode=\"default\")\r\n```\r\n\r\nI always get the error:\r\n```  File \"/opt/homebrew/lib/python3.10/site-packages/llama_index/indices/base.py\", line 302, in load_from_dict\r\n    index_struct = load_index_struct_from_dict(result_dict[INDEX_STRUCT_KEY])\r\nKeyError: 'index_struct'\r\n```\r\nAnd when I check my saved JSON, it has no `index_struct` key.\r\n\r\nLooking at the code for GPTSQLStructStoreIndex suggests that it uses different methods than the Base Index for saving to and loading from disk. (https://github.com/jerryjliu/llama_index/blob/0bb81358f6d6e35896d64371967fedc01a9ff0bb/gpt_index/indices/struct_store/sql.py). Has anyone else had issues saving and loading SQL Indices? Is there a known workaround for what I trying to do? Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/1132/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/1132/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    }
]