[
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/616",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/616/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/616/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/616/events",
        "html_url": "https://github.com/neuml/txtai/issues/616",
        "id": 2035069296,
        "node_id": "I_kwDOERCdB855TLFw",
        "number": 616,
        "title": "Pipeline requests",
        "user": {
            "login": "ranjancse26",
            "id": 2565797,
            "node_id": "MDQ6VXNlcjI1NjU3OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2565797?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ranjancse26",
            "html_url": "https://github.com/ranjancse26",
            "followers_url": "https://api.github.com/users/ranjancse26/followers",
            "following_url": "https://api.github.com/users/ranjancse26/following{/other_user}",
            "gists_url": "https://api.github.com/users/ranjancse26/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ranjancse26/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ranjancse26/subscriptions",
            "organizations_url": "https://api.github.com/users/ranjancse26/orgs",
            "repos_url": "https://api.github.com/users/ranjancse26/repos",
            "events_url": "https://api.github.com/users/ranjancse26/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ranjancse26/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-12-11T08:11:34Z",
        "updated_at": "2023-12-12T20:17:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Is it possible to have the sentiment analysis, emotion analysis, topic detection, keyword extraction, aspect analysis etc. as part of the txtai pipeline?",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/616/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/616/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/615",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/615/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/615/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/615/events",
        "html_url": "https://github.com/neuml/txtai/issues/615",
        "id": 2034141858,
        "node_id": "I_kwDOERCdB855Poqi",
        "number": 615,
        "title": "Add notebook showing how to use llama.cpp, LiteLLM and custom generation models",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/35",
            "html_url": "https://github.com/neuml/txtai/milestone/35",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/35/labels",
            "id": 10161718,
            "node_id": "MI_kwDOERCdB84Amw42",
            "number": 35,
            "title": "v6.3.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 10,
            "state": "open",
            "created_at": "2023-11-08T14:31:36Z",
            "updated_at": "2023-12-10T01:05:35Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2023-12-10T00:04:56Z",
        "updated_at": "2023-12-10T01:05:35Z",
        "closed_at": "2023-12-10T01:05:34Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Add notebook showing how to use llama.cpp, LiteLLM and custom generation models",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/615/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/615/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/614",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/614/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/614/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/614/events",
        "html_url": "https://github.com/neuml/txtai/issues/614",
        "id": 2033868858,
        "node_id": "I_kwDOERCdB855OmA6",
        "number": 614,
        "title": "Refactor LLM pipeline to support multiple framework methods",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/35",
            "html_url": "https://github.com/neuml/txtai/milestone/35",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/35/labels",
            "id": 10161718,
            "node_id": "MI_kwDOERCdB84Amw42",
            "number": 35,
            "title": "v6.3.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 10,
            "state": "open",
            "created_at": "2023-11-08T14:31:36Z",
            "updated_at": "2023-12-10T01:05:35Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2023-12-09T14:18:24Z",
        "updated_at": "2023-12-09T16:59:43Z",
        "closed_at": "2023-12-09T16:59:42Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, txtai primarily supports running local models through the transformers framework. The LLM pipeline should be refactored to support the following additional LLM frameworks.\r\n\r\n- #611\r\n- #554 - adds support for over [100+ LLM APIs](https://litellm.vercel.app/docs/providers)\r\n- External generation methods, similar to other components (e.g. ANN, Database, Scoring, Vectors)\r\n\r\nThese new methods will all be optional. The default method will continue to be local models through Hugging Face Transformers. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/614/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/614/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/613",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/613/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/613/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/613/events",
        "html_url": "https://github.com/neuml/txtai/issues/613",
        "id": 2033862449,
        "node_id": "I_kwDOERCdB855Okcx",
        "number": 613,
        "title": "Extractor (RAG) pipeline improvements",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/35",
            "html_url": "https://github.com/neuml/txtai/milestone/35",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/35/labels",
            "id": 10161718,
            "node_id": "MI_kwDOERCdB84Amw42",
            "number": 35,
            "title": "v6.3.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 10,
            "state": "open",
            "created_at": "2023-11-08T14:31:36Z",
            "updated_at": "2023-12-10T01:05:35Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2023-12-09T14:01:31Z",
        "updated_at": "2023-12-09T16:59:42Z",
        "closed_at": "2023-12-09T16:59:42Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "The extractor pipeline is txtai's version of retrieval augmented generation (RAG). Make the following improvements to help the overall experience.\r\n\r\n- Add template parameter. Currently, the assumption is that the question will have a context appended. This works in a lot of cases when the LLM is configured with a default template. But adding a template parameter will make it more streamlined.\r\n- Add context separator parameter. Currently, the assumption is that context elements will be joined on a space. There should be a parameter to customize this behavior. \r\n- Accept string input. In this case, the input will be treated as the query and question\r\n- If a single tuple/dict/string is passed in, return a single result. This is consistent with other txtai pipelines.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/613/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/613/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/612",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/612/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/612/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/612/events",
        "html_url": "https://github.com/neuml/txtai/issues/612",
        "id": 2030781195,
        "node_id": "I_kwDOERCdB855C0ML",
        "number": 612,
        "title": "A few questions about behavior of Embeddings.search",
        "user": {
            "login": "Ar770",
            "id": 77382661,
            "node_id": "MDQ6VXNlcjc3MzgyNjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77382661?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ar770",
            "html_url": "https://github.com/Ar770",
            "followers_url": "https://api.github.com/users/Ar770/followers",
            "following_url": "https://api.github.com/users/Ar770/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ar770/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ar770/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ar770/subscriptions",
            "organizations_url": "https://api.github.com/users/Ar770/orgs",
            "repos_url": "https://api.github.com/users/Ar770/repos",
            "events_url": "https://api.github.com/users/Ar770/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ar770/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-12-07T13:37:20Z",
        "updated_at": "2023-12-07T13:59:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "While testing the search method of the Embeddings class using the default sentence-transformers/all-MiniLM-L6-v2, I encountered a few points that raised questions. Although these are not necessarily issues, I thought it's worth discussing:\r\n\r\na. When searching for an exact phrase present in the captions data, the actual result doesn't consistently appear in the top results. This seems counterintuitive, as one would expect it to be at a 0 distance in the embeddings space.\r\n\r\nb. I followed the [Similarity_search_with_images](https://github.com/neuml/txtai/blob/master/examples/13_Similarity_search_with_images.ipynb) notebook , and while the results returned were generally good, I noticed that the captions associated with the images didn't always align closely in a semantic sense. It appears as though the embedding might include more information than what is explicitly present in the short caption, is that possible? For example, when searching for text that appeared in images, the correct results were returned, even if the searched text wasn't part of the caption (it's worth noting that the information I was searching for was not part of the associated metadata of the file, so it didn't come from there).\r\n\r\nThanks",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/612/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/612/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/611",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/611/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/611/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/611/events",
        "html_url": "https://github.com/neuml/txtai/issues/611",
        "id": 2030653099,
        "node_id": "I_kwDOERCdB855CU6r",
        "number": 611,
        "title": "Add llama.cpp support to LLM",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/35",
            "html_url": "https://github.com/neuml/txtai/milestone/35",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/35/labels",
            "id": 10161718,
            "node_id": "MI_kwDOERCdB84Amw42",
            "number": 35,
            "title": "v6.3.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 10,
            "state": "open",
            "created_at": "2023-11-08T14:31:36Z",
            "updated_at": "2023-12-10T01:05:35Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2023-12-07T12:25:22Z",
        "updated_at": "2023-12-09T16:59:43Z",
        "closed_at": "2023-12-09T16:59:43Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Create a llama.cpp subclass for the LLM interface. When a GGUF extension is detected, it should automatically download the file from the HF hub and load it. The experience should be as seamless as other LLM models loaded through transformers. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/611/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/611/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/610",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/610/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/610/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/610/events",
        "html_url": "https://github.com/neuml/txtai/issues/610",
        "id": 2026274793,
        "node_id": "I_kwDOERCdB854xn_p",
        "number": 610,
        "title": "Update the Similarity_search_with_images.ipynb to integrate BLIP model",
        "user": {
            "login": "Ar770",
            "id": 77382661,
            "node_id": "MDQ6VXNlcjc3MzgyNjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/77382661?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ar770",
            "html_url": "https://github.com/Ar770",
            "followers_url": "https://api.github.com/users/Ar770/followers",
            "following_url": "https://api.github.com/users/Ar770/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ar770/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ar770/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ar770/subscriptions",
            "organizations_url": "https://api.github.com/users/Ar770/orgs",
            "repos_url": "https://api.github.com/users/Ar770/repos",
            "events_url": "https://api.github.com/users/Ar770/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ar770/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-12-05T14:02:07Z",
        "updated_at": "2023-12-12T20:23:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, awesome work!\r\nI was wondering if it would be possible to update [Similarity_search_with_images](https://github.com/neuml/txtai/blob/master/examples/13_Similarity_search_with_images.ipynb) notebook to show a use case of using the BLIP model, which I see is the recommended model for Image captioning. I couldn't get the right way to change the line\r\n`embeddings = Embeddings({\"method\": \"sentence-transformers\", \"path\": \"sentence-transformers/clip-ViT-B-32\", \"content\": True, \"objects\": \"image\"})`\r\nSo that it will work in a similar pipeline as the example shows.\r\nThanks",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/610/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/610/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/609",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/609/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/609/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/609/events",
        "html_url": "https://github.com/neuml/txtai/issues/609",
        "id": 2024412255,
        "node_id": "I_kwDOERCdB854qhRf",
        "number": 609,
        "title": "Issue with subdirectories and ZIP compression",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2264734939,
                "node_id": "MDU6TGFiZWwyMjY0NzM0OTM5",
                "url": "https://api.github.com/repos/neuml/txtai/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/35",
            "html_url": "https://github.com/neuml/txtai/milestone/35",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/35/labels",
            "id": 10161718,
            "node_id": "MI_kwDOERCdB84Amw42",
            "number": 35,
            "title": "v6.3.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 10,
            "state": "open",
            "created_at": "2023-11-08T14:31:36Z",
            "updated_at": "2023-12-10T01:05:35Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2023-12-04T17:54:08Z",
        "updated_at": "2023-12-04T18:36:32Z",
        "closed_at": "2023-12-04T18:36:32Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "There is currently an issue with ZIP compression and subdirectories. The ZIP compressor is not preserving partial directory paths and only the file names are being stored in the archive. This leads to subindexes not being saved correctly as ZIP files. \r\n\r\nThis should be updated to properly add relative paths to archive entries, when necessary.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/609/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/609/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/608",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/608/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/608/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/608/events",
        "html_url": "https://github.com/neuml/txtai/issues/608",
        "id": 2022633929,
        "node_id": "I_kwDOERCdB854jvHJ",
        "number": 608,
        "title": "txtai Production Deployment ",
        "user": {
            "login": "jbouder",
            "id": 61591423,
            "node_id": "MDQ6VXNlcjYxNTkxNDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/61591423?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jbouder",
            "html_url": "https://github.com/jbouder",
            "followers_url": "https://api.github.com/users/jbouder/followers",
            "following_url": "https://api.github.com/users/jbouder/following{/other_user}",
            "gists_url": "https://api.github.com/users/jbouder/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jbouder/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jbouder/subscriptions",
            "organizations_url": "https://api.github.com/users/jbouder/orgs",
            "repos_url": "https://api.github.com/users/jbouder/repos",
            "events_url": "https://api.github.com/users/jbouder/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jbouder/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-12-03T17:27:21Z",
        "updated_at": "2023-12-09T13:04:57Z",
        "closed_at": "2023-12-09T13:04:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I\u2019m trying to understand what a production deployment should look like when using txtai for embeddings and LLM integration.\r\n\r\nWe are currently running an app which utilizes a containerized deployment of txtai to Azure Kubernetes Service, using GPU supported nodes. The txtai app makes use of a workflow for performing the search and calling an LLM to improve the response. We also are using subindexes to support filtering of data. And we are using content storage.\r\n\r\nWith a default pod deployment when the pod is restarted, the embedding data is lost (as expected), so we\u2019re trying to overcome that and provide a more available solution. Based on my research and testing, I believe the following to be true, through existing txtai configurations:\r\n\r\n- embedding and index data is stored locally on disk\r\n- content is stored in a local database (MySql)\r\n- In order to persist data, we need to externalize both the local storage and the database\r\n- We can persist local data using standard container/kubernetes mounting\r\n- We can persist content data using an external database like Postgres \r\n\r\nWe have been able to get this working with a more standard deployment, but not with our current design. We can add and index successfully, but receive an error when calling our search workflow. \r\n\r\nAssuming the above is accurate, I\u2019m wondering if there may be some issue with using subindexes, as we are not seeing data in the text column in the sessions table with this setup.\r\n\r\nAny information you can provide would be greatly appreciated!!",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/608/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/608/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/607",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/607/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/607/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/607/events",
        "html_url": "https://github.com/neuml/txtai/issues/607",
        "id": 2022591414,
        "node_id": "I_kwDOERCdB854jku2",
        "number": 607,
        "title": "Handle `None` input properly in Tokenizer",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2264734939,
                "node_id": "MDU6TGFiZWwyMjY0NzM0OTM5",
                "url": "https://api.github.com/repos/neuml/txtai/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/35",
            "html_url": "https://github.com/neuml/txtai/milestone/35",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/35/labels",
            "id": 10161718,
            "node_id": "MI_kwDOERCdB84Amw42",
            "number": 35,
            "title": "v6.3.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 10,
            "state": "open",
            "created_at": "2023-11-08T14:31:36Z",
            "updated_at": "2023-12-10T01:05:35Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2023-12-03T15:34:33Z",
        "updated_at": "2023-12-03T15:39:53Z",
        "closed_at": "2023-12-03T15:39:53Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, the Tokenizer fails with a `None` input. A check should be added to skip processing and return `None`. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/607/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/607/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/606",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/606/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/606/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/606/events",
        "html_url": "https://github.com/neuml/txtai/issues/606",
        "id": 2021222190,
        "node_id": "I_kwDOERCdB854eWcu",
        "number": 606,
        "title": "Image Search with Subindices",
        "user": {
            "login": "vnguye65",
            "id": 56784141,
            "node_id": "MDQ6VXNlcjU2Nzg0MTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/56784141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vnguye65",
            "html_url": "https://github.com/vnguye65",
            "followers_url": "https://api.github.com/users/vnguye65/followers",
            "following_url": "https://api.github.com/users/vnguye65/following{/other_user}",
            "gists_url": "https://api.github.com/users/vnguye65/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vnguye65/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vnguye65/subscriptions",
            "organizations_url": "https://api.github.com/users/vnguye65/orgs",
            "repos_url": "https://api.github.com/users/vnguye65/repos",
            "events_url": "https://api.github.com/users/vnguye65/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vnguye65/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 17,
        "created_at": "2023-12-01T16:32:53Z",
        "updated_at": "2023-12-13T15:27:17Z",
        "closed_at": "2023-12-09T13:04:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Could you provide an example of this image search can used with other data using subindices? \r\nI get this error when I try to upsert the vector-database with image data.\r\n\r\n\r\n```\r\nembeddings = Embeddings(\r\n    content=True,\r\n    defaults=False,\r\n\r\n    indexes={\r\n        \"text-data\": {\r\n            \"tokenize\": True,\r\n            \"path\": \"sentence-transformers/multi-qa-mpnet-base-dot-v1\",\r\n            \"columns\": {\r\n                \"text\": \"text-data\"\r\n            },\r\n\r\n        \"image\":{\r\n            \"tokenize\": True,\r\n            \"method\": \"sentence-transformers\",\r\n            \"path\": \"sentence-transformers/clip-ViT-B-32\",\r\n            \"objects\": \"image\",\r\n            \"columns\": {\r\n                \"object\": \"image\"\r\n            }\r\n        }\r\n    })\r\n```\r\n\r\n```\r\nembeddings.insert([(uid, {\"object\": image, \"format\": image.format, \"width\": image.width, \"height\": image.height}}, image_file)])\r\n```\r\n\r\n\r\n\r\n\r\n```\r\nTypeError: Object of type JpegImageFile is not JSON serializable\r\n```\r\n\r\nhttps://github.com/neuml/txtai/blob/master/examples/13_Similarity_search_with_images.ipynb",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/606/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/606/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/605",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/605/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/605/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/605/events",
        "html_url": "https://github.com/neuml/txtai/issues/605",
        "id": 2016285402,
        "node_id": "I_kwDOERCdB854LhLa",
        "number": 605,
        "title": "Add notebook on how to build RAG pipelines",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/35",
            "html_url": "https://github.com/neuml/txtai/milestone/35",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/35/labels",
            "id": 10161718,
            "node_id": "MI_kwDOERCdB84Amw42",
            "number": 35,
            "title": "v6.3.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 10,
            "state": "open",
            "created_at": "2023-11-08T14:31:36Z",
            "updated_at": "2023-12-10T01:05:35Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 1,
        "created_at": "2023-11-29T10:35:01Z",
        "updated_at": "2023-11-30T12:28:06Z",
        "closed_at": "2023-11-29T10:41:00Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Add an example of how to build RAG pipelines with txtai. A novel feature of txtai is generating citations and this should be included. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/605/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/605/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/604",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/604/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/604/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/604/events",
        "html_url": "https://github.com/neuml/txtai/issues/604",
        "id": 2015408534,
        "node_id": "I_kwDOERCdB854ILGW",
        "number": 604,
        "title": "Update text extraction notebook",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/35",
            "html_url": "https://github.com/neuml/txtai/milestone/35",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/35/labels",
            "id": 10161718,
            "node_id": "MI_kwDOERCdB84Amw42",
            "number": 35,
            "title": "v6.3.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 10,
            "state": "open",
            "created_at": "2023-11-08T14:31:36Z",
            "updated_at": "2023-12-10T01:05:35Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2023-11-28T22:09:21Z",
        "updated_at": "2023-11-28T22:12:28Z",
        "closed_at": "2023-11-28T22:12:28Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Update the text extraction notebook to reflect the new options with #603.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/604/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/604/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/603",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/603/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/603/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/603/events",
        "html_url": "https://github.com/neuml/txtai/issues/603",
        "id": 2015246113,
        "node_id": "I_kwDOERCdB854Hjch",
        "number": 603,
        "title": "Enhance textractor to better support RAG use cases",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/35",
            "html_url": "https://github.com/neuml/txtai/milestone/35",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/35/labels",
            "id": 10161718,
            "node_id": "MI_kwDOERCdB84Amw42",
            "number": 35,
            "title": "v6.3.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 10,
            "state": "open",
            "created_at": "2023-11-08T14:31:36Z",
            "updated_at": "2023-12-10T01:05:35Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2023-11-28T20:28:34Z",
        "updated_at": "2023-11-28T20:53:26Z",
        "closed_at": "2023-11-28T20:53:25Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, the textractor pipeline is rather basic. It simply calls [Apache Tika](https://github.com/chrismattmann/tika-python) (if available) and returns the raw text. If Tika isn't available, the textractor converts HTML to raw text. \r\n\r\nTika is a mature and stable project with a [large number of file formats supported](https://tika.apache.org/2.9.1/formats.html). It also supports [extracting content to XHTML](https://github.com/chrismattmann/tika-python#specify-output-format-to-xhtml). The following improvements should be made to better support downstream retrieval augmented generation (RAG) use cases.\r\n\r\n- Support section parsing. This will add a new flag called `sections`. When enabled, it will split the text by section or page breaks. This will better organize content into related sections.\r\n- Improve paragraph parsing. Add better paragraph detection.\r\n- Preserve whitespace formatting. Currently the textractor strips a lot of formatting that would be useful to a RAG pipeline.\r\n- Export all formats to XHTML. Add an XHTML parser that can cleanly convert content to raw text.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/603/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/603/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/602",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/602/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/602/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/602/events",
        "html_url": "https://github.com/neuml/txtai/issues/602",
        "id": 2014929818,
        "node_id": "I_kwDOERCdB854GWOa",
        "number": 602,
        "title": "txtai as a server deployment",
        "user": {
            "login": "TensorBlast",
            "id": 5544554,
            "node_id": "MDQ6VXNlcjU1NDQ1NTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5544554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TensorBlast",
            "html_url": "https://github.com/TensorBlast",
            "followers_url": "https://api.github.com/users/TensorBlast/followers",
            "following_url": "https://api.github.com/users/TensorBlast/following{/other_user}",
            "gists_url": "https://api.github.com/users/TensorBlast/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TensorBlast/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TensorBlast/subscriptions",
            "organizations_url": "https://api.github.com/users/TensorBlast/orgs",
            "repos_url": "https://api.github.com/users/TensorBlast/repos",
            "events_url": "https://api.github.com/users/TensorBlast/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TensorBlast/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-28T17:19:13Z",
        "updated_at": "2023-12-09T13:05:18Z",
        "closed_at": "2023-12-09T13:05:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi\r\nI have attempted to go through the API documentation but found it severely lacking.\r\nI have tried myself to deploy txtai as a FastAPI server which works, and am able to call transform endpoint to get embeddings but am at a loss on how to proceed from there.\r\n\r\nThere are bindings for Java, Go, Javascript etc but I don't see a python client application. Apologies if the question is too rudimentary but how do I go about consuming the FastAPI endpoint with Python for the following steps:\r\n\r\n1. Add text (and associated embeddings) to the datastore\r\n2.  How to get embeddings given some text\r\n3. Perform ANN search/ HNSW search using text input\r\n4. Perform CRUD operations in order to update/upsert documents etc.\r\n\r\nAlso what is the concept of Index here? I read it is created AFTER adding documents. Is this something like the SQL database indexes which are used to speed up retrieval etc?",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/602/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/602/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/601",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/601/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/601/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/601/events",
        "html_url": "https://github.com/neuml/txtai/issues/601",
        "id": 2000322218,
        "node_id": "I_kwDOERCdB853On6q",
        "number": 601,
        "title": "Hybrid search slows down upsert operation",
        "user": {
            "login": "akset2X",
            "id": 117704649,
            "node_id": "U_kgDOBwQHyQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/117704649?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akset2X",
            "html_url": "https://github.com/akset2X",
            "followers_url": "https://api.github.com/users/akset2X/followers",
            "following_url": "https://api.github.com/users/akset2X/following{/other_user}",
            "gists_url": "https://api.github.com/users/akset2X/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akset2X/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akset2X/subscriptions",
            "organizations_url": "https://api.github.com/users/akset2X/orgs",
            "repos_url": "https://api.github.com/users/akset2X/repos",
            "events_url": "https://api.github.com/users/akset2X/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akset2X/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-18T08:32:35Z",
        "updated_at": "2023-12-07T09:52:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I get to know that delete is not happening on hybrid index. Deleting the embeddings using its \"id\" is only deleting the embedding list but the parallely created \"scoring.terms\" and \"scoring\" remains untouched. This makes /add and /upsert to be very delayed (I guess so). \r\n\r\n```\r\npath: ./index\r\nwritable: True\r\n\r\nembeddings:\r\n  path: sentence-transformers/all-MiniLM-L6-v2\r\n  content: True\r\n  hybrid: True\r\n```\r\n\r\nI could see that I have 30k plus embedding count available, using /count API. With hybrid index even though search is faster it looks like /upsert is very slow as the data increases. I thought deleting some data would help speed up the upsert, but deleting the embedding doesn't reduce the file size of \"scoring\" and \"scoring.terms\" in the actual file directory.\r\nOr is there anyway to access the files like documents, scoring.terms and scoring and delete something safely?\r\nHow can I speed up upsert as the count of documents increase?",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/601/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/601/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/600",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/600/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/600/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/600/events",
        "html_url": "https://github.com/neuml/txtai/issues/600",
        "id": 1993997602,
        "node_id": "I_kwDOERCdB8522f0i",
        "number": 600,
        "title": "Vector Embedding Database not persisting when using YAML configuration",
        "user": {
            "login": "vnguye65",
            "id": 56784141,
            "node_id": "MDQ6VXNlcjU2Nzg0MTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/56784141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vnguye65",
            "html_url": "https://github.com/vnguye65",
            "followers_url": "https://api.github.com/users/vnguye65/followers",
            "following_url": "https://api.github.com/users/vnguye65/following{/other_user}",
            "gists_url": "https://api.github.com/users/vnguye65/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vnguye65/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vnguye65/subscriptions",
            "organizations_url": "https://api.github.com/users/vnguye65/orgs",
            "repos_url": "https://api.github.com/users/vnguye65/repos",
            "events_url": "https://api.github.com/users/vnguye65/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vnguye65/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-15T04:05:16Z",
        "updated_at": "2023-12-12T22:16:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have the following workflow configuration with subindices for two different datasets. \r\n\r\nworkflow.yaml\r\n```\r\nwritable: true\r\npath: vector-database\r\n\r\nembeddings:\r\n  content: true\r\n  defaults: false\r\n  indexes: \r\n      document:\r\n          path: sentence-transformers/multi-qa-mpnet-base-dot-v1\r\n          tokenize: true\r\n          columns:\r\n              text: document\r\n      csv: \r\n           path: sentence-transformers/multi-qa-mpnet-base-dot-v1\r\n           tokenize: true\r\n           columns:\r\n               text: csv\r\n```\r\n\r\nAfter adding the data, `app.count()` returns 1. However, when this data doesn't persist when the session is refreshed. `app.count()` returns 0 when run in another separate environment. \r\n```\r\nfrom txtai.app import Application\r\n\r\napp = Application(\"search-workflow.yaml\")\r\napp.add([{'document': 'dummy data 1',\r\n            'csv': 'dummy data 2'}])\r\napp.upsert()\r\napp.count()\r\n```\r\n\r\n@davidmezzetti Could you please confirm if I am missing anything in the code and suggest what we could do to persist data? \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/600/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/600/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/599",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/599/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/599/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/599/events",
        "html_url": "https://github.com/neuml/txtai/issues/599",
        "id": 1985594125,
        "node_id": "I_kwDOERCdB852WcMN",
        "number": 599,
        "title": "Topic modeling performance",
        "user": {
            "login": "matteomarjanovic",
            "id": 57497923,
            "node_id": "MDQ6VXNlcjU3NDk3OTIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/57497923?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matteomarjanovic",
            "html_url": "https://github.com/matteomarjanovic",
            "followers_url": "https://api.github.com/users/matteomarjanovic/followers",
            "following_url": "https://api.github.com/users/matteomarjanovic/following{/other_user}",
            "gists_url": "https://api.github.com/users/matteomarjanovic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matteomarjanovic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matteomarjanovic/subscriptions",
            "organizations_url": "https://api.github.com/users/matteomarjanovic/orgs",
            "repos_url": "https://api.github.com/users/matteomarjanovic/repos",
            "events_url": "https://api.github.com/users/matteomarjanovic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matteomarjanovic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-09T13:11:13Z",
        "updated_at": "2023-12-09T13:06:00Z",
        "closed_at": "2023-12-09T13:06:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, thank you for this cool library!\r\n\r\nIn [this xample notebook](https://github.com/neuml/txtai/blob/master/examples/42_Prompt_driven_search_with_LLMs.ipynb) you say you take a different approach than BERTopic and Top2Vec.\r\nDoes some comparison between these methods exist? Why should I prefer the knowledge graph based one? Have you ever performed some tests to evaluate the extracted topics with your approach?\r\n\r\nThanks!",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/599/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/599/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/598",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/598/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/598/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/598/events",
        "html_url": "https://github.com/neuml/txtai/issues/598",
        "id": 1984523593,
        "node_id": "I_kwDOERCdB852SW1J",
        "number": 598,
        "title": "PubMed version of the txtai-wikipedia db?",
        "user": {
            "login": "davies-w",
            "id": 6550854,
            "node_id": "MDQ6VXNlcjY1NTA4NTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6550854?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davies-w",
            "html_url": "https://github.com/davies-w",
            "followers_url": "https://api.github.com/users/davies-w/followers",
            "following_url": "https://api.github.com/users/davies-w/following{/other_user}",
            "gists_url": "https://api.github.com/users/davies-w/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davies-w/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davies-w/subscriptions",
            "organizations_url": "https://api.github.com/users/davies-w/orgs",
            "repos_url": "https://api.github.com/users/davies-w/repos",
            "events_url": "https://api.github.com/users/davies-w/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davies-w/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-08T22:45:18Z",
        "updated_at": "2023-11-14T00:18:35Z",
        "closed_at": "2023-11-14T00:18:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I raised this here https://huggingface.co/NeuML/txtai-wikipedia/discussions/1, but as this is the GitHub home of NeuML, I figured I'd x-post the question here in case it gets a faster response :)\r\n\r\nThis wikipedia embedding database is great! I've used it for testing Q&A, but I'm now wondering if there is an equivalent, but for PubMed abstracts. I've seen you have PubMedBert embeddings, but that's not the same as a pre-indexed set of retrievable docs.\r\nI've scoured the internet thinking someone would have done this as a service to humanity, but apparently not. Given how many people have processed PubMed in various forms for LLMs, is there a legal or logistical reason why this hasn't been done yet?",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/598/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/598/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/597",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/597/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/597/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/597/events",
        "html_url": "https://github.com/neuml/txtai/issues/597",
        "id": 1983897030,
        "node_id": "I_kwDOERCdB852P93G",
        "number": 597,
        "title": "fasttext pybind11 wheel failure",
        "user": {
            "login": "JeremyBickel",
            "id": 102981806,
            "node_id": "U_kgDOBiNgrg",
            "avatar_url": "https://avatars.githubusercontent.com/u/102981806?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JeremyBickel",
            "html_url": "https://github.com/JeremyBickel",
            "followers_url": "https://api.github.com/users/JeremyBickel/followers",
            "following_url": "https://api.github.com/users/JeremyBickel/following{/other_user}",
            "gists_url": "https://api.github.com/users/JeremyBickel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JeremyBickel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JeremyBickel/subscriptions",
            "organizations_url": "https://api.github.com/users/JeremyBickel/orgs",
            "repos_url": "https://api.github.com/users/JeremyBickel/repos",
            "events_url": "https://api.github.com/users/JeremyBickel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JeremyBickel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-08T15:43:29Z",
        "updated_at": "2023-11-08T21:30:57Z",
        "closed_at": "2023-11-08T21:30:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I ran into this problem trying to install extra packages (eg. txtai[all]). It requires and tries to build fasttext, but it fails due to not finding pybind11. I have pybind11. I have fasttext, correct version and everything, but it insists on trying to build it and it fails.\r\n\r\nFor reference in case someone else runs into this, here's how I fixed it. I found the wheel file and edited the metadata to exclude fasttext.\r\n\r\nFind the pip cache directory> \"pip cache dir\"\r\nGo there, and create a temp dir> \"mkdir a\"\r\nChange to that directory> \"cd a\"\r\nUnzip the wheel> \"unzip ../txtai-6.1.0-py3-none-any.whl\"\r\nRename the wheel file in case something goes wrong> \"mv ../txtai-6.1.0-py3-none-any.whl ../txtai-6.1.0-py3-none-any.whl.bak\"\r\nGo into the .dist-info directory in the unzipped directory structure> \"cd txtai-6.1.0.dist-info\"\r\nEdit the METADATA file> \"vim METADATA\" (or nano or any text editor)\r\nFind all instances of fasttext (I found 4), and delete the whole line wherever you find it.\r\nSave the file.\r\nBack in the temp directory, repack the zip file into a wheel> \"zip -r ../txtai-6.1.0-py3-none-any.whl .\"\r\nInstall the wheel directly> \"pip install ../txtai-6.1.0-py3-none-any.whl\"\r\n\r\nWill someone verify that this is a workable procedure?",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/597/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/597/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/596",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/596/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/596/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/596/events",
        "html_url": "https://github.com/neuml/txtai/issues/596",
        "id": 1982300366,
        "node_id": "I_kwDOERCdB852J4DO",
        "number": 596,
        "title": "Update documentation to note SQL bind parameters",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-11-07T21:56:23Z",
        "updated_at": "2023-11-07T21:57:29Z",
        "closed_at": "2023-11-07T21:57:29Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Update the query guide and the Similarity search with images notebook to note the use of SQL bind parameters. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/596/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/596/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/595",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/595/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/595/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/595/events",
        "html_url": "https://github.com/neuml/txtai/issues/595",
        "id": 1977717626,
        "node_id": "I_kwDOERCdB8514ZN6",
        "number": 595,
        "title": "Integration with Azure Open AI model for embedding and text generation ?",
        "user": {
            "login": "mrhimanshu",
            "id": 18554133,
            "node_id": "MDQ6VXNlcjE4NTU0MTMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/18554133?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrhimanshu",
            "html_url": "https://github.com/mrhimanshu",
            "followers_url": "https://api.github.com/users/mrhimanshu/followers",
            "following_url": "https://api.github.com/users/mrhimanshu/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrhimanshu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrhimanshu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrhimanshu/subscriptions",
            "organizations_url": "https://api.github.com/users/mrhimanshu/orgs",
            "repos_url": "https://api.github.com/users/mrhimanshu/repos",
            "events_url": "https://api.github.com/users/mrhimanshu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrhimanshu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-05T10:05:50Z",
        "updated_at": "2023-12-12T20:11:12Z",
        "closed_at": "2023-12-12T20:11:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Is there any way by which we can integrate azure open ai embedding and text generation part ? Any wrapper around to add it as path ?",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/595/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/595/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/594",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/594/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/594/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/594/events",
        "html_url": "https://github.com/neuml/txtai/issues/594",
        "id": 1977337251,
        "node_id": "I_kwDOERCdB85128Wj",
        "number": 594,
        "title": "Update Faiss ANN to support IVF strings without number of cells",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-11-04T13:32:20Z",
        "updated_at": "2023-11-04T13:51:09Z",
        "closed_at": "2023-11-04T13:51:08Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, a components string with Faiss requires specifying the number of IVF cells. This change will add logic to automatically calculate the number of IVF cells when the number of cells is omitted.\r\n\r\nFor example, take a notional example of 10,000 training records. With this change, the settings below will create the following indexes.\r\n\r\n|Components|Index          |\r\n|-----------------|----------------|\r\n|Empty          |IVF256,Flat |\r\n|IVF100,Flat  |IVF100,Flat |\r\n|IVF,Flat        |IVF256,Flat  |",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/594/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/594/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/593",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/593/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/593/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/593/events",
        "html_url": "https://github.com/neuml/txtai/issues/593",
        "id": 1976976112,
        "node_id": "I_kwDOERCdB8511kLw",
        "number": 593,
        "title": "Issue with Language Specific Transcription Using txtai and Whisper",
        "user": {
            "login": "Nondzu",
            "id": 20000097,
            "node_id": "MDQ6VXNlcjIwMDAwMDk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/20000097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nondzu",
            "html_url": "https://github.com/Nondzu",
            "followers_url": "https://api.github.com/users/Nondzu/followers",
            "following_url": "https://api.github.com/users/Nondzu/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nondzu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nondzu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nondzu/subscriptions",
            "organizations_url": "https://api.github.com/users/Nondzu/orgs",
            "repos_url": "https://api.github.com/users/Nondzu/repos",
            "events_url": "https://api.github.com/users/Nondzu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nondzu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-03T21:54:48Z",
        "updated_at": "2023-11-04T13:20:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Environment\r\n\r\n- txtai version: 6.2.0\r\n- whisper version: \r\n- Python version: 3.11.5\r\n- Operating System:\r\nDescription:    Linux Mint 21.2\r\nRelease:        21.2\r\nCodename:       victoria\r\n\r\n## Description\r\n\r\nI'm attempting to transcribe Polish audio using the Whisper model within txtai, and while I am able to get transcriptions, they appear to be in English rather than the native language of the audio.\r\n\r\nHere's a snippet of the code I'm using:\r\n\r\n```python\r\nfrom txtai.transcription import Transcription\r\n\r\ntranscribe = Transcription(\"openai/whisper-large-v2\")\r\nfor text in transcribe(files):\r\n    print(text)\r\n```\r\n\r\n## Questions\r\n\r\n1. Does txtai's transcription feature automatically translate the text to English, or is it supposed to return text in the language of the audio?\r\n2. How can I disable any automatic translation feature or specify the language of the audio to ensure that the transcription is in Polish?\r\n\r\nAny guidance or suggestions on this matter would be greatly appreciated.\r\n\r\nThank you!",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/593/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/593/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/592",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/592/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/592/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/592/events",
        "html_url": "https://github.com/neuml/txtai/issues/592",
        "id": 1972926102,
        "node_id": "I_kwDOERCdB851mHaW",
        "number": 592,
        "title": "Add env variable to disable macOS MPS devices",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-11-01T18:57:17Z",
        "updated_at": "2023-11-01T19:11:34Z",
        "closed_at": "2023-11-01T19:11:34Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "An environment variable should be added to optionally disable macOS MPS devices.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/592/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/592/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/591",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/591/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/591/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/591/events",
        "html_url": "https://github.com/neuml/txtai/issues/591",
        "id": 1972828018,
        "node_id": "I_kwDOERCdB851lvdy",
        "number": 591,
        "title": "Add API extensions notebook",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-11-01T17:50:25Z",
        "updated_at": "2023-11-01T17:52:51Z",
        "closed_at": "2023-11-01T17:52:50Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Add a notebook showing how API extensions can be used to create custom Python endpoints. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/591/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/591/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/590",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/590/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/590/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/590/events",
        "html_url": "https://github.com/neuml/txtai/issues/590",
        "id": 1966218164,
        "node_id": "I_kwDOERCdB851Mhu0",
        "number": 590,
        "title": "Get subset by list of indexes or IDs",
        "user": {
            "login": "chaxor",
            "id": 1639151,
            "node_id": "MDQ6VXNlcjE2MzkxNTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1639151?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chaxor",
            "html_url": "https://github.com/chaxor",
            "followers_url": "https://api.github.com/users/chaxor/followers",
            "following_url": "https://api.github.com/users/chaxor/following{/other_user}",
            "gists_url": "https://api.github.com/users/chaxor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chaxor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chaxor/subscriptions",
            "organizations_url": "https://api.github.com/users/chaxor/orgs",
            "repos_url": "https://api.github.com/users/chaxor/repos",
            "events_url": "https://api.github.com/users/chaxor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chaxor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-27T21:34:20Z",
        "updated_at": "2023-11-02T13:24:44Z",
        "closed_at": "2023-11-02T13:24:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am looking for a way to create a multi-indexed dataframe or xarray of vectors which is a random subset or range of IDs from the txtai databases (in this specific case, the default faiss and sqlite backends).\r\n\r\nThe goal is to just get some of the data in a standard matrix-like format for e.g. showing PCA/t-sne/etc of a subset of the data (but specifically a *random, or non-query related* subset of the data).\r\n\r\nI tried using the faiss `reconstruct()` function from `embeddng.ann.backend`, but ran into some issues with the default index.  In addition, I am unsure of how to link back the data to the metadata.  This is where an xarray or multi-indexed dataframe is much more natural in guaranteeing a link between data and metadata.\r\n\r\nIs there a typical way that a DataFrame with a multi-index containing the IDs (the IDs input into the `Embedding.index()`) and the text data from the sqlite backend, and each row containing it's corresponding vector from faiss?",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/590/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/590/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/589",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/589/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/589/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/589/events",
        "html_url": "https://github.com/neuml/txtai/issues/589",
        "id": 1965306442,
        "node_id": "I_kwDOERCdB851JDJK",
        "number": 589,
        "title": "Update torch version in Dockerfile",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-10-27T11:17:22Z",
        "updated_at": "2023-10-27T19:19:13Z",
        "closed_at": "2023-10-27T19:19:13Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, the CPU build of Docker still uses torch 1.x. Update to the latest version. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/589/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/589/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/588",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/588/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/588/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/588/events",
        "html_url": "https://github.com/neuml/txtai/issues/588",
        "id": 1965176159,
        "node_id": "I_kwDOERCdB851IjVf",
        "number": 588,
        "title": "Add quantization notebook",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-10-27T09:57:43Z",
        "updated_at": "2023-10-30T23:59:34Z",
        "closed_at": "2023-10-30T23:59:33Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Add notebook to explore various vector quantization methods available in txtai\r\n\r\n- Faiss\r\n  - Scalar quantization (SQ4/6/8)\r\n  - Product quantization\r\n- Vectors module scalar quantization (1-bit to 8-bit)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/588/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/588/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/587",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/587/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/587/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/587/events",
        "html_url": "https://github.com/neuml/txtai/issues/587",
        "id": 1965173102,
        "node_id": "I_kwDOERCdB851Iilu",
        "number": 587,
        "title": "Add support for scalar data to torch and numpy ANN backends",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-10-27T09:55:53Z",
        "updated_at": "2023-10-27T19:19:16Z",
        "closed_at": "2023-10-27T19:19:15Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Update `torch` and `numpy` backends to support scalar quantized data. This change will primarily change the `search` method to use hamming distance vs dot product similarity.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/587/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/587/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/586",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/586/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/586/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/586/events",
        "html_url": "https://github.com/neuml/txtai/issues/586",
        "id": 1965170044,
        "node_id": "I_kwDOERCdB851Ih18",
        "number": 586,
        "title": "Update benchmarks to read configuration",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-10-27T09:54:03Z",
        "updated_at": "2023-10-27T19:19:15Z",
        "closed_at": "2023-10-27T19:19:15Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, the benchmarks script has the indexing settings hardcoded. This should be updated to support reading configuration from a `config.yml` file. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/586/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/586/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/585",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/585/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/585/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/585/events",
        "html_url": "https://github.com/neuml/txtai/issues/585",
        "id": 1965168205,
        "node_id": "I_kwDOERCdB851IhZN",
        "number": 585,
        "title": "Add support for binary indexes to Faiss ANN",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 1,
        "created_at": "2023-10-27T09:52:56Z",
        "updated_at": "2023-10-27T19:21:38Z",
        "closed_at": "2023-10-27T19:20:53Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "This change will add support for [Faiss binary indexes](https://github.com/facebookresearch/faiss/wiki/Binary-indexes). Binary indexes will be used to index scalar quantized data.  ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/585/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/585/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/584",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/584/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/584/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/584/events",
        "html_url": "https://github.com/neuml/txtai/issues/584",
        "id": 1965164837,
        "node_id": "I_kwDOERCdB851Igkl",
        "number": 584,
        "title": "Move vector normalization to vectors module",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-10-27T09:50:54Z",
        "updated_at": "2023-10-27T19:19:14Z",
        "closed_at": "2023-10-27T19:19:14Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, vector normalization is applied after vectorization in an embeddings instance. This logic should be moved to the vectors module and incrementally applied. The current implementation runs normalization on the full embeddings array, leading to high memory consumption at index time.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/584/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/584/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/583",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/583/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/583/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/583/events",
        "html_url": "https://github.com/neuml/txtai/issues/583",
        "id": 1965146627,
        "node_id": "I_kwDOERCdB851IcID",
        "number": 583,
        "title": "Add scalar quantization support to vectors",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-10-27T09:39:56Z",
        "updated_at": "2023-10-27T19:19:14Z",
        "closed_at": "2023-10-27T19:19:14Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, vector quantization is supported in txtai through the ANN layer. The only current backend supporting quantization is `faiss`. This change will add quantization to the vectors package.\r\n\r\nScalar quantization will support 1 (binary) to 8 bit quantization. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/583/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/583/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/582",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/582/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/582/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/582/events",
        "html_url": "https://github.com/neuml/txtai/issues/582",
        "id": 1965142496,
        "node_id": "I_kwDOERCdB851IbHg",
        "number": 582,
        "title": "Update documentation",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-10-27T09:37:24Z",
        "updated_at": "2023-10-27T09:59:27Z",
        "closed_at": "2023-10-27T09:59:27Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Update as follows:\r\n\r\n- Add new faiss parameters and binary index support\r\n- Update quantize parameter notes\r\n- Update indexing and query guide to reflect 6.0 additions",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/582/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/582/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/581",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/581/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/581/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/581/events",
        "html_url": "https://github.com/neuml/txtai/issues/581",
        "id": 1957541515,
        "node_id": "I_kwDOERCdB850rbaL",
        "number": 581,
        "title": "How to search for the plot match to the corresponding novel",
        "user": {
            "login": "File-z-J",
            "id": 66992342,
            "node_id": "MDQ6VXNlcjY2OTkyMzQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/66992342?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/File-z-J",
            "html_url": "https://github.com/File-z-J",
            "followers_url": "https://api.github.com/users/File-z-J/followers",
            "following_url": "https://api.github.com/users/File-z-J/following{/other_user}",
            "gists_url": "https://api.github.com/users/File-z-J/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/File-z-J/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/File-z-J/subscriptions",
            "organizations_url": "https://api.github.com/users/File-z-J/orgs",
            "repos_url": "https://api.github.com/users/File-z-J/repos",
            "events_url": "https://api.github.com/users/File-z-J/events{/privacy}",
            "received_events_url": "https://api.github.com/users/File-z-J/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-10-23T16:21:48Z",
        "updated_at": "2023-12-09T13:08:33Z",
        "closed_at": "2023-12-09T13:08:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "If I have a number of novels, and I only remember that there is a plot (such as tens of thousands of words or tens of thousands of plots), I now enter the outline of this plot, want to search for the corresponding novel. Is it achievable? If so, could you share your thoughts?",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/581/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/581/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/580",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/580/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/580/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/580/events",
        "html_url": "https://github.com/neuml/txtai/issues/580",
        "id": 1948893897,
        "node_id": "I_kwDOERCdB850KcLJ",
        "number": 580,
        "title": "Issues with workers and concurrency",
        "user": {
            "login": "ak4hcl",
            "id": 139981901,
            "node_id": "U_kgDOCFf0TQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/139981901?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ak4hcl",
            "html_url": "https://github.com/ak4hcl",
            "followers_url": "https://api.github.com/users/ak4hcl/followers",
            "following_url": "https://api.github.com/users/ak4hcl/following{/other_user}",
            "gists_url": "https://api.github.com/users/ak4hcl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ak4hcl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ak4hcl/subscriptions",
            "organizations_url": "https://api.github.com/users/ak4hcl/orgs",
            "repos_url": "https://api.github.com/users/ak4hcl/repos",
            "events_url": "https://api.github.com/users/ak4hcl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ak4hcl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-18T05:58:07Z",
        "updated_at": "2023-11-02T13:27:09Z",
        "closed_at": "2023-11-02T13:27:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "txtai's search and document training is working well with its default configuration and single instance. In case of scaling the application and concurrency, it lacks something. I tried enabling 4 workers to improve search performance with following txtai config but I was not able to achieve what I was looking for. With multiple-workers search is not providing results for some requests and upsert operation is failing with error code 500 saying db lock issue from sqlite. I tried another approach by integrating postgres database with txtai's latest version. With postgres and 4 workers there are no db lock errors but rarely it sometimes gives empty results(inconsistent) for some requests when I tried testing search performance with jmeter. \r\n\r\nIn short, I tried various supported configuration like default, sqlite wal, postgres but didn't get any improvement, instead there are different errors I am getting.\r\n```\r\n# Index file path\r\npath: ./index\r\n# Allow indexing of documents\r\nwritable: True\r\n\r\n# Enbeddings index\r\nembeddings:\r\n  path: sentence-transformers/all-MiniLM-L6-v2\r\n  content: True\r\n  hybrid: True\r\n```\r\nError log\r\n```\r\n$ CONFIG=hybridindex.yml uvicorn --host 0.0.0.0 --port 8000 --workers 4 \"txtai.api:app\"\r\nINFO:     Uvicorn running on http://0.0.0.0:8000 (Press CTRL+C to quit)\r\nINFO:     Started parent process [19436]\r\nINFO:     Started server process [9160]\r\nINFO:     Waiting for application startup.\r\nINFO:     Started server process [23868]\r\nINFO:     Waiting for application startup.\r\nINFO:     Started server process [16436]\r\nINFO:     Waiting for application startup.\r\nINFO:     Started server process [25512]\r\nINFO:     Waiting for application startup.\r\nINFO:     Application startup complete.\r\nINFO:     Application startup complete.\r\nINFO:     Application startup complete.\r\nINFO:     Application startup complete.\r\nINFO:     127.0.0.1:50088 - \"POST /batchsearch HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:50092 - \"POST /batchsearch HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:50097 - \"POST /batchsearch HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:50102 - \"POST /batchsearch HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:50145 - \"POST /batchsearch HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:50145 - \"POST /batchsearch HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:50145 - \"POST /delete HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:50155 - \"POST /add HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:50155 - \"GET /upsert HTTP/1.1\" 500 Internal Server Error\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\uvicorn\\protocols\\http\\h11_impl.py\", line 408, in run_asgi\r\n    result = await app(  # type: ignore[func-returns-value]\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\uvicorn\\middleware\\proxy_headers.py\", line 84, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\fastapi\\applications.py\", line 289, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\applications.py\", line 122, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\middleware\\errors.py\", line 184, in __call__\r\n    raise exc\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\middleware\\errors.py\", line 162, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\r\n    raise exc\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\fastapi\\middleware\\asyncexitstack.py\", line 20, in __call__\r\n    raise e\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\fastapi\\middleware\\asyncexitstack.py\", line 17, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\routing.py\", line 718, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\routing.py\", line 276, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\routing.py\", line 66, in app\r\n    response = await func(request)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\fastapi\\routing.py\", line 273, in app\r\n    raw_response = await run_endpoint_function(\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\fastapi\\routing.py\", line 192, in run_endpoint_function\r\n    return await run_in_threadpool(dependant.call, **values)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\concurrency.py\", line 41, in run_in_threadpool\r\n    return await anyio.to_thread.run_sync(func, *args)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\anyio\\to_thread.py\", line 33, in run_sync\r\n    return await get_asynclib().run_sync_in_worker_thread(\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\anyio\\_backends\\_asyncio.py\", line 877, in run_sync_in_worker_thread\r\n    return await future\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\anyio\\_backends\\_asyncio.py\", line 807, in run\r\n    result = context.run(func, *args)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\txtai\\api\\routers\\embeddings.py\", line 88, in upsert\r\n    application.get().upsert()\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\txtai\\api\\base.py\", line 82, in upsert\r\n    super().upsert()\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\txtai\\app\\base.py\", line 412, in upsert\r\n    self.embeddings.save(self.config[\"path\"], self.config.get(\"cloud\"))\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\txtai\\embeddings\\base.py\", line 614, in save\r\n    self.database.save(f\"{path}/documents\")\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\txtai\\database\\embedded.py\", line 55, in save\r\n    self.connection.commit()\r\nsqlite3.OperationalError: database is locked\r\n```\r\n\r\nAs it looks like when search and upsert happens at the same time db lock issue is there with sqlite, I tried sqlite wal configuration. But again some errors I was facing when tried with multiple workers as follows,\r\n```\r\n# Index file path\r\npath: ./hybridindexsql\r\n# Allow indexing of documents\r\nwritable: True\r\n# Enbeddings index\r\nembeddings:\r\n  path: sentence-transformers/all-MiniLM-L6-v2\r\n  content: sqlite\r\n  sqlite:\r\n    wal: True\r\n  hybrid: True\r\n```\r\n1.\r\n```\r\nINFO:     127.0.0.1:53578 - \"POST /batchsearch HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:53495 - \"POST /batchsearch HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:53500 - \"POST /delete HTTP/1.1\" 500 Internal Server Error\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\uvicorn\\protocols\\http\\h11_impl.py\", line 408, in run_asgi\r\n    result = await app(  # type: ignore[func-returns-value]\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\uvicorn\\middleware\\proxy_headers.py\", line 84, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\fastapi\\applications.py\", line 289, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\applications.py\", line 122, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\middleware\\errors.py\", line 184, in __call__\r\n    raise exc\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\middleware\\errors.py\", line 162, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 79, in __call__\r\n    raise exc\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\middleware\\exceptions.py\", line 68, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\fastapi\\middleware\\asyncexitstack.py\", line 20, in __call__\r\n    raise e\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\fastapi\\middleware\\asyncexitstack.py\", line 17, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\routing.py\", line 718, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\routing.py\", line 276, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\routing.py\", line 66, in app\r\n    response = await func(request)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\fastapi\\routing.py\", line 273, in app\r\n    raw_response = await run_endpoint_function(\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\fastapi\\routing.py\", line 192, in run_endpoint_function\r\n    return await run_in_threadpool(dependant.call, **values)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\starlette\\concurrency.py\", line 41, in run_in_threadpool\r\n    return await anyio.to_thread.run_sync(func, *args)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\anyio\\to_thread.py\", line 33, in run_sync\r\n    return await get_asynclib().run_sync_in_worker_thread(\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\anyio\\_backends\\_asyncio.py\", line 877, in run_sync_in_worker_thread\r\n    return await future\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\anyio\\_backends\\_asyncio.py\", line 807, in run\r\n    result = context.run(func, *args)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\txtai\\api\\routers\\embeddings.py\", line 106, in delete\r\n    return application.get().delete(ids)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\txtai\\api\\base.py\", line 98, in delete\r\n    return super().delete(ids)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\txtai\\app\\base.py\", line 435, in delete\r\n    return self.embeddings.delete(ids)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\txtai\\embeddings\\base.py\", line 229, in delete\r\n    self.database.delete(deletes)\r\n  File \"C:\\Users\\sakash\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\txtai\\database\\rdbms.py\", line 78, in delete\r\n    self.cursor.execute(Statement.DELETE_DOCUMENTS)\r\nsqlite3.OperationalError: database is locked\r\nINFO:     127.0.0.1:53551 - \"POST /batchsearch HTTP/1.1\" 200 OK\r\nINFO:     127.0.0.1:53511 - \"POST /batchsearch HTTP/1.1\" 200 OK\r\n```\r\n2.\r\n```\r\nINFO:     10.46.0.6:46862 - \"POST /add HTTP/1.1\" 200 OK\r\nINFO:     10.46.0.6:46862 - \"GET /upsert HTTP/1.1\" 500 Internal Server Error\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/dist-packages/uvicorn/protocols/http/h11_impl.py\", line 408, in run_asgi\r\n    result = await app(  # type: ignore[func-returns-value]\r\n  File \"/usr/local/lib/python3.8/dist-packages/uvicorn/middleware/proxy_headers.py\", line 84, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"/usr/local/lib/python3.8/dist-packages/fastapi/applications.py\", line 292, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"/usr/local/lib/python3.8/dist-packages/starlette/applications.py\", line 122, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"/usr/local/lib/python3.8/dist-packages/starlette/middleware/errors.py\", line 184, in __call__\r\n    raise exc\r\n  File \"/usr/local/lib/python3.8/dist-packages/starlette/middleware/errors.py\", line 162, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"/usr/local/lib/python3.8/dist-packages/starlette/middleware/exceptions.py\", line 79, in __call__\r\n    raise exc\r\n  File \"/usr/local/lib/python3.8/dist-packages/starlette/middleware/exceptions.py\", line 68, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"/usr/local/lib/python3.8/dist-packages/fastapi/middleware/asyncexitstack.py\", line 20, in __call__\r\n    raise e\r\n  File \"/usr/local/lib/python3.8/dist-packages/fastapi/middleware/asyncexitstack.py\", line 17, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/usr/local/lib/python3.8/dist-packages/starlette/routing.py\", line 718, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"/usr/local/lib/python3.8/dist-packages/starlette/routing.py\", line 276, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"/usr/local/lib/python3.8/dist-packages/starlette/routing.py\", line 66, in app\r\n    response = await func(request)\r\n  File \"/usr/local/lib/python3.8/dist-packages/fastapi/routing.py\", line 273, in app\r\n    raw_response = await run_endpoint_function(\r\n  File \"/usr/local/lib/python3.8/dist-packages/fastapi/routing.py\", line 192, in run_endpoint_function\r\n    return await run_in_threadpool(dependant.call, **values)\r\n  File \"/usr/local/lib/python3.8/dist-packages/starlette/concurrency.py\", line 41, in run_in_threadpool\r\n    return await anyio.to_thread.run_sync(func, *args)\r\n  File \"/usr/local/lib/python3.8/dist-packages/anyio/to_thread.py\", line 33, in run_sync\r\n    return await get_asynclib().run_sync_in_worker_thread(\r\n  File \"/usr/local/lib/python3.8/dist-packages/anyio/_backends/_asyncio.py\", line 877, in run_sync_in_worker_thread\r\n    return await future\r\n  File \"/usr/local/lib/python3.8/dist-packages/anyio/_backends/_asyncio.py\", line 807, in run\r\n    result = context.run(func, *args)\r\n  File \"/usr/local/lib/python3.8/dist-packages/txtai/api/routers/embeddings.py\", line 88, in upsert\r\n    application.get().upsert()\r\n  File \"/usr/local/lib/python3.8/dist-packages/txtai/api/base.py\", line 82, in upsert\r\n    super().upsert()\r\n  File \"/usr/local/lib/python3.8/dist-packages/txtai/app/base.py\", line 412, in upsert\r\n    self.embeddings.save(self.config[\"path\"], self.config.get(\"cloud\"))\r\n  File \"/usr/local/lib/python3.8/dist-packages/txtai/embeddings/base.py\", line 614, in save\r\n    self.database.save(f\"{path}/documents\")\r\n  File \"/usr/local/lib/python3.8/dist-packages/txtai/database/embedded.py\", line 40, in save\r\n    connection = self.copy(path)\r\n  File \"/usr/local/lib/python3.8/dist-packages/txtai/database/sqlite.py\", line 55, in copy\r\n    self.connection.backup(connection)\r\nsqlite3.OperationalError: disk I/O error\r\nINFO:     10.46.0.6:46870 - \"POST /add HTTP/1.1\" 200 OK\r\n```\r\n3.\r\n```\r\nIndexError: index 13 is out of bounds for axis 0 with size 13\r\nINFO:     10.244.2.114:41636 - \"POST /batchsearch HTTP/1.1\" 500 Internal Server Error\r\nERROR:    Exception in ASGI application\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.8/dist-packages/uvicorn/protocols/http/h11_impl.py\", line 408, in run_asgi\r\n    result = await app(  # type: ignore[func-returns-value]\r\n  File \"/usr/local/lib/python3.8/dist-packages/uvicorn/middleware/proxy_headers.py\", line 84, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"/usr/local/lib/python3.8/dist-packages/fastapi/applications.py\", line 292, in __call__        \r\n    await super().__call__(scope, receive, send)\r\n  File \"/usr/local/lib/python3.8/dist-packages/starlette/applications.py\", line 122, in __call__      \r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"/usr/local/lib/python3.8/dist-packages/starlette/middleware/errors.py\", line 184, in __call__ \r\n    raise exc\r\n...\r\n  File \"/usr/lib/python3.8/multiprocessing/pool.py\", line 125, in worker\r\n    result = (True, func(*args, **kwds))\r\n  File \"/usr/lib/python3.8/multiprocessing/pool.py\", line 51, in starmapstar\r\n    return list(itertools.starmap(args[0], args[1]))\r\n  File \"/usr/local/lib/python3.8/dist-packages/txtai/scoring/base.py\", line 230, in search\r\n    scores = self.terms.search(query, limit)\r\n  File \"/usr/local/lib/python3.8/dist-packages/txtai/scoring/terms.py\", line 180, in search\r\n    uids, weights = self.weights(term)\r\n  File \"/usr/local/lib/python3.8/dist-packages/txtai/scoring/terms.py\", line 416, in weights\r\n    weights = self.score(np.frombuffer(freqs, dtype=np.int64), self.idf[term], lengths[uids]).astype(np.float32)\r\n```\r\n\r\npostgres: (tried following config with multi-workers, it worked without db lock issue, I could see the contents in postgres db directly also, but sometimes txtai gives empty response for search)\r\n```\r\nembeddings:\r\n  path: sentence-transformers/all-MiniLM-L6-v2\r\n  content: postgresql+psycopg2://postgres:postgres@localhost/postgres\r\n  hybrid: True\r\n```\r\nAny help, fix or workaround is much appreciated. Thank you.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/580/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/580/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/579",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/579/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/579/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/579/events",
        "html_url": "https://github.com/neuml/txtai/issues/579",
        "id": 1946055751,
        "node_id": "I_kwDOERCdB85z_nRH",
        "number": 579,
        "title": "Change format of the prompt in Extractor? ",
        "user": {
            "login": "vnguye65",
            "id": 56784141,
            "node_id": "MDQ6VXNlcjU2Nzg0MTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/56784141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vnguye65",
            "html_url": "https://github.com/vnguye65",
            "followers_url": "https://api.github.com/users/vnguye65/followers",
            "following_url": "https://api.github.com/users/vnguye65/following{/other_user}",
            "gists_url": "https://api.github.com/users/vnguye65/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vnguye65/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vnguye65/subscriptions",
            "organizations_url": "https://api.github.com/users/vnguye65/orgs",
            "repos_url": "https://api.github.com/users/vnguye65/repos",
            "events_url": "https://api.github.com/users/vnguye65/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vnguye65/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-10-16T20:40:52Z",
        "updated_at": "2023-10-19T19:16:03Z",
        "closed_at": "2023-10-19T19:16:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Is it possible to change the format of the prompt to have the context before the question in the `Extractor` class for a text generation model? ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/579/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/578",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/578/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/578/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/578/events",
        "html_url": "https://github.com/neuml/txtai/issues/578",
        "id": 1945292666,
        "node_id": "I_kwDOERCdB85z8s96",
        "number": 578,
        "title": "Is it possible to have 2 embedding models in txtai.embeddings.Embeddings? ",
        "user": {
            "login": "vnguye65",
            "id": 56784141,
            "node_id": "MDQ6VXNlcjU2Nzg0MTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/56784141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vnguye65",
            "html_url": "https://github.com/vnguye65",
            "followers_url": "https://api.github.com/users/vnguye65/followers",
            "following_url": "https://api.github.com/users/vnguye65/following{/other_user}",
            "gists_url": "https://api.github.com/users/vnguye65/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vnguye65/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vnguye65/subscriptions",
            "organizations_url": "https://api.github.com/users/vnguye65/orgs",
            "repos_url": "https://api.github.com/users/vnguye65/repos",
            "events_url": "https://api.github.com/users/vnguye65/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vnguye65/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-16T14:02:29Z",
        "updated_at": "2023-10-19T19:16:14Z",
        "closed_at": "2023-10-19T19:16:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Currently, the Embedding method only supports one embedding model \r\n```\r\nembeddings = Embeddings(path=\"sentence-transformers/nli-mpnet-base-v2\")\r\n```\r\nIs it possible to have 2 embedding models, eg. one to embed images and the other to embed texts in the vector database, so we can search for both images and texts in the same query? ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/578/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/577",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/577/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/577/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/577/events",
        "html_url": "https://github.com/neuml/txtai/issues/577",
        "id": 1943328328,
        "node_id": "I_kwDOERCdB85z1NZI",
        "number": 577,
        "title": "Extractor pipeline improvements",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-10-14T15:12:44Z",
        "updated_at": "2023-10-14T15:19:58Z",
        "closed_at": "2023-10-14T15:19:58Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Make the following changes to the extractor pipeline.\r\n\r\n- Modify check for scoring model to use the `isweighted()` method\r\n- Add kwargs to `__call__` method and pass to pipeline model\r\n- Update comments for consistency",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/577/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/577/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/576",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/576/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/576/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/576/events",
        "html_url": "https://github.com/neuml/txtai/issues/576",
        "id": 1942727344,
        "node_id": "I_kwDOERCdB85zy6qw",
        "number": 576,
        "title": "embeddings.search hangs indefinitely on Mac",
        "user": {
            "login": "tf13",
            "id": 16142258,
            "node_id": "MDQ6VXNlcjE2MTQyMjU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16142258?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tf13",
            "html_url": "https://github.com/tf13",
            "followers_url": "https://api.github.com/users/tf13/followers",
            "following_url": "https://api.github.com/users/tf13/following{/other_user}",
            "gists_url": "https://api.github.com/users/tf13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tf13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tf13/subscriptions",
            "organizations_url": "https://api.github.com/users/tf13/orgs",
            "repos_url": "https://api.github.com/users/tf13/repos",
            "events_url": "https://api.github.com/users/tf13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tf13/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-13T22:34:33Z",
        "updated_at": "2023-11-03T20:43:06Z",
        "closed_at": "2023-11-02T13:27:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Running OS 12.7 (Monterrey) on a MacBook Air (M1, 2020) with Python 3.11.5\r\n\r\nScript below \u2014\u00a0it should be effectively identical to the first example at https://neuml.hashnode.dev/tutorial-series-on-txtai\r\n\r\nIt failed in Spyder and also from the command line in Terminal (both with `python3 scriptname.py` and line by line after running `python3` on the command line). \r\n\r\nI then tried the same script on an Linux box I have access to, running Ubuntu 22.04.3 LTS. It worked fine as-is from the command line.\r\n\r\n```python\r\nfrom txtai import Embeddings\r\n\r\n# temp data\r\ndata = [\r\n  \"US tops 5 million confirmed virus cases\",\r\n  \"Canada's last fully intact ice shelf has suddenly collapsed, forming a Manhattan-sized iceberg\",\r\n  \"Beijing mobilises invasion craft along coast as Taiwan tensions escalate\",\r\n  \"The National Park Service warns against sacrificing slower friends in a bear attack\",\r\n  \"Maine man wins $1M from $25 lottery ticket\",\r\n  \"Make huge profits without work, earn up to $100,000 a day\"\r\n]\r\n\r\n# create embeddings\r\nembeddings = Embeddings(path=\"sentence-transformers/nli-mpnet-base-v2\")\r\n\r\n# create index for list of texts\r\nembeddings.index(data)\r\n\r\nprint(f\"{'Query':20} Best Match\")\r\nprint(\"-\" * 50)\r\n\r\n\r\nfor query in (\"feel good story\", \"climate change\", \"public health story\", \"war\",\r\n              \"wildlife\", \"asia\", \"lucky\", \"dishonest junk\"):\r\n    # Extract uid of first result\r\n    # search result format: (uid, score)\r\n    uid = embeddings.search(query)[0][0]\r\n\r\n    # Print text\r\n    print(f\"{query:20} {data[uid]}\")\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/576/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/576/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/575",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/575/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/575/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/575/events",
        "html_url": "https://github.com/neuml/txtai/issues/575",
        "id": 1940776729,
        "node_id": "I_kwDOERCdB85zrecZ",
        "number": 575,
        "title": "Is it possible to add chat history to extractor workflow?",
        "user": {
            "login": "vnguye65",
            "id": 56784141,
            "node_id": "MDQ6VXNlcjU2Nzg0MTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/56784141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vnguye65",
            "html_url": "https://github.com/vnguye65",
            "followers_url": "https://api.github.com/users/vnguye65/followers",
            "following_url": "https://api.github.com/users/vnguye65/following{/other_user}",
            "gists_url": "https://api.github.com/users/vnguye65/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vnguye65/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vnguye65/subscriptions",
            "organizations_url": "https://api.github.com/users/vnguye65/orgs",
            "repos_url": "https://api.github.com/users/vnguye65/repos",
            "events_url": "https://api.github.com/users/vnguye65/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vnguye65/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 4,
        "created_at": "2023-10-12T20:52:27Z",
        "updated_at": "2023-10-19T19:16:45Z",
        "closed_at": "2023-10-19T19:16:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have the following config.yml. Is it possible to add chat history to the template? \r\n```\r\nwritable: true\r\npath: index\r\n\r\nembeddings:\r\n  path: sentence-transformers/multi-qa-mpnet-base-dot-v1\r\n  content: true\r\n\r\nextractor:\r\n  path: google/flan-t5-base\r\n  context: 3\r\n  output: flatten\r\n\r\nworkflow:       \r\n  search:\r\n    tasks:\r\n      - task: extractor\r\n        template: |          \r\n          Chat history: \r\n          {history}\r\n          Answer the following question using only the context below and the above chat history. Say \"I don't have data on that\" when the question can't be answered.\r\n          Question: \r\n          {text}\r\n          Context: \r\n        \r\n        action: extractor\r\n\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/575/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/575/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/574",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/574/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/574/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/574/events",
        "html_url": "https://github.com/neuml/txtai/issues/574",
        "id": 1935740916,
        "node_id": "I_kwDOERCdB85zYQ_0",
        "number": 574,
        "title": "Need urgent help ",
        "user": {
            "login": "raaj1v",
            "id": 86911408,
            "node_id": "MDQ6VXNlcjg2OTExNDA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/86911408?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raaj1v",
            "html_url": "https://github.com/raaj1v",
            "followers_url": "https://api.github.com/users/raaj1v/followers",
            "following_url": "https://api.github.com/users/raaj1v/following{/other_user}",
            "gists_url": "https://api.github.com/users/raaj1v/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raaj1v/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raaj1v/subscriptions",
            "organizations_url": "https://api.github.com/users/raaj1v/orgs",
            "repos_url": "https://api.github.com/users/raaj1v/repos",
            "events_url": "https://api.github.com/users/raaj1v/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raaj1v/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-10T16:22:13Z",
        "updated_at": "2023-10-13T12:45:51Z",
        "closed_at": "2023-10-13T12:45:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm facing issues while creating semantic search for tabular data, Please help me , i tried several changes but not getting luck\r\n\r\n```\r\n# Build index with graph subindex\r\nembeddings = txtai.Embeddings(\r\n    content=True,\r\n    defaults=False,\r\n    functions=[\r\n        {\"name\": \"graph\", \"function\": \"indexes.act.graph.attribute\"}\r\n    ],\r\n    expressions=[\r\n        {\"name\": \"topic\", \"expression\": \"graph(indexid, 'topic')\"},\r\n    ],\r\n    indexes={\r\n        \"keywordProductTenderBrief\": {\r\n            \"path\": \"sentence-transformers/quora-distilbert-multilingual\",\r\n            \"columns\": {\r\n                \"text\": \"Keyword\",\r\n                \"text\": \"productname\",\r\n                \"text\": \"TenderBrief\"\r\n            },\r\n            \"graph\": {\r\n                \"topics\": {}\r\n            }\r\n        },\r\n        \"LocationIndex\":{\r\n            \"path\": \"sentence-transformers/quora-distilbert-multilingual\",\r\n            \"columns\": {\r\n                \"text\": \"City\",\r\n                \"text\": \"State\"\r\n            }\r\n        }\r\n    }\r\n)\r\n```\r\n\r\nthis is my current embedding generation process as demonstrated in an example. I want to create hybrid semantic search for my tender dataset but the results are not that great, I'm not getting how to create multiple indexes properly or what are their applications. please help ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/574/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/574/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/573",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/573/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/573/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/573/events",
        "html_url": "https://github.com/neuml/txtai/issues/573",
        "id": 1935368494,
        "node_id": "I_kwDOERCdB85zW2Eu",
        "number": 573,
        "title": "Update recommended models",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-10-10T13:24:04Z",
        "updated_at": "2023-10-10T13:37:37Z",
        "closed_at": "2023-10-10T13:37:36Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Review and update recommended models. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/573/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/573/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/572",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/572/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/572/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/572/events",
        "html_url": "https://github.com/neuml/txtai/issues/572",
        "id": 1934272304,
        "node_id": "I_kwDOERCdB85zSqcw",
        "number": 572,
        "title": "Stuck in loop with installing txtai[pipeline]",
        "user": {
            "login": "noiraku",
            "id": 28658576,
            "node_id": "MDQ6VXNlcjI4NjU4NTc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/28658576?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noiraku",
            "html_url": "https://github.com/noiraku",
            "followers_url": "https://api.github.com/users/noiraku/followers",
            "following_url": "https://api.github.com/users/noiraku/following{/other_user}",
            "gists_url": "https://api.github.com/users/noiraku/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noiraku/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noiraku/subscriptions",
            "organizations_url": "https://api.github.com/users/noiraku/orgs",
            "repos_url": "https://api.github.com/users/noiraku/repos",
            "events_url": "https://api.github.com/users/noiraku/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noiraku/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-10T03:40:44Z",
        "updated_at": "2023-10-10T13:51:05Z",
        "closed_at": "2023-10-10T13:51:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "It fails installing the fasttext, i tried every way to make it pass but no, install pyproject.toml doesnt work, fasttext-wheel doesnt work either, tried older versions but im literally new on this debugging installation i have no idea and im lost.\r\nAnyway to install this? :(\r\nIm using venv\r\n\r\n> pip install txtai[pipeline]\r\n> Requirement already satisfied: txtai[pipeline] in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (6.1.0)\r\n> Requirement already satisfied: faiss-cpu>=1.7.1.post2 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from txtai[pipeline]) (1.7.4)\r\n> Requirement already satisfied: torch>=1.12.1 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from txtai[pipeline]) (2.1.0)\r\n> Requirement already satisfied: transformers>=4.22.0 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from txtai[pipeline]) (4.34.0)\r\n> Requirement already satisfied: huggingface-hub>=0.9.0 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from txtai[pipeline]) (0.17.3)\r\n> Requirement already satisfied: numpy>=1.18.4 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from txtai[pipeline]) (1.26.0)\r\n> Requirement already satisfied: pyyaml>=5.3 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from txtai[pipeline]) (6.0.1)\r\n> Requirement already satisfied: regex>=2022.8.17 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from txtai[pipeline]) (2023.10.3)\r\n> Collecting onnx>=1.11.0 (from txtai[pipeline])\r\n>   Obtaining dependency information for onnx>=1.11.0 from https://files.pythonhosted.org/packages/00/36/e7a7e7a85564e7d409e4e8addfa11d41015d2190bfff30064771e7c21ca0/onnx-1.14.1-cp310-cp310-win_amd64.whl.metadata\r\n>   Using cached onnx-1.14.1-cp310-cp310-win_amd64.whl.metadata (15 kB)\r\n> Collecting onnxruntime>=1.11.0 (from txtai[pipeline])\r\n>   Obtaining dependency information for onnxruntime>=1.11.0 from https://files.pythonhosted.org/packages/e6/b5/34dee2624c30325377271d0f3d18dbb54f1d413f7af1d505a5b5ddb4ae5e/onnxruntime-1.16.0-cp310-cp310-win_amd64.whl.metadata\r\n>   Using cached onnxruntime-1.16.0-cp310-cp310-win_amd64.whl.metadata (4.2 kB)\r\n> Collecting soundfile>=0.10.3.post1 (from txtai[pipeline])\r\n>   Using cached soundfile-0.12.1-py2.py3-none-win_amd64.whl (1.0 MB)\r\n> Collecting scipy>=1.4.1 (from txtai[pipeline])\r\n>   Obtaining dependency information for scipy>=1.4.1 from https://files.pythonhosted.org/packages/3a/98/3041681b3a0fef0f59033861a05d846aa1d284b07b531ce35b1b97cc2e93/scipy-1.11.3-cp310-cp310-win_amd64.whl.metadata\r\n>   Using cached scipy-1.11.3-cp310-cp310-win_amd64.whl.metadata (60 kB)\r\n> Collecting ttstokenizer>=1.0.0 (from txtai[pipeline])\r\n>   Using cached ttstokenizer-1.0.0-py3-none-any.whl (3.1 MB)\r\n> Requirement already satisfied: beautifulsoup4>=4.9.3 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from txtai[pipeline]) (4.12.2)\r\n> Requirement already satisfied: nltk>=3.5 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from txtai[pipeline]) (3.8.1)\r\n> Collecting pandas>=1.1.0 (from txtai[pipeline])\r\n>   Obtaining dependency information for pandas>=1.1.0 from https://files.pythonhosted.org/packages/ce/cd/a7c2cbffe2afff975349e60b14b63a448162145a7acac8ba12ddc2ed78a8/pandas-2.1.1-cp310-cp310-win_amd64.whl.metadata\r\n>   Using cached pandas-2.1.1-cp310-cp310-win_amd64.whl.metadata (18 kB)\r\n> Collecting tika>=1.24 (from txtai[pipeline])\r\n>   Using cached tika-2.6.0-py3-none-any.whl\r\n> Collecting imagehash>=4.2.1 (from txtai[pipeline])\r\n>   Using cached ImageHash-4.3.1-py2.py3-none-any.whl (296 kB)\r\n> Collecting pillow>=7.1.2 (from txtai[pipeline])\r\n>   Obtaining dependency information for pillow>=7.1.2 from https://files.pythonhosted.org/packages/23/ca/7296d769f62266c0f94bf76496bc77114e7a96d2de3d7bcba91d0ba2856f/Pillow-10.0.1-cp310-cp310-win_amd64.whl.metadata\r\n>   Using cached Pillow-10.0.1-cp310-cp310-win_amd64.whl.metadata (9.6 kB)\r\n> Collecting timm>=0.4.12 (from txtai[pipeline])\r\n>   Obtaining dependency information for timm>=0.4.12 from https://files.pythonhosted.org/packages/7a/bd/2c56be7a3b5bc71cf85a405246b89d5359f942c9f7fb6db6306d9d056092/timm-0.9.7-py3-none-any.whl.metadata\r\n>   Using cached timm-0.9.7-py3-none-any.whl.metadata (58 kB)\r\n> Collecting fasttext>=0.9.2 (from txtai[pipeline])\r\n>   Using cached fasttext-0.9.2.tar.gz (68 kB)\r\n>   Preparing metadata (setup.py) ... done\r\n> Collecting sentencepiece>=0.1.91 (from txtai[pipeline])\r\n>   Using cached sentencepiece-0.1.99-cp310-cp310-win_amd64.whl (977 kB)\r\n> Collecting accelerate>=0.19.0 (from txtai[pipeline])\r\n>   Obtaining dependency information for accelerate>=0.19.0 from https://files.pythonhosted.org/packages/d9/92/2d3aecf9f4a192968035880be3e2fc8b48d541c7128f7c936f430d6f96da/accelerate-0.23.0-py3-none-any.whl.metadata\r\n>   Using cached accelerate-0.23.0-py3-none-any.whl.metadata (18 kB)\r\n> Collecting onnxmltools>=1.9.1 (from txtai[pipeline])\r\n>   Using cached onnxmltools-1.11.2-py2.py3-none-any.whl (322 kB)\r\n> Requirement already satisfied: packaging>=20.0 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from accelerate>=0.19.0->txtai[pipeline]) (23.2)\r\n> Collecting psutil (from accelerate>=0.19.0->txtai[pipeline])\r\n>   Using cached psutil-5.9.5-cp36-abi3-win_amd64.whl (255 kB)\r\n> Requirement already satisfied: soupsieve>1.2 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from beautifulsoup4>=4.9.3->txtai[pipeline]) (2.5)\r\n> Requirement already satisfied: pybind11>=2.2 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from fasttext>=0.9.2->txtai[pipeline]) (2.11.1)\r\n> Requirement already satisfied: setuptools>=0.7.0 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from fasttext>=0.9.2->txtai[pipeline]) (65.5.0)\r\n> Requirement already satisfied: filelock in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from huggingface-hub>=0.9.0->txtai[pipeline]) (3.12.4)\r\n> Requirement already satisfied: fsspec in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from huggingface-hub>=0.9.0->txtai[pipeline]) (2023.9.2)\r\n> Requirement already satisfied: requests in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from huggingface-hub>=0.9.0->txtai[pipeline]) (2.31.0)\r\n> Requirement already satisfied: tqdm>=4.42.1 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from huggingface-hub>=0.9.0->txtai[pipeline]) (4.66.1)\r\n> Requirement already satisfied: typing-extensions>=3.7.4.3 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from huggingface-hub>=0.9.0->txtai[pipeline]) (4.8.0)\r\n> Collecting PyWavelets (from imagehash>=4.2.1->txtai[pipeline])\r\n>   Using cached PyWavelets-1.4.1-cp310-cp310-win_amd64.whl (4.2 MB)\r\n> Requirement already satisfied: click in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from nltk>=3.5->txtai[pipeline]) (8.1.7)\r\n> Requirement already satisfied: joblib in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from nltk>=3.5->txtai[pipeline]) (1.3.2)\r\n> Collecting protobuf>=3.20.2 (from onnx>=1.11.0->txtai[pipeline])\r\n>   Obtaining dependency information for protobuf>=3.20.2 from https://files.pythonhosted.org/packages/c2/59/f89c04923d68595d359f4cd7adbbdf5e5d791257945f8873d88b2fd1f979/protobuf-4.24.4-cp310-abi3-win_amd64.whl.metadata\r\n>   Using cached protobuf-4.24.4-cp310-abi3-win_amd64.whl.metadata (540 bytes)\r\n> Collecting skl2onnx (from onnxmltools>=1.9.1->txtai[pipeline])\r\n>   Obtaining dependency information for skl2onnx from https://files.pythonhosted.org/packages/c0/d1/ef96f715f14ab4a11a4382e3eb9fc7a57ee59e3527253a7b21d62ca20402/skl2onnx-1.15.0-py2.py3-none-any.whl.metadata\r\n>   Using cached skl2onnx-1.15.0-py2.py3-none-any.whl.metadata (2.3 kB)\r\n> Collecting coloredlogs (from onnxruntime>=1.11.0->txtai[pipeline])\r\n>   Using cached coloredlogs-15.0.1-py2.py3-none-any.whl (46 kB)\r\n> Collecting flatbuffers (from onnxruntime>=1.11.0->txtai[pipeline])\r\n>   Obtaining dependency information for flatbuffers from https://files.pythonhosted.org/packages/6f/12/d5c79ee252793ffe845d58a913197bfa02ae9a0b5c9bc3dc4b58d477b9e7/flatbuffers-23.5.26-py2.py3-none-any.whl.metadata\r\n>   Using cached flatbuffers-23.5.26-py2.py3-none-any.whl.metadata (850 bytes)\r\n> Requirement already satisfied: sympy in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from onnxruntime>=1.11.0->txtai[pipeline]) (1.12)\r\n> Collecting python-dateutil>=2.8.2 (from pandas>=1.1.0->txtai[pipeline])\r\n>   Using cached python_dateutil-2.8.2-py2.py3-none-any.whl (247 kB)     \r\n> Collecting pytz>=2020.1 (from pandas>=1.1.0->txtai[pipeline])\r\n>   Obtaining dependency information for pytz>=2020.1 from https://files.pythonhosted.org/packages/32/4d/aaf7eff5deb402fd9a24a1449a8119f00d74ae9c2efa79f8ef9994261fc2/pytz-2023.3.post1-py2.py3-none-any.whl.metadata\r\n>   Using cached pytz-2023.3.post1-py2.py3-none-any.whl.metadata (22 kB)\r\n> Collecting tzdata>=2022.1 (from pandas>=1.1.0->txtai[pipeline])\r\n>   Using cached tzdata-2023.3-py2.py3-none-any.whl (341 kB)\r\n> Collecting cffi>=1.0 (from soundfile>=0.10.3.post1->txtai[pipeline])\r\n>   Obtaining dependency information for cffi>=1.0 from https://files.pythonhosted.org/packages/be/3e/0b197d1bfbf386a90786b251dbf2634a15f2ea3d4e4070e99c7d1c7689cf/cffi-1.16.0-cp310-cp310-win_amd64.whl.metadata\r\n>   Using cached cffi-1.16.0-cp310-cp310-win_amd64.whl.metadata (1.5 kB)\r\n> Collecting torchvision (from timm>=0.4.12->txtai[pipeline])\r\n>   Obtaining dependency information for torchvision from https://files.pythonhosted.org/packages/59/af/426c2b90f5c4f8aba778746465af9e662680570e950e02379e91c6138285/torchvision-0.16.0-cp310-cp310-win_amd64.whl.metadata\r\n>   Using cached torchvision-0.16.0-cp310-cp310-win_amd64.whl.metadata (6.6 kB)\r\n> Requirement already satisfied: safetensors in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from timm>=0.4.12->txtai[pipeline]) (0.4.0)\r\n> Requirement already satisfied: networkx in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from torch>=1.12.1->txtai[pipeline]) (3.1)\r\n> Requirement already satisfied: jinja2 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from torch>=1.12.1->txtai[pipeline]) (3.1.2)\r\n> Requirement already satisfied: tokenizers<0.15,>=0.14 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from transformers>=4.22.0->txtai[pipeline]) (0.14.1)\r\n> Collecting anyascii>=0.3.1 (from ttstokenizer>=1.0.0->txtai[pipeline])\r\n>   Using cached anyascii-0.3.2-py3-none-any.whl (289 kB)\r\n> Collecting inflect>=0.3.1 (from ttstokenizer>=1.0.0->txtai[pipeline])\r\n>   Obtaining dependency information for inflect>=0.3.1 from https://files.pythonhosted.org/packages/fb/c6/d9feb758be584f729424390af24687d3a4363d968164f94079f83cd536b4/inflect-7.0.0-py3-none-any.whl.metadata\r\n>   Using cached inflect-7.0.0-py3-none-any.whl.metadata (21 kB)\r\n> Collecting pycparser (from cffi>=1.0->soundfile>=0.10.3.post1->txtai[pipeline])\r\n>   Using cached pycparser-2.21-py2.py3-none-any.whl (118 kB)\r\n> Requirement already satisfied: pydantic>=1.9.1 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from inflect>=0.3.1->ttstokenizer>=1.0.0->txtai[pipeline]) (2.4.2)\r\n> Requirement already satisfied: six>=1.5 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from python-dateutil>=2.8.2->pandas>=1.1.0->txtai[pipeline]) (1.16.0)\r\n> Requirement already satisfied: colorama in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from tqdm>=4.42.1->huggingface-hub>=0.9.0->txtai[pipeline]) (0.4.6)\r\n> Collecting humanfriendly>=9.1 (from coloredlogs->onnxruntime>=1.11.0->txtai[pipeline])\r\n>   Using cached humanfriendly-10.0-py2.py3-none-any.whl (86 kB)\r\n> Requirement already satisfied: MarkupSafe>=2.0 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from jinja2->torch>=1.12.1->txtai[pipeline]) (2.1.3)\r\n> Requirement already satisfied: charset-normalizer<4,>=2 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from requests->huggingface-hub>=0.9.0->txtai[pipeline]) (3.3.0)\r\n> Requirement already satisfied: idna<4,>=2.5 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from requests->huggingface-hub>=0.9.0->txtai[pipeline]) (3.4)\r\n> Requirement already satisfied: urllib3<3,>=1.21.1 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from requests->huggingface-hub>=0.9.0->txtai[pipeline]) (2.0.6)    \r\n> Requirement already satisfied: certifi>=2017.4.17 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from requests->huggingface-hub>=0.9.0->txtai[pipeline]) (2023.7.22)\r\n> Collecting scikit-learn>=0.19 (from skl2onnx->onnxmltools>=1.9.1->txtai[pipeline])\r\n>   Obtaining dependency information for scikit-learn>=0.19 from https://files.pythonhosted.org/packages/59/ed/548f6f686845d386a727a51a3daa411d95fc599649a2d54705f6773ac259/scikit_learn-1.3.1-cp310-cp310-win_amd64.whl.metadata\r\n>   Using cached scikit_learn-1.3.1-cp310-cp310-win_amd64.whl.metadata (11 kB)\r\n> Collecting onnxconverter-common>=1.7.0 (from skl2onnx->onnxmltools>=1.9.1->txtai[pipeline])\r\n>   Obtaining dependency information for onnxconverter-common>=1.7.0 from https://files.pythonhosted.org/packages/6d/6a/9ed9fd4da34cb41fda35bc5cc9e990c605689db7de63ed84fedbca5a77f6/onnxconverter_common-1.14.0-py2.py3-none-any.whl.metadata\r\n>   Using cached onnxconverter_common-1.14.0-py2.py3-none-any.whl.metadata (4.2 kB)\r\n> Requirement already satisfied: mpmath>=0.19 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from sympy->onnxruntime>=1.11.0->txtai[pipeline]) (1.3.0)\r\n> Collecting pyreadline3 (from humanfriendly>=9.1->coloredlogs->onnxruntime>=1.11.0->txtai[pipeline])\r\n>   Using cached pyreadline3-3.4.1-py3-none-any.whl (95 kB)\r\n> Collecting protobuf>=3.20.2 (from onnx>=1.11.0->txtai[pipeline])\r\n>   Using cached protobuf-3.20.2-cp310-cp310-win_amd64.whl (904 kB)\r\n> Requirement already satisfied: annotated-types>=0.4.0 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from pydantic>=1.9.1->inflect>=0.3.1->ttstokenizer>=1.0.0->txtai[pipeline]) (0.5.0)\r\n> Requirement already satisfied: pydantic-core==2.10.1 in c:\\users\\administrator\\desktop\\noiraaidcbot\\.venv\\lib\\site-packages (from pydantic>=1.9.1->inflect>=0.3.1->ttstokenizer>=1.0.0->txtai[pipeline]) (2.10.1)\r\n> Collecting threadpoolctl>=2.0.0 (from scikit-learn>=0.19->skl2onnx->onnxmltools>=1.9.1->txtai[pipeline])\r\n>   Obtaining dependency information for threadpoolctl>=2.0.0 from https://files.pythonhosted.org/packages/81/12/fd4dea011af9d69e1cad05c75f3f7202cdcbeac9b712eea58ca779a72865/threadpoolctl-3.2.0-py3-none-any.whl.metadata\r\n>   Using cached threadpoolctl-3.2.0-py3-none-any.whl.metadata (10.0 kB)\r\n> Using cached accelerate-0.23.0-py3-none-any.whl (258 kB)\r\n> Using cached onnx-1.14.1-cp310-cp310-win_amd64.whl (13.3 MB)\r\n> Using cached onnxruntime-1.16.0-cp310-cp310-win_amd64.whl (7.2 MB)\r\n> Using cached pandas-2.1.1-cp310-cp310-win_amd64.whl (10.7 MB)\r\n> Using cached Pillow-10.0.1-cp310-cp310-win_amd64.whl (2.5 MB)\r\n> Using cached scipy-1.11.3-cp310-cp310-win_amd64.whl (44.1 MB)\r\n> Using cached timm-0.9.7-py3-none-any.whl (2.2 MB)\r\n> Using cached cffi-1.16.0-cp310-cp310-win_amd64.whl (181 kB)\r\n> Using cached inflect-7.0.0-py3-none-any.whl (34 kB)\r\n> Using cached pytz-2023.3.post1-py2.py3-none-any.whl (502 kB)\r\n> Using cached flatbuffers-23.5.26-py2.py3-none-any.whl (26 kB)\r\n> Using cached skl2onnx-1.15.0-py2.py3-none-any.whl (294 kB)\r\n> Using cached torchvision-0.16.0-cp310-cp310-win_amd64.whl (1.3 MB)\r\n> Using cached onnxconverter_common-1.14.0-py2.py3-none-any.whl (84 kB)\r\n> Using cached scikit_learn-1.3.1-cp310-cp310-win_amd64.whl (9.3 MB)\r\n> Using cached threadpoolctl-3.2.0-py3-none-any.whl (15 kB)\r\n> Building wheels for collected packages: fasttext\r\n>   Building wheel for fasttext (setup.py) ... error\r\n>   error: subprocess-exited-with-error\r\n> \r\n>   \u00d7 python setup.py bdist_wheel did not run successfully.\r\n>   \u2502 exit code: 1\r\n>   \u2570\u2500> [52 lines of output]\r\n>       c:\\Users\\Administrator\\Desktop\\NoiraAIDCbot\\.venv\\lib\\site-packages\\setuptools\\dist.py:771: UserWarning: Usage of dash-separated 'description-file' will not be supported in future versions. Please use the underscore name 'description_file' instead\r\n>         warnings.warn(\r\n>       running bdist_wheel\r\n>       running build\r\n>       running build_py\r\n>       creating build\r\n>       creating build\\lib.win-amd64-cpython-310\r\n>       creating build\\lib.win-amd64-cpython-310\\fasttext\r\n>       copying python\\fasttext_module\\fasttext\\FastText.py -> build\\lib.win-amd64-cpython-310\\fasttext\r\n>       copying python\\fasttext_module\\fasttext\\__init__.py -> build\\lib.win-amd64-cpython-310\\fasttext\r\n>       creating build\\lib.win-amd64-cpython-310\\fasttext\\util\r\n>       copying python\\fasttext_module\\fasttext\\util\\util.py -> build\\lib.win-amd64-cpython-310\\fasttext\\util\r\n>       copying python\\fasttext_module\\fasttext\\util\\__init__.py -> build\\lib.win-amd64-cpython-310\\fasttext\\util\r\n>       creating build\\lib.win-amd64-cpython-310\\fasttext\\tests\r\n>       copying python\\fasttext_module\\fasttext\\tests\\test_configurations.py -> build\\lib.win-amd64-cpython-310\\fasttext\\tests\r\n>       copying python\\fasttext_module\\fasttext\\tests\\test_script.py -> build\\lib.win-amd64-cpython-310\\fasttext\\tests\r\n>       copying python\\fasttext_module\\fasttext\\tests\\__init__.py -> build\\lib.win-amd64-cpython-310\\fasttext\\tests\r\n>       running build_ext\r\n>       building 'fasttext_pybind' extension\r\n>       creating build\\temp.win-amd64-cpython-310\r\n>       creating build\\temp.win-amd64-cpython-310\\Release\r\n>       creating build\\temp.win-amd64-cpython-310\\Release\\python\r\n>       creating build\\temp.win-amd64-cpython-310\\Release\\python\\fasttext_module\r\n>       creating build\\temp.win-amd64-cpython-310\\Release\\python\\fasttext_module\\fasttext\r\n>       creating build\\temp.win-amd64-cpython-310\\Release\\python\\fasttext_module\\fasttext\\pybind\r\n>       creating build\\temp.win-amd64-cpython-310\\Release\\src\r\n>       \"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.29.30133\\bin\\HostX86\\x64\\cl.exe\" /c /nologo /O2 /W3 /GL /DNDEBUG /MD -Ic:\\Users\\Administrator\\Desktop\\NoiraAIDCbot\\.venv\\lib\\site-packages\\pybind11\\include -Ic:\\Users\\Administrator\\Desktop\\NoiraAIDCbot\\.venv\\lib\\site-packages\\pybind11\\include -Isrc -Ic:\\Users\\Administrator\\Desktop\\NoiraAIDCbot\\.venv\\include -IC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python310\\include -IC:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python310\\Include \"-IC:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.29.30133\\include\" \"-IC:\\Program Files (x86)\\Windows Kits\\NETFXSDK\\4.8\\include\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\ucrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\shared\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\um\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\winrt\" \"-IC:\\Program Files (x86)\\Windows Kits\\10\\include\\10.0.19041.0\\cppwinrt\" /EHsc /Tppython/fasttext_module/fasttext/pybind/fasttext_pybind.cc /Fobuild\\temp.win-amd64-cpython-310\\Release\\python/fasttext_module/fasttext/pybind/fasttext_pybind.obj /EHsc /DVERSION_INFO=\\\\\\\"0.9.2\\\\\\\"\r\n>       fasttext_pybind.cc\r\n>       python/fasttext_module/fasttext/pybind/fasttext_pybind.cc(171): error C2065: 'ssize_t': undeclared identifier\r\n>       python/fasttext_module/fasttext/pybind/fasttext_pybind.cc(171): error C2672: 'pybind11::init': no matching overloaded function found\r\n>       python/fasttext_module/fasttext/pybind/fasttext_pybind.cc(170): error C2974: 'pybind11::init': invalid template argument for 'CFunc', type expected\r\n>       c:\\Users\\Administrator\\Desktop\\NoiraAIDCbot\\.venv\\lib\\site-packages\\pybind11\\include\\pybind11\\pybind11.h(1932): note: see declaration of 'pybind11::init'\r\n>       python/fasttext_module/fasttext/pybind/fasttext_pybind.cc(170): error C2974: 'pybind11::init': invalid template argument for 'Func', type expected\r\n>       c:\\Users\\Administrator\\Desktop\\NoiraAIDCbot\\.venv\\lib\\site-packages\\pybind11\\include\\pybind11\\pybind11.h(1924): note: see declaration of 'pybind11::init'\r\n>       python/fasttext_module/fasttext/pybind/fasttext_pybind.cc(170): error C2974: 'pybind11::init': invalid template argument for 'Args', type expected\r\n>       c:\\Users\\Administrator\\Desktop\\NoiraAIDCbot\\.venv\\lib\\site-packages\\pybind11\\include\\pybind11\\pybind11.h(1912): note: see declaration of 'pybind11::init'\r\n>       python/fasttext_module/fasttext/pybind/fasttext_pybind.cc(171): error C2672: 'pybind11::class_<fasttext::Vector>::def': no matching overloaded function found\r\n>       python/fasttext_module/fasttext/pybind/fasttext_pybind.cc(170): error C2780: 'pybind11::class_<fasttext::Vector> &pybind11::class_<fasttext::Vector>::def(const char *,Func &&,const Extra &...)': expects 3 arguments - 1 provided\r\n>       c:\\Users\\Administrator\\Desktop\\NoiraAIDCbot\\.venv\\lib\\site-packages\\pybind11\\include\\pybind11\\pybind11.h(1574): note: see declaration of 'pybind11::class_<fasttext::Vector>::def'\r\n>       python/fasttext_module/fasttext/pybind/fasttext_pybind.cc(185): error C2065: 'ssize_t': undeclared identifier\r\n>       python/fasttext_module/fasttext/pybind/fasttext_pybind.cc(185): error C2065: 'ssize_t': undeclared identifier\r\n>       python/fasttext_module/fasttext/pybind/fasttext_pybind.cc(185): error C2672: 'pybind11::init': no matching overloaded function found\r\n>       python/fasttext_module/fasttext/pybind/fasttext_pybind.cc(182): error C2974: 'pybind11::init': invalid template argument for 'CFunc', type expected\r\n>       c:\\Users\\Administrator\\Desktop\\NoiraAIDCbot\\.venv\\lib\\site-packages\\pybind11\\include\\pybind11\\pybind11.h(1932): note: see declaration of 'pybind11::init'\r\n>       python/fasttext_module/fasttext/pybind/fasttext_pybind.cc(182): error C2974: 'pybind11::init': invalid template argument for 'Func', type expected\r\n>       c:\\Users\\Administrator\\Desktop\\NoiraAIDCbot\\.venv\\lib\\site-packages\\pybind11\\include\\pybind11\\pybind11.h(1924): note: see declaration of 'pybind11::init'\r\n>       python/fasttext_module/fasttext/pybind/fasttext_pybind.cc(182): error C2974: 'pybind11::init': invalid template argument for 'Args', type expected\r\n>       c:\\Users\\Administrator\\Desktop\\NoiraAIDCbot\\.venv\\lib\\site-packages\\pybind11\\include\\pybind11\\pybind11.h(1912): note: see declaration of 'pybind11::init'\r\n>       python/fasttext_module/fasttext/pybind/fasttext_pybind.cc(185): error C2672: 'pybind11::class_<fasttext::DenseMatrix>::def': no matching overloaded function found\r\n>       python/fasttext_module/fasttext/pybind/fasttext_pybind.cc(182): error C2780: 'pybind11::class_<fasttext::DenseMatrix> &pybind11::class_<fasttext::DenseMatrix>::def(const char *,Func &&,const Extra &...)': expects 3 arguments - 1 provided\r\n>       c:\\Users\\Administrator\\Desktop\\NoiraAIDCbot\\.venv\\lib\\site-packages\\pybind11\\include\\pybind11\\pybind11.h(1574): note: see declaration of 'pybind11::class_<fasttext::DenseMatrix>::def'\r\n>       error: command 'C:\\\\Program Files (x86)\\\\Microsoft Visual Studio\\\\2019\\\\BuildTools\\\\VC\\\\Tools\\\\MSVC\\\\14.29.30133\\\\bin\\\\HostX86\\\\x64\\\\cl.exe' failed with exit code 2\r\n>       [end of output]\r\n> \r\n>   note: This error originates from a subprocess, and is likely not a problem with pip.\r\n>   ERROR: Failed building wheel for fasttext\r\n>   Running setup.py clean for fasttext\r\n> Failed to build fasttext\r\n> ERROR: Could not build wheels for fasttext, which is required to install pyproject.toml-based projects",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/572/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/572/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/571",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/571/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/571/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/571/events",
        "html_url": "https://github.com/neuml/txtai/issues/571",
        "id": 1933432486,
        "node_id": "I_kwDOERCdB85zPdam",
        "number": 571,
        "title": "Inconsistency in Embeddings behavior in Applications",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2264734939,
                "node_id": "MDU6TGFiZWwyMjY0NzM0OTM5",
                "url": "https://api.github.com/repos/neuml/txtai/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-10-09T16:33:11Z",
        "updated_at": "2023-10-09T20:38:37Z",
        "closed_at": "2023-10-09T20:38:37Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, the `index` and `upsert` operations `save` the underlying `Embeddings` instance with each call. But `delete` and `reindex` are not behaving that way. These methods should be made to behave consistently.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/571/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/571/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/570",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/570/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/570/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/570/events",
        "html_url": "https://github.com/neuml/txtai/issues/570",
        "id": 1931306170,
        "node_id": "I_kwDOERCdB85zHWS6",
        "number": 570,
        "title": "your example",
        "user": {
            "login": "legaltextai",
            "id": 144342123,
            "node_id": "U_kgDOCJp8aw",
            "avatar_url": "https://avatars.githubusercontent.com/u/144342123?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/legaltextai",
            "html_url": "https://github.com/legaltextai",
            "followers_url": "https://api.github.com/users/legaltextai/followers",
            "following_url": "https://api.github.com/users/legaltextai/following{/other_user}",
            "gists_url": "https://api.github.com/users/legaltextai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/legaltextai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/legaltextai/subscriptions",
            "organizations_url": "https://api.github.com/users/legaltextai/orgs",
            "repos_url": "https://api.github.com/users/legaltextai/repos",
            "events_url": "https://api.github.com/users/legaltextai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/legaltextai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-07T11:02:13Z",
        "updated_at": "2023-10-19T19:17:36Z",
        "closed_at": "2023-10-19T19:17:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "first off, thank you for this great contribution, documentation and samples. i can't even imagine how much time was invested into this. thank you! \r\nsecond, i have a question about this part of the code: \r\n\r\n`tabular = Tabular(\"url\", [\"title\"], True)\r\n\r\nworkflow = Workflow([Task(tabular)])\r\n\r\nembeddings = Embeddings({\"method\": \"transformers\", \"path\": \"sentence-transformers/paraphrase-mpnet-base-v2\", \"content\": True})\r\n\r\ndata = list(workflow([\"input.csv\"]))\r\nembeddings.index(data)\r\n\r\nfor result in embeddings.search(\"select title, abstract, authors, doi from txtai where similar('insulin')\"):\r\n    print(json.dumps(result, default=str, indent=2))`\r\n\r\nit seems to embed url and title only, but then searches through abstracts and authors too? or does it just show abstracts for similarity search on titles? ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/570/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/570/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/569",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/569/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/569/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/569/events",
        "html_url": "https://github.com/neuml/txtai/issues/569",
        "id": 1924527784,
        "node_id": "I_kwDOERCdB85ytfao",
        "number": 569,
        "title": "Add parameter to RetrieveTask to disable directory flattening",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-10-03T16:36:26Z",
        "updated_at": "2023-10-03T16:43:29Z",
        "closed_at": "2023-10-03T16:43:28Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, the `RetrieveTask` flattens input URLs to the file level. While this should continue to be the default behavior, a new parameter named `flatten` should be added to disable this functionality. When disabled, the relative URL path will be created locally. This is useful when the `RetrieveTask` is used as a following on task to a `StorageTask` with prefix filtering enabled. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/569/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/569/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/568",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/568/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/568/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/568/events",
        "html_url": "https://github.com/neuml/txtai/issues/568",
        "id": 1920193809,
        "node_id": "I_kwDOERCdB85yc9UR",
        "number": 568,
        "title": "Add prefix parameter for object storage",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-09-30T09:41:20Z",
        "updated_at": "2023-10-03T16:43:28Z",
        "closed_at": "2023-10-03T16:43:27Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Apache Libcloud supports a `prefix` parameter when calling `list_objects` and `list_container_objects`. With the `prefix` parameter, only a subset of objects will be listed that match the prefix parameter. \r\n\r\nThis should be added to both `cloud/storage.py` and `workflow/task/storage.py`",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/568/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/568/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/567",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/567/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/567/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/567/events",
        "html_url": "https://github.com/neuml/txtai/issues/567",
        "id": 1918497862,
        "node_id": "I_kwDOERCdB85yWfRG",
        "number": 567,
        "title": "searching with Multiple Parameters (Tabular Data)",
        "user": {
            "login": "raaj1v",
            "id": 86911408,
            "node_id": "MDQ6VXNlcjg2OTExNDA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/86911408?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raaj1v",
            "html_url": "https://github.com/raaj1v",
            "followers_url": "https://api.github.com/users/raaj1v/followers",
            "following_url": "https://api.github.com/users/raaj1v/following{/other_user}",
            "gists_url": "https://api.github.com/users/raaj1v/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raaj1v/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raaj1v/subscriptions",
            "organizations_url": "https://api.github.com/users/raaj1v/orgs",
            "repos_url": "https://api.github.com/users/raaj1v/repos",
            "events_url": "https://api.github.com/users/raaj1v/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raaj1v/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-09-29T02:13:13Z",
        "updated_at": "2023-11-02T13:27:46Z",
        "closed_at": "2023-11-02T13:27:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Thankyou for building such a great application for semantic search, \r\nWhat i want to know is : how can we create multiple parameter based search engine . like if we have a product table containing different details of individual products namely \"manufactured address\", \"category\", \"buildType\", \"shortdescription\". then, how to create a more robust search engine involving all the different fields. like a user may come and ask for \"x category product having y build material from z place\". I hope you got my problem.\r\n\r\nCurrently, I'm able to create single column based text embeddings.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/567/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/567/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/566",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/566/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/566/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/566/events",
        "html_url": "https://github.com/neuml/txtai/issues/566",
        "id": 1917609101,
        "node_id": "I_kwDOERCdB85yTGSN",
        "number": 566,
        "title": "Update LLM pipeline to support template parameter",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 0,
        "created_at": "2023-09-28T13:55:25Z",
        "updated_at": "2023-10-05T14:18:03Z",
        "closed_at": "2023-10-03T18:39:21Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, the LLM pipeline takes an optional `prefix` parameter that is appended to each input prompt. An additional `template` parameter should be added that wraps all input prompts. The `template` parameter will be a string template and expect a `text` parameter in the template. \r\n\r\nNote that txtai has a workflow task for prompt templates. This change will add similar functionality that enables similar logic without the need for a workflow.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/566/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/566/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/565",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/565/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/565/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/565/events",
        "html_url": "https://github.com/neuml/txtai/issues/565",
        "id": 1911380023,
        "node_id": "I_kwDOERCdB85x7Vg3",
        "number": 565,
        "title": "Add cls pooling option",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 1,
        "created_at": "2023-09-25T12:18:52Z",
        "updated_at": "2023-10-09T16:26:16Z",
        "closed_at": "2023-10-09T16:24:24Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, txtai has mean pooling built in. Other pooling options require using the `sentence-transformers` library. This issue will add cls pooling to txtai like mean pooling. \r\n\r\nEnsure concepts mentioned in #535 and #536 are properly handled. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/565/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/565/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/564",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/564/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/564/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/564/events",
        "html_url": "https://github.com/neuml/txtai/issues/564",
        "id": 1909891136,
        "node_id": "I_kwDOERCdB85x1qBA",
        "number": 564,
        "title": "Feature request: Bind variable support when searching with SQL using Content=True mode",
        "user": {
            "login": "rickknowles-cognitant",
            "id": 37247203,
            "node_id": "MDQ6VXNlcjM3MjQ3MjAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/37247203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickknowles-cognitant",
            "html_url": "https://github.com/rickknowles-cognitant",
            "followers_url": "https://api.github.com/users/rickknowles-cognitant/followers",
            "following_url": "https://api.github.com/users/rickknowles-cognitant/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickknowles-cognitant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickknowles-cognitant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickknowles-cognitant/subscriptions",
            "organizations_url": "https://api.github.com/users/rickknowles-cognitant/orgs",
            "repos_url": "https://api.github.com/users/rickknowles-cognitant/repos",
            "events_url": "https://api.github.com/users/rickknowles-cognitant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickknowles-cognitant/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/34",
            "html_url": "https://github.com/neuml/txtai/milestone/34",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/34/labels",
            "id": 9962312,
            "node_id": "MI_kwDOERCdB84AmANI",
            "number": 34,
            "title": "v6.2.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 22,
            "state": "closed",
            "created_at": "2023-09-25T12:16:07Z",
            "updated_at": "2023-11-08T14:33:42Z",
            "due_on": null,
            "closed_at": "2023-11-08T14:33:42Z"
        },
        "comments": 4,
        "created_at": "2023-09-23T14:29:28Z",
        "updated_at": "2023-11-07T16:03:24Z",
        "closed_at": "2023-11-07T16:02:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When doing SQL queries, it's considered good practice to support \"?\" or \":label\" style bind args so that query parameters can't have SQL injection parameters supplied. \r\n\r\nSQLite supports this (as do most databases), but it appears the txtai wrapper around it doesn't pass this feature through.\r\n\r\nWould it be possible to request this addition please ? It would make the difference between being able to use txtai in production environments and not in my case.\r\n\r\nThank you",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/564/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/564/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/563",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/563/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/563/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/563/events",
        "html_url": "https://github.com/neuml/txtai/issues/563",
        "id": 1909890097,
        "node_id": "I_kwDOERCdB85x1pwx",
        "number": 563,
        "title": "Dates fail in example ",
        "user": {
            "login": "rickknowles-cognitant",
            "id": 37247203,
            "node_id": "MDQ6VXNlcjM3MjQ3MjAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/37247203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rickknowles-cognitant",
            "html_url": "https://github.com/rickknowles-cognitant",
            "followers_url": "https://api.github.com/users/rickknowles-cognitant/followers",
            "following_url": "https://api.github.com/users/rickknowles-cognitant/following{/other_user}",
            "gists_url": "https://api.github.com/users/rickknowles-cognitant/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rickknowles-cognitant/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rickknowles-cognitant/subscriptions",
            "organizations_url": "https://api.github.com/users/rickknowles-cognitant/orgs",
            "repos_url": "https://api.github.com/users/rickknowles-cognitant/repos",
            "events_url": "https://api.github.com/users/rickknowles-cognitant/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rickknowles-cognitant/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2264734939,
                "node_id": "MDU6TGFiZWwyMjY0NzM0OTM5",
                "url": "https://api.github.com/repos/neuml/txtai/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 1,
        "created_at": "2023-09-23T14:25:44Z",
        "updated_at": "2023-09-25T12:23:23Z",
        "closed_at": "2023-09-23T16:33:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\n\r\nI just tried the examples in the following page: https://neuml.github.io/txtai/embeddings/query/ and found it did something wrong with dates:\r\n\r\n```\r\ndesktop:~/txtai$ python3\r\nPython 3.10.12 (main, Jun 11 2023, 05:26:28) [GCC 11.4.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> from txtai.embeddings import Embeddings\r\n>>> embeddings = Embeddings(path=\"sentence-transformers/nli-mpnet-base-v2\", content=True)\r\n>>> embeddings.index([{\"text\": \"text to index\", \"flag\": True, \"entry\": \"2022-01-01\"}])\r\n>>> embeddings.search(\"SELECT text, flag, entry FROM txtai WHERE similar('query') AND flag = 1 AND entry >= '2022-01-01'\")\r\n[{'text': 'text to index', 'flag': 1, 'entry': '2023-09-23 15:21:29.714090'}]\r\n```\r\n\r\nAs you can see the act of inserting a date inserts the current date regardless of what's supplied (check the date of \"entry\" during insert and then on return from querying).\r\n\r\nThe expected result for the last \"search\" command should be \r\n```\r\n[{'text': 'text to index', 'flag': 1, 'entry': '2022-01-01 00:00:00.000000'}]\r\n```\r\nshouldn't it ?",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/563/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/563/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/562",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/562/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/562/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/562/events",
        "html_url": "https://github.com/neuml/txtai/issues/562",
        "id": 1909236916,
        "node_id": "I_kwDOERCdB85xzKS0",
        "number": 562,
        "title": "Remove deprecated option from quantize_dynamic",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2264734939,
                "node_id": "MDU6TGFiZWwyMjY0NzM0OTM5",
                "url": "https://api.github.com/repos/neuml/txtai/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 0,
        "created_at": "2023-09-22T16:53:59Z",
        "updated_at": "2023-09-22T16:54:34Z",
        "closed_at": "2023-09-22T16:54:33Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "`optimize_model` has been removed and should be removed in HFOnnx. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/562/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/562/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/561",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/561/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/561/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/561/events",
        "html_url": "https://github.com/neuml/txtai/issues/561",
        "id": 1909202995,
        "node_id": "I_kwDOERCdB85xzCAz",
        "number": 561,
        "title": "Add weights and index to Application methods",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 0,
        "created_at": "2023-09-22T16:26:33Z",
        "updated_at": "2023-09-22T16:31:32Z",
        "closed_at": "2023-09-22T16:31:32Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "6.0 introduced new `weights` and `index` parameters for hybrid search and subindexes respectively.\r\n\r\nThese parameters should be added and made available to Applications and the API.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/561/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/561/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/560",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/560/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/560/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/560/events",
        "html_url": "https://github.com/neuml/txtai/issues/560",
        "id": 1909082003,
        "node_id": "I_kwDOERCdB85xykeT",
        "number": 560,
        "title": "how to extract embedding vectors from a loaded index",
        "user": {
            "login": "EnricoScquiz",
            "id": 129066881,
            "node_id": "U_kgDOB7FngQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/129066881?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EnricoScquiz",
            "html_url": "https://github.com/EnricoScquiz",
            "followers_url": "https://api.github.com/users/EnricoScquiz/followers",
            "following_url": "https://api.github.com/users/EnricoScquiz/following{/other_user}",
            "gists_url": "https://api.github.com/users/EnricoScquiz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EnricoScquiz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EnricoScquiz/subscriptions",
            "organizations_url": "https://api.github.com/users/EnricoScquiz/orgs",
            "repos_url": "https://api.github.com/users/EnricoScquiz/repos",
            "events_url": "https://api.github.com/users/EnricoScquiz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EnricoScquiz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-22T15:05:56Z",
        "updated_at": "2023-09-22T20:09:45Z",
        "closed_at": "2023-09-22T20:09:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, i'm following te initial tutorial to create an index for my embeddings, save it in a local folder and then load it whenever i want.\r\n\r\nI use these lines of code to create index and save it:\r\n\r\nembeddings = Embeddings(path=\"sentence-transformers/multi-qa-MiniLM-L6-cos-v1\")\r\nembeddings.index(documents=df.X)\r\nembeddings.save(path=\"embeddings_saved\")\r\n\r\nthen to load it:\r\nembeddings = Embeddings(path=\"sentence-transformers/multi-qa-MiniLM-L6-cos-v1\")\r\nEmbeddings.load(embeddings, path=\"embeddings_saved\")\r\n\r\nHow can i get the vectors for each document?\r\nI need them for a classification task",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/560/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/560/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/559",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/559/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/559/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/559/events",
        "html_url": "https://github.com/neuml/txtai/issues/559",
        "id": 1905280789,
        "node_id": "I_kwDOERCdB85xkEcV",
        "number": 559,
        "title": "Textractor paragraph level splits at the end of each line",
        "user": {
            "login": "thepinkclimate",
            "id": 125655116,
            "node_id": "U_kgDOB31YTA",
            "avatar_url": "https://avatars.githubusercontent.com/u/125655116?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thepinkclimate",
            "html_url": "https://github.com/thepinkclimate",
            "followers_url": "https://api.github.com/users/thepinkclimate/followers",
            "following_url": "https://api.github.com/users/thepinkclimate/following{/other_user}",
            "gists_url": "https://api.github.com/users/thepinkclimate/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thepinkclimate/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thepinkclimate/subscriptions",
            "organizations_url": "https://api.github.com/users/thepinkclimate/orgs",
            "repos_url": "https://api.github.com/users/thepinkclimate/repos",
            "events_url": "https://api.github.com/users/thepinkclimate/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thepinkclimate/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-20T15:47:46Z",
        "updated_at": "2023-10-04T14:06:06Z",
        "closed_at": "2023-10-04T14:06:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am trying to split a set of PDFs in paragraphs using textractor. \r\nThe command works, but it splits the text at the end of each line of the pdf rather than looking for meaningful paragraphs. \r\n\r\nExample:\r\nAlbania\u2019s greenhouse gas (GHG) mean annual emissions, according to the national inventory\r\nprepared for the 4th National Communication and the final draft of 1st BUR, amounted to 10.8 Mt\r\nCO2e/y in the period 2009-2016. Compared to the rest of Europe, this level of emission is low.\r\nWhile the level of emissions per capita is 8.7 t CO2e/hab in the EU-27 in 2018, the level of\r\nemission per capita in Albania is 3.5 t CO2e/hab in 2016.\r\n\r\nThe textractor, paragraph level creates paragraphs whenever he sees the end of line.\r\nI guess the problem is in the pdf reader function.\r\n\r\nThanks,\r\nF",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/559/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/559/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/558",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/558/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/558/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/558/events",
        "html_url": "https://github.com/neuml/txtai/issues/558",
        "id": 1904881811,
        "node_id": "I_kwDOERCdB85xijCT",
        "number": 558,
        "title": "Error occurred when connecting to qdrant",
        "user": {
            "login": "denuwan55",
            "id": 68518136,
            "node_id": "MDQ6VXNlcjY4NTE4MTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/68518136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/denuwan55",
            "html_url": "https://github.com/denuwan55",
            "followers_url": "https://api.github.com/users/denuwan55/followers",
            "following_url": "https://api.github.com/users/denuwan55/following{/other_user}",
            "gists_url": "https://api.github.com/users/denuwan55/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/denuwan55/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/denuwan55/subscriptions",
            "organizations_url": "https://api.github.com/users/denuwan55/orgs",
            "repos_url": "https://api.github.com/users/denuwan55/repos",
            "events_url": "https://api.github.com/users/denuwan55/events{/privacy}",
            "received_events_url": "https://api.github.com/users/denuwan55/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-20T12:26:08Z",
        "updated_at": "2023-09-20T13:45:08Z",
        "closed_at": "2023-09-20T13:45:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I tried to initiate the following and make:\r\n```\r\nfrom txtai.embeddings import Embeddings\r\n\r\nembeddings = Embeddings({\r\n\"path\": \"sentence-transformers/all-MiniLM-L6-V2\",\r\n\"backend\": \"qdrant_txtai.ann.qdrant.Qdrant\",\r\n\"metric\": \"cosine\",\r\n\"qdrant\": {\r\n    \"api-key\": \"<MYKEY>\",\r\n    \"url\": \"<QDRANT_URL>\",\r\n    \"port\": \"6333\",\r\n    \"collection\": \"test_collection\"\r\n}\r\n})\r\n```\r\nThen tried to do the indexing as the following:\r\n```\r\nembeddings.index( [\r\n(0, \"NumPy offers comprehensive mathematical functions,\",None),\r\n(1, \"pandas is a fast, powerful, flexible and easy to use \",None), \r\n (2, \"Scikit-learn is an open source machine learning library \", None),\r\n(3, \"Matplotlib is a comprehensive library for creating \", None),\r\n(4,\"Seaborn is a Python data visualization library based \", None)\r\n])\r\n```\r\nBut it gave me the following error stack\r\n```\r\nUnexpectedResponse                        Traceback (most recent call last)\r\n[<ipython-input-12-ed076ff13906>](https://localhost:8080/#) in <cell line: 1>()\r\n----> 1 embeddings.index( [\r\n      2 (0, \"NumPy offers comprehensive mathematical functions,\",None),\r\n      3 (1, \"pandas is a fast, powerful, flexible and easy to use \",None),\r\n      4  (2, \"Scikit-learn is an open source machine learning library \", None),\r\n      5 (3, \"Matplotlib is a comprehensive library for creating \", None),\r\n\r\n8 frames\r\n[/usr/local/lib/python3.10/dist-packages/txtai/embeddings/base.py](https://localhost:8080/#) in index(self, documents, reindex)\r\n    135 \r\n    136                 # Add embeddings to the index\r\n--> 137                 self.ann.index(embeddings)\r\n    138 \r\n    139                 # Save indexids-ids mapping for indexes with no database, except when this is a reindex action\r\n\r\n[/usr/local/lib/python3.10/dist-packages/qdrant_txtai/ann/qdrant.py](https://localhost:8080/#) in index(self, embeddings)\r\n     78         hnsw_config = self.qdrant_config.get(\"hnsw\", {})\r\n     79 \r\n---> 80         self.qdrant_client.recreate_collection(\r\n     81             collection_name=self.collection_name,\r\n     82             vectors_config=VectorParams(\r\n\r\n[/usr/local/lib/python3.10/dist-packages/qdrant_client/qdrant_client.py](https://localhost:8080/#) in recreate_collection(self, collection_name, vectors_config, shard_number, replication_factor, write_consistency_factor, on_disk_payload, hnsw_config, optimizers_config, wal_config, quantization_config, init_from, timeout, **kwargs)\r\n   1459         assert len(kwargs) == 0, f\"Unknown arguments: {list(kwargs.keys())}\"\r\n   1460 \r\n-> 1461         return self._client.recreate_collection(\r\n   1462             collection_name=collection_name,\r\n   1463             vectors_config=vectors_config,\r\n\r\n[/usr/local/lib/python3.10/dist-packages/qdrant_client/qdrant_remote.py](https://localhost:8080/#) in recreate_collection(self, collection_name, vectors_config, shard_number, replication_factor, write_consistency_factor, on_disk_payload, hnsw_config, optimizers_config, wal_config, quantization_config, init_from, timeout, **kwargs)\r\n   1811         **kwargs: Any,\r\n   1812     ) -> bool:\r\n-> 1813         self.delete_collection(collection_name, timeout=timeout)\r\n   1814 \r\n   1815         return self.create_collection(\r\n\r\n[/usr/local/lib/python3.10/dist-packages/qdrant_client/qdrant_remote.py](https://localhost:8080/#) in delete_collection(self, collection_name, timeout, **kwargs)\r\n   1704             ).result\r\n   1705 \r\n-> 1706         result: Optional[bool] = self.http.collections_api.delete_collection(\r\n   1707             collection_name, timeout=timeout\r\n   1708         ).result\r\n\r\n[/usr/local/lib/python3.10/dist-packages/qdrant_client/http/api/collections_api.py](https://localhost:8080/#) in delete_collection(self, collection_name, timeout)\r\n   1081         Drop collection and all associated data\r\n   1082         \"\"\"\r\n-> 1083         return self._build_for_delete_collection(\r\n   1084             collection_name=collection_name,\r\n   1085             timeout=timeout,\r\n\r\n[/usr/local/lib/python3.10/dist-packages/qdrant_client/http/api/collections_api.py](https://localhost:8080/#) in _build_for_delete_collection(self, collection_name, timeout)\r\n    195 \r\n    196         headers = {}\r\n--> 197         return self.api_client.request(\r\n    198             type_=m.InlineResponse2003,\r\n    199             method=\"DELETE\",\r\n\r\n[/usr/local/lib/python3.10/dist-packages/qdrant_client/http/api_client.py](https://localhost:8080/#) in request(self, type_, method, url, path_params, **kwargs)\r\n     72         url = (self.host or \"\") + url.format(**path_params)\r\n     73         request = self._client.build_request(method, url, **kwargs)\r\n---> 74         return self.send(request, type_)\r\n     75 \r\n     76     @overload\r\n\r\n[/usr/local/lib/python3.10/dist-packages/qdrant_client/http/api_client.py](https://localhost:8080/#) in send(self, request, type_)\r\n     95             except ValidationError as e:\r\n     96                 raise ResponseHandlingException(e)\r\n---> 97         raise UnexpectedResponse.for_response(response)\r\n     98 \r\n     99     def send_inner(self, request: Request) -> Response:\r\n\r\nUnexpectedResponse: Unexpected Response: 403 (Forbidden)\r\nRaw response content:\r\nb'{\"error\":\"forbidden\"}'\r\n```\r\n\r\nCan you please help me with this? \r\nI have initiated a collection in qdrant and hosted in cloud as following:\r\n```\r\nfrom qdrant_client.http.models import Distance, VectorParams\r\n\r\nclient.recreate_collection(\r\n    collection_name=\"test_collection\",\r\n    vectors_config=VectorParams(size=768, distance=Distance.COSINE),\r\n)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/558/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/558/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/557",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/557/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/557/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/557/events",
        "html_url": "https://github.com/neuml/txtai/issues/557",
        "id": 1903583334,
        "node_id": "I_kwDOERCdB85xdmBm",
        "number": 557,
        "title": "Update reindex action to support new 6.x configuration",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 0,
        "created_at": "2023-09-19T19:11:18Z",
        "updated_at": "2023-09-22T16:31:31Z",
        "closed_at": "2023-09-22T16:31:31Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Update `embeddings.reindex` to support reading the columns configuration introduced in 6.x.\r\n\r\nThe streaming `database.reindex` method should also support streaming the data JSON in addition to the section text. This will enable rebuilding other components which may depend on a field other than the `text` field.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/557/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/557/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/556",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/556/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/556/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/556/events",
        "html_url": "https://github.com/neuml/txtai/issues/556",
        "id": 1897696508,
        "node_id": "I_kwDOERCdB85xHIz8",
        "number": 556,
        "title": "url parsing for connection string is not working",
        "user": {
            "login": "DenuwanClouda",
            "id": 141103329,
            "node_id": "U_kgDOCGkQ4Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/141103329?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DenuwanClouda",
            "html_url": "https://github.com/DenuwanClouda",
            "followers_url": "https://api.github.com/users/DenuwanClouda/followers",
            "following_url": "https://api.github.com/users/DenuwanClouda/following{/other_user}",
            "gists_url": "https://api.github.com/users/DenuwanClouda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DenuwanClouda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DenuwanClouda/subscriptions",
            "organizations_url": "https://api.github.com/users/DenuwanClouda/orgs",
            "repos_url": "https://api.github.com/users/DenuwanClouda/repos",
            "events_url": "https://api.github.com/users/DenuwanClouda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DenuwanClouda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-15T04:42:07Z",
        "updated_at": "2023-09-22T16:59:43Z",
        "closed_at": "2023-09-22T16:59:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I tried to connect a mysql database through a connection string. I installed txtai[database] through pip. But the loaded txtai version is not updated unlike in the github repository. \r\nloaded throgh pip:\r\n<img width=\"1106\" alt=\"image\" src=\"https://github.com/neuml/txtai/assets/141103329/2b237a7a-98bd-4983-a346-e7276a89c144\">\r\nin above picture as seen, the url is not being parsed. But as seen in below, code in the git repo seems to be properly doing that.\r\n<img width=\"614\" alt=\"image\" src=\"https://github.com/neuml/txtai/assets/141103329/84ee1449-ed8b-403f-ba7b-3a05731c6305\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/556/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/556/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/555",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/555/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/555/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/555/events",
        "html_url": "https://github.com/neuml/txtai/issues/555",
        "id": 1894430195,
        "node_id": "I_kwDOERCdB85w6rXz",
        "number": 555,
        "title": "request are starved during concurrent searches ",
        "user": {
            "login": "a-bawane",
            "id": 71352533,
            "node_id": "MDQ6VXNlcjcxMzUyNTMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/71352533?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/a-bawane",
            "html_url": "https://github.com/a-bawane",
            "followers_url": "https://api.github.com/users/a-bawane/followers",
            "following_url": "https://api.github.com/users/a-bawane/following{/other_user}",
            "gists_url": "https://api.github.com/users/a-bawane/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/a-bawane/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/a-bawane/subscriptions",
            "organizations_url": "https://api.github.com/users/a-bawane/orgs",
            "repos_url": "https://api.github.com/users/a-bawane/repos",
            "events_url": "https://api.github.com/users/a-bawane/events{/privacy}",
            "received_events_url": "https://api.github.com/users/a-bawane/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-13T12:32:23Z",
        "updated_at": "2023-09-13T16:31:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I conducted load testing with JMeter at a rate of 100 queries per second (QPS) with a 10-minute hold time. During this test, I noticed that some requests experienced delays and were only served towards the end of the hold time. This delay was consistent for both text and SQL search queries. For reference, I have attached the Aggregate Report. \r\n![image](https://github.com/neuml/txtai/assets/71352533/ba905f36-ee1e-4fc2-8526-4348bb09adab)\r\n\r\nIn the report, the minimum response time was 61 ms, the maximum response time reached 675398 ms, and the 90th percentile response time was 1424 ms. Considering that there were only two unique requests, these response times appear to be on the higher side.\r\n\r\nI'm looking for suggestions on how to scale the system to handle a higher QPS rate. Any advice or recommendations would be greatly appreciated.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/555/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/555/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/554",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/554/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/554/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/554/events",
        "html_url": "https://github.com/neuml/txtai/issues/554",
        "id": 1893984632,
        "node_id": "I_kwDOERCdB85w4-l4",
        "number": 554,
        "title": "Integrate with Litellm",
        "user": {
            "login": "ranjancse26",
            "id": 2565797,
            "node_id": "MDQ6VXNlcjI1NjU3OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2565797?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ranjancse26",
            "html_url": "https://github.com/ranjancse26",
            "followers_url": "https://api.github.com/users/ranjancse26/followers",
            "following_url": "https://api.github.com/users/ranjancse26/following{/other_user}",
            "gists_url": "https://api.github.com/users/ranjancse26/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ranjancse26/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ranjancse26/subscriptions",
            "organizations_url": "https://api.github.com/users/ranjancse26/orgs",
            "repos_url": "https://api.github.com/users/ranjancse26/repos",
            "events_url": "https://api.github.com/users/ranjancse26/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ranjancse26/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/35",
            "html_url": "https://github.com/neuml/txtai/milestone/35",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/35/labels",
            "id": 10161718,
            "node_id": "MI_kwDOERCdB84Amw42",
            "number": 35,
            "title": "v6.3.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 10,
            "state": "open",
            "created_at": "2023-11-08T14:31:36Z",
            "updated_at": "2023-12-10T01:05:35Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 1,
        "created_at": "2023-09-13T08:10:20Z",
        "updated_at": "2023-12-09T16:59:44Z",
        "closed_at": "2023-12-09T16:59:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I believe, it's a great idea to incorporate the txtai with the Litellm as it already supports Intergrations with 100+ LLMs.\r\n\r\nhttps://github.com/BerriAI/litellm\r\n\r\nLLM as drop-in replacement for gpt-3.5-turbo. Use Azure, OpenAI, Cohere, Anthropic, Ollama, VLLM, Sagemaker, HuggingFace, Replicate (100+ LLMs)\r\n\r\ncc @ishaan-jaff",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/554/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/554/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/553",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/553/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/553/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/553/events",
        "html_url": "https://github.com/neuml/txtai/issues/553",
        "id": 1890827128,
        "node_id": "I_kwDOERCdB85ws7t4",
        "number": 553,
        "title": "Document how to run API via HTTPS",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 0,
        "created_at": "2023-09-11T16:04:06Z",
        "updated_at": "2023-09-19T12:45:46Z",
        "closed_at": "2023-09-19T12:45:45Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Add a HTTPS section to the API documentation covering the following configuration options for HTTPS with FastAPI. \r\n\r\n- [FastAPI HTTPS](https://fastapi.tiangolo.com/deployment/https/)\r\n- [Uvicorn documentation](https://www.uvicorn.org/deployment/)",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/553/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/553/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/552",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/552/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/552/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/552/events",
        "html_url": "https://github.com/neuml/txtai/issues/552",
        "id": 1889803745,
        "node_id": "I_kwDOERCdB85wpB3h",
        "number": 552,
        "title": "Add missing pipelines to API",
        "user": {
            "login": "semack",
            "id": 1447215,
            "node_id": "MDQ6VXNlcjE0NDcyMTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1447215?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semack",
            "html_url": "https://github.com/semack",
            "followers_url": "https://api.github.com/users/semack/followers",
            "following_url": "https://api.github.com/users/semack/following{/other_user}",
            "gists_url": "https://api.github.com/users/semack/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semack/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semack/subscriptions",
            "organizations_url": "https://api.github.com/users/semack/orgs",
            "repos_url": "https://api.github.com/users/semack/repos",
            "events_url": "https://api.github.com/users/semack/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semack/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/35",
            "html_url": "https://github.com/neuml/txtai/milestone/35",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/35/labels",
            "id": 10161718,
            "node_id": "MI_kwDOERCdB84Amw42",
            "number": 35,
            "title": "v6.3.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 10,
            "state": "open",
            "created_at": "2023-11-08T14:31:36Z",
            "updated_at": "2023-12-10T01:05:35Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 10,
        "created_at": "2023-09-11T06:57:40Z",
        "updated_at": "2023-11-08T14:31:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi guys,\r\n\r\nFirst of all, thank you for the amazing job you do.\r\n\r\nI didn't find API for Text-To-Speech. The workflow can be used for this I think, but are there any plans to implement it on API?\r\n\r\nKind regards,\r\n/Andriy",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/552/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/552/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/551",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/551/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/551/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/551/events",
        "html_url": "https://github.com/neuml/txtai/issues/551",
        "id": 1888829671,
        "node_id": "I_kwDOERCdB85wlUDn",
        "number": 551,
        "title": "Summary pipeline error when gpu enabled on mps device ",
        "user": {
            "login": "Vincent-liuwingsang",
            "id": 16081202,
            "node_id": "MDQ6VXNlcjE2MDgxMjAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16081202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vincent-liuwingsang",
            "html_url": "https://github.com/Vincent-liuwingsang",
            "followers_url": "https://api.github.com/users/Vincent-liuwingsang/followers",
            "following_url": "https://api.github.com/users/Vincent-liuwingsang/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vincent-liuwingsang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vincent-liuwingsang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vincent-liuwingsang/subscriptions",
            "organizations_url": "https://api.github.com/users/Vincent-liuwingsang/orgs",
            "repos_url": "https://api.github.com/users/Vincent-liuwingsang/repos",
            "events_url": "https://api.github.com/users/Vincent-liuwingsang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vincent-liuwingsang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2264734939,
                "node_id": "MDU6TGFiZWwyMjY0NzM0OTM5",
                "url": "https://api.github.com/repos/neuml/txtai/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 3,
        "created_at": "2023-09-09T18:00:55Z",
        "updated_at": "2023-09-26T15:58:40Z",
        "closed_at": "2023-09-26T15:58:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "On Apple silicon mps device, default setting for Summary errors with the following\r\nAssertionError: Torch not compiled with CUDA enabled\r\n\r\n```\r\nfrom txtai.pipeline import Summary\r\nsummary = Summary()\r\nsummary(ocr)\r\n```\r\n\r\n```\r\n/Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/txtai/pipeline/tex \u2502\r\n\u2502 t/summary.py:16 in __init__                                                                      \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   13 \u2502   \"\"\"                                                                                     \u2502\r\n\u2502   14 \u2502                                                                                           \u2502\r\n\u2502   15 \u2502   def __init__(self, path=None, quantize=False, gpu=True, model=None, **kwargs):          \u2502\r\n\u2502 \u2771 16 \u2502   \u2502   super().__init__(\"summarization\", path, quantize, gpu, model, **kwargs)             \u2502\r\n\u2502   17 \u2502                                                                                           \u2502\r\n\u2502   18 \u2502   def __call__(self, text, minlength=None, maxlength=None, workers=0):                    \u2502\r\n\u2502   19 \u2502   \u2502   \"\"\"                                                                                 \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/txtai/pipeline/hfp \u2502\r\n\u2502 ipeline.py:56 in __init__                                                                        \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   53 \u2502   \u2502   \u2502   \u2502   self.pipeline = pipeline(task, model=model, tokenizer=path[1], device=de    \u2502\r\n\u2502   54 \u2502   \u2502   \u2502   else:                                                                           \u2502\r\n\u2502   55 \u2502   \u2502   \u2502   \u2502   print(deviceid)                                                             \u2502\r\n\u2502 \u2771 56 \u2502   \u2502   \u2502   \u2502   self.pipeline = pipeline(task, model=path, device=deviceid, model_kwargs    \u2502\r\n\u2502   57 \u2502   \u2502   \u2502                                                                                   \u2502\r\n\u2502   58 \u2502   \u2502   \u2502   # Model quantization. Compresses model to int8 precision, improves runtime p    \u2502\r\n\u2502   59 \u2502   \u2502   \u2502   if deviceid == -1 and quantize:                                                 \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/transformers/pipel \u2502\r\n\u2502 ines/__init__.py:976 in pipeline                                                                 \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   973 \u2502   if device is not None:                                                                 \u2502\r\n\u2502   974 \u2502   \u2502   kwargs[\"device\"] = device                                                          \u2502\r\n\u2502   975 \u2502                                                                                          \u2502\r\n\u2502 \u2771 976 \u2502   return pipeline_class(model=model, framework=framework, task=task, **kwargs)           \u2502\r\n\u2502   977                                                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/transformers/pipel \u2502\r\n\u2502 ines/text2text_generation.py:65 in __init__                                                      \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    62 \u2502   return_name = \"generated\"                                                              \u2502\r\n\u2502    63 \u2502                                                                                          \u2502\r\n\u2502    64 \u2502   def __init__(self, *args, **kwargs):                                                   \u2502\r\n\u2502 \u2771  65 \u2502   \u2502   super().__init__(*args, **kwargs)                                                  \u2502\r\n\u2502    66 \u2502   \u2502                                                                                      \u2502\r\n\u2502    67 \u2502   \u2502   self.check_model_type(                                                             \u2502\r\n\u2502    68 \u2502   \u2502   \u2502   TF_MODEL_FOR_SEQ_TO_SEQ_CAUSAL_LM_MAPPING                                      \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/transformers/pipel \u2502\r\n\u2502 ines/base.py:773 in __init__                                                                     \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    770 \u2502   \u2502   self.framework = framework                                                        \u2502\r\n\u2502    771 \u2502   \u2502                                                                                     \u2502\r\n\u2502    772 \u2502   \u2502   if self.framework == \"pt\" and device is not None and not (isinstance(device, int  \u2502\r\n\u2502 \u2771  773 \u2502   \u2502   \u2502   self.model.to(device)                                                         \u2502\r\n\u2502    774 \u2502   \u2502                                                                                     \u2502\r\n\u2502    775 \u2502   \u2502   if device is None:                                                                \u2502\r\n\u2502    776 \u2502   \u2502   \u2502   # `accelerate` device map                                                     \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/transformers/model \u2502\r\n\u2502 ing_utils.py:1808 in to                                                                          \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1805 \u2502   \u2502   \u2502   \u2502   \" model has already been set to the correct devices and casted to the co  \u2502\r\n\u2502   1806 \u2502   \u2502   \u2502   )                                                                             \u2502\r\n\u2502   1807 \u2502   \u2502   else:                                                                             \u2502\r\n\u2502 \u2771 1808 \u2502   \u2502   \u2502   return super().to(*args, **kwargs)                                            \u2502\r\n\u2502   1809 \u2502                                                                                         \u2502\r\n\u2502   1810 \u2502   def half(self, *args):                                                                \u2502\r\n\u2502   1811 \u2502   \u2502   # Checks if the model has been loaded in 8-bit                                    \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/torch/nn/modules/m \u2502\r\n\u2502 odule.py:1145 in to                                                                              \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1142 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   non_blocking, memory_format=convert_to_format)                \u2502\r\n\u2502   1143 \u2502   \u2502   \u2502   return t.to(device, dtype if t.is_floating_point() or t.is_complex() else No  \u2502\r\n\u2502   1144 \u2502   \u2502                                                                                     \u2502\r\n\u2502 \u2771 1145 \u2502   \u2502   return self._apply(convert)                                                       \u2502\r\n\u2502   1146 \u2502                                                                                         \u2502\r\n\u2502   1147 \u2502   def register_full_backward_pre_hook(                                                  \u2502\r\n\u2502   1148 \u2502   \u2502   self,                                                                             \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/torch/nn/modules/m \u2502\r\n\u2502 odule.py:797 in _apply                                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    794 \u2502                                                                                         \u2502\r\n\u2502    795 \u2502   def _apply(self, fn):                                                                 \u2502\r\n\u2502    796 \u2502   \u2502   for module in self.children():                                                    \u2502\r\n\u2502 \u2771  797 \u2502   \u2502   \u2502   module._apply(fn)                                                             \u2502\r\n\u2502    798 \u2502   \u2502                                                                                     \u2502\r\n\u2502    799 \u2502   \u2502   def compute_should_use_set_data(tensor, tensor_applied):                          \u2502\r\n\u2502    800 \u2502   \u2502   \u2502   if torch._has_compatible_shallow_copy_type(tensor, tensor_applied):           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/torch/nn/modules/m \u2502\r\n\u2502 odule.py:797 in _apply                                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    794 \u2502                                                                                         \u2502\r\n\u2502    795 \u2502   def _apply(self, fn):                                                                 \u2502\r\n\u2502    796 \u2502   \u2502   for module in self.children():                                                    \u2502\r\n\u2502 \u2771  797 \u2502   \u2502   \u2502   module._apply(fn)                                                             \u2502\r\n\u2502    798 \u2502   \u2502                                                                                     \u2502\r\n\u2502    799 \u2502   \u2502   def compute_should_use_set_data(tensor, tensor_applied):                          \u2502\r\n\u2502    800 \u2502   \u2502   \u2502   if torch._has_compatible_shallow_copy_type(tensor, tensor_applied):           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/torch/nn/modules/m \u2502\r\n\u2502 odule.py:820 in _apply                                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    817 \u2502   \u2502   \u2502   # track autograd history of `param_applied`, so we have to use                \u2502\r\n\u2502    818 \u2502   \u2502   \u2502   # `with torch.no_grad():`                                                     \u2502\r\n\u2502    819 \u2502   \u2502   \u2502   with torch.no_grad():                                                         \u2502\r\n\u2502 \u2771  820 \u2502   \u2502   \u2502   \u2502   param_applied = fn(param)                                                 \u2502\r\n\u2502    821 \u2502   \u2502   \u2502   should_use_set_data = compute_should_use_set_data(param, param_applied)       \u2502\r\n\u2502    822 \u2502   \u2502   \u2502   if should_use_set_data:                                                       \u2502\r\n\u2502    823 \u2502   \u2502   \u2502   \u2502   param.data = param_applied                                                \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/torch/nn/modules/m \u2502\r\n\u2502 odule.py:1143 in convert                                                                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1140 \u2502   \u2502   \u2502   if convert_to_format is not None and t.dim() in (4, 5):                       \u2502\r\n\u2502   1141 \u2502   \u2502   \u2502   \u2502   return t.to(device, dtype if t.is_floating_point() or t.is_complex() els  \u2502\r\n\u2502   1142 \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   \u2502   non_blocking, memory_format=convert_to_format)                \u2502\r\n\u2502 \u2771 1143 \u2502   \u2502   \u2502   return t.to(device, dtype if t.is_floating_point() or t.is_complex() else No  \u2502\r\n\u2502   1144 \u2502   \u2502                                                                                     \u2502\r\n\u2502   1145 \u2502   \u2502   return self._apply(convert)                                                       \u2502\r\n\u2502   1146                                                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/torch/cuda/__init_ \u2502\r\n\u2502 _.py:239 in _lazy_init                                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    236 \u2502   \u2502   \u2502   \u2502   \"Cannot re-initialize CUDA in forked subprocess. To use CUDA with \"       \u2502\r\n\u2502    237 \u2502   \u2502   \u2502   \u2502   \"multiprocessing, you must use the 'spawn' start method\")                 \u2502\r\n\u2502    238 \u2502   \u2502   if not hasattr(torch._C, '_cuda_getDeviceCount'):                                 \u2502\r\n\u2502 \u2771  239 \u2502   \u2502   \u2502   raise AssertionError(\"Torch not compiled with CUDA enabled\")                  \u2502\r\n\u2502    240 \u2502   \u2502   if _cudart is None:                                                               \u2502\r\n\u2502    241 \u2502   \u2502   \u2502   raise AssertionError(                                                         \u2502\r\n\u2502    242 \u2502   \u2502   \u2502   \u2502   \"libcudart functions unavailable. It looks like you have a broken build?\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/551/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/551/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/550",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/550/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/550/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/550/events",
        "html_url": "https://github.com/neuml/txtai/pull/550",
        "id": 1887562561,
        "node_id": "PR_kwDOERCdB85Z3w0J",
        "number": 550,
        "title": "Align API parameter data type to translation pipeline",
        "user": {
            "login": "cstech-carl-camilleri",
            "id": 60109026,
            "node_id": "MDQ6VXNlcjYwMTA5MDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/60109026?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cstech-carl-camilleri",
            "html_url": "https://github.com/cstech-carl-camilleri",
            "followers_url": "https://api.github.com/users/cstech-carl-camilleri/followers",
            "following_url": "https://api.github.com/users/cstech-carl-camilleri/following{/other_user}",
            "gists_url": "https://api.github.com/users/cstech-carl-camilleri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cstech-carl-camilleri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cstech-carl-camilleri/subscriptions",
            "organizations_url": "https://api.github.com/users/cstech-carl-camilleri/orgs",
            "repos_url": "https://api.github.com/users/cstech-carl-camilleri/repos",
            "events_url": "https://api.github.com/users/cstech-carl-camilleri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cstech-carl-camilleri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2264734939,
                "node_id": "MDU6TGFiZWwyMjY0NzM0OTM5",
                "url": "https://api.github.com/repos/neuml/txtai/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 1,
        "created_at": "2023-09-08T12:12:58Z",
        "updated_at": "2023-09-25T12:23:48Z",
        "closed_at": "2023-09-11T17:12:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/neuml/txtai/pulls/550",
            "html_url": "https://github.com/neuml/txtai/pull/550",
            "diff_url": "https://github.com/neuml/txtai/pull/550.diff",
            "patch_url": "https://github.com/neuml/txtai/pull/550.patch",
            "merged_at": "2023-09-11T17:12:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/550/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/550/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/549",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/549/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/549/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/549/events",
        "html_url": "https://github.com/neuml/txtai/issues/549",
        "id": 1886368897,
        "node_id": "I_kwDOERCdB85wb7SB",
        "number": 549,
        "title": "Add external database integration notebook",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 0,
        "created_at": "2023-09-07T18:12:50Z",
        "updated_at": "2023-09-07T18:13:46Z",
        "closed_at": "2023-09-07T18:13:45Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Add external database integration notebook",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/549/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/549/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/548",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/548/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/548/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/548/events",
        "html_url": "https://github.com/neuml/txtai/issues/548",
        "id": 1886168142,
        "node_id": "I_kwDOERCdB85wbKRO",
        "number": 548,
        "title": "Add way to load database connection URL via environment variable",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 0,
        "created_at": "2023-09-07T15:53:59Z",
        "updated_at": "2023-09-07T15:56:32Z",
        "closed_at": "2023-09-07T15:56:31Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, client-server connections are passed as URLs in embeddings configuration. In many cases, it would be better for this to be read from an environment variable. For instance, the server could change, user/password could change and this prevents the hard-coding of this information in an embeddings instance. Some also prefer this from a security standpoint.\r\n\r\nThis change will add a way to load URLs via an environment parameter as follows.\r\n\r\n- `content = client`\r\n- Set environment variable `CLIENT_URL` to full connection URL",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/548/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/548/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/547",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/547/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/547/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/547/events",
        "html_url": "https://github.com/neuml/txtai/issues/547",
        "id": 1885762188,
        "node_id": "I_kwDOERCdB85wZnKM",
        "number": 547,
        "title": "Calling .reindex() on Application instance",
        "user": {
            "login": "hakimkhalafi",
            "id": 5586611,
            "node_id": "MDQ6VXNlcjU1ODY2MTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5586611?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hakimkhalafi",
            "html_url": "https://github.com/hakimkhalafi",
            "followers_url": "https://api.github.com/users/hakimkhalafi/followers",
            "following_url": "https://api.github.com/users/hakimkhalafi/following{/other_user}",
            "gists_url": "https://api.github.com/users/hakimkhalafi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hakimkhalafi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hakimkhalafi/subscriptions",
            "organizations_url": "https://api.github.com/users/hakimkhalafi/orgs",
            "repos_url": "https://api.github.com/users/hakimkhalafi/repos",
            "events_url": "https://api.github.com/users/hakimkhalafi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hakimkhalafi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 5,
        "created_at": "2023-09-07T12:06:39Z",
        "updated_at": "2023-09-22T16:31:32Z",
        "closed_at": "2023-09-22T16:31:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Embeddings instances have .reindex(), I would like to also have this for Application instances ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/547/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/547/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/546",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/546/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/546/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/546/events",
        "html_url": "https://github.com/neuml/txtai/issues/546",
        "id": 1884945116,
        "node_id": "I_kwDOERCdB85wWfrc",
        "number": 546,
        "title": "Updating the built index",
        "user": {
            "login": "DenuwanClouda",
            "id": 141103329,
            "node_id": "U_kgDOCGkQ4Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/141103329?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DenuwanClouda",
            "html_url": "https://github.com/DenuwanClouda",
            "followers_url": "https://api.github.com/users/DenuwanClouda/followers",
            "following_url": "https://api.github.com/users/DenuwanClouda/following{/other_user}",
            "gists_url": "https://api.github.com/users/DenuwanClouda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DenuwanClouda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DenuwanClouda/subscriptions",
            "organizations_url": "https://api.github.com/users/DenuwanClouda/orgs",
            "repos_url": "https://api.github.com/users/DenuwanClouda/repos",
            "events_url": "https://api.github.com/users/DenuwanClouda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DenuwanClouda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-07T01:06:59Z",
        "updated_at": "2023-09-07T01:13:54Z",
        "closed_at": "2023-09-07T01:13:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I would like to know, is it possible to update the already built index? \r\n\r\nFor example, assume an index has already been built using a product dataset, product_id as the id of the index and description as the text field. Now, if a product is removed from a dataset, I would like to remove that from the index too. Or maybe if a product description is updated, I would like to update the relevent embedding too. Is this poosible?\r\n\r\nFrom what I saw in the documentation, it is only possible to create and upsert. Is there a way for the above task?\r\n\r\nThank you.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/546/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/546/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/545",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/545/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/545/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/545/events",
        "html_url": "https://github.com/neuml/txtai/issues/545",
        "id": 1884921835,
        "node_id": "I_kwDOERCdB85wWZ_r",
        "number": 545,
        "title": "Encoding of data as dictionary",
        "user": {
            "login": "DenuwanClouda",
            "id": 141103329,
            "node_id": "U_kgDOCGkQ4Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/141103329?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DenuwanClouda",
            "html_url": "https://github.com/DenuwanClouda",
            "followers_url": "https://api.github.com/users/DenuwanClouda/followers",
            "following_url": "https://api.github.com/users/DenuwanClouda/following{/other_user}",
            "gists_url": "https://api.github.com/users/DenuwanClouda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DenuwanClouda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DenuwanClouda/subscriptions",
            "organizations_url": "https://api.github.com/users/DenuwanClouda/orgs",
            "repos_url": "https://api.github.com/users/DenuwanClouda/repos",
            "events_url": "https://api.github.com/users/DenuwanClouda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DenuwanClouda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-09-07T00:30:12Z",
        "updated_at": "2023-09-22T16:57:09Z",
        "closed_at": "2023-09-22T16:57:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\n<img width=\"909\" alt=\"image\" src=\"https://github.com/neuml/txtai/assets/141103329/cf62b6e7-8131-401d-aa94-1d1da79e9a19\">\r\n\r\n<img width=\"1412\" alt=\"image\" src=\"https://github.com/neuml/txtai/assets/141103329/da9ff612-070a-4236-9391-28de6f935766\">\r\n\r\n1. If I create the index like above, when the encoding happens, which fields get encoded into vectors? All the fields or only the \"text \"field?\r\n2. When I give field names in the dictionary item passed when creating index, if I omit the field \"text\", indexing will not happen, why?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/545/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/545/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/544",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/544/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/544/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/544/events",
        "html_url": "https://github.com/neuml/txtai/issues/544",
        "id": 1884770341,
        "node_id": "I_kwDOERCdB85wV1Al",
        "number": 544,
        "title": "Add support for custom scoring instances",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 0,
        "created_at": "2023-09-06T21:21:06Z",
        "updated_at": "2023-09-06T21:25:06Z",
        "closed_at": "2023-09-06T21:25:05Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Add support for custom scoring instances.\r\n\r\nSee implementations in ANNFactory, DatabaseFactory and GraphFactory.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/544/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/544/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/543",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/543/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/543/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/543/events",
        "html_url": "https://github.com/neuml/txtai/issues/543",
        "id": 1879069866,
        "node_id": "I_kwDOERCdB85wAFSq",
        "number": 543,
        "title": "Hybrid scores issue?",
        "user": {
            "login": "Vincent-liuwingsang",
            "id": 16081202,
            "node_id": "MDQ6VXNlcjE2MDgxMjAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16081202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vincent-liuwingsang",
            "html_url": "https://github.com/Vincent-liuwingsang",
            "followers_url": "https://api.github.com/users/Vincent-liuwingsang/followers",
            "following_url": "https://api.github.com/users/Vincent-liuwingsang/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vincent-liuwingsang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vincent-liuwingsang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vincent-liuwingsang/subscriptions",
            "organizations_url": "https://api.github.com/users/Vincent-liuwingsang/orgs",
            "repos_url": "https://api.github.com/users/Vincent-liuwingsang/repos",
            "events_url": "https://api.github.com/users/Vincent-liuwingsang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vincent-liuwingsang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-03T12:03:30Z",
        "updated_at": "2023-09-22T16:56:35Z",
        "closed_at": "2023-09-22T16:56:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The default weightings for hybrid scores are computed from half sparse and half dense.\r\n\r\nThe top X result from sparse and dense don't necessarily match in uid so if a uid exist in sparse but not dense, the score will be halved.\r\n\r\nIn this case, shouldn't we retrieve the missing dense score and compute the final score that way\ud83e\udd14\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/543/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/543/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/542",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/542/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/542/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/542/events",
        "html_url": "https://github.com/neuml/txtai/issues/542",
        "id": 1878711112,
        "node_id": "I_kwDOERCdB85v-ttI",
        "number": 542,
        "title": "Add build script workaround for DuckDB and Pandas 2.1.0 incompatibility",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2264734939,
                "node_id": "MDU6TGFiZWwyMjY0NzM0OTM5",
                "url": "https://api.github.com/repos/neuml/txtai/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 0,
        "created_at": "2023-09-02T14:27:47Z",
        "updated_at": "2023-09-26T12:46:12Z",
        "closed_at": "2023-09-26T12:46:12Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "See https://github.com/duckdb/duckdb/issues/8735\r\n\r\nThis change will temporarily limit the build script to `pandas < 2.1.0` until the next DuckDB release.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/542/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/542/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/541",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/541/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/541/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/541/events",
        "html_url": "https://github.com/neuml/txtai/issues/541",
        "id": 1876890314,
        "node_id": "I_kwDOERCdB85v3xLK",
        "number": 541,
        "title": "Encoding using multiple-GPUs",
        "user": {
            "login": "DenuwanClouda",
            "id": 141103329,
            "node_id": "U_kgDOCGkQ4Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/141103329?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DenuwanClouda",
            "html_url": "https://github.com/DenuwanClouda",
            "followers_url": "https://api.github.com/users/DenuwanClouda/followers",
            "following_url": "https://api.github.com/users/DenuwanClouda/following{/other_user}",
            "gists_url": "https://api.github.com/users/DenuwanClouda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DenuwanClouda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DenuwanClouda/subscriptions",
            "organizations_url": "https://api.github.com/users/DenuwanClouda/orgs",
            "repos_url": "https://api.github.com/users/DenuwanClouda/repos",
            "events_url": "https://api.github.com/users/DenuwanClouda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DenuwanClouda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-09-01T07:21:20Z",
        "updated_at": "2023-09-15T11:36:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am doing this task where I am recommending products based on their reviews. To do that I am using your library and when I am creating the index, what I would like to know is whether there is a way to utilize several GPUs. Because the time it takes to encode the review text is huge and I have a multiGPU environment. \r\nAlso the task also expects explanations and I would also like to know can the same be done when I execute the explain method. \r\n\r\nThank you. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/541/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/541/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/540",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/540/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/540/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/540/events",
        "html_url": "https://github.com/neuml/txtai/issues/540",
        "id": 1873851595,
        "node_id": "I_kwDOERCdB85vsLTL",
        "number": 540,
        "title": "Expand the graph capabilities to enable advanced graph traversal. ",
        "user": {
            "login": "dustyatx",
            "id": 122811501,
            "node_id": "U_kgDOB1H0bQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/122811501?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dustyatx",
            "html_url": "https://github.com/dustyatx",
            "followers_url": "https://api.github.com/users/dustyatx/followers",
            "following_url": "https://api.github.com/users/dustyatx/following{/other_user}",
            "gists_url": "https://api.github.com/users/dustyatx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dustyatx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dustyatx/subscriptions",
            "organizations_url": "https://api.github.com/users/dustyatx/orgs",
            "repos_url": "https://api.github.com/users/dustyatx/repos",
            "events_url": "https://api.github.com/users/dustyatx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dustyatx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/35",
            "html_url": "https://github.com/neuml/txtai/milestone/35",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/35/labels",
            "id": 10161718,
            "node_id": "MI_kwDOERCdB84Amw42",
            "number": 35,
            "title": "v6.3.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 10,
            "state": "open",
            "created_at": "2023-11-08T14:31:36Z",
            "updated_at": "2023-12-10T01:05:35Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 4,
        "created_at": "2023-08-30T14:54:38Z",
        "updated_at": "2023-11-11T12:53:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "# REQUEST\r\n\r\nI hope this isn't to overwhelming of a request. This would make TxtAI's graph act more like other graph DBs I've used and would open up a lot of possibilities for more sophisticated and accurate queries.  \r\n\r\nI've added links to the other requests I made such as node id assignment on insert and filtering during a graph traversal. I provided some representative code and document structures but that is not to imply I am recommending any particular kind of implementation, I just figured it would add it for clarity. \r\n\r\nPlease correct me if I've missed existing features that can accomplish this, I have done my best to understand the documentation but I still have a lot to learn. \r\n\r\n# Feature Overview:\r\n\r\n1.  Custom Node ID Assignment, advanced graph walk using edge & metadata filtering. \r\n\r\n# Why This Matters:\r\n\r\n1.   Adding the capability to assign node IDs upon insertion offers users greater control over their dataset, ensuring consistency especially if migrating or synchronizing data across systems. \r\n2. The enhanced filtering options on both edges and metadata further refine data retrieval, making the database even more versatile.\r\n\r\n# Detailed Requirements:\r\n\r\n1. Custom Node ID Assignment: - Upon node insertion, allow for an optional custom ID to be specified. - If no ID is given, default to the current automated assignment method.  #525 \r\n\r\n    a. Overwrite checks to make sure you don't accidentally clobber existing nodes. \r\n\r\n2. Edge Filtering during Traversal: - Permit users to indicate specific edges they'd like to traverse. - This targets queries for more precise outcomes. #534\r\n \r\n3. Metadata Filtering: - Users should be able to filter nodes based on associated metadata. - Important for scenarios where temporal relevance or other specific metadata factors are crucial. #534 \r\n\r\n    a. Type functions: timestamp ranges, string matches, integer & float operators\r\n\r\n5. Statically Defined Edges: Allow users to add custom static edges between nodes, facilitating manual definition of relationships. This is useful in cases where relationships are already known and do not need to be inferred. #525 \r\n\r\n# EXAMPLE:\r\n\r\n1. Starting Point: We initiate our graph walk at the node representing the concept of \"Amusement Parks\".\r\n\r\n2. Similar Business Types: From there, we branch out to business type nodes that are conceptually proximate to \"Amusement Parks\", filtering by a similarity threshold of 0.8 or greater.\r\n\r\n3. Company Discovery: We then dive deeper into individual company nodes nested within these conceptually similar business types. For instance, under the business type \"Theme Parks\", we discover \"Adventure Kingdom Florida\".\r\n\r\n4. Employee Lookup: Our traversal continues to the \"People\" node to identify employees associated with the discovered companies.\r\n\r\n5. Occupation Filtering: From these individual \"People\" nodes, we scrutinize their occupations, ensuring a focus on roles that are akin to \"Maintenance Technicians\", based on similarity metrics.\r\n\r\n6. Date Filtering: Next, we filter out individuals whose records were updated post-2022-12-31.\r\n\r\n7. State Filtering: The graph walk progresses further by examining the residence state of these individuals, specifically honing in on \"Florida\".\r\n\r\n8. City Exclusion: Within Florida, we ensure to exclude individuals residing in \"Orlando\" from our final selection.\r\n\r\n9. Name Retrieval: Lastly, we pull out the individual's name from each qualifying \"People\" node to wrap up our comprehensive graph walk.\r\n\r\n10. Result Compilation: Our resultant data is an aggregated list of names that fit our exhaustive criteria.\r\n\r\n# VISUALIZATION\r\n``` \r\n[Amusement Parks]\r\n|\r\n+--> [Business Types (Similarity >= 0.8)]\r\n     |\r\n     +--> [Theme Parks]\r\n     |    |\r\n     |    +--> [Adventure Kingdom Florida]\r\n     |         |\r\n     |         +--> [People]\r\n     |              |\r\n     |              +--> [John Doe]\r\n     |              |    +--> Occupation: Ride Maintenance Technician (Similarity: 0.95)\r\n     |              |    +--> Last Updated: 2022-05-12\r\n     |              |    +--> State: Florida\r\n     |              |    +--> City: Miami\r\n     |              |\r\n     |              +--> [Jane Smith]\r\n     |              |   +--> Occupation: Park Equipment Technician (Similarity: 0.85)\r\n     |              |    +--> Last Updated: 2021-11-10\r\n     |              |    +--> State: Florida\r\n     |              |    +--> City: Tampa\r\n     |\r\n     +--> [Adventure Parks]\r\n          |\r\n          +--> [Florida Explorers Haven]\r\n               |\r\n               +--> [People]\r\n                    |\r\n                    +--> [Alice Brown]\r\n                    |    +--> Occupation: Ride Safety Technician (Similarity: 0.82)\r\n                    |    +--> Last Updated: 2020-10-20\r\n                    |    +--> State: Florida\r\n                    |    +--> City: Fort Lauderdale\r\n                    |\r\n                    +--> [Bob White]\r\n                    |    +--> Occupation: Theme Park Mechanic (Similarity: 0.88)\r\n                    |    +--> Last Updated: 2021-07-07\r\n                    |    +--> State: Florida\r\n                    |    +--> City: Jacksonville\r\n```\r\n\r\n# JSON DOC:\r\n\r\n```\r\n{\r\n    \"id\": \"unique_identifier_for_node\",  # Unique ID assigned to each node on creation\r\n    \"type\": \"node_type\",  # Categorical identifier (e.g., business_type, people, occupation, location)\r\n    \"text\": \"vector_data_for_similarity_search\",  # Vector representation for similarity search\r\n    \"metadata\": {  \r\n        \"name\": \"readable_name_or_title\",  # Display name or title for the node\r\n        \"timestamp\": \"2022-12-31T23:59:59Z\",  # ISO format timestamp for the last update\r\n        # ... other metadata attributes can be added as needed\r\n    },\r\n    \"edges\": {  \r\n        \"static\": {\r\n            \"employee_of\": [(node_id1, weight1), (node_id2, weight2)],  # Nodes connected through static edges\r\n            \"another_edge_type\": [(node_id3, weight3)]\r\n        },\r\n        # ... add other static edge types as needed\r\n        \"similarity\": [(node_id4, 0.9), (node_id5, 0.85)]  # Nodes connected through similarity measure\r\n    }\r\n}\r\n```\r\n\r\n# PSEDUO CODE\r\n\r\n## SDK: \r\n\r\n```\r\nclass GraphDatabaseEngine:\r\n    def __init__(self):\r\n        # Assume internal structures: self.nodes and self.edges\r\n        pass\r\n    \r\n    class GraphWalkAdvanced:\r\n        def __init__(self, parent_db):\r\n            self.db = parent_db\r\n        \r\n        def find_nodes_by_similarity(self, text, threshold=0.8, limit=5):\r\n            # Using vector representation and similarity function, find nodes similar to text\r\n            similar_nodes = []  # Filled with nodes after comparison\r\n            # ... some logic ...\r\n            return similar_nodes[:limit]\r\n        \r\n        def find_nodes_by_edge(self, current_nodes, edge_type, limit=10):\r\n            next_nodes = []\r\n            for node in current_nodes:\r\n                next_nodes.extend(self.db.edges[node.id][edge_type][:limit])\r\n            return next_nodes\r\n\r\n        def filter_nodes_by_metadata(self, nodes, metadata):\r\n            key, operation, value = metadata\r\n            if operation == '<':\r\n                return [node for node in nodes if node.metadata[key] < value]\r\n            elif operation == '==':\r\n                return [node for node in nodes if node.metadata[key] == value]\r\n            # ... other possible operations ...\r\n\r\n        def execute(self, start_node_text, query):\r\n            current_nodes = [self.find_nodes_by_similarity(start_node_text)]\r\n            for step in query:\r\n                qtype = step['type']\r\n                if qtype == 'similarity':\r\n                    current_nodes = self.find_nodes_by_similarity(start_node_text, step['threshold'], step['limit'])\r\n                elif qtype == 'static_edge':\r\n                    current_nodes = self.find_nodes_by_edge(current_nodes, step['edge_type'], step['limit'])\r\n                elif qtype == 'metadata_filter':\r\n                    current_nodes = self.filter_nodes_by_metadata(current_nodes, step['metadata'])\r\n            return current_nodes\r\n```\r\n \r\n## User code:\r\n\r\n### Scenario 1: Start with Similarity to 'Amusement Parks' and End at a specific node via text match\r\n\r\n```\r\nquery1 = [\r\n    {'type': 'similarity', 'threshold': 0.8, 'limit': 5},\r\n    {'type': 'static_edge', 'edge_type': 'EMPLOYEE_OF', 'limit': 5},\r\n    {'type': 'end_node_text', 'text': 'Disney'}\r\n]\r\nresults1 = db.execute_graph_walk(start_node_text=\"Amusement Parks\", query=query1)\r\n```\r\n\r\n### Scenario 2: Start with Similarity to 'Amusement Parks' and End with Similarity to 'Water Parks'\r\n```\r\nquery2 = [\r\n    {'type': 'similarity', 'threshold': 0.8, 'limit': 5},\r\n    {'type': 'static_edge', 'edge_type': 'EMPLOYEE_OF', 'limit': 5},\r\n    {'type': 'end_node_similarity', 'threshold': 0.8, 'limit': 5}\r\n]\r\nresults2 = db.execute_graph_walk(start_node_text=\"Amusement Parks\", end_node_text=\"Water Parks\", query=query2)\r\n```\r\n\r\n### Scenario 3: Start with Similarity to 'Amusement Parks' and End with nodes connected via 'SUPPLIER' in Florida\r\n\r\n```\r\ncomplex_query = [\r\n    {'type': 'similarity', 'threshold': 0.8, 'limit': 5},\r\n    {'type': 'static_edge', 'edge_type': 'EMPLOYEE_OF', 'limit': 10},\r\n    {'type': 'metadata_filter', 'metadata': ('occupation', 'Ride Maintenance Technician')},\r\n    {'type': 'static_edge', 'edge_type': 'SUPPLIER', 'limit': 10},\r\n    {'type': 'metadata_filter', 'metadata': ('last_updated_date', '<', '2023-01-01')},\r\n    {'type': 'metadata_filter', 'metadata': ('location', 'Florida')}\r\n]\r\nresults_complex = db.execute_graph_walk(start_node_text=\"Amusement Parks\", query=complex_query)\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/540/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/540/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/539",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/539/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/539/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/539/events",
        "html_url": "https://github.com/neuml/txtai/issues/539",
        "id": 1873528662,
        "node_id": "I_kwDOERCdB85vq8dW",
        "number": 539,
        "title": "Storing several Embeddings under a single index",
        "user": {
            "login": "DenuwanClouda",
            "id": 141103329,
            "node_id": "U_kgDOCGkQ4Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/141103329?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DenuwanClouda",
            "html_url": "https://github.com/DenuwanClouda",
            "followers_url": "https://api.github.com/users/DenuwanClouda/followers",
            "following_url": "https://api.github.com/users/DenuwanClouda/following{/other_user}",
            "gists_url": "https://api.github.com/users/DenuwanClouda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DenuwanClouda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DenuwanClouda/subscriptions",
            "organizations_url": "https://api.github.com/users/DenuwanClouda/orgs",
            "repos_url": "https://api.github.com/users/DenuwanClouda/repos",
            "events_url": "https://api.github.com/users/DenuwanClouda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DenuwanClouda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-30T11:58:13Z",
        "updated_at": "2023-08-31T05:34:18Z",
        "closed_at": "2023-08-31T05:34:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Thank you for this amazing work you have done for the semantic search NLP task by introducing such an amazing tool.\r\n\r\nI would like to know is there a way I can store several embeddings under a single index? \r\n\r\nExample:\r\nI have a review dataset that has reviews on products. Each row corresponds to a certain review for a product. Single product can have multiple reviews (several rows). So I am trying to embed these results using a transformer and store them in a vector index. When I search for a product using a search query, I want to consider(using cosine similarity) every review for a particular product before recommending it. \r\n\r\nIs this possible? in your tool. If my approach is not possible (storing several embeddings/reviews under single index/product) can you suggest an implementation I can use using txtai tools?",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/539/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/539/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/538",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/538/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/538/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/538/events",
        "html_url": "https://github.com/neuml/txtai/issues/538",
        "id": 1871674375,
        "node_id": "I_kwDOERCdB85vj3wH",
        "number": 538,
        "title": "embeddings.explain method but it gives an empty output. ",
        "user": {
            "login": "DenuwanClouda",
            "id": 141103329,
            "node_id": "U_kgDOCGkQ4Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/141103329?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DenuwanClouda",
            "html_url": "https://github.com/DenuwanClouda",
            "followers_url": "https://api.github.com/users/DenuwanClouda/followers",
            "following_url": "https://api.github.com/users/DenuwanClouda/following{/other_user}",
            "gists_url": "https://api.github.com/users/DenuwanClouda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DenuwanClouda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DenuwanClouda/subscriptions",
            "organizations_url": "https://api.github.com/users/DenuwanClouda/orgs",
            "repos_url": "https://api.github.com/users/DenuwanClouda/repos",
            "events_url": "https://api.github.com/users/DenuwanClouda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DenuwanClouda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-29T13:26:24Z",
        "updated_at": "2023-08-30T02:23:07Z",
        "closed_at": "2023-08-29T16:08:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Thank you for an amazing library. Please help me with the following issue\r\n\r\nI am trying to do semantic search. I created an index using product IDs as the index ids and encoded reviewText as values in the index. After doing the search, I accurately get the search results. But when I run the query with embeddings.explain method, it returns an empty list.\r\n\r\nFollowing is the code\r\n\r\n#### import the packages\r\nfrom txtai.embeddings import Embeddings\r\n\r\n#### Create embeddings model, backed by sentence-transformers & transformers\r\nembeddings = Embeddings({\"path\": \"sentence-transformers/nli-mpnet-base-v2\"})\r\n\r\n#### create index\r\n\r\n#### extract first element\r\nfirst_element = df_dict[:1]\r\ndf_dict = df_dict[1:]\r\n\r\n#### index the data\r\nembeddings.index([(first_element[0]['asin'], first_element[0]['reviewText'], None)])\r\n\r\nfor item in tqdm(df_dict, desc=\"Indexing\"):\r\n  embeddings.upsert([(item['asin'], item['reviewText'], None)])\r\n\r\n#### now instead of similarity, use search function\r\nembeddings.search(\"Movie which has great music\", limit=2)\r\n\r\n#### explanation\r\nembeddings.explain(\"Movie which has great music\", limit=2)\r\n\r\n##### output to last cell above -> [ ]",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/538/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/538/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/537",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/537/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/537/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/537/events",
        "html_url": "https://github.com/neuml/txtai/issues/537",
        "id": 1870254251,
        "node_id": "I_kwDOERCdB85vedCr",
        "number": 537,
        "title": "Why do memory usages differ by 3Gb in these 2 scenarios?",
        "user": {
            "login": "Vincent-liuwingsang",
            "id": 16081202,
            "node_id": "MDQ6VXNlcjE2MDgxMjAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16081202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vincent-liuwingsang",
            "html_url": "https://github.com/Vincent-liuwingsang",
            "followers_url": "https://api.github.com/users/Vincent-liuwingsang/followers",
            "following_url": "https://api.github.com/users/Vincent-liuwingsang/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vincent-liuwingsang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vincent-liuwingsang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vincent-liuwingsang/subscriptions",
            "organizations_url": "https://api.github.com/users/Vincent-liuwingsang/orgs",
            "repos_url": "https://api.github.com/users/Vincent-liuwingsang/repos",
            "events_url": "https://api.github.com/users/Vincent-liuwingsang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vincent-liuwingsang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-08-28T18:36:57Z",
        "updated_at": "2023-09-22T16:57:48Z",
        "closed_at": "2023-09-22T16:57:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "scenario 1 where I pull the agnews dataset(60Mb) and save first 10K into an index. It takes about 4.32Gb in memory after completion.\r\n\r\nscenario 2 where I load from the same path and only takes about 1.4 Gb.\r\n\r\nWhy is there a difference here? \r\n\r\n```\r\nscenario 1 - 4.32Gb\r\n# Build hybrid index\r\nembeddings = txtai.Embeddings({\r\n    \"method\": \"sentence-transformers\",\r\n    \"path\": \"BAAI/bge-small-en\",\r\n    \"content\": True,\r\n    \"hybrid\": False,\r\n    \"backend\": \"faiss\",\r\n    # \"faiss\": {\r\n    #   \"mmap\": True,\r\n    # }\r\n})\r\nembeddings.index(stream(dataset, \"text\", 10000))\r\nembeddings.save(\"location\")\r\nembeddings.search(\"Kennedy\")\r\n\r\nscenario 2 - 1.42Gb\r\nembeddings = Embeddings()\r\nembeddings.load(\"/Users/wingsangvincentliu/Documents/UnlostApp.nosync/txtai_hybrid_false_mmap_true\")\r\nembeddings.search(\"Kennedy\")\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/537/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/537/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/536",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/536/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/536/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/536/events",
        "html_url": "https://github.com/neuml/txtai/pull/536",
        "id": 1869808646,
        "node_id": "PR_kwDOERCdB85Y8AY0",
        "number": 536,
        "title": "Added int32 conversion for inputs",
        "user": {
            "login": "denis-gordeev",
            "id": 5531431,
            "node_id": "MDQ6VXNlcjU1MzE0MzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5531431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/denis-gordeev",
            "html_url": "https://github.com/denis-gordeev",
            "followers_url": "https://api.github.com/users/denis-gordeev/followers",
            "following_url": "https://api.github.com/users/denis-gordeev/following{/other_user}",
            "gists_url": "https://api.github.com/users/denis-gordeev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/denis-gordeev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/denis-gordeev/subscriptions",
            "organizations_url": "https://api.github.com/users/denis-gordeev/orgs",
            "repos_url": "https://api.github.com/users/denis-gordeev/repos",
            "events_url": "https://api.github.com/users/denis-gordeev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/denis-gordeev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T13:49:58Z",
        "updated_at": "2023-09-25T12:19:36Z",
        "closed_at": "2023-09-25T12:19:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/neuml/txtai/pulls/536",
            "html_url": "https://github.com/neuml/txtai/pull/536",
            "diff_url": "https://github.com/neuml/txtai/pull/536.diff",
            "patch_url": "https://github.com/neuml/txtai/pull/536.patch",
            "merged_at": null
        },
        "body": "For some reason, onnx converted my inputs to int64.\r\nTo resolve this issues, I tried preventively converting the dummy inputs to int32.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/536/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/536/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/535",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/535/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/535/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/535/events",
        "html_url": "https://github.com/neuml/txtai/pull/535",
        "id": 1869793541,
        "node_id": "PR_kwDOERCdB85Y79Gi",
        "number": 535,
        "title": "Added cls pooling for onnx conversion",
        "user": {
            "login": "denis-gordeev",
            "id": 5531431,
            "node_id": "MDQ6VXNlcjU1MzE0MzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5531431?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/denis-gordeev",
            "html_url": "https://github.com/denis-gordeev",
            "followers_url": "https://api.github.com/users/denis-gordeev/followers",
            "following_url": "https://api.github.com/users/denis-gordeev/following{/other_user}",
            "gists_url": "https://api.github.com/users/denis-gordeev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/denis-gordeev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/denis-gordeev/subscriptions",
            "organizations_url": "https://api.github.com/users/denis-gordeev/orgs",
            "repos_url": "https://api.github.com/users/denis-gordeev/repos",
            "events_url": "https://api.github.com/users/denis-gordeev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/denis-gordeev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-28T13:41:32Z",
        "updated_at": "2023-09-25T12:19:25Z",
        "closed_at": "2023-09-25T12:19:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/neuml/txtai/pulls/535",
            "html_url": "https://github.com/neuml/txtai/pull/535",
            "diff_url": "https://github.com/neuml/txtai/pull/535.diff",
            "patch_url": "https://github.com/neuml/txtai/pull/535.patch",
            "merged_at": null
        },
        "body": "Some models use not the mean pooling but other types of pooling. One of them is CLS-Pooling from Sentence Transformers.\r\nFor example, the current state-of-the-art model on the MTEB Leaderboard uses it (BAAI/bge-large-en).\r\n\r\n\r\nhttps://huggingface.co/BAAI/bge-large-en/blob/main/1_Pooling/config.json\r\n\r\nThe code is mostly copy-pasted from the Sentence Transformers library.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/535/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/535/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/534",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/534/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/534/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/534/events",
        "html_url": "https://github.com/neuml/txtai/issues/534",
        "id": 1868629825,
        "node_id": "I_kwDOERCdB85vYQdB",
        "number": 534,
        "title": "Is it possible to filter the graph before or when walking the graph?",
        "user": {
            "login": "dustyatx",
            "id": 122811501,
            "node_id": "U_kgDOB1H0bQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/122811501?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dustyatx",
            "html_url": "https://github.com/dustyatx",
            "followers_url": "https://api.github.com/users/dustyatx/followers",
            "following_url": "https://api.github.com/users/dustyatx/following{/other_user}",
            "gists_url": "https://api.github.com/users/dustyatx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dustyatx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dustyatx/subscriptions",
            "organizations_url": "https://api.github.com/users/dustyatx/orgs",
            "repos_url": "https://api.github.com/users/dustyatx/repos",
            "events_url": "https://api.github.com/users/dustyatx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dustyatx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/35",
            "html_url": "https://github.com/neuml/txtai/milestone/35",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/35/labels",
            "id": 10161718,
            "node_id": "MI_kwDOERCdB84Amw42",
            "number": 35,
            "title": "v6.3.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 10,
            "state": "open",
            "created_at": "2023-11-08T14:31:36Z",
            "updated_at": "2023-12-10T01:05:35Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 2,
        "created_at": "2023-08-27T20:54:52Z",
        "updated_at": "2023-11-08T14:31:44Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "First let me say I finally got my first graph built and WOW.. It took me a few attempts to figure out how best to get the data structured to get a high level of accuracy between the nodes.. The results were well worth the effort, I've never seen anything that can do this before. I can walk the graph between a concept like \"Consumer demand index\" and \"Inflation impact to pricing\" and get a really good string of inter-related topics that bridge the two concepts. \r\n\r\nNow I'm trying to get the next more complex queries worked out beyond showpath(source, destination). \r\n\r\nI've figured out how to create nodes and then update those nodes with new keys and values. Now I'm wondering if there is a way to use the information in those values to control how I walk the graph?\r\n\r\nI'd like to have a graph with different types of data attached to the node and then use them to filter out what I am walking. A basic example would be to only show nodes that have have a date between x & y but I'd also like to use categories, only show nodes about an entity or nodes with a specific category. \r\n\r\nIdeally I can do something like. \r\nWalk the graph between text that talks about supply chain problems and then only walk nodes that have been categorized as having information about supply chain (which is stored in an array called categories in the node, between July & August of 2023. Is there a way to do this with edges? I can label an edge \"does business with\" and then use that to filter what I walk? \r\n\r\nIf this is possible, I'm would love some other suggestions on what else is possible. The documentation isn't clear what capabilities that I can use to craft graph queries. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/534/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/534/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/533",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/533/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/533/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/533/events",
        "html_url": "https://github.com/neuml/txtai/issues/533",
        "id": 1868259869,
        "node_id": "I_kwDOERCdB85vW2Id",
        "number": 533,
        "title": "Why is this small embedding taking so much memory?",
        "user": {
            "login": "Vincent-liuwingsang",
            "id": 16081202,
            "node_id": "MDQ6VXNlcjE2MDgxMjAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16081202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vincent-liuwingsang",
            "html_url": "https://github.com/Vincent-liuwingsang",
            "followers_url": "https://api.github.com/users/Vincent-liuwingsang/followers",
            "following_url": "https://api.github.com/users/Vincent-liuwingsang/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vincent-liuwingsang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vincent-liuwingsang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vincent-liuwingsang/subscriptions",
            "organizations_url": "https://api.github.com/users/Vincent-liuwingsang/orgs",
            "repos_url": "https://api.github.com/users/Vincent-liuwingsang/repos",
            "events_url": "https://api.github.com/users/Vincent-liuwingsang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vincent-liuwingsang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-26T20:27:58Z",
        "updated_at": "2023-08-26T21:52:32Z",
        "closed_at": "2023-08-26T21:52:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have an embedding that I save to local path and load with another process. I'm loading in 10 rows of data and process 2 that loads the embedding from disk takes up 1.4Gb memory. The actual local folder is only 98Kb.  How is this possible?\r\n\r\n```\r\n# process 1\r\nfrom datasets import load_dataset\r\n\r\nimport txtai\r\n\r\n# Load dataset\r\nds = load_dataset(\"fka/awesome-chatgpt-prompts\", split=\"train\")\r\n\r\n# only stream 10 items\r\ndef stream():\r\n  i = 0\r\n  for row in ds:\r\n    print(i)\r\n    if i == 10:\r\n      return\r\n    yield f\"{row['act']} {row['prompt']}\"\r\n    i += 1\r\n\r\n\r\n# Build hybrid index\r\nembeddings = txtai.Embeddings(hybrid=True, content=True)\r\nembeddings.index(stream())\r\nembeddings.save(\"location\")\r\n\r\n# process 2 - \r\nimport txtai\r\n\r\nembeddings = txtai.Embeddings()\r\nembeddings.load(\"location\")\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/533/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/533/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/532",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/532/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/532/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/532/events",
        "html_url": "https://github.com/neuml/txtai/issues/532",
        "id": 1867649672,
        "node_id": "I_kwDOERCdB85vUhKI",
        "number": 532,
        "title": "Add metadata support for client-server databases",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 0,
        "created_at": "2023-08-25T20:31:17Z",
        "updated_at": "2023-08-26T01:07:26Z",
        "closed_at": "2023-08-26T01:07:25Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, metadata can be stored in embedded databases such as SQLite and DuckDB.\r\n\r\nThis issue will expand support to client-server [databases via SQLAlchemy](https://docs.sqlalchemy.org/en/20/dialects/index.html) that have [JSON support](https://docs.sqlalchemy.org/en/20/core/type_basics.html#sqlalchemy.types.JSON). \r\n\r\nThis includes: PostgreSQL, MariaDB/MySQL and Microsoft SQL Server. Oracle has recently added JSON support but it's not supported by SQLAlchemy as of 2.0.20. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/532/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/532/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/531",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/531/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/531/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/531/events",
        "html_url": "https://github.com/neuml/txtai/issues/531",
        "id": 1865809826,
        "node_id": "I_kwDOERCdB85vNf-i",
        "number": 531,
        "title": "Fasttext did not run succesfully",
        "user": {
            "login": "nekiee13",
            "id": 141863417,
            "node_id": "U_kgDOCHSp-Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/141863417?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nekiee13",
            "html_url": "https://github.com/nekiee13",
            "followers_url": "https://api.github.com/users/nekiee13/followers",
            "following_url": "https://api.github.com/users/nekiee13/following{/other_user}",
            "gists_url": "https://api.github.com/users/nekiee13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nekiee13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nekiee13/subscriptions",
            "organizations_url": "https://api.github.com/users/nekiee13/orgs",
            "repos_url": "https://api.github.com/users/nekiee13/repos",
            "events_url": "https://api.github.com/users/nekiee13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nekiee13/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T20:08:07Z",
        "updated_at": "2023-08-30T17:59:14Z",
        "closed_at": "2023-08-30T17:59:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Installation executed by Python 3.10 on Win11, by recommended method (python virt. env). Installation fails at Fasttext.\r\n![Fasttext](https://github.com/neuml/txtai/assets/141863417/58889756-e28e-4437-984c-cb6143ae1bd5)\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/531/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/531/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/530",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/530/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/530/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/530/events",
        "html_url": "https://github.com/neuml/txtai/issues/530",
        "id": 1865665502,
        "node_id": "I_kwDOERCdB85vM8ve",
        "number": 530,
        "title": "404 for Docker documentation",
        "user": {
            "login": "DavidARivkin",
            "id": 8447737,
            "node_id": "MDQ6VXNlcjg0NDc3Mzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8447737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DavidARivkin",
            "html_url": "https://github.com/DavidARivkin",
            "followers_url": "https://api.github.com/users/DavidARivkin/followers",
            "following_url": "https://api.github.com/users/DavidARivkin/following{/other_user}",
            "gists_url": "https://api.github.com/users/DavidARivkin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DavidARivkin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DavidARivkin/subscriptions",
            "organizations_url": "https://api.github.com/users/DavidARivkin/orgs",
            "repos_url": "https://api.github.com/users/DavidARivkin/repos",
            "events_url": "https://api.github.com/users/DavidARivkin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DavidARivkin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-24T18:21:37Z",
        "updated_at": "2023-08-30T17:59:01Z",
        "closed_at": "2023-08-30T17:59:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When trying to access the Docker installation instructions page (Docker images are available for txtai. [See this section](https://github.com/neuml/txtai/blob/master/cloud) for more information on container-based installs.), it 404s.\r\n\r\nAlso, where can I find a Helm chart for installation on K8s?",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/530/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/530/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/529",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/529/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/529/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/529/events",
        "html_url": "https://github.com/neuml/txtai/issues/529",
        "id": 1861501785,
        "node_id": "I_kwDOERCdB85u9ENZ",
        "number": 529,
        "title": "ValueError: dictionary update sequence element #0 has length X; 2 is required",
        "user": {
            "login": "Vincent-liuwingsang",
            "id": 16081202,
            "node_id": "MDQ6VXNlcjE2MDgxMjAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16081202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vincent-liuwingsang",
            "html_url": "https://github.com/Vincent-liuwingsang",
            "followers_url": "https://api.github.com/users/Vincent-liuwingsang/followers",
            "following_url": "https://api.github.com/users/Vincent-liuwingsang/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vincent-liuwingsang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vincent-liuwingsang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vincent-liuwingsang/subscriptions",
            "organizations_url": "https://api.github.com/users/Vincent-liuwingsang/orgs",
            "repos_url": "https://api.github.com/users/Vincent-liuwingsang/repos",
            "events_url": "https://api.github.com/users/Vincent-liuwingsang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vincent-liuwingsang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 2264734939,
                "node_id": "MDU6TGFiZWwyMjY0NzM0OTM5",
                "url": "https://api.github.com/repos/neuml/txtai/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 10,
        "created_at": "2023-08-22T13:45:50Z",
        "updated_at": "2023-09-02T14:00:35Z",
        "closed_at": "2023-09-02T13:59:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I've been getting this error since upgrading to v6. Any idea what this could me?\ud83e\udd14\r\n\r\n```\r\nEmbeddings(\r\n        {\r\n            \"method\": \"sentence-transformers\",\r\n            \"path\": \"sentence-transformers/all-MiniLM-L6-v2\",\r\n            \"content\": \"src.custom_sqlite.sqlite.SQLite\",\r\n            \"hybrid\": True,\r\n        }\r\n    )\r\n```\r\n\r\n```\r\nfailed to process screenshots Traceback (most recent call last):\r\n  File \"/Users/wingsangvincentliu/Pathless/unlost-server/src/process_screenshots.py\", line 29, in process_screenshots\r\n    if process_screenshots_inner():\r\n       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/wingsangvincentliu/Pathless/unlost-server/src/process_screenshots.py\", line 115, in process_screenshots_inner\r\n    store_memory.persist()\r\n  File \"/Users/wingsangvincentliu/Pathless/unlost-server/src/memory.py\", line 232, in persist\r\n    embedding.instance.upsert(docs)\r\n  File \"/Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/txtai/embeddings/base.py\", line 174, in upsert\r\n    ids, _, embeddings = transform(stream(documents), buffer)\r\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/txtai/embeddings/index/transform.py\", line 72, in __call__\r\n    ids, dimensions, embeddings = self.vectors(documents, buffer)\r\n                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/txtai/embeddings/index/transform.py\", line 91, in vectors\r\n    ids, dimensions, batches, stream = self.model.index(self.stream(documents), self.batch)\r\n                                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/txtai/vectors/base.py\", line 92, in index\r\n    for document in documents:\r\n  File \"/Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/txtai/embeddings/index/transform.py\", line 170, in stream\r\n    self.load(batch, offset)\r\n  File \"/Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/txtai/embeddings/index/transform.py\", line 204, in load\r\n    self.scoring.insert(batch, self.offset)\r\n  File \"/Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/txtai/scoring/base.py\", line 104, in insert\r\n    self.addstats(tokens, tags)\r\n  File \"/Users/wingsangvincentliu/.pyenv/versions/3.11.1/lib/python3.11/site-packages/txtai/scoring/base.py\", line 398, in addstats\r\n    self.tags.update(tags.split())\r\nValueError: dictionary update sequence element #0 has length 15; 2 is required\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/529/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/529/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/528",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/528/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/528/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/528/events",
        "html_url": "https://github.com/neuml/txtai/issues/528",
        "id": 1858127614,
        "node_id": "I_kwDOERCdB85uwMb-",
        "number": 528,
        "title": "Problems on tutorial 3",
        "user": {
            "login": "gillsgills",
            "id": 93571298,
            "node_id": "U_kgDOBZPI4g",
            "avatar_url": "https://avatars.githubusercontent.com/u/93571298?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gillsgills",
            "html_url": "https://github.com/gillsgills",
            "followers_url": "https://api.github.com/users/gillsgills/followers",
            "following_url": "https://api.github.com/users/gillsgills/following{/other_user}",
            "gists_url": "https://api.github.com/users/gillsgills/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gillsgills/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gillsgills/subscriptions",
            "organizations_url": "https://api.github.com/users/gillsgills/orgs",
            "repos_url": "https://api.github.com/users/gillsgills/repos",
            "events_url": "https://api.github.com/users/gillsgills/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gillsgills/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-20T13:36:04Z",
        "updated_at": "2023-08-20T18:36:33Z",
        "closed_at": "2023-08-20T18:30:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am learning vector database by this amazing toolkit. However, when I met tutorial 3, I found it has an incomplete sentence: \r\n```\r\nWhile not quite as powerful as transformer embeddings, they often provide a g\r\n```\r\nI know what transformer embeddings usually can bring so I guess similar content can be fed?",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/528/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/528/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/527",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/527/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/527/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/527/events",
        "html_url": "https://github.com/neuml/txtai/issues/527",
        "id": 1857485471,
        "node_id": "I_kwDOERCdB85utvqf",
        "number": 527,
        "title": "use existing faiss index .bin file",
        "user": {
            "login": "shubharup",
            "id": 37605968,
            "node_id": "MDQ6VXNlcjM3NjA1OTY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/37605968?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shubharup",
            "html_url": "https://github.com/shubharup",
            "followers_url": "https://api.github.com/users/shubharup/followers",
            "following_url": "https://api.github.com/users/shubharup/following{/other_user}",
            "gists_url": "https://api.github.com/users/shubharup/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shubharup/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shubharup/subscriptions",
            "organizations_url": "https://api.github.com/users/shubharup/orgs",
            "repos_url": "https://api.github.com/users/shubharup/repos",
            "events_url": "https://api.github.com/users/shubharup/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shubharup/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-19T02:13:32Z",
        "updated_at": "2023-08-30T17:58:35Z",
        "closed_at": "2023-08-30T17:58:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi! \r\n\r\nJust to start, thanks to the developers for making such a powerful library freely available. I'm not very experienced with NLP yet so I ask for your excuse in advance if this is not the most informed question. \r\n\r\nI'm building a web front with semantic search in the background over a corpus of ~90,000 one liner documents. After around 96 hours of running continuously on my local CPU, the process failed due to lack of memory while I was using the computer for some other coding. The dataset is actually open-source, and the the authors have included a faiss index file in .bin format. When I try to load it using:\r\n\r\nembeddings.load(\"./faiss index.bin\")\r\n\r\nI get the error:\r\n\r\nFileNotFoundError: [Errno 2] No such file or directory: './faiss index.bin/config'\r\n\r\nMy question is, is there any way to use the existing faiss index instead of having to re-index from scratch myself? (the latter seems to be prohibitively time-consuming)\r\n\r\nThanks!",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/527/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/527/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/526",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/526/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/526/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/526/events",
        "html_url": "https://github.com/neuml/txtai/issues/526",
        "id": 1857068559,
        "node_id": "I_kwDOERCdB85usJ4P",
        "number": 526,
        "title": "Add hybrid search notebook",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 0,
        "created_at": "2023-08-18T17:41:36Z",
        "updated_at": "2023-08-18T17:44:33Z",
        "closed_at": "2023-08-18T17:44:32Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Add in-depth notebook covering hybrid search with benchmarks.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/526/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/526/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/525",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/525/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/525/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/525/events",
        "html_url": "https://github.com/neuml/txtai/issues/525",
        "id": 1856928521,
        "node_id": "I_kwDOERCdB85urnsJ",
        "number": 525,
        "title": "Add indexing of embeddings graph relationships",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/35",
            "html_url": "https://github.com/neuml/txtai/milestone/35",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/35/labels",
            "id": 10161718,
            "node_id": "MI_kwDOERCdB84Amw42",
            "number": 35,
            "title": "v6.3.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 4,
            "closed_issues": 10,
            "state": "open",
            "created_at": "2023-11-08T14:31:36Z",
            "updated_at": "2023-12-10T01:05:35Z",
            "due_on": null,
            "closed_at": null
        },
        "comments": 0,
        "created_at": "2023-08-18T15:40:57Z",
        "updated_at": "2023-11-08T14:31:43Z",
        "closed_at": null,
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Currently, it is assumed that all embeddings graph relationships will be automatically calculated, using semantic similarity.\r\n\r\nIt would be helpful to allow custom relationships to be added via the `index` and `upsert` methods. \r\n\r\nSimilar to `content` and `objects`, when `graph` is enabled, the indexing logic should look for a `relationships` field. The `relationships` field would have the following schema to establish the new graph edge.\r\n\r\n```json\r\n{\r\n    \"source\": \"uid 1\"\r\n    \"target\": \"uid 2\"\r\n} \r\n```\r\n\r\nAny other attributes will be added as edge attributes. Adding the `weight` attribute will establish the relationship strength, the same as the automatic method using semantic similarity. Otherwise, it will be default to the max value. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/525/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/525/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/524",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/524/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/524/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/524/events",
        "html_url": "https://github.com/neuml/txtai/issues/524",
        "id": 1856113379,
        "node_id": "I_kwDOERCdB85uogrj",
        "number": 524,
        "title": "Two models for embedding in parallel",
        "user": {
            "login": "akset2X",
            "id": 117704649,
            "node_id": "U_kgDOBwQHyQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/117704649?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akset2X",
            "html_url": "https://github.com/akset2X",
            "followers_url": "https://api.github.com/users/akset2X/followers",
            "following_url": "https://api.github.com/users/akset2X/following{/other_user}",
            "gists_url": "https://api.github.com/users/akset2X/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akset2X/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akset2X/subscriptions",
            "organizations_url": "https://api.github.com/users/akset2X/orgs",
            "repos_url": "https://api.github.com/users/akset2X/repos",
            "events_url": "https://api.github.com/users/akset2X/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akset2X/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-08-18T06:08:26Z",
        "updated_at": "2023-09-05T12:26:03Z",
        "closed_at": "2023-09-01T18:13:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am using txtAI functionality through REST API. Currently, I'm using all-MiniLM-L6-v2 but can I have another model for embedding at the same time ?\r\n\r\nAt the upsert/index time and search time, I should have the option to choose which model to use. That I will be choosing based on the language of the text. How can I achieve this?",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/524/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/524/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/523",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/523/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/523/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/523/events",
        "html_url": "https://github.com/neuml/txtai/issues/523",
        "id": 1855594329,
        "node_id": "I_kwDOERCdB85umh9Z",
        "number": 523,
        "title": "Add sparse keyword benchmark notebook",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 0,
        "created_at": "2023-08-17T19:39:12Z",
        "updated_at": "2023-08-17T19:40:23Z",
        "closed_at": "2023-08-17T19:40:23Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Use benchmarks.py script to compare txtai's sparse keyword indexes with other available methods.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/523/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/523/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/522",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/522/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/522/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/522/events",
        "html_url": "https://github.com/neuml/txtai/issues/522",
        "id": 1854990105,
        "node_id": "I_kwDOERCdB85ukOcZ",
        "number": 522,
        "title": "Add benchmark script",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 0,
        "created_at": "2023-08-17T13:19:08Z",
        "updated_at": "2023-08-17T13:27:45Z",
        "closed_at": "2023-08-17T13:27:45Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Add script to calculate benchmarks for txtai's sparse keyword, dense and hybrid indexes. Also add logic to calculate these same metrics for other similar libraries for comparison.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/522/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/522/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/521",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/521/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/521/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/521/events",
        "html_url": "https://github.com/neuml/txtai/issues/521",
        "id": 1854092120,
        "node_id": "I_kwDOERCdB85ugzNY",
        "number": 521,
        "title": "Question: How to use semantic graph & add edges",
        "user": {
            "login": "dustyatx",
            "id": 122811501,
            "node_id": "U_kgDOB1H0bQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/122811501?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dustyatx",
            "html_url": "https://github.com/dustyatx",
            "followers_url": "https://api.github.com/users/dustyatx/followers",
            "following_url": "https://api.github.com/users/dustyatx/following{/other_user}",
            "gists_url": "https://api.github.com/users/dustyatx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dustyatx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dustyatx/subscriptions",
            "organizations_url": "https://api.github.com/users/dustyatx/orgs",
            "repos_url": "https://api.github.com/users/dustyatx/repos",
            "events_url": "https://api.github.com/users/dustyatx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dustyatx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-17T01:19:23Z",
        "updated_at": "2023-08-18T15:42:48Z",
        "closed_at": "2023-08-18T13:35:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "TLDR: How do we use both similarity search and define edges with the semantic graph? \r\n\r\nIn the example on how to build a graph it shows how to use GraphFactory to create a graph, then graph.addnode to create a node and graph.addedge to create the edges. \r\n\r\nHowever lower down in the notebook it shows how to use embeddings and emeddings.index to load data into nodes. \r\n\r\nIs there a way to use both of these together? I have a dataset of nodes with UID for each node and edges that link the nodes together. I'd like to use those to define the known relationships and then use similarity on the nodes to identify relationships that are inferred based on similarity. \r\n\r\nSo for example I have a node that contains an articles of text, that node has entities which I know are mentioned in the text. They also have nodes that have categories like \"Logistics\". So I would want to query nodes similar to \"logistics\" and get \"shipping\", \"trucking\" then walk the graph to get the entities (via the linked articles)\r\n\r\nIs this possible? ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/521/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/521/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/520",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/520/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/520/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/520/events",
        "html_url": "https://github.com/neuml/txtai/issues/520",
        "id": 1851446822,
        "node_id": "I_kwDOERCdB85uWtYm",
        "number": 520,
        "title": "Refresh introducing txtai notebook",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/33",
            "html_url": "https://github.com/neuml/txtai/milestone/33",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/33/labels",
            "id": 9771211,
            "node_id": "MI_kwDOERCdB84AlRjL",
            "number": 33,
            "title": "v6.1.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 18,
            "state": "closed",
            "created_at": "2023-08-10T11:43:41Z",
            "updated_at": "2023-09-26T19:07:36Z",
            "due_on": null,
            "closed_at": "2023-09-26T19:07:36Z"
        },
        "comments": 0,
        "created_at": "2023-08-15T13:29:59Z",
        "updated_at": "2023-08-15T13:31:25Z",
        "closed_at": "2023-08-15T13:31:25Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "The introducing txtai notebook has been largely unchanged since the 4.0 release. This notebook should be refreshed to better reflect the latest functionality available in txtai. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/520/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/520/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/519",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/519/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/519/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/519/events",
        "html_url": "https://github.com/neuml/txtai/issues/519",
        "id": 1844291624,
        "node_id": "I_kwDOERCdB85t7ago",
        "number": 519,
        "title": "Add what's new in txtai 6.0 notebook",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/32",
            "html_url": "https://github.com/neuml/txtai/milestone/32",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/32/labels",
            "id": 9336936,
            "node_id": "MI_kwDOERCdB84Ajnho",
            "number": 32,
            "title": "v6.0.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 36,
            "state": "closed",
            "created_at": "2023-04-27T20:26:08Z",
            "updated_at": "2023-08-10T09:13:13Z",
            "due_on": null,
            "closed_at": "2023-08-10T09:13:13Z"
        },
        "comments": 0,
        "created_at": "2023-08-10T02:14:17Z",
        "updated_at": "2023-08-10T02:32:21Z",
        "closed_at": "2023-08-10T02:32:20Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Add what's new in txtai 6.0 notebook",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/519/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/519/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/518",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/518/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/518/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/518/events",
        "html_url": "https://github.com/neuml/txtai/issues/518",
        "id": 1843398096,
        "node_id": "I_kwDOERCdB85t4AXQ",
        "number": 518,
        "title": "Improvements when indexing through Applications",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/32",
            "html_url": "https://github.com/neuml/txtai/milestone/32",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/32/labels",
            "id": 9336936,
            "node_id": "MI_kwDOERCdB84Ajnho",
            "number": 32,
            "title": "v6.0.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 36,
            "state": "closed",
            "created_at": "2023-04-27T20:26:08Z",
            "updated_at": "2023-08-10T09:13:13Z",
            "due_on": null,
            "closed_at": "2023-08-10T09:13:13Z"
        },
        "comments": 0,
        "created_at": "2023-08-09T14:33:57Z",
        "updated_at": "2023-08-09T14:39:14Z",
        "closed_at": "2023-08-09T14:39:14Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Make the following improvements to help indexing through applications.\r\n\r\n- In `Application.add`, cast the input documents batch to a list. This will automatically convert a generator if that's provided. Note that this method is designed to work with small batches, not the entire dataset\r\n\r\n- Default `graph` and `topics` configuration if it's None. This is the same logic already available in `scoring`. This makes it possible to have cleaner input YAML syntax.",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/518/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/518/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/neuml/txtai/issues/517",
        "repository_url": "https://api.github.com/repos/neuml/txtai",
        "labels_url": "https://api.github.com/repos/neuml/txtai/issues/517/labels{/name}",
        "comments_url": "https://api.github.com/repos/neuml/txtai/issues/517/comments",
        "events_url": "https://api.github.com/repos/neuml/txtai/issues/517/events",
        "html_url": "https://github.com/neuml/txtai/issues/517",
        "id": 1842995724,
        "node_id": "I_kwDOERCdB85t2eIM",
        "number": 517,
        "title": "Add count method to database",
        "user": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "davidmezzetti",
            "id": 561939,
            "node_id": "MDQ6VXNlcjU2MTkzOQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmezzetti",
            "html_url": "https://github.com/davidmezzetti",
            "followers_url": "https://api.github.com/users/davidmezzetti/followers",
            "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
            "repos_url": "https://api.github.com/users/davidmezzetti/repos",
            "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": {
            "url": "https://api.github.com/repos/neuml/txtai/milestones/32",
            "html_url": "https://github.com/neuml/txtai/milestone/32",
            "labels_url": "https://api.github.com/repos/neuml/txtai/milestones/32/labels",
            "id": 9336936,
            "node_id": "MI_kwDOERCdB84Ajnho",
            "number": 32,
            "title": "v6.0.0",
            "description": "",
            "creator": {
                "login": "davidmezzetti",
                "id": 561939,
                "node_id": "MDQ6VXNlcjU2MTkzOQ==",
                "avatar_url": "https://avatars.githubusercontent.com/u/561939?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/davidmezzetti",
                "html_url": "https://github.com/davidmezzetti",
                "followers_url": "https://api.github.com/users/davidmezzetti/followers",
                "following_url": "https://api.github.com/users/davidmezzetti/following{/other_user}",
                "gists_url": "https://api.github.com/users/davidmezzetti/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/davidmezzetti/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/davidmezzetti/subscriptions",
                "organizations_url": "https://api.github.com/users/davidmezzetti/orgs",
                "repos_url": "https://api.github.com/users/davidmezzetti/repos",
                "events_url": "https://api.github.com/users/davidmezzetti/events{/privacy}",
                "received_events_url": "https://api.github.com/users/davidmezzetti/received_events",
                "type": "User",
                "site_admin": false
            },
            "open_issues": 0,
            "closed_issues": 36,
            "state": "closed",
            "created_at": "2023-04-27T20:26:08Z",
            "updated_at": "2023-08-10T09:13:13Z",
            "due_on": null,
            "closed_at": "2023-08-10T09:13:13Z"
        },
        "comments": 0,
        "created_at": "2023-08-09T11:03:22Z",
        "updated_at": "2023-08-09T11:28:27Z",
        "closed_at": "2023-08-09T11:28:27Z",
        "author_association": "MEMBER",
        "active_lock_reason": null,
        "body": "Add `count` method to the database. ",
        "reactions": {
            "url": "https://api.github.com/repos/neuml/txtai/issues/517/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/neuml/txtai/issues/517/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    }
]