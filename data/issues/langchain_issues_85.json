[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5506",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5506/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5506/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5506/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5506",
        "id": 1734454269,
        "node_id": "PR_kwDOIPDwls5RzXJI",
        "number": 5506,
        "title": "Add \"name\" parameter in Request body under messages for chat completions via OpenAI API",
        "user": {
            "login": "Smuglix",
            "id": 102866132,
            "node_id": "U_kgDOBiGc1A",
            "avatar_url": "https://avatars.githubusercontent.com/u/102866132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Smuglix",
            "html_url": "https://github.com/Smuglix",
            "followers_url": "https://api.github.com/users/Smuglix/followers",
            "following_url": "https://api.github.com/users/Smuglix/following{/other_user}",
            "gists_url": "https://api.github.com/users/Smuglix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Smuglix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Smuglix/subscriptions",
            "organizations_url": "https://api.github.com/users/Smuglix/orgs",
            "repos_url": "https://api.github.com/users/Smuglix/repos",
            "events_url": "https://api.github.com/users/Smuglix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Smuglix/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-05-31T15:09:35Z",
        "updated_at": "2023-09-13T20:40:12Z",
        "closed_at": "2023-09-13T20:40:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5506",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5506",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5506.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5506.patch",
            "merged_at": null
        },
        "body": "Add \"name\" parameter in Request body under messages for chat completions via OpenAI API\r\n\r\n\r\nThis adds \"name\" parameter to the request body inside \"messages\".\r\nFor example, when defining HumanMessage or AIMessage, there is now option to add name parameter like this:\r\n```py\r\n HumanMessage(content=\"Hello! what is my name?\", name='Ilya')\r\n```\r\nAs in OpenAI API: https://platform.openai.com/docs/api-reference/chat/create#chat/create-name\r\n![image](https://github.com/hwchase17/langchain/assets/102866132/d7d32bd7-11b7-4449-bfda-ddbf0805cd1b)\r\n\r\n\r\nThe message dictionaries look like this (of course name parameter is optional):\r\n```py\r\n{'role': 'system', 'content': \"That's goofy conversation without rules\"}\r\n{'role': 'user', 'name': 'Spy', 'content': 'Hello! what is my name? And your name?'}\r\n{'role': 'assistant', 'name': 'Scout', 'content': \"Hi! I won't answer your question, You mad? :P \"}\r\n{'role': 'assistant', 'name': 'Heavy', 'content': \"Bruh man, don't be mean\"}\r\n{'role': 'user', 'name': 'spy', 'content': 'As you wish, Scout. Off to visit your mom \u30fe(\u2022\u03c9\u2022`)o'}\r\n{'role': 'system', 'content': \"summarize the conversation and list it's participants\"}\r\n```\r\n\r\n## Simple test\r\n```py\r\nimport os\r\nfrom dotenv import load_dotenv\r\nload_dotenv()\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain import PromptTemplate, LLMChain\r\nfrom langchain.prompts.chat import (\r\n    ChatPromptTemplate,\r\n    SystemMessagePromptTemplate,\r\n    AIMessagePromptTemplate,\r\n    HumanMessagePromptTemplate,\r\n)\r\nfrom langchain.schema import (\r\n    AIMessage,\r\n    HumanMessage,\r\n    SystemMessage\r\n)\r\n\r\nchat = ChatOpenAI(model_name=\"gpt-4\",temperature=1) # change gpt-4 to gpt-3.5-turbo if you doesn't have gpt-4 access yet\r\nmessages = [\r\n    SystemMessage(content=\"That's goofy conversation without rules\"),\r\n    HumanMessage(content=\"Hello! what is my name? And your name?\", name='Spy'),\r\n    AIMessage(content=\"Hi! I won't answer your question, You mad? :P \", name='Scout'),\r\n    AIMessage(content=\"Bruh man, don't be mean\", name='Heavy'),\r\n    HumanMessage(content=\"As you wish, Scout. Off to visit your mom \u30fe(\u2022\u03c9\u2022`)o\", name='spy'),\r\n    SystemMessage(content=\"summarize the conversation and list it's participants\")\r\n\r\n]\r\nresponse=chat(messages)\r\n\r\nprint(response.content,end='\\n')\r\n```\r\nResponse should be smt like this:\r\n```\r\nParticipants: User (Spy), Assistant (Scout), Assistant (Heavy)\r\n\r\nSummary: The User initiates a goofy conversation asking about names. Assistant (Scout) responds playfully by not answering the question, then Assistant (Heavy) advises to not be mean. The User then continues with a witty remark about visiting Assistant (Scout)'s mom.\r\n```\r\n\r\n## Maintainers/contributors who might be interested:\r\n\r\n  Models\r\n  @hwchase17\r\n  @agola11\r\n\r\n  VectorStores / Retrievers / Memory\r\n  @dev2049\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5506/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5506/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5504",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5504/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5504/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5504/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5504",
        "id": 1734358887,
        "node_id": "PR_kwDOIPDwls5RzB__",
        "number": 5504,
        "title": "bump 187",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-31T14:26:44Z",
        "updated_at": "2023-05-31T14:35:10Z",
        "closed_at": "2023-05-31T14:35:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5504",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5504",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5504.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5504.patch",
            "merged_at": "2023-05-31T14:35:09Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5504/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5504/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5503",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5503/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5503/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5503/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5503",
        "id": 1734335335,
        "node_id": "PR_kwDOIPDwls5Ry8xh",
        "number": 5503,
        "title": "add more vars to text splitter",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-31T14:15:22Z",
        "updated_at": "2023-05-31T14:21:21Z",
        "closed_at": "2023-05-31T14:21:20Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5503",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5503",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5503.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5503.patch",
            "merged_at": "2023-05-31T14:21:20Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5503/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5503/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5502",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5502/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5502/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5502/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5502",
        "id": 1734332888,
        "node_id": "PR_kwDOIPDwls5Ry8Pk",
        "number": 5502,
        "title": "Text splitter regex",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-31T14:14:14Z",
        "updated_at": "2023-05-31T14:21:23Z",
        "closed_at": "2023-05-31T14:21:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5502",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5502",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5502.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5502.patch",
            "merged_at": null
        },
        "body": "# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5502/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5502/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5501",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5501/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5501/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5501/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5501",
        "id": 1734308967,
        "node_id": "PR_kwDOIPDwls5Ry29T",
        "number": 5501,
        "title": "Fix wrong class instantiation in docs MMR example",
        "user": {
            "login": "tobiasvanderwerff",
            "id": 33268192,
            "node_id": "MDQ6VXNlcjMzMjY4MTky",
            "avatar_url": "https://avatars.githubusercontent.com/u/33268192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tobiasvanderwerff",
            "html_url": "https://github.com/tobiasvanderwerff",
            "followers_url": "https://api.github.com/users/tobiasvanderwerff/followers",
            "following_url": "https://api.github.com/users/tobiasvanderwerff/following{/other_user}",
            "gists_url": "https://api.github.com/users/tobiasvanderwerff/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tobiasvanderwerff/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tobiasvanderwerff/subscriptions",
            "organizations_url": "https://api.github.com/users/tobiasvanderwerff/orgs",
            "repos_url": "https://api.github.com/users/tobiasvanderwerff/repos",
            "events_url": "https://api.github.com/users/tobiasvanderwerff/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tobiasvanderwerff/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-31T14:03:08Z",
        "updated_at": "2023-06-01T00:31:00Z",
        "closed_at": "2023-06-01T00:31:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5501",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5501",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5501.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5501.patch",
            "merged_at": "2023-06-01T00:31:00Z"
        },
        "body": "# Fix wrong class instantiation in docs MMR example\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\nWhen looking at the Maximal Marginal Relevance ExampleSelector example at https://python.langchain.com/en/latest/modules/prompts/example_selectors/examples/mmr.html, I noticed that there seems to be an error. Initially, the `MaxMarginalRelevanceExampleSelector` class is used as an `example_selector` argument to the `FewShotPromptTemplate` class. Then, according to the text, a comparison is made to regular similarity search. However, the `FewShotPromptTemplate` still uses the `MaxMarginalRelevanceExampleSelector` class, so the output is the same. \r\n\r\nTo fix it, I added an instantiation of the `SemanticSimilarityExampleSelector` class, because this seems to be what is intended.\r\n\r\n\r\n## Who can review?\r\n\r\n@hwchase17 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5501/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5501/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5500",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5500/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5500/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5500/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5500",
        "id": 1734262479,
        "node_id": "PR_kwDOIPDwls5Ryst9",
        "number": 5500,
        "title": "Add texts with embeddings to PGVector wrapper",
        "user": {
            "login": "shenghann",
            "id": 12733721,
            "node_id": "MDQ6VXNlcjEyNzMzNzIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12733721?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shenghann",
            "html_url": "https://github.com/shenghann",
            "followers_url": "https://api.github.com/users/shenghann/followers",
            "following_url": "https://api.github.com/users/shenghann/following{/other_user}",
            "gists_url": "https://api.github.com/users/shenghann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shenghann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shenghann/subscriptions",
            "organizations_url": "https://api.github.com/users/shenghann/orgs",
            "repos_url": "https://api.github.com/users/shenghann/repos",
            "events_url": "https://api.github.com/users/shenghann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shenghann/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-31T13:42:08Z",
        "updated_at": "2023-06-01T00:31:52Z",
        "closed_at": "2023-06-01T00:31:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5500",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5500",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5500.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5500.patch",
            "merged_at": "2023-06-01T00:31:52Z"
        },
        "body": "Similar to #1813 for faiss, this PR is to extend functionality to pass text and its vector pair to initialize and add embeddings to  the PGVector wrapper.\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n  - @dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5500/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5500/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5498",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5498/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5498/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5498/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5498",
        "id": 1734126410,
        "node_id": "I_kwDOIPDwls5nXKtK",
        "number": 5498,
        "title": "Tracking of time to generate text",
        "user": {
            "login": "dheerajiiitv",
            "id": 24246192,
            "node_id": "MDQ6VXNlcjI0MjQ2MTky",
            "avatar_url": "https://avatars.githubusercontent.com/u/24246192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dheerajiiitv",
            "html_url": "https://github.com/dheerajiiitv",
            "followers_url": "https://api.github.com/users/dheerajiiitv/followers",
            "following_url": "https://api.github.com/users/dheerajiiitv/following{/other_user}",
            "gists_url": "https://api.github.com/users/dheerajiiitv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dheerajiiitv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dheerajiiitv/subscriptions",
            "organizations_url": "https://api.github.com/users/dheerajiiitv/orgs",
            "repos_url": "https://api.github.com/users/dheerajiiitv/repos",
            "events_url": "https://api.github.com/users/dheerajiiitv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dheerajiiitv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-31T12:33:47Z",
        "updated_at": "2023-10-21T16:08:50Z",
        "closed_at": "2023-10-21T16:08:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nHey Team,\r\nI would like to propose a new feature that will enhance the visibility of the LLM's response time. In addition to providing information about token usage and cost, I suggest incorporating the time taken to generate the text. This additional metric will offer valuable insights into the efficiency and performance of the system.\r\n\r\n### Motivation\r\n\r\nBy including the response time, we can provide a comprehensive picture of the different LLM's API's performance, ensuring that we have a more accurate measure of its capabilities. This information will be particularly useful for evaluating and optimizing different LLMs, as it will shed light on the latency of the system.\r\n\r\n### Your contribution\r\n\r\nWe can easily implement this by adding additional variables in callbacks of LLM's. I would like to implement this feature.\r\n\r\nHere the example code:\r\n\r\n```\r\nclass BaseCallbackHandler:\r\n    \"\"\"Base callback handler that can be used to handle callbacks from langchain.\"\"\"\r\n    time_take_by_llm_to_generate_text: float = 0\r\n    start_time: float = 0\r\n    def on_llm_start(\r\n        self, serialized: Dict[str, Any], prompts: List[str], **kwargs: Any\r\n    ) -> Any:\r\n        \"\"\"Run when LLM starts running.\"\"\"\r\n        self.start_time = datetime.now()\r\n   \r\n\r\n    def on_llm_end(self, response: LLMResult, **kwargs: Any) -> Any:\r\n        \"\"\"Run when LLM ends running.\"\"\"\r\n        self.end_time = datetime.now()\r\n        self.time_take_by_llm_to_generate_text += end_time - start_time\r\n```\r\n   ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5498/reactions",
            "total_count": 4,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 4,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5498/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5497",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5497/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5497/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5497/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5497",
        "id": 1734121153,
        "node_id": "PR_kwDOIPDwls5RyNkI",
        "number": 5497,
        "title": "QuickFix for FinalStreamingStdOutCallbackHandler: Ignore new lines & white spaces",
        "user": {
            "login": "UmerHA",
            "id": 40663591,
            "node_id": "MDQ6VXNlcjQwNjYzNTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/40663591?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UmerHA",
            "html_url": "https://github.com/UmerHA",
            "followers_url": "https://api.github.com/users/UmerHA/followers",
            "following_url": "https://api.github.com/users/UmerHA/following{/other_user}",
            "gists_url": "https://api.github.com/users/UmerHA/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UmerHA/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UmerHA/subscriptions",
            "organizations_url": "https://api.github.com/users/UmerHA/orgs",
            "repos_url": "https://api.github.com/users/UmerHA/repos",
            "events_url": "https://api.github.com/users/UmerHA/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UmerHA/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-31T12:31:12Z",
        "updated_at": "2023-06-04T13:32:55Z",
        "closed_at": "2023-06-03T22:05:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5497",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5497",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5497.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5497.patch",
            "merged_at": "2023-06-03T22:05:58Z"
        },
        "body": "# Make FinalStreamingStdOutCallbackHandler more robust by ignoring new lines & white spaces\r\n\r\n`FinalStreamingStdOutCallbackHandler` doesn't work out of the box with `ChatOpenAI`, as it tokenized slightly differently than `OpenAI`. The response of `OpenAI` contains the tokens `[\"\\nFinal\", \" Answer\", \":\"]` while `ChatOpenAI` contains `[\"Final\", \" Answer\", \":\"]`.\r\n\r\nThis PR make `FinalStreamingStdOutCallbackHandler` more robust by ignoring new lines & white spaces when determining if the answer prefix has been reached.\r\n\r\nFixes #5433\r\n\r\n## Who can review?\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\nTracing / Callbacks\r\n- @agola11\r\n\r\nTwitter: [@UmerHAdil](https://twitter.com/@UmerHAdil) | Discord: RicChilligerDude#7589",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5497/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5497/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5496",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5496/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5496/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5496/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5496",
        "id": 1734115502,
        "node_id": "PR_kwDOIPDwls5RyMSe",
        "number": 5496,
        "title": "simple code update",
        "user": {
            "login": "chenweisomebody126",
            "id": 16988728,
            "node_id": "MDQ6VXNlcjE2OTg4NzI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16988728?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chenweisomebody126",
            "html_url": "https://github.com/chenweisomebody126",
            "followers_url": "https://api.github.com/users/chenweisomebody126/followers",
            "following_url": "https://api.github.com/users/chenweisomebody126/following{/other_user}",
            "gists_url": "https://api.github.com/users/chenweisomebody126/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chenweisomebody126/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chenweisomebody126/subscriptions",
            "organizations_url": "https://api.github.com/users/chenweisomebody126/orgs",
            "repos_url": "https://api.github.com/users/chenweisomebody126/repos",
            "events_url": "https://api.github.com/users/chenweisomebody126/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chenweisomebody126/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-31T12:28:38Z",
        "updated_at": "2023-06-11T18:52:05Z",
        "closed_at": "2023-06-11T18:52:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5496",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5496",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5496.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5496.patch",
            "merged_at": null
        },
        "body": "# Update the comments and python logic \r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5496/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5496/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5495",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5495/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5495/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5495/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5495",
        "id": 1734058640,
        "node_id": "PR_kwDOIPDwls5Rx_wS",
        "number": 5495,
        "title": "make the elasticsearch api support version which below 8.x",
        "user": {
            "login": "ARSblithe212",
            "id": 22144293,
            "node_id": "MDQ6VXNlcjIyMTQ0Mjkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/22144293?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ARSblithe212",
            "html_url": "https://github.com/ARSblithe212",
            "followers_url": "https://api.github.com/users/ARSblithe212/followers",
            "following_url": "https://api.github.com/users/ARSblithe212/following{/other_user}",
            "gists_url": "https://api.github.com/users/ARSblithe212/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ARSblithe212/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ARSblithe212/subscriptions",
            "organizations_url": "https://api.github.com/users/ARSblithe212/orgs",
            "repos_url": "https://api.github.com/users/ARSblithe212/repos",
            "events_url": "https://api.github.com/users/ARSblithe212/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ARSblithe212/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-31T11:59:00Z",
        "updated_at": "2023-06-01T17:58:32Z",
        "closed_at": "2023-06-01T17:58:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5495",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5495",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5495.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5495.patch",
            "merged_at": "2023-06-01T17:58:20Z"
        },
        "body": "# Your PR Title (What it does)\r\nmake the elasticsearch api support version which below 8.x\r\n<!--\r\n the api which create index or search in the elasticsearch below 8.x is different with 8.x. When use the es which below 8.x , it will throw error. I fix the problem\r\n-->\r\n\r\n\r\n\r\n\r\n  @hwchase17\r\n\r\n  @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5495/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5495/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5494",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5494/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5494/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5494/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5494",
        "id": 1733925749,
        "node_id": "PR_kwDOIPDwls5Rxic8",
        "number": 5494,
        "title": "feat: support NebulaGraph DB, add NebulaGraphQAChain",
        "user": {
            "login": "wey-gu",
            "id": 1651790,
            "node_id": "MDQ6VXNlcjE2NTE3OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1651790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wey-gu",
            "html_url": "https://github.com/wey-gu",
            "followers_url": "https://api.github.com/users/wey-gu/followers",
            "following_url": "https://api.github.com/users/wey-gu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wey-gu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wey-gu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wey-gu/subscriptions",
            "organizations_url": "https://api.github.com/users/wey-gu/orgs",
            "repos_url": "https://api.github.com/users/wey-gu/repos",
            "events_url": "https://api.github.com/users/wey-gu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wey-gu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-31T10:48:25Z",
        "updated_at": "2023-06-08T06:16:56Z",
        "closed_at": "2023-06-08T04:38:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5494",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5494",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5494.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5494.patch",
            "merged_at": "2023-06-08T04:38:43Z"
        },
        "body": "# feat: support NebulaGraph DB, add NebulaGraphQAChain\r\n\r\nBring the support of [NebulaGraph](http://github.com/vesoft-inc/nebula), the open-source distributed graph database with NebulaGraphQAChain\r\n\r\n## Before submitting\r\n\r\n- [x] a test for the integration - favor unit tests that do not rely on network access.\r\n- [x] an example notebook showing its use\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@tomasonjo\r\n@vowelparrot\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5494/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5494/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5493",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5493/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5493/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5493/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5493",
        "id": 1733916668,
        "node_id": "I_kwDOIPDwls5nWXf8",
        "number": 5493,
        "title": "Issue: LLM callback handler not printing in Docker",
        "user": {
            "login": "kd-leo",
            "id": 126190162,
            "node_id": "U_kgDOB4WCUg",
            "avatar_url": "https://avatars.githubusercontent.com/u/126190162?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kd-leo",
            "html_url": "https://github.com/kd-leo",
            "followers_url": "https://api.github.com/users/kd-leo/followers",
            "following_url": "https://api.github.com/users/kd-leo/following{/other_user}",
            "gists_url": "https://api.github.com/users/kd-leo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kd-leo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kd-leo/subscriptions",
            "organizations_url": "https://api.github.com/users/kd-leo/orgs",
            "repos_url": "https://api.github.com/users/kd-leo/repos",
            "events_url": "https://api.github.com/users/kd-leo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kd-leo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-31T10:43:14Z",
        "updated_at": "2023-11-16T02:12:25Z",
        "closed_at": "2023-09-10T16:09:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI have a Flask with LangChain setup in docker-compose, and I don't see LLM ChatOpenAI streaming output from CallbackHandlers in console, but everything works when I run it locally without Docker.\r\n\r\nMy CallbackHandler code (StreamingStdOutCallbackHandler also doesn't work):\r\n```\r\nfrom typing import Any\r\nfrom langchain.callbacks.base import BaseCallbackHandler\r\n\r\nclass StreamingOutput(BaseCallbackHandler):\r\n    def on_llm_new_token(self, token: str, **kwargs: Any) -> None:\r\n        print(token, end=\"\", flush=True)\r\n```\r\n\r\n- ChatOpenAI has streaming and verbose flags set to true\r\n- ConversationChain has verbose flag set to True\r\n- Flask is run with `CMD [\"flask\", \"run\", \"--debug\", \"--with-threads\"]`\r\n\r\nI tried setting the PYTHONUNBUFFERED env variable but it didn't help - what am I doing wrong?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5493/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5493/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5492",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5492/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5492/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5492/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5492",
        "id": 1733868611,
        "node_id": "I_kwDOIPDwls5nWLxD",
        "number": 5492,
        "title": "Can I connect to my RDBMS?",
        "user": {
            "login": "microyybar",
            "id": 69891168,
            "node_id": "MDQ6VXNlcjY5ODkxMTY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/69891168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/microyybar",
            "html_url": "https://github.com/microyybar",
            "followers_url": "https://api.github.com/users/microyybar/followers",
            "following_url": "https://api.github.com/users/microyybar/following{/other_user}",
            "gists_url": "https://api.github.com/users/microyybar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/microyybar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/microyybar/subscriptions",
            "organizations_url": "https://api.github.com/users/microyybar/orgs",
            "repos_url": "https://api.github.com/users/microyybar/repos",
            "events_url": "https://api.github.com/users/microyybar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/microyybar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-31T10:17:58Z",
        "updated_at": "2023-09-18T16:09:50Z",
        "closed_at": "2023-09-18T16:09:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Can I connect to my RDBMS?\r\n\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5492/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5492/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5490",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5490/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5490/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5490/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5490",
        "id": 1733741544,
        "node_id": "I_kwDOIPDwls5nVsvo",
        "number": 5490,
        "title": "Error while importing Langchain ",
        "user": {
            "login": "armaandhar",
            "id": 87694042,
            "node_id": "MDQ6VXNlcjg3Njk0MDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/87694042?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/armaandhar",
            "html_url": "https://github.com/armaandhar",
            "followers_url": "https://api.github.com/users/armaandhar/followers",
            "following_url": "https://api.github.com/users/armaandhar/following{/other_user}",
            "gists_url": "https://api.github.com/users/armaandhar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/armaandhar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/armaandhar/subscriptions",
            "organizations_url": "https://api.github.com/users/armaandhar/orgs",
            "repos_url": "https://api.github.com/users/armaandhar/repos",
            "events_url": "https://api.github.com/users/armaandhar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/armaandhar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-31T09:18:01Z",
        "updated_at": "2023-09-18T16:09:56Z",
        "closed_at": "2023-09-18T16:09:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nInput In [6], in <cell line: 1>()\r\n----> 1 import langchain\r\n\r\nFile ~\\anaconda3\\lib\\site-packages\\langchain\\__init__.py:6, in <module>\r\n      3 from importlib import metadata\r\n      4 from typing import Optional\r\n----> 6 from langchain.agents import MRKLChain, ReActChain, SelfAskWithSearchChain\r\n      7 from langchain.cache import BaseCache\r\n      8 from langchain.chains import (\r\n      9     ConversationChain,\r\n     10     LLMBashChain,\r\n   (...)\r\n     18     VectorDBQAWithSourcesChain,\r\n     19 )\r\n\r\nFile ~\\anaconda3\\lib\\site-packages\\langchain\\agents\\__init__.py:2, in <module>\r\n      1 \"\"\"Interface for agents.\"\"\"\r\n----> 2 from langchain.agents.agent import (\r\n      3     Agent,\r\n      4     AgentExecutor,\r\n      5     AgentOutputParser,\r\n      6     BaseMultiActionAgent,\r\n      7     BaseSingleActionAgent,\r\n      8     LLMSingleActionAgent,\r\n      9 )\r\n     10 from langchain.agents.agent_toolkits import (\r\n     11     create_csv_agent,\r\n     12     create_json_agent,\r\n   (...)\r\n     21     create_vectorstore_router_agent,\r\n     22 )\r\n     23 from langchain.agents.agent_types import AgentType\r\n\r\nFile ~\\anaconda3\\lib\\site-packages\\langchain\\agents\\agent.py:13, in <module>\r\n     10 from typing import Any, Callable, Dict, List, Optional, Sequence, Tuple, Union\r\n     12 import yaml\r\n---> 13 from pydantic import BaseModel, root_validator\r\n     15 from langchain.agents.agent_types import AgentType\r\n     16 from langchain.agents.tools import InvalidTool\r\n\r\nFile ~\\anaconda3\\lib\\site-packages\\pydantic\\__init__.py:2, in init pydantic.__init__()\r\n\r\nFile ~\\anaconda3\\lib\\site-packages\\pydantic\\dataclasses.py:48, in init pydantic.dataclasses()\r\n\r\nFile ~\\anaconda3\\lib\\site-packages\\pydantic\\main.py:120, in init pydantic.main()\r\n\r\nTypeError: dataclass_transform() got an unexpected keyword argument 'field_specifiers'\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5490/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5490/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5489",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5489/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5489/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5489/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5489",
        "id": 1733653438,
        "node_id": "I_kwDOIPDwls5nVXO-",
        "number": 5489,
        "title": "the text splitter adds metadata by itself",
        "user": {
            "login": "etherious1804",
            "id": 73232975,
            "node_id": "MDQ6VXNlcjczMjMyOTc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/73232975?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/etherious1804",
            "html_url": "https://github.com/etherious1804",
            "followers_url": "https://api.github.com/users/etherious1804/followers",
            "following_url": "https://api.github.com/users/etherious1804/following{/other_user}",
            "gists_url": "https://api.github.com/users/etherious1804/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/etherious1804/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/etherious1804/subscriptions",
            "organizations_url": "https://api.github.com/users/etherious1804/orgs",
            "repos_url": "https://api.github.com/users/etherious1804/repos",
            "events_url": "https://api.github.com/users/etherious1804/events{/privacy}",
            "received_events_url": "https://api.github.com/users/etherious1804/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-31T08:27:59Z",
        "updated_at": "2023-11-30T16:09:16Z",
        "closed_at": "2023-11-30T16:09:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI cant find any way to add custom metadata with the character splitter, it adds source as metadata but I cant seem to change it or define what kind of metadata I want\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5489/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5489/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5488",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5488/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5488/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5488/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5488",
        "id": 1733633884,
        "node_id": "I_kwDOIPDwls5nVSdc",
        "number": 5488,
        "title": "Connecting to Elastic vector store throws ssl error",
        "user": {
            "login": "naimavahab",
            "id": 13636783,
            "node_id": "MDQ6VXNlcjEzNjM2Nzgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/13636783?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/naimavahab",
            "html_url": "https://github.com/naimavahab",
            "followers_url": "https://api.github.com/users/naimavahab/followers",
            "following_url": "https://api.github.com/users/naimavahab/following{/other_user}",
            "gists_url": "https://api.github.com/users/naimavahab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/naimavahab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/naimavahab/subscriptions",
            "organizations_url": "https://api.github.com/users/naimavahab/orgs",
            "repos_url": "https://api.github.com/users/naimavahab/repos",
            "events_url": "https://api.github.com/users/naimavahab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/naimavahab/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-31T08:15:41Z",
        "updated_at": "2023-09-26T16:06:29Z",
        "closed_at": "2023-09-26T16:06:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Is there a way to pass parameters to Elasticvectorsearch to disable ssl verification. I tried to add verify_certs=False and ssl_verify=None ; but both didnt work. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5488/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5488/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5487",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5487/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5487/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5487/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5487",
        "id": 1733616462,
        "node_id": "I_kwDOIPDwls5nVONO",
        "number": 5487,
        "title": "HuggingFacePipeline is not loaded correctly",
        "user": {
            "login": "liangz1",
            "id": 7851093,
            "node_id": "MDQ6VXNlcjc4NTEwOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7851093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liangz1",
            "html_url": "https://github.com/liangz1",
            "followers_url": "https://api.github.com/users/liangz1/followers",
            "following_url": "https://api.github.com/users/liangz1/following{/other_user}",
            "gists_url": "https://api.github.com/users/liangz1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liangz1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liangz1/subscriptions",
            "organizations_url": "https://api.github.com/users/liangz1/orgs",
            "repos_url": "https://api.github.com/users/liangz1/repos",
            "events_url": "https://api.github.com/users/liangz1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liangz1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-31T08:05:06Z",
        "updated_at": "2023-11-14T14:53:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.186\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nRunning the following code snippet:\r\n```python\r\nfrom langchain import HuggingFacePipeline\r\n\r\nllm = HuggingFacePipeline.from_model_id(model_id=\"bigscience/bloom-1b7\", task=\"text-generation\", model_kwargs={\"temperature\":0, \"max_length\":64})\r\n\r\nfrom langchain import PromptTemplate,  LLMChain\r\n\r\ntemplate = \"\"\"Question: {question}\r\n\r\nAnswer: Let's think step by step.\"\"\"\r\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\r\n\r\nllm_chain = LLMChain(prompt=prompt, llm=llm)\r\nllm_chain.save(\"/tmp/hfp/model.yaml\")\r\nfrom langchain.chains.loading import load_chain\r\nlocal_loaded_model = load_chain(\"/tmp/hfp/model.yaml\")\r\nquestion = \"What is electroencephalography?\"\r\nlocal_loaded_model.run(question)\r\n```\r\nGives the following error:\r\n```\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nFile <command-826248432925795>:1\r\n----> 1 local_loaded_model.run(question)\r\n\r\nFile /local_disk0/.ephemeral_nfs/envs/pythonEnv-51383c0b-9b1f-48ec-a6a9-ac979dcdc755/lib/python3.10/site-packages/langchain/chains/base.py:236, in Chain.run(self, callbacks, *args, **kwargs)\r\n    234     if len(args) != 1:\r\n    235         raise ValueError(\"`run` supports only one positional argument.\")\r\n--> 236     return self(args[0], callbacks=callbacks)[self.output_keys[0]]\r\n    238 if kwargs and not args:\r\n    239     return self(kwargs, callbacks=callbacks)[self.output_keys[0]]\r\n\r\nFile /local_disk0/.ephemeral_nfs/envs/pythonEnv-51383c0b-9b1f-48ec-a6a9-ac979dcdc755/lib/python3.10/site-packages/langchain/chains/base.py:140, in Chain.__call__(self, inputs, return_only_outputs, callbacks)\r\n    138 except (KeyboardInterrupt, Exception) as e:\r\n    139     run_manager.on_chain_error(e)\r\n--> 140     raise e\r\n    141 run_manager.on_chain_end(outputs)\r\n    142 return self.prep_outputs(inputs, outputs, return_only_outputs)\r\n\r\nFile /local_disk0/.ephemeral_nfs/envs/pythonEnv-51383c0b-9b1f-48ec-a6a9-ac979dcdc755/lib/python3.10/site-packages/langchain/chains/base.py:134, in Chain.__call__(self, inputs, return_only_outputs, callbacks)\r\n    128 run_manager = callback_manager.on_chain_start(\r\n    129     {\"name\": self.__class__.__name__},\r\n    130     inputs,\r\n    131 )\r\n    132 try:\r\n    133     outputs = (\r\n--> 134         self._call(inputs, run_manager=run_manager)\r\n    135         if new_arg_supported\r\n    136         else self._call(inputs)\r\n    137     )\r\n    138 except (KeyboardInterrupt, Exception) as e:\r\n    139     run_manager.on_chain_error(e)\r\n\r\nFile /local_disk0/.ephemeral_nfs/envs/pythonEnv-51383c0b-9b1f-48ec-a6a9-ac979dcdc755/lib/python3.10/site-packages/langchain/chains/llm.py:69, in LLMChain._call(self, inputs, run_manager)\r\n     64 def _call(\r\n     65     self,\r\n     66     inputs: Dict[str, Any],\r\n     67     run_manager: Optional[CallbackManagerForChainRun] = None,\r\n     68 ) -> Dict[str, str]:\r\n---> 69     response = self.generate([inputs], run_manager=run_manager)\r\n     70     return self.create_outputs(response)[0]\r\n\r\nFile /local_disk0/.ephemeral_nfs/envs/pythonEnv-51383c0b-9b1f-48ec-a6a9-ac979dcdc755/lib/python3.10/site-packages/langchain/chains/llm.py:79, in LLMChain.generate(self, input_list, run_manager)\r\n     77 \"\"\"Generate LLM result from inputs.\"\"\"\r\n     78 prompts, stop = self.prep_prompts(input_list, run_manager=run_manager)\r\n---> 79 return self.llm.generate_prompt(\r\n     80     prompts, stop, callbacks=run_manager.get_child() if run_manager else None\r\n     81 )\r\n\r\nFile /local_disk0/.ephemeral_nfs/envs/pythonEnv-51383c0b-9b1f-48ec-a6a9-ac979dcdc755/lib/python3.10/site-packages/langchain/llms/base.py:134, in BaseLLM.generate_prompt(self, prompts, stop, callbacks)\r\n    127 def generate_prompt(\r\n    128     self,\r\n    129     prompts: List[PromptValue],\r\n    130     stop: Optional[List[str]] = None,\r\n    131     callbacks: Callbacks = None,\r\n    132 ) -> LLMResult:\r\n    133     prompt_strings = [p.to_string() for p in prompts]\r\n--> 134     return self.generate(prompt_strings, stop=stop, callbacks=callbacks)\r\n\r\nFile /local_disk0/.ephemeral_nfs/envs/pythonEnv-51383c0b-9b1f-48ec-a6a9-ac979dcdc755/lib/python3.10/site-packages/langchain/llms/base.py:191, in BaseLLM.generate(self, prompts, stop, callbacks)\r\n    189 except (KeyboardInterrupt, Exception) as e:\r\n    190     run_manager.on_llm_error(e)\r\n--> 191     raise e\r\n    192 run_manager.on_llm_end(output)\r\n    193 return output\r\n\r\nFile /local_disk0/.ephemeral_nfs/envs/pythonEnv-51383c0b-9b1f-48ec-a6a9-ac979dcdc755/lib/python3.10/site-packages/langchain/llms/base.py:185, in BaseLLM.generate(self, prompts, stop, callbacks)\r\n    180 run_manager = callback_manager.on_llm_start(\r\n    181     {\"name\": self.__class__.__name__}, prompts, invocation_params=params\r\n    182 )\r\n    183 try:\r\n    184     output = (\r\n--> 185         self._generate(prompts, stop=stop, run_manager=run_manager)\r\n    186         if new_arg_supported\r\n    187         else self._generate(prompts, stop=stop)\r\n    188     )\r\n    189 except (KeyboardInterrupt, Exception) as e:\r\n    190     run_manager.on_llm_error(e)\r\n\r\nFile /local_disk0/.ephemeral_nfs/envs/pythonEnv-51383c0b-9b1f-48ec-a6a9-ac979dcdc755/lib/python3.10/site-packages/langchain/llms/base.py:436, in LLM._generate(self, prompts, stop, run_manager)\r\n    433 new_arg_supported = inspect.signature(self._call).parameters.get(\"run_manager\")\r\n    434 for prompt in prompts:\r\n    435     text = (\r\n--> 436         self._call(prompt, stop=stop, run_manager=run_manager)\r\n    437         if new_arg_supported\r\n    438         else self._call(prompt, stop=stop)\r\n    439     )\r\n    440     generations.append([Generation(text=text)])\r\n    441 return LLMResult(generations=generations)\r\n\r\nFile /local_disk0/.ephemeral_nfs/envs/pythonEnv-51383c0b-9b1f-48ec-a6a9-ac979dcdc755/lib/python3.10/site-packages/langchain/llms/huggingface_pipeline.py:168, in HuggingFacePipeline._call(self, prompt, stop, run_manager)\r\n    162 def _call(\r\n    163     self,\r\n    164     prompt: str,\r\n    165     stop: Optional[List[str]] = None,\r\n    166     run_manager: Optional[CallbackManagerForLLMRun] = None,\r\n    167 ) -> str:\r\n--> 168     response = self.pipeline(prompt)\r\n    169     if self.pipeline.task == \"text-generation\":\r\n    170         # Text generation return includes the starter text.\r\n    171         text = response[0][\"generated_text\"][len(prompt) :]\r\n\r\nTypeError: 'NoneType' object is not callable\r\n```\n\n### Expected behavior\n\n`local_loaded_model.run(question)` should behave the same way as:\r\n```python\r\nllm_chain.run(question)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5487/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5487/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5486",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5486/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5486/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5486/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5486",
        "id": 1733606212,
        "node_id": "PR_kwDOIPDwls5Rwcgt",
        "number": 5486,
        "title": "Gfrenkel/sql columns option",
        "user": {
            "login": "Gil-Frenkel",
            "id": 40665898,
            "node_id": "MDQ6VXNlcjQwNjY1ODk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/40665898?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gil-Frenkel",
            "html_url": "https://github.com/Gil-Frenkel",
            "followers_url": "https://api.github.com/users/Gil-Frenkel/followers",
            "following_url": "https://api.github.com/users/Gil-Frenkel/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gil-Frenkel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gil-Frenkel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gil-Frenkel/subscriptions",
            "organizations_url": "https://api.github.com/users/Gil-Frenkel/orgs",
            "repos_url": "https://api.github.com/users/Gil-Frenkel/repos",
            "events_url": "https://api.github.com/users/Gil-Frenkel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gil-Frenkel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-31T07:59:24Z",
        "updated_at": "2023-11-07T04:21:01Z",
        "closed_at": "2023-11-07T04:21:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5486",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5486",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5486.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5486.patch",
            "merged_at": null
        },
        "body": "# Add column names to SQLDatabase.run() result\r\n\r\nDescription:\r\nCurrent state: SQLDatabase.run() method returns a result from the database after executing a SQL query but there is no option of adding the column names as well to the returned result.\r\n\r\nPR offer the following solution:\r\n\r\nAdding a argument \"include_column_names_on_query\" to the SQLDatabase constructor.\r\nBy default, this argument will be set to False, but when set to True, SQLDatabase.run() method will add the column names to the result (if the result is not empty).\r\n\r\n\r\nWould love to hear some feedback!\r\n\r\n  -  @hwchase17\r\n  - @vowelparrot\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5486/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5486/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5485",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5485/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5485/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5485/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5485",
        "id": 1733598360,
        "node_id": "PR_kwDOIPDwls5Rwa1b",
        "number": 5485,
        "title": "Add param requests_kwargs for WebBaseLoader",
        "user": {
            "login": "sevendark",
            "id": 13547104,
            "node_id": "MDQ6VXNlcjEzNTQ3MTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13547104?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sevendark",
            "html_url": "https://github.com/sevendark",
            "followers_url": "https://api.github.com/users/sevendark/followers",
            "following_url": "https://api.github.com/users/sevendark/following{/other_user}",
            "gists_url": "https://api.github.com/users/sevendark/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sevendark/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sevendark/subscriptions",
            "organizations_url": "https://api.github.com/users/sevendark/orgs",
            "repos_url": "https://api.github.com/users/sevendark/repos",
            "events_url": "https://api.github.com/users/sevendark/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sevendark/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-31T07:54:37Z",
        "updated_at": "2023-05-31T22:27:39Z",
        "closed_at": "2023-05-31T22:27:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5485",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5485",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5485.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5485.patch",
            "merged_at": "2023-05-31T22:27:39Z"
        },
        "body": "# Add param `requests_kwargs` for WebBaseLoader\r\n\r\nFixes # (issue)\r\n\r\n#5483 \r\n\r\n## Who can review?\r\n\r\n@eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5485/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5485/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5484",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5484/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5484/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5484/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5484",
        "id": 1733598037,
        "node_id": "PR_kwDOIPDwls5RwaxD",
        "number": 5484,
        "title": "Adds var and class to JS separators",
        "user": {
            "login": "jacoblee93",
            "id": 6952323,
            "node_id": "MDQ6VXNlcjY5NTIzMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6952323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacoblee93",
            "html_url": "https://github.com/jacoblee93",
            "followers_url": "https://api.github.com/users/jacoblee93/followers",
            "following_url": "https://api.github.com/users/jacoblee93/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacoblee93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacoblee93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacoblee93/subscriptions",
            "organizations_url": "https://api.github.com/users/jacoblee93/orgs",
            "repos_url": "https://api.github.com/users/jacoblee93/repos",
            "events_url": "https://api.github.com/users/jacoblee93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacoblee93/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-31T07:54:22Z",
        "updated_at": "2023-05-31T14:11:56Z",
        "closed_at": "2023-05-31T14:11:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5484",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5484",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5484.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5484.patch",
            "merged_at": null
        },
        "body": "# Adds var and class to JS separators\r\n\r\nSome additional separators for text splitting on JS code.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5484/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5484/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5483",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5483/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5483/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5483/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5483",
        "id": 1733595290,
        "node_id": "I_kwDOIPDwls5nVJCa",
        "number": 5483,
        "title": "[SSL: CERTIFICATE_VERIFY_FAILED] while load from SitemapLoader",
        "user": {
            "login": "sevendark",
            "id": 13547104,
            "node_id": "MDQ6VXNlcjEzNTQ3MTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13547104?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sevendark",
            "html_url": "https://github.com/sevendark",
            "followers_url": "https://api.github.com/users/sevendark/followers",
            "following_url": "https://api.github.com/users/sevendark/following{/other_user}",
            "gists_url": "https://api.github.com/users/sevendark/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sevendark/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sevendark/subscriptions",
            "organizations_url": "https://api.github.com/users/sevendark/orgs",
            "repos_url": "https://api.github.com/users/sevendark/repos",
            "events_url": "https://api.github.com/users/sevendark/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sevendark/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-31T07:52:33Z",
        "updated_at": "2023-06-19T01:34:19Z",
        "closed_at": "2023-06-19T01:34:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain: 0.0.181\r\nplatform: windows\r\npython: 3.11.3\r\n\r\n### Who can help?\r\n\r\n@eyurtsev \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```py\r\nsite_loader = SitemapLoader(web_path=\"https://help.glueup.com/sitemap_index.xml\")\r\n\r\ndocs = site_loader.load()\r\nprint(docs[0])\r\n\r\n# ssl.SSLCertVerificationError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get local issuer certificate (_ssl.c:1002)\r\n```\r\n\r\n### Expected behavior\r\n\r\nprint the frist doc",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5483/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5483/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5482",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5482/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5482/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5482/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5482",
        "id": 1733595038,
        "node_id": "PR_kwDOIPDwls5RwaI5",
        "number": 5482,
        "title": "Add option to ignore column names in SQLDatabase.run()",
        "user": {
            "login": "Gil-Frenkel",
            "id": 40665898,
            "node_id": "MDQ6VXNlcjQwNjY1ODk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/40665898?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Gil-Frenkel",
            "html_url": "https://github.com/Gil-Frenkel",
            "followers_url": "https://api.github.com/users/Gil-Frenkel/followers",
            "following_url": "https://api.github.com/users/Gil-Frenkel/following{/other_user}",
            "gists_url": "https://api.github.com/users/Gil-Frenkel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Gil-Frenkel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Gil-Frenkel/subscriptions",
            "organizations_url": "https://api.github.com/users/Gil-Frenkel/orgs",
            "repos_url": "https://api.github.com/users/Gil-Frenkel/repos",
            "events_url": "https://api.github.com/users/Gil-Frenkel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Gil-Frenkel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-31T07:52:22Z",
        "updated_at": "2023-05-31T07:58:48Z",
        "closed_at": "2023-05-31T07:58:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5482",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5482",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5482.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5482.patch",
            "merged_at": null
        },
        "body": "# Add column names to SQLDatabase.run() result\r\n\r\nDescription:\r\nCurrent state: SQLDatabase.run() method returns a result from the database after executing a SQL query but there is no option of adding the column names as well to the returned result.\r\n\r\nPR offer the following solution:\r\n\r\nAdding a argument \"ignore_column_names_on_query\" to the SQLDatabase constructor.\r\nBy default, the argument is set to True, but when set to False, SQLDatabase.run() method will add the column names to the result (if the result is not empty).\r\n\r\n\r\nWould love to hear some feedback!\r\n\r\n  -  @hwchase17\r\n  - @vowelparrot\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5482/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5482/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5481",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5481/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5481/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5481/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5481",
        "id": 1733366807,
        "node_id": "I_kwDOIPDwls5nURQX",
        "number": 5481,
        "title": "[Feature Request] Supoprts document loader caching",
        "user": {
            "login": "tddschn",
            "id": 45612704,
            "node_id": "MDQ6VXNlcjQ1NjEyNzA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/45612704?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tddschn",
            "html_url": "https://github.com/tddschn",
            "followers_url": "https://api.github.com/users/tddschn/followers",
            "following_url": "https://api.github.com/users/tddschn/following{/other_user}",
            "gists_url": "https://api.github.com/users/tddschn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tddschn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tddschn/subscriptions",
            "organizations_url": "https://api.github.com/users/tddschn/orgs",
            "repos_url": "https://api.github.com/users/tddschn/repos",
            "events_url": "https://api.github.com/users/tddschn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tddschn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-31T04:29:06Z",
        "updated_at": "2023-11-14T16:08:14Z",
        "closed_at": "2023-11-14T16:08:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI want langchain to implement caching for document loaders in a way similar to how it caches LLM calls, like this:\r\n\r\n```python\r\nfrom langchain.cache import InMemoryCache\r\nlangchain.document_loader_cache = InMemoryCache()\r\n```\n\n### Motivation\n\nLoading from certain documents with langchain document loader can be an expensive operation (for example, I implemneted a custom PDF loader using OCR that's slow, or loaders that involves network calls).\r\n\n\n### Your contribution\n\nIf langchain would accept such a PR, I'd try to implement the logic and file a PR.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5481/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5481/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5480",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5480/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5480/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5480/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5480",
        "id": 1733364170,
        "node_id": "PR_kwDOIPDwls5RvodF",
        "number": 5480,
        "title": "code splitter docs",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-31T04:25:28Z",
        "updated_at": "2023-05-31T15:27:38Z",
        "closed_at": "2023-05-31T14:11:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5480",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5480",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5480.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5480.patch",
            "merged_at": "2023-05-31T14:11:53Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5480/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5480/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5479",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5479/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5479/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5479/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5479",
        "id": 1733357904,
        "node_id": "PR_kwDOIPDwls5RvnHw",
        "number": 5479,
        "title": "Update youtube.py - Fix metadata validation error in YoutubeLoader",
        "user": {
            "login": "ricardoreis",
            "id": 104947,
            "node_id": "MDQ6VXNlcjEwNDk0Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/104947?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ricardoreis",
            "html_url": "https://github.com/ricardoreis",
            "followers_url": "https://api.github.com/users/ricardoreis/followers",
            "following_url": "https://api.github.com/users/ricardoreis/following{/other_user}",
            "gists_url": "https://api.github.com/users/ricardoreis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ricardoreis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ricardoreis/subscriptions",
            "organizations_url": "https://api.github.com/users/ricardoreis/orgs",
            "repos_url": "https://api.github.com/users/ricardoreis/repos",
            "events_url": "https://api.github.com/users/ricardoreis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ricardoreis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-31T04:15:22Z",
        "updated_at": "2023-06-03T23:56:18Z",
        "closed_at": "2023-06-03T23:56:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5479",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5479",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5479.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5479.patch",
            "merged_at": "2023-06-03T23:56:18Z"
        },
        "body": "This commit addresses a ValueError occurring when the YoutubeLoader class tries to add datetime metadata from a YouTube video's publish date. The error was happening because the ChromaDB metadata validation only accepts str, int, or float data types.\r\n\r\nIn the `_get_video_info` method of the `YoutubeLoader` class, the publish date retrieved from the YouTube video was of datetime type. This commit fixes the issue by converting the datetime object to a string before adding it to the metadata dictionary.\r\n\r\nAdditionally, this commit introduces error handling in the `_get_video_info` method to ensure that all metadata fields have valid values. If a metadata field is found to be None, a default value is assigned. This prevents potential errors during metadata validation when metadata fields are None.\r\n\r\nThe file modified in this commit is youtube.py.\r\n\r\n# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5479/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5479/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5478",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5478/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5478/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5478/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5478",
        "id": 1733347692,
        "node_id": "PR_kwDOIPDwls5Rvk5w",
        "number": 5478,
        "title": "make BaseEntityStore inherit from BaseModel",
        "user": {
            "login": "aditivin",
            "id": 6583444,
            "node_id": "MDQ6VXNlcjY1ODM0NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6583444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aditivin",
            "html_url": "https://github.com/aditivin",
            "followers_url": "https://api.github.com/users/aditivin/followers",
            "following_url": "https://api.github.com/users/aditivin/following{/other_user}",
            "gists_url": "https://api.github.com/users/aditivin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aditivin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aditivin/subscriptions",
            "organizations_url": "https://api.github.com/users/aditivin/orgs",
            "repos_url": "https://api.github.com/users/aditivin/repos",
            "events_url": "https://api.github.com/users/aditivin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aditivin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-31T04:02:04Z",
        "updated_at": "2023-06-01T00:32:20Z",
        "closed_at": "2023-06-01T00:32:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5478",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5478",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5478.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5478.patch",
            "merged_at": "2023-06-01T00:32:20Z"
        },
        "body": "# Make BaseEntityStore inherit from BaseModel\r\n\r\nThis enables initializing InMemoryEntityStore by optionally passing in a value for the store field.\r\n\r\n## Who can review?\r\n\r\nIt's a small change so I think any of the reviewers can review, but tagging @dev2049 who seems most relevant since the change relates to Memory.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5478/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5478/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5477",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5477/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5477/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5477/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5477",
        "id": 1733315349,
        "node_id": "PR_kwDOIPDwls5RveBJ",
        "number": 5477,
        "title": "move schema to a directory",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-31T03:12:36Z",
        "updated_at": "2023-08-11T07:26:17Z",
        "closed_at": "2023-08-11T07:26:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5477",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5477",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5477.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5477.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5477/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5477/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5476",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5476/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5476/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5476/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5476",
        "id": 1733300168,
        "node_id": "I_kwDOIPDwls5nUA_I",
        "number": 5476,
        "title": "IndexError: list index out of range when use Chroma.from_documents",
        "user": {
            "login": "fraywang",
            "id": 43070555,
            "node_id": "MDQ6VXNlcjQzMDcwNTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43070555?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fraywang",
            "html_url": "https://github.com/fraywang",
            "followers_url": "https://api.github.com/users/fraywang/followers",
            "following_url": "https://api.github.com/users/fraywang/following{/other_user}",
            "gists_url": "https://api.github.com/users/fraywang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fraywang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fraywang/subscriptions",
            "organizations_url": "https://api.github.com/users/fraywang/orgs",
            "repos_url": "https://api.github.com/users/fraywang/repos",
            "events_url": "https://api.github.com/users/fraywang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fraywang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-05-31T02:51:19Z",
        "updated_at": "2023-12-14T16:08:13Z",
        "closed_at": "2023-12-14T16:08:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLang Chain    0.0.186\r\nMac OS Ventura\r\nPython 3.10\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nwhy i got IndexError: list index out of range when use Chroma.from_documents\r\n\r\n\r\nimport os\r\n\r\nfrom langchain.document_loaders import BiliBiliLoader\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = \"***\"\r\n\r\nloader = BiliBiliLoader([\"https://www.bilibili.com/video/BV18o4y137n1/\"])\r\n\r\ndocuments = loader.load()\r\n\r\n\r\ntext_splitter = RecursiveCharacterTextSplitter(\r\n  chunk_size=1000,\r\n  chunk_overlap=20\r\n)\r\n\r\n\r\ndocuments = text_splitter.split_documents(documents)\r\n\r\n\r\nembeddings = OpenAIEmbeddings()\r\n\r\n\r\ndb = Chroma.from_documents(documents, embeddings, persist_directory=\"./db\")\r\ndb.persist()\r\n\r\n\r\nTraceback (most recent call last):\r\n  File \"/bilibili/bilibili_embeddings.py\", line 28, in <module>\r\n    db = Chroma.from_documents(documents, embeddings, persist_directory=\"./db\")\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/vectorstores/chroma.py\", line 422, in from_documents\r\n    return cls.from_texts(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/vectorstores/chroma.py\", line 390, in from_texts\r\n    chroma_collection.add_texts(texts=texts, metadatas=metadatas, ids=ids)\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/langchain/vectorstores/chroma.py\", line 160, in add_texts\r\n    self._collection.add(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 103, in add\r\n    ids, embeddings, metadatas, documents = self._validate_embedding_set(\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 354, in _validate_embedding_set\r\n    ids = validate_ids(maybe_cast_one_to_many(ids))\r\n  File \"/Library/Frameworks/Python.framework/Versions/3.10/lib/python3.10/site-packages/chromadb/api/types.py\", line 82, in maybe_cast_one_to_many\r\n    if isinstance(target[0], (int, float)):\r\nIndexError: list index out of range\n\n### Expected behavior\n\nindex gen succefully in the persist_directory",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5476/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5476/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5475",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5475/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5475/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5475/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5475",
        "id": 1733256921,
        "node_id": "I_kwDOIPDwls5nT2bZ",
        "number": 5475,
        "title": "Getting only the instance of the vector store without adding text",
        "user": {
            "login": "rajib76",
            "id": 16340036,
            "node_id": "MDQ6VXNlcjE2MzQwMDM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16340036?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rajib76",
            "html_url": "https://github.com/rajib76",
            "followers_url": "https://api.github.com/users/rajib76/followers",
            "following_url": "https://api.github.com/users/rajib76/following{/other_user}",
            "gists_url": "https://api.github.com/users/rajib76/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rajib76/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rajib76/subscriptions",
            "organizations_url": "https://api.github.com/users/rajib76/orgs",
            "repos_url": "https://api.github.com/users/rajib76/repos",
            "events_url": "https://api.github.com/users/rajib76/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rajib76/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-31T01:56:08Z",
        "updated_at": "2023-08-30T17:39:07Z",
        "closed_at": "2023-08-30T17:39:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nHi,\r\nCurrently the from_documents method will add the embeddings and then return the instance of the store. Why don't we have a method to just return the store. This is useful when I already have a loaded vector store and I just need the instance of the store. It will be like the below code without the _store.add_texts_\r\n\r\n```\r\nstore = cls(\r\n            connection_string=connection_string,\r\n            collection_name=collection_name,\r\n            embedding_function=embedding,\r\n            distance_strategy=distance_strategy,\r\n            pre_delete_collection=pre_delete_collection,\r\n        )\r\n\r\n        store.add_texts(texts=texts, metadatas=metadatas, ids=ids, **kwargs)\r\n        return store\r\n```\r\n\r\n### Motivation\r\n\r\nThis is required when I already have a loaded vector store\r\n\r\n### Your contribution\r\n\r\nIf this change is acceptable, I can add this functionality and create a PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5475/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5475/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5474",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5474/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5474/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5474/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5474",
        "id": 1733206572,
        "node_id": "I_kwDOIPDwls5nTqIs",
        "number": 5474,
        "title": "llm_chain.llm.save(\"llm.json\")  # method not found",
        "user": {
            "login": "wunglee",
            "id": 5841627,
            "node_id": "MDQ6VXNlcjU4NDE2Mjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5841627?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wunglee",
            "html_url": "https://github.com/wunglee",
            "followers_url": "https://api.github.com/users/wunglee/followers",
            "following_url": "https://api.github.com/users/wunglee/following{/other_user}",
            "gists_url": "https://api.github.com/users/wunglee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wunglee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wunglee/subscriptions",
            "organizations_url": "https://api.github.com/users/wunglee/orgs",
            "repos_url": "https://api.github.com/users/wunglee/repos",
            "events_url": "https://api.github.com/users/wunglee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wunglee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-31T00:43:10Z",
        "updated_at": "2023-09-10T16:09:41Z",
        "closed_at": "2023-09-10T16:09:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nllm_chain.llm.save(\"llm.json\")  # method not found\r\nbug in .ipynb\uff1a\r\ndocs/modules/chains/generic/serialization.ipynb\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nllm_chain.llm.save(\"llm.json\")  # method not found\r\nbug in .ipynb\uff1a\r\ndocs/modules/chains/generic/serialization.ipynb\n\n### Expected behavior\n\nllm_chain.llm.save(\"llm.json\")  # method not found\r\nbug in .ipynb\uff1a\r\ndocs/modules/chains/generic/serialization.ipynb",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5474/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5474/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5473",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5473/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5473/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5473/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5473",
        "id": 1733174360,
        "node_id": "I_kwDOIPDwls5nTiRY",
        "number": 5473,
        "title": "Qdrant Document object is not behaving correct",
        "user": {
            "login": "jrinder42",
            "id": 8828652,
            "node_id": "MDQ6VXNlcjg4Mjg2NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8828652?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrinder42",
            "html_url": "https://github.com/jrinder42",
            "followers_url": "https://api.github.com/users/jrinder42/followers",
            "following_url": "https://api.github.com/users/jrinder42/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrinder42/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrinder42/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrinder42/subscriptions",
            "organizations_url": "https://api.github.com/users/jrinder42/orgs",
            "repos_url": "https://api.github.com/users/jrinder42/repos",
            "events_url": "https://api.github.com/users/jrinder42/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrinder42/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-30T23:55:06Z",
        "updated_at": "2023-06-01T16:00:54Z",
        "closed_at": "2023-06-01T16:00:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain Version: 0.0.186\r\nMacOS Ventura 13.3 - M1\r\nPython 3.10.8\n\n### Who can help?\n\n@hwchase17 \r\n@agola11 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThere is an error in the Qdrant Vectorstore code ([`qdrant.py`](https://github.com/hwchase17/langchain/blob/master/langchain/vectorstores/qdrant.py)). Specifically, with the function `_document_from_scored_point` on line 468 of [`qdrant.py`](https://github.com/hwchase17/langchain/blob/master/langchain/vectorstores/qdrant.py). The Document object is from the [`schema.py`](https://github.com/hwchase17/langchain/blob/master/langchain/schema.py) The function takes as few arguments:\r\n\r\npage_content: str\r\nmetadata: dict = Field(default_factory=dict)\r\n\r\nThe [`qdrant.py`](https://github.com/hwchase17/langchain/blob/master/langchain/vectorstores/qdrant.py) file incorrectly makes the *metadata* parameter a string instead of a dict. \r\n\r\nThis creates a few problems: \r\n1. If the *metadata* parameter in the function `_document_from_scored_point` is passed anything but None or a key that is not in the score_point object (a.k.a. None), it will error out. This is because this variable should be a dict, which is not returned from a dictionary *get* method.\r\n2. The *metadata_payload_key* parameter does not seem to have a purpose / does not make sense given the above context.\r\n 3. It is impossible for metadata to be returned when using the Qdrant *similarity_search* function within Langchain due to this issue.\n\n### Expected behavior\n\nI would like to be able to return metadata when using similarity_search with Qdrant. If you run [this](https://www.pinecone.io/learn/langchain-retrieval-augmentation/) example / focus on the vectorstore part and swap out the Pinecone work for Qdrant, there does not seem to be a way to use similarity search with metadata similar to how the example shows it.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5473/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5473/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5472",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5472/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5472/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5472/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5472",
        "id": 1733121843,
        "node_id": "I_kwDOIPDwls5nTVcz",
        "number": 5472,
        "title": "Does langchain support Oracle database as VectorStores?If yes, how to use the Oracle as VectorStore?",
        "user": {
            "login": "JustinZou1",
            "id": 128281676,
            "node_id": "U_kgDOB6VsTA",
            "avatar_url": "https://avatars.githubusercontent.com/u/128281676?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JustinZou1",
            "html_url": "https://github.com/JustinZou1",
            "followers_url": "https://api.github.com/users/JustinZou1/followers",
            "following_url": "https://api.github.com/users/JustinZou1/following{/other_user}",
            "gists_url": "https://api.github.com/users/JustinZou1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JustinZou1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JustinZou1/subscriptions",
            "organizations_url": "https://api.github.com/users/JustinZou1/orgs",
            "repos_url": "https://api.github.com/users/JustinZou1/repos",
            "events_url": "https://api.github.com/users/JustinZou1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JustinZou1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-30T22:45:24Z",
        "updated_at": "2023-09-06T01:55:37Z",
        "closed_at": "2023-09-06T01:55:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Does langchain support Oracle database as VectorStores?If yes, how to use the Oracle as VectorStore?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5472/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5472/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5471",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5471/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5471/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5471/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5471",
        "id": 1733116731,
        "node_id": "PR_kwDOIPDwls5Ru0og",
        "number": 5471,
        "title": "Update psychicapi version",
        "user": {
            "login": "Ayan-Bandyopadhyay",
            "id": 13636019,
            "node_id": "MDQ6VXNlcjEzNjM2MDE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13636019?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ayan-Bandyopadhyay",
            "html_url": "https://github.com/Ayan-Bandyopadhyay",
            "followers_url": "https://api.github.com/users/Ayan-Bandyopadhyay/followers",
            "following_url": "https://api.github.com/users/Ayan-Bandyopadhyay/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ayan-Bandyopadhyay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ayan-Bandyopadhyay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ayan-Bandyopadhyay/subscriptions",
            "organizations_url": "https://api.github.com/users/Ayan-Bandyopadhyay/orgs",
            "repos_url": "https://api.github.com/users/Ayan-Bandyopadhyay/repos",
            "events_url": "https://api.github.com/users/Ayan-Bandyopadhyay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ayan-Bandyopadhyay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T22:40:18Z",
        "updated_at": "2023-05-30T22:55:23Z",
        "closed_at": "2023-05-30T22:55:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5471",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5471",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5471.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5471.patch",
            "merged_at": "2023-05-30T22:55:22Z"
        },
        "body": "Update [psychicapi](https://pypi.org/project/psychicapi/) python package dependency to the latest version 0.5. The newest python package version addresses breaking changes in the Psychic http api.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5471/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5471/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5470",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5470/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5470/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5470/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5470",
        "id": 1733108290,
        "node_id": "PR_kwDOIPDwls5Ruy1C",
        "number": 5470,
        "title": "docs `ecosystem/integrations` update 3",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T22:30:39Z",
        "updated_at": "2023-06-01T01:23:50Z",
        "closed_at": "2023-06-01T00:54:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5470",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5470",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5470.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5470.patch",
            "merged_at": "2023-06-01T00:54:05Z"
        },
        "body": "# docs: `ecosystem_integrations` update 3\r\n\r\nNext cycle of updating the `ecosystem/integrations`\r\n* Added an integration `template` file\r\n* Added missed integration files\r\n* Fixed several document_loaders/notebooks\r\n\r\n## Who can review?\r\n\r\nIs it possible to assign somebody to review PRs on docs? Thanks.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5470/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5470/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5469",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5469/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5469/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5469/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5469",
        "id": 1733105578,
        "node_id": "PR_kwDOIPDwls5RuyPw",
        "number": 5469,
        "title": "Harrison/compose prompt",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T22:27:09Z",
        "updated_at": "2023-06-02T20:44:18Z",
        "closed_at": "2023-06-02T20:44:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5469",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5469",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5469.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5469.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5469/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5469/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5468",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5468/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5468/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5468/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5468",
        "id": 1733099280,
        "node_id": "PR_kwDOIPDwls5Ruw6M",
        "number": 5468,
        "title": "Harrison/html splitter",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T22:18:58Z",
        "updated_at": "2023-05-31T04:06:08Z",
        "closed_at": "2023-05-31T04:06:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5468",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5468",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5468.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5468.patch",
            "merged_at": "2023-05-31T04:06:07Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5468/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5468/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5467",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5467/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5467/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5467/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5467",
        "id": 1733067120,
        "node_id": "PR_kwDOIPDwls5Rup4c",
        "number": 5467,
        "title": "rfc: doc manager",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T21:52:15Z",
        "updated_at": "2023-06-22T08:19:54Z",
        "closed_at": "2023-06-22T08:19:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5467",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5467",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5467.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5467.patch",
            "merged_at": null
        },
        "body": "scratchpad thinkin",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5467/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5467/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5466",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5466/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5466/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5466/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5466",
        "id": 1733035935,
        "node_id": "PR_kwDOIPDwls5RujEa",
        "number": 5466,
        "title": "Ability to specify credentials wihen using Google BigQuery as a data loader",
        "user": {
            "login": "nsheils",
            "id": 5385263,
            "node_id": "MDQ6VXNlcjUzODUyNjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5385263?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nsheils",
            "html_url": "https://github.com/nsheils",
            "followers_url": "https://api.github.com/users/nsheils/followers",
            "following_url": "https://api.github.com/users/nsheils/following{/other_user}",
            "gists_url": "https://api.github.com/users/nsheils/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nsheils/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nsheils/subscriptions",
            "organizations_url": "https://api.github.com/users/nsheils/orgs",
            "repos_url": "https://api.github.com/users/nsheils/repos",
            "events_url": "https://api.github.com/users/nsheils/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nsheils/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T21:23:44Z",
        "updated_at": "2023-05-31T11:17:06Z",
        "closed_at": "2023-05-30T23:25:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5466",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5466",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5466.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5466.patch",
            "merged_at": "2023-05-30T23:25:23Z"
        },
        "body": "# Adds ability to specify credentials when using Google BigQuery as a data loader\r\n\r\nFixes #5465 . Adds ability to set credentials which must be of the `google.auth.credentials.Credentials` type. This argument is optional and will default to `None.\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5466/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5466/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5465",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5465/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5465/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5465/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5465",
        "id": 1733027963,
        "node_id": "I_kwDOIPDwls5nS-h7",
        "number": 5465,
        "title": "Google BigQuery Loader doesn't take credentials",
        "user": {
            "login": "nsheils",
            "id": 5385263,
            "node_id": "MDQ6VXNlcjUzODUyNjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5385263?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nsheils",
            "html_url": "https://github.com/nsheils",
            "followers_url": "https://api.github.com/users/nsheils/followers",
            "following_url": "https://api.github.com/users/nsheils/following{/other_user}",
            "gists_url": "https://api.github.com/users/nsheils/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nsheils/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nsheils/subscriptions",
            "organizations_url": "https://api.github.com/users/nsheils/orgs",
            "repos_url": "https://api.github.com/users/nsheils/repos",
            "events_url": "https://api.github.com/users/nsheils/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nsheils/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T21:18:13Z",
        "updated_at": "2023-05-30T23:25:25Z",
        "closed_at": "2023-05-30T23:25:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI would like to be able to provide credentials to the bigquery.client object\n\n### Motivation\n\nI cannot access protected datasets without use of a service account or other credentials\n\n### Your contribution\n\nI will submit a PR. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5465/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5465/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5464",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5464/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5464/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5464/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5464",
        "id": 1733025389,
        "node_id": "PR_kwDOIPDwls5RugwQ",
        "number": 5464,
        "title": "Bedrock llm and embeddings",
        "user": {
            "login": "3coins",
            "id": 289369,
            "node_id": "MDQ6VXNlcjI4OTM2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/289369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3coins",
            "html_url": "https://github.com/3coins",
            "followers_url": "https://api.github.com/users/3coins/followers",
            "following_url": "https://api.github.com/users/3coins/following{/other_user}",
            "gists_url": "https://api.github.com/users/3coins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3coins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3coins/subscriptions",
            "organizations_url": "https://api.github.com/users/3coins/orgs",
            "repos_url": "https://api.github.com/users/3coins/repos",
            "events_url": "https://api.github.com/users/3coins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3coins/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899415699,
                "node_id": "LA_kwDOIPDwls8AAAABJAcmkw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/llms",
                "name": "llms",
                "color": "7CDBB2",
                "default": false,
                "description": ""
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-30T21:15:40Z",
        "updated_at": "2023-05-31T14:17:02Z",
        "closed_at": "2023-05-31T14:17:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5464",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5464",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5464.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5464.patch",
            "merged_at": "2023-05-31T14:17:02Z"
        },
        "body": "# Bedrock LLM and Embeddings\r\nThis PR adds a new LLM and an Embeddings class for the [Bedrock](https://aws.amazon.com/bedrock) service. The PR also includes example notebooks for using the LLM class in a conversation chain and embeddings usage in creating an embedding for a query and document.\r\n\r\n**Note**:  AWS is doing a private release of the Bedrock service on 05/31/2023; users need to request access and added to an allowlist in order to start using the Bedrock models and embeddings. Please use the [Bedrock Home Page](https://aws.amazon.com/bedrock) to request access and to learn more about the models available in Bedrock.\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5464/reactions",
            "total_count": 10,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 10,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5464/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5463",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5463/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5463/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5463/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5463",
        "id": 1732993542,
        "node_id": "I_kwDOIPDwls5nS2IG",
        "number": 5463,
        "title": "Structured tools cannot properly infer function schema",
        "user": {
            "login": "teoh",
            "id": 10181537,
            "node_id": "MDQ6VXNlcjEwMTgxNTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10181537?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/teoh",
            "html_url": "https://github.com/teoh",
            "followers_url": "https://api.github.com/users/teoh/followers",
            "following_url": "https://api.github.com/users/teoh/following{/other_user}",
            "gists_url": "https://api.github.com/users/teoh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/teoh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/teoh/subscriptions",
            "organizations_url": "https://api.github.com/users/teoh/orgs",
            "repos_url": "https://api.github.com/users/teoh/repos",
            "events_url": "https://api.github.com/users/teoh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/teoh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-30T20:51:13Z",
        "updated_at": "2023-09-10T16:09:44Z",
        "closed_at": "2023-09-10T16:09:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n```\r\n$ pip show langchain\r\nName: langchain\r\nVersion: 0.0.186\r\nSummary: Building applications with LLMs through composability\r\nHome-page: https://www.github.com/hwchase17/langchain\r\nAuthor:\r\nAuthor-email:\r\nLicense: MIT\r\nLocation: /home/mteoh/temp_venv/venv/lib/python3.10/site-packages\r\nRequires: PyYAML, pydantic, tenacity, dataclasses-json, numexpr, numpy, openapi-schema-pydantic, aiohttp, async-timeout, requests, SQLAlchemy\r\nRequired-by:\r\n```\r\n\r\n```\r\n$ python --version\r\nPython 3.10.2\r\n```\n\n### Who can help?\n\n@vowelpa\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. install langchain version 0.0.186, python version 3.10.2\r\n2. Run the code below (I put in a file called `mwe.py`)\r\n```python\r\nfrom langchain.tools import StructuredTool\r\nfrom typing import Dict\r\nfrom pydantic import BaseModel\r\n\r\ndef foo(args_dict: Dict[str, str]):\r\n    return \"hi there\"\r\n\r\nclass FooSchema(BaseModel):\r\n    args_dict: Dict[str, str]\r\n\r\nfoo_tool = StructuredTool.from_function(\r\n    foo,\r\n    name=\"FooTool\",\r\n    description=\"min working example of a bug?\",\r\n    # args_schema=FooSchema  # inferring this schema does not work\r\n)\r\n\r\nresult = foo_tool.run(tool_input={\r\n    \"args_dict\": {\"aa\": \"bb\"}\r\n})\r\n\r\nprint(result)\r\n```\r\n4. observe the error below:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/mteoh/temp_venv/mwe.py\", line 18, in <module>\r\n    result = foo_tool.run(tool_input={\r\n  File \"/home/mteoh/temp_venv/venv/lib/python3.10/site-packages/langchain/tools/base.py\", line 247, in run\r\n    parsed_input = self._parse_input(tool_input)\r\n  File \"/home/mteoh/temp_venv/venv/lib/python3.10/site-packages/langchain/tools/base.py\", line 190, in _parse_input\r\n    result = input_args.parse_obj(tool_input)\r\n  File \"pydantic/main.py\", line 526, in pydantic.main.BaseModel.parse_obj\r\n  File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for FooToolSchemaSchema\r\nargs_dict\r\n  str type expected (type=type_error.str)\r\n```\n\n### Expected behavior\n\nWe expect to see the output of `foo()` which is `\"hi there\"`.\r\n\r\nYou can get this result by uncommenting `args_schema=FooSchema` above. This is a problem, because this line below in `StructuredTool.from_function()` https://github.com/hwchase17/langchain/blob/58e95cd11e2c2fc31ed6551b5a2b876143d57429/langchain/tools/base.py#L469 suggests that the schema gets inferred, if not provided one. Instead, what's happening is that the tool \"infers\" that the arguments involve just one string, which is incorrect.\r\n\r\nI don't mind fixing this myself. In that case, any guidance is very welcome. Thank you! ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5463/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5463/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5462",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5462/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5462/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5462/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5462",
        "id": 1732984618,
        "node_id": "I_kwDOIPDwls5nSz8q",
        "number": 5462,
        "title": "conversationalRetrievalChain - how to set the template",
        "user": {
            "login": "DennisPeeters",
            "id": 7126132,
            "node_id": "MDQ6VXNlcjcxMjYxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7126132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DennisPeeters",
            "html_url": "https://github.com/DennisPeeters",
            "followers_url": "https://api.github.com/users/DennisPeeters/followers",
            "following_url": "https://api.github.com/users/DennisPeeters/following{/other_user}",
            "gists_url": "https://api.github.com/users/DennisPeeters/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DennisPeeters/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DennisPeeters/subscriptions",
            "organizations_url": "https://api.github.com/users/DennisPeeters/orgs",
            "repos_url": "https://api.github.com/users/DennisPeeters/repos",
            "events_url": "https://api.github.com/users/DennisPeeters/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DennisPeeters/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-05-30T20:43:46Z",
        "updated_at": "2023-10-25T13:25:13Z",
        "closed_at": "2023-10-24T16:08:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI am using conversationalRetrievalChain. I cannot seem to change the system template. Any suggestion how to do this? \r\n\r\n`retriever = vectorstore.as_retriever(search_kwargs={\"k\": source_amount},  qa_template=QA_PROMPT, question_generator_template=CONDENSE_PROMPT)`\r\n\r\n`qa = ConversationalRetrievalChain.from_llm(llm=model, retriever=retriever, return_source_documents=True)`\r\n\r\nWhen printing QA:\r\n[SystemMessagePromptTemplate(prompt=PromptTemplate(input_variables=['context'], output_parser=None, partial_variables={}, template=\"Use the following pieces of context to answer the users question. \\nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\\n----------------\\n{context}\", template_format='f-string', validate_template=True), additional_kwargs={}), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['question'],\r\n\r\nWhatever I try, I seem to be unable to change the template \"Use the following pieces of context to answer...\"\r\n\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5462/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5462/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5461",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5461/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5461/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5461/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5461",
        "id": 1732758086,
        "node_id": "PR_kwDOIPDwls5RtliF",
        "number": 5461,
        "title": "add simple test for imports",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T18:25:18Z",
        "updated_at": "2023-05-30T23:24:28Z",
        "closed_at": "2023-05-30T23:24:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5461",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5461",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5461.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5461.patch",
            "merged_at": "2023-05-30T23:24:27Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5461/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5461/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5460",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5460/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5460/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5460/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5460",
        "id": 1732724426,
        "node_id": "PR_kwDOIPDwls5RteQy",
        "number": 5460,
        "title": "Brute force web research",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-30T18:00:01Z",
        "updated_at": "2023-08-11T18:48:14Z",
        "closed_at": "2023-08-11T18:48:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5460",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5460",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5460.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5460.patch",
            "merged_at": null
        },
        "body": "# Research Chain\r\n\r\nThis is an experimental research chain that tries to answer \"researchy\" questions using information on the web.\r\n\r\nFor example, \r\n\r\n```\r\nCompile information about Albert Einstein.\r\nIgnore if it's a different Albert Einstein. \r\nOnly include information you're certain about.\r\n\r\nInclude:\r\n* education history\r\n* major contributions\r\n* names of spouse \r\n* date of birth\r\n* place of birth\r\n* a 3 sentence short biography\r\n\r\nFormat your answer in a bullet point format for each sub-question.\r\n```\r\n\r\nOr replace `Albert Einstein` with another person of interest (e.g., John Smith of Boston).\r\n\r\n\r\nThe chain is composed of the following components:\r\n\r\n1. A searcher that searches for documents using a search engine.\r\n    - The searcher is responsible to return a list of URLs of documents that\r\n      may be relevant to read to be able to answer the question.\r\n2. A downloader that downloads the documents.\r\n3. An HTML to markdown parser (hard coded) that converts the HTML to markdown.\r\n    * Conversion to markdown is lossy\r\n    * However, it can significantly reduce the token count of the document\r\n    * Markdown helps to preserve some styling information\r\n      (e.g., bold, italics, links, headers) which is expected to help the reader\r\n      to answer certain kinds of questions correctly.\r\n4. A reader that reads the documents and produces an answer.\r\n\r\n## Limitations\r\n\r\n* Quality of results depends on LLM used, and can be improved by providing more specialized parsers (e.g., parse only the body of articles).\r\n* If asking about people, provide enough information to disambiguate the person.\r\n* Content downloader may get blocked (e.g., if attempting to download from linkedin) -- may need to read terms of service / user agents appropriately.\r\n* Chain can be potentially long running (use initialization parameters to control how many options are explored) -- use async implementation as it uses more concurrency.\r\n* This research chain only implements a single hop at the moment; i.e.,\r\n  it goes from the questions to a list of URLs to documents to compiling answers.\r\n  Without continuing the crawl, web-sites that require pagination will not be explored fully.\r\n* The reader chain must match the type of question. For example, the QA refine chain \r\n  isn't good at extracting a list of entries from a long document.\r\n  \r\n## Extending\r\n\r\n* Continue crawling documents to discover more relevant pages that were not surfaced by the search engine.\r\n* Adapt reading strategy based on nature of question.\r\n* Analyze the query and determine whether the query is a multi-hop query and change search/crawling strategy based on that.\r\n* Break components into tools that can be exposed to an agent. :)\r\n* Add cheaper strategies for selecting which links should be explored further (e.g., based on tf-idf similarity instead of gpt-4)\r\n* Add a summarization chain on top of the individually collected answers.\r\n* Improve strategy to ignore irrelevant information.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5460/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5460/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5459",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5459/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5459/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5459/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5459",
        "id": 1732700530,
        "node_id": "PR_kwDOIPDwls5RtZH4",
        "number": 5459,
        "title": "bump 186",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T17:42:54Z",
        "updated_at": "2023-05-30T17:48:00Z",
        "closed_at": "2023-05-30T17:48:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5459",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5459",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5459.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5459.patch",
            "merged_at": "2023-05-30T17:48:00Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5459/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 2,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5459/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5458",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5458/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5458/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5458/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5458",
        "id": 1732692820,
        "node_id": "I_kwDOIPDwls5nRstU",
        "number": 5458,
        "title": "similarity_score_threshold NotImplementedError",
        "user": {
            "login": "Kevin-McIsaac",
            "id": 16606323,
            "node_id": "MDQ6VXNlcjE2NjA2MzIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/16606323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Kevin-McIsaac",
            "html_url": "https://github.com/Kevin-McIsaac",
            "followers_url": "https://api.github.com/users/Kevin-McIsaac/followers",
            "following_url": "https://api.github.com/users/Kevin-McIsaac/following{/other_user}",
            "gists_url": "https://api.github.com/users/Kevin-McIsaac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Kevin-McIsaac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Kevin-McIsaac/subscriptions",
            "organizations_url": "https://api.github.com/users/Kevin-McIsaac/orgs",
            "repos_url": "https://api.github.com/users/Kevin-McIsaac/repos",
            "events_url": "https://api.github.com/users/Kevin-McIsaac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Kevin-McIsaac/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-30T17:36:59Z",
        "updated_at": "2023-10-26T16:07:38Z",
        "closed_at": "2023-10-26T16:07:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.184\r\nPython 3.9.2\r\n\r\n\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI'm using as_retriever in a RetrievalQA with Pinecone as the vector store. If i use search_type=\"similarity_score_threshold\"  code below works. If I change this to `similarity_score_threshold` and set a `score_threshold`, then when I run the qa I get  NotImplementedError:\r\n\r\nThe code looks like this\r\n```python\r\ndb = Pinecone.from_existing_index(index_name=os.environ.get('INDEX'), \r\n                                   namespace='SCA_H5', \r\n                                   embedding=OpenAIEmbeddings())\r\n\r\nretriever=db.as_retriever(search_type=\"similarity_score_threshold\", \r\n                          search_kwargs={\"k\":3, \"score_threshold\":0.5})\r\n\r\nqa = RetrievalQA.from_chain_type(\r\n                    llm=ChatOpenAI(temperature=0), # uses 'gpt-3.5-turbo' which is cheaper and better \r\n                    chain_type=\"stuff\", \r\n                    retriever=retriever, \r\n                    return_source_documents=True)\r\n```\r\n\r\nThe python Traceback is \r\n\r\n```python\r\nNotImplementedError                       Traceback (most recent call last)\r\nCell In[4], line 1\r\n----> 1 result = Simon(\"What does the legisltation cover\", sources=True, content=False)\r\n\r\nCell In[3], line 26, in Simon(query, sources, content)\r\n     21 def Simon(query, sources=True, content=False):\r\n     23   instructions = '''You are an expert in Western Australia \"Strata Titles Act\" \r\n     24                     answering questions from a citizen. Only use information provided to you from the \r\n     25                     legislation below. If you do not know say \"I do not know\"'''\r\n---> 26   result = qa({\"query\": f'{instructions} \\n\\n {query}'})\r\n     27   process_llm_response(result, sources=sources, content=content)\r\n     28   return (result)\r\n\r\nFile [~/Projects/Personal/SCAWA/.venv/lib/python3.9/site-packages/langchain/chains/base.py:140](https://file+.vscode-resource.vscode-cdn.net/home/kmcisaac/Projects/Personal/SCAWA/~/Projects/Personal/SCAWA/.venv/lib/python3.9/site-packages/langchain/chains/base.py:140), in Chain.__call__(self, inputs, return_only_outputs, callbacks)\r\n    138 except (KeyboardInterrupt, Exception) as e:\r\n    139     run_manager.on_chain_error(e)\r\n--> 140     raise e\r\n    141 run_manager.on_chain_end(outputs)\r\n    142 return self.prep_outputs(inputs, outputs, return_only_outputs)\r\n\r\nFile [~/Projects/Personal/SCAWA/.venv/lib/python3.9/site-packages/langchain/chains/base.py:134](https://file+.vscode-resource.vscode-cdn.net/home/kmcisaac/Projects/Personal/SCAWA/~/Projects/Personal/SCAWA/.venv/lib/python3.9/site-packages/langchain/chains/base.py:134), in Chain.__call__(self, inputs, return_only_outputs, callbacks)\r\n    128 run_manager = callback_manager.on_chain_start(\r\n    129     {\"name\": self.__class__.__name__},\r\n    130     inputs,\r\n...\r\n    165     0 is dissimilar, 1 is most similar.\r\n    166     \"\"\"\r\n--> 167     raise NotImplementedError\r\n```\n\n### Expected behavior\n\nThe qa call does not fail.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5458/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5458/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5457",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5457/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5457/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5457/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5457",
        "id": 1732666648,
        "node_id": "PR_kwDOIPDwls5RtRyF",
        "number": 5457,
        "title": "fix",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T17:17:17Z",
        "updated_at": "2023-05-30T17:42:21Z",
        "closed_at": "2023-05-30T17:42:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5457",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5457",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5457.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5457.patch",
            "merged_at": "2023-05-30T17:42:20Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5457/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5457/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5456",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5456/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5456/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5456/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5456",
        "id": 1732655629,
        "node_id": "I_kwDOIPDwls5nRjoN",
        "number": 5456,
        "title": "Tools: Inconsistent callbacks/run_manager parameter ",
        "user": {
            "login": "aledelunap",
            "id": 54540938,
            "node_id": "MDQ6VXNlcjU0NTQwOTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/54540938?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aledelunap",
            "html_url": "https://github.com/aledelunap",
            "followers_url": "https://api.github.com/users/aledelunap/followers",
            "following_url": "https://api.github.com/users/aledelunap/following{/other_user}",
            "gists_url": "https://api.github.com/users/aledelunap/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aledelunap/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aledelunap/subscriptions",
            "organizations_url": "https://api.github.com/users/aledelunap/orgs",
            "repos_url": "https://api.github.com/users/aledelunap/repos",
            "events_url": "https://api.github.com/users/aledelunap/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aledelunap/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "vowelparrot",
                "id": 130414180,
                "node_id": "U_kgDOB8X2ZA",
                "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/vowelparrot",
                "html_url": "https://github.com/vowelparrot",
                "followers_url": "https://api.github.com/users/vowelparrot/followers",
                "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
                "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
                "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
                "repos_url": "https://api.github.com/users/vowelparrot/repos",
                "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
                "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-30T17:09:02Z",
        "updated_at": "2023-06-23T08:48:28Z",
        "closed_at": "2023-06-23T08:48:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nMacOS Ventura 13.3.1 (a)\r\npython = \"^3.9\"\r\nlangchain = \"0.0.185\"\r\n\r\n\r\n### Who can help?\r\n\r\n@agola11 @vowelparrot\r\n\r\n### Related Components\r\n- Agents / Agent Executors\r\n- Tools / Toolkits\r\n- Callbacks/Tracing\r\n\r\n### Reproduction\r\n\r\nI want to use the CallbackManager to save some info within a tool. So, as per the [`create_schema_from_function`](https://github.com/hwchase17/langchain/blob/64b4165c8d9b8374295d4629ef57d4d58e9af7c8/langchain/tools/base.py#L99) that is used to create the tool schema, I define the function as: \r\n\r\n\r\n```python\r\ndef get_list_of_products(\r\n        self, profile_description: str, run_manager: CallbackManagerForToolRun\r\n    ): \r\n```\r\n\r\nNonetheless, once the tool is run the[ expected parameter](https://github.com/hwchase17/langchain/blob/64b4165c8d9b8374295d4629ef57d4d58e9af7c8/langchain/tools/base.py#L493) in the function's signature is `callbacks`,\r\n\r\n```python\r\nnew_argument_supported = signature(self.func).parameters.get(\"callbacks\")\r\n```\r\n\r\nSo the tool can't run, with the error being:\r\n\r\n```bash\r\nTypeError: get_list_of_products() missing 1 required positional argument: 'run_manager'\r\n```\r\n\r\nThis behavior applies to Structured tool and Tool.\r\n\r\n### Expected behavior\r\n\r\nEither the expected function parameter is set to `run_manager` to replicate the behavior of the [`run` function](https://github.com/hwchase17/langchain/blob/64b4165c8d9b8374295d4629ef57d4d58e9af7c8/langchain/tools/base.py#L256) from the `BaseTool` or a different function is used instead of [`create_schema_from_function`](https://github.com/hwchase17/langchain/blob/64b4165c8d9b8374295d4629ef57d4d58e9af7c8/langchain/tools/base.py#L99) to create a tool's schema expecting the `callbacks` parameter.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5456/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5456/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5455",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5455/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5455/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5455/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5455",
        "id": 1732654338,
        "node_id": "I_kwDOIPDwls5nRjUC",
        "number": 5455,
        "title": "DOC: Return Source Documents to Vectorstore Agent",
        "user": {
            "login": "djpecot",
            "id": 8185181,
            "node_id": "MDQ6VXNlcjgxODUxODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8185181?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/djpecot",
            "html_url": "https://github.com/djpecot",
            "followers_url": "https://api.github.com/users/djpecot/followers",
            "following_url": "https://api.github.com/users/djpecot/following{/other_user}",
            "gists_url": "https://api.github.com/users/djpecot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/djpecot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/djpecot/subscriptions",
            "organizations_url": "https://api.github.com/users/djpecot/orgs",
            "repos_url": "https://api.github.com/users/djpecot/repos",
            "events_url": "https://api.github.com/users/djpecot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/djpecot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-30T17:07:58Z",
        "updated_at": "2023-09-15T16:09:32Z",
        "closed_at": "2023-09-15T16:09:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nUnable to recreate return source documents from prompt in the current [Vectorstore Agent Documentation](https://python.langchain.com/en/latest/modules/agents/toolkits/examples/vectorstore.html). I tried adding `return_source_documents=True` to my `create_vectorstore_agent` (as discussed [here](https://github.com/hwchase17/langchain/issues/4562)) method and explicitly asking for the source document:\r\n\r\n`agent_executor.run(\"What did biden say about ketanji brown jackson is the state of the union address? Show me the source document\")`\r\n\r\nBut this only returns the content of the `answer`, i.e. \r\n```\r\n{\r\n   \"answer\":\"message returned here.\\n\",\r\n   \"sources\":\"13421341235123\"\r\n}\r\n```\r\n\r\n### Idea or request for content:\r\n\r\nWould like either a way to link to a custom output parser / memory for this use case ([memory does seem to work out of the box](https://python.langchain.com/en/latest/modules/agents/agent_executors/examples/sharedmemory_for_tools.html)) or a demo of how to configure the underlying tools to force output to string or something. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5455/reactions",
            "total_count": 4,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 4
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5455/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5454",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5454/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5454/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5454/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5454",
        "id": 1732652179,
        "node_id": "I_kwDOIPDwls5nRiyT",
        "number": 5454,
        "title": "Cannot build a file agent",
        "user": {
            "login": "Undertone0809",
            "id": 72488598,
            "node_id": "MDQ6VXNlcjcyNDg4NTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/72488598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Undertone0809",
            "html_url": "https://github.com/Undertone0809",
            "followers_url": "https://api.github.com/users/Undertone0809/followers",
            "following_url": "https://api.github.com/users/Undertone0809/following{/other_user}",
            "gists_url": "https://api.github.com/users/Undertone0809/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Undertone0809/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Undertone0809/subscriptions",
            "organizations_url": "https://api.github.com/users/Undertone0809/orgs",
            "repos_url": "https://api.github.com/users/Undertone0809/repos",
            "events_url": "https://api.github.com/users/Undertone0809/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Undertone0809/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-30T17:06:27Z",
        "updated_at": "2023-12-09T16:06:21Z",
        "closed_at": "2023-12-09T16:06:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nAs we know, we can build a agent with tool by following way:\r\n\r\n```python\r\n\r\nllm = OpenAI(temperature=0)\r\n\r\ntools = load_tools([\"serpapi\", \"llm-math\"], llm=llm)\r\nagent = initialize_agent(tools, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)\r\n\r\n```\r\n\r\nWe can also use `FileManagementToolKit` to manage the file system. But I want to know, how to build a agent of file management of file system. `Langchain` still not provide agent for file management. So I want to know how to build agent with file system. I tried to use `load_tools` as follows, but failed. `FileManagementToolKit` can not be imported to `load_tools()`  because `load_tools` does not provider file-related options.\r\n\r\n```python\r\nimport os\r\nfrom langchain.agents.agent_toolkits import FileManagementToolkit\r\nfrom tempfile import TemporaryDirectory\r\nfrom langchain.agents import load_tools\r\n\r\nworking_directory = TemporaryDirectory(dir=os.getcwd())\r\ntoolkit = FileManagementToolkit(root_dir=str(working_directory.name))\r\ntool_names = list(map(lambda item: item.name,toolkit.get_tools()))\r\ntools = load_tools(tool_names)\r\n```\r\n\r\n```\r\nValueError                                Traceback (most recent call last)\r\nCell In[27], line 3\r\n      1 from langchain.agents import load_tools\r\n      2 tool_names = list(map(lambda item: item.name,toolkit.get_tools()))\r\n----> 3 tools = load_tools(tool_names)\r\n\r\nFile E:\\Programming\\anaconda\\lib\\site-packages\\langchain\\agents\\load_tools.py:341, in load_tools(tool_names, llm, callback_manager, **kwargs)\r\n    339         tools.append(tool)\r\n    340     else:\r\n--> 341         raise ValueError(f\"Got unknown tool {name}\")\r\n    342 return tools\r\n\r\nValueError: Got unknown tool copy_file\r\n```\r\n\r\nthe tools of `FileManagementToolkit`:\r\n\r\n```python\r\nlist(map(lambda item: item.name,toolkit.get_tools()))\r\n```\r\n\r\n```\r\n['copy_file',\r\n 'file_delete',\r\n 'file_search',\r\n 'move_file',\r\n 'read_file',\r\n 'write_file',\r\n 'list_directory']\r\n```\r\n\r\n### Suggestion:\r\n\r\nMaybe we can build a like `create_file_agent()` like `create_sql_agent()`. As we all know, we can build sql agent as follows:\r\n\r\n```python\r\nfrom langchain.agents import create_sql_agent\r\nfrom langchain.agents.agent_toolkits import SQLDatabaseToolkit\r\nfrom langchain.sql_database import SQLDatabase\r\nfrom langchain.llms.openai import OpenAI\r\n\r\ndef create_mysql_kit():\r\n    db = SQLDatabase.from_uri(\"sqlite:///../../../../notebooks/Chinook.db\")\r\n    llm = OpenAI(temperature=0.3)\r\n\r\n    toolkit = SQLDatabaseToolkit(db=db, llm=llm)\r\n    agent_executor = create_sql_agent(\r\n        llm=OpenAI(temperature=0),\r\n        toolkit=toolkit,\r\n        verbose=True\r\n    )\r\n    # agent_executor.run(\"Who are the users of sysuser in this system? Tell me the username of all users\")\r\n    agent_executor.run(\"How many people are in this system?\")\r\n\r\n\r\nif __name__ == '__main__':\r\n    create_mysql_kit()\r\n```\r\n\r\nI think we can build the `file agent` in the same way.\r\n\r\n### More\r\n\r\n- There may be some way to achieve the same functionality as the file agent, but I don't know. If so, please tell to how to use it.\r\n\r\n- Can we provide a method to make an agent use all tools, including tools in toolkit and tools of `load_tools()`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5454/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5454/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5453",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5453/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5453/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5453/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5453",
        "id": 1732622456,
        "node_id": "PR_kwDOIPDwls5RtIQT",
        "number": 5453,
        "title": "Localization langchain prompt \uff08zh_CN and agents)",
        "user": {
            "login": "lingfengchencn",
            "id": 2757011,
            "node_id": "MDQ6VXNlcjI3NTcwMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2757011?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lingfengchencn",
            "html_url": "https://github.com/lingfengchencn",
            "followers_url": "https://api.github.com/users/lingfengchencn/followers",
            "following_url": "https://api.github.com/users/lingfengchencn/following{/other_user}",
            "gists_url": "https://api.github.com/users/lingfengchencn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lingfengchencn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lingfengchencn/subscriptions",
            "organizations_url": "https://api.github.com/users/lingfengchencn/orgs",
            "repos_url": "https://api.github.com/users/lingfengchencn/repos",
            "events_url": "https://api.github.com/users/lingfengchencn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lingfengchencn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-30T16:44:27Z",
        "updated_at": "2023-11-07T04:21:32Z",
        "closed_at": "2023-11-07T04:21:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5453",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5453",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5453.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5453.patch",
            "merged_at": null
        },
        "body": "# Localization langchain prompt \uff08now is zh_CN and agents)\r\nCreate Localization prompt for  zh_CN angets/* and will add more language and whole langchain prompt after ....\r\n\r\nall PROMPT translated by gpt-3.5-turbo\u3002\r\n\r\n\r\n\r\nFixes # (issue)\r\n#5075\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n  Agents / Tools / Toolkits\r\n   @vowelparrot\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5453/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5453/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5452",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5452/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5452/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5452/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5452",
        "id": 1732618952,
        "node_id": "I_kwDOIPDwls5nRarI",
        "number": 5452,
        "title": "Why raise an error in conversation retrieval chain if the chat history is a string?",
        "user": {
            "login": "ogabrielluiz",
            "id": 24829397,
            "node_id": "MDQ6VXNlcjI0ODI5Mzk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/24829397?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ogabrielluiz",
            "html_url": "https://github.com/ogabrielluiz",
            "followers_url": "https://api.github.com/users/ogabrielluiz/followers",
            "following_url": "https://api.github.com/users/ogabrielluiz/following{/other_user}",
            "gists_url": "https://api.github.com/users/ogabrielluiz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ogabrielluiz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ogabrielluiz/subscriptions",
            "organizations_url": "https://api.github.com/users/ogabrielluiz/orgs",
            "repos_url": "https://api.github.com/users/ogabrielluiz/repos",
            "events_url": "https://api.github.com/users/ogabrielluiz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ogabrielluiz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-30T16:41:33Z",
        "updated_at": "2023-10-12T16:09:23Z",
        "closed_at": "2023-10-12T16:09:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/hwchase17/langchain/blob/64b4165c8d9b8374295d4629ef57d4d58e9af7c8/langchain/chains/conversational_retrieval/base.py#L34\r\n\r\nIt seems the `_get_chat_history` is building the chat_history string but if the history is already a string then it should.\r\nThe check might even be in the BaseConversationalRetrievalChain `_call` methods.\r\n\r\nWhat would be the correct way of using this if the chat_history is already a string?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5452/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5452/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5451",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5451/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5451/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5451/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5451",
        "id": 1732574359,
        "node_id": "I_kwDOIPDwls5nRPyX",
        "number": 5451,
        "title": "Text Fragments from text splitters for deep linking with browsers (or compatible systems) to specific text chunks in source documents",
        "user": {
            "login": "nelsonjchen",
            "id": 5363,
            "node_id": "MDQ6VXNlcjUzNjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5363?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nelsonjchen",
            "html_url": "https://github.com/nelsonjchen",
            "followers_url": "https://api.github.com/users/nelsonjchen/followers",
            "following_url": "https://api.github.com/users/nelsonjchen/following{/other_user}",
            "gists_url": "https://api.github.com/users/nelsonjchen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nelsonjchen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nelsonjchen/subscriptions",
            "organizations_url": "https://api.github.com/users/nelsonjchen/orgs",
            "repos_url": "https://api.github.com/users/nelsonjchen/repos",
            "events_url": "https://api.github.com/users/nelsonjchen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nelsonjchen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-30T16:13:04Z",
        "updated_at": "2023-09-10T16:09:55Z",
        "closed_at": "2023-09-10T16:09:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nExample URL of a Text Fragment to the README of this project that highlights the About: \r\n\r\nhttps://github.com/hwchase17/langchain#:~:text=About-,%E2%9A%A1,%E2%9A%A1,-Resources\r\n\r\nA SO: https://stackoverflow.com/questions/62989058/how-does-text-in-url-works-to-highlight-text\r\n\r\nExample of splitter I'm talking about: https://python.langchain.com/en/latest/modules/indexes/text_splitters/examples/markdown.html\r\n\r\nIt'll be awesome if these text splitters could get the ability to try and generate [Text Fragments](https://web.dev/text-fragments/) for the text that was split up so that a URL could be generated that a user can click through and have the browser auto-scroll to the highlighted fragment. I'm sure the system could also be used outside the browser world for some tooling that could itself scroll to as well as it should be a well developed pattern/algorithm.\r\n\r\nThe system wouldn't be perfect due to issues such as duplicate text on page, impossible to generate unique split text, but I'm sure most citations would still find it useful.\r\n\r\n### Motivation\r\n\r\nI'm a little disappointed at the [notion db employee handbook example](https://github.com/hwchase17/notion-qa) where the sources are just filenames. \r\n\r\nWhat if the info was in a big doc? `Source: Office d0ebcaaa2074442ba155c67a41d315dd.md` ? Eh. How about as an option:\r\n\r\n```\r\nSource: Office%20d0ebcaaa2074442ba155c67a41d315dd.md#:~:text=~12%20o%27%20clock%2C%20there%20is%20lunch%20in%20the%20canteen%2C%20free%20of%20cost.%20Jo%C3%ABlle%20is%20in%20charge%20of%20lunch%20%E2%80%94%C2%A0ask%20her%20if%20you%20need%20anything%20(allergies%20for%20example). \r\n```\r\n\r\n[Hyperlink to raw with text fragment](https://github.com/hwchase17/notion-qa/blob/71610847545c97041b93ecb3b19d9746623ce80f/Notion_DB/Blendle's%20Employee%20Handbook%20a834d55573614857a48a9ce9ec4194e3/Office%20d0ebcaaa2074442ba155c67a41d315dd.md#:~:text=~12%20o%27%20clock%2C%20there%20is%20lunch%20in%20the%20canteen%2C%20free%20of%20cost.%20Jo%C3%ABlle%20is%20in%20charge%20of%20lunch%20%E2%80%94%C2%A0ask%20her%20if%20you%20need%20anything%20(allergies%20for%20example).)\r\n\r\nOf course, that looks ugly in a terminal, but on a web page where links can be hyperlinks like above, it'll be a much better experience.\r\n\r\nedit: Hmm, that link doesn't work very well on GitHub and it's turbolink'd pages.\r\n\r\n### Your contribution\r\n\r\nI wish, I'm still trying to grasp Langchain itself. I'm particularly interested in Langchain and friends or rivals for Q/A answering and some of my personal hobby's, my work's, and the notion DB example's pages are quite long. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5451/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5451/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5450",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5450/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5450/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5450/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5450",
        "id": 1732572168,
        "node_id": "PR_kwDOIPDwls5Rs9Tr",
        "number": 5450,
        "title": "`encoding_kwargs` for InstructEmbeddings",
        "user": {
            "login": "Xmaster6y",
            "id": 66315201,
            "node_id": "MDQ6VXNlcjY2MzE1MjAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/66315201?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Xmaster6y",
            "html_url": "https://github.com/Xmaster6y",
            "followers_url": "https://api.github.com/users/Xmaster6y/followers",
            "following_url": "https://api.github.com/users/Xmaster6y/following{/other_user}",
            "gists_url": "https://api.github.com/users/Xmaster6y/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Xmaster6y/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Xmaster6y/subscriptions",
            "organizations_url": "https://api.github.com/users/Xmaster6y/orgs",
            "repos_url": "https://api.github.com/users/Xmaster6y/repos",
            "events_url": "https://api.github.com/users/Xmaster6y/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Xmaster6y/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-30T16:11:31Z",
        "updated_at": "2023-05-30T18:57:05Z",
        "closed_at": "2023-05-30T18:57:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5450",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5450",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5450.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5450.patch",
            "merged_at": "2023-05-30T18:57:04Z"
        },
        "body": "# What does this PR do?\r\n\r\nBring support of `encode_kwargs` for ` HuggingFaceInstructEmbeddings`, change the docstring example and add a test to illustrate with `normalize_embeddings`.\r\n\r\nFixes #3605\r\n(Similar to #3914)\r\n\r\nUse case:\r\n```python\r\nfrom langchain.embeddings import HuggingFaceInstructEmbeddings\r\n\r\nmodel_name = \"hkunlp/instructor-large\"\r\nmodel_kwargs = {'device': 'cpu'}\r\nencode_kwargs = {'normalize_embeddings': True}\r\nhf = HuggingFaceInstructEmbeddings(\r\n    model_name=model_name,\r\n    model_kwargs=model_kwargs,\r\n    encode_kwargs=encode_kwargs\r\n)\r\n```\r\n\r\n## Before submitting\r\n\r\n- [x] Tests were added and passed\r\n- [x] Actions are passed\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5450/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5450/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5449",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5449/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5449/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5449/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5449",
        "id": 1732547240,
        "node_id": "PR_kwDOIPDwls5Rs31S",
        "number": 5449,
        "title": "Removes duplicated call from langchain/client/langchain.py",
        "user": {
            "login": "patrickkeane",
            "id": 13934664,
            "node_id": "MDQ6VXNlcjEzOTM0NjY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13934664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/patrickkeane",
            "html_url": "https://github.com/patrickkeane",
            "followers_url": "https://api.github.com/users/patrickkeane/followers",
            "following_url": "https://api.github.com/users/patrickkeane/following{/other_user}",
            "gists_url": "https://api.github.com/users/patrickkeane/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/patrickkeane/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/patrickkeane/subscriptions",
            "organizations_url": "https://api.github.com/users/patrickkeane/orgs",
            "repos_url": "https://api.github.com/users/patrickkeane/repos",
            "events_url": "https://api.github.com/users/patrickkeane/events{/privacy}",
            "received_events_url": "https://api.github.com/users/patrickkeane/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-30T15:55:54Z",
        "updated_at": "2023-05-30T19:19:02Z",
        "closed_at": "2023-05-30T18:52:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5449",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5449",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5449.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5449.patch",
            "merged_at": "2023-05-30T18:52:46Z"
        },
        "body": "This removes duplicate code presumably introduced by a cut-and-paste error, spotted while reviewing the code in ```langchain/client/langchain.py```. The original code had back to back occurrences of the following code block:\r\n\r\n```\r\n        response = self._get(\r\n            path,\r\n            params=params,\r\n        )\r\n        raise_for_status_with_text(response)\r\n```\r\n\r\nHere are the ```make test``` results:\r\n\r\n```\r\n================= 693 passed, 52 skipped, 27 warnings in 8.38s =================\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5449/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5449/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5448",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5448/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5448/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5448/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5448",
        "id": 1732533742,
        "node_id": "I_kwDOIPDwls5nRF3u",
        "number": 5448,
        "title": "Issue: Get the verbose messages from chain",
        "user": {
            "login": "KanaSukita",
            "id": 32619535,
            "node_id": "MDQ6VXNlcjMyNjE5NTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/32619535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KanaSukita",
            "html_url": "https://github.com/KanaSukita",
            "followers_url": "https://api.github.com/users/KanaSukita/followers",
            "following_url": "https://api.github.com/users/KanaSukita/following{/other_user}",
            "gists_url": "https://api.github.com/users/KanaSukita/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KanaSukita/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KanaSukita/subscriptions",
            "organizations_url": "https://api.github.com/users/KanaSukita/orgs",
            "repos_url": "https://api.github.com/users/KanaSukita/repos",
            "events_url": "https://api.github.com/users/KanaSukita/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KanaSukita/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-30T15:46:42Z",
        "updated_at": "2023-12-11T16:07:28Z",
        "closed_at": "2023-12-11T16:07:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nWe can get the intermediate messages printed when the verbose is set to True in the chains. But is there a way we can get the intermediate messages from the chain as a return value?\r\n\n\n### Suggestion:\n\n\r\nTake the code below as example.\r\n\r\n```\r\nfrom langchain import OpenAI, ConversationChain\r\nfrom langchain.llms import OpenAI\r\nllm = OpenAI(engine=\"text-davinci-003\", temperature=0.9)\r\nconversation = ConversationChain(llm=llm, verbose=True)\r\nconversation.predict(input=\"How are you?\")\r\nconversation.predict(input=\"I am Ricardo Kaka, what is your name?\")\r\nconversation.predict(input=\"What is the first thing I said to you?\")\r\n```\r\nWe get the messages below printed in the shell. But I am wondering if there is a way I can get the messages as an return value, something like conversation.verbose_message, or conversation.get_verbose_message()?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5448/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5448/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5447",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5447/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5447/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5447/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5447",
        "id": 1732528994,
        "node_id": "I_kwDOIPDwls5nREti",
        "number": 5447,
        "title": "DOC: Small typo in the docs, \"and\" should be removed, and maybe a period in the end would be ok.",
        "user": {
            "login": "luca-git",
            "id": 2820583,
            "node_id": "MDQ6VXNlcjI4MjA1ODM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2820583?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luca-git",
            "html_url": "https://github.com/luca-git",
            "followers_url": "https://api.github.com/users/luca-git/followers",
            "following_url": "https://api.github.com/users/luca-git/following{/other_user}",
            "gists_url": "https://api.github.com/users/luca-git/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luca-git/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luca-git/subscriptions",
            "organizations_url": "https://api.github.com/users/luca-git/orgs",
            "repos_url": "https://api.github.com/users/luca-git/repos",
            "events_url": "https://api.github.com/users/luca-git/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luca-git/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-30T15:43:50Z",
        "updated_at": "2023-10-31T16:06:50Z",
        "closed_at": "2023-10-31T16:06:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nIn https://docs.langchain.com/docs/components/agents/agent-executor the statement:\r\n\r\nThe agent executor is responsible for calling the agent, getting back **and** action and action input, calling the tool that the action references with the corresponding input, getting the output of the tool, and then passing all that information back into the Agent to get the next action it should take\r\n\n\n### Idea or request for content:\n\nThe agent executor is responsible for calling the agent, getting back action and action input, calling the tool that the action references with the corresponding input, getting the output of the tool, and then passing all that information back into the Agent to get the next action it should take.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5447/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5447/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5446",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5446/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5446/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5446/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5446",
        "id": 1732505176,
        "node_id": "PR_kwDOIPDwls5Rsu27",
        "number": 5446,
        "title": "Feature: Qdrant filters supports",
        "user": {
            "login": "kacperlukawski",
            "id": 2649301,
            "node_id": "MDQ6VXNlcjI2NDkzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2649301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kacperlukawski",
            "html_url": "https://github.com/kacperlukawski",
            "followers_url": "https://api.github.com/users/kacperlukawski/followers",
            "following_url": "https://api.github.com/users/kacperlukawski/following{/other_user}",
            "gists_url": "https://api.github.com/users/kacperlukawski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kacperlukawski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kacperlukawski/subscriptions",
            "organizations_url": "https://api.github.com/users/kacperlukawski/orgs",
            "repos_url": "https://api.github.com/users/kacperlukawski/repos",
            "events_url": "https://api.github.com/users/kacperlukawski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kacperlukawski/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T15:28:29Z",
        "updated_at": "2023-05-31T09:26:17Z",
        "closed_at": "2023-05-31T09:26:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5446",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5446",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5446.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5446.patch",
            "merged_at": "2023-05-31T09:26:17Z"
        },
        "body": "# Support Qdrant filters\r\n\r\nQdrant has an [extensive filtering system](https://qdrant.tech/documentation/concepts/filtering/) with rich type support. This PR makes it possible to use the filters in Langchain by passing an additional param to both the `similarity_search_with_score` and `similarity_search` methods.\r\n\r\n## Who can review?\r\n\r\n@dev2049 @hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5446/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5446/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5445",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5445/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5445/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5445/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5445",
        "id": 1732486862,
        "node_id": "PR_kwDOIPDwls5Rsq7T",
        "number": 5445,
        "title": "Allow setting explicit _id when indexing in elasticsearch",
        "user": {
            "login": "lemig",
            "id": 78766,
            "node_id": "MDQ6VXNlcjc4NzY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/78766?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lemig",
            "html_url": "https://github.com/lemig",
            "followers_url": "https://api.github.com/users/lemig/followers",
            "following_url": "https://api.github.com/users/lemig/following{/other_user}",
            "gists_url": "https://api.github.com/users/lemig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lemig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lemig/subscriptions",
            "organizations_url": "https://api.github.com/users/lemig/orgs",
            "repos_url": "https://api.github.com/users/lemig/repos",
            "events_url": "https://api.github.com/users/lemig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lemig/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-30T15:17:03Z",
        "updated_at": "2023-05-31T08:08:24Z",
        "closed_at": "2023-05-31T08:08:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5445",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5445",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5445.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5445.patch",
            "merged_at": null
        },
        "body": "This PR improves the method `add_texts` of `ElasticVectorSearch`.\r\nIf a key `_id` is available in metadata it will be used as unique identifier when indexing in elasticsearch.\r\nI makes the method idempotent and prevents duplicates.\r\n\r\nFixes #5437 \r\ncc: @jeffvestal @derickson @hwchase17 \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5445/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5445/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5444",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5444/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5444/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5444/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5444",
        "id": 1732484112,
        "node_id": "I_kwDOIPDwls5nQ5wQ",
        "number": 5444,
        "title": "Support for Meta ToT",
        "user": {
            "login": "murari-goswami",
            "id": 8640332,
            "node_id": "MDQ6VXNlcjg2NDAzMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8640332?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/murari-goswami",
            "html_url": "https://github.com/murari-goswami",
            "followers_url": "https://api.github.com/users/murari-goswami/followers",
            "following_url": "https://api.github.com/users/murari-goswami/following{/other_user}",
            "gists_url": "https://api.github.com/users/murari-goswami/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/murari-goswami/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/murari-goswami/subscriptions",
            "organizations_url": "https://api.github.com/users/murari-goswami/orgs",
            "repos_url": "https://api.github.com/users/murari-goswami/repos",
            "events_url": "https://api.github.com/users/murari-goswami/events{/privacy}",
            "received_events_url": "https://api.github.com/users/murari-goswami/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-30T15:15:18Z",
        "updated_at": "2023-09-10T16:10:00Z",
        "closed_at": "2023-09-10T16:09:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAn interesting takeway for Meta TOT - Meta Tree of Thoughts.  aims to enhance the Tree of Thoughts (TOT) language algorithm by using a secondary agent to critique and improve the primary agent's prompts. This innovative approach allows the primary agent to generate more accurate and relevant responses based on the feedback from the secondary agent.\r\n\r\nhttps://github.com/kyegomez/Meta-Tree-Of-Thoughts\r\n\r\nI would like add it to the overall offering. If ok, I can pick it up.\n\n### Motivation\n\nOptimization on the continuous feedback loop. \n\n### Your contribution\n\nI will like to work on this issue.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5444/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5444/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5443",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5443/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5443/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5443/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5443",
        "id": 1732479145,
        "node_id": "PR_kwDOIPDwls5RspQF",
        "number": 5443,
        "title": "Feat: Add batching to Qdrant",
        "user": {
            "login": "kacperlukawski",
            "id": 2649301,
            "node_id": "MDQ6VXNlcjI2NDkzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2649301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kacperlukawski",
            "html_url": "https://github.com/kacperlukawski",
            "followers_url": "https://api.github.com/users/kacperlukawski/followers",
            "following_url": "https://api.github.com/users/kacperlukawski/following{/other_user}",
            "gists_url": "https://api.github.com/users/kacperlukawski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kacperlukawski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kacperlukawski/subscriptions",
            "organizations_url": "https://api.github.com/users/kacperlukawski/orgs",
            "repos_url": "https://api.github.com/users/kacperlukawski/repos",
            "events_url": "https://api.github.com/users/kacperlukawski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kacperlukawski/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-30T15:12:20Z",
        "updated_at": "2023-05-30T22:33:54Z",
        "closed_at": "2023-05-30T22:33:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5443",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5443",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5443.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5443.patch",
            "merged_at": "2023-05-30T22:33:54Z"
        },
        "body": "# Add batching to Qdrant\r\n\r\nSeveral people requested a batching mechanism while uploading data to Qdrant. It is important, as there are some limits for the maximum size of the request payload, and without batching implemented in Langchain, users need to implement it on their own. This PR exposes a new optional `batch_size` parameter, so all the documents/texts are loaded in batches of the expected size (64, by default).\r\n\r\nThe integration tests of Qdrant are extended to cover two cases:\r\n1. Documents are sent in separate batches.\r\n2. All the documents are sent in a single request.\r\n\r\n## Who can review?\r\n\r\n@dev2049 @hwchase17\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5443/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5443/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5442",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5442/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5442/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5442/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5442",
        "id": 1732463205,
        "node_id": "PR_kwDOIPDwls5Rslyi",
        "number": 5442,
        "title": "bump 185",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T15:03:26Z",
        "updated_at": "2023-05-30T15:08:12Z",
        "closed_at": "2023-05-30T15:08:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5442",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5442",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5442.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5442.patch",
            "merged_at": "2023-05-30T15:08:11Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5442/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5442/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5441",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5441/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5441/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5441/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5441",
        "id": 1732385555,
        "node_id": "PR_kwDOIPDwls5RsU3U",
        "number": 5441,
        "title": "Adds async call for fake llm list model",
        "user": {
            "login": "mkinet",
            "id": 10139888,
            "node_id": "MDQ6VXNlcjEwMTM5ODg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/10139888?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mkinet",
            "html_url": "https://github.com/mkinet",
            "followers_url": "https://api.github.com/users/mkinet/followers",
            "following_url": "https://api.github.com/users/mkinet/following{/other_user}",
            "gists_url": "https://api.github.com/users/mkinet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mkinet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mkinet/subscriptions",
            "organizations_url": "https://api.github.com/users/mkinet/orgs",
            "repos_url": "https://api.github.com/users/mkinet/repos",
            "events_url": "https://api.github.com/users/mkinet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mkinet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-30T14:25:25Z",
        "updated_at": "2023-05-30T20:56:20Z",
        "closed_at": "2023-05-30T20:56:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5441",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5441",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5441.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5441.patch",
            "merged_at": null
        },
        "body": "# Async call for fake llm list\r\n\r\nSimple additional to allow the use of FakeLLMList in async tests. \r\n\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@agola11 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5441/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5441/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5440",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5440/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5440/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5440/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5440",
        "id": 1732384621,
        "node_id": "PR_kwDOIPDwls5RsUqo",
        "number": 5440,
        "title": "Fixed docstring in faiss.py for load_local",
        "user": {
            "login": "luckyduck",
            "id": 400837,
            "node_id": "MDQ6VXNlcjQwMDgzNw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/400837?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luckyduck",
            "html_url": "https://github.com/luckyduck",
            "followers_url": "https://api.github.com/users/luckyduck/followers",
            "following_url": "https://api.github.com/users/luckyduck/following{/other_user}",
            "gists_url": "https://api.github.com/users/luckyduck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luckyduck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luckyduck/subscriptions",
            "organizations_url": "https://api.github.com/users/luckyduck/orgs",
            "repos_url": "https://api.github.com/users/luckyduck/repos",
            "events_url": "https://api.github.com/users/luckyduck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luckyduck/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-30T14:24:51Z",
        "updated_at": "2023-05-30T18:41:00Z",
        "closed_at": "2023-05-30T18:41:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5440",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5440",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5440.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5440.patch",
            "merged_at": "2023-05-30T18:41:00Z"
        },
        "body": "# Fix for docstring in faiss.py vectorstore (load_local)\r\n\r\nThe doctring should reflect that load_local loads something FROM the disk.\r\n\r\n @dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5440/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5440/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5439",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5439/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5439/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5439/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5439",
        "id": 1732314751,
        "node_id": "PR_kwDOIPDwls5RsFdC",
        "number": 5439,
        "title": "Added async _acall to FakeListLLM",
        "user": {
            "login": "camille-vanhoffelen",
            "id": 9014410,
            "node_id": "MDQ6VXNlcjkwMTQ0MTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9014410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/camille-vanhoffelen",
            "html_url": "https://github.com/camille-vanhoffelen",
            "followers_url": "https://api.github.com/users/camille-vanhoffelen/followers",
            "following_url": "https://api.github.com/users/camille-vanhoffelen/following{/other_user}",
            "gists_url": "https://api.github.com/users/camille-vanhoffelen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/camille-vanhoffelen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/camille-vanhoffelen/subscriptions",
            "organizations_url": "https://api.github.com/users/camille-vanhoffelen/orgs",
            "repos_url": "https://api.github.com/users/camille-vanhoffelen/repos",
            "events_url": "https://api.github.com/users/camille-vanhoffelen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/camille-vanhoffelen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T13:47:15Z",
        "updated_at": "2023-05-30T21:34:36Z",
        "closed_at": "2023-05-30T21:34:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5439",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5439",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5439.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5439.patch",
            "merged_at": "2023-05-30T21:34:36Z"
        },
        "body": "# Added Async _acall to FakeListLLM\r\n\r\nFakeListLLM is handy when unit testing apps built with langchain. This allows the use of FakeListLLM inside concurrent code with [asyncio](https://docs.python.org/3/library/asyncio.html).\r\n\r\nI also changed the pydocstring which was out of date.\r\n\r\n## Who can review?\r\n\r\n@hwchase17 - project lead\r\n@agola11 - async\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5439/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5439/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5438",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5438/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5438/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5438/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5438",
        "id": 1732308695,
        "node_id": "PR_kwDOIPDwls5RsEIk",
        "number": 5438,
        "title": "Harrison/condense q llm",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T13:43:43Z",
        "updated_at": "2023-05-30T14:15:39Z",
        "closed_at": "2023-05-30T14:15:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5438",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5438",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5438.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5438.patch",
            "merged_at": "2023-05-30T14:15:38Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5438/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5438/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5437",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5437/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5437/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5437/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5437",
        "id": 1732303481,
        "node_id": "I_kwDOIPDwls5nQNp5",
        "number": 5437,
        "title": "Allow ElasticVectorSearch#add_texts to explicitely set the _ids",
        "user": {
            "login": "lemig",
            "id": 78766,
            "node_id": "MDQ6VXNlcjc4NzY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/78766?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lemig",
            "html_url": "https://github.com/lemig",
            "followers_url": "https://api.github.com/users/lemig/followers",
            "following_url": "https://api.github.com/users/lemig/following{/other_user}",
            "gists_url": "https://api.github.com/users/lemig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lemig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lemig/subscriptions",
            "organizations_url": "https://api.github.com/users/lemig/orgs",
            "repos_url": "https://api.github.com/users/lemig/repos",
            "events_url": "https://api.github.com/users/lemig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lemig/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-30T13:40:49Z",
        "updated_at": "2023-09-10T16:10:05Z",
        "closed_at": "2023-09-10T16:10:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nElasticVectorSearch currently assigns a uuid as identifier while indexing documents.\r\nThis is not idempotent: if we run the code twice duplicates are created.\r\nAlso it would be beneficial to be able to insert new docs, update existing ones and ignore unchanged.\n\n### Suggestion:\n\nI propose to check first if _id or id is present in metadata before setting it to a UUID.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5437/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5437/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5436",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5436/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5436/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5436/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5436",
        "id": 1732233152,
        "node_id": "I_kwDOIPDwls5nP8fA",
        "number": 5436,
        "title": "LLM from hugging face not working",
        "user": {
            "login": "sharbelAllouneh",
            "id": 52939115,
            "node_id": "MDQ6VXNlcjUyOTM5MTE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/52939115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sharbelAllouneh",
            "html_url": "https://github.com/sharbelAllouneh",
            "followers_url": "https://api.github.com/users/sharbelAllouneh/followers",
            "following_url": "https://api.github.com/users/sharbelAllouneh/following{/other_user}",
            "gists_url": "https://api.github.com/users/sharbelAllouneh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sharbelAllouneh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sharbelAllouneh/subscriptions",
            "organizations_url": "https://api.github.com/users/sharbelAllouneh/orgs",
            "repos_url": "https://api.github.com/users/sharbelAllouneh/repos",
            "events_url": "https://api.github.com/users/sharbelAllouneh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sharbelAllouneh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-30T13:05:46Z",
        "updated_at": "2023-09-10T16:10:18Z",
        "closed_at": "2023-09-10T16:10:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nI am trying to use LLM from hugging face as shown in the documentation below, it is working only when write the same prompt in the documentation but when I  am changing it I don't have responses.\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/docs/modules/models/llms/integrations/huggingface_hub.ipynb\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5436/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5436/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5435",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5435/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5435/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5435/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5435",
        "id": 1732178510,
        "node_id": "I_kwDOIPDwls5nPvJO",
        "number": 5435,
        "title": "DuckDuckGo search always returns \"No good DuckDuckGo Search Result was found\"",
        "user": {
            "login": "vishalkesti382",
            "id": 43776283,
            "node_id": "MDQ6VXNlcjQzNzc2Mjgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/43776283?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishalkesti382",
            "html_url": "https://github.com/vishalkesti382",
            "followers_url": "https://api.github.com/users/vishalkesti382/followers",
            "following_url": "https://api.github.com/users/vishalkesti382/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishalkesti382/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishalkesti382/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishalkesti382/subscriptions",
            "organizations_url": "https://api.github.com/users/vishalkesti382/orgs",
            "repos_url": "https://api.github.com/users/vishalkesti382/repos",
            "events_url": "https://api.github.com/users/vishalkesti382/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishalkesti382/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-30T12:40:28Z",
        "updated_at": "2023-09-15T16:09:38Z",
        "closed_at": "2023-09-15T16:09:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version : 0.0.177\r\nPython version : 3.10.8\r\nPlatform : WSL 2\n\n### Who can help?\n\n@vowelparrot\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.tools import DuckDuckGoSearchRun\r\nsearch = DuckDuckGoSearchRun(verbose=True)\r\nsearch.run(\"What is Captial of Ireland?\")\r\n\r\n/home/vishal_kesti/miniconda3/envs/video_audio_env/lib/python3.10/site-packages/duckduckgo_search/compat.py:20: UserWarning: ddg is deprecated. Use DDGS().text() generator\r\n  warnings.warn(\"ddg is deprecated. Use DDGS().text() generator\")\r\n/home/vishal_kesti/miniconda3/envs/video_audio_env/lib/python3.10/site-packages/duckduckgo_search/compat.py:22: UserWarning: parameter time is deprecated, use parameter timelimit\r\n  warnings.warn(\"parameter time is deprecated, use parameter timelimit\")\r\n/home/vishal_kesti/miniconda3/envs/video_audio_env/lib/python3.10/site-packages/duckduckgo_search/compat.py:24: UserWarning: parameter page is deprecated, use DDGS().text() generator\r\n  warnings.warn(\"parameter page is deprecated, use DDGS().text() generator\")\r\n/home/vishal_kesti/miniconda3/envs/video_audio_env/lib/python3.10/site-packages/duckduckgo_search/compat.py:26: UserWarning: parameter max_results is deprecated, use DDGS().text()\r\n  warnings.warn(\"parameter max_results is deprecated, use DDGS().text()\")\r\n\r\n\r\n\"No good DuckDuckGo Search Result was found\"\r\n\n\n### Expected behavior\n\nThere is a change in the duckduckgo python library where in they have specifically mentioned to use DDGS instead of ddg and more specifically the \"text\" if we want to use the api. They also do not support time, page and max_result parameter directly but there is a way to do it too.\r\n\r\nFor eg: \r\nfrom duckduckgo_search import DDGS\r\n\r\nddgs = DDGS()\r\n\r\nkeywords = 'live free or die'\r\nddgs_text_gen = ddgs.text(keywords, region='wt-wt', safesearch='Off', timelimit='y')\r\nfor r in ddgs_text_gen:\r\n    print(r)\r\n\r\n\r\n# Using lite backend and limit the number of results to 10\r\nfrom itertools import islice\r\n\r\nddgs_text_gen = DDGS().text(\"notes from a dead house\", backend=\"lite\")\r\nfor r in islice(ddgs_text_gen, 10):\r\n    print(r)\r\n\r\nI got it working by making the following code changes:\r\n=========================================\r\ntil that calls DuckDuckGo Search.\r\n\r\nNo setup required. Free.\r\nhttps://pypi.org/project/duckduckgo-search/\r\n\"\"\"\r\nfrom typing import Dict, List, Optional\r\n\r\nfrom pydantic import BaseModel, Extra\r\nfrom pydantic.class_validators import root_validator\r\n\r\n\r\nclass DuckDuckGoSearchAPIWrapper(BaseModel):\r\n    \"\"\"Wrapper for DuckDuckGo Search API.\r\n\r\n    Free and does not require any setup\r\n    \"\"\"\r\n\r\n    region: Optional[str] = \"wt-wt\"\r\n    safesearch: str = \"moderate\"\r\n    **timelimit: Optional[str] = \"y\"**\r\n    **backend: str = \"api\"**\r\n\r\n    class Config:\r\n        \"\"\"Configuration for this pydantic object.\"\"\"\r\n\r\n        extra = Extra.forbid\r\n\r\n    @root_validator()\r\n    def validate_environment(cls, values: Dict) -> Dict:\r\n        \"\"\"Validate that python package exists in environment.\"\"\"\r\n        try:\r\n            from duckduckgo_search import DDGS  # noqa: F401\r\n        except ImportError:\r\n            raise ValueError(\r\n                \"Could not import duckduckgo-search python package. \"\r\n                \"Please install it with `pip install duckduckgo-search`.\"\r\n            )\r\n        return values\r\n\r\n    def run(self, query: str) -> str:\r\n        from duckduckgo_search import **DDGS**\r\n\r\n        \"\"\"Run query through DuckDuckGo and return results.\"\"\"\r\n        **ddgs = DDGS()**\r\n        \r\n        results = **ddgs.text**(\r\n            query,\r\n            region=self.region,\r\n            safesearch=self.safesearch,\r\n            time=self.**timelimit**\r\n        )\r\n        if len(results) == 0:\r\n            return \"No good DuckDuckGo Search Result was found\"\r\n        snippets = [result[\"body\"] for result in results]\r\n        return \" \".join(snippets)\r\n\r\n    def results(self, query: str, num_results: int) -> List[Dict]:\r\n        \"\"\"Run query through DuckDuckGo and return metadata.\r\n\r\n        Args:\r\n            query: The query to search for.\r\n            num_results: The number of results to return.\r\n\r\n        Returns:\r\n            A list of dictionaries with the following keys:\r\n                snippet - The description of the result.\r\n                title - The title of the result.\r\n                link - The link to the result.\r\n        \"\"\"\r\n        from duckduckgo_search import **DDGS\r\n        ddgs = DDGS()**\r\n        results = ddgs.text(\r\n            query,\r\n            region=self.region,\r\n            safesearch=self.safesearch,\r\n            time=self.timelimit\r\n        )\r\n\r\n        if len(results) == 0:\r\n            return [{\"Result\": \"No good DuckDuckGo Search Result was found\"}]\r\n\r\n        def to_metadata(result: Dict) -> Dict:\r\n            return {\r\n                \"snippet\": result[\"body\"],\r\n                \"title\": result[\"title\"],\r\n                \"link\": result[\"href\"],\r\n            }\r\n\r\n        return [to_metadata(result) for result in results]\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5435/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5435/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5434",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5434/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5434/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5434/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5434",
        "id": 1732040122,
        "node_id": "I_kwDOIPDwls5nPNW6",
        "number": 5434,
        "title": "Memory with multi input",
        "user": {
            "login": "etherious1804",
            "id": 73232975,
            "node_id": "MDQ6VXNlcjczMjMyOTc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/73232975?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/etherious1804",
            "html_url": "https://github.com/etherious1804",
            "followers_url": "https://api.github.com/users/etherious1804/followers",
            "following_url": "https://api.github.com/users/etherious1804/following{/other_user}",
            "gists_url": "https://api.github.com/users/etherious1804/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/etherious1804/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/etherious1804/subscriptions",
            "organizations_url": "https://api.github.com/users/etherious1804/orgs",
            "repos_url": "https://api.github.com/users/etherious1804/repos",
            "events_url": "https://api.github.com/users/etherious1804/events{/privacy}",
            "received_events_url": "https://api.github.com/users/etherious1804/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T11:13:02Z",
        "updated_at": "2023-05-30T11:17:09Z",
        "closed_at": "2023-05-30T11:17:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI cant seem to add memory to llmChain which takes in 3 inputs as the input_key param only takes in one input so the program looses context\r\ntemplate = \"\"\"\"\r\n             As a helpful chatbot agent of the company, provide a  answer to the customer query.\r\n             Strictly limit to the information provided.\r\n             {chat_history}\r\n             calculate out of pocket or cost if deductable is available in the user's plan info \r\n             Question: {query}\r\n             f\"Information from user's plan: {plan_info}\r\n             f\"Information from company database: {faq_info}\r\n    \"\"\"\r\n\r\n    prompt = PromptTemplate(\r\n        input_variables=[\"chat_history\",\"query\", \"plan_info\", \"faq_info\"],\r\n        template=template\r\n    )\r\n    memory = ConversationBufferMemory(memory_key=\"chat_history\", input_key=[\"query\",\"plan_info\",\"faq_info\"])\r\n    chain = LLMChain(llm=model, prompt=prompt,memory=memory)\r\n\r\n    return chain.predict(query=query, plan_info=plan_info,faq_info=faq_info)\n\n### Suggestion:\n\nis there a way to get memory working in my case or memory with more than 1 inputs isnt implemented yet? ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5434/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5434/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5433",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5433/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5433/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5433/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5433",
        "id": 1732005171,
        "node_id": "I_kwDOIPDwls5nPE0z",
        "number": 5433,
        "title": "FinalStreamingStdOutCallbackHandler not working with ChatOpenAI LLM",
        "user": {
            "login": "lironezra",
            "id": 28096499,
            "node_id": "MDQ6VXNlcjI4MDk2NDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/28096499?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lironezra",
            "html_url": "https://github.com/lironezra",
            "followers_url": "https://api.github.com/users/lironezra/followers",
            "following_url": "https://api.github.com/users/lironezra/following{/other_user}",
            "gists_url": "https://api.github.com/users/lironezra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lironezra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lironezra/subscriptions",
            "organizations_url": "https://api.github.com/users/lironezra/orgs",
            "repos_url": "https://api.github.com/users/lironezra/repos",
            "events_url": "https://api.github.com/users/lironezra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lironezra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-30T10:51:06Z",
        "updated_at": "2023-07-31T22:23:44Z",
        "closed_at": "2023-06-03T22:05:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHi :)\r\n\r\nI tested the new callback stream handler `FinalStreamingStdOutCallbackHandler` and noticed an issue with it.\r\nI copied the code from the documentation and made just one change - use `ChatOpenAI` instead of `OpenAI`\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n`llm = ChatOpenAI(streaming=True, callbacks=[FinalStreamingStdOutCallbackHandler()], temperature=0)` here is my only change\r\n`tools = load_tools([\"wikipedia\", \"llm-math\"], llm=llm)`\r\n`agent = initialize_agent(tools, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=False)`\r\n`agent.run(\"It's 2023 now. How many years ago did Konrad Adenauer become Chancellor of Germany.\")`\n\n### Expected behavior\n\n\r\nThe code above returns the response from the agent but does not stream it. In my project, I must use the `ChatOpenAI` LLM, so I would appreciate it if someone could fix this issue, please.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5433/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5433/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5432",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5432/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5432/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5432/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5432",
        "id": 1731993772,
        "node_id": "PR_kwDOIPDwls5Rq-pT",
        "number": 5432,
        "title": "MRKL output parser no longer breaks well formed queries",
        "user": {
            "login": "ninjapenguin",
            "id": 38786,
            "node_id": "MDQ6VXNlcjM4Nzg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/38786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ninjapenguin",
            "html_url": "https://github.com/ninjapenguin",
            "followers_url": "https://api.github.com/users/ninjapenguin/followers",
            "following_url": "https://api.github.com/users/ninjapenguin/following{/other_user}",
            "gists_url": "https://api.github.com/users/ninjapenguin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ninjapenguin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ninjapenguin/subscriptions",
            "organizations_url": "https://api.github.com/users/ninjapenguin/orgs",
            "repos_url": "https://api.github.com/users/ninjapenguin/repos",
            "events_url": "https://api.github.com/users/ninjapenguin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ninjapenguin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-30T10:43:05Z",
        "updated_at": "2023-05-30T19:58:48Z",
        "closed_at": "2023-05-30T19:58:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5432",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5432",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5432.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5432.patch",
            "merged_at": "2023-05-30T19:58:48Z"
        },
        "body": "# Handles the edge scenario in which the action input is a well formed SQL query which ends with a quoted column\r\n\r\nThere may be a cleaner option here (or indeed other edge scenarios) but this seems to robustly determine if the action input is likely to be a well formed SQL query in which we don't want to arbitrarily trim off `\"` characters\r\n\r\nFixes #5423\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\nFor a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5432/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5432/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5431",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5431/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5431/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5431/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5431",
        "id": 1731930284,
        "node_id": "I_kwDOIPDwls5nOyis",
        "number": 5431,
        "title": "`RetrievalQA` and `HuggingFacePipeline` lead to `TypeError: cannot pickle '_thread.lock' object`",
        "user": {
            "login": "jgsch",
            "id": 22634019,
            "node_id": "MDQ6VXNlcjIyNjM0MDE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/22634019?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jgsch",
            "html_url": "https://github.com/jgsch",
            "followers_url": "https://api.github.com/users/jgsch/followers",
            "following_url": "https://api.github.com/users/jgsch/following{/other_user}",
            "gists_url": "https://api.github.com/users/jgsch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jgsch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jgsch/subscriptions",
            "organizations_url": "https://api.github.com/users/jgsch/orgs",
            "repos_url": "https://api.github.com/users/jgsch/repos",
            "events_url": "https://api.github.com/users/jgsch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jgsch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-30T10:00:43Z",
        "updated_at": "2023-11-06T16:07:59Z",
        "closed_at": "2023-11-06T16:07:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nUbuntu 20.04.6\r\nPython 3.8.5\r\nLangchain 0.0.184\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```python\r\n\r\nimport torch\r\nfrom langchain.vectorstores import Qdrant\r\nfrom langchain.embeddings import HuggingFaceInstructEmbeddings\r\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.llms import HuggingFacePipeline\r\nfrom transformers import (\r\n    AutoModelForCausalLM,\r\n    AutoTokenizer,\r\n    pipeline,\r\n    TextIteratorStreamer,\r\n)\r\n\r\n# embeddings \r\n\r\nembeddings_model_name = \"hkunlp/instructor-base\"\r\n\r\nembeddings_model = HuggingFaceInstructEmbeddings(\r\n    model_name=embeddings_model_name,\r\n    model_kwargs={\"device\": \"cuda\"},\r\n)\r\n\r\ncontents = [\"bla\", \"blabla\", \"blablabla\"]\r\n\r\nvector_store = Qdrant.from_texts(\r\n    contents,\r\n    embeddings_model,\r\n    location=\":memory:\",\r\n    collection_name=\"test\",\r\n)\r\n\r\nretriever = vector_store.as_retriever()\r\n\r\n# llm\r\n\r\nchatbot_model_name = \"\"togethercomputer/RedPajama-INCITE-Chat-3B-v1\"\r\n\r\nmodel = AutoModelForCausalLM.from_pretrained(\r\n    chatbot_model_name,\r\n    load_in_8bit=True,\r\n    torch_dtype=torch.float16,\r\n    device_map=\"auto\",\r\n)\r\n\r\ntokenizer = AutoTokenizer.from_pretrained(chatbot_model_name)\r\n\r\nstreamer = TextIteratorStreamer(\r\n    tokenizer,\r\n    timeout=10.0,\r\n    skip_prompt=True,\r\n    skip_special_tokens=True,\r\n)\r\n\r\npipe = pipeline(\r\n    \"text-generation\",\r\n    model=model,\r\n    tokenizer=tokenizer,\r\n    streamer=streamer,\r\n    max_length=1024,\r\n    temperature=0,\r\n    top_p=0.95,\r\n    repetition_penalty=1.15,\r\n)\r\n\r\npipe = HuggingFacePipeline(pipeline=pipe)\r\n\r\n# qa\r\n\r\nqa = RetrievalQA.from_chain_type(\r\n    llm=pipe,\r\n    chain_type=\"stuff\",\r\n    retriever=retriever,\r\n    return_source_documents=False,\r\n)\r\n\r\nqa.run(\"What is the capital of France\")\r\n```\r\nwhich lead to \r\n\r\n```python\r\nTypeError: cannot pickle '_thread.lock' object\r\n````\r\n\r\n\r\n### Expected behavior\r\n\r\nI should be able to get the `streamer` outputs",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5431/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5431/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5430",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5430/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5430/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5430/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5430",
        "id": 1731915057,
        "node_id": "PR_kwDOIPDwls5Rqtgo",
        "number": 5430,
        "title": "Add maximal relevance search to SKLearnVectorStore",
        "user": {
            "login": "mrtj",
            "id": 3469711,
            "node_id": "MDQ6VXNlcjM0Njk3MTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3469711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrtj",
            "html_url": "https://github.com/mrtj",
            "followers_url": "https://api.github.com/users/mrtj/followers",
            "following_url": "https://api.github.com/users/mrtj/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrtj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrtj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrtj/subscriptions",
            "organizations_url": "https://api.github.com/users/mrtj/orgs",
            "repos_url": "https://api.github.com/users/mrtj/repos",
            "events_url": "https://api.github.com/users/mrtj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrtj/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T09:51:58Z",
        "updated_at": "2023-05-30T23:13:34Z",
        "closed_at": "2023-05-30T23:13:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5430",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5430",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5430.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5430.patch",
            "merged_at": "2023-05-30T23:13:33Z"
        },
        "body": "# Add maximal relevance search to SKLearnVectorStore\r\n\r\nThis PR implements the maximum relevance search in SKLearnVectorStore. \r\n\r\nTwitter handle: jtolgyesi (I submitted also the original implementation of SKLearnVectorStore)\r\n\r\n## Before submitting\r\n\r\nUnit tests are included.\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n  @hwchase17 - project lead\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5430/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5430/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5428",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5428/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5428/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5428/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5428",
        "id": 1731789217,
        "node_id": "I_kwDOIPDwls5nOQGh",
        "number": 5428,
        "title": "parse_json_markdown is unable to parse json strings with nested triple backticks",
        "user": {
            "login": "schinto",
            "id": 8945782,
            "node_id": "MDQ6VXNlcjg5NDU3ODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8945782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/schinto",
            "html_url": "https://github.com/schinto",
            "followers_url": "https://api.github.com/users/schinto/followers",
            "following_url": "https://api.github.com/users/schinto/following{/other_user}",
            "gists_url": "https://api.github.com/users/schinto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/schinto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/schinto/subscriptions",
            "organizations_url": "https://api.github.com/users/schinto/orgs",
            "repos_url": "https://api.github.com/users/schinto/repos",
            "events_url": "https://api.github.com/users/schinto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/schinto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-30T08:37:30Z",
        "updated_at": "2023-12-14T16:08:19Z",
        "closed_at": "2023-12-14T16:08:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version 0.0.184, python 3.9.13\r\nFunction `parse_json_markdown` in langchain/output_parsers/json.py fails with input text string:\r\n\\`\\`\\`json\r\n{\r\n    \"action\": \"Final Answer\",\r\n    \"action_input\": \"Here's a Python script to remove backticks at the beginning and end of a string:\\n\\n\\`\\`\\`python\\ndef remove_backticks(s):\\n    return s.strip('\\`')\\n\\nstring_with_backticks = '\\`example string\\`'\\nresult = remove_backticks(string_with_backticks)\\nprint(result)\\n\\`\\`\\`\\n\\nThis script defines a function called \\`remove_backticks\\` that takes a string as input and returns a new string with backticks removed from the beginning and end. It then demonstrates how to use the function with an example string.\"\r\n}\r\n\\`\\`\\`\r\n\r\nPotential case of error:\r\n`match.group(2)` in the function `parse_json_markdown` contains only the string up to the first occurrence of the second triple backticks:\r\n\r\n{\r\n    \"action\": \"Final Answer\",\r\n    \"action_input\": \"Here's a Python script to remove backticks at the beginning and end of a string:\\n\\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nCalled function `parse_json_markdown` in langchain/output_parsers/json.py with input text string:\r\n\\`\\`\\`json\r\n{\r\n    \"action\": \"Final Answer\",\r\n    \"action_input\": \"Here's a Python script to remove backticks at the beginning and end of a string:\\n\\n\\`\\`\\`python\\ndef remove_backticks(s):\\n    return s.strip('\\`')\\n\\nstring_with_backticks = '\\`example string\\`'\\nresult = remove_backticks(string_with_backticks)\\nprint(result)\\n\\`\\`\\`\\n\\nThis script defines a function called \\`remove_backticks\\` that takes a string as input and returns a new string with backticks removed from the beginning and end. It then demonstrates how to use the function with an example string.\"\r\n}\r\n\\`\\`\\`\n\n### Expected behavior\n\nFunction `parse_json_markdown` should return the following json string\r\n{\r\n\"action\": \"Final Answer\",\r\n\"action_input\": \"Here's a Python script to remove backticks at the beginning and end of a string:\\n\\n\\`\\`\\`python\\ndef remove_backticks(s):\\n return s.strip('\\`')\\n\\nstring_with_backticks = '\\`example string\\`'\\nresult = remove_backticks(string_with_backticks)\\nprint(result)\\n\\`\\`\\`\\n\\nThis script defines a function called \\`remove_backticks\\` that takes a string as input and returns a new string with backticks removed from the beginning and end. It then demonstrates how to use the function with an example string.\"\r\n}",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5428/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5428/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5427",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5427/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5427/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5427/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5427",
        "id": 1731768154,
        "node_id": "PR_kwDOIPDwls5RqNxc",
        "number": 5427,
        "title": "added n_threads functionality for gpt4all",
        "user": {
            "login": "Vokturz",
            "id": 21696514,
            "node_id": "MDQ6VXNlcjIxNjk2NTE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/21696514?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vokturz",
            "html_url": "https://github.com/Vokturz",
            "followers_url": "https://api.github.com/users/Vokturz/followers",
            "following_url": "https://api.github.com/users/Vokturz/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vokturz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vokturz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vokturz/subscriptions",
            "organizations_url": "https://api.github.com/users/Vokturz/orgs",
            "repos_url": "https://api.github.com/users/Vokturz/repos",
            "events_url": "https://api.github.com/users/Vokturz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vokturz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T08:24:42Z",
        "updated_at": "2023-05-30T23:31:30Z",
        "closed_at": "2023-05-30T23:31:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5427",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5427",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5427.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5427.patch",
            "merged_at": "2023-05-30T23:31:30Z"
        },
        "body": "# Added support for modifying the number of threads in the GPT4All model\r\n\r\nI have added the capability to modify the number of threads used by the GPT4All model. This allows users to adjust the model's parallel processing capabilities based on their specific requirements.\r\n\r\n## Changes Made\r\n- Updated the `validate_environment` method to set the number of threads for the GPT4All model using the `values[\"n_threads\"]` parameter from the `GPT4All` class constructor.\r\n\r\n## Context\r\nUseful in scenarios where users want to optimize the model's performance by leveraging multi-threading capabilities. \r\nPlease note that the `n_threads` parameter was included in the `GPT4All` class constructor but was previously unused. This change ensures that the specified number of threads is utilized by the model .\r\n\r\n## Dependencies\r\nThere are no new dependencies introduced by this change. It only utilizes existing functionality provided by the GPT4All package.\r\n\r\n## Testing\r\nSince this is a minor change testing is not required.\r\n\r\n## Who can review?\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5427/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5427/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5426",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5426/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5426/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5426/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5426",
        "id": 1731702422,
        "node_id": "PR_kwDOIPDwls5Rp_po",
        "number": 5426,
        "title": "Change _parse_input implementation in BaseTool",
        "user": {
            "login": "caffeinism",
            "id": 39237502,
            "node_id": "MDQ6VXNlcjM5MjM3NTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/39237502?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/caffeinism",
            "html_url": "https://github.com/caffeinism",
            "followers_url": "https://api.github.com/users/caffeinism/followers",
            "following_url": "https://api.github.com/users/caffeinism/following{/other_user}",
            "gists_url": "https://api.github.com/users/caffeinism/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/caffeinism/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/caffeinism/subscriptions",
            "organizations_url": "https://api.github.com/users/caffeinism/orgs",
            "repos_url": "https://api.github.com/users/caffeinism/repos",
            "events_url": "https://api.github.com/users/caffeinism/events{/privacy}",
            "received_events_url": "https://api.github.com/users/caffeinism/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-30T07:42:35Z",
        "updated_at": "2023-08-23T07:33:52Z",
        "closed_at": "2023-08-23T07:33:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5426",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5426",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5426.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5426.patch",
            "merged_at": null
        },
        "body": "- Change to respect the BaseModel more than the results of the agent.\r\n\r\n# Change _parse_input implementation in BaseTool\r\n\r\nIt's hard for me to figure out the intent of the original author of the old code. The original code tends to prioritize the agent's output over the results of pydantic's BaseModel parse_obj. For example, the old code does not honor pydantic's default value or alias. (If they are not included in the key of the agent's output, they are removed.) I was a bit curious about why this implementation was needed, so I created a pull request.\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@vowelparrot\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5426/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5426/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5425",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5425/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5425/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5425/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5425",
        "id": 1731503166,
        "node_id": "PR_kwDOIPDwls5RpUgi",
        "number": 5425,
        "title": "Rename and fix typo in lancedb",
        "user": {
            "login": "eddyxu",
            "id": 17097,
            "node_id": "MDQ6VXNlcjE3MDk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/17097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eddyxu",
            "html_url": "https://github.com/eddyxu",
            "followers_url": "https://api.github.com/users/eddyxu/followers",
            "following_url": "https://api.github.com/users/eddyxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/eddyxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eddyxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eddyxu/subscriptions",
            "organizations_url": "https://api.github.com/users/eddyxu/orgs",
            "repos_url": "https://api.github.com/users/eddyxu/repos",
            "events_url": "https://api.github.com/users/eddyxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eddyxu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T04:55:24Z",
        "updated_at": "2023-05-30T07:24:18Z",
        "closed_at": "2023-05-30T07:24:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5425",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5425",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5425.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5425.patch",
            "merged_at": "2023-05-30T07:24:17Z"
        },
        "body": "# Fix typo in LanceDB notebook filename\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5425/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5425/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5423",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5423/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5423/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5423/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5423",
        "id": 1731469889,
        "node_id": "I_kwDOIPDwls5nNCJB",
        "number": 5423,
        "title": "SQLDatabaseToolkit doesn't work well with Postgresql, it will truncate the last double quotation marks in the SQL",
        "user": {
            "login": "xiaohui-gsv",
            "id": 38554198,
            "node_id": "MDQ6VXNlcjM4NTU0MTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/38554198?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xiaohui-gsv",
            "html_url": "https://github.com/xiaohui-gsv",
            "followers_url": "https://api.github.com/users/xiaohui-gsv/followers",
            "following_url": "https://api.github.com/users/xiaohui-gsv/following{/other_user}",
            "gists_url": "https://api.github.com/users/xiaohui-gsv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xiaohui-gsv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xiaohui-gsv/subscriptions",
            "organizations_url": "https://api.github.com/users/xiaohui-gsv/orgs",
            "repos_url": "https://api.github.com/users/xiaohui-gsv/repos",
            "events_url": "https://api.github.com/users/xiaohui-gsv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xiaohui-gsv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-30T04:02:36Z",
        "updated_at": "2023-06-01T01:25:23Z",
        "closed_at": "2023-05-30T19:58:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain: 0.0.184\r\nPython: 3.10.9\r\nPlatform: Windows 10 with Jupyter lab\n\n### Who can help?\n\n@vowelparrot\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSQLDatabaseToolkit works well if the SQL doesn't include the double quotation marks at the end, if there is, it will truncate the last double quotation marks, resulting in an endless loop.\r\nBelow is the initial code snapshot.\r\n![image](https://github.com/hwchase17/langchain/assets/38554198/6a444508-4774-4962-8ae2-e5513c756535)\r\nAnd when I executed it.\r\n![image](https://github.com/hwchase17/langchain/assets/38554198/5d3c76fe-8151-4caf-9970-03c84473f925)\r\nThe LLM generates the correct SQL, but the toolkit truncats the last double quotation marks.\n\n### Expected behavior\n\nWon't truncate the last double quotation marks for PostgreSql.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5423/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5423/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5422",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5422/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5422/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5422/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5422",
        "id": 1731462914,
        "node_id": "I_kwDOIPDwls5nNAcC",
        "number": 5422,
        "title": "Can not Use OpenAI and AzureChatOpenAI together",
        "user": {
            "login": "FrankDataAnalystPython",
            "id": 39264971,
            "node_id": "MDQ6VXNlcjM5MjY0OTcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/39264971?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FrankDataAnalystPython",
            "html_url": "https://github.com/FrankDataAnalystPython",
            "followers_url": "https://api.github.com/users/FrankDataAnalystPython/followers",
            "following_url": "https://api.github.com/users/FrankDataAnalystPython/following{/other_user}",
            "gists_url": "https://api.github.com/users/FrankDataAnalystPython/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FrankDataAnalystPython/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FrankDataAnalystPython/subscriptions",
            "organizations_url": "https://api.github.com/users/FrankDataAnalystPython/orgs",
            "repos_url": "https://api.github.com/users/FrankDataAnalystPython/repos",
            "events_url": "https://api.github.com/users/FrankDataAnalystPython/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FrankDataAnalystPython/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-30T03:52:01Z",
        "updated_at": "2023-09-18T16:09:59Z",
        "closed_at": "2023-09-18T16:09:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nDear Developer:\r\nI have encounter an error that I am not able run OpenAI and AzureChatOpenAI together.Here is how to reproduce the error\r\n\r\nlangchain Version: 0.0.184\r\npyython: 3.9.12\r\n\r\n\r\n```python\r\nfrom langchain.llms import OpenAI, AzureOpenAI\r\nfrom langchain.chat_models import ChatOpenAI, AzureChatOpenAI\r\n\r\nopenai_params = {\r\n    \"openai_api_key\" : \"key\",\r\n    \"openai_api_base\": \"url\"\r\n}\r\n\r\nopenaiazure_params = {\r\n    \"deployment_name\" : \"db\",\r\n    \"openai_api_base\" : \"https://azure.com/\",\r\n    \"openai_api_version\" : \"2023-03-15-preview\",\r\n    \"openai_api_type\" : \"azure\",\r\n    \"openai_api_key\" : \"key\"\r\n}\r\n\r\nllm = OpenAI(temperature=0.5, max_tokens=1024, **openai_params)\r\nprint(llm(\"tell me joke\")). # note that this line works fun it wiil call the api without any error\r\n\r\nllmazure =  AzureChatOpenAI(**openaiazure_params)\r\n\r\nprint(llm(\"tell me joke\")). # now it seems that running the AzureChatOpenAI would somehow change the class attribute of the OpenAI. If I rerun this line it would give the following error\r\n```\r\n\r\n```text\r\nFile \"/Users/xyn/anaconda3/lib/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 83, in __prepare_create_request\r\n    raise error.InvalidRequestError(\r\nopenai.error.InvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.completion.Completion'>\r\n```\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nfrom langchain.llms import OpenAI, AzureOpenAI\r\nfrom langchain.chat_models import ChatOpenAI, AzureChatOpenAI\r\n\r\nopenai_params = {\r\n    \"openai_api_key\" : \"key\",\r\n    \"openai_api_base\": \"url\"\r\n}\r\n\r\nopenaiazure_params = {\r\n    \"deployment_name\" : \"db\",\r\n    \"openai_api_base\" : \"https://azure.com/\",\r\n    \"openai_api_version\" : \"2023-03-15-preview\",\r\n    \"openai_api_type\" : \"azure\",\r\n    \"openai_api_key\" : \"key\"\r\n}\r\n\r\nllm = OpenAI(temperature=0.5, max_tokens=1024, **openai_params)\r\nprint(llm(\"tell me joke\")). # note that this line works fun it wiil call the api without any error\r\n\r\nllmazure =  AzureChatOpenAI(**openaiazure_params)\r\n\r\nprint(llm(\"tell me joke\"))  # now it seems that running the AzureChatOpenAI would somehow change the class attribute of the OpenAI. If I rerun this line it would give the following error\r\n\r\n```\n\n### Expected behavior\n\n```python\r\nprint(llm(\"tell me joke\")) # still gives the result after using the AzureChatOpenAI\r\n\r\nfrom langchain.schema import HumanMessage\r\nllmazure([HumanMessage(content=\"tell me joke\")]) # could also do appropriate calls\r\n\r\n# was worried attributes would be changed back, so what if I reset the OpenAI and test AzureChatOpenAI again\r\nllm = OpenAI(temperature=0.5, max_tokens=1024, **openai_params)\r\n\r\n# then test AzureChatOpenAI\r\nllmazure([HumanMessage(content=\"tell me joke\")]) # do appropriate calls\r\nprint(llm(\"tell me joke\")) # do appropriate calls\r\n\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5422/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5422/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5421",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5421/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5421/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5421/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5421",
        "id": 1731445889,
        "node_id": "I_kwDOIPDwls5nM8SB",
        "number": 5421,
        "title": "Implement other Language version of LangChain",
        "user": {
            "login": "ken20220214",
            "id": 134989678,
            "node_id": "U_kgDOCAvHbg",
            "avatar_url": "https://avatars.githubusercontent.com/u/134989678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ken20220214",
            "html_url": "https://github.com/ken20220214",
            "followers_url": "https://api.github.com/users/ken20220214/followers",
            "following_url": "https://api.github.com/users/ken20220214/following{/other_user}",
            "gists_url": "https://api.github.com/users/ken20220214/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ken20220214/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ken20220214/subscriptions",
            "organizations_url": "https://api.github.com/users/ken20220214/orgs",
            "repos_url": "https://api.github.com/users/ken20220214/repos",
            "events_url": "https://api.github.com/users/ken20220214/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ken20220214/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-30T03:23:46Z",
        "updated_at": "2023-09-21T05:08:56Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nLangChain framework mostly aims to build applications which interact with LLM. Many online applications themselves are implements by other languages such as Java,C++, but LangChain only supports Python and JS by now. How about implement other language version of LangChain?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5421/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5421/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5420",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5420/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5420/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5420/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5420",
        "id": 1731421091,
        "node_id": "I_kwDOIPDwls5nM2Oj",
        "number": 5420,
        "title": "Issue: How to merge two vector in HNSWLib",
        "user": {
            "login": "dlxj",
            "id": 36914981,
            "node_id": "MDQ6VXNlcjM2OTE0OTgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/36914981?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dlxj",
            "html_url": "https://github.com/dlxj",
            "followers_url": "https://api.github.com/users/dlxj/followers",
            "following_url": "https://api.github.com/users/dlxj/following{/other_user}",
            "gists_url": "https://api.github.com/users/dlxj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dlxj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dlxj/subscriptions",
            "organizations_url": "https://api.github.com/users/dlxj/orgs",
            "repos_url": "https://api.github.com/users/dlxj/repos",
            "events_url": "https://api.github.com/users/dlxj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dlxj/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-30T02:44:14Z",
        "updated_at": "2023-05-30T08:52:51Z",
        "closed_at": "2023-05-30T08:52:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n\r\nI try, but don't work.\r\n\r\nmy code:\r\n\r\n```\r\n    let { HNSWLib } = await import('langchain/vectorstores/hnswlib')\r\n    let { OpenAIEmbeddings } = await import('langchain/embeddings/openai')\r\n\r\n    let vectors1 = await HNSWLib.load(\r\n        \"D:/workcode/nodejs/chatgpt_server/vectors/32202\",\r\n        new OpenAIEmbeddings()\r\n    )\r\n    \r\n    let vectors2 = await HNSWLib.load(\r\n        \"D:/workcode/nodejs/chatgpt_server/vectors/60551\",\r\n        new OpenAIEmbeddings()\r\n    )\r\n    \r\n    let vectors3 = await vectors1.addVectors(vectors2, vectors2.docstore._docs)\r\n```\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5420/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5420/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5419",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5419/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5419/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5419/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5419",
        "id": 1731329471,
        "node_id": "I_kwDOIPDwls5nMf2_",
        "number": 5419,
        "title": "Add AzureCosmosDBVectorSearch VectorStore",
        "user": {
            "login": "izzymsft",
            "id": 37992436,
            "node_id": "MDQ6VXNlcjM3OTkyNDM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37992436?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/izzymsft",
            "html_url": "https://github.com/izzymsft",
            "followers_url": "https://api.github.com/users/izzymsft/followers",
            "following_url": "https://api.github.com/users/izzymsft/following{/other_user}",
            "gists_url": "https://api.github.com/users/izzymsft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/izzymsft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/izzymsft/subscriptions",
            "organizations_url": "https://api.github.com/users/izzymsft/orgs",
            "repos_url": "https://api.github.com/users/izzymsft/repos",
            "events_url": "https://api.github.com/users/izzymsft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/izzymsft/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-29T23:58:25Z",
        "updated_at": "2023-09-18T16:10:05Z",
        "closed_at": "2023-09-18T16:10:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAzure Cosmos DB for MongoDB vCore enables users to efficiently store, index, and query high dimensional vector data stored directly in Azure Cosmos DB for MongoDB vCore. It contains similarity measures such as COS (cosine distance), L2 (Euclidean distance) or IP (inner product) which measures the distance between the data vectors and your query vector. The data vectors that are closest to your query vector are the ones that are found to be most similar semantically and retrieved during query time. The accompanying PR would add support for Langchain Python users to store vectors from document embeddings generated from APIs such as Azure OpenAI Embeddings or Hugging Face on Azure.\r\n\r\n[Azure Cosmos DB for MongoDB vCore](https://learn.microsoft.com/en-us/azure/cosmos-db/mongodb/vcore/vector-search)\n\n### Motivation\n\nThis capability described in the feature request is currently not available for Langchain Python.\n\n### Your contribution\n\nI will be submitting a PR for this feature request.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5419/reactions",
            "total_count": 6,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 6,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5419/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5418",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5418/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5418/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5418/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5418",
        "id": 1731327871,
        "node_id": "I_kwDOIPDwls5nMfd_",
        "number": 5418,
        "title": "Issue: Unsupported OpenAI-Version header provided: 2023-05-15. (HINT: you can provide any of the following support ed versions: 2020-10-01, 2020-11-07.'",
        "user": {
            "login": "jiangying000",
            "id": 23182033,
            "node_id": "MDQ6VXNlcjIzMTgyMDMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/23182033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiangying000",
            "html_url": "https://github.com/jiangying000",
            "followers_url": "https://api.github.com/users/jiangying000/followers",
            "following_url": "https://api.github.com/users/jiangying000/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiangying000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiangying000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiangying000/subscriptions",
            "organizations_url": "https://api.github.com/users/jiangying000/orgs",
            "repos_url": "https://api.github.com/users/jiangying000/repos",
            "events_url": "https://api.github.com/users/jiangying000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiangying000/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-29T23:56:40Z",
        "updated_at": "2023-09-10T16:10:21Z",
        "closed_at": "2023-09-10T16:10:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nMy code\uff1a\r\n```\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\n\r\n    embeddings = OpenAIEmbeddings(\r\n        openai_api_base='https://api.openai.com/v1',\r\n        openai_api_type='open_ai',\r\n        model='text-embedding-ada-002',\r\n        openai_api_version='2023-05-15',\r\n        openai_api_key=openai_api_key,\r\n        max_retries=3,\r\n    )\r\n```\r\n\r\nAnd I got `2023-05-30 07:28:40,163 INFO error_code=None error_message='Unsupported OpenAI-Version header provided: 2023-05-15. (HINT: you can provide any of the following supported versions: 2020-10-01, 2020-11-07. Alternatively, you can simply omit this header to use the default version associated with your account.)' error_param=headers:openai-version error_type=invalid_request_error message='OpenAI API error received' stream_error=False\r\n`\r\n\r\nWhy this is supported versions so old (they are 2020-10-01, 2020-11-07)? Is this normal ?\r\nAnybody got this error ?\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5418/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5418/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5417",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5417/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5417/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5417/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5417",
        "id": 1731322560,
        "node_id": "PR_kwDOIPDwls5Rou3K",
        "number": 5417,
        "title": "Harrison/text splitter",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-29T23:41:50Z",
        "updated_at": "2023-05-29T23:56:32Z",
        "closed_at": "2023-05-29T23:56:31Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5417",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5417",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5417.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5417.patch",
            "merged_at": "2023-05-29T23:56:31Z"
        },
        "body": "adds support for keeping separators around when using recursive text splitter",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5417/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5417/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5416",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5416/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5416/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5416/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5416",
        "id": 1731233003,
        "node_id": "I_kwDOIPDwls5nMITr",
        "number": 5416,
        "title": "Is it possible to return similarity score from RetrievalQA/docsearch",
        "user": {
            "login": "PavelAgurov",
            "id": 37487002,
            "node_id": "MDQ6VXNlcjM3NDg3MDAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/37487002?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PavelAgurov",
            "html_url": "https://github.com/PavelAgurov",
            "followers_url": "https://api.github.com/users/PavelAgurov/followers",
            "following_url": "https://api.github.com/users/PavelAgurov/following{/other_user}",
            "gists_url": "https://api.github.com/users/PavelAgurov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PavelAgurov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PavelAgurov/subscriptions",
            "organizations_url": "https://api.github.com/users/PavelAgurov/orgs",
            "repos_url": "https://api.github.com/users/PavelAgurov/repos",
            "events_url": "https://api.github.com/users/PavelAgurov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PavelAgurov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-05-29T21:02:00Z",
        "updated_at": "2023-12-08T16:01:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIt will be very nice to have similarity score from docsearch.\r\nNow I have list of documents even if model says \"I'm sorry, but I don't have enough information to answer your question\".\r\n\r\n```\r\nfrom langchain.chains import RetrievalQA\r\n\r\nqa = RetrievalQA.from_chain_type(\r\n    llm=llm,\r\n    chain_type= \"stuff\", \r\n    retriever = docsearch.as_retriever(\r\n        search_type=\"similarity\",\r\n        search_kwargs={\"k\":3}\r\n    ),\r\n    return_source_documents=True\r\n)\r\n```\n\n### Motivation\n\nNow it returns list of documents even if model says \"I'm sorry, but I don't have enough information to answer your question.\"\r\nAnd also I got list of not really relevant documents.\n\n### Your contribution\n\nNot sure here. For example in `chroma.py`  I can add output of similarity:\r\n\r\n```\r\n    def similarity_search(\r\n        self,\r\n        query: str,\r\n        k: int = DEFAULT_K,\r\n        filter: Optional[Dict[str, str]] = None,\r\n        **kwargs: Any,\r\n    ) -> List[Document]:\r\n        docs_and_scores = self.similarity_search_with_score(query, k, filter=filter)\r\n        result = []\r\n        for doc, score in docs_and_scores:\r\n          doc.metadata['score'] = score\r\n          result.append(doc)\r\n        return result\r\n```\r\n\r\n**BUT** it's not relevant to the output - I got similarity 0.3-0.4 for correct answers and at the same time - for \"he context does not provide any information about what...\". So this method is good to return score, but not good to solve all my questions.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5416/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5416/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5415",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5415/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5415/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5415/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5415",
        "id": 1731193526,
        "node_id": "PR_kwDOIPDwls5RoTQB",
        "number": 5415,
        "title": "Chroma integration improvement",
        "user": {
            "login": "Satyam-79",
            "id": 70771653,
            "node_id": "MDQ6VXNlcjcwNzcxNjUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/70771653?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Satyam-79",
            "html_url": "https://github.com/Satyam-79",
            "followers_url": "https://api.github.com/users/Satyam-79/followers",
            "following_url": "https://api.github.com/users/Satyam-79/following{/other_user}",
            "gists_url": "https://api.github.com/users/Satyam-79/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Satyam-79/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Satyam-79/subscriptions",
            "organizations_url": "https://api.github.com/users/Satyam-79/orgs",
            "repos_url": "https://api.github.com/users/Satyam-79/repos",
            "events_url": "https://api.github.com/users/Satyam-79/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Satyam-79/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-29T20:08:12Z",
        "updated_at": "2023-08-16T23:46:53Z",
        "closed_at": "2023-08-16T23:46:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5415",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5415",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5415.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5415.patch",
            "merged_at": null
        },
        "body": "# Chroma Integration Improvement \r\n [Langchain love](https://github.com/chroma-core/chroma/issues/560): deepened the integration of langchain and chromadb.\r\n \r\n\r\n- [x] upsert\r\n- [x] delete\r\n- [x] get_all_ids\r\n- [x] docstrings improvement\r\n- [x] Examples\r\n\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n- #3011 \r\n- #1714 \r\n\r\n\r\n\r\n## Who can review?\r\n\r\n- @dev2049\r\n- @jeffchuber\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5415/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5415/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5414",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5414/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5414/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5414/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5414",
        "id": 1731079465,
        "node_id": "I_kwDOIPDwls5nLi0p",
        "number": 5414,
        "title": "FLARE | Azure open Ai doesn't work",
        "user": {
            "login": "waadarsh",
            "id": 36239301,
            "node_id": "MDQ6VXNlcjM2MjM5MzAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/36239301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/waadarsh",
            "html_url": "https://github.com/waadarsh",
            "followers_url": "https://api.github.com/users/waadarsh/followers",
            "following_url": "https://api.github.com/users/waadarsh/following{/other_user}",
            "gists_url": "https://api.github.com/users/waadarsh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/waadarsh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/waadarsh/subscriptions",
            "organizations_url": "https://api.github.com/users/waadarsh/orgs",
            "repos_url": "https://api.github.com/users/waadarsh/repos",
            "events_url": "https://api.github.com/users/waadarsh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/waadarsh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-05-29T17:50:06Z",
        "updated_at": "2023-10-10T12:40:52Z",
        "closed_at": "2023-09-21T16:09:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.182, python 3.11.3, mac os \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [x] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [x] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [x] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nFLARE with azure open ai causes this issue.\r\n\r\nInvalidRequestError Traceback (most recent call last)\r\nin <cell line: 1>()\r\n----> 1 flare.run(query)\r\n\r\n20 frames\r\n[/usr/local/lib/python3.10/dist-packages/openai/api_resources/abstract/engine_api_resource.py](https://localhost:8080/#) in __prepare_create_request(cls, api_key, api_base, api_type, api_version, organization, **params)\r\n81 if typed_api_type in (util.ApiType.AZURE, util.ApiType.AZURE_AD):\r\n82 if deployment_id is None and engine is None:\r\n---> 83 raise error.InvalidRequestError(\r\n84 \"Must provide an 'engine' or 'deployment_id' parameter to create a %s\"\r\n85 % cls,\r\n\r\nInvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.completion.Completion'>\n\n### Expected behavior\n\n> Entering new FlareChain chain...\r\nCurrent Response: \r\nPrompt after formatting:\r\nRespond to the user message using any relevant context. If context is provided, you should ground your answer in that context. Once you're done responding return FINISHED.\r\n\r\n>>> CONTEXT: \r\n>>> USER INPUT: explain in great detail the difference between the langchain framework and baby agi\r\n>>> RESPONSE: \r\n\r\n\r\n> Entering new QuestionGeneratorChain chain...\r\nPrompt after formatting:\r\nGiven a user input and an existing partial response as context, ask a question to which the answer is the given term/entity/phrase:\r\n\r\n>>> USER INPUT: explain in great detail the difference between the langchain framework and baby agi\r\n>>> EXISTING PARTIAL RESPONSE:  \r\nThe Langchain Framework is a decentralized platform for natural language processing (NLP) applications. It uses a blockchain-based distributed ledger to store and process data, allowing for secure and transparent data sharing. The Langchain Framework also provides a set of tools and services to help developers create and deploy NLP applications.\r\n\r\nBaby AGI, on the other hand, is an artificial general intelligence (AGI) platform. It uses a combination of deep learning and reinforcement learning to create an AI system that can learn and adapt to new tasks. Baby AGI is designed to be a general-purpose AI system that can be used for a variety of applications, including natural language processing.\r\n\r\nIn summary, the Langchain Framework is a platform for NLP applications, while Baby AGI is an AI system designed for\r\n\r\nThe question to which the answer is the term/entity/phrase \" decentralized platform for natural language processing\" is:\r\nPrompt after formatting:\r\nGiven a user input and an existing partial response as context, ask a question to which the answer is the given term/entity/phrase:\r\n\r\n>>> USER INPUT: explain in great detail the difference between the langchain framework and baby agi\r\n>>> EXISTING PARTIAL RESPONSE:  \r\nThe Langchain Framework is a decentralized platform for natural language processing (NLP) applications. It uses a blockchain-based distributed ledger to store and process data, allowing for secure and transparent data sharing. The Langchain Framework also provides a set of tools and services to help developers create and deploy NLP applications.\r\n\r\nBaby AGI, on the other hand, is an artificial general intelligence (AGI) platform. It uses a combination of deep learning and reinforcement learning to create an AI system that can learn and adapt to new tasks. Baby AGI is designed to be a general-purpose AI system that can be used for a variety of applications, including natural language processing.\r\n\r\nIn summary, the Langchain Framework is a platform for NLP applications, while Baby AGI is an AI system designed for\r\n\r\nThe question to which the answer is the term/entity/phrase \" uses a blockchain\" is:\r\nPrompt after formatting:\r\nGiven a user input and an existing partial response as context, ask a question to which the answer is the given term/entity/phrase:\r\n\r\n>>> USER INPUT: explain in great detail the difference between the langchain framework and baby agi\r\n>>> EXISTING PARTIAL RESPONSE:  \r\nThe Langchain Framework is a decentralized platform for natural language processing (NLP) applications. It uses a blockchain-based distributed ledger to store and process data, allowing for secure and transparent data sharing. The Langchain Framework also provides a set of tools and services to help developers create and deploy NLP applications.\r\n\r\nBaby AGI, on the other hand, is an artificial general intelligence (AGI) platform. It uses a combination of deep learning and reinforcement learning to create an AI system that can learn and adapt to new tasks. Baby AGI is designed to be a general-purpose AI system that can be used for a variety of applications, including natural language processing.\r\n\r\nIn summary, the Langchain Framework is a platform for NLP applications, while Baby AGI is an AI system designed for\r\n\r\nThe question to which the answer is the term/entity/phrase \" distributed ledger to\" is:\r\nPrompt after formatting:\r\nGiven a user input and an existing partial response as context, ask a question to which the answer is the given term/entity/phrase:\r\n\r\n>>> USER INPUT: explain in great detail the difference between the langchain framework and baby agi\r\n>>> EXISTING PARTIAL RESPONSE:  \r\nThe Langchain Framework is a decentralized platform for natural language processing (NLP) applications. It uses a blockchain-based distributed ledger to store and process data, allowing for secure and transparent data sharing. The Langchain Framework also provides a set of tools and services to help developers create and deploy NLP applications.\r\n\r\nBaby AGI, on the other hand, is an artificial general intelligence (AGI) platform. It uses a combination of deep learning and reinforcement learning to create an AI system that can learn and adapt to new tasks. Baby AGI is designed to be a general-purpose AI system that can be used for a variety of applications, including natural language processing.\r\n\r\nIn summary, the Langchain Framework is a platform for NLP applications, while Baby AGI is an AI system designed for\r\n\r\nThe question to which the answer is the term/entity/phrase \" process data, allowing for secure and transparent data sharing.\" is:\r\nPrompt after formatting:\r\nGiven a user input and an existing partial response as context, ask a question to which the answer is the given term/entity/phrase:\r\n\r\n>>> USER INPUT: explain in great detail the difference between the langchain framework and baby agi\r\n>>> EXISTING PARTIAL RESPONSE:  \r\nThe Langchain Framework is a decentralized platform for natural language processing (NLP) applications. It uses a blockchain-based distributed ledger to store and process data, allowing for secure and transparent data sharing. The Langchain Framework also provides a set of tools and services to help developers create and deploy NLP applications.\r\n\r\nBaby AGI, on the other hand, is an artificial general intelligence (AGI) platform. It uses a combination of deep learning and reinforcement learning to create an AI system that can learn and adapt to new tasks. Baby AGI is designed to be a general-purpose AI system that can be used for a variety of applications, including natural language processing.\r\n\r\nIn summary, the Langchain Framework is a platform for NLP applications, while Baby AGI is an AI system designed for\r\n\r\nThe question to which the answer is the term/entity/phrase \" set of tools\" is:\r\nPrompt after formatting:\r\nGiven a user input and an existing partial response as context, ask a question to which the answer is the given term/entity/phrase:\r\n\r\n>>> USER INPUT: explain in great detail the difference between the langchain framework and baby agi\r\n>>> EXISTING PARTIAL RESPONSE:  \r\nThe Langchain Framework is a decentralized platform for natural language processing (NLP) applications. It uses a blockchain-based distributed ledger to store and process data, allowing for secure and transparent data sharing. The Langchain Framework also provides a set of tools and services to help developers create and deploy NLP applications.\r\n\r\nBaby AGI, on the other hand, is an artificial general intelligence (AGI) platform. It uses a combination of deep learning and reinforcement learning to create an AI system that can learn and adapt to new tasks. Baby AGI is designed to be a general-purpose AI system that can be used for a variety of applications, including natural language processing.\r\n\r\nIn summary, the Langchain Framework is a platform for NLP applications, while Baby AGI is an AI system designed for\r\n\r\nThe question to which the answer is the term/entity/phrase \" help developers create\" is:\r\nPrompt after formatting:\r\nGiven a user input and an existing partial response as context, ask a question to which the answer is the given term/entity/phrase:\r\n\r\n>>> USER INPUT: explain in great detail the difference between the langchain framework and baby agi\r\n>>> EXISTING PARTIAL RESPONSE:  \r\nThe Langchain Framework is a decentralized platform for natural language processing (NLP) applications. It uses a blockchain-based distributed ledger to store and process data, allowing for secure and transparent data sharing. The Langchain Framework also provides a set of tools and services to help developers create and deploy NLP applications.\r\n\r\nBaby AGI, on the other hand, is an artificial general intelligence (AGI) platform. It uses a combination of deep learning and reinforcement learning to create an AI system that can learn and adapt to new tasks. Baby AGI is designed to be a general-purpose AI system that can be used for a variety of applications, including natural language processing.\r\n\r\nIn summary, the Langchain Framework is a platform for NLP applications, while Baby AGI is an AI system designed for\r\n\r\nThe question to which the answer is the term/entity/phrase \" create an AI system\" is:\r\nPrompt after formatting:\r\nGiven a user input and an existing partial response as context, ask a question to which the answer is the given term/entity/phrase:\r\n\r\n>>> USER INPUT: explain in great detail the difference between the langchain framework and baby agi\r\n>>> EXISTING PARTIAL RESPONSE:  \r\nThe Langchain Framework is a decentralized platform for natural language processing (NLP) applications. It uses a blockchain-based distributed ledger to store and process data, allowing for secure and transparent data sharing. The Langchain Framework also provides a set of tools and services to help developers create and deploy NLP applications.\r\n\r\nBaby AGI, on the other hand, is an artificial general intelligence (AGI) platform. It uses a combination of deep learning and reinforcement learning to create an AI system that can learn and adapt to new tasks. Baby AGI is designed to be a general-purpose AI system that can be used for a variety of applications, including natural language processing.\r\n\r\nIn summary, the Langchain Framework is a platform for NLP applications, while Baby AGI is an AI system designed for\r\n\r\nThe question to which the answer is the term/entity/phrase \" NLP applications\" is:",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5414/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5414/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5413",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5413/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5413/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5413/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5413",
        "id": 1731070114,
        "node_id": "PR_kwDOIPDwls5Rn40R",
        "number": 5413,
        "title": "docs: cleaning",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-29T17:36:44Z",
        "updated_at": "2023-05-31T22:28:40Z",
        "closed_at": "2023-05-30T20:58:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5413",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5413",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5413.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5413.patch",
            "merged_at": "2023-05-30T20:58:17Z"
        },
        "body": "# docs cleaning\r\n\r\nChanged docs to consistent format (probably, we need an official doc integration template):\r\n- ClearML - added product descriptions; changed title/headers\r\n- Rebuff  - added product descriptions; changed title/headers\r\n- WhyLabs  - added product descriptions; changed title/headers\r\n- Docugami - changed title/headers/structure\r\n- Airbyte - fixed title\r\n- Wolfram Alpha - added descriptions, fixed title\r\n- OpenWeatherMap -  - added product descriptions; changed title/headers\r\n- Unstructured - changed description\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@hwchase17\r\n@dev2049\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5413/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5413/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5412",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5412/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5412/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5412/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5412",
        "id": 1731041874,
        "node_id": "I_kwDOIPDwls5nLZpS",
        "number": 5412,
        "title": "Early Stopping Exception",
        "user": {
            "login": "jordanparker6",
            "id": 29700471,
            "node_id": "MDQ6VXNlcjI5NzAwNDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29700471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordanparker6",
            "html_url": "https://github.com/jordanparker6",
            "followers_url": "https://api.github.com/users/jordanparker6/followers",
            "following_url": "https://api.github.com/users/jordanparker6/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordanparker6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordanparker6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordanparker6/subscriptions",
            "organizations_url": "https://api.github.com/users/jordanparker6/orgs",
            "repos_url": "https://api.github.com/users/jordanparker6/repos",
            "events_url": "https://api.github.com/users/jordanparker6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordanparker6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-29T17:02:26Z",
        "updated_at": "2023-09-10T16:10:25Z",
        "closed_at": "2023-09-10T16:10:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIt would be useful to introduce an EarlyStoppingException for capture by the AgentExecutor. \n\n### Motivation\n\nIt would be nice to throw a `EarlyStoppingException` in a tool used by an Agent when certain pre-conditions are met (e.g. a validation of something has failed). The `EarlyStoppingException` would be caught by the AgentExector where it would immediately return the error message of the tool as the output.\r\n\r\nMy current work around to achieve something like this without customising the AgentExecutor  requires me to throw the error message as part of the JSON output of the tool in the output format the agent expects from the tool. The agent would then take this information and run it through an LLM. This is not as ideal as an immediate return of the error message as the LLM doesn't return the exact message and it has to pass through a LLM again. \r\n\r\nThe `return_immediate_results` is not ideal in this case as I would like the Agent to summarise the output of the tool on most passes, except when the condition is met where a `EarlyStoppingException` is thrown and caught by the `AgentExector`.\n\n### Your contribution\n\nHappy to create a PR for this if it is wanted.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5412/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5412/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5411",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5411/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5411/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5411/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5411",
        "id": 1731026192,
        "node_id": "I_kwDOIPDwls5nLV0Q",
        "number": 5411,
        "title": "MultiRetrievalQAChain requires ChatModel... but should it?",
        "user": {
            "login": "k3nnethfrancis",
            "id": 36281899,
            "node_id": "MDQ6VXNlcjM2MjgxODk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/36281899?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/k3nnethfrancis",
            "html_url": "https://github.com/k3nnethfrancis",
            "followers_url": "https://api.github.com/users/k3nnethfrancis/followers",
            "following_url": "https://api.github.com/users/k3nnethfrancis/following{/other_user}",
            "gists_url": "https://api.github.com/users/k3nnethfrancis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/k3nnethfrancis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/k3nnethfrancis/subscriptions",
            "organizations_url": "https://api.github.com/users/k3nnethfrancis/orgs",
            "repos_url": "https://api.github.com/users/k3nnethfrancis/repos",
            "events_url": "https://api.github.com/users/k3nnethfrancis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/k3nnethfrancis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-29T16:47:37Z",
        "updated_at": "2023-09-20T16:09:16Z",
        "closed_at": "2023-09-20T16:09:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n![Screen Shot 2023-05-29 at 9 33 50 AM](https://github.com/hwchase17/langchain/assets/36281899/25d386c4-1769-486c-a664-baf235068b97)\r\n![Screen Shot 2023-05-29 at 9 33 25 AM](https://github.com/hwchase17/langchain/assets/36281899/1750f2be-a049-4b7b-a555-0505ecfcfb51)\r\n![Screen Shot 2023-05-29 at 9 33 00 AM](https://github.com/hwchase17/langchain/assets/36281899/ede64632-7098-4c87-aeca-43463cc2a40a)\r\n\r\npython 3.10. Langchain 0.0.184\r\n\r\n\r\nSeems that MultiRetrievalQAChain is requiring a chat model to run, but feels like this shouldn't be required. Other QA pipelines don't require a chat model, and I don't see why they should. I'm guessing this is just a symptom of some parts of the system being upgraded to use chatmodels, since OpenAI is used for a lot of little things under the hood with langchain, like deciding which vectorDB to use based on the retriever_infos dict. However, if you are trying to use another LLM aside from openAI, you cannot use MultiRetrievalQA.\r\n\r\nFurther, I've run into some issues with this sort of thing across otherQA pipelines when using huggingface LLMs. Generally, better support for huggingface is important to me, and I think would be important to many others in the near future as the  open source model ecosystem continues to grow.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nimport langchain\r\nfrom langchain.llms import HuggingFacePipeline, HuggingFaceHub\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\nfrom langchain.schema import Document\r\nfrom langchain.document_loaders import DirectoryLoader, TextLoader\r\nfrom langchain.indexes import VectorstoreIndexCreator\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.chains.router import MultiRetrievalQAChain\r\nfrom transformers import pipeline, AutoTokenizer, AutoModelForCausalLM, GPTJForCausalLM, AutoModelForQuestionAnswering, GPTJForQuestionAnswering\r\nfrom abc import ABC, abstractmethod\r\nfrom typing import List, Dict, Optional\r\nimport os\r\nimport requests\r\nimport shutil\r\n\r\n\r\n#device object\r\ndevice = torch.device('cuda') if torch.cuda.is_available() else torch.device('cpu')\r\n\r\n# hf embeddings model\r\nembeddings = HuggingFaceEmbeddings(model_name=\"sentence-transformers/all-mpnet-base-v2\")\r\n\r\n# Cerebras GPT2.7B\r\nmodel = AutoModelForCausalLM.from_pretrained(\r\n    \"cerebras/Cerebras-GPT-2.7B\",\r\n    torch_dtype=torch.float16,\r\n).to(device)\r\n\r\ntokenizer = AutoTokenizer.from_pretrained(\"cerebras/Cerebras-GPT-2.7B\")\r\n\r\n# hf pipeline\r\ngen_pipe = pipeline(\r\n    \"text-generation\",\r\n    model=model,\r\n    tokenizer=tokenizer,\r\n    max_new_tokens=200, \r\n    early_stopping=True, \r\n    no_repeat_ngram_size=2,\r\n    device=0\r\n)\r\n\r\n# define llm\r\ngen_llm = HuggingFacePipeline(pipeline=gen_pipe)\r\n\r\n# load documents and create retrievers\r\ndocs1 = TextLoader('docs/dir1/mydoc1.txt').load_and_split()\r\nretreiver1 = Chroma.from_documents(docs1, embeddings).as_retriever()\r\n\r\ndocs2 = TextLoader('docs/dir2/mydoc2.txt').load_and_split()\r\nretriever2 = Chroma.from_documents(docs2, embeddings).as_retriever()\r\n\r\nretriever_infos = [\r\n    {\r\n        \"name\": \"space-knowledge\",\r\n        \"description\": \"Good for answering general questions about outer space.\",\r\n        \"retriever\": retriever1\r\n    },\r\n    {\r\n        \"name\": \"earth-knowledge\",\r\n        \"description\": \"Good for answer questions about planet earth\",\r\n        \"retriever\": retriever2\r\n    }\r\n]\r\n\r\nchain = MultiRetrievalQAChain.from_retrievers(llm=gen_llm, retriever_infos=retriever_infos, verbose=True)\r\n\n\n### Expected behavior\n\nI expect this to work the same way it does when using an openAI model. i.e., the model chooses the vectorDB to use based on the question, searches, and returns a response.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5411/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5411/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5409",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5409/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5409/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5409/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5409",
        "id": 1730952051,
        "node_id": "I_kwDOIPDwls5nLDtz",
        "number": 5409,
        "title": "Issue: Display metadata after streaming a response with FastAPI",
        "user": {
            "login": "zigax1",
            "id": 80093733,
            "node_id": "MDQ6VXNlcjgwMDkzNzMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/80093733?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zigax1",
            "html_url": "https://github.com/zigax1",
            "followers_url": "https://api.github.com/users/zigax1/followers",
            "following_url": "https://api.github.com/users/zigax1/following{/other_user}",
            "gists_url": "https://api.github.com/users/zigax1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zigax1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zigax1/subscriptions",
            "organizations_url": "https://api.github.com/users/zigax1/orgs",
            "repos_url": "https://api.github.com/users/zigax1/repos",
            "events_url": "https://api.github.com/users/zigax1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zigax1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-29T15:31:49Z",
        "updated_at": "2023-09-18T16:10:20Z",
        "closed_at": "2023-09-18T16:10:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI have sucessfully set up streaming in HTTP call with FastApi and OpenAI + ConversationalRetrievalChain\r\n\r\nIf I don't use streaming and just return the whole response, like I was doing previously, I also get metadata displayed with the answer.\r\nIf I enable streaming, i get displayed only the answer and the '%' at the end of response.\r\n\r\nLike: ......dummytext.%\r\n\r\nCode, which is responsible for streaming:\r\n\r\n```\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\nimport queue\r\n\r\nclass ThreadedGenerator:\r\n    def __init__(self):\r\n        self.queue = queue.Queue()\r\n\r\n    def __iter__(self):\r\n        return self\r\n\r\n    def __next__(self):\r\n        item = self.queue.get()\r\n        if item is StopIteration: raise item\r\n        return item\r\n\r\n    def send(self, data):\r\n        self.queue.put(data)\r\n\r\n    def close(self):\r\n        self.queue.put(StopIteration)\r\n\r\nclass ChainStreamHandler(StreamingStdOutCallbackHandler):\r\n    def __init__(self, gen):\r\n        super().__init__()\r\n        self.gen = gen\r\n\r\n    def on_llm_new_token(self, token: str, **kwargs):\r\n        self.gen.send(token)\r\n\r\n    def on_llm_new_token(self, token: str, **kwargs):\r\n        self.gen.send(token)\r\n```\r\n\r\nAsk question function:\r\n\r\n```\r\ndef askQuestion(self, generator, collection_id, question):\r\n        try:\r\n            collection_name = \"collection-\" + str(collection_id)\r\n            self.llm = ChatOpenAI(model_name=self.model_name, temperature=self.temperature, openai_api_key=settings.OPENAI_API_KEY, streaming=True, verbose=VERBOSE, callback_manager=CallbackManager([ChainStreamHandler(generator)]))\r\n            self.memory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True,  output_key='answer')\r\n            \r\n            self.chain = ConversationalRetrievalChain.from_llm(self.llm, chroma_Vectorstore.as_retriever(similarity_search_with_score=True),\r\n                                                                return_source_documents=True,verbose=VERBOSE, \r\n                                                                memory=self.memory)\r\n            \r\n            result = self.chain({\"question\": question})\r\n\r\n            res_dict = {\r\n                \"answer\": result[\"answer\"],\r\n            }\r\n\r\n            res_dict[\"source_documents\"] = []\r\n\r\n            for source in result[\"source_documents\"]:\r\n                res_dict[\"source_documents\"].append({\r\n                    \"page_content\": source.page_content,\r\n                    \"metadata\":  source.metadata\r\n                })\r\n\r\n            return res_dict\r\n\r\n        finally:\r\n            generator.close()\r\n```\r\n\r\nAnd the API route itself\r\n```\r\ndef stream(question, collection_id):\r\n    generator = ThreadedGenerator()\r\n    threading.Thread(target=thread_handler.askQuestion, args=(generator, collection_id, question)).start()\r\n    return generator\r\n\r\n@router.post(\"/collection/{collection_id}/ask_question\")\r\nasync def ask_question(collection_id: str, request: Request):\r\n    form_data = await request.form()\r\n    question = form_data[\"question\"]\r\n    return StreamingResponse(stream(question, collection_id), media_type='text/event-stream')\r\n```\r\n\r\nIn askQuestion function I am creating the res_dict object, which has answer and also source from metadata stored.\r\n\r\nHow can I also display the source after the answer is stopped being streamable? (I have source already in metadata)\r\n\r\n\r\nIs for this a better way to make separate API call, or are there some other practices or,..?\r\n\r\nThanks for everyone for advice!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5409/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5409/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5408",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5408/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5408/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5408/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5408",
        "id": 1730896797,
        "node_id": "PR_kwDOIPDwls5RnTIE",
        "number": 5408,
        "title": "DocumentLoader for GitHub",
        "user": {
            "login": "UmerHA",
            "id": 40663591,
            "node_id": "MDQ6VXNlcjQwNjYzNTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/40663591?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UmerHA",
            "html_url": "https://github.com/UmerHA",
            "followers_url": "https://api.github.com/users/UmerHA/followers",
            "following_url": "https://api.github.com/users/UmerHA/following{/other_user}",
            "gists_url": "https://api.github.com/users/UmerHA/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UmerHA/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UmerHA/subscriptions",
            "organizations_url": "https://api.github.com/users/UmerHA/orgs",
            "repos_url": "https://api.github.com/users/UmerHA/repos",
            "events_url": "https://api.github.com/users/UmerHA/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UmerHA/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-29T14:50:53Z",
        "updated_at": "2023-05-30T17:43:57Z",
        "closed_at": "2023-05-30T03:11:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5408",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5408",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5408.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5408.patch",
            "merged_at": "2023-05-30T03:11:21Z"
        },
        "body": "# Creates GitHubLoader (#5257)\r\n\r\nGitHubLoader is a DocumentLoader that loads issues and PRs from GitHub.\r\n\r\nFixes #5257\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\nDataLoaders\r\n- @eyurtsev\r\n\nTwitter: [@UmerHAdil](https://twitter.com/@UmerHAdil) | Discord: RicChilligerDude#7589",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5408/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5408/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5407",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5407/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5407/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5407/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5407",
        "id": 1730892645,
        "node_id": "PR_kwDOIPDwls5RnSPq",
        "number": 5407,
        "title": "bump version 184",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-29T14:47:13Z",
        "updated_at": "2023-05-29T14:53:33Z",
        "closed_at": "2023-05-29T14:53:32Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5407",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5407",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5407.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5407.patch",
            "merged_at": "2023-05-29T14:53:32Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5407/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5407/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5406",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5406/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5406/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5406/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5406",
        "id": 1730870403,
        "node_id": "PR_kwDOIPDwls5RnNZ3",
        "number": 5406,
        "title": "add idea of foreign_id to enable easier langchain-vector store intera\u2026",
        "user": {
            "login": "jeffchuber",
            "id": 891664,
            "node_id": "MDQ6VXNlcjg5MTY2NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/891664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffchuber",
            "html_url": "https://github.com/jeffchuber",
            "followers_url": "https://api.github.com/users/jeffchuber/followers",
            "following_url": "https://api.github.com/users/jeffchuber/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffchuber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffchuber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffchuber/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffchuber/orgs",
            "repos_url": "https://api.github.com/users/jeffchuber/repos",
            "events_url": "https://api.github.com/users/jeffchuber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffchuber/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-29T14:31:46Z",
        "updated_at": "2023-11-07T04:23:16Z",
        "closed_at": "2023-11-07T04:23:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5406",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5406",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5406.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5406.patch",
            "merged_at": null
        },
        "body": "@dev2049 @hwchase17 - what do you all think about add a `foreign_id` to `Document`. \r\n\r\nSee the test for Update included here is included to demonstrate why this is useful. \r\n\r\nIt enables users to pass lists of `Documents` to vector store operations like `update`, `delete`, etc and handle the location of those records correctly. \r\n\r\nThis is set up so that if the user sets the `foreign_id` before adding the records to the database, the database will use those `foreign_id`s as the ids. \r\n\r\n*** \r\n\r\nConcerns\r\n- the name `foreign_id` implies that it is not something the user should set, where the user setting it is valid.\r\n- if the user changes `foreign_id` after it has been passed to the database, the \"link\" will be lost. \r\n- I am not entirely familiar with the lifecycle of `Documents` inside LangChain and I don't know if this makes sense. \r\n\r\nThe alternative to adding a `foreign_id` would be to match on the `page_content` - but I think this is far worse.\r\n\r\n\r\n***\r\n\r\nI couldn't get tests to run locally. Perhaps someone can point me in the right direction.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5406/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5406/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5405",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5405/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5405/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5405/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5405",
        "id": 1730833554,
        "node_id": "PR_kwDOIPDwls5RnFNL",
        "number": 5405,
        "title": "Harrison/spark reader",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-29T14:10:40Z",
        "updated_at": "2023-05-30T17:08:28Z",
        "closed_at": "2023-05-30T03:23:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5405",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5405",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5405.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5405.patch",
            "merged_at": "2023-05-30T03:23:17Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5405/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5405/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5404",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5404/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5404/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5404/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5404",
        "id": 1730822526,
        "node_id": "PR_kwDOIPDwls5RnCux",
        "number": 5404,
        "title": "Harrison/prediction guard update",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-29T14:04:13Z",
        "updated_at": "2023-05-29T14:15:00Z",
        "closed_at": "2023-05-29T14:14:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5404",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5404",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5404.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5404.patch",
            "merged_at": "2023-05-29T14:14:59Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5404/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5404/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5403",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5403/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5403/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5403/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5403",
        "id": 1730809757,
        "node_id": "PR_kwDOIPDwls5Rm_39",
        "number": 5403,
        "title": "Harrison/deep infra",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-29T13:57:09Z",
        "updated_at": "2023-05-29T14:10:51Z",
        "closed_at": "2023-05-29T14:10:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5403",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5403",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5403.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5403.patch",
            "merged_at": "2023-05-29T14:10:50Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5403/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5403/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5402",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5402/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5402/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5402/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5402",
        "id": 1730783544,
        "node_id": "PR_kwDOIPDwls5Rm6JI",
        "number": 5402,
        "title": "Harrison/llamacpp",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-29T13:40:57Z",
        "updated_at": "2023-05-29T13:44:59Z",
        "closed_at": "2023-05-29T13:44:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5402",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5402",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5402.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5402.patch",
            "merged_at": "2023-05-29T13:44:58Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5402/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5402/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5401",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5401/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5401/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5401/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5401",
        "id": 1730769119,
        "node_id": "PR_kwDOIPDwls5Rm2-L",
        "number": 5401,
        "title": "Adds the option to pass the original prompt into the AgentExecutor for PlanAndExecute agents",
        "user": {
            "login": "nathan-az",
            "id": 42650258,
            "node_id": "MDQ6VXNlcjQyNjUwMjU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/42650258?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nathan-az",
            "html_url": "https://github.com/nathan-az",
            "followers_url": "https://api.github.com/users/nathan-az/followers",
            "following_url": "https://api.github.com/users/nathan-az/following{/other_user}",
            "gists_url": "https://api.github.com/users/nathan-az/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nathan-az/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nathan-az/subscriptions",
            "organizations_url": "https://api.github.com/users/nathan-az/orgs",
            "repos_url": "https://api.github.com/users/nathan-az/repos",
            "events_url": "https://api.github.com/users/nathan-az/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nathan-az/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-29T13:31:56Z",
        "updated_at": "2023-06-05T01:05:44Z",
        "closed_at": "2023-06-03T21:59:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5401",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5401",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5401.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5401.patch",
            "merged_at": "2023-06-03T21:59:10Z"
        },
        "body": "# Adds the option to pass the original prompt into the AgentExecutor for PlanAndExecute agents\r\n\r\nThis PR allows the user to optionally specify that they wish for the original prompt/objective to be passed into the Executor agent used by the PlanAndExecute agent. This solves a potential problem where the plan is formed referring to some context contained in the original prompt, but which is not included in the current prompt. \r\n\r\nCurrently, the prompt format given to the Executor is:\r\n```\r\nSystem: Respond to the human as helpfully and accurately as possible. You have access to the following tools:\r\n\r\n<Tool and Action Description>\r\n\r\n<Output Format Description>\r\n\r\nBegin! Reminder to ALWAYS respond with a valid json blob of a single action. Use tools if necessary. Respond directly if appropriate. Format is Action:```$JSON_BLOB```then Observation:.\r\nThought:\r\nHuman: <Previous steps>\r\n\r\n<Current step>\r\n```\r\n\r\nThis PR changes the final part after `Human:` to optionally insert the objective:\r\n```\r\nHuman: <objective>\r\n\r\n<Previous steps>\r\n\r\n<Current step>\r\n```\r\n\r\nI have given a specific example in #5400 where the context of a database path is lost, since the plan refers to the \"given path\".\r\n\r\nThe PR has been linted and formatted. So that existing behaviour is not changed, I have defaulted the argument to `False` and added it as the last argument in the signature, so it does not cause issues for any users passing args positionally as opposed to using keywords.\r\n\r\nHappy to take any feedback or make required changes! \r\n\r\nFixes #5400\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@vowelparrot ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5401/reactions",
            "total_count": 4,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 2,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5401/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]