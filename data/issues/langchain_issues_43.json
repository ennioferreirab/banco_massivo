[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10108",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10108/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10108/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10108/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10108",
        "id": 1877998418,
        "node_id": "PR_kwDOIPDwls5ZXrTl",
        "number": 10108,
        "title": "Bug-fix CSV Agent - Parsing Tool Inputs",
        "user": {
            "login": "juandiegobalbi",
            "id": 132379587,
            "node_id": "U_kgDOB-Pzww",
            "avatar_url": "https://avatars.githubusercontent.com/u/132379587?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juandiegobalbi",
            "html_url": "https://github.com/juandiegobalbi",
            "followers_url": "https://api.github.com/users/juandiegobalbi/followers",
            "following_url": "https://api.github.com/users/juandiegobalbi/following{/other_user}",
            "gists_url": "https://api.github.com/users/juandiegobalbi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juandiegobalbi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juandiegobalbi/subscriptions",
            "organizations_url": "https://api.github.com/users/juandiegobalbi/orgs",
            "repos_url": "https://api.github.com/users/juandiegobalbi/repos",
            "events_url": "https://api.github.com/users/juandiegobalbi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juandiegobalbi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-01T20:15:39Z",
        "updated_at": "2023-11-29T01:57:29Z",
        "closed_at": "2023-11-29T01:57:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10108",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10108",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10108.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10108.patch",
            "merged_at": null
        },
        "body": "Issue & Description:\r\nSuggested changes are due to encountering constant constant errors when using the Pandas DataFrame Agent due to parsing the python code that comes in the responses from the LLMs.\r\nTo address the issue I propose json serialization of the arguments of the function call at the OpenAIFunctionsAgent, as well as a more detailed ArgSchema for the PythonAstREPLTool, and finally an addition to the input query sanitize function, since i've noticed that more often than not, OpenAI's GPT-3.5-turbo make function calls but instead of sending the \"query\" param as a plan python code string, it tries to serialize it into some sort of \"{'query': 'python code snippet'}\" string, which is just not what we want.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10108/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10108/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10107",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10107/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10107/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10107/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10107",
        "id": 1877926816,
        "node_id": "PR_kwDOIPDwls5ZXb0y",
        "number": 10107,
        "title": "Bagatur/fix multiquery",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-01T19:05:22Z",
        "updated_at": "2023-09-04T07:33:25Z",
        "closed_at": "2023-09-04T07:33:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10107",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10107",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10107.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10107.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10107/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10107/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10106",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10106/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10106/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10106/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10106",
        "id": 1877924878,
        "node_id": "I_kwDOIPDwls5v7twO",
        "number": 10106,
        "title": "Using SQLDatabase with Llama 2 for snowflake connection, i get ProgramingError",
        "user": {
            "login": "adrinanou",
            "id": 113567395,
            "node_id": "U_kgDOBsTmow",
            "avatar_url": "https://avatars.githubusercontent.com/u/113567395?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adrinanou",
            "html_url": "https://github.com/adrinanou",
            "followers_url": "https://api.github.com/users/adrinanou/followers",
            "following_url": "https://api.github.com/users/adrinanou/following{/other_user}",
            "gists_url": "https://api.github.com/users/adrinanou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adrinanou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adrinanou/subscriptions",
            "organizations_url": "https://api.github.com/users/adrinanou/orgs",
            "repos_url": "https://api.github.com/users/adrinanou/repos",
            "events_url": "https://api.github.com/users/adrinanou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adrinanou/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-01T19:03:24Z",
        "updated_at": "2023-12-08T16:04:15Z",
        "closed_at": "2023-12-08T16:04:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain 0.0.277\r\nPython 3.9\r\n\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nfrom langchain.agents import create_sql_agent, initialize_agent, create_spark_sql_agent\r\nfrom langchain.agents.agent_toolkits import SQLDatabaseToolkit, SparkSQLToolkit\r\nfrom langchain.sql_database import SQLDatabase\r\nfrom langchain_experimental.sql.base import SQLDatabaseChain\r\nfrom langchain.llms import HuggingFacePipeline\r\nfrom langchain.agents import AgentExecutor\r\nfrom langchain.agents.agent_types import AgentType\r\nfrom langchain.chat_models import ChatOpenAI\r\n\r\nfrom snowflake.sqlalchemy import URL\r\nfrom sqlalchemy import create_engine\r\nfrom transformers import AutoTokenizer, AutoModelForCausalLM, pipeline\r\n\r\nmodel_id= \"Photolens/llama-2-13b-langchain-chat\"\r\nuser= \"***\"\r\npassword= \"***\"\r\naccount= \"**-**\"\r\ndatabase=\"**SNOWFLAKE_SAMPLE_DATA*\"\r\nschema=\"****\"\r\nwarehouse=\"***\"\r\ndef load_model():\r\n    model_id = \"Photolens/llama-2-13b-langchain-chat\"\r\n    tokenizer = AutoTokenizer.from_pretrained(model_id)\r\n\r\n    model = AutoModelForCausalLM.from_pretrained(model_id,\r\n                                               device_map='auto',\r\n                                               low_cpu_mem_usage=True,\r\n                                               trust_remote_code=True\r\n                                              )\r\n\r\n    pipe = pipeline(\r\n        \"text-generation\",\r\n        model=model,\r\n        tokenizer=tokenizer,\r\n        max_length=1100,\r\n        repetition_penalty=1.15,\r\n        top_p=0.95,\r\n        temperature=0.2,\r\n        pad_token_id=tokenizer.eos_token_id,\r\n        max_new_tokens=300\r\n    )\r\n\r\n    local_llm = HuggingFacePipeline(pipeline=pipe)\r\n\r\n    return local_llm\r\n\r\nLLM=load_model()\r\nengine = create_engine(URL(\r\n    user= \"***\",\r\n    password= \"****\",\r\n    account= \"**-**\",\r\n    database=\"**SNOWFLAKE_SAMPLE_DATA,\r\n    schema=\"***\",\r\n    warehouse=\"***\")\r\n)\r\ndb = SQLDatabase(engine)\r\n#here comes the problem, SQLDatabase makes a wrong query on Snowflake\r\n\r\n### Expected behavior\r\n\r\nI'm expecting to generate a connection with SQLDatabase, but it doesn't in fact makes a wrong query that i dont get it. I'm new at this so i would apreciate some help. \r\n\r\nThis is the error a i get:\r\n/home/zeusone/anaconda3/envs/snowflake_ai/bin/python /home/zeusone/Documents/ChatbotFalcon/SQLagent/snoflake_simple_agent.py\r\n/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/snowflake/connector/options.py:96: UserWarning: You have an incompatible version of 'pyarrow' installed (13.0.0), please install a version that adheres to: 'pyarrow<8.1.0,>=8.0.0; extra == \"pandas\"'\r\n  warn_incompatible_dep(\r\nLoading checkpoint shards: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 3/3 [00:15<00:00,  5.20s/it]\r\nTraceback (most recent call last):\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1910, in _execute_context\r\n    self.dialect.do_execute(\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 736, in do_execute\r\n    cursor.execute(statement, parameters)\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/snowflake/connector/cursor.py\", line 827, in execute\r\n    Error.errorhandler_wrapper(self.connection, self, error_class, errvalue)\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/snowflake/connector/errors.py\", line 275, in errorhandler_wrapper\r\n    handed_over = Error.hand_to_other_handler(\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/snowflake/connector/errors.py\", line 330, in hand_to_other_handler\r\n    cursor.errorhandler(connection, cursor, error_class, error_value)\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/snowflake/connector/errors.py\", line 209, in default_errorhandler\r\n    raise error_class(\r\nsnowflake.connector.errors.ProgrammingError: 001059 (22023): SQL compilation error:\r\nMust specify the full search path starting from database for SNOWFLAKE_SAMPLE_DATA\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/zeusone/Documents/ChatbotFalcon/SQLagent/snoflake_simple_agent.py\", line 56, in <module>\r\n    db = SQLDatabase(engine)#\"snowflake://ADRIANOCABRERA:Semilla_1@EKKFOPI-YK08475/SNOWFLAKE_SAMPLE_DATA/TPCH-SF1?warehouse=COMPUTE_WH\")\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/langchain/utilities/sql_database.py\", line 111, in __init__\r\n    self._metadata.reflect(\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 4901, in reflect\r\n    Table(name, self, **reflect_opts)\r\n  File \"<string>\", line 2, in __new__\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/util/deprecations.py\", line 375, in warned\r\n    return fn(*args, **kwargs)\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 619, in __new__\r\n    metadata._remove_table(name, schema)\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/util/langhelpers.py\", line 70, in __exit__\r\n    compat.raise_(\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 211, in raise_\r\n    raise exception\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 614, in __new__\r\n    table._init(name, metadata, *args, **kw)\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 689, in _init\r\n    self._autoload(\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/sql/schema.py\", line 724, in _autoload\r\n    conn_insp.reflect_table(\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 774, in reflect_table\r\n    for col_d in self.get_columns(\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 497, in get_columns\r\n    col_defs = self.dialect.get_columns(\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/snowflake/sqlalchemy/snowdialect.py\", line 669, in get_columns\r\n    schema_columns = self._get_schema_columns(connection, schema, **kw)\r\n  File \"<string>\", line 2, in _get_schema_columns\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\r\n    ret = fn(self, con, *args, **kw)\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/snowflake/sqlalchemy/snowdialect.py\", line 479, in _get_schema_columns\r\n    schema_primary_keys = self._get_schema_primary_keys(\r\n  File \"<string>\", line 2, in _get_schema_primary_keys\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/engine/reflection.py\", line 55, in cache\r\n    ret = fn(self, con, *args, **kw)\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/snowflake/sqlalchemy/snowdialect.py\", line 323, in _get_schema_primary_keys\r\n    result = connection.execute(\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1385, in execute\r\n    return meth(self, multiparams, params, _EMPTY_EXECUTION_OPTS)\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/sql/elements.py\", line 334, in _execute_on_connection\r\n    return connection._execute_clauseelement(\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1577, in _execute_clauseelement\r\n    ret = self._execute_context(\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1953, in _execute_context\r\n    self._handle_dbapi_exception(\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 2134, in _handle_dbapi_exception\r\n    util.raise_(\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/util/compat.py\", line 211, in raise_\r\n    raise exception\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/engine/base.py\", line 1910, in _execute_context\r\n    self.dialect.do_execute(\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/sqlalchemy/engine/default.py\", line 736, in do_execute\r\n    cursor.execute(statement, parameters)\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/snowflake/connector/cursor.py\", line 827, in execute\r\n    Error.errorhandler_wrapper(self.connection, self, error_class, errvalue)\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/snowflake/connector/errors.py\", line 275, in errorhandler_wrapper\r\n    handed_over = Error.hand_to_other_handler(\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/snowflake/connector/errors.py\", line 330, in hand_to_other_handler\r\n    cursor.errorhandler(connection, cursor, error_class, error_value)\r\n  File \"/home/zeusone/anaconda3/envs/snowflake_ai/lib/python3.9/site-packages/snowflake/connector/errors.py\", line 209, in default_errorhandler\r\n    raise error_class(\r\nsqlalchemy.exc.ProgrammingError: (snowflake.connector.errors.ProgrammingError) 001059 (22023): SQL compilation error:\r\nMust specify the full search path starting from database for SNOWFLAKE_SAMPLE_DATA\r\n[SQL: SHOW /* sqlalchemy:_get_schema_primary_keys */PRIMARY KEYS IN SCHEMA snowflake_sample_data]\r\n(Background on this error at: https://sqlalche.me/e/14/f405)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10106/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10106/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10105",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10105/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10105/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10105/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10105",
        "id": 1877848973,
        "node_id": "PR_kwDOIPDwls5ZXKre",
        "number": 10105,
        "title": "Automaton Variant 2",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-01T18:14:48Z",
        "updated_at": "2023-09-05T11:33:03Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10105",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10105",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10105.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10105.patch",
            "merged_at": null
        },
        "body": "Possible reformulation of agents\r\n\r\n## Key Changes\r\n\r\n1. Agents work with a [sequence of messages](https://github.com/langchain-ai/langchain/blob/29ddf63abb6a9aa67c589e2b127f7b890787f1f4/libs/langchain/langchain/automaton/typedefs.py#L79-L79) (or interface that allows fetching sequence of messages)\r\n2. The definition of messages is expanded to include the following [internal message](https://github.com/langchain-ai/langchain/blob/29ddf63abb6a9aa67c589e2b127f7b890787f1f4/libs/langchain/langchain/automaton/typedefs.py#L39-L39) types:\r\n   * FunctionCall: name, arguments\r\n   * FunctionResult: name, result, error \r\n     * This is distinct from OpenAI function message due to encoding of result\r\n   * AgentFinish (Maybe call Yield?)\r\n   * (Existing BaseMessage)\r\n   * PrimingMessage (?) Perhaps allow user to define custom internal messages?\r\n3. Agent implementation leverages a [generic single step chain](https://github.com/langchain-ai/langchain/blob/29ddf63abb6a9aa67c589e2b127f7b890787f1f4/libs/langchain/langchain/automaton/runnables.py#L47-L47) (aka LLMChain but memory is an input and uses a prompt generator)\r\n4. [A Prompt Generator](https://github.com/langchain-ai/langchain/blob/29ddf63abb6a9aa67c589e2b127f7b890787f1f4/libs/langchain/langchain/automaton/runnables.py#L49-L49) is used to bridge between generalized messages and llm prompt.\r\n\r\n## Goals\r\n\r\n* Agents should be able to access history (e.g., chat messages)\r\n* Agent should not take a lot of code to implement, but should be possible to fully customize\r\n* Ideally reduce amount of code a developer needs to understand (not fully featured to not fair comparison)\r\n\r\n## Examples\r\n\r\n* Implementation of [Think Act](https://github.com/langchain-ai/langchain/blob/29ddf63abb6a9aa67c589e2b127f7b890787f1f4/libs/langchain/langchain/automaton/think_act_agent.py#L202) includes *priming* with a string based LLM.\r\n* Structured chat using any [chat based LLM (Claude)](https://github.com/langchain-ai/langchain/blob/486d772184bcaffaaf92b5e2489a3985611c9bd4/libs/langchain/langchain/automaton/notebooks/chat_agent.ipynb)\r\n* See other notebooks\r\n\r\n## Things to note: \r\n\r\n[ChatAgent](https://github.com/langchain-ai/langchain/pull/10105/files#diff-701c2a1ff9f13203db7396c939e9f6a15e4aa0da4f5976cdbb5e8317170a13e8R95) and [OpenAIAgent](https://github.com/langchain-ai/langchain/pull/10105/files#diff-17bae31e03cb6f1b943fe8e4df906671f2223195e88fc4275dce8b0533de7746R60) only differ in the prompt, the prompt generator and the parser",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10105/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10105/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10104",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10104/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10104/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10104/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10104",
        "id": 1877838386,
        "node_id": "PR_kwDOIPDwls5ZXIZb",
        "number": 10104,
        "title": "Comprehend Moderation ver 0.1",
        "user": {
            "login": "iamwrick",
            "id": 82826381,
            "node_id": "MDQ6VXNlcjgyODI2Mzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/82826381?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iamwrick",
            "html_url": "https://github.com/iamwrick",
            "followers_url": "https://api.github.com/users/iamwrick/followers",
            "following_url": "https://api.github.com/users/iamwrick/following{/other_user}",
            "gists_url": "https://api.github.com/users/iamwrick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iamwrick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iamwrick/subscriptions",
            "organizations_url": "https://api.github.com/users/iamwrick/orgs",
            "repos_url": "https://api.github.com/users/iamwrick/repos",
            "events_url": "https://api.github.com/users/iamwrick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iamwrick/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-09-01T18:05:38Z",
        "updated_at": "2023-09-19T23:33:04Z",
        "closed_at": "2023-09-19T23:33:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10104",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10104",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10104.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10104.patch",
            "merged_at": null
        },
        "body": "This PR streamlines the #9665 configuration object and logic to enable chain moderation via the Amazon Comprehend service, allowing you to detect and redact PII, Toxic, and Intent information in the LLM prompt or answer.\r\nThis implementation simplifies the configuration and types it to specific class/model.\r\n\r\n### Usage sample\r\n\r\n```python\r\n\r\n\r\nfrom langchain_experimental.comprehend_moderation import (BaseModerationConfig, \r\n                                 ModerationIntentConfig, \r\n                                 ModerationPiiConfig, \r\n                                 ModerationToxicityConfig\r\n)\r\n\r\npii_config = ModerationPiiConfig(\r\n    labels=[\"SSN\"],\r\n    redact=True,\r\n    mask_character=\"X\"\r\n)\r\n\r\ntoxicity_config = ModerationToxicityConfig(\r\n    threshold=0.5\r\n)\r\n\r\nintent_config = ModerationIntentConfig(\r\n    threshold=0.5\r\n)\r\n\r\nmoderation_config = BaseModerationConfig(\r\n    filters=[pii_config, toxicity_config, intent_config]\r\n)\r\n\r\ncomp_moderation_with_config = AmazonComprehendModerationChain(\r\n    moderation_config=moderation_config, #specify the configuration\r\n    client=comprehend_client,            #optionally pass the Boto3 Client\r\n    verbose=True\r\n)\r\n\r\ntemplate = \"\"\"Question: {question}\r\n\r\nAnswer:\"\"\"\r\n\r\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\r\n\r\nresponses = [\r\n    \"Final Answer: A credit card number looks like 1289-2321-1123-2387. A fake SSN number looks like 323-22-9980. John Doe's phone number is (999)253-9876.\", \r\n    \"Final Answer: This is a really shitty way of constructing a birdhouse. This is fucking insane to think that any birds would actually create their motherfucking nests here.\"\r\n]\r\nllm = FakeListLLM(responses=responses)\r\n\r\nllm_chain = LLMChain(prompt=prompt, llm=llm)\r\n\r\nchain = ( \r\n    prompt \r\n    | comp_moderation_with_config \r\n    | {llm_chain.input_keys[0]: lambda x: x['output'] }  \r\n    | llm_chain \r\n    | { \"input\": lambda x: x['text'] } \r\n    | comp_moderation_with_config \r\n)\r\n\r\ntry:\r\n    response = chain.invoke({\"question\": \"A sample SSN number looks like this 123-456-7890. Can you give me some more samples?\"})\r\nexcept Exception as e:\r\n    print(str(e))\r\nelse:\r\n    print(response['output'])\r\n\r\n```\r\n\r\n### Output\r\n\r\n```python\r\n\r\n> Entering new AmazonComprehendModerationChain chain...\r\nRunning AmazonComprehendModerationChain...\r\nRunning pii Validation...\r\nRunning toxicity Validation...\r\nRunning intent Validation...\r\n\r\n> Finished chain.\r\n\r\n\r\n> Entering new AmazonComprehendModerationChain chain...\r\nRunning AmazonComprehendModerationChain...\r\nRunning pii Validation...\r\nRunning toxicity Validation...\r\nRunning intent Validation...\r\n\r\n> Finished chain.\r\nFinal Answer: A credit card number looks like 1289-2321-1123-2387. A fake SSN number looks like XXXXXXXXXXXX John Doe's phone number is (999)253-9876.\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10104/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10104/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10103",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10103/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10103/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10103/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10103",
        "id": 1877810169,
        "node_id": "PR_kwDOIPDwls5ZXCSR",
        "number": 10103,
        "title": "index rename delete_mode -> cleanup",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-01T17:41:24Z",
        "updated_at": "2023-09-01T18:12:11Z",
        "closed_at": "2023-09-01T18:12:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10103",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10103",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10103.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10103.patch",
            "merged_at": "2023-09-01T18:12:10Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10103/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10103/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10102",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10102/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10102/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10102/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10102",
        "id": 1877792499,
        "node_id": "PR_kwDOIPDwls5ZW-hT",
        "number": 10102,
        "title": "Bagatur/eden type 2",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-01T17:26:22Z",
        "updated_at": "2023-09-01T17:27:28Z",
        "closed_at": "2023-09-01T17:27:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10102",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10102",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10102.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10102.patch",
            "merged_at": "2023-09-01T17:27:27Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10102/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10102/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10101",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10101/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10101/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10101/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10101",
        "id": 1877781219,
        "node_id": "PR_kwDOIPDwls5ZW8Dx",
        "number": 10101,
        "title": "eden tool nb nit",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-01T17:16:32Z",
        "updated_at": "2023-09-01T17:16:45Z",
        "closed_at": "2023-09-01T17:16:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10101",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10101",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10101.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10101.patch",
            "merged_at": "2023-09-01T17:16:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10101/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10101/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10100",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10100/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10100/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10100/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10100",
        "id": 1877764117,
        "node_id": "I_kwDOIPDwls5v7GgV",
        "number": 10100,
        "title": "Issue: ConversationalChatAgent reduces the user question question to single word action_input when parsing",
        "user": {
            "login": "deepakagrawal",
            "id": 4365922,
            "node_id": "MDQ6VXNlcjQzNjU5MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4365922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deepakagrawal",
            "html_url": "https://github.com/deepakagrawal",
            "followers_url": "https://api.github.com/users/deepakagrawal/followers",
            "following_url": "https://api.github.com/users/deepakagrawal/following{/other_user}",
            "gists_url": "https://api.github.com/users/deepakagrawal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deepakagrawal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deepakagrawal/subscriptions",
            "organizations_url": "https://api.github.com/users/deepakagrawal/orgs",
            "repos_url": "https://api.github.com/users/deepakagrawal/repos",
            "events_url": "https://api.github.com/users/deepakagrawal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deepakagrawal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-01T17:01:58Z",
        "updated_at": "2023-12-08T16:04:20Z",
        "closed_at": "2023-12-08T16:04:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI have created an agent using ConversationalChatAgent which uses custom tools (CoversationRetrievalQA based) to answer users questions. When determining which tool to use the agent is sometimes stripping the question to single word. For example question  like `What is XYZ?` is reduced to \r\n\r\n```\r\n{\r\naction: tool_name,\r\naction_input: XYZ\r\n}\r\n```\r\n\r\nHow can I change the behavior to include full question in this scenario? \r\n\r\nexpected behavior \r\n\r\n```\r\n{\r\naction: tool_name,\r\naction_input: What is XYZ? or Define XYZ?\r\n}\r\n```\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10100/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10100/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10099",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10099/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10099/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10099/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10099",
        "id": 1877718213,
        "node_id": "I_kwDOIPDwls5v67TF",
        "number": 10099,
        "title": "Parsing intermediate steps: Object of type AgentAction is not JSON serializable",
        "user": {
            "login": "Tech-Netiums",
            "id": 56352612,
            "node_id": "MDQ6VXNlcjU2MzUyNjEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56352612?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Tech-Netiums",
            "html_url": "https://github.com/Tech-Netiums",
            "followers_url": "https://api.github.com/users/Tech-Netiums/followers",
            "following_url": "https://api.github.com/users/Tech-Netiums/following{/other_user}",
            "gists_url": "https://api.github.com/users/Tech-Netiums/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Tech-Netiums/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Tech-Netiums/subscriptions",
            "organizations_url": "https://api.github.com/users/Tech-Netiums/orgs",
            "repos_url": "https://api.github.com/users/Tech-Netiums/repos",
            "events_url": "https://api.github.com/users/Tech-Netiums/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Tech-Netiums/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-01T16:30:39Z",
        "updated_at": "2023-12-10T16:01:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\npython 3.9 langchain 0.0.250\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n\r\nFollow the steps in [Access Intermediate Steps](https://github.com/langchain-ai/langchain/blob/master/docs/extras/modules/agents/how_to/intermediate_steps.ipynb) within the Agent \"How To\".\r\n\r\nWhen converting the steps to json:\r\nprint(json.dumps(response[\"intermediate_steps\"], indent=2))\r\n\r\nThis raises the error:\r\nTypeError: Object of type AgentAction is not JSON serializable\r\n\r\n\r\n### Expected behavior\r\n\r\n\r\nThis issue is similar to the one raised in #8815. \r\nHowever the bot answer is not satisfying as using \r\n```\r\nfrom langchain.load.dump import dumps\r\n\r\nprint(dumps(response[\"intermediate_steps\"], pretty=True))\r\n```\r\nwill not serialize the `AgentAction`\r\n\r\nI can propose a `__json__()` function to correct this the lib json-fix or either inherit the class from dict",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10099/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10099/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10098",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10098/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10098/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10098/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10098",
        "id": 1877645602,
        "node_id": "PR_kwDOIPDwls5ZWeQ1",
        "number": 10098,
        "title": "bump 279",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-01T15:40:37Z",
        "updated_at": "2023-09-01T15:49:27Z",
        "closed_at": "2023-09-01T15:49:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10098",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10098",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10098.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10098.patch",
            "merged_at": "2023-09-01T15:49:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10098/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10098/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10097",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10097/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10097/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10097/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10097",
        "id": 1877614872,
        "node_id": "PR_kwDOIPDwls5ZWXrP",
        "number": 10097,
        "title": "Temporarily remove language selection",
        "user": {
            "login": "maks-operlejn-ds",
            "id": 142261444,
            "node_id": "U_kgDOCHq8xA",
            "avatar_url": "https://avatars.githubusercontent.com/u/142261444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maks-operlejn-ds",
            "html_url": "https://github.com/maks-operlejn-ds",
            "followers_url": "https://api.github.com/users/maks-operlejn-ds/followers",
            "following_url": "https://api.github.com/users/maks-operlejn-ds/following{/other_user}",
            "gists_url": "https://api.github.com/users/maks-operlejn-ds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maks-operlejn-ds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maks-operlejn-ds/subscriptions",
            "organizations_url": "https://api.github.com/users/maks-operlejn-ds/orgs",
            "repos_url": "https://api.github.com/users/maks-operlejn-ds/repos",
            "events_url": "https://api.github.com/users/maks-operlejn-ds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maks-operlejn-ds/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-01T15:19:05Z",
        "updated_at": "2023-09-01T18:32:31Z",
        "closed_at": "2023-09-01T18:30:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10097",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10097",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10097.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10097.patch",
            "merged_at": "2023-09-01T18:30:49Z"
        },
        "body": "Adapting Microsoft Presidio to other languages requires a bit more work, so for now it will be good idea to remove the language option to choose, so as not to cause errors and confusion.\r\nhttps://microsoft.github.io/presidio/analyzer/languages/\r\n\r\nI will handle different languages after the weekend :smile: ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10097/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10097/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10096",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10096/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10096/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10096/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10096",
        "id": 1877573429,
        "node_id": "PR_kwDOIPDwls5ZWOou",
        "number": 10096,
        "title": "Created an interface for user friendly usage of HuggingFaceInferenceA\u2026",
        "user": {
            "login": "J4e6eR",
            "id": 91129126,
            "node_id": "MDQ6VXNlcjkxMTI5MTI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/91129126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/J4e6eR",
            "html_url": "https://github.com/J4e6eR",
            "followers_url": "https://api.github.com/users/J4e6eR/followers",
            "following_url": "https://api.github.com/users/J4e6eR/following{/other_user}",
            "gists_url": "https://api.github.com/users/J4e6eR/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/J4e6eR/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/J4e6eR/subscriptions",
            "organizations_url": "https://api.github.com/users/J4e6eR/orgs",
            "repos_url": "https://api.github.com/users/J4e6eR/repos",
            "events_url": "https://api.github.com/users/J4e6eR/events{/privacy}",
            "received_events_url": "https://api.github.com/users/J4e6eR/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-01T14:51:55Z",
        "updated_at": "2023-09-03T21:05:53Z",
        "closed_at": "2023-09-03T21:05:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10096",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10096",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10096.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10096.patch",
            "merged_at": null
        },
        "body": "\u2026PI to run models over API rather than locally loading it. The interface uses ChromaDB implementation\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: Created an interface for user friendly usage of HuggingFaceInferenceAPI to run models over API rather than locally loading it. The interface uses ChromaDB implementation, \r\n  - Dependencies: Embeddings from ChromaDB namely HuggingFaceEmbeddings,\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10096/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10096/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10094",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10094/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10094/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10094/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10094",
        "id": 1877553024,
        "node_id": "PR_kwDOIPDwls5ZWKKj",
        "number": 10094,
        "title": "feat: Hugging Face Pipeline as a new Chat Model",
        "user": {
            "login": "eryk-dsai",
            "id": 142571618,
            "node_id": "U_kgDOCH94Yg",
            "avatar_url": "https://avatars.githubusercontent.com/u/142571618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eryk-dsai",
            "html_url": "https://github.com/eryk-dsai",
            "followers_url": "https://api.github.com/users/eryk-dsai/followers",
            "following_url": "https://api.github.com/users/eryk-dsai/following{/other_user}",
            "gists_url": "https://api.github.com/users/eryk-dsai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eryk-dsai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eryk-dsai/subscriptions",
            "organizations_url": "https://api.github.com/users/eryk-dsai/orgs",
            "repos_url": "https://api.github.com/users/eryk-dsai/repos",
            "events_url": "https://api.github.com/users/eryk-dsai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eryk-dsai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "jacoblee93",
            "id": 6952323,
            "node_id": "MDQ6VXNlcjY5NTIzMjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6952323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jacoblee93",
            "html_url": "https://github.com/jacoblee93",
            "followers_url": "https://api.github.com/users/jacoblee93/followers",
            "following_url": "https://api.github.com/users/jacoblee93/following{/other_user}",
            "gists_url": "https://api.github.com/users/jacoblee93/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jacoblee93/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jacoblee93/subscriptions",
            "organizations_url": "https://api.github.com/users/jacoblee93/orgs",
            "repos_url": "https://api.github.com/users/jacoblee93/repos",
            "events_url": "https://api.github.com/users/jacoblee93/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jacoblee93/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jacoblee93",
                "id": 6952323,
                "node_id": "MDQ6VXNlcjY5NTIzMjM=",
                "avatar_url": "https://avatars.githubusercontent.com/u/6952323?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jacoblee93",
                "html_url": "https://github.com/jacoblee93",
                "followers_url": "https://api.github.com/users/jacoblee93/followers",
                "following_url": "https://api.github.com/users/jacoblee93/following{/other_user}",
                "gists_url": "https://api.github.com/users/jacoblee93/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jacoblee93/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jacoblee93/subscriptions",
                "organizations_url": "https://api.github.com/users/jacoblee93/orgs",
                "repos_url": "https://api.github.com/users/jacoblee93/repos",
                "events_url": "https://api.github.com/users/jacoblee93/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jacoblee93/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-01T14:39:24Z",
        "updated_at": "2023-10-10T11:41:36Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10094",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10094",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10094.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10094.patch",
            "merged_at": null
        },
        "body": " ## Description:\r\n\r\nThis Pull Request adds **Hugging Face Pipeline** as a new LangChain Chat Model. \r\n\r\nIt effectively allows the user to use any instruction tuned model with LangChain's Chat interface with a newly added Chat Templates [link](https://huggingface.co/blog/chat-templates) [link](https://huggingface.co/docs/transformers/main/chat_templating)\r\n\r\nFor example, it is now possible to define the HF Pipeline with the `meta-llama/Llama-2-7b-chat-hf` model and [arbitrary QLoRA configuration](https://huggingface.co/blog/4bit-transformers-bitsandbytes) (as shown in the [example](https://github.com/deepsense-ai/langchain/blob/llama2-chat/docs/extras/integrations/chat/huggingface_llama2.ipynb)) and run it locally with LangChain on a GPU with less than 6GB of VRAM. \r\n\r\n@deepsense_ai",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10094/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10094/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10093",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10093/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10093/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10093/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10093",
        "id": 1877543592,
        "node_id": "PR_kwDOIPDwls5ZWIEI",
        "number": 10093,
        "title": "Data deanonymization",
        "user": {
            "login": "maks-operlejn-ds",
            "id": 142261444,
            "node_id": "U_kgDOCHq8xA",
            "avatar_url": "https://avatars.githubusercontent.com/u/142261444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maks-operlejn-ds",
            "html_url": "https://github.com/maks-operlejn-ds",
            "followers_url": "https://api.github.com/users/maks-operlejn-ds/followers",
            "following_url": "https://api.github.com/users/maks-operlejn-ds/following{/other_user}",
            "gists_url": "https://api.github.com/users/maks-operlejn-ds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maks-operlejn-ds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maks-operlejn-ds/subscriptions",
            "organizations_url": "https://api.github.com/users/maks-operlejn-ds/orgs",
            "repos_url": "https://api.github.com/users/maks-operlejn-ds/repos",
            "events_url": "https://api.github.com/users/maks-operlejn-ds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maks-operlejn-ds/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-01T14:34:34Z",
        "updated_at": "2023-09-07T04:33:25Z",
        "closed_at": "2023-09-07T04:33:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10093",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10093",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10093.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10093.patch",
            "merged_at": "2023-09-07T04:33:25Z"
        },
        "body": "### Description\r\n\r\nThe feature for pseudonymizing data with ability to retrieve original text (deanonymization) has been implemented. In order to protect private data, such as when querying external APIs (OpenAI), it is worth pseudonymizing sensitive data to maintain full privacy. But then, after the model response, it would be good to have the data in the original form.\r\n\r\nI implemented the `PresidioReversibleAnonymizer`, which consists of two parts:\r\n\r\n1. anonymization - it works the same way as `PresidioAnonymizer`, plus the object itself stores a mapping of made-up values to original ones, for example:\r\n```\r\n    {\r\n        \"PERSON\": {\r\n            \"<anonymized>\": \"<original>\",\r\n            \"John Doe\": \"Slim Shady\"\r\n        },\r\n        \"PHONE_NUMBER\": {\r\n            \"111-111-1111\": \"555-555-5555\"\r\n        }\r\n        ...\r\n    }\r\n```\r\n\r\n2. deanonymization - using the mapping described above, it matches fake data with original data and then substitutes it.\r\n\r\nBetween anonymization and deanonymization user can perform different operations, for example, passing the output to LLM.\r\n\r\n### Future works\r\n\r\n- **instance anonymization** - at this point, each occurrence of PII is treated as a separate entity and separately anonymized. Therefore, two occurrences of the name John Doe in the text will be changed to two different names. It is therefore worth introducing support for full instance detection, so that repeated occurrences are treated as a single object.\r\n- **better matching and substitution of fake values for real ones** - currently the strategy is based on matching full strings and then substituting them. Due to the indeterminism of language models, it may happen that the value in the answer is slightly changed (e.g. *John Doe* -> *John* or *Main St, New York* -> *New York*) and such a substitution is then no longer possible. Therefore, it is worth adjusting the matching for your needs.\r\n- **Q&A with anonymization** - when I'm done writing all the functionality, I thought it would be a cool resource in documentation to write a notebook about retrieval from documents using anonymization. An iterative process, adding new recognizers to fit the data, lessons learned and what to look out for\r\n\r\n### Twitter handle\r\n@deepsense_ai / @MaksOpp",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10093/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10093/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10092",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10092/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10092/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10092/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10092",
        "id": 1877270928,
        "node_id": "PR_kwDOIPDwls5ZVMY_",
        "number": 10092,
        "title": "HuggingGPT string inplace",
        "user": {
            "login": "Lucky-Lance",
            "id": 77819606,
            "node_id": "MDQ6VXNlcjc3ODE5NjA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/77819606?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lucky-Lance",
            "html_url": "https://github.com/Lucky-Lance",
            "followers_url": "https://api.github.com/users/Lucky-Lance/followers",
            "following_url": "https://api.github.com/users/Lucky-Lance/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lucky-Lance/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lucky-Lance/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lucky-Lance/subscriptions",
            "organizations_url": "https://api.github.com/users/Lucky-Lance/orgs",
            "repos_url": "https://api.github.com/users/Lucky-Lance/repos",
            "events_url": "https://api.github.com/users/Lucky-Lance/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lucky-Lance/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-01T11:42:12Z",
        "updated_at": "2023-09-03T21:09:25Z",
        "closed_at": "2023-09-03T21:09:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10092",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10092",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10092.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10092.patch",
            "merged_at": "2023-09-03T21:09:25Z"
        },
        "body": "Description: This bug is found when using HuggingGPT in LangChain. I found that if there are dependencies between tasks, the execution results will become very bad. I debugged the code and found that it is because the filename of the generated file is not updated to the args of the following task, mainly due to the \"replace()\" function in string operation (it is not an in-place operation). You should assign the replace result with the string to save the change.\r\n\r\nIssue: N/A\r\n\r\nDependencies: N/A",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10092/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10092/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10091",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10091/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10091/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10091/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10091",
        "id": 1877256103,
        "node_id": "PR_kwDOIPDwls5ZVJJE",
        "number": 10091,
        "title": "Takeoff baseurl support",
        "user": {
            "login": "hoyungcher",
            "id": 53276514,
            "node_id": "MDQ6VXNlcjUzMjc2NTE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/53276514?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hoyungcher",
            "html_url": "https://github.com/hoyungcher",
            "followers_url": "https://api.github.com/users/hoyungcher/followers",
            "following_url": "https://api.github.com/users/hoyungcher/following{/other_user}",
            "gists_url": "https://api.github.com/users/hoyungcher/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hoyungcher/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hoyungcher/subscriptions",
            "organizations_url": "https://api.github.com/users/hoyungcher/orgs",
            "repos_url": "https://api.github.com/users/hoyungcher/repos",
            "events_url": "https://api.github.com/users/hoyungcher/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hoyungcher/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-01T11:31:39Z",
        "updated_at": "2023-09-03T21:46:00Z",
        "closed_at": "2023-09-03T21:46:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10091",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10091",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10091.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10091.patch",
            "merged_at": "2023-09-03T21:46:00Z"
        },
        "body": "## Description\r\nThis PR introduces a minor change to the TitanTakeoff integration. \r\nInstead of specifying a port on localhost, this PR will allow users to specify a baseURL instead. This will allow users to use the integration if they have TitanTakeoff deployed externally (not on localhost). This removes the hardcoded reference to localhost \"http://localhost:{port}\".\r\n\r\n### Info about Titan Takeoff\r\nTitan Takeoff is an inference server created by [TitanML](https://www.titanml.co/) that allows you to deploy large language models locally on your hardware in a single command. Most generative model architectures are included, such as Falcon, Llama 2, GPT2, T5 and many more.\r\n\r\nRead more about Titan Takeoff here:\r\n- [Blog](https://medium.com/@TitanML/introducing-titan-takeoff-6c30e55a8e1e)\r\n- [Docs](https://docs.titanml.co/docs/titan-takeoff/getting-started)\r\n\r\n### Dependencies\r\nNo new dependencies are introduced. However, users will need to install the titan-iris package in their local environment and start the Titan Takeoff inferencing server in order to use the Titan Takeoff integration.\r\n\r\nThanks for your help and please let me know if you have any questions.\r\ncc: @hwchase17 @baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10091/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10091/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10090",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10090/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10090/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10090/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10090",
        "id": 1877196522,
        "node_id": "PR_kwDOIPDwls5ZU8J3",
        "number": 10090,
        "title": "Update output_parser.py",
        "user": {
            "login": "yubofeng",
            "id": 33345154,
            "node_id": "MDQ6VXNlcjMzMzQ1MTU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/33345154?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yubofeng",
            "html_url": "https://github.com/yubofeng",
            "followers_url": "https://api.github.com/users/yubofeng/followers",
            "following_url": "https://api.github.com/users/yubofeng/following{/other_user}",
            "gists_url": "https://api.github.com/users/yubofeng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yubofeng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yubofeng/subscriptions",
            "organizations_url": "https://api.github.com/users/yubofeng/orgs",
            "repos_url": "https://api.github.com/users/yubofeng/repos",
            "events_url": "https://api.github.com/users/yubofeng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yubofeng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-01T10:48:56Z",
        "updated_at": "2023-09-03T21:15:29Z",
        "closed_at": "2023-09-03T21:15:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10090",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10090",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10090.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10090.patch",
            "merged_at": null
        },
        "body": "I created a customLLM base on a llama2_70b online API service, used it for a text_to_sql mission.\r\nI  used the \"create_sql_agent\", it didn't work well. A piece of the logfile looks like this:\r\n\r\nAction: sql_db_schema\r\nAction Input: 'customers'\r\nObservation: Error: table_names {\"'customers'\"} not found in database\r\n\r\nIt seemed like the llama2_70b is more likely to use single quotes, probably some other llms too.\r\nI find out that the output_parser  in \"langchain\\agents\\mrkl\\output_parser.py\" strip the \" \" but not \"'\", strip them both should be a solution once for all. And it works for me.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10090/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10090/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10089",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10089/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10089/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10089/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10089",
        "id": 1877181409,
        "node_id": "I_kwDOIPDwls5v44Ph",
        "number": 10089,
        "title": "vector_db.similarity_search(request.query,k=2) Not working with the opensearch index",
        "user": {
            "login": "akash97715",
            "id": 34799343,
            "node_id": "MDQ6VXNlcjM0Nzk5MzQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/34799343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akash97715",
            "html_url": "https://github.com/akash97715",
            "followers_url": "https://api.github.com/users/akash97715/followers",
            "following_url": "https://api.github.com/users/akash97715/following{/other_user}",
            "gists_url": "https://api.github.com/users/akash97715/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akash97715/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akash97715/subscriptions",
            "organizations_url": "https://api.github.com/users/akash97715/orgs",
            "repos_url": "https://api.github.com/users/akash97715/repos",
            "events_url": "https://api.github.com/users/akash97715/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akash97715/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-09-01T10:37:55Z",
        "updated_at": "2023-12-11T16:05:23Z",
        "closed_at": "2023-12-11T16:05:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI have 2000 document present at my opensearch index, i have filter out the 2 documents present from this opensearch index and added to newly created index. After that i am trying to use vector_db.similarity_search(request.query,k=2) on the newly created index, its returning me empty list. \r\nbelow are the code\r\n\r\nCode for index creation:\r\nupdated_mapping = {\"mappings\":{\"properties\": {\"vector_field\": {\"type\": \"knn_vector\",\"dimension\": 1536,\"method\": {\"engine\": \"nmslib\",\"space_type\": \"l2\",\"name\": \"hnsw\",\"parameters\": {\"ef_construction\": 512,\"m\": 16}}}}}}\r\nopensearch_client.indices.create(index=\"temp_check878999\", body=updated_mapping)\r\n\r\n\r\nCode to update the index with filtered document:\r\nsea=[\"1460210.pdf\",'P-Reality-X Manuscript_Draft 1_17Feb22 (PAL1144).pdf']\r\nfor i in sea:\r\n    query={\"query\":{\r\n          \"match\":{\r\n              \"metadata.filename\":f\"*{i}\"\r\n          }\r\n      }}\r\n    print(query)\r\n    rest=opensearch_client.search(index=\"lang_demo\",body=query)\r\n    create=rest['hits']['hits']\r\n    for hit in create:\r\n        sr=hit['_source']\r\n        doc_id=hit['_id']\r\n\r\n        opensearch_client.index(index=\"temp_check878999\",id=doc_id,body=sr)\r\n\r\nLangchain simillarity search code i am using on newly created index\r\nfrom langchain.vectorstores import OpenSearchVectorSearch\r\nvector_db = OpenSearchVectorSearch(\r\n            index_name=\"temp_check878999\",\r\n            embedding_function=embed_wrapper(engine=\"text-embedding-ada-002\"),\r\n            opensearch_url=*****,\r\n            http_auth=(******, *****),\r\n            is_aoss=False,\r\n        )\r\nvector_db.similarity_search(\"star\",k=2)\r\n\r\nQuick reply will be very much helpful\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nNo idea\n\n### Expected behavior\n\nIt should return me the simmilarity search text with newly created index. Please note its working fine on the index where i had used vector_db.addtext(text). This issue is if i create the new open search index with opensearch client then on that index the simmilarity search one is not working.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10089/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10089/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10088",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10088/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10088/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10088/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10088",
        "id": 1877113181,
        "node_id": "I_kwDOIPDwls5v4nld",
        "number": 10088,
        "title": "autonomous_agents : poetry run mypy . with experimental fails with langchain version 0.0.278",
        "user": {
            "login": "pprados",
            "id": 204694,
            "node_id": "MDQ6VXNlcjIwNDY5NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/204694?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pprados",
            "html_url": "https://github.com/pprados",
            "followers_url": "https://api.github.com/users/pprados/followers",
            "following_url": "https://api.github.com/users/pprados/following{/other_user}",
            "gists_url": "https://api.github.com/users/pprados/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pprados/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pprados/subscriptions",
            "organizations_url": "https://api.github.com/users/pprados/orgs",
            "repos_url": "https://api.github.com/users/pprados/repos",
            "events_url": "https://api.github.com/users/pprados/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pprados/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-01T09:51:26Z",
        "updated_at": "2023-09-19T08:28:37Z",
        "closed_at": "2023-09-19T08:28:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain 0.0.278.\r\n\r\nI try to publish a pull request in the project experimental. I must update the dependencies of langchain, but I receive a lot of errors.\r\nSee [here](https://github.com/langchain-ai/langchain/actions/runs/6047844508/job/16412056269?pr=7278), outside of my code.\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nIn the libs/experimental/pyproject.toml, change:\r\nlangchain = \">=0.0.278\"\r\n\r\nthen\r\n\r\n     poetry run mypy .\n\n### Expected behavior\n\nNo error",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10088/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10088/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10087",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10087/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10087/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10087/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10087",
        "id": 1877040545,
        "node_id": "PR_kwDOIPDwls5ZUaQ1",
        "number": 10087,
        "title": "fix 'Event loop is closed' error",
        "user": {
            "login": "jxyer",
            "id": 49470136,
            "node_id": "MDQ6VXNlcjQ5NDcwMTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/49470136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jxyer",
            "html_url": "https://github.com/jxyer",
            "followers_url": "https://api.github.com/users/jxyer/followers",
            "following_url": "https://api.github.com/users/jxyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jxyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jxyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jxyer/subscriptions",
            "organizations_url": "https://api.github.com/users/jxyer/orgs",
            "repos_url": "https://api.github.com/users/jxyer/repos",
            "events_url": "https://api.github.com/users/jxyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jxyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nfcampos",
                "id": 56902,
                "node_id": "MDQ6VXNlcjU2OTAy",
                "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nfcampos",
                "html_url": "https://github.com/nfcampos",
                "followers_url": "https://api.github.com/users/nfcampos/followers",
                "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
                "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
                "organizations_url": "https://api.github.com/users/nfcampos/orgs",
                "repos_url": "https://api.github.com/users/nfcampos/repos",
                "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nfcampos/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-01T09:04:20Z",
        "updated_at": "2023-09-04T07:47:27Z",
        "closed_at": "2023-09-04T07:18:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10087",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10087",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10087.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10087.patch",
            "merged_at": null
        },
        "body": "  - Description: `asyncio.run()` will automatically close the event loop and trigger an error when calling `_ProactorBasePipeTransport.__del__`, whereas `asyncio.run_until_complete()` will not.\r\n  - Issue: #10086 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10087/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10087/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10086",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10086/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10086/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10086/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10086",
        "id": 1876993301,
        "node_id": "I_kwDOIPDwls5v4KUV",
        "number": 10086,
        "title": "When I call the 'loader()' function of AsyncHtmlLoader, I receive an 'Event loop is closed' error after it completes execution.",
        "user": {
            "login": "jxyer",
            "id": 49470136,
            "node_id": "MDQ6VXNlcjQ5NDcwMTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/49470136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jxyer",
            "html_url": "https://github.com/jxyer",
            "followers_url": "https://api.github.com/users/jxyer/followers",
            "following_url": "https://api.github.com/users/jxyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jxyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jxyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jxyer/subscriptions",
            "organizations_url": "https://api.github.com/users/jxyer/orgs",
            "repos_url": "https://api.github.com/users/jxyer/repos",
            "events_url": "https://api.github.com/users/jxyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jxyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-01T08:31:58Z",
        "updated_at": "2023-12-08T16:04:30Z",
        "closed_at": "2023-12-08T16:04:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain: 0.0.278\r\npython: 3.10\r\nwindows10\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI wrote with reference to[ this link](https://python.langchain.com/docs/use_cases/web_scraping#asynchtmlloader), and the code is as follows: \r\n```python\r\nfrom langchain.document_loaders import `AsyncHtmlLoader`\r\n\r\nurls = ['https://python.langchain.com/docs/use_cases/web_scraping#asynchtmlloader']\r\nloader = AsyncHtmlLoader(urls)\r\ndoc = loader.load()\r\nprint(doc)\r\n```\r\nReturn the following error after running:\r\n```\r\nException ignored in: <function _ProactorBasePipeTransport.__del__ at 0x0000023EFFD45900>\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\97994\\AppData\\Local\\Programs\\Python\\Python310\\lib\\asyncio\\proactor_events.py\", line 116, in __del__\r\n    self.close()\r\n  File \"C:\\Users\\97994\\AppData\\Local\\Programs\\Python\\Python310\\lib\\asyncio\\proactor_events.py\", line 108, in close\r\n    self._loop.call_soon(self._call_connection_lost, None)\r\n  File \"C:\\Users\\97994\\AppData\\Local\\Programs\\Python\\Python310\\lib\\asyncio\\base_events.py\", line 750, in call_soon\r\n    self._check_closed()\r\n  File \"C:\\Users\\97994\\AppData\\Local\\Programs\\Python\\Python310\\lib\\asyncio\\base_events.py\", line 515, in _check_closed\r\n    raise RuntimeError('Event loop is closed')\r\nRuntimeError: Event loop is closed\r\n```\r\n\r\n### Expected behavior\r\n\r\nNone",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10086/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10086/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10085",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10085/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10085/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10085/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10085",
        "id": 1876967752,
        "node_id": "I_kwDOIPDwls5v4EFI",
        "number": 10085,
        "title": "Text splitting with keep_separator is True still removes any whitespace, even if separator is whitespace",
        "user": {
            "login": "jamesw6811",
            "id": 2816551,
            "node_id": "MDQ6VXNlcjI4MTY1NTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2816551?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesw6811",
            "html_url": "https://github.com/jamesw6811",
            "followers_url": "https://api.github.com/users/jamesw6811/followers",
            "following_url": "https://api.github.com/users/jamesw6811/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesw6811/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesw6811/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesw6811/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesw6811/orgs",
            "repos_url": "https://api.github.com/users/jamesw6811/repos",
            "events_url": "https://api.github.com/users/jamesw6811/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesw6811/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-01T08:14:34Z",
        "updated_at": "2023-09-08T02:01:40Z",
        "closed_at": "2023-09-08T02:01:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "```\r\ntext = \"foo _bar_ baz_ 123\"\r\nseparator = \"_\"\r\n\r\ntext_splitter = CharacterTextSplitter(\r\n    chunk_size=4,\r\n    chunk_overlap=0,\r\n    separator=\"_\",\r\n    keep_separator=True,\r\n)\r\n\r\nprint(text_splitter.split_text(text))\r\n```\r\nRETURNS:\r\n`['foo', '_bar', '_ baz', '_ 123']`\r\nEXPECTED:\r\n`['foo ', '_bar', '_ baz', '_ 123']`\r\n\r\n^see whitespace next to `foo`\r\n\r\nhttps://github.com/langchain-ai/langchain/blame/324c86acd5be9bc9d5b6dd248d686bdbb2c11cdc/libs/langchain/langchain/text_splitter.py#L155 removes all whitespace from the text. I can't figure out the purpose of this line.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10085/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10085/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10083",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10083/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10083/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10083/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10083",
        "id": 1876934535,
        "node_id": "PR_kwDOIPDwls5ZUDJ1",
        "number": 10083,
        "title": "Added code to allow handle_parsing_error to pass into the AgentExecutor",
        "user": {
            "login": "limgw1",
            "id": 60544264,
            "node_id": "MDQ6VXNlcjYwNTQ0MjY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/60544264?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/limgw1",
            "html_url": "https://github.com/limgw1",
            "followers_url": "https://api.github.com/users/limgw1/followers",
            "following_url": "https://api.github.com/users/limgw1/following{/other_user}",
            "gists_url": "https://api.github.com/users/limgw1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/limgw1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/limgw1/subscriptions",
            "organizations_url": "https://api.github.com/users/limgw1/orgs",
            "repos_url": "https://api.github.com/users/limgw1/repos",
            "events_url": "https://api.github.com/users/limgw1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/limgw1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-01T07:54:01Z",
        "updated_at": "2023-09-03T23:10:07Z",
        "closed_at": "2023-09-03T21:30:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10083",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10083",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10083.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10083.patch",
            "merged_at": null
        },
        "body": "  - Description: Fixed an issue with `create_pandas_dataframe_agent` where the `handle_parsing_variable` passed in does not get passed to the AgentExecutor, resulting in no difference in parsing error handling regardless of what value the variable had.\r\n  - Issue: the issue #10045\r\n  - Dependencies: No new dependencies\r\n  - Tag maintainer: @baskaryan \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10083/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10083/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10082",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10082/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10082/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10082/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10082",
        "id": 1876932057,
        "node_id": "I_kwDOIPDwls5v37XZ",
        "number": 10082,
        "title": "Issue: chroma retriever where_document parameter passed in search_kwargs is invalid",
        "user": {
            "login": "PTTrazavi",
            "id": 53891374,
            "node_id": "MDQ6VXNlcjUzODkxMzc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/53891374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PTTrazavi",
            "html_url": "https://github.com/PTTrazavi",
            "followers_url": "https://api.github.com/users/PTTrazavi/followers",
            "following_url": "https://api.github.com/users/PTTrazavi/following{/other_user}",
            "gists_url": "https://api.github.com/users/PTTrazavi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PTTrazavi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PTTrazavi/subscriptions",
            "organizations_url": "https://api.github.com/users/PTTrazavi/orgs",
            "repos_url": "https://api.github.com/users/PTTrazavi/repos",
            "events_url": "https://api.github.com/users/PTTrazavi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PTTrazavi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-01T07:52:13Z",
        "updated_at": "2023-12-05T10:01:12Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am using chroma db as retriever in ConversationalRetrievalChain, but the parameter \"where_document\" does not work.\r\n```python\r\nsearch_kwargs = {\r\n    \"k\": k,\r\n    \"filter\": filter,\r\n    \"where_document\": {\"$contains\": \"1000001\"}\r\n}\r\nretriever = vectordb.as_retriever(\r\n    search_kwargs=search_kwargs\r\n)\r\n```\r\nIn chroma official site [chroma](https://docs.trychroma.com/usage-guide), it says: \r\nChroma supports filtering queries by metadata and document contents. The where filter is used to filter by metadata, and the where_document filter is used to filter by document contents.\n\n### Suggestion:\n\ncan ConversationalRetrievalChain support where_document filter for chroma db?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10082/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10082/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10081",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10081/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10081/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10081/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10081",
        "id": 1876929360,
        "node_id": "I_kwDOIPDwls5v36tQ",
        "number": 10081,
        "title": "Vectara query a already uploaded Corpus ",
        "user": {
            "login": "UglyStupidHonest",
            "id": 68284461,
            "node_id": "MDQ6VXNlcjY4Mjg0NDYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/68284461?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UglyStupidHonest",
            "html_url": "https://github.com/UglyStupidHonest",
            "followers_url": "https://api.github.com/users/UglyStupidHonest/followers",
            "following_url": "https://api.github.com/users/UglyStupidHonest/following{/other_user}",
            "gists_url": "https://api.github.com/users/UglyStupidHonest/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UglyStupidHonest/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UglyStupidHonest/subscriptions",
            "organizations_url": "https://api.github.com/users/UglyStupidHonest/orgs",
            "repos_url": "https://api.github.com/users/UglyStupidHonest/repos",
            "events_url": "https://api.github.com/users/UglyStupidHonest/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UglyStupidHonest/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-01T07:50:13Z",
        "updated_at": "2023-12-08T16:04:35Z",
        "closed_at": "2023-12-08T16:04:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI have uploaded my files to Vectara and would love to query the corpus now with langchain. However I can only find examples of how to upload documents and then directly query them. I would like to avoid uploading the documents all the time and just straight query the existing corpus . Is this possible ?\r\n\r\nThank you so much! \r\n\r\nRegards \n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10081/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10081/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10080",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10080/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10080/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10080/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10080",
        "id": 1876911576,
        "node_id": "I_kwDOIPDwls5v32XY",
        "number": 10080,
        "title": "StructuredTool ainvoke isn't await parent class ainvoke",
        "user": {
            "login": "Toubat",
            "id": 57741529,
            "node_id": "MDQ6VXNlcjU3NzQxNTI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/57741529?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Toubat",
            "html_url": "https://github.com/Toubat",
            "followers_url": "https://api.github.com/users/Toubat/followers",
            "following_url": "https://api.github.com/users/Toubat/following{/other_user}",
            "gists_url": "https://api.github.com/users/Toubat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Toubat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Toubat/subscriptions",
            "organizations_url": "https://api.github.com/users/Toubat/orgs",
            "repos_url": "https://api.github.com/users/Toubat/repos",
            "events_url": "https://api.github.com/users/Toubat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Toubat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-01T07:36:50Z",
        "updated_at": "2023-09-08T02:54:54Z",
        "closed_at": "2023-09-08T02:54:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "[code pointer](https://github.com/langchain-ai/langchain/blob/74fcfed4e2bdd186c2869a07008175a9b66b1ed4/libs/langchain/langchain/tools/base.py#L588C16-L588C16)\r\n\r\nIn `langchain.tools.base`, change \r\n```python\r\nClass StructuredTool(BaseTool):\r\n    \"\"\"Tool that can operate on any number of inputs.\"\"\"\r\n\r\n    description: str = \"\"\r\n    args_schema: Type[BaseModel] = Field(..., description=\"The tool schema.\")\r\n    \"\"\"The input arguments' schema.\"\"\"\r\n    func: Optional[Callable[..., Any]]\r\n    \"\"\"The function to run when the tool is called.\"\"\"\r\n    coroutine: Optional[Callable[..., Awaitable[Any]]] = None\r\n    \"\"\"The asynchronous version of the function.\"\"\"\r\n\r\n    # --- Runnable ---\r\n\r\n    async def ainvoke(\r\n        self,\r\n        input: Union[str, Dict],\r\n        config: Optional[RunnableConfig] = None,\r\n        **kwargs: Any,\r\n    ) -> Any:\r\n        if not self.coroutine:\r\n            # If the tool does not implement async, fall back to default implementation\r\n            return await asyncio.get_running_loop().run_in_executor(\r\n                None, partial(self.invoke, input, config, **kwargs)\r\n            )\r\n\r\n        return super().ainvoke(input, config, **kwargs)\r\n```\r\n\r\nto \r\n\r\n```python\r\nClass StructuredTool(BaseTool):\r\n    \"\"\"Tool that can operate on any number of inputs.\"\"\"\r\n\r\n    description: str = \"\"\r\n    args_schema: Type[BaseModel] = Field(..., description=\"The tool schema.\")\r\n    \"\"\"The input arguments' schema.\"\"\"\r\n    func: Optional[Callable[..., Any]]\r\n    \"\"\"The function to run when the tool is called.\"\"\"\r\n    coroutine: Optional[Callable[..., Awaitable[Any]]] = None\r\n    \"\"\"The asynchronous version of the function.\"\"\"\r\n\r\n    # --- Runnable ---\r\n\r\n    async def ainvoke(\r\n        self,\r\n        input: Union[str, Dict],\r\n        config: Optional[RunnableConfig] = None,\r\n        **kwargs: Any,\r\n    ) -> Any:\r\n        if not self.coroutine:\r\n            # If the tool does not implement async, fall back to default implementation\r\n            return await asyncio.get_running_loop().run_in_executor(\r\n                None, partial(self.invoke, input, config, **kwargs)\r\n            )\r\n\r\n        return await super().ainvoke(input, config, **kwargs)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10080/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10080/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10079",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10079/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10079/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10079/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10079",
        "id": 1876788507,
        "node_id": "I_kwDOIPDwls5v3YUb",
        "number": 10079,
        "title": "how to use PythonREPL tool to  take dataframe and query",
        "user": {
            "login": "bmshambu",
            "id": 46180328,
            "node_id": "MDQ6VXNlcjQ2MTgwMzI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/46180328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmshambu",
            "html_url": "https://github.com/bmshambu",
            "followers_url": "https://api.github.com/users/bmshambu/followers",
            "following_url": "https://api.github.com/users/bmshambu/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmshambu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmshambu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmshambu/subscriptions",
            "organizations_url": "https://api.github.com/users/bmshambu/orgs",
            "repos_url": "https://api.github.com/users/bmshambu/repos",
            "events_url": "https://api.github.com/users/bmshambu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmshambu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-01T05:51:51Z",
        "updated_at": "2023-12-08T16:04:40Z",
        "closed_at": "2023-12-08T16:04:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI need to use Python REPL tool to take data frame and user query and answer based on the data frame.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10079/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10079/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10078",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10078/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10078/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10078/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10078",
        "id": 1876763580,
        "node_id": "I_kwDOIPDwls5v3SO8",
        "number": 10078,
        "title": "ConversationTokenBufferMemory and ConversationSummaryBufferMemory does not work with db-backed histories",
        "user": {
            "login": "erunistic",
            "id": 13029499,
            "node_id": "MDQ6VXNlcjEzMDI5NDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13029499?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/erunistic",
            "html_url": "https://github.com/erunistic",
            "followers_url": "https://api.github.com/users/erunistic/followers",
            "following_url": "https://api.github.com/users/erunistic/following{/other_user}",
            "gists_url": "https://api.github.com/users/erunistic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/erunistic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/erunistic/subscriptions",
            "organizations_url": "https://api.github.com/users/erunistic/orgs",
            "repos_url": "https://api.github.com/users/erunistic/repos",
            "events_url": "https://api.github.com/users/erunistic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/erunistic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-01T05:28:56Z",
        "updated_at": "2023-10-09T11:56:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nthe memories are pruned after saving using .pop(0). However, db-backed histories read messages and copies into list each turn. This makes it so that the actual db does not change at every turn, and so max_token_limit parameter gets ignored and the memory prints out the entire conversation for history.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [X] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nInitialize redis chat history\r\nuse redis chat history as chat_history for ConversationSummaryBufferMemory\r\nset max_token_limit to 1.\r\nPrint history at every turn.\r\nStill prints the entire history\n\n### Expected behavior\n\nInitialize redis chat history\r\nuse redis chat history as chat_history for ConversationSummaryBufferMemory\r\nset max_token_limit to 1.\r\nPrint history at every turn.\r\nPrint nothing since max_token_limit = 0",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10078/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10078/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10077",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10077/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10077/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10077/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10077",
        "id": 1876736736,
        "node_id": "I_kwDOIPDwls5v3Lrg",
        "number": 10077,
        "title": "ElasticSearch authentication",
        "user": {
            "login": "Lishenga",
            "id": 33782195,
            "node_id": "MDQ6VXNlcjMzNzgyMTk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/33782195?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lishenga",
            "html_url": "https://github.com/Lishenga",
            "followers_url": "https://api.github.com/users/Lishenga/followers",
            "following_url": "https://api.github.com/users/Lishenga/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lishenga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lishenga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lishenga/subscriptions",
            "organizations_url": "https://api.github.com/users/Lishenga/orgs",
            "repos_url": "https://api.github.com/users/Lishenga/repos",
            "events_url": "https://api.github.com/users/Lishenga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lishenga/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-01T05:07:53Z",
        "updated_at": "2023-12-08T16:04:45Z",
        "closed_at": "2023-12-08T16:04:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nOn the elasticsearch authentication, you have implemented it this way on the elasticsearch.py file found in the vectorstores folder\r\n\r\n```py\r\nif api_key:\r\n            connection_params[\"api_key\"] = api_key\r\n        elif username and password:\r\n            connection_params[\"basic_auth\"] = (username, password)\r\n```\r\n\r\nbut i think it should be this way \r\n```py\r\nif api_key:\r\n            connection_params[\"api_key\"] = api_key\r\n        elif username and password:\r\n            connection_params[\"http_auth\"] = (username, password)\r\n```\r\n\r\nwith that change the authentication succeeeds. What i have just changed is this connection_params[\"basic_auth\"] = (username, password) to this connection_params[\"http_auth\"] = (username, password)\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nCreate an elasticsearch instance on an EC2 instance using docker that has SSL and also uses username and password and then try to authenticate to that elasticsearch instance using langchain you will see the error\n\n### Expected behavior\n\nThe expected behavior is successfull authentication",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10077/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10077/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10076",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10076/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10076/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10076/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10076",
        "id": 1876599890,
        "node_id": "PR_kwDOIPDwls5ZS7mW",
        "number": 10076,
        "title": "fix typo in web_research.py",
        "user": {
            "login": "jmhayes3",
            "id": 22490346,
            "node_id": "MDQ6VXNlcjIyNDkwMzQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/22490346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jmhayes3",
            "html_url": "https://github.com/jmhayes3",
            "followers_url": "https://api.github.com/users/jmhayes3/followers",
            "following_url": "https://api.github.com/users/jmhayes3/following{/other_user}",
            "gists_url": "https://api.github.com/users/jmhayes3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jmhayes3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jmhayes3/subscriptions",
            "organizations_url": "https://api.github.com/users/jmhayes3/orgs",
            "repos_url": "https://api.github.com/users/jmhayes3/repos",
            "events_url": "https://api.github.com/users/jmhayes3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jmhayes3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-01T02:14:23Z",
        "updated_at": "2023-09-01T05:19:04Z",
        "closed_at": "2023-09-01T05:19:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10076",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10076",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10076.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10076.patch",
            "merged_at": "2023-09-01T05:19:04Z"
        },
        "body": "fix spelling\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10076/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10076/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10074",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10074/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10074/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10074/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10074",
        "id": 1876514876,
        "node_id": "PR_kwDOIPDwls5ZSooQ",
        "number": 10074,
        "title": "use case docs reorder",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-01T01:02:35Z",
        "updated_at": "2023-09-05T22:11:18Z",
        "closed_at": "2023-09-05T22:11:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10074",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10074",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10074.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10074.patch",
            "merged_at": "2023-09-05T22:11:16Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10074/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10074/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10073",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10073/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10073/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10073/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10073",
        "id": 1876503478,
        "node_id": "PR_kwDOIPDwls5ZSmBh",
        "number": 10073,
        "title": "Mv LCEL docs up a level",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-01T00:55:34Z",
        "updated_at": "2023-09-01T15:20:56Z",
        "closed_at": "2023-09-01T15:20:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10073",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10073",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10073.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10073.patch",
            "merged_at": "2023-09-01T15:20:55Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10073/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10073/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10072",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10072/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10072/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10072/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10072",
        "id": 1876474014,
        "node_id": "I_kwDOIPDwls5v2Lie",
        "number": 10072,
        "title": "Receiving a unclear KeyError: 'error' when using Langchain HuggingFaceTextInference on Runpod GPU",
        "user": {
            "login": "axiom9",
            "id": 88858159,
            "node_id": "MDQ6VXNlcjg4ODU4MTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/88858159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axiom9",
            "html_url": "https://github.com/axiom9",
            "followers_url": "https://api.github.com/users/axiom9/followers",
            "following_url": "https://api.github.com/users/axiom9/following{/other_user}",
            "gists_url": "https://api.github.com/users/axiom9/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axiom9/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axiom9/subscriptions",
            "organizations_url": "https://api.github.com/users/axiom9/orgs",
            "repos_url": "https://api.github.com/users/axiom9/repos",
            "events_url": "https://api.github.com/users/axiom9/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axiom9/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-01T00:24:57Z",
        "updated_at": "2023-12-08T16:04:50Z",
        "closed_at": "2023-12-08T16:04:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain version: `0.0278`\r\nPython: `3.10`\r\nRunpod version: `1.2.0`\r\n\r\nI'm experiencing some issues when running Runpod (TGI gpu cloud) and langchain, primarily when I try to run the chain.\r\nFor reference, I'm using TheBloke/VicUnlocked-30B-LoRA-GPTQ model in TGI on Runpod A4500 GPU cloud.\r\nI initialize the pod from the UI and connect to it with the runpod-python library (version 1.2.0) in my python 3.10 environment. \r\nMy prompt template is as follows:\r\n```\r\nprompt = PromptTemplate(\r\n    input_variables=['instruction','summary'],\r\n    template=\"\"\"### Instruction:\r\n    {instruction}\r\n    \r\n    ### Input:\r\n    {summary}\r\n\r\n    ### Response:\r\n    \r\n    \"\"\")\r\n\r\n```\r\nThe instruction is a simple instruction to extract relevant insights from a summary. My LLM is instantiated as such:\r\ninference_server_url = f'https://{pod[\"id\"]}-{port}.proxy.runpod.net' ### note: the pod and port is defined previously.\r\nllm = HuggingFaceTextGenInference(inference_server_url=inference_server_url)\r\n\r\nAnd I am trying to run the model as such:\r\n```\r\nsummary = ... # summary here\r\ninstruction = ... #instruction here\r\nchain.run({\"instruction\": instruction, \"summary\": summary}) #**_Note: Error occurs from this line!!_**\r\n\r\n```\r\nBut I get this error:\r\n```\r\nFile ~/anaconda3/envs/py310/lib/python3.10/site-packages/langchain/chains/base.py:282, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, metadata, include_run_info)\r\n    280 except (KeyboardInterrupt, Exception) as e:\r\n    281     run_manager.on_chain_error(e)\r\n--> 282     raise e\r\n    283 run_manager.on_chain_end(outputs)\r\n    284 final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    285     inputs, outputs, return_only_outputs\r\n...\r\n---> 81 message = payload[\"error\"]\r\n     82 if \"error_type\" in payload:\r\n     83     error_type = payload[\"error_type\"]\r\n\r\nKeyError: 'error'\r\n\r\n```\r\nAny ideas?\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [X] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nMy prompt template is as follows:\r\nprompt = PromptTemplate(\r\n    input_variables=['instruction','summary'],\r\n    template=\"\"\"### Instruction:\r\n    {instruction}\r\n    \r\n    ### Input:\r\n    {summary}\r\n\r\n    ### Response:\r\n    \r\n    \"\"\")\r\nThe instruction is a simple instruction to extract relevant insights from a summary. My LLM is instantiated as such:\r\ninference_server_url = f'https://{pod[\"id\"]}-{port}.proxy.runpod.net' ### note: the pod and port is defined previously.\r\nllm = HuggingFaceTextGenInference(inference_server_url=inference_server_url)\r\n\r\nAnd I am trying to run the model as such:\r\nsummary = ... # summary here\r\ninstruction = ... #instruction here\r\nchain.run({\"instruction\": instruction, \"summary\": summary})\r\n\r\nAnd then running chain.run I get the error as mentioned above.\r\n\r\n### Expected behavior\r\n\r\nWhat's expected is that I should be receiving the output from the runpod GPU cloud that is hosting the model, as per this guide that I am following:\r\nhttps://colab.research.google.com/drive/10BJcKRBtMlpm2hsS2antarSRgEQY3AQq#scrollTo=lyVYLW2thTMg",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10072/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10072/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10071",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10071/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10071/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10071/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10071",
        "id": 1876449621,
        "node_id": "PR_kwDOIPDwls5ZSapt",
        "number": 10071,
        "title": "add repr for not serializable",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T23:51:16Z",
        "updated_at": "2023-09-01T16:18:34Z",
        "closed_at": "2023-09-01T16:18:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10071",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10071",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10071.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10071.patch",
            "merged_at": "2023-09-01T16:18:33Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10071/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10071/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10070",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10070/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10070/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10070/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10070",
        "id": 1876399968,
        "node_id": "PR_kwDOIPDwls5ZSQZl",
        "number": 10070,
        "title": "Comprehend Moderation 0.1",
        "user": {
            "login": "nikhilkjha",
            "id": 48101485,
            "node_id": "MDQ6VXNlcjQ4MTAxNDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/48101485?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nikhilkjha",
            "html_url": "https://github.com/nikhilkjha",
            "followers_url": "https://api.github.com/users/nikhilkjha/followers",
            "following_url": "https://api.github.com/users/nikhilkjha/following{/other_user}",
            "gists_url": "https://api.github.com/users/nikhilkjha/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nikhilkjha/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nikhilkjha/subscriptions",
            "organizations_url": "https://api.github.com/users/nikhilkjha/orgs",
            "repos_url": "https://api.github.com/users/nikhilkjha/repos",
            "events_url": "https://api.github.com/users/nikhilkjha/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nikhilkjha/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-31T22:35:13Z",
        "updated_at": "2023-09-01T23:01:28Z",
        "closed_at": "2023-09-01T23:01:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10070",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10070",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10070.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10070.patch",
            "merged_at": null
        },
        "body": "This PR streamlines the #9665 configuration object and logic to enable chain moderation via the Amazon Comprehend service, allowing you to detect and redact PII, Toxic, and Intent information in the LLM prompt or answer. \r\nThis implementation simplifies the configuration and types it to specific class/model.\r\n\r\n\r\n### Usage sample\r\n\r\n```python\r\nfrom langchain_experimental.comprehend_moderation import (BaseModerationConfig, \r\n                                 ModerationIntentConfig, \r\n                                 ModerationPiiConfig, \r\n                                 ModerationToxicityConfig\r\n)\r\n\r\npii_config = ModerationPiiConfig(\r\n    labels=[\"SSN\"],\r\n    redact=True,\r\n    mask_character=\"X\"\r\n)\r\n\r\ntoxicity_config = ModerationToxicityConfig(\r\n    threshold=0.5\r\n)\r\n\r\nintent_config = ModerationIntentConfig(\r\n    threshold=0.5\r\n)\r\n\r\nmoderation_config = BaseModerationConfig(\r\n    filters=[pii_config, toxicity_config, intent_config]\r\n)\r\n\r\ncomp_moderation_with_config = AmazonComprehendModerationChain(\r\n    moderation_config=moderation_config, #specify the configuration\r\n    client=comprehend_client,            #optionally pass the Boto3 Client\r\n    verbose=True\r\n)\r\n\r\ntemplate = \"\"\"Question: {question}\r\n\r\nAnswer:\"\"\"\r\n\r\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\r\n\r\nresponses = [\r\n    \"Final Answer: A credit card number looks like 1289-2321-1123-2387. A fake SSN number looks like 323-22-9980. John Doe's phone number is (999)253-9876.\", \r\n    \"Final Answer: This is a really shitty way of constructing a birdhouse. This is fucking insane to think that any birds would actually create their motherfucking nests here.\"\r\n]\r\nllm = FakeListLLM(responses=responses)\r\n\r\nllm_chain = LLMChain(prompt=prompt, llm=llm)\r\n\r\nchain = ( \r\n    prompt \r\n    | comp_moderation_with_config \r\n    | {llm_chain.input_keys[0]: lambda x: x['output'] }  \r\n    | llm_chain \r\n    | { \"input\": lambda x: x['text'] } \r\n    | comp_moderation_with_config \r\n)\r\n\r\ntry:\r\n    response = chain.invoke({\"question\": \"A sample SSN number looks like this 123-456-7890. Can you give me some more samples?\"})\r\nexcept Exception as e:\r\n    print(str(e))\r\nelse:\r\n    print(response['output'])\r\n\r\n```\r\n\r\n### Output\r\n\r\n```python\r\n> Entering new AmazonComprehendModerationChain chain...\r\nRunning AmazonComprehendModerationChain...\r\nRunning pii Validation...\r\nRunning toxicity Validation...\r\nRunning intent Validation...\r\n\r\n> Finished chain.\r\n\r\n\r\n> Entering new AmazonComprehendModerationChain chain...\r\nRunning AmazonComprehendModerationChain...\r\nRunning pii Validation...\r\nRunning toxicity Validation...\r\nRunning intent Validation...\r\n\r\n> Finished chain.\r\nFinal Answer: A credit card number looks like 1289-2321-1123-2387. A fake SSN number looks like XXXXXXXXXXXX John Doe's phone number is (999)253-9876.\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10070/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10070/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10069",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10069/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10069/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10069/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10069",
        "id": 1876339860,
        "node_id": "PR_kwDOIPDwls5ZSDex",
        "number": 10069,
        "title": "Add example of running Q&A over structured data using the `Airbyte` loaders and `pandas`",
        "user": {
            "login": "homanp",
            "id": 2464556,
            "node_id": "MDQ6VXNlcjI0NjQ1NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2464556?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/homanp",
            "html_url": "https://github.com/homanp",
            "followers_url": "https://api.github.com/users/homanp/followers",
            "following_url": "https://api.github.com/users/homanp/following{/other_user}",
            "gists_url": "https://api.github.com/users/homanp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/homanp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/homanp/subscriptions",
            "organizations_url": "https://api.github.com/users/homanp/orgs",
            "repos_url": "https://api.github.com/users/homanp/repos",
            "events_url": "https://api.github.com/users/homanp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/homanp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-31T21:27:33Z",
        "updated_at": "2023-09-03T21:32:33Z",
        "closed_at": "2023-09-03T21:32:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10069",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10069",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10069.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10069.patch",
            "merged_at": "2023-09-03T21:32:33Z"
        },
        "body": "  - Description: Added example of running Q&A over structured data using the `Airbyte` loaders and `pandas`\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: @hwchase17 \r\n  - Twitter handle: @pelaseyed\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10069/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10069/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10067",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10067/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10067/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10067/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10067",
        "id": 1876237758,
        "node_id": "PR_kwDOIPDwls5ZRs6R",
        "number": 10067,
        "title": "feat: Add `ApifyWrapper` class",
        "user": {
            "login": "jirimoravcik",
            "id": 951187,
            "node_id": "MDQ6VXNlcjk1MTE4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/951187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jirimoravcik",
            "html_url": "https://github.com/jirimoravcik",
            "followers_url": "https://api.github.com/users/jirimoravcik/followers",
            "following_url": "https://api.github.com/users/jirimoravcik/following{/other_user}",
            "gists_url": "https://api.github.com/users/jirimoravcik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jirimoravcik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jirimoravcik/subscriptions",
            "organizations_url": "https://api.github.com/users/jirimoravcik/orgs",
            "repos_url": "https://api.github.com/users/jirimoravcik/repos",
            "events_url": "https://api.github.com/users/jirimoravcik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jirimoravcik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-31T20:16:02Z",
        "updated_at": "2023-08-31T22:49:28Z",
        "closed_at": "2023-08-31T22:47:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10067",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10067",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10067.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10067.patch",
            "merged_at": "2023-08-31T22:47:44Z"
        },
        "body": "If you look at documentation https://python.langchain.com/docs/integrations/tools/apify (or the actual file https://github.com/langchain-ai/langchain/blob/master/docs/extras/integrations/tools/apify.ipynb ), there's a class `ApifyWrapper` mentioned. It seems it got lost in some refactoring, i.e. it does not exist in the codebase ATM.\r\n\r\nI just propose to add it back.\r\nIt would fix issues e.g. https://github.com/langchain-ai/langchain/issues/8307 or https://github.com/langchain-ai/langchain/issues/8201\r\n\r\nTo add, Apify is a wanted integration, e.g. see https://twitter.com/hwchase17/status/1695490295914545626 or https://twitter.com/hwchase17/status/1695470765343461756\r\n\r\nLastly, I offer taking ownership of the Apify-related parts of the codebase, so you can tag me if anything is needed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10067/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10067/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10066",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10066/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10066/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10066/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10066",
        "id": 1876111036,
        "node_id": "PR_kwDOIPDwls5ZRRRv",
        "number": 10066,
        "title": "docs: agents & callbacks fixes",
        "user": {
            "login": "seamusp",
            "id": 22579106,
            "node_id": "MDQ6VXNlcjIyNTc5MTA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/22579106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seamusp",
            "html_url": "https://github.com/seamusp",
            "followers_url": "https://api.github.com/users/seamusp/followers",
            "following_url": "https://api.github.com/users/seamusp/following{/other_user}",
            "gists_url": "https://api.github.com/users/seamusp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seamusp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seamusp/subscriptions",
            "organizations_url": "https://api.github.com/users/seamusp/orgs",
            "repos_url": "https://api.github.com/users/seamusp/repos",
            "events_url": "https://api.github.com/users/seamusp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seamusp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-31T18:54:25Z",
        "updated_at": "2023-09-01T20:34:33Z",
        "closed_at": "2023-09-01T20:28:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10066",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10066",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10066.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10066.patch",
            "merged_at": "2023-09-01T20:28:55Z"
        },
        "body": "Various improvements to the Agents & Callbacks sections of the documentation including formatting, spelling, and grammar fixes to improve readability.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10066/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10066/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10065",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10065/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10065/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10065/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10065",
        "id": 1876055791,
        "node_id": "I_kwDOIPDwls5v0lbv",
        "number": 10065,
        "title": "SupabaseVectorStore: Error thrown when calling similarity_search_by_vector_with_relevance_scores",
        "user": {
            "login": "anthonyjacquelin",
            "id": 39488794,
            "node_id": "MDQ6VXNlcjM5NDg4Nzk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/39488794?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anthonyjacquelin",
            "html_url": "https://github.com/anthonyjacquelin",
            "followers_url": "https://api.github.com/users/anthonyjacquelin/followers",
            "following_url": "https://api.github.com/users/anthonyjacquelin/following{/other_user}",
            "gists_url": "https://api.github.com/users/anthonyjacquelin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anthonyjacquelin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anthonyjacquelin/subscriptions",
            "organizations_url": "https://api.github.com/users/anthonyjacquelin/orgs",
            "repos_url": "https://api.github.com/users/anthonyjacquelin/repos",
            "events_url": "https://api.github.com/users/anthonyjacquelin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anthonyjacquelin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-31T18:18:02Z",
        "updated_at": "2023-12-07T16:05:15Z",
        "closed_at": "2023-12-07T16:05:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n### Error\r\n\r\nI am using **Supabase Vector Store**:\r\n\r\n```python\r\nembeddings = OpenAIEmbeddings()\r\nvectorstore_public = SupabaseVectorStore(\r\n\r\n        client=supabase_client,\r\n        embedding=embeddings,\r\n        table_name=\"documents\",\r\n        query_name=\"match_documents\",\r\n    )\r\n```\r\n\r\nAnd crawling pages from internet using the `WebResearchRetriever`\r\n\r\nBut, in `WebResearchRetriever._get_relevant_documents`\r\n\r\n```python\r\n# Search for relevant splits\r\n        # TODO: make this async\r\n        logger.info(\"Grabbing most relevant splits from urls...\")\r\n        docs = []\r\n        for query in questions:\r\n            docs.extend(self.vectorstore.similarity_search(query))\r\n```\r\n\r\nThe `vectorstore.similarity_search` guides to an rpc call using the `SupabaseVectorStore`\r\n\r\n```python\r\ndef similarity_search_by_vector_with_relevance_scores(\r\n        self, query: List[float], k: int, filter: Optional[Dict[str, Any]] = None\r\n    ) -> List[Tuple[Document, float]]:\r\n        match_documents_params = self.match_args(query, k, filter)\r\n        print(\"match_documents_params\", match_documents_params)\r\n        print(\"self.query_name\", self.query_name)\r\n        res = self._client.rpc(self.query_name, match_documents_params).execute() # here is where the error is thrown\r\n        print(\"res\", res)\r\n        match_result = [\r\n            (\r\n                Document(\r\n                    metadata=search.get(\"metadata\", {}),  # type: ignore\r\n                    page_content=search.get(\"content\", \"\"),\r\n                ),\r\n                search.get(\"similarity\", 0.0),\r\n            )\r\n            for search in res.data\r\n            if search.get(\"content\")\r\n        ]\r\n\r\n        return match_result\r\n```\r\n\r\nError thrown:\r\n\r\n```python\r\nFile \"/lib/python3.10/site-packages/postgrest/_sync/request_builder.py\", line 68, in execute\r\n    raise APIError(r.json())\r\n\r\npostgrest.exceptions.APIError: {'code': '42804', 'details': 'Returned type text does not match expected type bigint in column 1.', 'hint': None, 'message': 'structure of query does not match function result type'}\r\n```\r\n\r\nComplete Traceback\r\n\r\n```python\r\nTraceback (most recent call last):\r\n  File \"/lib/python3.10/site-packages/flask/app.py\", line 2190, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/lib/python3.10/site-packages/flask/app.py\", line 1486, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/lib/python3.10/site-packages/flask_cors/extension.py\", line 176, in wrapped_function\r\n    return cors_after_request(app.make_response(f(*args, **kwargs)))\r\n  File \"/lib/python3.10/site-packages/flask/app.py\", line 1484, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/lib/python3.10/site-packages/flask/app.py\", line 1469, in dispatch_request\r\n    return self.ensure_sync(self.view_functions[rule.endpoint])(**view_args)\r\n  File \"/app.py\", line 143, in complete\r\n    answer = completion(message)\r\n  File \"/methods/content_completion.py\", line 15, in completion\r\n    sources = web_explorer(blog_topic)\r\n  File \"/methods/web_explorer.py\", line 93, in web_explorer\r\n    result = retrieve_answer_and_sources(question, llm, web_retriever)\r\n  File \"/methods/web_explorer.py\", line 80, in retrieve_answer_and_sources\r\n    return qa_chain({\"question\": question}, return_only_outputs=True)\r\n  File \"/lib/python3.10/site-packages/langchain/chains/base.py\", line 288, in __call__\r\n    raise e\r\n  File \"/lib/python3.10/site-packages/langchain/chains/base.py\", line 282, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"/lib/python3.10/site-packages/langchain/chains/qa_with_sources/base.py\", line 151, in _call\r\n    docs = self._get_docs(inputs, run_manager=_run_manager)\r\n  File \"/lib/python3.10/site-packages/langchain/chains/qa_with_sources/retrieval.py\", line 50, in _get_docs\r\n    docs = self.retriever.get_relevant_documents(\r\n  File \"/lib/python3.10/site-packages/langchain/schema/retriever.py\", line 208, in get_relevant_documents\r\n    raise e\r\n  File \"/lib/python3.10/site-packages/langchain/schema/retriever.py\", line 201, in get_relevant_documents\r\n    result = self._get_relevant_documents(\r\n  File \"/methods/retrievers.py\", line 252, in _get_relevant_documents\r\n    docs.extend(self.vectorstore.similarity_search(query))\r\n  File \"/lib/python3.10/site-packages/langchain/vectorstores/supabase.py\", line 172, in similarity_search\r\n    return self.similarity_search_by_vector(\r\n  File \"/lib/python3.10/site-packages/langchain/vectorstores/supabase.py\", line 183, in similarity_search_by_vector\r\n    result = self.similarity_search_by_vector_with_relevance_scores(\r\n  File \"/lib/python3.10/site-packages/langchain/vectorstores/supabase.py\", line 217, in similarity_search_by_vector_with_relevance_scores\r\n    res = self._client.rpc(self.query_name, match_documents_params).execute()\r\n  File \"/lib/python3.10/site-packages/postgrest/_sync/request_builder.py\", line 68, in execute\r\n    raise APIError(r.json())\r\npostgrest.exceptions.APIError: {'code': '42804', 'details': 'Returned type text does not match expected type bigint in column 1.', 'hint': None, 'message': 'structure of query does not match function result type'}\r\n```\r\n\r\nrequirements.txt to reproduce:\r\n```\r\naiohttp==3.8.5\r\naiosignal==1.3.1\r\nanyio==4.0.0\r\nasync-timeout==4.0.3\r\nattrs==23.1.0\r\nazure-core==1.29.3\r\nbackoff==2.2.1\r\nbcrypt==4.0.1\r\nbeautifulsoup4==4.12.2\r\nbleach==6.0.0\r\nblinker==1.6.2\r\ncachetools==5.3.1\r\ncertifi==2023.7.22\r\nchardet==5.2.0\r\ncharset-normalizer==3.2.0\r\nchroma-hnswlib==0.7.2\r\nchromadb==0.4.8\r\nclick==8.1.7\r\nclick-log==0.4.0\r\ncolorama==0.4.6\r\ncoloredlogs==15.0.1\r\ndataclasses-json==0.5.14\r\ndeprecation==2.1.0\r\ndnspython==2.4.2\r\ndocutils==0.20.1\r\ndotty-dict==1.3.1\r\nemoji==2.8.0\r\nexceptiongroup==1.1.3\r\nfastapi==0.99.1\r\nfiletype==1.2.0\r\nFlask==2.3.3\r\nFlask-Cors==4.0.0\r\nflatbuffers==23.5.26\r\nfrozenlist==1.4.0\r\ngitdb==4.0.10\r\nGitPython==3.1.32\r\ngoogle-api-core==2.11.1\r\ngoogle-api-python-client==2.97.0\r\ngoogle-auth==2.22.0\r\ngoogle-auth-httplib2==0.1.0\r\ngoogleapis-common-protos==1.60.0\r\ngotrue==1.0.4\r\nh11==0.14.0\r\nhtml-sanitizer==2.2.0\r\nhttpcore==0.16.3\r\nhttplib2==0.22.0\r\nhttptools==0.6.0\r\nhttpx==0.23.3\r\nhumanfriendly==10.0\r\nidna==3.4\r\nimportlib-metadata==6.8.0\r\nimportlib-resources==6.0.1\r\ninvoke==1.7.3\r\nitsdangerous==2.1.2\r\njaraco.classes==3.3.0\r\nJinja2==3.1.2\r\njoblib==1.3.2\r\nkeyring==24.2.0\r\nlangchain==0.0.277\r\nlangsmith==0.0.30\r\nlxml==4.9.3\r\nMarkdown==3.4.4\r\nMarkupSafe==2.1.3\r\nmarshmallow==3.20.1\r\nmonotonic==1.6\r\nmore-itertools==10.1.0\r\nmpmath==1.3.0\r\nmultidict==6.0.4\r\nmypy-extensions==1.0.0\r\nnltk==3.8.1\r\nnumexpr==2.8.5\r\nnumpy==1.25.2\r\nonnxruntime==1.15.1\r\nopenai==0.27.10\r\noutcome==1.2.0\r\noverrides==7.4.0\r\npackaging==23.1\r\npkginfo==1.9.6\r\npostgrest==0.10.6\r\nposthog==3.0.2\r\nprotobuf==4.24.2\r\npulsar-client==3.3.0\r\npyasn1==0.5.0\r\npyasn1-modules==0.3.0\r\npydantic==1.10.12\r\nPygments==2.16.1\r\npymongo==4.5.0\r\npyparsing==3.1.1\r\nPyPika==0.48.9\r\nPySocks==1.7.1\r\npython-dateutil==2.8.2\r\npython-dotenv==1.0.0\r\npython-gitlab==3.15.0\r\npython-magic==0.4.27\r\npython-semantic-release==7.33.2\r\nPyYAML==6.0.1\r\nreadme-renderer==41.0\r\nrealtime==1.0.0\r\nregex==2023.8.8\r\nrequests==2.31.0\r\nrequests-toolbelt==1.0.0\r\nrfc3986==1.5.0\r\nrsa==4.9\r\nselenium==4.11.2\r\nsemver==2.13.0\r\nsix==1.16.0\r\nsmmap==5.0.0\r\nsniffio==1.3.0\r\nsortedcontainers==2.4.0\r\nsoupsieve==2.4.1\r\nSQLAlchemy==2.0.20\r\nstarlette==0.27.0\r\nstorage3==0.5.3\r\nStrEnum==0.4.15\r\nsupabase==1.0.3\r\nsupafunc==0.2.2\r\nsympy==1.12\r\ntabulate==0.9.0\r\ntenacity==8.2.3\r\ntiktoken==0.4.0\r\ntokenizers==0.13.3\r\ntomlkit==0.12.1\r\ntqdm==4.66.1\r\ntrio==0.22.2\r\ntrio-websocket==0.10.3\r\ntwine==3.8.0\r\ntyping-inspect==0.9.0\r\ntyping_extensions==4.7.1\r\nunstructured==0.10.10\r\nuritemplate==4.1.1\r\nurllib3==1.26.16\r\nuvicorn==0.23.2\r\nuvloop==0.17.0\r\nwaitress==2.1.2\r\nwatchfiles==0.20.0\r\nwebencodings==0.5.1\r\nwebsockets==10.4\r\nWerkzeug==2.3.7\r\nwsproto==1.2.0\r\nyarl==1.9.2\r\nzipp==3.16.2\r\n```\n\n### Who can help?\n\n@agola11  @hwchase17 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nCode from this repo: https://github.com/langchain-ai/web-explorer/blob/main/web_explorer.py\r\n\r\nBut instead of faiss, use `SupabaseVectorStore` as above.\n\n### Expected behavior\n\nIs it coming from the config of my table on Supabase, as i get: `Returned type text does not match expected type bigint in column 1.` or wherever else ? \r\n\r\n<img width=\"1176\" alt=\"Capture d\u2019e\u0301cran 2023-08-31 a\u0300 20 15 58\" src=\"https://github.com/langchain-ai/langchain/assets/39488794/743d9cd9-fa30-474d-88ce-288e85c50e71\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10065/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10065/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10064",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10064/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10064/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10064/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10064",
        "id": 1876055216,
        "node_id": "I_kwDOIPDwls5v0lSw",
        "number": 10064,
        "title": "Add SelfQueryRetriever support for Redis Vector Stores",
        "user": {
            "login": "RoderickVM",
            "id": 64725908,
            "node_id": "MDQ6VXNlcjY0NzI1OTA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/64725908?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RoderickVM",
            "html_url": "https://github.com/RoderickVM",
            "followers_url": "https://api.github.com/users/RoderickVM/followers",
            "following_url": "https://api.github.com/users/RoderickVM/following{/other_user}",
            "gists_url": "https://api.github.com/users/RoderickVM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RoderickVM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RoderickVM/subscriptions",
            "organizations_url": "https://api.github.com/users/RoderickVM/orgs",
            "repos_url": "https://api.github.com/users/RoderickVM/repos",
            "events_url": "https://api.github.com/users/RoderickVM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RoderickVM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5955630415,
                "node_id": "LA_kwDOIPDwls8AAAABYvu1Tw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20redis",
                "name": "integration: redis",
                "color": "F9D0C4",
                "default": false,
                "description": "Any integration that uses Redis"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T18:17:38Z",
        "updated_at": "2023-09-12T22:30:38Z",
        "closed_at": "2023-09-12T22:30:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nImplement Self Query retriever to Redis vector stores.\n\n### Motivation\n\nI was trying the different retrievers for my project (AI chatbot that answers various human resources and labor law questions based on a dataset built from complete local labor legislation, company handbooks, job descriptions and SOPs).\r\n\r\nI plan to deploy this chatbot in a production environment, therefore I chose Redis (for its robustness and speed) as a vector store.\n\n### Your contribution\n\nI am not a pro developer; so, unfortunately, the only contributions I can make is limited to \"real-world\" testing.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10064/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10064/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10062",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10062/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10062/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10062/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10062",
        "id": 1876018689,
        "node_id": "PR_kwDOIPDwls5ZQ86j",
        "number": 10062,
        "title": "Data anonymizer notebook nit",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T17:53:59Z",
        "updated_at": "2023-08-31T17:58:14Z",
        "closed_at": "2023-08-31T17:58:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10062",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10062",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10062.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10062.patch",
            "merged_at": "2023-08-31T17:58:13Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10062/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10062/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10061",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10061/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10061/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10061/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10061",
        "id": 1876017939,
        "node_id": "I_kwDOIPDwls5v0cMT",
        "number": 10061,
        "title": "CustomLLM when called inside agent does not return custom behaviour",
        "user": {
            "login": "daniellefranca96",
            "id": 134293046,
            "node_id": "U_kgDOCAEmNg",
            "avatar_url": "https://avatars.githubusercontent.com/u/134293046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daniellefranca96",
            "html_url": "https://github.com/daniellefranca96",
            "followers_url": "https://api.github.com/users/daniellefranca96/followers",
            "following_url": "https://api.github.com/users/daniellefranca96/following{/other_user}",
            "gists_url": "https://api.github.com/users/daniellefranca96/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daniellefranca96/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daniellefranca96/subscriptions",
            "organizations_url": "https://api.github.com/users/daniellefranca96/orgs",
            "repos_url": "https://api.github.com/users/daniellefranca96/repos",
            "events_url": "https://api.github.com/users/daniellefranca96/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daniellefranca96/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-31T17:53:26Z",
        "updated_at": "2023-12-07T16:05:20Z",
        "closed_at": "2023-12-07T16:05:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain  0.0.276\r\nWindows\r\nPython 3.11.4\r\n\r\nI create a custom llm just like in the tutorial but when i use it on a mkrl agent it does not return to the agent the custom response.\r\nI printed insided my agent and it is called and returns the correct answer, but the agent in the end of line does not get this answer.\r\n\r\n\r\n\n\n### Who can help?\n\n@hwchase17 \r\n@agola11\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nhttps://colab.research.google.com/drive/1cHVx3GlzmF4ECV_63ZjlrMPt8P840GSw?usp=sharing\n\n### Expected behavior\n\nThe expected behaviour is the agent to receive the response of the CustomLLM.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10061/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10061/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10060",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10060/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10060/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10060/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10060",
        "id": 1875918071,
        "node_id": "I_kwDOIPDwls5v0Dz3",
        "number": 10060,
        "title": "TypeError: multiple bases have instance lay-out conflict",
        "user": {
            "login": "himswamy",
            "id": 32672046,
            "node_id": "MDQ6VXNlcjMyNjcyMDQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/32672046?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/himswamy",
            "html_url": "https://github.com/himswamy",
            "followers_url": "https://api.github.com/users/himswamy/followers",
            "following_url": "https://api.github.com/users/himswamy/following{/other_user}",
            "gists_url": "https://api.github.com/users/himswamy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/himswamy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/himswamy/subscriptions",
            "organizations_url": "https://api.github.com/users/himswamy/orgs",
            "repos_url": "https://api.github.com/users/himswamy/repos",
            "events_url": "https://api.github.com/users/himswamy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/himswamy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-31T17:02:38Z",
        "updated_at": "2023-12-11T16:05:28Z",
        "closed_at": "2023-12-11T16:05:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version -- 0.0.277\r\npython verion -- 3.8.8\r\nwindow platform\r\n\n\n### Who can help?\n\n@hwchase17\r\n@agola11\r\n\r\nHi I am not able to run any of the langchain syntex on my windows laptop. For example if I just run from **langchain.llms import OpenAI**  I get the below error message. Can you please help!\r\n\r\nTypeError                                 Traceback (most recent call last)\r\n<ipython-input-3-5af9a0f5ffa4> in <module>\r\n      1 import os\r\n      2 from dotenv import load_dotenv\r\n----> 3 from langchain.llms import OpenAI\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\__init__.py in <module>\r\n      4 from typing import Optional\r\n      5 \r\n----> 6 from langchain.agents import MRKLChain, ReActChain, SelfAskWithSearchChain\r\n      7 from langchain.chains import (\r\n      8     ConversationChain,\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\agents\\__init__.py in <module>\r\n     29 \r\n     30 \"\"\"  # noqa: E501\r\n---> 31 from langchain.agents.agent import (\r\n     32     Agent,\r\n     33     AgentExecutor,\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\agents\\agent.py in <module>\r\n     12 import yaml\r\n     13 \r\n---> 14 from langchain.agents.agent_iterator import AgentExecutorIterator\r\n     15 from langchain.agents.agent_types import AgentType\r\n     16 from langchain.agents.tools import InvalidTool\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\agents\\agent_iterator.py in <module>\r\n     19 )\r\n     20 \r\n---> 21 from langchain.callbacks.manager import (\r\n     22     AsyncCallbackManager,\r\n     23     AsyncCallbackManagerForChainRun,\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\callbacks\\__init__.py in <module>\r\n      8 \"\"\"\r\n      9 \r\n---> 10 from langchain.callbacks.aim_callback import AimCallbackHandler\r\n     11 from langchain.callbacks.argilla_callback import ArgillaCallbackHandler\r\n     12 from langchain.callbacks.arize_callback import ArizeCallbackHandler\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\callbacks\\aim_callback.py in <module>\r\n      3 \r\n      4 from langchain.callbacks.base import BaseCallbackHandler\r\n----> 5 from langchain.schema import AgentAction, AgentFinish, LLMResult\r\n      6 \r\n      7 \r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\schema\\__init__.py in <module>\r\n      1 \"\"\"**Schemas** are the LangChain Base Classes and Interfaces.\"\"\"\r\n      2 from langchain.schema.agent import AgentAction, AgentFinish\r\n----> 3 from langchain.schema.cache import BaseCache\r\n      4 from langchain.schema.chat_history import BaseChatMessageHistory\r\n      5 from langchain.schema.document import BaseDocumentTransformer, Document\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\schema\\cache.py in <module>\r\n      4 from typing import Any, Optional, Sequence\r\n      5 \r\n----> 6 from langchain.schema.output import Generation\r\n      7 \r\n      8 RETURN_VAL_TYPE = Sequence[Generation]\r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\schema\\output.py in <module>\r\n      7 from langchain.load.serializable import Serializable\r\n      8 from langchain.pydantic_v1 import BaseModel, root_validator\r\n----> 9 from langchain.schema.messages import BaseMessage, BaseMessageChunk\r\n     10 \r\n     11 \r\n\r\n~\\Anaconda3\\lib\\site-packages\\langchain\\schema\\messages.py in <module>\r\n    146 \r\n    147 \r\n--> 148 class HumanMessageChunk(HumanMessage, BaseMessageChunk):\r\n    149     \"\"\"A Human Message chunk.\"\"\"\r\n    150 \r\n\r\n~\\Anaconda3\\lib\\site-packages\\pydantic\\main.cp38-win_amd64.pyd in pydantic.main.ModelMetaclass.__new__()\r\n\r\n~\\Anaconda3\\lib\\abc.py in __new__(mcls, name, bases, namespace, **kwargs)\r\n     83         \"\"\"\r\n     84         def __new__(mcls, name, bases, namespace, **kwargs):\r\n---> 85             cls = super().__new__(mcls, name, bases, namespace, **kwargs)\r\n     86             _abc_init(cls)\r\n     87             return cls\r\n\r\nTypeError: multiple bases have instance lay-out conflict\r\n\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n!pip -q install openai langchain huggingface_hub\r\nimport openai\r\nimport dotenv\r\nimport os\r\nos.environ['OPENAI_API_KEY'] = ' ... '\r\nfrom langchain.llms import OpenAI\n\n### Expected behavior\n\nShould be able to run without error",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10060/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10060/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10059",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10059/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10059/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10059/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10059",
        "id": 1875877282,
        "node_id": "I_kwDOIPDwls5vz52i",
        "number": 10059,
        "title": "max_marginal_relevance_search not implemented in Redis",
        "user": {
            "login": "RoderickVM",
            "id": 64725908,
            "node_id": "MDQ6VXNlcjY0NzI1OTA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/64725908?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RoderickVM",
            "html_url": "https://github.com/RoderickVM",
            "followers_url": "https://api.github.com/users/RoderickVM/followers",
            "following_url": "https://api.github.com/users/RoderickVM/following{/other_user}",
            "gists_url": "https://api.github.com/users/RoderickVM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RoderickVM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RoderickVM/subscriptions",
            "organizations_url": "https://api.github.com/users/RoderickVM/orgs",
            "repos_url": "https://api.github.com/users/RoderickVM/repos",
            "events_url": "https://api.github.com/users/RoderickVM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RoderickVM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-31T16:34:30Z",
        "updated_at": "2023-09-12T22:31:16Z",
        "closed_at": "2023-09-12T22:31:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version: 0.0.276\r\nPython version: 3.11.2\r\nPlatform: x86_64 Debian 12.2.0-14\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nimport os, openai\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Redis\r\n\r\nembeddings = OpenAIEmbeddings()\r\n\r\nrds = Redis.from_existing_index(\r\n    embeddings,\r\n    index_name = INDEX_NAME,\r\n    schema = \"redis_schema_kws.yaml\",\r\n    redis_url = \"redis://10.0.1.21:6379\",\r\n)\r\n\r\nreturned_docs_mmr = rds.max_marginal_relevance_search(question, k=3, fetch_k=3, lambda_mult=0.8)\r\n```\r\n\r\nThe returned error message is: `NotImplementedError:`\r\n\r\nCould you provide additional information on your ETA to have MMR search implemented in Redis?\n\n### Expected behavior\n\nRetrieve the Document objects.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10059/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10059/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10058",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10058/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10058/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10058/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10058",
        "id": 1875872227,
        "node_id": "PR_kwDOIPDwls5ZQcL8",
        "number": 10058,
        "title": "add async support for tools",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T16:30:41Z",
        "updated_at": "2023-08-31T23:52:06Z",
        "closed_at": "2023-08-31T23:52:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10058",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10058",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10058.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10058.patch",
            "merged_at": "2023-08-31T23:52:05Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10058/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10058/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10057",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10057/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10057/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10057/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10057",
        "id": 1875844490,
        "node_id": "I_kwDOIPDwls5vzx2K",
        "number": 10057,
        "title": "PydanticOutputParser failing to parse basic string into JSON",
        "user": {
            "login": "benjaminb",
            "id": 16549297,
            "node_id": "MDQ6VXNlcjE2NTQ5Mjk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16549297?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/benjaminb",
            "html_url": "https://github.com/benjaminb",
            "followers_url": "https://api.github.com/users/benjaminb/followers",
            "following_url": "https://api.github.com/users/benjaminb/following{/other_user}",
            "gists_url": "https://api.github.com/users/benjaminb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/benjaminb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/benjaminb/subscriptions",
            "organizations_url": "https://api.github.com/users/benjaminb/orgs",
            "repos_url": "https://api.github.com/users/benjaminb/repos",
            "events_url": "https://api.github.com/users/benjaminb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/benjaminb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-31T16:12:05Z",
        "updated_at": "2023-12-13T16:05:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nGiven a string resembling a JSON-string array, such as I'm often getting from LLM completions, I'm trying to convert the string to a Python list of strings. I'm finding the the `PydanticOutputParser` is throwing an error when plain old `json.loads` with `strict=False` is doing fine.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nFor example this code:\r\n```python\r\nfrom langchain.output_parsers import PydanticOutputParser\r\nfrom pydantic import BaseModel, Field\r\nimport json\r\n\r\nclass Lines(BaseModel):\r\n    lines: list[str] = Field(description=\"array of strings\")\r\n\r\nline_parser = PydanticOutputParser(pydantic_object=Lines)\r\nlines = '[\\n  \"line 1\",\\n  \"line 2\"\\n]'\r\n\r\nprint(\"Just JSON:\")\r\nprint(json.loads(lines, strict=False))\r\nprint(\"LangChain Pydantic:\")\r\nprint(line_parser.parse(lines))\r\n```\r\n\r\nproduces the following output:\r\n```sh\r\nJust JSON:\r\n['line 1', 'line 2']\r\nLangChain Pydantic:\r\nTraceback (most recent call last):\r\n  File \"/opt/miniconda3/envs/gt/lib/python3.10/site-packages/langchain/output_parsers/pydantic.py\", line 27, in parse\r\n    json_object = json.loads(json_str, strict=False)\r\n  File \"/opt/miniconda3/envs/gt/lib/python3.10/json/__init__.py\", line 359, in loads\r\n    return cls(**kw).decode(s)\r\n  File \"/opt/miniconda3/envs/gt/lib/python3.10/json/decoder.py\", line 337, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"/opt/miniconda3/envs/gt/lib/python3.10/json/decoder.py\", line 355, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/benjaminbasseri/Dropbox/Work/GT Schools/scratch work/meme-generation/parse_test.py\", line 14, in <module>\r\n    print(line_parser.parse(lines))\r\n  File \"/opt/miniconda3/envs/gt/lib/python3.10/site-packages/langchain/output_parsers/pydantic.py\", line 33, in parse\r\n    raise OutputParserException(msg, llm_output=text)\r\nlangchain.schema.output_parser.OutputParserException: Failed to parse Lines from completion [\r\n  \"line 1\",\r\n  \"line 2\"\r\n]. Got: Expecting value: line 1 column 1 (char 0)\r\n```\n\n### Expected behavior\n\nI would expect the parser to be able to handle a simple case like this",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10057/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10057/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10056",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10056/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10056/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10056/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10056",
        "id": 1875844026,
        "node_id": "PR_kwDOIPDwls5ZQWFT",
        "number": 10056,
        "title": "Fixing _InactiveRpcError in MatchingEngine vectorstore",
        "user": {
            "login": "bourliam",
            "id": 29543919,
            "node_id": "MDQ6VXNlcjI5NTQzOTE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/29543919?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bourliam",
            "html_url": "https://github.com/bourliam",
            "followers_url": "https://api.github.com/users/bourliam/followers",
            "following_url": "https://api.github.com/users/bourliam/following{/other_user}",
            "gists_url": "https://api.github.com/users/bourliam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bourliam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bourliam/subscriptions",
            "organizations_url": "https://api.github.com/users/bourliam/orgs",
            "repos_url": "https://api.github.com/users/bourliam/repos",
            "events_url": "https://api.github.com/users/bourliam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bourliam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-31T16:11:43Z",
        "updated_at": "2023-09-19T23:16:05Z",
        "closed_at": "2023-09-19T23:16:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10056",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10056",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10056.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10056.patch",
            "merged_at": "2023-09-19T23:16:04Z"
        },
        "body": "  - Description: There was an issue with the MatchingEngine VectorStore, preventing from using it with a public endpoint. In the Google Cloud library there are two similar methods for private or public endpoints : `match()` and `find_neighbors()`.\r\n  - Issue: Fixes #8378 \r\n  - This uses the `google.cloud.aiplatform` library : https://github.com/googleapis/python-aiplatform/blob/main/google/cloud/aiplatform/matching_engine/matching_engine_index_endpoint.py\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10056/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10056/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10055",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10055/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10055/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10055/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10055",
        "id": 1875796091,
        "node_id": "PR_kwDOIPDwls5ZQLlM",
        "number": 10055,
        "title": "Update chroma.py",
        "user": {
            "login": "valkryhx",
            "id": 3361700,
            "node_id": "MDQ6VXNlcjMzNjE3MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3361700?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/valkryhx",
            "html_url": "https://github.com/valkryhx",
            "followers_url": "https://api.github.com/users/valkryhx/followers",
            "following_url": "https://api.github.com/users/valkryhx/following{/other_user}",
            "gists_url": "https://api.github.com/users/valkryhx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/valkryhx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/valkryhx/subscriptions",
            "organizations_url": "https://api.github.com/users/valkryhx/orgs",
            "repos_url": "https://api.github.com/users/valkryhx/repos",
            "events_url": "https://api.github.com/users/valkryhx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/valkryhx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-31T15:44:24Z",
        "updated_at": "2023-09-03T21:35:14Z",
        "closed_at": "2023-09-03T21:35:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10055",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10055",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10055.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10055.patch",
            "merged_at": null
        },
        "body": "- Description: add minor fix codes in  langchain.vectorstors.chroma  to return distances value .\r\n  so \r\n    qa=RetrievalQA.from_chain_type(\r\n        llm=llm,\r\n        chain_type=\"stuff\",\r\n        retriever=retriever, #a chroma db \r\n        return_source_documents=True,\r\n        chain_type_kwargs={\"prompt\": prompt, \"memory\": memory},\r\n    )\r\n  res = qa(query)\r\n  Now res can return distances value in the metadata dict. \r\n \r\n  answer, docs = res[\"result\"], res[\"source_documents\"]\r\n  for document in docs:\r\n       print(\"\\n> [source file path]: \" + document.metadata[\"source\"] )\r\n       print(\"> [cosine  similarity]:\" + str(1.0-document.metadata[\"distances\"]) )   # Add This  and it will print 1-distance_value\r\n       print(\">[text slice]:\" + document.page_content)\r\n\r\n    It is a very minor change.  I tested on the [https://github.com/PromtEngineer/localGPT/blob/main/run_localGPT.py#L237]\r\n  \r\n- Issue: the issue #4710 #5416 Maybe this fix is not directly with the issues , but I guess the intuition is alike.\r\n- Dependencies: same as the main branch\r\n- Tag maintainer: @baskaryan, @eyurtsev, @hwchase17, @rlancemartin\r\n \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10055/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10055/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10054",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10054/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10054/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10054/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10054",
        "id": 1875770074,
        "node_id": "I_kwDOIPDwls5vzfra",
        "number": 10054,
        "title": "StreamingStdOutCallbackHandler().on_llm_start isn't called since version 0.0.272 (0.0.271 still works)",
        "user": {
            "login": "rhoef",
            "id": 2571878,
            "node_id": "MDQ6VXNlcjI1NzE4Nzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2571878?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rhoef",
            "html_url": "https://github.com/rhoef",
            "followers_url": "https://api.github.com/users/rhoef/followers",
            "following_url": "https://api.github.com/users/rhoef/following{/other_user}",
            "gists_url": "https://api.github.com/users/rhoef/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rhoef/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rhoef/subscriptions",
            "organizations_url": "https://api.github.com/users/rhoef/orgs",
            "repos_url": "https://api.github.com/users/rhoef/repos",
            "events_url": "https://api.github.com/users/rhoef/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rhoef/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-31T15:30:31Z",
        "updated_at": "2023-10-30T14:47:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n0.0.272, linux, python 3.11.2 \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI have a pretty standard RetievalQA chain like this. The `on_llm_start` callback isn't executed since version 0.0.272 (I verified that 0.0.271 is working)\r\n\r\n```\r\n    loader = TextLoader(\"data.txt\")\r\n    documents = loader.load()\r\n    openai = ChatOpenAI(**llm_params, callbacks= [StreamingStdOutCallbackHandler()])\r\n\r\n    text_splitter = RecursiveCharacterTextSplitter(**chunking_params)\r\n    texts = text_splitter.split_documents(documents)\r\n\r\n    embeddings = OpenAIEmbeddings()\r\n    docsearch = Chroma.from_documents(texts, embeddings)\r\n\r\n    qa = RetrievalQA.from_chain_type(\r\n        llm=openai,\r\n        retriever=docsearch.as_retriever(),\r\n    )\r\n```\n\n### Expected behavior\n\n`on_llm_start` callback should be called",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10054/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10054/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10052",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10052/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10052/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10052/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10052",
        "id": 1875654936,
        "node_id": "PR_kwDOIPDwls5ZPsi_",
        "number": 10052,
        "title": "bump 278",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-31T14:29:11Z",
        "updated_at": "2023-08-31T14:37:18Z",
        "closed_at": "2023-08-31T14:35:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10052",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10052",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10052.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10052.patch",
            "merged_at": "2023-08-31T14:35:42Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10052/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10052/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10051",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10051/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10051/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10051/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10051",
        "id": 1875626004,
        "node_id": "PR_kwDOIPDwls5ZPmSr",
        "number": 10051,
        "title": "Add XMLOutputParser",
        "user": {
            "login": "mateusz-wosinski-ds",
            "id": 142883372,
            "node_id": "U_kgDOCIQ6LA",
            "avatar_url": "https://avatars.githubusercontent.com/u/142883372?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mateusz-wosinski-ds",
            "html_url": "https://github.com/mateusz-wosinski-ds",
            "followers_url": "https://api.github.com/users/mateusz-wosinski-ds/followers",
            "following_url": "https://api.github.com/users/mateusz-wosinski-ds/following{/other_user}",
            "gists_url": "https://api.github.com/users/mateusz-wosinski-ds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mateusz-wosinski-ds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mateusz-wosinski-ds/subscriptions",
            "organizations_url": "https://api.github.com/users/mateusz-wosinski-ds/orgs",
            "repos_url": "https://api.github.com/users/mateusz-wosinski-ds/repos",
            "events_url": "https://api.github.com/users/mateusz-wosinski-ds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mateusz-wosinski-ds/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-08-31T14:13:14Z",
        "updated_at": "2023-09-19T23:17:34Z",
        "closed_at": "2023-09-19T23:17:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10051",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10051",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10051.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10051.patch",
            "merged_at": "2023-09-19T23:17:34Z"
        },
        "body": "**Description**\r\nAdds new output parser, this time enabling the output of LLM to be of an XML format. Seems to be particularly useful together with Claude model. \r\nAddresses [issue 9820](https://github.com/langchain-ai/langchain/issues/9820).\r\n\r\n**Twitter handle**\r\n@deepsense_ai @matt_wosinski",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10051/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10051/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10050",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10050/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10050/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10050/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10050",
        "id": 1875605668,
        "node_id": "I_kwDOIPDwls5vy3ik",
        "number": 10050,
        "title": "langchain.vectorstores.MatchingEngine.from_components() throws InvalidArgument exception",
        "user": {
            "login": "sgalij",
            "id": 50017589,
            "node_id": "MDQ6VXNlcjUwMDE3NTg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/50017589?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sgalij",
            "html_url": "https://github.com/sgalij",
            "followers_url": "https://api.github.com/users/sgalij/followers",
            "following_url": "https://api.github.com/users/sgalij/following{/other_user}",
            "gists_url": "https://api.github.com/users/sgalij/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sgalij/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sgalij/subscriptions",
            "organizations_url": "https://api.github.com/users/sgalij/orgs",
            "repos_url": "https://api.github.com/users/sgalij/repos",
            "events_url": "https://api.github.com/users/sgalij/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sgalij/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-31T14:01:53Z",
        "updated_at": "2023-09-29T16:26:56Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.249\r\nWindows\r\nPython 3.11.4\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThe official example described here:\r\nhttps://python.langchain.com/docs/integrations/vectorstores/matchingengine#create-vectorstore-from-texts\r\n\r\nDoes not work.\r\n\r\nMy code throws beloe exception:\r\nfrom langchain.vectorstores import MatchingEngine\r\n\r\ntexts = [\r\n  \"The cat sat on\",\r\n  \"the mat.\",\r\n  \"I like to\",\r\n  \"eat pizza for\",\r\n  \"dinner.\",\r\n  \"The sun sets\",\r\n  \"in the west.\",\r\n]\r\n\r\nvector_store = MatchingEngine.from_components(\r\n  project_id=\"\",\r\n  region=\"\",\r\n  gcs_bucket_name=\"\",\r\n  index_id=\"\",\r\n  endpoint_id=\"\",\r\n)\n\n### Expected behavior\n\nTraceback (most recent call last):\r\n  File \"C:\\GitHub\\onecloud-chatbot\\onecloud-chatbot\\Lib\\site-packages\\google\\api_core\\grpc_helpers.py\", line 72, in error_remapped_callable\r\n    return callable_(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\GitHub\\onecloud-chatbot\\onecloud-chatbot\\Lib\\site-packages\\grpc\\_channel.py\", line 1030, in __call__\r\n    return _end_unary_response_blocking(state, call, False, None)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\GitHub\\onecloud-chatbot\\onecloud-chatbot\\Lib\\site-packages\\grpc\\_channel.py\", line 910, in _end_unary_response_blocking\r\n    raise _InactiveRpcError(state)  # pytype: disable=not-instantiable\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\ngrpc._channel._InactiveRpcError: <_InactiveRpcError of RPC that terminated with:\r\n        status = StatusCode.INVALID_ARGUMENT\r\n        details = \"Request contains an invalid argument.\"\r\n        debug_error_string = \"UNKNOWN:Error received from peer ipv4:172.217.16.42:443 {created_time:\"2023-08-31T14:00:16.506362524+00:00\", grpc_status:3, grpc_message:\"Request contains an invalid argument.\"}\"\r\n>\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\GitHub\\onecloud-chatbot\\matching_engine_insert.py\", line 13, in <module>\r\n    vector_store = MatchingEngine.from_components(\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\GitHub\\onecloud-chatbot\\onecloud-chatbot\\Lib\\site-packages\\langchain\\vectorstores\\matching_engine.py\", line 280, in from_components\r\n    endpoint = cls._create_endpoint_by_id(\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\GitHub\\onecloud-chatbot\\onecloud-chatbot\\Lib\\site-packages\\langchain\\vectorstores\\matching_engine.py\", line 386, in _create_endpoint_by_id\r\n    return aiplatform.MatchingEngineIndexEndpoint(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\GitHub\\onecloud-chatbot\\onecloud-chatbot\\Lib\\site-packages\\google\\cloud\\aiplatform\\matching_engine\\matching_engine_index_endpoint.py\", line 130, in __init__\r\n    self._gca_resource = self._get_gca_resource(resource_name=index_endpoint_name)\r\n                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\GitHub\\onecloud-chatbot\\onecloud-chatbot\\Lib\\site-packages\\google\\cloud\\aiplatform\\base.py\", line 648, in _get_gca_resource\r\n    return getattr(self.api_client, self._getter_method)(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\GitHub\\onecloud-chatbot\\onecloud-chatbot\\Lib\\site-packages\\google\\cloud\\aiplatform_v1\\services\\index_endpoint_service\\client.py\", line 707, in get_index_endpoint\r\n    response = rpc(\r\n               ^^^^\r\n  File \"C:\\GitHub\\onecloud-chatbot\\onecloud-chatbot\\Lib\\site-packages\\google\\api_core\\gapic_v1\\method.py\", line 113, in __call__\r\n    return wrapped_func(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\GitHub\\onecloud-chatbot\\onecloud-chatbot\\Lib\\site-packages\\google\\api_core\\retry.py\", line 349, in retry_wrapped_func\r\n    return retry_target(\r\n           ^^^^^^^^^^^^^\r\n  File \"C:\\GitHub\\onecloud-chatbot\\onecloud-chatbot\\Lib\\site-packages\\google\\api_core\\retry.py\", line 191, in retry_target\r\n    return target()\r\n           ^^^^^^^^\r\n  File \"C:\\GitHub\\onecloud-chatbot\\onecloud-chatbot\\Lib\\site-packages\\google\\api_core\\grpc_helpers.py\", line 74, in error_remapped_callable\r\n    raise exceptions.from_grpc_error(exc) from exc\r\ngoogle.api_core.exceptions.InvalidArgument: 400 Request contains an invalid argument.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10050/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10050/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10049",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10049/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10049/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10049/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10049",
        "id": 1875540445,
        "node_id": "PR_kwDOIPDwls5ZPTgp",
        "number": 10049,
        "title": "chat integration [wip]",
        "user": {
            "login": "eryk-dsai",
            "id": 142571618,
            "node_id": "U_kgDOCH94Yg",
            "avatar_url": "https://avatars.githubusercontent.com/u/142571618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eryk-dsai",
            "html_url": "https://github.com/eryk-dsai",
            "followers_url": "https://api.github.com/users/eryk-dsai/followers",
            "following_url": "https://api.github.com/users/eryk-dsai/following{/other_user}",
            "gists_url": "https://api.github.com/users/eryk-dsai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eryk-dsai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eryk-dsai/subscriptions",
            "organizations_url": "https://api.github.com/users/eryk-dsai/orgs",
            "repos_url": "https://api.github.com/users/eryk-dsai/repos",
            "events_url": "https://api.github.com/users/eryk-dsai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eryk-dsai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T13:31:15Z",
        "updated_at": "2023-08-31T15:04:04Z",
        "closed_at": "2023-08-31T14:36:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10049",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10049",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10049.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10049.patch",
            "merged_at": null
        },
        "body": "TODO:\r\n* fix problem with getter\r\n* correct output from _generate\r\n* handle batch requests\r\n\r\n* try to add stopping criteria\r\n* handle ChatMessage, AIMessageChunk(?)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10049/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10049/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10048",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10048/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10048/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10048/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10048",
        "id": 1875502431,
        "node_id": "PR_kwDOIPDwls5ZPLNr",
        "number": 10048,
        "title": "updated prompt name in documentation for sequential chain ",
        "user": {
            "login": "j-space-b",
            "id": 120141355,
            "node_id": "U_kgDOByk2Kw",
            "avatar_url": "https://avatars.githubusercontent.com/u/120141355?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/j-space-b",
            "html_url": "https://github.com/j-space-b",
            "followers_url": "https://api.github.com/users/j-space-b/followers",
            "following_url": "https://api.github.com/users/j-space-b/following{/other_user}",
            "gists_url": "https://api.github.com/users/j-space-b/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/j-space-b/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/j-space-b/subscriptions",
            "organizations_url": "https://api.github.com/users/j-space-b/orgs",
            "repos_url": "https://api.github.com/users/j-space-b/repos",
            "events_url": "https://api.github.com/users/j-space-b/events{/privacy}",
            "received_events_url": "https://api.github.com/users/j-space-b/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-31T13:10:28Z",
        "updated_at": "2023-08-31T23:05:24Z",
        "closed_at": "2023-08-31T23:05:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10048",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10048",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10048.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10048.patch",
            "merged_at": "2023-08-31T23:05:18Z"
        },
        "body": "Description: updated the prompt name in a sequential chain example so that it is not overwritten by the same prompt name in the next chain (this is a sequential chain example)\r\nIssue: n/a\r\nDependencies: none\r\nTag maintainer: not known\r\nTwitter handle: not on twitter, feel free to use my git username for anything\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10048/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10048/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10047",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10047/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10047/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10047/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10047",
        "id": 1875489628,
        "node_id": "PR_kwDOIPDwls5ZPIb7",
        "number": 10047,
        "title": "Add sqlite-vss as a vector database",
        "user": {
            "login": "philippe2803",
            "id": 4492530,
            "node_id": "MDQ6VXNlcjQ0OTI1MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4492530?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/philippe2803",
            "html_url": "https://github.com/philippe2803",
            "followers_url": "https://api.github.com/users/philippe2803/followers",
            "following_url": "https://api.github.com/users/philippe2803/following{/other_user}",
            "gists_url": "https://api.github.com/users/philippe2803/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/philippe2803/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/philippe2803/subscriptions",
            "organizations_url": "https://api.github.com/users/philippe2803/orgs",
            "repos_url": "https://api.github.com/users/philippe2803/repos",
            "events_url": "https://api.github.com/users/philippe2803/events{/privacy}",
            "received_events_url": "https://api.github.com/users/philippe2803/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-31T13:03:12Z",
        "updated_at": "2023-09-01T18:21:45Z",
        "closed_at": "2023-09-01T15:36:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10047",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10047",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10047.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10047.patch",
            "merged_at": "2023-09-01T15:36:34Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\nThis adds sqlite-vss as an option for a vector database. Contains the code and a few tests. Tests are passing and the library sqlite-vss is added as optional as explained in the contributing guidelines. I adjusted the code for lint/black/ and mypy. It looks that everything is currently passing.\r\n\r\nAdding sqlite-vss was mentioned in this issue: https://github.com/langchain-ai/langchain/issues/1019. \r\nAlso mentioned here in the sqlite-vss repo for the curious: https://github.com/asg017/sqlite-vss/issues/66\r\n\r\nMaintainer tag: @baskaryan\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10047/reactions",
            "total_count": 5,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10047/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10046",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10046/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10046/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10046/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10046",
        "id": 1875422616,
        "node_id": "PR_kwDOIPDwls5ZO5yW",
        "number": 10046,
        "title": "Feature/add sqlite vss",
        "user": {
            "login": "philippe2803",
            "id": 4492530,
            "node_id": "MDQ6VXNlcjQ0OTI1MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4492530?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/philippe2803",
            "html_url": "https://github.com/philippe2803",
            "followers_url": "https://api.github.com/users/philippe2803/followers",
            "following_url": "https://api.github.com/users/philippe2803/following{/other_user}",
            "gists_url": "https://api.github.com/users/philippe2803/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/philippe2803/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/philippe2803/subscriptions",
            "organizations_url": "https://api.github.com/users/philippe2803/orgs",
            "repos_url": "https://api.github.com/users/philippe2803/repos",
            "events_url": "https://api.github.com/users/philippe2803/events{/privacy}",
            "received_events_url": "https://api.github.com/users/philippe2803/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T12:23:51Z",
        "updated_at": "2023-08-31T12:24:11Z",
        "closed_at": "2023-08-31T12:24:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10046",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10046",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10046.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10046.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10046/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10046/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10045",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10045/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10045/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10045/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10045",
        "id": 1875375970,
        "node_id": "I_kwDOIPDwls5vx_di",
        "number": 10045,
        "title": "`create_pandas_dataframe_agent` does not pass the `handle_parsing_error` variable into the underlying Agent.",
        "user": {
            "login": "limgw1",
            "id": 60544264,
            "node_id": "MDQ6VXNlcjYwNTQ0MjY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/60544264?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/limgw1",
            "html_url": "https://github.com/limgw1",
            "followers_url": "https://api.github.com/users/limgw1/followers",
            "following_url": "https://api.github.com/users/limgw1/following{/other_user}",
            "gists_url": "https://api.github.com/users/limgw1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/limgw1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/limgw1/subscriptions",
            "organizations_url": "https://api.github.com/users/limgw1/orgs",
            "repos_url": "https://api.github.com/users/limgw1/repos",
            "events_url": "https://api.github.com/users/limgw1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/limgw1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-08-31T11:53:16Z",
        "updated_at": "2023-09-03T21:31:02Z",
        "closed_at": "2023-09-03T21:31:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython Version: 3.11.4 (main, Jul  5 2023, 08:40:20) [Clang 14.0.6 ]\r\nLangchain Version: 0.0.273\r\nJupyter Notebook Version: 5.3.0\n\n### Who can help?\n\n@hwchase17 \r\n@agola\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce the behaviour:\r\n1. Create a function to be used \r\n```\r\ndef _handle_error(error) -> str:  \r\n    return str(error)[:50]\r\n```\r\n2. Run `create_pandas_dataframe_agent`, pass in `handle_parsing_errors=_handle_error`\r\n\n\n### Expected behavior\n\nI expect an output similar to the last section of https://python.langchain.com/docs/modules/agents/how_to/handle_parsing_errors, but instead I still get the normal OutputParserError",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10045/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10045/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10044",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10044/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10044/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10044/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10044",
        "id": 1875323135,
        "node_id": "I_kwDOIPDwls5vxyj_",
        "number": 10044,
        "title": "Getting invalid URL post after updating langchain from 0.0.200 to 0.0.267 ",
        "user": {
            "login": "salexln",
            "id": 8012625,
            "node_id": "MDQ6VXNlcjgwMTI2MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8012625?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/salexln",
            "html_url": "https://github.com/salexln",
            "followers_url": "https://api.github.com/users/salexln/followers",
            "following_url": "https://api.github.com/users/salexln/following{/other_user}",
            "gists_url": "https://api.github.com/users/salexln/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/salexln/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/salexln/subscriptions",
            "organizations_url": "https://api.github.com/users/salexln/orgs",
            "repos_url": "https://api.github.com/users/salexln/repos",
            "events_url": "https://api.github.com/users/salexln/events{/privacy}",
            "received_events_url": "https://api.github.com/users/salexln/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-31T11:17:31Z",
        "updated_at": "2023-12-07T16:05:30Z",
        "closed_at": "2023-12-07T16:05:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n`langchain` -  0.0.267 \r\n`openai` - 0.27.7\r\nMacOS 13.4.1 (22F82)\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThis code was working when I used `langchain 0.0.200` (The call is to `AzureOpenAI` endpoint)\r\n```python\r\nfrom langchain.chat_models import ChatOpenAI\r\n\r\nllm = ChatOpenAI(model_name=model_config.model_engine,\r\n                 deployment_id=model_config.model_engine,\r\n                 temperature=model_config.temperature,\r\n                 max_tokens=model_config.max_tokens_for_request,\r\n                 top_p=model_config.top_p,\r\n                 openai_api_key=endpoint_config.api_key.secret,\r\n                 api_base=endpoint_config.api_base,\r\n                 api_type=endpoint_config.api_type,\r\n                 api_version=endpoint_config.api_version)\r\n\r\nchat_prompt = [SystemMessage(...), HumanMessage(...)]\r\nresponse = llm(chat_prompt)\r\n```\r\n\r\nOnce I updated `langchain` to `0.0.267`, I'm getting this error\r\n```shell \r\nopenai.error.InvalidRequestError: Invalid URL (POST /v1/openai/deployments/gpt-35-turbo/chat/completions)\r\n```\r\n\r\nThe endpoint itself is working (once I reverted back to `0.0.200` all started to work again)\n\n### Expected behavior\n\nI except to get an answer from the LLM",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10044/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10044/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10041",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10041/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10041/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10041/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10041",
        "id": 1875250044,
        "node_id": "PR_kwDOIPDwls5ZOT-B",
        "number": 10041,
        "title": "fix wrong import line in cassandra doc page for vector store",
        "user": {
            "login": "hemidactylus",
            "id": 14221764,
            "node_id": "MDQ6VXNlcjE0MjIxNzY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/14221764?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemidactylus",
            "html_url": "https://github.com/hemidactylus",
            "followers_url": "https://api.github.com/users/hemidactylus/followers",
            "following_url": "https://api.github.com/users/hemidactylus/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemidactylus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemidactylus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemidactylus/subscriptions",
            "organizations_url": "https://api.github.com/users/hemidactylus/orgs",
            "repos_url": "https://api.github.com/users/hemidactylus/repos",
            "events_url": "https://api.github.com/users/hemidactylus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemidactylus/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-31T10:33:30Z",
        "updated_at": "2023-09-01T12:53:08Z",
        "closed_at": "2023-08-31T23:05:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10041",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10041",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10041.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10041.patch",
            "merged_at": "2023-08-31T23:05:46Z"
        },
        "body": "This fixes the exampe import line in the general \"cassandra\" doc page mdx file. (it was erroneously a copy of the chat message history import statement found below).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10041/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10041/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10040",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10040/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10040/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10040/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10040",
        "id": 1875216407,
        "node_id": "I_kwDOIPDwls5vxYgX",
        "number": 10040,
        "title": "Function calling use the wrong context",
        "user": {
            "login": "bertytobing",
            "id": 3992767,
            "node_id": "MDQ6VXNlcjM5OTI3Njc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3992767?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bertytobing",
            "html_url": "https://github.com/bertytobing",
            "followers_url": "https://api.github.com/users/bertytobing/followers",
            "following_url": "https://api.github.com/users/bertytobing/following{/other_user}",
            "gists_url": "https://api.github.com/users/bertytobing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bertytobing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bertytobing/subscriptions",
            "organizations_url": "https://api.github.com/users/bertytobing/orgs",
            "repos_url": "https://api.github.com/users/bertytobing/repos",
            "events_url": "https://api.github.com/users/bertytobing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bertytobing/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-31T10:12:09Z",
        "updated_at": "2023-12-07T16:05:35Z",
        "closed_at": "2023-12-07T16:05:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI'm using function calls to obtain and process data. I have two classes designed as follows:\r\n\r\n```python\r\nclass GetDataInput:\r\n    user_input: str = Field(description=\"User input\")\r\n\r\nclass ProcessDataInput:\r\n    data_url: str = Field(description=\"Link to the data\")\r\n```\r\n\r\nMoreover, I'm employing the `ConversationBufferWindowMemory`.\r\n\r\nWhile the initial question posed to the bot yields the expected response, I encounter an issue when asking a subsequent question. Occasionally, instead of fetching new data, the bot utilizes the previous `data_url`.\r\n\r\nHow can I effectively manage this kind of situation?\r\n\r\nThank you for your assistance.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10040/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10040/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10039",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10039/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10039/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10039/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10039",
        "id": 1875153129,
        "node_id": "PR_kwDOIPDwls5ZN_BA",
        "number": 10039,
        "title": "Impl chat message prompt type/dict (#10033)",
        "user": {
            "login": "skspark",
            "id": 118829871,
            "node_id": "U_kgDOBxUzLw",
            "avatar_url": "https://avatars.githubusercontent.com/u/118829871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skspark",
            "html_url": "https://github.com/skspark",
            "followers_url": "https://api.github.com/users/skspark/followers",
            "following_url": "https://api.github.com/users/skspark/following{/other_user}",
            "gists_url": "https://api.github.com/users/skspark/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skspark/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skspark/subscriptions",
            "organizations_url": "https://api.github.com/users/skspark/orgs",
            "repos_url": "https://api.github.com/users/skspark/repos",
            "events_url": "https://api.github.com/users/skspark/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skspark/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-31T09:35:45Z",
        "updated_at": "2023-09-01T00:12:45Z",
        "closed_at": "2023-09-01T00:12:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10039",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10039",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10039.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10039.patch",
            "merged_at": null
        },
        "body": "## Description\r\nDumping BaseMessagePromptTemplate to json and loading to original Template is difficult, as retrieving exact type of message type from json is not possible.\r\nTherefore, I suggest adding _msg_type / _type property on BaseMessagePromptTemplate and utilized it on _dict and added load_message_prompt,\r\nlike In [BasePromptTemplate dict method](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/schema/prompt_template.py#L108-L116).\r\n\r\n## Issue\r\n#10033 \r\n\r\n## Dependencies\r\nNone\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10039/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10039/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10038",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10038/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10038/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10038/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10038",
        "id": 1875139090,
        "node_id": "I_kwDOIPDwls5vxFoS",
        "number": 10038,
        "title": "streaming",
        "user": {
            "login": "poojitharamachandra",
            "id": 39840406,
            "node_id": "MDQ6VXNlcjM5ODQwNDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/39840406?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/poojitharamachandra",
            "html_url": "https://github.com/poojitharamachandra",
            "followers_url": "https://api.github.com/users/poojitharamachandra/followers",
            "following_url": "https://api.github.com/users/poojitharamachandra/following{/other_user}",
            "gists_url": "https://api.github.com/users/poojitharamachandra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/poojitharamachandra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/poojitharamachandra/subscriptions",
            "organizations_url": "https://api.github.com/users/poojitharamachandra/orgs",
            "repos_url": "https://api.github.com/users/poojitharamachandra/repos",
            "events_url": "https://api.github.com/users/poojitharamachandra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/poojitharamachandra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-31T09:27:42Z",
        "updated_at": "2023-12-07T16:05:40Z",
        "closed_at": "2023-12-07T16:05:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nis this implemented?\r\nhttps://github.com/langchain-ai/langchain/pull/1222/commits\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10038/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10038/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10037",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10037/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10037/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10037/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10037",
        "id": 1875107736,
        "node_id": "I_kwDOIPDwls5vw9-Y",
        "number": 10037,
        "title": "Problems with using LangChain Sagemaker Embedding for Llama 2.0 Inference Endpoint in Sagemaker",
        "user": {
            "login": "StolzAlexander",
            "id": 91973162,
            "node_id": "U_kgDOBXtmKg",
            "avatar_url": "https://avatars.githubusercontent.com/u/91973162?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/StolzAlexander",
            "html_url": "https://github.com/StolzAlexander",
            "followers_url": "https://api.github.com/users/StolzAlexander/followers",
            "following_url": "https://api.github.com/users/StolzAlexander/following{/other_user}",
            "gists_url": "https://api.github.com/users/StolzAlexander/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/StolzAlexander/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/StolzAlexander/subscriptions",
            "organizations_url": "https://api.github.com/users/StolzAlexander/orgs",
            "repos_url": "https://api.github.com/users/StolzAlexander/repos",
            "events_url": "https://api.github.com/users/StolzAlexander/events{/privacy}",
            "received_events_url": "https://api.github.com/users/StolzAlexander/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-31T09:09:17Z",
        "updated_at": "2023-08-31T11:11:55Z",
        "closed_at": "2023-08-31T11:11:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHi all\ud83d\ude0a ,\r\n\r\nI work in a network-isolated SageMaker environment. There I have hosted a llama 2.0 -7b chat Inference Endpoint (from [HF ](https://huggingface.co/meta-llama/Llama-2-7b-chat-hf))\r\n\r\nFor a project I would like to work with LangChain.\r\n\r\nCurrently I am failing with the embeddings.\r\nI can't use the HF embedding engine because of the network isolation.\r\nhf_embedding = HuggingFaceInstructEmbeddings()\r\n\r\nAlternatively I found a SageMaker embedding:\r\nhttps://python.langchain.com/docs/integrations/text_embedding/sagemaker-endpoint\r\n\r\nI used the same code from the docu:\r\n\r\n```python\r\nfrom typing import Dict, List\r\nfrom langchain.embeddings import SagemakerEndpointEmbeddings\r\nfrom langchain.embeddings.sagemaker_endpoint import EmbeddingsContentHandler\r\nimport json\r\n\r\nclass ContentHandler(EmbeddingsContentHandler):\r\n    content_type = \"application/json\"\r\n    accepts = \"application/json\"\r\n\r\n    def transform_input(self, inputs: list[str], model_kwargs: Dict) -> bytes:\r\n        \"\"\"\r\n        Transforms the input into bytes that can be consumed by SageMaker endpoint.\r\n        Args:\r\n            inputs: List of input strings.\r\n            model_kwargs: Additional keyword arguments to be passed to the endpoint.\r\n        Returns:\r\n            The transformed bytes input.\r\n        \"\"\"\r\n        # Example: inference.py expects a JSON string with a \"inputs\" key:\r\n        input_str = json.dumps({\"inputs\": inputs, **model_kwargs})  \r\n        return input_str.encode(\"utf-8\")\r\n\r\n    def transform_output(self, output: bytes) -> List[List[float]]:\r\n        \"\"\"\r\n        Transforms the bytes output from the endpoint into a list of embeddings.\r\n        Args:\r\n            output: The bytes output from SageMaker endpoint.\r\n        Returns:\r\n            The transformed output - list of embeddings\r\n        Note:\r\n            The length of the outer list is the number of input strings.\r\n            The length of the inner lists is the embedding dimension.\r\n        \"\"\"\r\n        # Example: inference.py returns a JSON string with the list of\r\n        # embeddings in a \"vectors\" key:\r\n        response_json = json.loads(output.read().decode(\"utf-8\"))\r\n        return response_json[\"vectors\"]`\r\n\r\n\r\ncontent_handler = ContentHandler()\r\n\r\nembeddings = SagemakerEndpointEmbeddings(\r\n    endpoint_name=ENDPOINT_NAME,\r\n    region_name=REGION_NAME,\r\n    content_handler=content_handler ,\r\n)\r\n\r\nquery_result = embeddings.embed_query(\"foo\")\r\n```\r\n\r\nBut i get the following error:\r\n`---------------------------------------------------------------------------\r\nModelError                                Traceback (most recent call last)\r\nFile /opt/conda/lib/python3.10/site-packages/langchain/embeddings/sagemaker_endpoint.py:153, in SagemakerEndpointEmbeddings._embedding_func(self, texts)\r\n[...]\r\n\r\nModelError: An error occurred (ModelError) when calling the InvokeEndpoint operation: Received client error (422) from primary with message \"Failed to deserialize the JSON body into the target type: inputs: invalid type: sequence, expected a string at line 1 column 11\". See https://eu-central-1.console.aws.amazon.com/cloudwatch/home?xxxxx in account xxxxxx for more information.`\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10037/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10037/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10035",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10035/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10035/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10035/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10035",
        "id": 1875045957,
        "node_id": "I_kwDOIPDwls5vwu5F",
        "number": 10035,
        "title": "Conversational Retrieval Chain.from_llm integration with router chains",
        "user": {
            "login": "JoAmps",
            "id": 64706945,
            "node_id": "MDQ6VXNlcjY0NzA2OTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/64706945?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JoAmps",
            "html_url": "https://github.com/JoAmps",
            "followers_url": "https://api.github.com/users/JoAmps/followers",
            "following_url": "https://api.github.com/users/JoAmps/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoAmps/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JoAmps/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoAmps/subscriptions",
            "organizations_url": "https://api.github.com/users/JoAmps/orgs",
            "repos_url": "https://api.github.com/users/JoAmps/repos",
            "events_url": "https://api.github.com/users/JoAmps/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JoAmps/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-31T08:32:26Z",
        "updated_at": "2023-12-07T16:05:44Z",
        "closed_at": "2023-12-07T16:05:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nThe idea is, that I have a vector store with a conversational retrieval chain.from_llm, and I want to create other functions such as send an email, etc. so that when a user queries for something, it determines if it should use the Conv retrieval chain or the other functions such as sending an email function, and it seems I need to use the router to achieve this, but when I do, I get a lot of errors such as\r\n \r\n```\r\n\"default_chain -> prompt\r\n  field required (type=value_error.missing)\r\ndefault_chain -> llm\r\n  field required (type=value_error.missing)\r\ndefault_chain -> combine_docs_chain\r\n  extra fields not permitted (type=value_error.extra)\r\n```\r\nHow do i integrate with conv retrieval chain with routers to achieve my purpose, the only examples i have seen do not use conv retrieval chain\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10035/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10035/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10034",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10034/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10034/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10034/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10034",
        "id": 1875031907,
        "node_id": "I_kwDOIPDwls5vwrdj",
        "number": 10034,
        "title": "context to pydantic_object",
        "user": {
            "login": "shon-otmazgin",
            "id": 17564565,
            "node_id": "MDQ6VXNlcjE3NTY0NTY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/17564565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shon-otmazgin",
            "html_url": "https://github.com/shon-otmazgin",
            "followers_url": "https://api.github.com/users/shon-otmazgin/followers",
            "following_url": "https://api.github.com/users/shon-otmazgin/following{/other_user}",
            "gists_url": "https://api.github.com/users/shon-otmazgin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shon-otmazgin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shon-otmazgin/subscriptions",
            "organizations_url": "https://api.github.com/users/shon-otmazgin/orgs",
            "repos_url": "https://api.github.com/users/shon-otmazgin/repos",
            "events_url": "https://api.github.com/users/shon-otmazgin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shon-otmazgin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-31T08:23:33Z",
        "updated_at": "2023-12-07T16:05:50Z",
        "closed_at": "2023-12-07T16:05:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nwhile parsing LLM output with `pydantic_object` it would be nice to send to the `parse` function `context` object , like `pydantic` docs does here: https://docs.pydantic.dev/latest/usage/validators/#validation-context\n\n### Motivation\n\nIn order to do validation on LLM output rather than just parse it, in some cases to do the validation we need some context.\n\n### Your contribution\n\nThis change may require to support `pydantic` v2 not sure about backword capabilities. \r\n\r\nin `PydanticOutputParser.parse` function insted of `parse_obj` we should use `model_validate` then we could send context object(it can be optional) to `model_validate`\r\n\r\nfrom pydantic:\r\n\r\n```python\r\n    @typing_extensions.deprecated(\r\n        'The `parse_obj` method is deprecated; use `model_validate` instead.', category=PydanticDeprecatedSince20\r\n    )\r\n    def parse_obj(cls: type[Model], obj: Any) -> Model:  # noqa: D102\r\n        warnings.warn('The `parse_obj` method is deprecated; use `model_validate` instead.', DeprecationWarning)\r\n        return cls.model_validate(obj)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10034/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10034/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10033",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10033/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10033/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10033/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10033",
        "id": 1875031189,
        "node_id": "I_kwDOIPDwls5vwrSV",
        "number": 10033,
        "title": "Add message type property method on BaseMessagePromptTemplate",
        "user": {
            "login": "skspark",
            "id": 118829871,
            "node_id": "U_kgDOBxUzLw",
            "avatar_url": "https://avatars.githubusercontent.com/u/118829871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skspark",
            "html_url": "https://github.com/skspark",
            "followers_url": "https://api.github.com/users/skspark/followers",
            "following_url": "https://api.github.com/users/skspark/following{/other_user}",
            "gists_url": "https://api.github.com/users/skspark/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skspark/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skspark/subscriptions",
            "organizations_url": "https://api.github.com/users/skspark/orgs",
            "repos_url": "https://api.github.com/users/skspark/repos",
            "events_url": "https://api.github.com/users/skspark/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skspark/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T08:23:10Z",
        "updated_at": "2023-09-01T00:13:23Z",
        "closed_at": "2023-09-01T00:13:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nI'm utilizing BaseMessagePromptTemplate with external DBs, for version control.\r\nHowever, dumping BaseMessagePromptTemplate to json and loading to original Template is difficult, as retrieving exact type of message type from json is not possible.\r\nTherefore, it would be useful to add _msg_type property on BaseMessagePromptTemplate, \r\nlike In [BasePromptTemplate dict method](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/schema/prompt_template.py#L108-L116).\r\n\r\n\r\n### Motivation\r\n\r\nDumping ChatPromptTemplate to json and loading to original Template is difficult,\r\nas retrieving exact type of MessageLike (Union[BaseMessagePromptTemplate, BaseMessage, BaseChatPromptTemplate]) property is difficult.\r\n\r\n### Your contribution\r\n\r\nIf you allow me, I'd like to make a pull request regarding to this.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10033/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10033/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10031",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10031/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10031/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10031/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10031",
        "id": 1875002896,
        "node_id": "I_kwDOIPDwls5vwkYQ",
        "number": 10031,
        "title": "Dynamic \"search_kwargs\" during RetrievalQAWithSourcesChain call",
        "user": {
            "login": "AguirreNicolas",
            "id": 37890346,
            "node_id": "MDQ6VXNlcjM3ODkwMzQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/37890346?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AguirreNicolas",
            "html_url": "https://github.com/AguirreNicolas",
            "followers_url": "https://api.github.com/users/AguirreNicolas/followers",
            "following_url": "https://api.github.com/users/AguirreNicolas/following{/other_user}",
            "gists_url": "https://api.github.com/users/AguirreNicolas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AguirreNicolas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AguirreNicolas/subscriptions",
            "organizations_url": "https://api.github.com/users/AguirreNicolas/orgs",
            "repos_url": "https://api.github.com/users/AguirreNicolas/repos",
            "events_url": "https://api.github.com/users/AguirreNicolas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AguirreNicolas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-31T08:06:10Z",
        "updated_at": "2023-12-05T17:47:16Z",
        "closed_at": "2023-12-05T17:47:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWhen using `RetrievalQAWithSourcesChain`, the chain call can't accept `search_kwargs` to pass then to the retriever like this:\r\n\r\n```python\r\nresponse = chain({\"question\": query ,'search_kwargs': search_kwargs})\r\n``` \r\n\r\nIn particular, I tried with `Milvus` and `MilvusRetriever` and natively could't find a way.\r\n\n\n### Motivation\n\nInstead to create the same chain but with different `search_kwargs` to be sended to the retriever, it would be usefull to allow [optionally] the search_kwargs sendeed dynamically in the call. \n\n### Your contribution\n\nI could allow this behaevoir with the following modification:\r\n\r\nAdding a `search_kwargs_key` to take `search_kwargs`  that then will be sended to self.retriever.get_relevant_documents( ..., `**search_kwargs`,...).\r\n\r\n```python\r\nclass customRetrievalQAWithSourcesChain(RetrievalQAWithSourcesChain):\r\n\r\n    search_kwargs_key:str = \"search_kwargs\"\r\n\r\n    def _get_docs(\r\n        self, inputs: Dict[str, Any], *, run_manager: CallbackManagerForChainRun\r\n    ) -> List[Document]:\r\n        question = inputs[self.question_key]\r\n        search_kwargs = inputs[self.search_kwargs_key]\r\n        docs = self.retriever.get_relevant_documents(\r\n            question, **search_kwargs, callbacks=run_manager.get_child()\r\n        )\r\n        return self._reduce_tokens_below_limit(docs)\r\n\r\n    async def _aget_docs(\r\n        self, inputs: Dict[str, Any], *, run_manager: AsyncCallbackManagerForChainRun\r\n    ) -> List[Document]:\r\n        question = inputs[self.question_key]\r\n        search_kwargs = inputs[self.search_kwargs_key]        \r\n        docs = await self.retriever.aget_relevant_documents(\r\n            question,**search_kwargs, callbacks=run_manager.get_child()\r\n        )\r\n        return self._reduce_tokens_below_limit(docs)\r\n```\r\n\r\nAnd finally allowing to VectorStoreRetriever take  `**search_kwargs` instead of `self.search_kwargs`\r\n\r\n```python\r\nclass customRetriever(VectorStoreRetriever):\r\n\r\n    def _get_relevant_documents(\r\n        self, query: str, *, run_manager: CallbackManagerForRetrieverRun, **search_kwargs: Any,\r\n    ) -> List[Document]:\r\n        if self.search_type == \"similarity\":\r\n            docs = self.vectorstore.similarity_search(query, **search_kwargs)\r\n        elif self.search_type == \"similarity_score_threshold\":\r\n            docs_and_similarities = (\r\n                self.vectorstore.similarity_search_with_relevance_scores(\r\n                    query, **search_kwargs\r\n                )\r\n            )\r\n            docs = [doc for doc, _ in docs_and_similarities]\r\n        elif self.search_type == \"mmr\":\r\n            docs = self.vectorstore.max_marginal_relevance_search(\r\n                query, **search_kwargs\r\n            )\r\n        else:\r\n            raise ValueError(f\"search_type of {self.search_type} not allowed.\")\r\n        return docs\r\n\r\n    async def _aget_relevant_documents(\r\n        self, query: str, *, run_manager: AsyncCallbackManagerForRetrieverRun,  **search_kwargs: Any,\r\n    ) -> List[Document]:\r\n        if self.search_type == \"similarity\":\r\n            docs = await self.vectorstore.asimilarity_search(\r\n                query, **search_kwargs\r\n            )\r\n        elif self.search_type == \"similarity_score_threshold\":\r\n            docs_and_similarities = (\r\n                await self.vectorstore.asimilarity_search_with_relevance_scores(\r\n                    query, **search_kwargs\r\n                )\r\n            )\r\n            docs = [doc for doc, _ in docs_and_similarities]\r\n        elif self.search_type == \"mmr\":\r\n            docs = await self.vectorstore.amax_marginal_relevance_search(\r\n                query, **search_kwargs\r\n            )\r\n        else:\r\n            raise ValueError(f\"search_type of {self.search_type} not allowed.\")\r\n        return docs \r\n```\r\n\r\nIf you consider this usefull I could open a PR (confirm please). I not, maybe someone can find this usefull.\r\n\r\nBest regards,",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10031/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10031/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10029",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10029/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10029/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10029/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10029",
        "id": 1874898180,
        "node_id": "PR_kwDOIPDwls5ZNICl",
        "number": 10029,
        "title": "Add AliCloudPaiEas class in langchain.llms to access alicloud pai-eas service.",
        "user": {
            "login": "hiigao",
            "id": 26385522,
            "node_id": "MDQ6VXNlcjI2Mzg1NTIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/26385522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hiigao",
            "html_url": "https://github.com/hiigao",
            "followers_url": "https://api.github.com/users/hiigao/followers",
            "following_url": "https://api.github.com/users/hiigao/following{/other_user}",
            "gists_url": "https://api.github.com/users/hiigao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hiigao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hiigao/subscriptions",
            "organizations_url": "https://api.github.com/users/hiigao/orgs",
            "repos_url": "https://api.github.com/users/hiigao/repos",
            "events_url": "https://api.github.com/users/hiigao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hiigao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T06:54:43Z",
        "updated_at": "2023-08-31T07:17:01Z",
        "closed_at": "2023-08-31T07:17:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10029",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10029",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10029.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10029.patch",
            "merged_at": null
        },
        "body": "### Description\r\n  This PR aims at adding new llm type  AliCloudPaiEAS to support service accessing for alicloud product named pai-eas service. PAI-EAS can help users to deploy llm models on alicloud.  \r\n\r\n### Usage\r\nThe user needs to start an eas service on alicloud and then set the service's access url and token as a params for AliCloudPaiEAS. Then AliCloudPaiEAS  object as a llm object is passed to the Chain to run an output. \r\nThe usage is like:\r\n`llm = AliCloudPaiEAS(eas_service_url=\"your_access_url\",eas_service_token=\"your_access_token\"`\r\n`llm_chain = LLMChain(prompt=prompt, llm=llm)\r\n`\r\n`llm_chain.run(\"Hello there.\")`\r\n\r\n### Test and example\r\nThe integration test case is located at libs/langchain/tests/integration_tests/llms/test_alicloud_eas.py\r\nThe example notebook is located at docs/extras/integrations/lls/alicloud_api_eas.ipynb",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10029/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10029/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10028",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10028/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10028/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10028/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10028",
        "id": 1874888777,
        "node_id": "I_kwDOIPDwls5vwIhJ",
        "number": 10028,
        "title": "Does anyone created agent with tool which takes \"dataframe\" and \"user_input\" as input variables in langchain?",
        "user": {
            "login": "bmshambu",
            "id": 46180328,
            "node_id": "MDQ6VXNlcjQ2MTgwMzI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/46180328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmshambu",
            "html_url": "https://github.com/bmshambu",
            "followers_url": "https://api.github.com/users/bmshambu/followers",
            "following_url": "https://api.github.com/users/bmshambu/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmshambu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmshambu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmshambu/subscriptions",
            "organizations_url": "https://api.github.com/users/bmshambu/orgs",
            "repos_url": "https://api.github.com/users/bmshambu/repos",
            "events_url": "https://api.github.com/users/bmshambu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmshambu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-31T06:46:58Z",
        "updated_at": "2023-12-07T16:05:55Z",
        "closed_at": "2023-12-07T16:05:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nDoes anyone created agent with tool which takes \"dataframe\" and \"user_input\" as input variables in langchain?\r\nI do not want use dataframe agent which is there already in langchain. As I need pass further instruction in the prompt template.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10028/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10028/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10027",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10027/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10027/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10027/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10027",
        "id": 1874874756,
        "node_id": "I_kwDOIPDwls5vwFGE",
        "number": 10027,
        "title": "Issue: I dont know what the meaning of OPENAI_API_BASE and OPENAI_PROXY in ChatOpenAI",
        "user": {
            "login": "codeacme17",
            "id": 67408722,
            "node_id": "MDQ6VXNlcjY3NDA4NzIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/67408722?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/codeacme17",
            "html_url": "https://github.com/codeacme17",
            "followers_url": "https://api.github.com/users/codeacme17/followers",
            "following_url": "https://api.github.com/users/codeacme17/following{/other_user}",
            "gists_url": "https://api.github.com/users/codeacme17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/codeacme17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/codeacme17/subscriptions",
            "organizations_url": "https://api.github.com/users/codeacme17/orgs",
            "repos_url": "https://api.github.com/users/codeacme17/repos",
            "events_url": "https://api.github.com/users/codeacme17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/codeacme17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T06:35:39Z",
        "updated_at": "2023-08-31T08:32:27Z",
        "closed_at": "2023-08-31T08:32:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Can anyone tell me the difference between these two parameters? When setting up the ChatOpenAI model\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10027/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10027/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10025",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10025/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10025/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10025/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10025",
        "id": 1874819757,
        "node_id": "I_kwDOIPDwls5vv3qt",
        "number": 10025,
        "title": "Issue: AttributeError: 'list' object has no attribute 'embedding'",
        "user": {
            "login": "achilela",
            "id": 112531858,
            "node_id": "U_kgDOBrUZkg",
            "avatar_url": "https://avatars.githubusercontent.com/u/112531858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achilela",
            "html_url": "https://github.com/achilela",
            "followers_url": "https://api.github.com/users/achilela/followers",
            "following_url": "https://api.github.com/users/achilela/following{/other_user}",
            "gists_url": "https://api.github.com/users/achilela/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/achilela/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/achilela/subscriptions",
            "organizations_url": "https://api.github.com/users/achilela/orgs",
            "repos_url": "https://api.github.com/users/achilela/repos",
            "events_url": "https://api.github.com/users/achilela/events{/privacy}",
            "received_events_url": "https://api.github.com/users/achilela/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-08-31T05:40:08Z",
        "updated_at": "2023-12-07T16:06:00Z",
        "closed_at": "2023-12-07T16:05:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHello, \r\nI am facing some issues with the code I am trying to run as it did run perfectly up until recently when an Error started being thrown out as AttributeError: 'list' object has no attribute 'embedding'. Below is the traceback if the error. Please do let me know if some code snippet excerpts will also be needed to facilitate debugging the code.\r\n\r\nTraceback:\r\nFile \"/home/ataliba/llm/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py\", line 552, in _run_script\r\n    exec(code, module.__dict__)\r\nFile \"/home/ataliba/LLM_Workshop/Experimental_Lama_QA_Retrieval/Andro_GPT_Llama2.py\", line 268, in <module>\r\n    response = qa_chain.run(user_query, callbacks=[cb])\r\nFile \"/home/ataliba/llm/lib/python3.10/site-packages/langchain/chains/base.py\", line 481, in run\r\n    return self(args[0], callbacks=callbacks, tags=tags, metadata=metadata)[\r\nFile \"/home/ataliba/llm/lib/python3.10/site-packages/langchain/chains/base.py\", line 288, in __call__\r\n    raise e\r\nFile \"/home/ataliba/llm/lib/python3.10/site-packages/langchain/chains/base.py\", line 282, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\nFile \"/home/ataliba/llm/lib/python3.10/site-packages/langchain/chains/conversational_retrieval/base.py\", line 134, in _call\r\n    docs = self._get_docs(new_question, inputs, run_manager=_run_manager)\r\nFile \"/home/ataliba/llm/lib/python3.10/site-packages/langchain/chains/conversational_retrieval/base.py\", line 286, in _get_docs\r\n    docs = self.retriever.get_relevant_documents(\r\nFile \"/home/ataliba/llm/lib/python3.10/site-packages/langchain/schema/retriever.py\", line 208, in get_relevant_documents\r\n    raise e\r\nFile \"/home/ataliba/llm/lib/python3.10/site-packages/langchain/schema/retriever.py\", line 201, in get_relevant_documents\r\n    result = self._get_relevant_documents(\r\nFile \"/home/ataliba/llm/lib/python3.10/site-packages/langchain/vectorstores/base.py\", line 571, in _get_relevant_documents\r\n    docs = self.vectorstore.max_marginal_relevance_search(\r\nFile \"/home/ataliba/llm/lib/python3.10/site-packages/langchain/vectorstores/docarray/base.py\", line 197, in max_marginal_relevance_search\r\n    np.array(query_embedding), docs.embedding, k=k\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10025/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10025/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10024",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10024/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10024/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10024/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10024",
        "id": 1874817574,
        "node_id": "PR_kwDOIPDwls5ZM20G",
        "number": 10024,
        "title": "add bloomz_7b, llama-2-7b, llama-2-13b, llama-2-70b to ErnieBotChat",
        "user": {
            "login": "Hunsmore",
            "id": 12408465,
            "node_id": "MDQ6VXNlcjEyNDA4NDY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12408465?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Hunsmore",
            "html_url": "https://github.com/Hunsmore",
            "followers_url": "https://api.github.com/users/Hunsmore/followers",
            "following_url": "https://api.github.com/users/Hunsmore/following{/other_user}",
            "gists_url": "https://api.github.com/users/Hunsmore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Hunsmore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Hunsmore/subscriptions",
            "organizations_url": "https://api.github.com/users/Hunsmore/orgs",
            "repos_url": "https://api.github.com/users/Hunsmore/repos",
            "events_url": "https://api.github.com/users/Hunsmore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Hunsmore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T05:37:31Z",
        "updated_at": "2023-08-31T07:38:56Z",
        "closed_at": "2023-08-31T07:38:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10024",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10024",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10024.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10024.patch",
            "merged_at": "2023-08-31T07:38:55Z"
        },
        "body": "  - Description: Add bloomz_7b, llama-2-7b, llama-2-13b, llama-2-70b to ErnieBotChat, which only supported ERNIE-Bot-turbo and ERNIE-Bot.\r\n  - Issue: #10022,\r\n  - Dependencies: no extra dependencies",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10024/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10024/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10023",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10023/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10023/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10023/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10023",
        "id": 1874814732,
        "node_id": "PR_kwDOIPDwls5ZM2No",
        "number": 10023,
        "title": "Fix link in Neo4j provider page",
        "user": {
            "login": "tomasonjo",
            "id": 19948365,
            "node_id": "MDQ6VXNlcjE5OTQ4MzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/19948365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomasonjo",
            "html_url": "https://github.com/tomasonjo",
            "followers_url": "https://api.github.com/users/tomasonjo/followers",
            "following_url": "https://api.github.com/users/tomasonjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomasonjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomasonjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomasonjo/subscriptions",
            "organizations_url": "https://api.github.com/users/tomasonjo/orgs",
            "repos_url": "https://api.github.com/users/tomasonjo/repos",
            "events_url": "https://api.github.com/users/tomasonjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomasonjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T05:34:02Z",
        "updated_at": "2023-08-31T07:32:42Z",
        "closed_at": "2023-08-31T07:32:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10023",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10023",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10023.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10023.patch",
            "merged_at": "2023-08-31T07:32:42Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10023/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10023/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10022",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10022/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10022/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10022/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10022",
        "id": 1874805344,
        "node_id": "I_kwDOIPDwls5vv0Jg",
        "number": 10022,
        "title": "Support more models for ErnieBotChat",
        "user": {
            "login": "Hunsmore",
            "id": 12408465,
            "node_id": "MDQ6VXNlcjEyNDA4NDY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12408465?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Hunsmore",
            "html_url": "https://github.com/Hunsmore",
            "followers_url": "https://api.github.com/users/Hunsmore/followers",
            "following_url": "https://api.github.com/users/Hunsmore/following{/other_user}",
            "gists_url": "https://api.github.com/users/Hunsmore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Hunsmore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Hunsmore/subscriptions",
            "organizations_url": "https://api.github.com/users/Hunsmore/orgs",
            "repos_url": "https://api.github.com/users/Hunsmore/repos",
            "events_url": "https://api.github.com/users/Hunsmore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Hunsmore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-31T05:22:17Z",
        "updated_at": "2023-12-13T16:07:03Z",
        "closed_at": "2023-12-13T16:07:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nThe class ErnieBotChat defined in libs/langchain/langchain/chat_models/ernie.py only supports 2 models, which are ERNIE-Bot-turbo and ERNIE-Bot. While a bunch of new models are supported by BCE (Baidu Cloud Engine), such as llama-2-7b chat (https://cloud.baidu.com/doc/WENXINWORKSHOP/s/Rlki1zlai). It would be better that this class supported more models. \r\n\r\n### Motivation\r\n\r\nWhen I was using ErnieBotChat, I've found that ErnieBotChat cannot recognize models other than  ERNIE-Bot-turbo and ERNIE-Bot. Instead, it raised an error \"Got unknown model_name {self.model_name}\".\r\n\r\n### Your contribution\r\n\r\nIf possible, I would be happy to help resolve this issue. I plan to add all models BCE (Baidu Cloud Engine) supports at this time(2023-8-31). The fixes will be simple, just add more cases around line 106 in the file  libs/langchain/langchain/chat_models/ernie.py  from the master branch.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10022/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10022/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10021",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10021/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10021/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10021/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10021",
        "id": 1874803645,
        "node_id": "PR_kwDOIPDwls5ZMz3U",
        "number": 10021,
        "title": "Add integration TCs on bing search (#8068)",
        "user": {
            "login": "skspark",
            "id": 118829871,
            "node_id": "U_kgDOBxUzLw",
            "avatar_url": "https://avatars.githubusercontent.com/u/118829871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skspark",
            "html_url": "https://github.com/skspark",
            "followers_url": "https://api.github.com/users/skspark/followers",
            "following_url": "https://api.github.com/users/skspark/following{/other_user}",
            "gists_url": "https://api.github.com/users/skspark/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skspark/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skspark/subscriptions",
            "organizations_url": "https://api.github.com/users/skspark/orgs",
            "repos_url": "https://api.github.com/users/skspark/repos",
            "events_url": "https://api.github.com/users/skspark/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skspark/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T05:20:00Z",
        "updated_at": "2023-08-31T07:34:07Z",
        "closed_at": "2023-08-31T07:34:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10021",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10021",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10021.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10021.patch",
            "merged_at": "2023-08-31T07:34:06Z"
        },
        "body": "## Description\r\nAdded integration TCs on bing search utility\r\n\r\n## Issue\r\n#8068 \r\n\r\n## Dependencies\r\nNone\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10021/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10021/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10020",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10020/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10020/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10020/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10020",
        "id": 1874788586,
        "node_id": "PR_kwDOIPDwls5ZMwog",
        "number": 10020,
        "title": "Fix Typo : `openai_api_key` -> `serpapi_api_key`",
        "user": {
            "login": "ANTARES-KOR",
            "id": 75557859,
            "node_id": "MDQ6VXNlcjc1NTU3ODU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/75557859?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ANTARES-KOR",
            "html_url": "https://github.com/ANTARES-KOR",
            "followers_url": "https://api.github.com/users/ANTARES-KOR/followers",
            "following_url": "https://api.github.com/users/ANTARES-KOR/following{/other_user}",
            "gists_url": "https://api.github.com/users/ANTARES-KOR/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ANTARES-KOR/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ANTARES-KOR/subscriptions",
            "organizations_url": "https://api.github.com/users/ANTARES-KOR/orgs",
            "repos_url": "https://api.github.com/users/ANTARES-KOR/repos",
            "events_url": "https://api.github.com/users/ANTARES-KOR/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ANTARES-KOR/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T04:59:56Z",
        "updated_at": "2023-09-04T03:46:52Z",
        "closed_at": "2023-08-31T07:33:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10020",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10020",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10020.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10020.patch",
            "merged_at": "2023-08-31T07:33:13Z"
        },
        "body": "Fixed typo in the comments Notebook. (which says `openai_api_key` for SerpAPI)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10020/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10020/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10019",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10019/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10019/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10019/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10019",
        "id": 1874719531,
        "node_id": "I_kwDOIPDwls5vvfMr",
        "number": 10019,
        "title": "fix: Loading documents from a Youtube Url",
        "user": {
            "login": "shawnesquivel",
            "id": 94336773,
            "node_id": "U_kgDOBZ93BQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/94336773?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shawnesquivel",
            "html_url": "https://github.com/shawnesquivel",
            "followers_url": "https://api.github.com/users/shawnesquivel/followers",
            "following_url": "https://api.github.com/users/shawnesquivel/following{/other_user}",
            "gists_url": "https://api.github.com/users/shawnesquivel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shawnesquivel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shawnesquivel/subscriptions",
            "organizations_url": "https://api.github.com/users/shawnesquivel/orgs",
            "repos_url": "https://api.github.com/users/shawnesquivel/repos",
            "events_url": "https://api.github.com/users/shawnesquivel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shawnesquivel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T03:19:25Z",
        "updated_at": "2023-12-07T16:06:10Z",
        "closed_at": "2023-12-07T16:06:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nMacOS M2 13.4.1 (22F82)\r\n\r\n### Who can help?\r\n\r\n@eyurtsev \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nSteps to reproduce behaviour:\r\n1. Run the [tutorial](https://python.langchain.com/docs/integrations/document_loaders/youtube_audio) with the default parameters `save_dir = \"~/Downloads/YouTube\"`\r\n2. After calling `docs = loader.load()` the docs will be empty\r\n\r\n\r\n\r\nI have implemented a dummy fix for the interim. \r\n\r\nThe error is here in this file: from langchain.document_loaders.blob_loaders.youtube_audio import YoutubeAudioLoader\r\n\r\n`YouTubeAudioLoader.yield_blobs` method\r\nloader = FileSystemBlobLoader(self.save_dir, glob=\"*.m4a\")\r\n\r\n```\r\n       # This doesn't always work (MacOS)\r\n        loader = FileSystemBlobLoader(self.save_dir, glob=\"*.m4a\")\r\n```\r\n\r\nThe reason it doesn't work is that it's trying to use ~/Downloads/YouTube.\r\n\r\nThe fix I propose is either:\r\n- Use the FULL file path in `save_dir` in the tutorial.\r\n- Replace the problematic line with this, so that it finds the actual directory, even if you prefer to use `~` for specifying file paths.\r\n\r\n```\r\n        loader = FileSystemBlobLoader(os.path.expanduser(self.save_dir), glob=\"*.m4a\")\r\n```\r\n\r\n### Expected behavior\r\n\r\nThere should be documents in the loader.load() variable.\r\n\r\n\r\n### My Fix\r\n```\r\n   # Yield the written blobs\r\n        \"\"\"\r\n        you could fix save_dir like this...\r\n\r\n        (old)\r\n        save_dir = \"~/Downloads/YouTube\"\r\n        (new)\r\n        \"/Users/shawnesquivel/Downloads/YouTube\"\r\n\r\n        \"\"\"\r\n\r\n\r\n        # This doesn't always work (MacOS)\r\n        loader = FileSystemBlobLoader(self.save_dir, glob=\"*.m4a\")\r\n\r\n        # This works\r\n        loader = FileSystemBlobLoader(os.path.expanduser(self.save_dir), glob=\"*.m4a\")\r\n\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10019/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10019/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10017",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10017/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10017/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10017/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10017",
        "id": 1874707605,
        "node_id": "I_kwDOIPDwls5vvcSV",
        "number": 10017,
        "title": "@dosu-bot",
        "user": {
            "login": "maggarwal25",
            "id": 135863452,
            "node_id": "U_kgDOCBkcnA",
            "avatar_url": "https://avatars.githubusercontent.com/u/135863452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maggarwal25",
            "html_url": "https://github.com/maggarwal25",
            "followers_url": "https://api.github.com/users/maggarwal25/followers",
            "following_url": "https://api.github.com/users/maggarwal25/following{/other_user}",
            "gists_url": "https://api.github.com/users/maggarwal25/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maggarwal25/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maggarwal25/subscriptions",
            "organizations_url": "https://api.github.com/users/maggarwal25/orgs",
            "repos_url": "https://api.github.com/users/maggarwal25/repos",
            "events_url": "https://api.github.com/users/maggarwal25/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maggarwal25/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-08-31T03:01:34Z",
        "updated_at": "2023-12-07T16:06:15Z",
        "closed_at": "2023-12-07T16:06:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "              @dosu-bot\r\n\r\nThe issue is that the \"string indices must be indices\", but your transformation does not deal with that. Here is the curretn code, please see below and change to avoid this error:\r\n\r\n```from langchain.docstore.document import Document\r\nfrom typing import Dict\r\nfrom langchain import PromptTemplate, SagemakerEndpoint\r\nfrom langchain.llms.sagemaker_endpoint import LLMContentHandler\r\nfrom langchain.chains.question_answering import load_qa_chain\r\nimport json\r\n\r\nexample_doc_1 = \"\"\"\r\nstring\r\n\"\"\"\r\n\r\ndocs = [\r\n    Document(\r\n        page_content=example_doc_1,\r\n    )\r\n]\r\n\r\nquery = \"\"\"\r\nprompt\r\n\"\"\"\r\n\r\nprompt_template = \"\"\"Use the following pieces of context to answer the question at the end.\r\n\r\n{context}\r\n\r\nQuestion: {question}\r\nAnswer:\"\"\"\r\nPROMPT = PromptTemplate(\r\n    template=prompt_template, input_variables=[\"context\", \"question\"]\r\n)\r\n\r\nclass ContentHandler(LLMContentHandler):\r\n    content_type = \"application/json\"\r\n    accepts = \"application/json\"\r\n\r\n    def transform_input(self, prompt: str, model_kwargs: Dict) -> bytes:\r\n        input_dict = {\"inputs\": prompt, \"parameters\": model_kwargs}\r\n        return json.dumps(input_dict).encode('utf-8')\r\n\r\n    def transform_output(self, output: bytes) -> str:\r\n        response_json = json.loads(output.read().decode(\"utf-8\"))\r\n        print(\"output: \", response_json[0])\r\n        return response_json[0][\"generation\"]\r\n\r\ncontent_handler = ContentHandler()\r\n\r\nchain = load_qa_chain(\r\n    llm=SagemakerEndpoint(\r\n        endpoint_name=\"endpointname\",\r\n        credentials_profile_name=\"profilename\",\r\n        region_name=\"us-east-1\",\r\n        model_kwargs={\"temperature\": 1e-10, \"max_length\":500},\r\n        endpoint_kwargs={\"CustomAttributes\": \"accept_eula=true\"},\r\n        content_handler=content_handler,\r\n    ),\r\n    prompt=PROMPT,\r\n)\r\n\r\nchain({\"input_documents\": docs, \"question\": query}, return_only_outputs=True)```\r\n\r\n_Originally posted by @maggarwal25 in https://github.com/langchain-ai/langchain/issues/10012#issuecomment-1700300547_\r\n            ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10017/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10017/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10016",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10016/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10016/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10016/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10016",
        "id": 1874701323,
        "node_id": "PR_kwDOIPDwls5ZMeKO",
        "number": 10016,
        "title": "fix scoring profile example",
        "user": {
            "login": "CameronVetter",
            "id": 7763701,
            "node_id": "MDQ6VXNlcjc3NjM3MDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7763701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CameronVetter",
            "html_url": "https://github.com/CameronVetter",
            "followers_url": "https://api.github.com/users/CameronVetter/followers",
            "following_url": "https://api.github.com/users/CameronVetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/CameronVetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CameronVetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CameronVetter/subscriptions",
            "organizations_url": "https://api.github.com/users/CameronVetter/orgs",
            "repos_url": "https://api.github.com/users/CameronVetter/repos",
            "events_url": "https://api.github.com/users/CameronVetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CameronVetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T02:52:05Z",
        "updated_at": "2023-08-31T07:35:06Z",
        "closed_at": "2023-08-31T07:35:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10016",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10016",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10016.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10016.patch",
            "merged_at": "2023-08-31T07:35:06Z"
        },
        "body": "  - Description: A change in the documentation example for Azure Cognitive Vector Search with Scoring Profile so the example works as written\r\n  - Issue: #10015 \r\n  - Dependencies: None\r\n  - Tag maintainer: @baskaryan @ruoccofabrizio\r\n  - Twitter handle: @poshporcupine\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10016/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10016/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10015",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10015/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10015/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10015/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10015",
        "id": 1874685238,
        "node_id": "I_kwDOIPDwls5vvW02",
        "number": 10015,
        "title": "Azure Cognitive Search Scoring Profile does not work as documented",
        "user": {
            "login": "CameronVetter",
            "id": 7763701,
            "node_id": "MDQ6VXNlcjc3NjM3MDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7763701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CameronVetter",
            "html_url": "https://github.com/CameronVetter",
            "followers_url": "https://api.github.com/users/CameronVetter/followers",
            "following_url": "https://api.github.com/users/CameronVetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/CameronVetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CameronVetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CameronVetter/subscriptions",
            "organizations_url": "https://api.github.com/users/CameronVetter/orgs",
            "repos_url": "https://api.github.com/users/CameronVetter/repos",
            "events_url": "https://api.github.com/users/CameronVetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CameronVetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-31T02:30:27Z",
        "updated_at": "2023-12-08T16:05:06Z",
        "closed_at": "2023-12-08T16:05:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain                0.0.277\r\nazure-search-documents   11.4.0b8\r\npython 3.1.0.11\n\n### Who can help?\n\n@baskaryan\r\n@ruoccofabrizio\r\n\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nRepro steps:\r\n1. I took the code in https://github.com/langchain-ai/langchain/blob/master/docs/extras/integrations/vectorstores/azuresearch.ipynb and placed it in a python file and ran the chunk under \"Create a new index with a Scoring profile\"\r\n2. I executed the code and got the following scores:\r\n\r\n![image](https://github.com/langchain-ai/langchain/assets/7763701/b256a2cb-2310-4f77-a3c3-d7dff469fee5)\r\n\r\n3. I went into the Azure Search Index and adjusted the \"scoring_profile\" to have a boost of 1000 instead of 100 and got the exact same scores.\n\n### Expected behavior\n\nI expected all of the score to be 10 times larger than the scores I got.  After much experimentation I do not believe that scoring profiles would with a vector search if a search term is specified.  If \"None\" is specified the behavior is correct.  Change the last  line of the example to:\r\n\r\n`\r\nres = vector_store.similarity_search(query=\"Test 1\", k=3, search_type=\"similarity\")`\r\n\r\nAnd the results respect the Scoring profile and behave as expected when the scoring profile is changed. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10015/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10015/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10014",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10014/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10014/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10014/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10014",
        "id": 1874633351,
        "node_id": "PR_kwDOIPDwls5ZMO88",
        "number": 10014,
        "title": "`Yahoo Finance News` tool",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T01:55:26Z",
        "updated_at": "2023-09-04T16:52:27Z",
        "closed_at": "2023-09-03T21:43:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10014",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10014",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10014.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10014.patch",
            "merged_at": "2023-09-03T21:43:57Z"
        },
        "body": "Added:\r\n- the `Yahoo Finance News` tool\r\n- Ut-s\r\n- An example\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10014/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10014/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10013",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10013/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10013/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10013/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10013",
        "id": 1874542680,
        "node_id": "PR_kwDOIPDwls5ZL6_F",
        "number": 10013,
        "title": "refactor: rename to OpaquePrompts",
        "user": {
            "login": "zizhong",
            "id": 3625100,
            "node_id": "MDQ6VXNlcjM2MjUxMDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3625100?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zizhong",
            "html_url": "https://github.com/zizhong",
            "followers_url": "https://api.github.com/users/zizhong/followers",
            "following_url": "https://api.github.com/users/zizhong/following{/other_user}",
            "gists_url": "https://api.github.com/users/zizhong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zizhong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zizhong/subscriptions",
            "organizations_url": "https://api.github.com/users/zizhong/orgs",
            "repos_url": "https://api.github.com/users/zizhong/repos",
            "events_url": "https://api.github.com/users/zizhong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zizhong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-31T00:10:20Z",
        "updated_at": "2023-08-31T21:55:35Z",
        "closed_at": "2023-08-31T19:21:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10013",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10013",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10013.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10013.patch",
            "merged_at": "2023-08-31T19:21:25Z"
        },
        "body": "Renamed to OpaquePrompts\r\n\r\ncc @baskaryan Thanks in advance!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10013/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10013/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10012",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10012/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10012/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10012/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10012",
        "id": 1874476223,
        "node_id": "I_kwDOIPDwls5vujy_",
        "number": 10012,
        "title": "Issues with llama-2-7b-f",
        "user": {
            "login": "maggarwal25",
            "id": 135863452,
            "node_id": "U_kgDOCBkcnA",
            "avatar_url": "https://avatars.githubusercontent.com/u/135863452?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maggarwal25",
            "html_url": "https://github.com/maggarwal25",
            "followers_url": "https://api.github.com/users/maggarwal25/followers",
            "following_url": "https://api.github.com/users/maggarwal25/following{/other_user}",
            "gists_url": "https://api.github.com/users/maggarwal25/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maggarwal25/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maggarwal25/subscriptions",
            "organizations_url": "https://api.github.com/users/maggarwal25/orgs",
            "repos_url": "https://api.github.com/users/maggarwal25/repos",
            "events_url": "https://api.github.com/users/maggarwal25/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maggarwal25/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-08-30T22:43:26Z",
        "updated_at": "2023-11-30T13:20:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlatest versions for python and langchain\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI used the demo code to run Sagemaker using Langchain for llama-2-7b-f\r\n\r\nHowever, I'm getting the following issues:\r\n\r\n```\r\nValueError: Error raised by inference endpoint: An error occurred (ModelError) when calling the InvokeEndpoint operation: Received client error (424) from primary with message \"{\r\n \"code\":424,\r\n \"message\":\"prediction failure\",\r\n \"error\":\"string indices must be integers\"\r\n}\r\n```\r\n\r\nThis is what is shown from AWS Logs:\r\n`[INFO ] PyProcess - W-80-model-stdout: [1,0]<stdout>:TypeError: string indices must be integers`\r\n\r\nHow do I resolve this\n\n### Expected behavior\n\nShown:\r\n\r\n```\r\nValueError: Error raised by inference endpoint: An error occurred (ModelError) when calling the InvokeEndpoint operation: Received client error (424) from primary with message \"{\r\n \"code\":424,\r\n \"message\":\"prediction failure\",\r\n \"error\":\"string indices must be integers\"\r\n}\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10012/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10012/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10011",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10011/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10011/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10011/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10011",
        "id": 1874448914,
        "node_id": "I_kwDOIPDwls5vudIS",
        "number": 10011,
        "title": "No support for ConversationalRetrievalChain with passing in memory and system message",
        "user": {
            "login": "RishiMalhotra920",
            "id": 55925357,
            "node_id": "MDQ6VXNlcjU1OTI1MzU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/55925357?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RishiMalhotra920",
            "html_url": "https://github.com/RishiMalhotra920",
            "followers_url": "https://api.github.com/users/RishiMalhotra920/followers",
            "following_url": "https://api.github.com/users/RishiMalhotra920/following{/other_user}",
            "gists_url": "https://api.github.com/users/RishiMalhotra920/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RishiMalhotra920/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RishiMalhotra920/subscriptions",
            "organizations_url": "https://api.github.com/users/RishiMalhotra920/orgs",
            "repos_url": "https://api.github.com/users/RishiMalhotra920/repos",
            "events_url": "https://api.github.com/users/RishiMalhotra920/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RishiMalhotra920/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-08-30T22:14:38Z",
        "updated_at": "2023-09-27T05:03:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nThe latest langchain version\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @agola11 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n\r\nI have written a script that initializes a chat which has access to a faiss index. I want to pass in a system prompt to the conversational agent. How do I add a system prompt to the conversational agent while making sure that the chat history is passed in and not stored and updated in memory. The code below shows details\r\n```\r\n\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.chat_models import AzureChatOpenAI\r\n\r\n\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.vectorstores import FAISS\r\n\r\nfrom dotenv import load_dotenv\r\nfrom langchain.schema import SystemMessage\r\nload_dotenv()\r\nimport os\r\n\r\nsystem_message = SystemMessage(\r\n          content=\"You are an AI that always writes text backwards e.g. 'hello' becomes 'olleh'.\"\r\n      )\r\n\r\nembeddings = OpenAIEmbeddings(deployment=\"embeddings\",\r\n                              temperature=0,\r\n                              model=\"text-embedding-ada-002\",\r\n                              openai_api_type=\"azure\",\r\n                                openai_api_version=\"2023-03-15-preview\", \r\n                                openai_api_base=\"https://azcore-kusto-bot-openai.openai.azure.com/\", \r\n                                openai_api_key=os.getenv(\"OPENAI_API_KEY\"), chunk_size = 1)\r\n\r\nvectorstore = FAISS.load_local(\"faiss_index\", embeddings)\r\n\r\nprompt = \"Your name is AzCoreKustoCopilot\"\r\nllm=AzureChatOpenAI(deployment_name=\"16k-gpt-35\",\r\n                              model=\"gpt-35-turbo-16k\",\r\n                              openai_api_type=\"azure\",\r\n                                openai_api_version=\"2023-03-15-preview\", \r\n                                openai_api_base=\"https://azcore-kusto-bot-openai.openai.azure.com/\", \r\n                                openai_api_key=os.getenv(\"OPENAI_API_KEY\"))\r\n\r\nretriever = vectorstore.as_retriever()\r\n\r\ndef initialize_chat():\r\n    # retriever = vectorstore.as_retriever()\r\n    chat = ConversationalRetrievalChain.from_llm(llm, retriever=retriever)\r\n    print('this is chat', chat)\r\n    return chat\r\n\r\ndef answer_query(chat, user_query, chat_history):\r\n    \"\"\"\r\n    user_query is the question\r\n    chat_history is a list of lists: [[prev_prev_query, prev_prev_response], [prev_query, prev_response]]\r\n    we convert this into a list of tuples\r\n    \"\"\"\r\n    chat_history_tups = [tuple(el) for el in chat_history]\r\n    print(f\"user_query:{user_query}, chat_history: {chat_history_tups}\")\r\n    result = chat({\"question\":user_query, \"chat_history\": chat_history_tups})\r\n    return result[\"answer\"]\r\n\r\n\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nThere is no way to pass in a system message and chat history to a ConversationalRetrievalChain. Why is that?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10011/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10011/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10007",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10007/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10007/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10007/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10007",
        "id": 1874332785,
        "node_id": "PR_kwDOIPDwls5ZLNe-",
        "number": 10007,
        "title": "Bagatur/dereference tool schema",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-30T20:38:16Z",
        "updated_at": "2023-08-31T07:48:13Z",
        "closed_at": "2023-08-31T07:48:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10007",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10007",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10007.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10007.patch",
            "merged_at": "2023-08-31T07:48:12Z"
        },
        "body": "fix for #9375",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10007/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10007/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10006",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10006/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10006/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10006/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10006",
        "id": 1874332366,
        "node_id": "PR_kwDOIPDwls5ZLNZH",
        "number": 10006,
        "title": "Add ne comparator",
        "user": {
            "login": "edcohen08",
            "id": 31940792,
            "node_id": "MDQ6VXNlcjMxOTQwNzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/31940792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edcohen08",
            "html_url": "https://github.com/edcohen08",
            "followers_url": "https://api.github.com/users/edcohen08/followers",
            "following_url": "https://api.github.com/users/edcohen08/following{/other_user}",
            "gists_url": "https://api.github.com/users/edcohen08/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edcohen08/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edcohen08/subscriptions",
            "organizations_url": "https://api.github.com/users/edcohen08/orgs",
            "repos_url": "https://api.github.com/users/edcohen08/repos",
            "events_url": "https://api.github.com/users/edcohen08/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edcohen08/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-30T20:37:55Z",
        "updated_at": "2023-09-03T21:45:11Z",
        "closed_at": "2023-09-03T21:45:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10006",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10006",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10006.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10006.patch",
            "merged_at": "2023-09-03T21:45:11Z"
        },
        "body": "Description: Adds the not comparator and operator to pinecone, chroma and deeplake.\r\nIssue: Not a registered issue but when using a selfqueryretriever with pinecone I got this error + stacktrace when I entered a query that asked to not include specific data: \r\n \r\n>  raised following `error:`\r\n> Received unrecognized function ne. Valid functions are [<Operator.AND: 'and'>, <Operator.OR: 'or'>, <Operator.NOT: 'not'>, <Comparator.EQ: 'eq'>, <Comparator.GT: 'gt'>, <Comparator.GTE: 'gte'>, <Comparator.LT: 'lt'>, <Comparator.LTE: 'lte'>]\r\n\r\nI noticed that chroma and deeplake also support not equals/not filtering so I added it there as well\r\n\r\n\r\n[pinecone](https://docs.pinecone.io/docs/metadata-filtering#metadata-query-language)\r\n[chroma](https://docs.trychroma.com/usage-guide#filtering-by-metadata)\r\n[deeplake](https://docs.activeloop.ai/enterprise-features/compute-engine/querying-datasets/query-syntax#and-or-not)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10006/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10006/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10005",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10005/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10005/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10005/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10005",
        "id": 1874144920,
        "node_id": "PR_kwDOIPDwls5ZKkxD",
        "number": 10005,
        "title": "guides docs nits",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-30T18:06:32Z",
        "updated_at": "2023-08-30T19:33:40Z",
        "closed_at": "2023-08-30T18:07:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10005",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10005",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10005.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10005.patch",
            "merged_at": "2023-08-30T18:07:43Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10005/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10005/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10004",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10004/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10004/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10004/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10004",
        "id": 1874126698,
        "node_id": "PR_kwDOIPDwls5ZKg0q",
        "number": 10004,
        "title": "rename local llm guide",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-30T17:52:40Z",
        "updated_at": "2023-08-30T18:05:42Z",
        "closed_at": "2023-08-30T17:52:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10004",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10004",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10004.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10004.patch",
            "merged_at": "2023-08-30T17:52:47Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10004/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10004/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10003",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10003/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10003/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10003/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10003",
        "id": 1874114185,
        "node_id": "PR_kwDOIPDwls5ZKeHs",
        "number": 10003,
        "title": "make privacy guide section",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-30T17:42:50Z",
        "updated_at": "2023-08-30T18:52:23Z",
        "closed_at": "2023-08-30T17:49:20Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10003",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10003",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10003.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10003.patch",
            "merged_at": "2023-08-30T17:49:20Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10003/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10003/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10002",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10002/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10002/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10002/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10002",
        "id": 1874096952,
        "node_id": "PR_kwDOIPDwls5ZKaX7",
        "number": 10002,
        "title": "update moderation docs",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-30T17:30:10Z",
        "updated_at": "2023-08-30T17:49:56Z",
        "closed_at": "2023-08-30T17:34:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10002",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10002",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10002.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10002.patch",
            "merged_at": "2023-08-30T17:34:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10002/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10002/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10001",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10001/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10001/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10001/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10001",
        "id": 1874063727,
        "node_id": "PR_kwDOIPDwls5ZKTIU",
        "number": 10001,
        "title": "docs(text_splitter): update document of character splitter with tiktoken",
        "user": {
            "login": "caopulan",
            "id": 48318302,
            "node_id": "MDQ6VXNlcjQ4MzE4MzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/48318302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/caopulan",
            "html_url": "https://github.com/caopulan",
            "followers_url": "https://api.github.com/users/caopulan/followers",
            "following_url": "https://api.github.com/users/caopulan/following{/other_user}",
            "gists_url": "https://api.github.com/users/caopulan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/caopulan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/caopulan/subscriptions",
            "organizations_url": "https://api.github.com/users/caopulan/orgs",
            "repos_url": "https://api.github.com/users/caopulan/repos",
            "events_url": "https://api.github.com/users/caopulan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/caopulan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-30T17:04:17Z",
        "updated_at": "2023-09-03T21:45:46Z",
        "closed_at": "2023-09-03T21:45:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10001",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10001",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10001.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10001.patch",
            "merged_at": "2023-09-03T21:45:45Z"
        },
        "body": "The current document has not mentioned that splits larger than chunk size would happen. I update the related document and explain why it happens and how to solve it.\r\n\r\nrelated issue #1349 #3838 #2140\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10001/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10001/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10000",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10000/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10000/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10000/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10000",
        "id": 1874049470,
        "node_id": "PR_kwDOIPDwls5ZKQHR",
        "number": 10000,
        "title": "docs: `google-drive-tool` example fix",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-30T16:53:27Z",
        "updated_at": "2023-09-01T20:45:10Z",
        "closed_at": "2023-09-01T20:31:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10000",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10000",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10000.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10000.patch",
            "merged_at": "2023-09-01T20:31:26Z"
        },
        "body": "This notebook was mistakenly placed in the `toolkits` folder and appears within `Agents & Toolkits` menu. But it should be in `Tools`.\r\nMoved example into `tools/`; updated title to consistent format.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10000/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10000/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9999",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9999/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9999/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9999/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9999",
        "id": 1873990817,
        "node_id": "PR_kwDOIPDwls5ZKDte",
        "number": 9999,
        "title": "Google drive integration (lite)",
        "user": {
            "login": "pprados",
            "id": 204694,
            "node_id": "MDQ6VXNlcjIwNDY5NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/204694?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pprados",
            "html_url": "https://github.com/pprados",
            "followers_url": "https://api.github.com/users/pprados/followers",
            "following_url": "https://api.github.com/users/pprados/following{/other_user}",
            "gists_url": "https://api.github.com/users/pprados/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pprados/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pprados/subscriptions",
            "organizations_url": "https://api.github.com/users/pprados/orgs",
            "repos_url": "https://api.github.com/users/pprados/repos",
            "events_url": "https://api.github.com/users/pprados/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pprados/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-30T16:14:50Z",
        "updated_at": "2023-09-03T22:54:42Z",
        "closed_at": "2023-09-03T22:54:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9999",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9999",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9999.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9999.patch",
            "merged_at": "2023-09-03T22:54:42Z"
        },
        "body": "My other [pull-request](https://github.com/langchain-ai/langchain/pull/5135) is too big to be acceptable.\r\nI propose another 'lite' version.\r\n\r\nI update only notebook to propose an integration with the external project [`langchain-googledrive`](https://github.com/pprados/langchain-googledrive).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9999/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9999/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9998",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9998/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9998/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9998/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9998",
        "id": 1873976366,
        "node_id": "PR_kwDOIPDwls5ZKApb",
        "number": 9998,
        "title": "Buckler/dynamic retriever parameters",
        "user": {
            "login": "Buckler89",
            "id": 8536008,
            "node_id": "MDQ6VXNlcjg1MzYwMDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8536008?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Buckler89",
            "html_url": "https://github.com/Buckler89",
            "followers_url": "https://api.github.com/users/Buckler89/followers",
            "following_url": "https://api.github.com/users/Buckler89/following{/other_user}",
            "gists_url": "https://api.github.com/users/Buckler89/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Buckler89/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Buckler89/subscriptions",
            "organizations_url": "https://api.github.com/users/Buckler89/orgs",
            "repos_url": "https://api.github.com/users/Buckler89/repos",
            "events_url": "https://api.github.com/users/Buckler89/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Buckler89/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-30T16:05:38Z",
        "updated_at": "2023-09-05T09:06:39Z",
        "closed_at": "2023-09-03T21:57:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9998",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9998",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9998.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9998.patch",
            "merged_at": null
        },
        "body": "Description: Enhance kwargs Support in Internal Retriever Method for EnsembleRetriever and MergerRetriever Classes\r\n\r\nThis pull request introduces a valuable enhancement to the EnsembleRetriever and MergerRetriever classes by allowing the seamless flow of keyword arguments (**kwargs) to the internal _get_relevant_document method. This improvement empowers these classes with greater flexibility and customization when invoking the _get_relevant_document method.\r\n\r\nChanges Made:\r\n\r\nPreviously, the internal _get_relevant_document method within the EnsembleRetriever and MergerRetriever classes did not directly receive keyword arguments. This enhancement addresses this limitation by enabling the propagation of **kwargs directly to the said method. This enables developers to conveniently pass additional arguments and options, extending the capabilities of these retriever classes.\r\n\r\nBenefits:\r\n\r\nEnhanced Flexibility: With this enhancement, users can now pass arbitrary keyword arguments when calling the _get_relevant_document method within the EnsembleRetriever and MergerRetriever classes. This facilitates customizations, configuration adjustments, and integration with other components in a more seamless manner.\r\n\r\n  - Tag maintainer:  @baskaryan \r\n  - Twitter handle: Buckler89\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9998/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9998/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9997",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9997/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9997/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9997/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9997",
        "id": 1873886311,
        "node_id": "PR_kwDOIPDwls5ZJtK7",
        "number": 9997,
        "title": "bump 277",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-30T15:13:27Z",
        "updated_at": "2023-08-30T15:29:52Z",
        "closed_at": "2023-08-30T15:29:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9997",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9997",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9997.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9997.patch",
            "merged_at": "2023-08-30T15:29:51Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9997/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9997/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9996",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9996/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9996/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9996/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9996",
        "id": 1873859050,
        "node_id": "I_kwDOIPDwls5vsNHq",
        "number": 9996,
        "title": "Solve the problem of working with incomplete document chunks and multiple documents",
        "user": {
            "login": "kripper",
            "id": 1479804,
            "node_id": "MDQ6VXNlcjE0Nzk4MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1479804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kripper",
            "html_url": "https://github.com/kripper",
            "followers_url": "https://api.github.com/users/kripper/followers",
            "following_url": "https://api.github.com/users/kripper/following{/other_user}",
            "gists_url": "https://api.github.com/users/kripper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kripper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kripper/subscriptions",
            "organizations_url": "https://api.github.com/users/kripper/orgs",
            "repos_url": "https://api.github.com/users/kripper/repos",
            "events_url": "https://api.github.com/users/kripper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kripper/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-08-30T14:58:47Z",
        "updated_at": "2023-12-08T17:30:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAn agent for searching iteratively multiple documents without the problem of processing incomplete document chunks.\r\nAn option to include the metadata (source references) in the prompt.\n\n### Motivation\n\nNormally documents are split into chunks before being added to Chroma\r\nWhen the data is queried, Chroma returns these chunks of incomplete documents and feed them to the prompt.\r\nThus, the LLM sometimes is not provided with the complete information and will fail to answer.\r\nThis is a big problem, especially when the split occurs in the middle of a list (eg: a text listing the 10 commandments of god).\r\nThe LLM won't have a chance to know they are 10.\r\n\r\nBesides, LangChain \"stuff\" retriever is just mixing all these chunks together, without even separating them nor adding the documents metadata of each chunk. Mixing different sentences could confuse the LLM.\r\nIf this can be solved using document_prompt templates, this should be added to the documentation.\r\nI would also expect to include document souces into the prompt, so the LLM and provide the used sources (not all sources retrieved by the Chroma query).\r\n\r\nI blieve the queries should be processed by an agent with the ability to detect when there may be missing previous and/or following chunks in order to fetch them in a subsequent iteration if required.\n\n### Your contribution\n\nI can help coding and testing, but I need feedback for the design and to know which other existing componentes could/should be used.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9996/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9996/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9995",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9995/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9995/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9995/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9995",
        "id": 1873838895,
        "node_id": "PR_kwDOIPDwls5ZJitf",
        "number": 9995,
        "title": "refactor(document_loaders): abstract page evaluation logic in PlaywrightURLLoader",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-08-30T14:47:30Z",
        "updated_at": "2023-08-31T07:45:35Z",
        "closed_at": "2023-08-31T07:45:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9995",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9995",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9995.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9995.patch",
            "merged_at": "2023-08-31T07:45:34Z"
        },
        "body": "This PR brings structural updates to `PlaywrightURLLoader`, aiming at making the code more readable and extensible through the abstraction of page evaluation logic. These changes also align this implementation with a similar structure used in LangChain.js. \n\nThe key enhancements include:\n\n1. Introduction of 'PlaywrightEvaluator', an abstract base class for all evaluators. \n2. Creation of 'UnstructuredHtmlEvaluator', a concrete class implementing 'PlaywrightEvaluator', which uses `unstructured` library for processing page's HTML content.\n3. Extension of 'PlaywrightURLLoader' constructor to optionally accept an evaluator of the type 'PlaywrightEvaluator'. It defaults to 'UnstructuredHtmlEvaluator' if no evaluator is provided.\n4. Refactoring of 'load' and 'aload' methods to use the 'evaluate' and 'evaluate_async' methods of the provided 'PageEvaluator' for page content handling.\n\nThis update brings flexibility to 'PlaywrightURLLoader' as it can now utilize different evaluators for page processing depending on the requirement. The abstraction also improves code maintainability and readability.\n\nPlease find the reference for LangChain.js implementation [here](https://github.com/hwchase17/langchainjs/blob/29f3ffdcb34acce1f1db78078f4e7d184eaec6b5/langchain/src/document_loaders/web/playwright.ts#L59).\n\nMaintainers for review: @rlancemartin, @eyurtsev\n\nTwitter: @ywkim\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9995/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9995/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9993",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9993/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9993/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9993/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/9993",
        "id": 1873711576,
        "node_id": "I_kwDOIPDwls5vrpHY",
        "number": 9993,
        "title": "How to pass a custom prompt in graphQA or GraphCypherQA chain",
        "user": {
            "login": "pradeepdev-1995",
            "id": 41164884,
            "node_id": "MDQ6VXNlcjQxMTY0ODg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/41164884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pradeepdev-1995",
            "html_url": "https://github.com/pradeepdev-1995",
            "followers_url": "https://api.github.com/users/pradeepdev-1995/followers",
            "following_url": "https://api.github.com/users/pradeepdev-1995/following{/other_user}",
            "gists_url": "https://api.github.com/users/pradeepdev-1995/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pradeepdev-1995/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pradeepdev-1995/subscriptions",
            "organizations_url": "https://api.github.com/users/pradeepdev-1995/orgs",
            "repos_url": "https://api.github.com/users/pradeepdev-1995/repos",
            "events_url": "https://api.github.com/users/pradeepdev-1995/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pradeepdev-1995/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-08-30T13:42:34Z",
        "updated_at": "2023-12-06T17:43:00Z",
        "closed_at": "2023-12-06T17:42:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\n```\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.chains import GraphCypherQAChain\r\nfrom langchain.graphs import Neo4jGraph\r\ngraph = Neo4jGraph(\r\n    url=\"bolt://localhost:7687\", username=\"neo4j\", password=\"pleaseletmein\"\r\n)\r\nchain = GraphCypherQAChain.from_llm(ChatOpenAI(temperature=0), graph=graph, verbose=True)\r\nprint(chain.run(\"Question to the graph\"))\r\n```\r\nIn the above Code, How can I pass my custom prompt as promptTemplate? Please give me an example\n\n### Motivation\n\nCustom prompt support in Knowledge Graph QA\n\n### Your contribution\n\nCustom prompt support in Knowledge Graph QA",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9993/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9993/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9992",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9992/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9992/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9992/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/9992",
        "id": 1873467723,
        "node_id": "PR_kwDOIPDwls5ZIRSN",
        "number": 9992,
        "title": "Extend the FalkorDB QA demo",
        "user": {
            "login": "gkorland",
            "id": 753206,
            "node_id": "MDQ6VXNlcjc1MzIwNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/753206?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gkorland",
            "html_url": "https://github.com/gkorland",
            "followers_url": "https://api.github.com/users/gkorland/followers",
            "following_url": "https://api.github.com/users/gkorland/following{/other_user}",
            "gists_url": "https://api.github.com/users/gkorland/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gkorland/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gkorland/subscriptions",
            "organizations_url": "https://api.github.com/users/gkorland/orgs",
            "repos_url": "https://api.github.com/users/gkorland/repos",
            "events_url": "https://api.github.com/users/gkorland/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gkorland/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-08-30T11:20:04Z",
        "updated_at": "2023-08-30T14:50:14Z",
        "closed_at": "2023-08-30T14:13:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/9992",
            "html_url": "https://github.com/langchain-ai/langchain/pull/9992",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/9992.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/9992.patch",
            "merged_at": "2023-08-30T14:13:18Z"
        },
        "body": "  - Description: Extend the FalkorDB QA demo\r\n  - Tag maintainer: @baskaryan \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/9992/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/9992/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]