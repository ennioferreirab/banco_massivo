[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/830",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/830/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/830/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/830/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/830",
        "id": 1634963956,
        "node_id": "I_kwDOIWuq585hc5H0",
        "number": 830,
        "title": "Is Llama Index thread safe? Particularly the Index stores",
        "user": {
            "login": "kokhoor",
            "id": 2721145,
            "node_id": "MDQ6VXNlcjI3MjExNDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2721145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kokhoor",
            "html_url": "https://github.com/kokhoor",
            "followers_url": "https://api.github.com/users/kokhoor/followers",
            "following_url": "https://api.github.com/users/kokhoor/following{/other_user}",
            "gists_url": "https://api.github.com/users/kokhoor/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kokhoor/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kokhoor/subscriptions",
            "organizations_url": "https://api.github.com/users/kokhoor/orgs",
            "repos_url": "https://api.github.com/users/kokhoor/repos",
            "events_url": "https://api.github.com/users/kokhoor/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kokhoor/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-22T02:37:51Z",
        "updated_at": "2023-12-07T14:54:43Z",
        "closed_at": "2023-03-25T02:14:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\n\r\nI am writing a web application and since requests comes in different thread, would like to ask, is it safe to instantiate the index once, and reuse it, or do I have to explicitly re-instantiate the index store (I am using GPTSimpleVectorIndex) everytime I need to use index.query?\r\n\r\nThanks.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/830/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/829",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/829/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/829/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/829/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/829",
        "id": 1634761510,
        "node_id": "PR_kwDOIWuq585Mly8w",
        "number": 829,
        "title": "[fix] remove extract_prompt_from_xml call from guardrails",
        "user": {
            "login": "ShreyaR",
            "id": 5787923,
            "node_id": "MDQ6VXNlcjU3ODc5MjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5787923?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShreyaR",
            "html_url": "https://github.com/ShreyaR",
            "followers_url": "https://api.github.com/users/ShreyaR/followers",
            "following_url": "https://api.github.com/users/ShreyaR/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShreyaR/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShreyaR/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShreyaR/subscriptions",
            "organizations_url": "https://api.github.com/users/ShreyaR/orgs",
            "repos_url": "https://api.github.com/users/ShreyaR/repos",
            "events_url": "https://api.github.com/users/ShreyaR/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShreyaR/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-21T22:08:25Z",
        "updated_at": "2023-03-21T22:19:35Z",
        "closed_at": "2023-03-21T22:19:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/829",
            "html_url": "https://github.com/run-llama/llama_index/pull/829",
            "diff_url": "https://github.com/run-llama/llama_index/pull/829.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/829.patch",
            "merged_at": "2023-03-21T22:19:35Z"
        },
        "body": "This PR removes the call to `extract_prompt_from_xml` function in guardrails, and instead refers to the compiled prompt directly.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/829/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/829/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/828",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/828/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/828/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/828/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/828",
        "id": 1634700877,
        "node_id": "PR_kwDOIWuq585MlmXq",
        "number": 828,
        "title": "add support for langchain output parser",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-21T21:17:15Z",
        "updated_at": "2023-03-21T21:25:48Z",
        "closed_at": "2023-03-21T21:25:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/828",
            "html_url": "https://github.com/run-llama/llama_index/pull/828",
            "diff_url": "https://github.com/run-llama/llama_index/pull/828.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/828.patch",
            "merged_at": "2023-03-21T21:25:47Z"
        },
        "body": "next one up after guardrails ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/828/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/828/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/827",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/827/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/827/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/827/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/827",
        "id": 1634630432,
        "node_id": "I_kwDOIWuq585hbnsg",
        "number": 827,
        "title": "ValueError: int_id not found in nodes_dict",
        "user": {
            "login": "iraadit",
            "id": 1923813,
            "node_id": "MDQ6VXNlcjE5MjM4MTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1923813?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iraadit",
            "html_url": "https://github.com/iraadit",
            "followers_url": "https://api.github.com/users/iraadit/followers",
            "following_url": "https://api.github.com/users/iraadit/following{/other_user}",
            "gists_url": "https://api.github.com/users/iraadit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iraadit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iraadit/subscriptions",
            "organizations_url": "https://api.github.com/users/iraadit/orgs",
            "repos_url": "https://api.github.com/users/iraadit/repos",
            "events_url": "https://api.github.com/users/iraadit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iraadit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-03-21T20:15:47Z",
        "updated_at": "2023-03-21T21:13:42Z",
        "closed_at": "2023-03-21T21:13:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Why modifying the new _Chatbot_SEC.ipynb_ file and executing \r\n`agent_chain.run(input=\"My question?\")`\r\nI get the following error:\r\n```\r\nFile [.../llama_index/llama_index/indices/query/base.py:296], in BaseGPTIndexQuery.get_nodes_and_similarities_for_response(self, query_bundle)\r\n    289 \"\"\"Get list of tuples of node and similarity for response.\r\n    290 \r\n    291 First part of the tuple is the node.\r\n    292 Second part of tuple is the distance from query to the node.\r\n    293 If not applicable, it's None.\r\n    294 \"\"\"\r\n    295 similarity_tracker = SimilarityTracker()\r\n--> 296 nodes = self._get_nodes_for_response(\r\n...\r\n--> 221         raise ValueError(\"int_id not found in nodes_dict\")\r\n    222     nodes.append(self.nodes_dict[int_id])\r\n    223 return nodes\r\n\r\nValueError: int_id not found in nodes_dict\r\n```\r\n\r\nThe only change I see that could explain it would be that I replaced the years (that were of the type int) by countries (of the type string)\r\n\r\nDo you have any idea @jerryjliu \r\n\r\nThank you for your amazing work !",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/827/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/827/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/826",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/826/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/826/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/826/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/826",
        "id": 1634608346,
        "node_id": "I_kwDOIWuq585hbiTa",
        "number": 826,
        "title": "ImportError: cannot import name 'HyDEQueryTransform' from 'llama_index.indices.query.query_transform' and  \"ModuleNotFoundError: No module named 'a'\" for from a.langchain_helpers.text_splitter import TokenTextSplitter",
        "user": {
            "login": "gajavelli",
            "id": 5496552,
            "node_id": "MDQ6VXNlcjU0OTY1NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5496552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gajavelli",
            "html_url": "https://github.com/gajavelli",
            "followers_url": "https://api.github.com/users/gajavelli/followers",
            "following_url": "https://api.github.com/users/gajavelli/following{/other_user}",
            "gists_url": "https://api.github.com/users/gajavelli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gajavelli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gajavelli/subscriptions",
            "organizations_url": "https://api.github.com/users/gajavelli/orgs",
            "repos_url": "https://api.github.com/users/gajavelli/repos",
            "events_url": "https://api.github.com/users/gajavelli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gajavelli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-03-21T19:59:40Z",
        "updated_at": "2023-03-28T03:17:02Z",
        "closed_at": "2023-03-25T02:42:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "![image](https://user-images.githubusercontent.com/5496552/226725385-00f0b11c-71e3-4a6a-86f9-fb23dd8ea611.png)\r\n\r\nI got the latest llama_index version 0.4.34 and appears to be broken in two places  as shown in the screenshot.\r\n\r\nmy previous install 3 weeks right after rename of \r\nGPT Index -> LlamaIndex was working fine. \r\n\r\nAny pointers on how to resolve ?\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/826/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/826/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/825",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/825/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/825/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/825/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/825",
        "id": 1634366809,
        "node_id": "PR_kwDOIWuq585Mkewz",
        "number": 825,
        "title": "test read the docs ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-21T17:06:33Z",
        "updated_at": "2023-08-28T17:11:38Z",
        "closed_at": "2023-03-21T18:32:32Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/825",
            "html_url": "https://github.com/run-llama/llama_index/pull/825",
            "diff_url": "https://github.com/run-llama/llama_index/pull/825.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/825.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/825/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/825/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/824",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/824/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/824/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/824/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/824",
        "id": 1634342692,
        "node_id": "PR_kwDOIWuq585MkZsc",
        "number": 824,
        "title": "[version] bump version to 0.4.34",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-21T16:54:58Z",
        "updated_at": "2023-03-21T17:11:27Z",
        "closed_at": "2023-03-21T17:11:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/824",
            "html_url": "https://github.com/run-llama/llama_index/pull/824",
            "diff_url": "https://github.com/run-llama/llama_index/pull/824.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/824.patch",
            "merged_at": "2023-03-21T17:11:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/824/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/824/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/823",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/823/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/823/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/823/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/823",
        "id": 1634076876,
        "node_id": "I_kwDOIWuq585hZgjM",
        "number": 823,
        "title": "Azure OpenAI : Token indices sequence length is longer than the specified maximum sequence length for this model",
        "user": {
            "login": "nazkhan-8451",
            "id": 108809950,
            "node_id": "U_kgDOBnxO3g",
            "avatar_url": "https://avatars.githubusercontent.com/u/108809950?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nazkhan-8451",
            "html_url": "https://github.com/nazkhan-8451",
            "followers_url": "https://api.github.com/users/nazkhan-8451/followers",
            "following_url": "https://api.github.com/users/nazkhan-8451/following{/other_user}",
            "gists_url": "https://api.github.com/users/nazkhan-8451/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nazkhan-8451/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nazkhan-8451/subscriptions",
            "organizations_url": "https://api.github.com/users/nazkhan-8451/orgs",
            "repos_url": "https://api.github.com/users/nazkhan-8451/repos",
            "events_url": "https://api.github.com/users/nazkhan-8451/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nazkhan-8451/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-21T14:41:24Z",
        "updated_at": "2023-06-06T02:51:43Z",
        "closed_at": "2023-06-06T02:51:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "` llm = AzureOpenAI(deployment_name=\"gpt-35-turbo\", model_kwargs={\r\n    \"api_key\": openai.api_key,\r\n    \"api_base\": openai.api_base,\r\n    \"api_type\": openai.api_type,\r\n    \"api_version\": openai.api_version,\r\n})\r\nllm_predictor = LLMPredictor(llm=llm)\r\n\r\nembedding_llm = LangchainEmbedding(OpenAIEmbeddings(\r\n))\r\n\r\ndocuments = SimpleDirectoryReader('/dbfs/FileStore/shared_uploads').load_data()\r\n\r\nindex = GPTSimpleVectorIndex(documents) `\r\n\r\nError:  `Token indices sequence length is longer than the specified maximum sequence length for this model (3481 > 1024). Running this sequence through the model will result in indexing errors`\r\n\r\nThen I get `INFO:openai:error_code=None error_message='Too many inputs for model None. The max number of inputs is 1.  We hope to increase the number of inputs per request soon. Please contact us through an Azure support request at: https://go.microsoft.com/fwlink/?linkid=2213926 for further questions.' error_param=None error_type=invalid_request_error message='OpenAI API error received' stream_error=False`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/823/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/823/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/822",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/822/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/822/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/822/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/822",
        "id": 1633836870,
        "node_id": "PR_kwDOIWuq585MisGV",
        "number": 822,
        "title": "on refinement, previous-answer was included twice in prompt",
        "user": {
            "login": "mesa-ai",
            "id": 24790644,
            "node_id": "MDQ6VXNlcjI0NzkwNjQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/24790644?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mesa-ai",
            "html_url": "https://github.com/mesa-ai",
            "followers_url": "https://api.github.com/users/mesa-ai/followers",
            "following_url": "https://api.github.com/users/mesa-ai/following{/other_user}",
            "gists_url": "https://api.github.com/users/mesa-ai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mesa-ai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mesa-ai/subscriptions",
            "organizations_url": "https://api.github.com/users/mesa-ai/orgs",
            "repos_url": "https://api.github.com/users/mesa-ai/repos",
            "events_url": "https://api.github.com/users/mesa-ai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mesa-ai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-21T12:41:52Z",
        "updated_at": "2023-03-21T17:19:37Z",
        "closed_at": "2023-03-21T17:19:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/822",
            "html_url": "https://github.com/run-llama/llama_index/pull/822",
            "diff_url": "https://github.com/run-llama/llama_index/pull/822.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/822.patch",
            "merged_at": "2023-03-21T17:19:37Z"
        },
        "body": "For refinement queries, the \"existing answer\" was passed twice:\r\n- as part of context_msg (was \"new context\" from current node + previous answer)\r\n- standalone as {existing_answer} \r\nRemoved existing_answer from content_msg to save tokens an make query more precise.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/822/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/822/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/821",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/821/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/821/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/821/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/821",
        "id": 1633615176,
        "node_id": "I_kwDOIWuq585hXv1I",
        "number": 821,
        "title": "GPTChromaIndex indexing fails when documents contains an empty file",
        "user": {
            "login": "timonmat",
            "id": 15153521,
            "node_id": "MDQ6VXNlcjE1MTUzNTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/15153521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timonmat",
            "html_url": "https://github.com/timonmat",
            "followers_url": "https://api.github.com/users/timonmat/followers",
            "following_url": "https://api.github.com/users/timonmat/following{/other_user}",
            "gists_url": "https://api.github.com/users/timonmat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timonmat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timonmat/subscriptions",
            "organizations_url": "https://api.github.com/users/timonmat/orgs",
            "repos_url": "https://api.github.com/users/timonmat/repos",
            "events_url": "https://api.github.com/users/timonmat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timonmat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-21T10:29:03Z",
        "updated_at": "2023-06-06T02:49:15Z",
        "closed_at": "2023-06-06T02:49:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "trying to index a folder containing an empty document fails when using GPTChromaIndex. reproduced easily by creating an empty doc in a folder of files, and at least by using simpledirectoryreader. \r\n\r\n2023-03-21 12:14:31.215 Uncaught app exception\r\nTraceback (most recent call last):\r\n  File \"/lib/python3.10/site-packages/streamlit/runtime/scriptrunner/script_runner.py\", line 565, in _run_script\r\n    exec(code, module.__dict__)\r\n  File \"/github/ChatObsidian/pages/Index_to_chroma.py\", line 106, in <module>\r\n    build_chroma_index(documents, collection, reindex)\r\n  File \"/github/ChatObsidian/utils/chroma.py\", line 52, in build_chroma_index\r\n    index = GPTChromaIndex(documents, chroma_collection=_chroma_collection, embed_model=embed_model, prompt_helper=prompt_helper)\r\n  File \"/lib/python3.10/site-packages/llama_index/indices/vector_store/vector_indices.py\", line 500, in __init__\r\n    super().__init__(\r\n  File \"/lib/python3.10/site-packages/llama_index/indices/vector_store/base.py\", line 63, in __init__\r\n    super().__init__(\r\n  File \"/lib/python3.10/site-packages/llama_index/indices/base.py\", line 114, in __init__\r\n    self._index_struct = self.build_index_from_documents(documents)\r\n  File \"/lib/python3.10/site-packages/llama_index/token_counter/token_counter.py\", line 86, in wrapped_llm_predict\r\n    f_return_val = f(_self, *args, **kwargs)\r\n  File \"/lib/python3.10/site-packages/llama_index/indices/base.py\", line 286, in build_index_from_documents\r\n    return self._build_index_from_documents(documents)\r\n  File \"/lib/python3.10/site-packages/llama_index/indices/vector_store/base.py\", line 206, in _build_index_from_documents\r\n    self._add_document_to_index(index_struct, d)\r\n  File \"/lib/python3.10/site-packages/llama_index/indices/vector_store/base.py\", line 186, in _add_document_to_index\r\n    new_ids = self._vector_store.add(embedding_results)\r\n  File \"/lib/python3.10/site-packages/llama_index/vector_stores/chroma.py\", line 71, in add\r\n    self._collection.add(\r\n  File \"/lib/python3.10/site-packages/chromadb/api/models/Collection.py\", line 79, in add\r\n    ids = validate_ids(maybe_cast_one_to_many(ids))\r\n  File \"/lib/python3.10/site-packages/chromadb/api/types.py\", line 71, in maybe_cast_one_to_many\r\n    if isinstance(target[0], (int, float)):\r\nIndexError: list index out of range\r\n\r\n\r\nSeems more like a Chroma issue really. but I guess a workaround could be made either client side or on llama index.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/821/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/821/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/820",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/820/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/820/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/820/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/820",
        "id": 1633451973,
        "node_id": "PR_kwDOIWuq585MhYJG",
        "number": 820,
        "title": "Will/add confluence reader",
        "user": {
            "login": "zywilliamli",
            "id": 32046231,
            "node_id": "MDQ6VXNlcjMyMDQ2MjMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/32046231?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zywilliamli",
            "html_url": "https://github.com/zywilliamli",
            "followers_url": "https://api.github.com/users/zywilliamli/followers",
            "following_url": "https://api.github.com/users/zywilliamli/following{/other_user}",
            "gists_url": "https://api.github.com/users/zywilliamli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zywilliamli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zywilliamli/subscriptions",
            "organizations_url": "https://api.github.com/users/zywilliamli/orgs",
            "repos_url": "https://api.github.com/users/zywilliamli/repos",
            "events_url": "https://api.github.com/users/zywilliamli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zywilliamli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-03-21T08:47:33Z",
        "updated_at": "2023-03-24T23:35:47Z",
        "closed_at": "2023-03-24T23:35:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/820",
            "html_url": "https://github.com/run-llama/llama_index/pull/820",
            "diff_url": "https://github.com/run-llama/llama_index/pull/820.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/820.patch",
            "merged_at": null
        },
        "body": "adds a data connector for confluence, given a space id and/or a list of page ids\r\n\r\nnot sure if I need to add any docs or examples, please instruct :) ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/820/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/820/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/819",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/819/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/819/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/819/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/819",
        "id": 1633442356,
        "node_id": "I_kwDOIWuq585hXFo0",
        "number": 819,
        "title": "Azure OpenAI save_to_disk / load_from_disk errors",
        "user": {
            "login": "swilliams57to1",
            "id": 57336454,
            "node_id": "MDQ6VXNlcjU3MzM2NDU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/57336454?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/swilliams57to1",
            "html_url": "https://github.com/swilliams57to1",
            "followers_url": "https://api.github.com/users/swilliams57to1/followers",
            "following_url": "https://api.github.com/users/swilliams57to1/following{/other_user}",
            "gists_url": "https://api.github.com/users/swilliams57to1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/swilliams57to1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/swilliams57to1/subscriptions",
            "organizations_url": "https://api.github.com/users/swilliams57to1/orgs",
            "repos_url": "https://api.github.com/users/swilliams57to1/repos",
            "events_url": "https://api.github.com/users/swilliams57to1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/swilliams57to1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-21T08:39:38Z",
        "updated_at": "2023-03-25T02:11:03Z",
        "closed_at": "2023-03-25T02:11:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Everything runs fine if I use the index immediately, however if I try to save the index and immediately load it for use I am presented with an error. If I regenerate the index and use all is fine again.\r\n\r\nAny ideas \r\n\r\n\r\n# generate index \r\nindex = GPTSimpleVectorIndex(documents, embed_model=embedding_llm, llm_predictor=llm_predictor, prompt_helper=prompt_helper)\r\n\r\n\r\n# save to disk\r\nindex.save_to_disk('index.json')\r\n\r\n# load from disk\r\nindex = GPTSimpleVectorIndex.load_from_disk('index.json')\r\n\r\n\r\n\r\n#Query block\r\n\r\nquery = 'what enforcements happened at SAP Asia'\r\nanswer = index.query(query)\r\n\r\nprint(answer.get_formatted_sources())\r\nprint('query was:', query)\r\nprint('answer was:', answer)\r\n\r\n\r\n\r\nFull Error Message\r\n\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nCell In[38], line 3\r\n      1 query = 'what enforcements happened at SAP Asia'\r\n      2 #query = 'What computer did the first friend build?'\r\n----> 3 answer = index.query(query)\r\n      5 print(answer.get_formatted_sources())\r\n      6 print('query was:', query)\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\llama_index\\indices\\base.py:424, in BaseGPTIndex.query(self, query_str, mode, query_transform, use_async, **query_kwargs)\r\n    408 query_config = QueryConfig(\r\n    409     index_struct_type=self._index_struct.get_type(),\r\n    410     query_mode=mode_enum,\r\n    411     query_kwargs=query_kwargs,\r\n    412 )\r\n    413 query_runner = QueryRunner(\r\n    414     self._llm_predictor,\r\n    415     self._prompt_helper,\r\n   (...)\r\n    422     use_async=use_async,\r\n    423 )\r\n--> 424 return query_runner.query(query_str, self._index_struct)\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\llama_index\\indices\\query\\query_runner.py:183, in QueryRunner.query(self, query_str_or_bundle, index_struct)\r\n    180 else:\r\n    181     query_bundle = query_str_or_bundle\r\n--> 183 return query_combiner.run(query_obj, query_bundle)\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\llama_index\\indices\\query\\query_combiner\\base.py:54, in SingleQueryCombiner.run(self, query_obj, query_bundle)\r\n     48 transform_extra_info = {\r\n     49     \"index_struct\": self._index_struct,\r\n     50 }\r\n     51 updated_query_bundle = self._query_transform(\r\n     52     query_bundle, extra_info=transform_extra_info\r\n     53 )\r\n---> 54 return query_obj.query(updated_query_bundle)\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\llama_index\\token_counter\\token_counter.py:86, in llm_token_counter.<locals>.wrap.<locals>.wrapped_llm_predict(_self, *args, **kwargs)\r\n     84 def wrapped_llm_predict(_self: Any, *args: Any, **kwargs: Any) -> Any:\r\n     85     with wrapper_logic(_self):\r\n---> 86         f_return_val = f(_self, *args, **kwargs)\r\n     88     return f_return_val\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\llama_index\\indices\\query\\base.py:402, in BaseGPTIndexQuery.query(self, query_bundle)\r\n    399 @llm_token_counter(\"query\")\r\n    400 def query(self, query_bundle: QueryBundle) -> RESPONSE_TYPE:\r\n    401     \"\"\"Answer a query.\"\"\"\r\n--> 402     response = self._query(query_bundle)\r\n    403     # if include_summary is True, then include summary text in answer\r\n    404     # summary text is set through `set_text` on the underlying index.\r\n    405     # TODO: refactor response builder to be in the __init__\r\n    406     if self._response_mode != ResponseMode.NO_TEXT and self._include_summary:\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\llama_index\\indices\\query\\base.py:372, in BaseGPTIndexQuery._query(self, query_bundle)\r\n    370 \"\"\"Answer a query.\"\"\"\r\n    371 # TODO: remove _query and just use query\r\n--> 372 tuples = self.get_nodes_and_similarities_for_response(query_bundle)\r\n    374 # prepare response builder\r\n    375 self._prepare_response_builder(self.response_builder, query_bundle, tuples)\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\llama_index\\indices\\query\\base.py:296, in BaseGPTIndexQuery.get_nodes_and_similarities_for_response(self, query_bundle)\r\n    289 \"\"\"Get list of tuples of node and similarity for response.\r\n    290 \r\n    291 First part of the tuple is the node.\r\n    292 Second part of tuple is the distance from query to the node.\r\n    293 If not applicable, it's None.\r\n    294 \"\"\"\r\n    295 similarity_tracker = SimilarityTracker()\r\n--> 296 nodes = self._get_nodes_for_response(\r\n    297     query_bundle, similarity_tracker=similarity_tracker\r\n    298 )\r\n    300 postprocess_info = {\"similarity_tracker\": similarity_tracker}\r\n    301 for node_processor in self.node_preprocessors:\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\llama_index\\indices\\query\\vector_store\\base.py:50, in GPTVectorStoreIndexQuery._get_nodes_for_response(self, query_bundle, similarity_tracker)\r\n     45 if query_bundle.embedding is None:\r\n     46     query_bundle.embedding = self._embed_model.get_agg_embedding_from_queries(\r\n     47         query_bundle.embedding_strs\r\n     48     )\r\n---> 50 query_result = self._vector_store.query(\r\n     51     query_bundle.embedding, self._similarity_top_k, self._doc_ids\r\n     52 )\r\n     54 if query_result.nodes is None:\r\n     55     if query_result.ids is None:\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\llama_index\\vector_stores\\simple.py:104, in SimpleVectorStore.query(self, query_embedding, similarity_top_k, doc_ids)\r\n    101 node_ids = [t[0] for t in items]\r\n    102 embeddings = [t[1] for t in items]\r\n--> 104 top_similarities, top_ids = get_top_k_embeddings(\r\n    105     query_embedding,\r\n    106     embeddings,\r\n    107     similarity_top_k=similarity_top_k,\r\n    108     embedding_ids=node_ids,\r\n    109 )\r\n    111 return VectorStoreQueryResult(similarities=top_similarities, ids=top_ids)\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\llama_index\\indices\\query\\embedding_utils.py:25, in get_top_k_embeddings(query_embedding, embeddings, similarity_fn, similarity_top_k, embedding_ids, similarity_cutoff)\r\n     23 similarities = []\r\n     24 for emb in embeddings:\r\n---> 25     similarity = similarity_fn(query_embedding, emb)\r\n     26     similarities.append(similarity)\r\n     28 sorted_tups = sorted(\r\n     29     zip(similarities, embedding_ids), key=lambda x: x[0], reverse=True\r\n     30 )\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\llama_index\\embeddings\\base.py:43, in similarity(embedding1, embedding2, mode)\r\n     41     return product\r\n     42 else:\r\n---> 43     product = np.dot(embedding1, embedding2)\r\n     44     norm = np.linalg.norm(embedding1) * np.linalg.norm(embedding2)\r\n     45     return product / norm\r\n\r\nFile <__array_function__ internals>:180, in dot(*args, **kwargs)\r\n\r\nValueError: shapes (1536,) and (12288,) not aligned: 1536 (dim 0) != 12288 (dim 0)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/819/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/819/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/818",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/818/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/818/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/818/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/818",
        "id": 1633329451,
        "node_id": "PR_kwDOIWuq585Mg92I",
        "number": 818,
        "title": "some small fixes",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-21T06:58:35Z",
        "updated_at": "2023-03-21T07:04:35Z",
        "closed_at": "2023-03-21T07:04:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/818",
            "html_url": "https://github.com/run-llama/llama_index/pull/818",
            "diff_url": "https://github.com/run-llama/llama_index/pull/818.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/818.patch",
            "merged_at": "2023-03-21T07:04:34Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/818/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/818/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/817",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/817/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/817/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/817/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/817",
        "id": 1633306435,
        "node_id": "PR_kwDOIWuq585Mg4_W",
        "number": 817,
        "title": "issue with storing extra_info in Chroma #811",
        "user": {
            "login": "eugenepyvovarov",
            "id": 39050,
            "node_id": "MDQ6VXNlcjM5MDUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/39050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eugenepyvovarov",
            "html_url": "https://github.com/eugenepyvovarov",
            "followers_url": "https://api.github.com/users/eugenepyvovarov/followers",
            "following_url": "https://api.github.com/users/eugenepyvovarov/following{/other_user}",
            "gists_url": "https://api.github.com/users/eugenepyvovarov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eugenepyvovarov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eugenepyvovarov/subscriptions",
            "organizations_url": "https://api.github.com/users/eugenepyvovarov/orgs",
            "repos_url": "https://api.github.com/users/eugenepyvovarov/repos",
            "events_url": "https://api.github.com/users/eugenepyvovarov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eugenepyvovarov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-21T06:32:11Z",
        "updated_at": "2023-03-21T17:46:40Z",
        "closed_at": "2023-03-21T17:46:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/817",
            "html_url": "https://github.com/run-llama/llama_index/pull/817",
            "diff_url": "https://github.com/run-llama/llama_index/pull/817.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/817.patch",
            "merged_at": "2023-03-21T17:46:40Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/817/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/817/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/816",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/816/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/816/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/816/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/816",
        "id": 1633170855,
        "node_id": "I_kwDOIWuq585hWDWn",
        "number": 816,
        "title": "Where is the embedded cache?",
        "user": {
            "login": "Lufffya",
            "id": 49063302,
            "node_id": "MDQ6VXNlcjQ5MDYzMzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/49063302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lufffya",
            "html_url": "https://github.com/Lufffya",
            "followers_url": "https://api.github.com/users/Lufffya/followers",
            "following_url": "https://api.github.com/users/Lufffya/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lufffya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lufffya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lufffya/subscriptions",
            "organizations_url": "https://api.github.com/users/Lufffya/orgs",
            "repos_url": "https://api.github.com/users/Lufffya/repos",
            "events_url": "https://api.github.com/users/Lufffya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lufffya/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-03-21T03:39:39Z",
        "updated_at": "2023-03-23T02:17:20Z",
        "closed_at": "2023-03-21T17:48:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "```\r\nHow are Embeddings Generated?[\uf0c1](https://gpt-index.readthedocs.io/en/latest/how_to/embeddings.html#how-are-embeddings-generated)\r\nSince we offer embedding support during query-time for our list and tree indices, embeddings are lazily generated and then cached (if mode=\"embedding\" is specified during index.query(...)), and not during index construction. This design choice prevents the need to generate embeddings for all text chunks during index construction.\r\n```\r\nAccording to the [document](https://gpt-index.readthedocs.io/en/latest/how_to/embeddings.html#how-are-embeddings-generated) description: `embeddings are lazily generated and then cached `\r\n\r\nIf my device is Windows, can cache be saved to the C drive/folder?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/816/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/816/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/815",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/815/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/815/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/815/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/815",
        "id": 1633061188,
        "node_id": "PR_kwDOIWuq585MgEa8",
        "number": 815,
        "title": "add llama chatbot tutorial ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-21T00:34:37Z",
        "updated_at": "2023-03-21T01:39:17Z",
        "closed_at": "2023-03-21T01:39:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/815",
            "html_url": "https://github.com/run-llama/llama_index/pull/815",
            "diff_url": "https://github.com/run-llama/llama_index/pull/815.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/815.patch",
            "merged_at": "2023-03-21T01:39:16Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/815/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/814",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/814/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/814/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/814/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/814",
        "id": 1633026446,
        "node_id": "PR_kwDOIWuq585Mf8yI",
        "number": 814,
        "title": "Add custom LLM example",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-03-20T23:51:04Z",
        "updated_at": "2023-03-21T01:36:29Z",
        "closed_at": "2023-03-21T01:36:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/814",
            "html_url": "https://github.com/run-llama/llama_index/pull/814",
            "diff_url": "https://github.com/run-llama/llama_index/pull/814.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/814.patch",
            "merged_at": "2023-03-21T01:36:29Z"
        },
        "body": "This question gets asked fairly frequently, so it would be helpful to have a docs page to point at.\r\n\r\nEspecially with the recent Llama/Alpaca developments, I think this is going to be a more popular option going forward.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/814/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/814/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/813",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/813/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/813/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/813/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/813",
        "id": 1633010141,
        "node_id": "PR_kwDOIWuq585Mf5U4",
        "number": 813,
        "title": "add llama agent toolkit + tools ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-20T23:22:58Z",
        "updated_at": "2023-03-20T23:38:52Z",
        "closed_at": "2023-03-20T23:38:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/813",
            "html_url": "https://github.com/run-llama/llama_index/pull/813",
            "diff_url": "https://github.com/run-llama/llama_index/pull/813.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/813.patch",
            "merged_at": "2023-03-20T23:38:51Z"
        },
        "body": "- build a toolkit for use with langchain ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/813/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/813/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/812",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/812/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/812/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/812/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/812",
        "id": 1632991029,
        "node_id": "I_kwDOIWuq585hVXc1",
        "number": 812,
        "title": "Trying whisper with SimpleDirectoryReader",
        "user": {
            "login": "myrulezzz",
            "id": 43094013,
            "node_id": "MDQ6VXNlcjQzMDk0MDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/43094013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/myrulezzz",
            "html_url": "https://github.com/myrulezzz",
            "followers_url": "https://api.github.com/users/myrulezzz/followers",
            "following_url": "https://api.github.com/users/myrulezzz/following{/other_user}",
            "gists_url": "https://api.github.com/users/myrulezzz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/myrulezzz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/myrulezzz/subscriptions",
            "organizations_url": "https://api.github.com/users/myrulezzz/orgs",
            "repos_url": "https://api.github.com/users/myrulezzz/repos",
            "events_url": "https://api.github.com/users/myrulezzz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/myrulezzz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-03-20T23:01:13Z",
        "updated_at": "2023-03-31T04:33:27Z",
        "closed_at": "2023-03-31T04:33:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "So i am recording an mp3 and trying to return result fro simpledirecoryreader and make it speech. I can see my request transcripted however i have a problem with the reponse.\r\nHere is my response code:\r\n# Check if the response is not empty\r\nif response:\r\n    # Extract the top-ranked document as the answer\r\n    top_doc = response[0].text   \r\n    # Print the answer\r\n    print(top_doc)\r\nelse:\r\n    print(\"No matching documents found.\")\r\n    \r\n# Print the API response\r\nprint(response)\r\n\r\n# Generate audio from transcript\r\nlanguage = 'en'\r\ntts = gTTS(text=top_doc, lang=language)\r\n\r\n# Save audio to file\r\nfilename = \"output.mp3\"\r\nwith open(filename, \"wb\") as f:\r\n    tts.write_to_fp(f)\r\n\r\n# Play audio using default media player\r\nplaysound(\"output.mp3\")\r\nI get this error:\r\nraceback (most recent call last):\r\n  File \"/Users/andreasstylianou/Desktop/openai/./whisperdirectory.py\", line 75, in <module>\r\n    top_doc = response[0].text   \r\nTypeError: 'Response' object is not subscriptable\r\nAny idea how to fix the response format?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/812/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/811",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/811/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/811/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/811/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/811",
        "id": 1632955986,
        "node_id": "I_kwDOIWuq585hVO5S",
        "number": 811,
        "title": "issue with storing extra_info in Chroma",
        "user": {
            "login": "eugenepyvovarov",
            "id": 39050,
            "node_id": "MDQ6VXNlcjM5MDUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/39050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eugenepyvovarov",
            "html_url": "https://github.com/eugenepyvovarov",
            "followers_url": "https://api.github.com/users/eugenepyvovarov/followers",
            "following_url": "https://api.github.com/users/eugenepyvovarov/following{/other_user}",
            "gists_url": "https://api.github.com/users/eugenepyvovarov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eugenepyvovarov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eugenepyvovarov/subscriptions",
            "organizations_url": "https://api.github.com/users/eugenepyvovarov/orgs",
            "repos_url": "https://api.github.com/users/eugenepyvovarov/repos",
            "events_url": "https://api.github.com/users/eugenepyvovarov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eugenepyvovarov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-20T22:23:58Z",
        "updated_at": "2023-03-21T21:22:36Z",
        "closed_at": "2023-03-21T21:22:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "It seems like node.extra_info not stored in Chromadb metadata, I think I fixed it locally by changing the code in file  `/vector_stores/chroma.py` line 66\r\n\r\n```\r\nmetadata_to_add = result.node.extra_info\r\nmetadata_to_add['document_id'] = result.doc_id\r\nmetadatas.append(metadata_to_add)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/811/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/810",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/810/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/810/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/810/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/810",
        "id": 1632922869,
        "node_id": "I_kwDOIWuq585hVGz1",
        "number": 810,
        "title": "SentenceEmbeddingOptimizer not working",
        "user": {
            "login": "jma7889",
            "id": 225801,
            "node_id": "MDQ6VXNlcjIyNTgwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/225801?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jma7889",
            "html_url": "https://github.com/jma7889",
            "followers_url": "https://api.github.com/users/jma7889/followers",
            "following_url": "https://api.github.com/users/jma7889/following{/other_user}",
            "gists_url": "https://api.github.com/users/jma7889/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jma7889/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jma7889/subscriptions",
            "organizations_url": "https://api.github.com/users/jma7889/orgs",
            "repos_url": "https://api.github.com/users/jma7889/repos",
            "events_url": "https://api.github.com/users/jma7889/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jma7889/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-03-20T21:57:06Z",
        "updated_at": "2023-03-22T04:47:37Z",
        "closed_at": "2023-03-21T17:40:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Compiler shows definition not found, I use llama-index package.\r\nany code need this import does not compile.\r\nfrom gpt_index.optimization.optimizer import SentenceEmbeddingOptimizer\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/810/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/810/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/809",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/809/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/809/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/809/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/809",
        "id": 1632788078,
        "node_id": "I_kwDOIWuq585hUl5u",
        "number": 809,
        "title": "The answer degrades comparing asking chatGPT directly. ",
        "user": {
            "login": "jma7889",
            "id": 225801,
            "node_id": "MDQ6VXNlcjIyNTgwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/225801?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jma7889",
            "html_url": "https://github.com/jma7889",
            "followers_url": "https://api.github.com/users/jma7889/followers",
            "following_url": "https://api.github.com/users/jma7889/following{/other_user}",
            "gists_url": "https://api.github.com/users/jma7889/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jma7889/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jma7889/subscriptions",
            "organizations_url": "https://api.github.com/users/jma7889/orgs",
            "repos_url": "https://api.github.com/users/jma7889/repos",
            "events_url": "https://api.github.com/users/jma7889/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jma7889/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-03-20T20:11:13Z",
        "updated_at": "2023-03-22T02:56:40Z",
        "closed_at": "2023-03-22T02:56:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When indexing a relatively small document (60kB in file size), the indexing constantly filter out the correct portion of the document and thus impossible for ChatGPT find the correct answer. I am not sure how to improve it using llama index. For other folks using the lib, do you find it useful or waste of time?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/809/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/809/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/808",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/808/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/808/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/808/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/808",
        "id": 1632678654,
        "node_id": "I_kwDOIWuq585hULL-",
        "number": 808,
        "title": "Incomplete answer with GPTSQLStructStoreIndex compared to ChainLang",
        "user": {
            "login": "k4ycer",
            "id": 3517176,
            "node_id": "MDQ6VXNlcjM1MTcxNzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3517176?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/k4ycer",
            "html_url": "https://github.com/k4ycer",
            "followers_url": "https://api.github.com/users/k4ycer/followers",
            "following_url": "https://api.github.com/users/k4ycer/following{/other_user}",
            "gists_url": "https://api.github.com/users/k4ycer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/k4ycer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/k4ycer/subscriptions",
            "organizations_url": "https://api.github.com/users/k4ycer/orgs",
            "repos_url": "https://api.github.com/users/k4ycer/repos",
            "events_url": "https://api.github.com/users/k4ycer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/k4ycer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-20T18:47:40Z",
        "updated_at": "2023-06-06T02:36:06Z",
        "closed_at": "2023-06-06T02:36:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm following the get started guide for the structured data example:\r\nhttps://gpt-index.readthedocs.io/en/latest/guides/sql_guide.html\r\n\r\nThe output is only given in array format: [('Tokyo',)].  I would expect a final answer, such as \"Tokyo has the highest population...\"\r\n\r\nFurthermore, looks like other simple queries do not return enough information, such as \"Does Berlin have a higher population than Tokyo?\". While if I enter the same query to ChainLang directy (without indexing), it does give me a more complete answer. How can I get a more complete answer with llama-ai, similar to what I get with Chain Lang?\r\n\r\nLLama-index code:\r\nindex = GPTSQLStructStoreIndex(\r\n    [],\r\n    sql_database=sql_database, \r\n    table_name=\"city_stats\",\r\n)\r\nresponse = index.query(\"Does Berlin have a higher population than Tokyo?\", mode=\"default\")\r\nprint(response)\r\n\r\nLLama-index output:\r\n\r\nINFO:root:> [query] Total LLM token usage: 180 tokens\r\n> [query] Total LLM token usage: 180 tokens\r\nINFO:root:> [query] Total embedding token usage: 0 tokens\r\n> [query] Total embedding token usage: 0 tokens\r\n[('No',)]\r\n\r\n---------------------\r\n\r\nChain-lang:\r\n\r\nCode:\r\ndb_chain = SQLDatabaseChain(llm=llm, database=sql_database, verbose=True)\r\ndb_chain.run(\"Does Berlin have a higher population than Tokyo?\")\r\n\r\nOutput:\r\n> Entering new SQLDatabaseChain chain...\r\nDoes Berlin have a higher population than Tokyo? \r\nSQLQuery: SELECT city_name, population FROM city_stats WHERE city_name IN ('Berlin', 'Tokyo') ORDER BY population DESC LIMIT 5;\r\nSQLResult: [('Tokyo', 13929286), ('Berlin', 600000)]\r\nAnswer: No, Tokyo has a higher population than Berlin.\r\n> Finished chain.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/808/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/808/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/807",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/807/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/807/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/807/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/807",
        "id": 1632596441,
        "node_id": "I_kwDOIWuq585hT3HZ",
        "number": 807,
        "title": "[Multimodal] General questions",
        "user": {
            "login": "chengyjonathan",
            "id": 37084761,
            "node_id": "MDQ6VXNlcjM3MDg0NzYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/37084761?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chengyjonathan",
            "html_url": "https://github.com/chengyjonathan",
            "followers_url": "https://api.github.com/users/chengyjonathan/followers",
            "following_url": "https://api.github.com/users/chengyjonathan/following{/other_user}",
            "gists_url": "https://api.github.com/users/chengyjonathan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chengyjonathan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chengyjonathan/subscriptions",
            "organizations_url": "https://api.github.com/users/chengyjonathan/orgs",
            "repos_url": "https://api.github.com/users/chengyjonathan/repos",
            "events_url": "https://api.github.com/users/chengyjonathan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chengyjonathan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-20T17:52:58Z",
        "updated_at": "2023-03-22T03:40:49Z",
        "closed_at": "2023-03-22T03:40:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi there, love the work here! I have a few questions about multimodal features.\r\n\r\nLet's say I want to do some text -> image + text retrieval. Along the lines of the \"Q & A over LlamaIndex Documentation\"(https://github.com/jerryjliu/llama_index/blob/main/examples/multimodal/Multimodal.ipynb).\r\n\r\nBut let's say my images contain entities that are not recognized by clip, blip, etc. So it would be hard to support queries like \"show  me images of X-enitity?\"\r\n\r\nDo you have any recommendations on how to proceed?\r\n\r\n1) Would adding information, along with other context, in the filename help support these kinds of queries? In the example, we can add metadata using the filename, but it isn't immediately clear to me if that metadata is encoded along with the image.\r\n\r\n2) Is it possible to use our own fine tuned versions of blip or clip to embed our documents/queries? Ie. Along the lines of: (https://gpt-index.readthedocs.io/en/latest/how_to/embeddings.html).)\r\n\r\n3) Other ideas?\r\n\r\nThank you!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/807/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/806",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/806/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/806/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/806/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/806",
        "id": 1632586778,
        "node_id": "PR_kwDOIWuq585Med3u",
        "number": 806,
        "title": "fix chroma top k ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-20T17:45:28Z",
        "updated_at": "2023-03-20T17:50:50Z",
        "closed_at": "2023-03-20T17:50:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/806",
            "html_url": "https://github.com/run-llama/llama_index/pull/806",
            "diff_url": "https://github.com/run-llama/llama_index/pull/806.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/806.patch",
            "merged_at": "2023-03-20T17:50:48Z"
        },
        "body": "closes #802",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/806/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/806/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/805",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/805/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/805/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/805/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/805",
        "id": 1632483773,
        "node_id": "I_kwDOIWuq585hTbm9",
        "number": 805,
        "title": "Can I use llama-index based on a locally deployed model?",
        "user": {
            "login": "Meaninles",
            "id": 88968608,
            "node_id": "MDQ6VXNlcjg4OTY4NjA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/88968608?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Meaninles",
            "html_url": "https://github.com/Meaninles",
            "followers_url": "https://api.github.com/users/Meaninles/followers",
            "following_url": "https://api.github.com/users/Meaninles/following{/other_user}",
            "gists_url": "https://api.github.com/users/Meaninles/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Meaninles/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Meaninles/subscriptions",
            "organizations_url": "https://api.github.com/users/Meaninles/orgs",
            "repos_url": "https://api.github.com/users/Meaninles/repos",
            "events_url": "https://api.github.com/users/Meaninles/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Meaninles/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-20T16:38:00Z",
        "updated_at": "2023-04-20T02:08:23Z",
        "closed_at": "2023-03-21T21:23:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I wish to use llama-index with a locally deployed chatglm model, how should I do it? Or what changes should I make?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/805/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/805/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/804",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/804/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/804/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/804/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/804",
        "id": 1632273884,
        "node_id": "I_kwDOIWuq585hSoXc",
        "number": 804,
        "title": "What are the differences between LlamaIndex and langchain?",
        "user": {
            "login": "chrischjh",
            "id": 11455393,
            "node_id": "MDQ6VXNlcjExNDU1Mzkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11455393?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chrischjh",
            "html_url": "https://github.com/chrischjh",
            "followers_url": "https://api.github.com/users/chrischjh/followers",
            "following_url": "https://api.github.com/users/chrischjh/following{/other_user}",
            "gists_url": "https://api.github.com/users/chrischjh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chrischjh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chrischjh/subscriptions",
            "organizations_url": "https://api.github.com/users/chrischjh/orgs",
            "repos_url": "https://api.github.com/users/chrischjh/repos",
            "events_url": "https://api.github.com/users/chrischjh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chrischjh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-20T14:52:02Z",
        "updated_at": "2023-03-27T10:18:25Z",
        "closed_at": "2023-03-21T01:43:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "They seem similar",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/804/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/804/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/803",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/803/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/803/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/803/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/803",
        "id": 1632222320,
        "node_id": "I_kwDOIWuq585hSbxw",
        "number": 803,
        "title": "Using load_from_disk does not work for azure implementation of OpenAI",
        "user": {
            "login": "rguikers",
            "id": 363714,
            "node_id": "MDQ6VXNlcjM2MzcxNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/363714?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rguikers",
            "html_url": "https://github.com/rguikers",
            "followers_url": "https://api.github.com/users/rguikers/followers",
            "following_url": "https://api.github.com/users/rguikers/following{/other_user}",
            "gists_url": "https://api.github.com/users/rguikers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rguikers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rguikers/subscriptions",
            "organizations_url": "https://api.github.com/users/rguikers/orgs",
            "repos_url": "https://api.github.com/users/rguikers/repos",
            "events_url": "https://api.github.com/users/rguikers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rguikers/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-03-20T14:23:16Z",
        "updated_at": "2023-03-25T02:10:49Z",
        "closed_at": "2023-03-25T02:10:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When saving the index (GPTSimpleVectorIndex save_to_disk) and eventually loading the index \r\n\r\n```\r\nindex = GPTSimpleVectorIndex.load_from_disk('index.json')\r\nresponse = index.query(input_text, response_mode=\"compact\")\r\n```\r\nresults in : \r\n```\r\nINFO:openai:error_code=DeploymentNotFound error_message='The API deployment for this resource does not exist. If you created the deployment within the last 5 minutes, please wait a moment and try again.' error_param=None error_type=None message='OpenAI API error received' stream_error=False\r\n```\r\n\r\nUsing the index right after creating it works fine.\r\n\r\nAre there any necessary settings that I'm missing after loading the index?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/803/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/803/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/802",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/802/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/802/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/802/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/802",
        "id": 1631878850,
        "node_id": "I_kwDOIWuq585hRH7C",
        "number": 802,
        "title": "Similarity_top_k does not work with GPTChromaIndex",
        "user": {
            "login": "timonmat",
            "id": 15153521,
            "node_id": "MDQ6VXNlcjE1MTUzNTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/15153521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timonmat",
            "html_url": "https://github.com/timonmat",
            "followers_url": "https://api.github.com/users/timonmat/followers",
            "following_url": "https://api.github.com/users/timonmat/following{/other_user}",
            "gists_url": "https://api.github.com/users/timonmat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timonmat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timonmat/subscriptions",
            "organizations_url": "https://api.github.com/users/timonmat/orgs",
            "repos_url": "https://api.github.com/users/timonmat/repos",
            "events_url": "https://api.github.com/users/timonmat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timonmat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-20T11:04:51Z",
        "updated_at": "2023-03-20T17:50:50Z",
        "closed_at": "2023-03-20T17:50:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm creating a client with persisntant 'duckdb+parquet' config. indexing to GPTChromaIndex. Saving the index to disk, and persisting the chromadb.\r\n\r\nthen loading from disk later.\r\n\r\nSimilarity_top_k does not impact query results in any way. I always get one node results.\r\nhttps://github.com/timonmat/ChatObsidian/blob/main/utils/chroma.py#L66\r\n\r\nWhen used with GPTSimpleIndex, exactly the same way, similariy_top_k works as expected.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/802/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/802/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/801",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/801/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/801/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/801/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/801",
        "id": 1631735865,
        "node_id": "I_kwDOIWuq585hQlA5",
        "number": 801,
        "title": "How to clarify the meaning of a schema column in structured data",
        "user": {
            "login": "shangdev",
            "id": 15621520,
            "node_id": "MDQ6VXNlcjE1NjIxNTIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/15621520?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shangdev",
            "html_url": "https://github.com/shangdev",
            "followers_url": "https://api.github.com/users/shangdev/followers",
            "following_url": "https://api.github.com/users/shangdev/following{/other_user}",
            "gists_url": "https://api.github.com/users/shangdev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shangdev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shangdev/subscriptions",
            "organizations_url": "https://api.github.com/users/shangdev/orgs",
            "repos_url": "https://api.github.com/users/shangdev/repos",
            "events_url": "https://api.github.com/users/shangdev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shangdev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-03-20T09:43:15Z",
        "updated_at": "2023-03-26T01:37:22Z",
        "closed_at": "2023-03-26T01:37:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am using mysql as a structured data source and sometimes the query does not understand exactly what the column means, resulting in an undesirable response, here is my code.\r\n\r\n```\r\nfrom pathlib import Path\r\nfrom llama_index import GPTSQLStructStoreIndex, SQLDatabase\r\nfrom sqlalchemy import create_engine\r\n\r\nengine = create_engine(\"mysql+mysqlconnector://root:123456@localhost:3306/xxx\")\r\nsql_database = SQLDatabase(engine, include_tables=[\"t_goods\"])\r\nindex = GPTSQLStructStoreIndex(\r\n    [], \r\n    sql_database=sql_database, \r\n    table_name=\"t_goods\",\r\n)\r\n\r\nresponse = index.query(\"What is the weight and physical dimensions of the WDM50-2805SL? Please answer in Chinese\")\r\nprint(response)\r\n```\r\n\r\nThe table t_goods has the columns model, weight, size. Mass and weight are the same field, and also commented on the weight column: weight or mass, but he cannot identify or determine that weight is a mass value, only that it is a weight.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/801/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/800",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/800/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/800/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/800/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/800",
        "id": 1631655620,
        "node_id": "I_kwDOIWuq585hQRbE",
        "number": 800,
        "title": "\u8fd4\u56de\u8d85\u957f\u663e\u793a\u4e0d\u5168\u600e\u4e48\u529e",
        "user": {
            "login": "Minweiwangaaaa",
            "id": 115546916,
            "node_id": "U_kgDOBuMbJA",
            "avatar_url": "https://avatars.githubusercontent.com/u/115546916?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Minweiwangaaaa",
            "html_url": "https://github.com/Minweiwangaaaa",
            "followers_url": "https://api.github.com/users/Minweiwangaaaa/followers",
            "following_url": "https://api.github.com/users/Minweiwangaaaa/following{/other_user}",
            "gists_url": "https://api.github.com/users/Minweiwangaaaa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Minweiwangaaaa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Minweiwangaaaa/subscriptions",
            "organizations_url": "https://api.github.com/users/Minweiwangaaaa/orgs",
            "repos_url": "https://api.github.com/users/Minweiwangaaaa/repos",
            "events_url": "https://api.github.com/users/Minweiwangaaaa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Minweiwangaaaa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-20T08:52:35Z",
        "updated_at": "2023-03-25T02:05:47Z",
        "closed_at": "2023-03-25T02:05:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\u8fd4\u56de\u8d85\u957f\u663e\u793a\u4e0d\u5168\u600e\u4e48\u529e\uff1f",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/800/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/800/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/799",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/799/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/799/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/799/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/799",
        "id": 1631635127,
        "node_id": "I_kwDOIWuq585hQMa3",
        "number": 799,
        "title": "I want him to answer me in the same language I asked him",
        "user": {
            "login": "Wangkaixinlove",
            "id": 27984149,
            "node_id": "MDQ6VXNlcjI3OTg0MTQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/27984149?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Wangkaixinlove",
            "html_url": "https://github.com/Wangkaixinlove",
            "followers_url": "https://api.github.com/users/Wangkaixinlove/followers",
            "following_url": "https://api.github.com/users/Wangkaixinlove/following{/other_user}",
            "gists_url": "https://api.github.com/users/Wangkaixinlove/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Wangkaixinlove/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Wangkaixinlove/subscriptions",
            "organizations_url": "https://api.github.com/users/Wangkaixinlove/orgs",
            "repos_url": "https://api.github.com/users/Wangkaixinlove/repos",
            "events_url": "https://api.github.com/users/Wangkaixinlove/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Wangkaixinlove/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5254588857,
                "node_id": "LA_kwDOIWuq588AAAABOTKpuQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/international",
                "name": "international",
                "color": "E07D46",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-20T08:37:33Z",
        "updated_at": "2023-06-06T00:54:21Z",
        "closed_at": "2023-06-06T00:54:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Why was the issue closed? I also met the same problem, my data is pure English, I want to ask questions in different languages, but only English reply is returned, but I directly call openai will not have this problem, can you answer the reason?\r\n\r\n1.these are my query code\r\n`# query_index.py   \u4eceindex\u6587\u4ef6\u91cc\u83b7\u5f97\u76f8\u5173\u8d44\u6599\u5e76\u5411GPT\u63d0\u95ee\r\nimport os\r\nimport sys\r\nos.environ[\"OPENAI_API_KEY\"] = ''\r\nfrom llama_index import GPTSimpleVectorIndex\r\nindex = GPTSimpleVectorIndex.load_from_disk(os.path.dirname(__file__) + '/index.json')\r\nprint(index.query('\u5982\u4f55\u83b7\u53d6\u9c9c\u82b1',mode=\"embedding\"))`\r\n\r\n2.these are my data\r\n{\"question\": \"How do I get flowers?\", \"answer\":\"1. Login to check in: Each user can get 3 flowers per day just by checking in. 2. Invite friends: Each time you successfully invite a friend to WeSing, you will get 1 flower, and each day you can get up to 3 flowers.  3. Singing bonus: Each time you post a song with an average score over 60, you will get 5 flowers, and each day you can get up to 5 flowers. If your outstanding song is recommended by the editor, you will get 5 flowers, and each day you can get up to 15 flowers.\"}\r\n\r\n3.this is response\r\nAnswer: Flowers can be obtained in several ways: 1. Login to check in: Each user can get 3 flowers per day just by checking in. 2. Invite friends: Each time you successfully invite a friend to WeSing, you will get 1 flower, and each day you can get up to 3 flowers. 3. Singing bonus: Each time you post a song with an average score over 60, you will get 5 flowers, and each day you can get up to 5 flowers. If your outstanding song is recommended by the editor, you will get 5 flowers, and each day you can get up to 15 flowers. 4. Complete tasks: After you accomplished a mission in the Mission Center, you can get corresponding number of flowers as a reward. 5. Recharge your account: To obtain K coins, recharge your account.\r\n\r\nbut I want it answer me in the same language I asked him, please help me, thanks. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/799/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/799/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/798",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/798/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/798/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/798/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/798",
        "id": 1631515264,
        "node_id": "PR_kwDOIWuq585Ma2tL",
        "number": 798,
        "title": "[version] bump version to 0.4.33",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-20T07:04:16Z",
        "updated_at": "2023-03-20T07:09:51Z",
        "closed_at": "2023-03-20T07:09:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/798",
            "html_url": "https://github.com/run-llama/llama_index/pull/798",
            "diff_url": "https://github.com/run-llama/llama_index/pull/798.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/798.patch",
            "merged_at": "2023-03-20T07:09:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/798/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/798/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/797",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/797/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/797/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/797/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/797",
        "id": 1631503265,
        "node_id": "I_kwDOIWuq585hPsOh",
        "number": 797,
        "title": "how to use custom prompt template?",
        "user": {
            "login": "Barbery",
            "id": 2239529,
            "node_id": "MDQ6VXNlcjIyMzk1Mjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2239529?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Barbery",
            "html_url": "https://github.com/Barbery",
            "followers_url": "https://api.github.com/users/Barbery/followers",
            "following_url": "https://api.github.com/users/Barbery/following{/other_user}",
            "gists_url": "https://api.github.com/users/Barbery/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Barbery/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Barbery/subscriptions",
            "organizations_url": "https://api.github.com/users/Barbery/orgs",
            "repos_url": "https://api.github.com/users/Barbery/repos",
            "events_url": "https://api.github.com/users/Barbery/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Barbery/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-03-20T06:57:16Z",
        "updated_at": "2023-06-06T02:32:44Z",
        "closed_at": "2023-06-06T02:32:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, I try to use custom prompt to ask question, but the answer is always in english.\r\n\r\nI guess there are two reasons:\r\n1. My PROPMT is not working\r\n2. Internally cached history\r\n\r\nif the first reason, can you tell me where I wrong? and if the second reason, how to clear the history.\r\n\r\nbelow is my code:\r\n```\r\nindex = GPTSimpleVectorIndex.load_from_disk('index.json')\r\n\r\nQUESTION_ANSWER_PROMPT_TMPL = (\r\n    \"\u8bf7\u6839\u636e\u4e0a\u4e0b\u6587\u56de\u7b54\u95ee\u9898,\u5982\u679c\u4f60\u4e0d\u77e5\u9053\u8bf7\u76f4\u63a5\u56de\u7b54:\u5bf9\u4e0d\u8d77,\u6211\u6682\u65f6\u65e0\u6cd5\u89e3\u7b54\u8be5\u95ee\u9898\\n\"\r\n    \"------------------\\n\"\r\n    \"\u4e0a\u4e0b\u6587: {context_str}\"\r\n    \"\\n-------------------\\n\"\r\n    \"\u95ee\u9898: {query_str}\\n\"\r\n)\r\nQUESTION_ANSWER_PROMPT = QuestionAnswerPrompt(QUESTION_ANSWER_PROMPT_TMPL)\r\nq = \"MY QUESTION\"\r\nllm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\"))\r\nresponse = index.query(\r\n    q, \r\n    llm_predictor=llm_predictor,\r\n    similarity_top_k=3,\r\n    # refine_template=CHAT_REFINE_PROMPT,\r\n    text_qa_template=QUESTION_ANSWER_PROMPT\r\n)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/797/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/797/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/796",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/796/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/796/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/796/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/796",
        "id": 1631334638,
        "node_id": "I_kwDOIWuq585hPDDu",
        "number": 796,
        "title": "How to save the embedding from local data?",
        "user": {
            "login": "Lufffya",
            "id": 49063302,
            "node_id": "MDQ6VXNlcjQ5MDYzMzAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/49063302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lufffya",
            "html_url": "https://github.com/Lufffya",
            "followers_url": "https://api.github.com/users/Lufffya/followers",
            "following_url": "https://api.github.com/users/Lufffya/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lufffya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lufffya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lufffya/subscriptions",
            "organizations_url": "https://api.github.com/users/Lufffya/orgs",
            "repos_url": "https://api.github.com/users/Lufffya/repos",
            "events_url": "https://api.github.com/users/Lufffya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lufffya/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-03-20T03:57:35Z",
        "updated_at": "2023-03-25T02:41:21Z",
        "closed_at": "2023-03-25T02:41:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "![image](https://user-images.githubusercontent.com/49063302/226241790-51a9bb7c-a843-4e20-b2fc-971581a4b17e.png)\r\n\r\nAs shown in the figure,\r\nI found that every time the query function is called, it will regenerate the embedding.\r\nSo, how to save it to avoid this situation?\r\n\r\n\r\nThe specific manifestation is that this line of output appears every time a query is made, and it takes a long time to wait.\r\n`INFO:root:> Building index from nodes: 45 chunks`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/796/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/796/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/795",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/795/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/795/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/795/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/795",
        "id": 1631324220,
        "node_id": "PR_kwDOIWuq585MaMzw",
        "number": 795,
        "title": "fix langchain linting ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-20T03:41:04Z",
        "updated_at": "2023-03-20T03:44:33Z",
        "closed_at": "2023-03-20T03:44:32Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/795",
            "html_url": "https://github.com/run-llama/llama_index/pull/795",
            "diff_url": "https://github.com/run-llama/llama_index/pull/795.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/795.patch",
            "merged_at": "2023-03-20T03:44:32Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/795/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/795/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/794",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/794/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/794/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/794/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/794",
        "id": 1631167250,
        "node_id": "PR_kwDOIWuq585MZryd",
        "number": 794,
        "title": "Add guide for fullstack apps with LLamaIndex",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-03-19T23:54:17Z",
        "updated_at": "2023-03-20T05:29:16Z",
        "closed_at": "2023-03-20T05:29:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/794",
            "html_url": "https://github.com/run-llama/llama_index/pull/794",
            "diff_url": "https://github.com/run-llama/llama_index/pull/794.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/794.patch",
            "merged_at": "2023-03-20T05:29:16Z"
        },
        "body": "I recently created a full stack example using flask+react+typescript in my [starter pack repo](https://github.com/logan-markewich/llama_index_starter_pack), and this PR contains a neat little guide on how it was built + how it works.\r\n\r\nIt should be useful to have a sort of guide/tutorial to point people towards so that they can integrate llama index into their tech stack a little easier! \ud83d\udcaa\ud83c\udffb ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/794/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/794/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/793",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/793/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/793/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/793/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/793",
        "id": 1631165868,
        "node_id": "I_kwDOIWuq585hOZ2s",
        "number": 793,
        "title": "Reading PDF file from cloud storage (GCS)",
        "user": {
            "login": "ctle-vn",
            "id": 19678659,
            "node_id": "MDQ6VXNlcjE5Njc4NjU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19678659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ctle-vn",
            "html_url": "https://github.com/ctle-vn",
            "followers_url": "https://api.github.com/users/ctle-vn/followers",
            "following_url": "https://api.github.com/users/ctle-vn/following{/other_user}",
            "gists_url": "https://api.github.com/users/ctle-vn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ctle-vn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ctle-vn/subscriptions",
            "organizations_url": "https://api.github.com/users/ctle-vn/orgs",
            "repos_url": "https://api.github.com/users/ctle-vn/repos",
            "events_url": "https://api.github.com/users/ctle-vn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ctle-vn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-03-19T23:52:20Z",
        "updated_at": "2023-03-22T03:45:22Z",
        "closed_at": "2023-03-21T17:21:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi there,\r\n\r\nCame across `SimpleDirectoryReader` which lets you read in a file, given the file path. \r\n\r\nI have files that I store on cloud (Google Cloud Storage) that I fetch from. Is there a way to use `SimpleDirectoryReader` without the path that's required, but instead provide the file itself?\r\n\r\nCurrently I workaround it with the following by parsing myself and providing the documents to `GPTSimpleVectorIndex`.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/793/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/793/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/792",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/792/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/792/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/792/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/792",
        "id": 1631148608,
        "node_id": "PR_kwDOIWuq585MZoRB",
        "number": 792,
        "title": "add guardrails output parser",
        "user": {
            "login": "ShreyaR",
            "id": 5787923,
            "node_id": "MDQ6VXNlcjU3ODc5MjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5787923?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShreyaR",
            "html_url": "https://github.com/ShreyaR",
            "followers_url": "https://api.github.com/users/ShreyaR/followers",
            "following_url": "https://api.github.com/users/ShreyaR/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShreyaR/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShreyaR/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShreyaR/subscriptions",
            "organizations_url": "https://api.github.com/users/ShreyaR/orgs",
            "repos_url": "https://api.github.com/users/ShreyaR/repos",
            "events_url": "https://api.github.com/users/ShreyaR/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShreyaR/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-03-19T22:51:55Z",
        "updated_at": "2023-03-20T05:37:44Z",
        "closed_at": "2023-03-20T05:37:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/792",
            "html_url": "https://github.com/run-llama/llama_index/pull/792",
            "diff_url": "https://github.com/run-llama/llama_index/pull/792.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/792.patch",
            "merged_at": "2023-03-20T05:37:44Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/792/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/792/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/791",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/791/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/791/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/791/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/791",
        "id": 1631140874,
        "node_id": "PR_kwDOIWuq585MZmxB",
        "number": 791,
        "title": "[0.5.0] Node refactor",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-19T22:25:17Z",
        "updated_at": "2023-03-23T00:51:25Z",
        "closed_at": "2023-03-23T00:51:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/791",
            "html_url": "https://github.com/run-llama/llama_index/pull/791",
            "diff_url": "https://github.com/run-llama/llama_index/pull/791.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/791.patch",
            "merged_at": "2023-03-23T00:51:24Z"
        },
        "body": "### Changes to Index construction\r\n* main constructor now takes `nodes` instead of `documents`.\r\n> We use `Index.from_documents` to continue support parsing documents into nodes under the hood.\r\n* Index now holds `NodeParser` instead of `TextSplitter`\r\n> This is a slightly higher abstraction that captures both text splitting, and setting up proper relationship between `Node`s. \r\n\r\n### Changes to Node class\r\n* No longer inherit from `IndexStruct`, instead directly inherit from `BaseDocument`\r\n> Conceptually `Node` is an extension of raw documents, and model relationship between documents (e.g.  A is source of {B, C, D}, B is a chunk before C, C is a chunk before D)\r\n* Use `Node.relationships` to model document relationships (source, previous, next)\r\n> This generalizes the old `ref_doc_id` and `prev_node_id`, `next_node_id`\r\n* No longer contain relational information specific to tree index (i.e. `index` and `child_indices`)\r\n> This is now contained in the index struct itself (e.g. `IndexGraph` in the case of `TreeIndex`)\r\n\r\n### Changes to storage\r\n* `Node`s are now stored in `DocumentStore` instead of as part of the `IndexStruct`\r\n> In fact, they are added once they are created from documents. For `Index`es that create new nodes (e.g. TreeIndex), they are added to the docstore after they are created by the `Index`.\r\n\r\n### Notes & Todos\r\n- [x] Fix all unit test (except composability related) & lint\r\n\r\n### Future work\r\n- [ ] This PR draft completely ignores index composability. My hope is that it can be re-implemented cleanly in a new way. (Deferred to future PR)\r\n- [ ] Need to implement `NodeParser` to properly setup `Node` relationships (Deferred to future PR)\r\n- [ ] Tool for migrating old index struct jsons into new format.\r\n- [ ] Remove or simplify `IndexRegistry`\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/791/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/791/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/790",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/790/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/790/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/790/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/790",
        "id": 1631053798,
        "node_id": "I_kwDOIWuq585hN-fm",
        "number": 790,
        "title": "set response mode to `tree_summarize` got error `ValueError: A single term is larger than the allowed chunk size.`",
        "user": {
            "login": "shadowlinyf",
            "id": 13216079,
            "node_id": "MDQ6VXNlcjEzMjE2MDc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13216079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shadowlinyf",
            "html_url": "https://github.com/shadowlinyf",
            "followers_url": "https://api.github.com/users/shadowlinyf/followers",
            "following_url": "https://api.github.com/users/shadowlinyf/following{/other_user}",
            "gists_url": "https://api.github.com/users/shadowlinyf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shadowlinyf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shadowlinyf/subscriptions",
            "organizations_url": "https://api.github.com/users/shadowlinyf/orgs",
            "repos_url": "https://api.github.com/users/shadowlinyf/repos",
            "events_url": "https://api.github.com/users/shadowlinyf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shadowlinyf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-03-19T18:04:09Z",
        "updated_at": "2023-09-10T17:08:44Z",
        "closed_at": "2023-09-10T17:08:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "If response mode is default everything is fine.\r\n\r\nllm setting\r\n```\r\nllm = ChatOpenAI(temperature=0.3, model_name=MODEL)\r\nllm_predictor = LLMPredictor(llm=llm)\r\n```\r\n\r\nprompt helper setting\r\n```\r\nmax_input_size = 4096\r\nnum_output = 1500\r\nmax_chunk_overlap = 20\r\nprompt_helper = PromptHelper(max_input_size, num_output, max_chunk_overlap)\r\n```\r\n\r\nindex setting\r\n```\r\n# build\r\nindex = GPTSimpleVectorIndex(documents)\r\nindex.save_to_disk(path)\r\n\r\n# load\r\nindex = GPTSimpleVectorIndex.load_from_disk(path, llm_predictor=llm_predictor)\r\n```\r\n\r\nquery setting\r\n```\r\nresponse = index.query(\r\n    question,\r\n    llm_predictor=llm_predictor,\r\n    similarity_top_k=top_k,\r\n    text_qa_template=QA_TEMPLATE_MEDICAL,\r\n    refine_template=REFINE_TEMPLATE_MEDICAL,\r\n    prompt_helper=prompt_helper,\r\n    response_mode=response_mode)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/790/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/790/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/789",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/789/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/789/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/789/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/789",
        "id": 1630900883,
        "node_id": "I_kwDOIWuq585hNZKT",
        "number": 789,
        "title": "ChatGptLLMPredictor object has no attribute __llm",
        "user": {
            "login": "t-h-e-r-o-x",
            "id": 31180828,
            "node_id": "MDQ6VXNlcjMxMTgwODI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/31180828?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/t-h-e-r-o-x",
            "html_url": "https://github.com/t-h-e-r-o-x",
            "followers_url": "https://api.github.com/users/t-h-e-r-o-x/followers",
            "following_url": "https://api.github.com/users/t-h-e-r-o-x/following{/other_user}",
            "gists_url": "https://api.github.com/users/t-h-e-r-o-x/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/t-h-e-r-o-x/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/t-h-e-r-o-x/subscriptions",
            "organizations_url": "https://api.github.com/users/t-h-e-r-o-x/orgs",
            "repos_url": "https://api.github.com/users/t-h-e-r-o-x/repos",
            "events_url": "https://api.github.com/users/t-h-e-r-o-x/events{/privacy}",
            "received_events_url": "https://api.github.com/users/t-h-e-r-o-x/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-19T11:37:09Z",
        "updated_at": "2023-03-21T17:41:39Z",
        "closed_at": "2023-03-21T17:41:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When I try to query an index defined as following:\r\n`index = GPTListIndex(docs, llm_predictor=llm_predictor)\r\nllm_predictor = ChatGPTLLMPredictor(temperature = 0)`\r\nThe following is the stack trace:\r\n`Traceback (most recent call last):\r\n  File \"C:\\Users\\shara\\AppData\\Local\\Temp\\ipykernel_20760\\2919870425.py\", line 5, in <module>\r\n    response = index.query(prompt, )\r\n  File \"c:\\Users\\shara\\anaconda3\\envs\\YTSummariseGPT\\lib\\site-packages\\gpt_index\\indices\\base.py\", line 395, in query\r\n    return query_runner.query(query_str, self._index_struct)\r\n  File \"c:\\Users\\shara\\anaconda3\\envs\\YTSummariseGPT\\lib\\site-packages\\gpt_index\\indices\\query\\query_runner.py\", line 127, in query\r\n    return query_obj.query(query_bundle)\r\n  File \"c:\\Users\\shara\\anaconda3\\envs\\YTSummariseGPT\\lib\\site-packages\\gpt_index\\token_counter\\token_counter.py\", line 55, in wrapped_llm_predict\r\n    f_return_val = f(_self, *args, **kwargs)\r\n  File \"c:\\Users\\shara\\anaconda3\\envs\\YTSummariseGPT\\lib\\site-packages\\gpt_index\\indices\\query\\base.py\", line 342, in query\r\n    response = self._query(query_bundle)\r\n  File \"c:\\Users\\shara\\anaconda3\\envs\\YTSummariseGPT\\lib\\site-packages\\gpt_index\\indices\\query\\base.py\", line 318, in _query\r\n    response_str = self._give_response_for_nodes(query_bundle.query_str)\r\n  File \"c:\\Users\\shara\\anaconda3\\envs\\YTSummariseGPT\\lib\\site-packages\\gpt_index\\indices\\query\\base.py\", line 216, in _give_response_for_nodes\r\n    response = self.response_builder.get_response(\r\n  File \"c:\\Users\\shara\\anaconda3\\envs\\YTSummariseGPT\\lib\\site-packages\\gpt_index\\indices\\response\\builder.py\", line 318, in get_response\r\n    return self._get_response_default(query_str, prev_response)\r\n  File \"c:\\Users\\shara\\anaconda3\\envs\\YTSummariseGPT\\lib\\site-packages\\gpt_index\\indices\\response\\builder.py\", line 201, in _get_response_default\r\n    return self.get_response_over_chunks(\r\n  File \"c:\\Users\\shara\\anaconda3\\envs\\YTSummariseGPT\\lib\\site-packages\\gpt_index\\indices\\response\\builder.py\", line 183, in get_response_over_chunks\r\n    response = self.give_response_single(\r\n  File \"c:\\Users\\shara\\anaconda3\\envs\\YTSummariseGPT\\lib\\site-packages\\gpt_index\\indices\\response\\builder.py\", line 144, in give_response_single\r\n    response, _ = self.llm_predictor.predict(\r\n  File \"c:\\Users\\shara\\anaconda3\\envs\\YTSummariseGPT\\lib\\site-packages\\llama_index\\langchain_helpers\\chain_wrapper.py\", line 132, in predict\r\n    formatted_prompt = prompt.format(llm=self._llm, **prompt_args)\r\nAttributeError: 'ChatGPTLLMPredictor' object has no attribute '_llm'\r\n`\r\nNote: If I use GPTTreeIndex that leverages the LLM, it will fail at the index building phase citing the same error",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/789/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/789/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/788",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/788/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/788/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/788/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/788",
        "id": 1630828932,
        "node_id": "I_kwDOIWuq585hNHmE",
        "number": 788,
        "title": "how to wrap daily updates json into old one? ",
        "user": {
            "login": "bradcd",
            "id": 9527058,
            "node_id": "MDQ6VXNlcjk1MjcwNTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9527058?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bradcd",
            "html_url": "https://github.com/bradcd",
            "followers_url": "https://api.github.com/users/bradcd/followers",
            "following_url": "https://api.github.com/users/bradcd/following{/other_user}",
            "gists_url": "https://api.github.com/users/bradcd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bradcd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bradcd/subscriptions",
            "organizations_url": "https://api.github.com/users/bradcd/orgs",
            "repos_url": "https://api.github.com/users/bradcd/repos",
            "events_url": "https://api.github.com/users/bradcd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bradcd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-19T08:17:43Z",
        "updated_at": "2023-03-21T17:52:42Z",
        "closed_at": "2023-03-21T17:52:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello there! I was wondering if someone could kindly assist me with a question I have. Is there a way to combine multiple JSON files that were built using ComposableGraph and wrap them into one file? I need this method to append daily data after the old one. Any help or guidance on this matter would be greatly appreciated. Thank you so much for your time and consideration.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/788/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/788/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/787",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/787/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/787/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/787/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/787",
        "id": 1630827356,
        "node_id": "PR_kwDOIWuq585MYnTd",
        "number": 787,
        "title": "[version] bump version to 0.4.32",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-19T08:11:20Z",
        "updated_at": "2023-03-19T15:44:18Z",
        "closed_at": "2023-03-19T15:44:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/787",
            "html_url": "https://github.com/run-llama/llama_index/pull/787",
            "diff_url": "https://github.com/run-llama/llama_index/pull/787.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/787.patch",
            "merged_at": "2023-03-19T15:44:17Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/787/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/787/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/786",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/786/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/786/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/786/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/786",
        "id": 1630821861,
        "node_id": "PR_kwDOIWuq585MYmQd",
        "number": 786,
        "title": "add pandas index ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-19T07:48:58Z",
        "updated_at": "2023-03-19T07:56:25Z",
        "closed_at": "2023-03-19T07:56:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/786",
            "html_url": "https://github.com/run-llama/llama_index/pull/786",
            "diff_url": "https://github.com/run-llama/llama_index/pull/786.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/786.patch",
            "merged_at": "2023-03-19T07:56:24Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/786/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/786/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/785",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/785/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/785/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/785/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/785",
        "id": 1630737103,
        "node_id": "PR_kwDOIWuq585MYVSp",
        "number": 785,
        "title": "[version] bump version to 0.4.31",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-19T01:51:17Z",
        "updated_at": "2023-03-19T01:59:24Z",
        "closed_at": "2023-03-19T01:59:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/785",
            "html_url": "https://github.com/run-llama/llama_index/pull/785",
            "diff_url": "https://github.com/run-llama/llama_index/pull/785.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/785.patch",
            "merged_at": "2023-03-19T01:59:23Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/785/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/785/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/784",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/784/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/784/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/784/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/784",
        "id": 1630711204,
        "node_id": "PR_kwDOIWuq585MYQGY",
        "number": 784,
        "title": "[WIP] node structure refactor",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-19T00:16:53Z",
        "updated_at": "2023-08-28T17:11:37Z",
        "closed_at": "2023-03-22T04:27:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/784",
            "html_url": "https://github.com/run-llama/llama_index/pull/784",
            "diff_url": "https://github.com/run-llama/llama_index/pull/784.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/784.patch",
            "merged_at": null
        },
        "body": "Once this lands, we will bump up the minor version.\r\n\r\nDecouples node storage from storage of outer data structure. Allows nodes to be reused across indices, allows us to more easily store links between nodes, etc. \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/784/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/784/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/783",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/783/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/783/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/783/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/783",
        "id": 1630601874,
        "node_id": "PR_kwDOIWuq585MX35L",
        "number": 783,
        "title": "Convert query to sqlalchemy text first",
        "user": {
            "login": "emptycrown",
            "id": 13024392,
            "node_id": "MDQ6VXNlcjEzMDI0Mzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/13024392?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/emptycrown",
            "html_url": "https://github.com/emptycrown",
            "followers_url": "https://api.github.com/users/emptycrown/followers",
            "following_url": "https://api.github.com/users/emptycrown/following{/other_user}",
            "gists_url": "https://api.github.com/users/emptycrown/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/emptycrown/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/emptycrown/subscriptions",
            "organizations_url": "https://api.github.com/users/emptycrown/orgs",
            "repos_url": "https://api.github.com/users/emptycrown/repos",
            "events_url": "https://api.github.com/users/emptycrown/events{/privacy}",
            "received_events_url": "https://api.github.com/users/emptycrown/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-18T21:09:28Z",
        "updated_at": "2023-03-18T21:15:11Z",
        "closed_at": "2023-03-18T21:15:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/783",
            "html_url": "https://github.com/run-llama/llama_index/pull/783",
            "diff_url": "https://github.com/run-llama/llama_index/pull/783.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/783.patch",
            "merged_at": "2023-03-18T21:15:10Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/783/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/783/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/782",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/782/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/782/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/782/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/782",
        "id": 1630515007,
        "node_id": "PR_kwDOIWuq585MXk5l",
        "number": 782,
        "title": "Human-aligned text-to-sql evaluation",
        "user": {
            "login": "ekzhu",
            "id": 320302,
            "node_id": "MDQ6VXNlcjMyMDMwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/320302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ekzhu",
            "html_url": "https://github.com/ekzhu",
            "followers_url": "https://api.github.com/users/ekzhu/followers",
            "following_url": "https://api.github.com/users/ekzhu/following{/other_user}",
            "gists_url": "https://api.github.com/users/ekzhu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ekzhu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ekzhu/subscriptions",
            "organizations_url": "https://api.github.com/users/ekzhu/orgs",
            "repos_url": "https://api.github.com/users/ekzhu/repos",
            "events_url": "https://api.github.com/users/ekzhu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ekzhu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-18T18:48:51Z",
        "updated_at": "2023-03-20T06:04:57Z",
        "closed_at": "2023-03-20T06:04:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/782",
            "html_url": "https://github.com/run-llama/llama_index/pull/782",
            "diff_url": "https://github.com/run-llama/llama_index/pull/782.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/782.patch",
            "merged_at": "2023-03-20T06:04:57Z"
        },
        "body": "As pointed out in my [blog post](https://ekzhu.medium.com/what-is-coming-next-for-text-to-sql-719070bd769), the original evaluation metrics used by Spider benchmark is not aligned with typical human preference. \r\n\r\nThis PR aims to fix this issue by adding a new evaluation measure \"Answer Accuracy\", which is computed using LLM. I wrote a [blog post](https://ekzhu.medium.com/human-aligned-text-to-sql-evaluation-399123fa0a64) describing this new metrics. In short, we ask LLM to answer the input question using the execution output of generated and golden SQL queries, and then ask LLM again to check if the answer from the generated SQL query is correct. \r\n\r\nAnswer accuracies of various GPT models on 96 examples (86 train + 10 dev) sampled from Spider benchmark.\r\n\r\n|    Model          | Answer Accuracy |\r\n| ----------------- | --------------------- |\r\n| code-davinci-002  |        0.7917         |\r\n| text-davinci-003  |        0.8854         |\r\n| gpt-3.5-turbo     |        0.8542         |\r\n| gpt-4             |        0.8958         |\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/782/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/782/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/781",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/781/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/781/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/781/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/781",
        "id": 1630396712,
        "node_id": "PR_kwDOIWuq585MXKrW",
        "number": 781,
        "title": "[version] bump version to 0.4.30 ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-18T16:15:21Z",
        "updated_at": "2023-03-18T16:18:04Z",
        "closed_at": "2023-03-18T16:18:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/781",
            "html_url": "https://github.com/run-llama/llama_index/pull/781",
            "diff_url": "https://github.com/run-llama/llama_index/pull/781.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/781.patch",
            "merged_at": "2023-03-18T16:18:03Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/781/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/781/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/780",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/780/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/780/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/780/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/780",
        "id": 1630394190,
        "node_id": "PR_kwDOIWuq585MXKLr",
        "number": 780,
        "title": "add query decomposition part 2 ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-18T16:09:52Z",
        "updated_at": "2023-03-18T16:14:26Z",
        "closed_at": "2023-03-18T16:14:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/780",
            "html_url": "https://github.com/run-llama/llama_index/pull/780",
            "diff_url": "https://github.com/run-llama/llama_index/pull/780.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/780.patch",
            "merged_at": "2023-03-18T16:14:25Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/780/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/780/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/779",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/779/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/779/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/779/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/779",
        "id": 1630343572,
        "node_id": "I_kwDOIWuq585hLRGU",
        "number": 779,
        "title": "Chunking by paragraph",
        "user": {
            "login": "MyIsaak",
            "id": 4984415,
            "node_id": "MDQ6VXNlcjQ5ODQ0MTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4984415?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MyIsaak",
            "html_url": "https://github.com/MyIsaak",
            "followers_url": "https://api.github.com/users/MyIsaak/followers",
            "following_url": "https://api.github.com/users/MyIsaak/following{/other_user}",
            "gists_url": "https://api.github.com/users/MyIsaak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MyIsaak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MyIsaak/subscriptions",
            "organizations_url": "https://api.github.com/users/MyIsaak/orgs",
            "repos_url": "https://api.github.com/users/MyIsaak/repos",
            "events_url": "https://api.github.com/users/MyIsaak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MyIsaak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4751318873,
                "node_id": "LA_kwDOIWuq588AAAABGzNfWQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "7057ff",
                "default": true,
                "description": "Good for newcomers"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-18T14:12:43Z",
        "updated_at": "2023-06-06T02:30:49Z",
        "closed_at": "2023-06-06T02:30:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Is there a way to chunk by paragraph when creating a index?\r\n\r\nIf not, would this feature be considered as potentially viable to include inside this project? If so, I would be happy to contribute.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/779/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/779/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/778",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/778/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/778/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/778/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/778",
        "id": 1630263143,
        "node_id": "I_kwDOIWuq585hK9dn",
        "number": 778,
        "title": "How to get the context_str from the index query? ",
        "user": {
            "login": "madawei2699",
            "id": 2446612,
            "node_id": "MDQ6VXNlcjI0NDY2MTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2446612?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/madawei2699",
            "html_url": "https://github.com/madawei2699",
            "followers_url": "https://api.github.com/users/madawei2699/followers",
            "following_url": "https://api.github.com/users/madawei2699/following{/other_user}",
            "gists_url": "https://api.github.com/users/madawei2699/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/madawei2699/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/madawei2699/subscriptions",
            "organizations_url": "https://api.github.com/users/madawei2699/orgs",
            "repos_url": "https://api.github.com/users/madawei2699/repos",
            "events_url": "https://api.github.com/users/madawei2699/events{/privacy}",
            "received_events_url": "https://api.github.com/users/madawei2699/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-03-18T10:10:09Z",
        "updated_at": "2023-10-04T11:08:38Z",
        "closed_at": "2023-06-06T02:30:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The background is the ChatGPT API is easy to cut the response sentences if the sentences overflow the limit. But in the web console, we can send a `continue` word to let the chatGPT continue to respond as we know the web can bring our history dialog to the ChatGPT.\r\n\r\nThe question is how to get the history query sentences generated by llama_index, e.g. in the custom prompt template, there is a `context_str` generated by the llama_index, seems this is generated by llama_index and sent to the chatGPT to provide the context which is about the documents with our query.\r\n\r\n```\r\nQUESTION_ANSWER_PROMPT_TMPL = (\r\n    \"Context information is below. \\n\"\r\n    \"---------------------\\n\"\r\n    \"{context_str}\"\r\n    \"\\n---------------------\\n\"\r\n    \"Given the context information and not prior knowledge, \"\r\n    \"Please answer this question line by line using the same language as the question: {query_str}\\n\"\r\n)\r\n```\r\n\r\nMy idea is to get the `context_str` and store it, if the response is cut, I can give the context and history sentences to let the chatGPT continue to respond. This way can simulate the web console of ChatGPT.\r\n\r\nThe question is how to get the `context_str` from the index query. I didn't find the hooks or callback.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/778/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/778/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/777",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/777/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/777/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/777/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/777",
        "id": 1630254081,
        "node_id": "I_kwDOIWuq585hK7QB",
        "number": 777,
        "title": "Chroma Index not save embedding costing",
        "user": {
            "login": "madawei2699",
            "id": 2446612,
            "node_id": "MDQ6VXNlcjI0NDY2MTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2446612?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/madawei2699",
            "html_url": "https://github.com/madawei2699",
            "followers_url": "https://api.github.com/users/madawei2699/followers",
            "following_url": "https://api.github.com/users/madawei2699/following{/other_user}",
            "gists_url": "https://api.github.com/users/madawei2699/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/madawei2699/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/madawei2699/subscriptions",
            "organizations_url": "https://api.github.com/users/madawei2699/orgs",
            "repos_url": "https://api.github.com/users/madawei2699/repos",
            "events_url": "https://api.github.com/users/madawei2699/events{/privacy}",
            "received_events_url": "https://api.github.com/users/madawei2699/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-18T09:57:03Z",
        "updated_at": "2023-03-19T00:17:57Z",
        "closed_at": "2023-03-18T16:18:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Chroma Index with custom embed model\r\nMy code is here:\r\n\r\n```python\r\nimport hashlib\r\nfrom llama_index import TrafilaturaWebReader, LLMPredictor, GPTChromaIndex\r\nfrom langchain.chat_models import ChatOpenAI\r\nimport chromadb\r\nfrom chromadb.utils import embedding_functions\r\nfrom chromadb.config import Settings\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom llama_index import LangchainEmbedding\r\nfrom llama_index.prompts.prompts import QuestionAnswerPrompt\r\n\r\ndef get_unique_md5(urls):\r\n    urls_str = ''.join(sorted(urls))\r\n    hashed_str = hashlib.md5(urls_str.encode('utf-8')).hexdigest()\r\n    return hashed_str\r\n\r\nQUESTION_ANSWER_PROMPT_TMPL = (\r\n    \"Context information is below. \\n\"\r\n    \"---------------------\\n\"\r\n    \"{context_str}\"\r\n    \"\\n---------------------\\n\"\r\n    \"Given the context information and not prior knowledge, \"\r\n    \"Please answer this question line by line using the same language as the question: {query_str}\\n\"\r\n)\r\nQUESTION_ANSWER_PROMPT = QuestionAnswerPrompt(QUESTION_ANSWER_PROMPT_TMPL)\r\n\r\nsentence_transformer_ef = embedding_functions.SentenceTransformerEmbeddingFunction(model_name=\"all-MiniLM-L6-v2\")\r\n\r\nchroma_client = chromadb.Client(Settings(\r\n    chroma_db_impl=\"duckdb+parquet\",\r\n    persist_directory=\"/tmp/myGPTReader\"\r\n))\r\n\r\nembed_model = LangchainEmbedding(HuggingFaceEmbeddings(model_name=\"sentence-transformers/all-MiniLM-L6-v2\"))\r\n\r\nllm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\"))\r\n\r\nurls = [\r\n    \"https://apnews.com/article/silicon-valley-bank-bailout-yellen-deposits-failure-94f2185742981daf337c4691bbb9ec1e\"\r\n]\r\n\r\nchroma_collection_name = get_unique_md5(urls)\r\n\r\nchroma_collection = chroma_client.get_or_create_collection(chroma_collection_name, embedding_function=sentence_transformer_ef)\r\n\r\ndocuments = TrafilaturaWebReader().load_data(urls)\r\nindex = GPTChromaIndex(documents, chroma_collection=chroma_collection)\r\n\r\nr = index.query(\"what the post says?\", llm_predictor=llm_predictor, text_qa_template=QUESTION_ANSWER_PROMPT)\r\n\r\nprint(r)\r\n```\r\nAfter checking the openAI model usage, the result shows it still calls the embedding model although I set a custom embed model `all-MiniLM-L6-v2`, the usage log is here:\r\n\r\n```text\r\n9:00 AM\r\nLocal time: Mar 18, 2023, 5:00 PM\r\ngpt-3.5-turbo-0301, 1 request\r\n1,618 prompt + 97 completion = 1,715 tokens\r\n9:00 AM\r\nLocal time: Mar 18, 2023, 5:00 PM\r\ntext-embedding-ada-002-v2, 2 requests\r\n1,542 prompt + 0 completion = 1,542 tokens\r\n```\r\n\r\n## GPTSimpleVectorIndex `without` custom embed model\r\n\r\nCompare with the GPTSimpleVectorIndex, the code and log is:\r\n\r\n```python\r\nvector_index = GPTSimpleVectorIndex(documents)\r\n\r\n# INFO:root:> [build_index_from_documents] Total LLM token usage: 0 tokens\r\n# INFO:root:> [build_index_from_documents] Total embedding token usage: 1635 tokens\r\n\r\nr = vector_index.query(\"what this post say\", llm_predictor=llm_predictor, text_qa_template=QUESTION_ANSWER_PROMPT)\r\nprint(r)\r\n\r\n# INFO:root:> [query] Total LLM token usage: 1937 tokens\r\n# INFO:root:> [query] Total embedding token usage: 4 tokens\r\n```\r\nthe usage log is:\r\n\r\n```text\r\n9:10 AM\r\nLocal time: Mar 18, 2023, 5:10 PM\r\ngpt-3.5-turbo-0301, 1 request\r\n1,591 prompt + 256 completion = 1,847 tokens\r\n9:10 AM\r\nLocal time: Mar 18, 2023, 5:10 PM\r\ntext-embedding-ada-002-v2, 2 requests\r\n1,542 prompt + 0 completion = 1,542 tokens\r\n```\r\n\r\n## GPTSimpleVectorIndex `with` custom embed model\r\n\r\n```python\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom llama_index import LangchainEmbedding\r\nembed_model = LangchainEmbedding(HuggingFaceEmbeddings(model_name=\"sentence-transformers/all-MiniLM-L6-v2\"))\r\nvector_index = GPTSimpleVectorIndex(documents, embed_model=embed_model)\r\n\r\n# Batches: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00<00:00,  2.95it/s]\r\n# INFO:root:> [build_index_from_documents] Total LLM token usage: 0 tokens\r\n# INFO:root:> [build_index_from_documents] Total embedding token usage: 1635 tokens\r\n\r\nr = vector_index.query(\"what this post say\", llm_predictor=llm_predictor, text_qa_template=QUESTION_ANSWER_PROMPT)\r\nprint(r)\r\n\r\n# Batches: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 1/1 [00:00<00:00, 12.78it/s]\r\n# INFO:root:> [query] Total LLM token usage: 1936 tokens\r\n# INFO:root:> [query] Total embedding token usage: 4 tokens\r\n```\r\n\r\nthe usage log is:\r\n\r\n```text\r\n9:25 AM\r\nLocal time: Mar 18, 2023, 5:25 PM\r\ngpt-3.5-turbo-0301, 1 request\r\n1,591 prompt + 256 completion = 1,847 tokens\r\n```\r\n\r\n## Conclusion\r\n\r\nAs you can see, the Chroma Index with custom embed model is same as the GPTSimpleVectorIndex `without` custom embed model, which can not save embedding costing.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/777/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/777/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/776",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/776/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/776/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/776/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/776",
        "id": 1630216737,
        "node_id": "I_kwDOIWuq585hKyIh",
        "number": 776,
        "title": "Dimensionality of query embeddings does not match index dimensionality",
        "user": {
            "login": "madawei2699",
            "id": 2446612,
            "node_id": "MDQ6VXNlcjI0NDY2MTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2446612?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/madawei2699",
            "html_url": "https://github.com/madawei2699",
            "followers_url": "https://api.github.com/users/madawei2699/followers",
            "following_url": "https://api.github.com/users/madawei2699/following{/other_user}",
            "gists_url": "https://api.github.com/users/madawei2699/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/madawei2699/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/madawei2699/subscriptions",
            "organizations_url": "https://api.github.com/users/madawei2699/orgs",
            "repos_url": "https://api.github.com/users/madawei2699/repos",
            "events_url": "https://api.github.com/users/madawei2699/events{/privacy}",
            "received_events_url": "https://api.github.com/users/madawei2699/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-03-18T07:38:34Z",
        "updated_at": "2023-09-09T21:36:22Z",
        "closed_at": "2023-03-18T16:37:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I want to use the chromadb to store the index with a custom embedding function, and query the index with a custom embedding model, but the error is `InvalidDimensionException: Dimensionality of new embeddings (384) does not match index dimensionality (1536)`\r\n\r\nHere is the code:\r\n\r\n```python\r\nimport hashlib\r\nfrom llama_index import TrafilaturaWebReader, LLMPredictor, GPTChromaIndex\r\nfrom langchain.chat_models import ChatOpenAI\r\nimport chromadb\r\nfrom chromadb.utils import embedding_functions\r\nfrom chromadb.config import Settings\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom llama_index import LangchainEmbedding\r\nfrom llama_index.prompts.prompts import QuestionAnswerPrompt\r\n\r\ndef get_unique_md5(urls):\r\n    urls_str = ''.join(sorted(urls))\r\n    hashed_str = hashlib.md5(urls_str.encode('utf-8')).hexdigest()\r\n    return hashed_str\r\n\r\nQUESTION_ANSWER_PROMPT_TMPL = (\r\n    \"Context information is below. \\n\"\r\n    \"---------------------\\n\"\r\n    \"{context_str}\"\r\n    \"\\n---------------------\\n\"\r\n    \"Given the context information and not prior knowledge, \"\r\n    \"Please answer this question line by line using the same language as the question: {query_str}\\n\"\r\n)\r\nQUESTION_ANSWER_PROMPT = QuestionAnswerPrompt(QUESTION_ANSWER_PROMPT_TMPL)\r\n\r\nsentence_transformer_ef = embedding_functions.SentenceTransformerEmbeddingFunction(model_name=\"all-MiniLM-L6-v2\")\r\n\r\nchroma_client = chromadb.Client(Settings(\r\n    chroma_db_impl=\"duckdb+parquet\",\r\n    persist_directory=\"/tmp/myGPTReader\"\r\n))\r\n\r\nembed_model = LangchainEmbedding(HuggingFaceEmbeddings(model_name=\"sentence-transformers/all-MiniLM-L6-v2\"))\r\n\r\nllm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\"))\r\n\r\nurls = [\r\n    \"https://apnews.com/article/silicon-valley-bank-bailout-yellen-deposits-failure-94f2185742981daf337c4691bbb9ec1e\"\r\n]\r\n\r\nchroma_collection_name = get_unique_md5(urls)\r\n\r\nchroma_collection = chroma_client.get_or_create_collection(chroma_collection_name, embedding_function=sentence_transformer_ef)\r\n\r\ndocuments = TrafilaturaWebReader().load_data(urls)\r\nindex = GPTChromaIndex(documents, chroma_collection=chroma_collection, embed_model=embed_model) # this will raise the exception: InvalidDimensionException: Dimensionality of new embeddings (384) does not match index dimensionality (1536)\r\n\r\nr = index.query(\"Why Silicon Valley Bank customers would need funds and withdraw deposits, please reply in Chinese\", llm_predictor=llm_predictor, text_qa_template=QUESTION_ANSWER_PROMPT, mode=\"embedding\", embed_model=embed_model)\r\n\r\nprint(r)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/776/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/776/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/775",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/775/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/775/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/775/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/775",
        "id": 1629888898,
        "node_id": "I_kwDOIWuq585hJiGC",
        "number": 775,
        "title": "GoogleDocsReader - Request contains an invalid argument",
        "user": {
            "login": "am17torres",
            "id": 70786,
            "node_id": "MDQ6VXNlcjcwNzg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/70786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/am17torres",
            "html_url": "https://github.com/am17torres",
            "followers_url": "https://api.github.com/users/am17torres/followers",
            "following_url": "https://api.github.com/users/am17torres/following{/other_user}",
            "gists_url": "https://api.github.com/users/am17torres/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/am17torres/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/am17torres/subscriptions",
            "organizations_url": "https://api.github.com/users/am17torres/orgs",
            "repos_url": "https://api.github.com/users/am17torres/repos",
            "events_url": "https://api.github.com/users/am17torres/events{/privacy}",
            "received_events_url": "https://api.github.com/users/am17torres/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-17T20:19:23Z",
        "updated_at": "2023-03-17T20:36:17Z",
        "closed_at": "2023-03-17T20:36:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm trying to implement the GoogleDocsReader [following the instructions here](https://gpt-index.readthedocs.io/en/latest/how_to/data_connectors.html#data-connectors-llamahub).\r\n\r\n```python\r\nfrom llama_index import GPTSimpleVectorIndex, download_loader\r\n\r\nGoogleDocsReader = download_loader('GoogleDocsReader')\r\n\r\ngdoc_ids = ['1wf-y2pd9C878Oh-FmLH7Q_BQkljdm6TQal-c1pUfrec'] # I've substituted my google doc id in my code\r\nloader = GoogleDocsReader()\r\ndocuments = loader.load_data(document_ids=gdoc_ids)\r\nindex = GPTSimpleVectorIndex(documents)\r\nindex.query('Where did the author go to school?')\r\n```\r\n\r\nI managed to get auth working using the oauth2 flow and have a token.json file \r\n\r\nQuick aside - [had to set the port to any fixed value from 0](https://github.com/jerryjliu/llama_index/blob/main/gpt_index/readers/google_readers/gdocs.py#L107) so I could setup the `redirect_url`, otherwise it would randomly pick the port and I'd get a mismatch url.\r\n\r\nThe bigger issue is now that I'm authenticated, enabled the GoogleDocs Api in GCP, and go to run the script. \r\n\r\n```\r\nINFO:googleapiclient.discovery_cache:file_cache is only supported with oauth2client<4.0.0\r\nTraceback (most recent call last):\r\n  File \"~/gpt_docs/index.py\", line 11, in <module>\r\n    documents = loader.load_data(document_ids=gdoc_ids)\r\n  File \"~/Library/Application Support/pdm/venv/lib/python3.9/site-packages/llama_index/readers/llamahub_modules/google_docs/base.py\", line 45, in load_data\r\n    doc = self._load_doc(document_id)\r\n  File \"~/Library/Application Support/pdm/venv/lib/python3.9/site-packages/llama_index/readers/llamahub_modules/google_docs/base.py\", line 62, in _load_doc\r\n    doc = docs_service.documents().get(documentId=document_id).execute()\r\n  File \"~/Library/Application Support/pdm/venv/lib/python3.9/site-packages/googleapiclient/_helpers.py\", line 130, in positional_wrapper\r\n    return wrapped(*args, **kwargs)\r\n  File \"~/Library/Application Support/pdm/venv/lib/python3.9/site-packages/googleapiclient/http.py\", line 938, in execute\r\n    raise HttpError(resp, content, uri=self.uri)\r\ngoogleapiclient.errors.HttpError: <HttpError 400 when requesting https://docs.googleapis.com/v1/documents/<REDACTED>?alt=json returned \"Request contains an invalid argument.\". Details: \"Request contains an invalid argument.\">\r\n```\r\n\r\nexcerpt from pyproject.toml\r\n\r\n```toml\r\ndependencies = [\r\n    \"llama-index>=0.4.29\",\r\n    \"openai>=0.27.2\",\r\n    \"google-api-python-client>=2.81.0\",\r\n    \"google-auth-httplib2>=0.1.0\",\r\n    \"google-auth-oauthlib>=1.0.0\",\r\n]\r\n```\r\n\r\nIs this a package issue or am I missing something obvious. Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/775/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/775/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/774",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/774/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/774/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/774/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/774",
        "id": 1629114618,
        "node_id": "I_kwDOIWuq585hGlD6",
        "number": 774,
        "title": "Support for gpt-3.5-turbo ",
        "user": {
            "login": "rcala1",
            "id": 48602053,
            "node_id": "MDQ6VXNlcjQ4NjAyMDUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/48602053?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rcala1",
            "html_url": "https://github.com/rcala1",
            "followers_url": "https://api.github.com/users/rcala1/followers",
            "following_url": "https://api.github.com/users/rcala1/following{/other_user}",
            "gists_url": "https://api.github.com/users/rcala1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rcala1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rcala1/subscriptions",
            "organizations_url": "https://api.github.com/users/rcala1/orgs",
            "repos_url": "https://api.github.com/users/rcala1/repos",
            "events_url": "https://api.github.com/users/rcala1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rcala1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-17T11:01:25Z",
        "updated_at": "2023-03-18T10:55:53Z",
        "closed_at": "2023-03-18T10:55:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Is it possible to use newest gpt-3.5-turbo for llm_predictor in indices?\r\n\r\n...\r\nllm_predictor = LLMPredictor(llm=OpenAI(model_name=\"gpt-3.5-turbo\"))\r\nindex_csv = GPTSimpleVectorIndex(documents, llm_predictor=llm_predictor)\r\n...\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/774/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/774/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/773",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/773/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/773/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/773/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/773",
        "id": 1628797472,
        "node_id": "I_kwDOIWuq585hFXog",
        "number": 773,
        "title": "Simple questions cause ZeroDivisionError: integer division or modulo by zero decompose_transform ",
        "user": {
            "login": "sunilkgrao",
            "id": 2292774,
            "node_id": "MDQ6VXNlcjIyOTI3NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2292774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sunilkgrao",
            "html_url": "https://github.com/sunilkgrao",
            "followers_url": "https://api.github.com/users/sunilkgrao/followers",
            "following_url": "https://api.github.com/users/sunilkgrao/following{/other_user}",
            "gists_url": "https://api.github.com/users/sunilkgrao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sunilkgrao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sunilkgrao/subscriptions",
            "organizations_url": "https://api.github.com/users/sunilkgrao/orgs",
            "repos_url": "https://api.github.com/users/sunilkgrao/repos",
            "events_url": "https://api.github.com/users/sunilkgrao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sunilkgrao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4751318873,
                "node_id": "LA_kwDOIWuq588AAAABGzNfWQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "7057ff",
                "default": true,
                "description": "Good for newcomers"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-03-17T06:52:53Z",
        "updated_at": "2023-07-23T21:02:27Z",
        "closed_at": "2023-07-23T21:02:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When calling \r\n\r\ngraph.query(\r\n        query_str, \r\n        query_configs=query_configs, \r\n        llm_predictor=llm_predictor,\r\n    )\r\n\r\nThis seems to be issue:\r\n\r\nFile \"/usr/local/lib/python3.9/site-packages/llama_index/indices/prompt_helper.py\", line 105, in get_chunk_size_given_prompt\r\n\r\nIt only happens when the question is short or about a topic unrelated to what is in the index.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/773/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 3
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/773/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/772",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/772/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/772/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/772/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/772",
        "id": 1628776621,
        "node_id": "PR_kwDOIWuq585MR1NW",
        "number": 772,
        "title": "Choose encoding when saving index to disk",
        "user": {
            "login": "kevin51jiang",
            "id": 33907581,
            "node_id": "MDQ6VXNlcjMzOTA3NTgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/33907581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevin51jiang",
            "html_url": "https://github.com/kevin51jiang",
            "followers_url": "https://api.github.com/users/kevin51jiang/followers",
            "following_url": "https://api.github.com/users/kevin51jiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevin51jiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevin51jiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevin51jiang/subscriptions",
            "organizations_url": "https://api.github.com/users/kevin51jiang/orgs",
            "repos_url": "https://api.github.com/users/kevin51jiang/repos",
            "events_url": "https://api.github.com/users/kevin51jiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevin51jiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-17T06:29:13Z",
        "updated_at": "2023-03-18T06:12:17Z",
        "closed_at": "2023-03-18T06:12:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/772",
            "html_url": "https://github.com/run-llama/llama_index/pull/772",
            "diff_url": "https://github.com/run-llama/llama_index/pull/772.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/772.patch",
            "merged_at": "2023-03-18T06:12:17Z"
        },
        "body": "Allow choosing type of encoding before saving to disk. Defaulting to ASCII for backwards compatability. \r\n\r\n\r\nFixes #406 \r\n\r\nThis is how it can be used\r\n```\r\nindex.save_to_disk(\"index.json\", encoding=\"utf8\", ensure_ascii=False)\r\n``` \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/772/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/772/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/771",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/771/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/771/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/771/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/771",
        "id": 1628679150,
        "node_id": "PR_kwDOIWuq585MRgGg",
        "number": 771,
        "title": "Add custom SSL support for SlackReader",
        "user": {
            "login": "ethan-fraser",
            "id": 50810764,
            "node_id": "MDQ6VXNlcjUwODEwNzY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/50810764?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethan-fraser",
            "html_url": "https://github.com/ethan-fraser",
            "followers_url": "https://api.github.com/users/ethan-fraser/followers",
            "following_url": "https://api.github.com/users/ethan-fraser/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethan-fraser/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethan-fraser/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethan-fraser/subscriptions",
            "organizations_url": "https://api.github.com/users/ethan-fraser/orgs",
            "repos_url": "https://api.github.com/users/ethan-fraser/repos",
            "events_url": "https://api.github.com/users/ethan-fraser/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethan-fraser/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-17T04:42:02Z",
        "updated_at": "2023-03-17T05:58:04Z",
        "closed_at": "2023-03-17T05:58:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/771",
            "html_url": "https://github.com/run-llama/llama_index/pull/771",
            "diff_url": "https://github.com/run-llama/llama_index/pull/771.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/771.patch",
            "merged_at": "2023-03-17T05:58:04Z"
        },
        "body": "I noticed the SlackReader was missing support for a custom SSL context. This PR adds this.\r\n\r\nChanges required:\r\n - Add an optional parameter `ssl: Optional[SSLContext]` to the `SlackReader` constructor.\r\n - Branch the instantiation of the `client` object based on the availability of this parameter. If it is `None`, the `client` is instantiated as before. If the `ssl` parameter is available, it is passed into the `WebClient` constructor.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/771/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/771/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/770",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/770/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/770/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/770/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/770",
        "id": 1628624333,
        "node_id": "I_kwDOIWuq585hEtXN",
        "number": 770,
        "title": "Is there a way to prevent the model from querying things unrelated to the data?",
        "user": {
            "login": "ahmedpanju",
            "id": 27694975,
            "node_id": "MDQ6VXNlcjI3Njk0OTc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/27694975?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ahmedpanju",
            "html_url": "https://github.com/ahmedpanju",
            "followers_url": "https://api.github.com/users/ahmedpanju/followers",
            "following_url": "https://api.github.com/users/ahmedpanju/following{/other_user}",
            "gists_url": "https://api.github.com/users/ahmedpanju/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ahmedpanju/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ahmedpanju/subscriptions",
            "organizations_url": "https://api.github.com/users/ahmedpanju/orgs",
            "repos_url": "https://api.github.com/users/ahmedpanju/repos",
            "events_url": "https://api.github.com/users/ahmedpanju/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ahmedpanju/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-03-17T03:23:30Z",
        "updated_at": "2023-03-23T13:48:28Z",
        "closed_at": "2023-03-17T04:37:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I currently have a .txt file that is being indexed, and queried against. It's working really well, except the model still answers questions that are unrelated to things in the .txt file (ex. I can ask \"When was world war 2\" despite the .txt file being about job descriptions)\r\n\r\nIs there a workaround for this, and if not, has anyone managed to come up with a validation layer?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/770/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/770/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/769",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/769/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/769/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/769/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/769",
        "id": 1628606258,
        "node_id": "PR_kwDOIWuq585MRQr-",
        "number": 769,
        "title": "Notebook for comparing LLMs for evaluation",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-17T03:01:22Z",
        "updated_at": "2023-03-17T16:30:17Z",
        "closed_at": "2023-03-17T16:30:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/769",
            "html_url": "https://github.com/run-llama/llama_index/pull/769",
            "diff_url": "https://github.com/run-llama/llama_index/pull/769.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/769.patch",
            "merged_at": "2023-03-17T16:30:15Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/769/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/769/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/768",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/768/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/768/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/768/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/768",
        "id": 1628541095,
        "node_id": "PR_kwDOIWuq585MRDpy",
        "number": 768,
        "title": "Hongyi sentence chunking",
        "user": {
            "login": "hongyishi",
            "id": 7098202,
            "node_id": "MDQ6VXNlcjcwOTgyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7098202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hongyishi",
            "html_url": "https://github.com/hongyishi",
            "followers_url": "https://api.github.com/users/hongyishi/followers",
            "following_url": "https://api.github.com/users/hongyishi/following{/other_user}",
            "gists_url": "https://api.github.com/users/hongyishi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hongyishi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hongyishi/subscriptions",
            "organizations_url": "https://api.github.com/users/hongyishi/orgs",
            "repos_url": "https://api.github.com/users/hongyishi/repos",
            "events_url": "https://api.github.com/users/hongyishi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hongyishi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-17T01:29:23Z",
        "updated_at": "2023-03-17T03:25:28Z",
        "closed_at": "2023-03-17T03:25:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/768",
            "html_url": "https://github.com/run-llama/llama_index/pull/768",
            "diff_url": "https://github.com/run-llama/llama_index/pull/768.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/768.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/768/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/768/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/767",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/767/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/767/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/767/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/767",
        "id": 1628139125,
        "node_id": "PR_kwDOIWuq585MPrpF",
        "number": 767,
        "title": "add ability to customize tokenizer + optimizer test",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-16T19:30:43Z",
        "updated_at": "2023-03-16T19:41:59Z",
        "closed_at": "2023-03-16T19:41:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/767",
            "html_url": "https://github.com/run-llama/llama_index/pull/767",
            "diff_url": "https://github.com/run-llama/llama_index/pull/767.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/767.patch",
            "merged_at": "2023-03-16T19:41:58Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/767/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/767/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/766",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/766/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/766/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/766/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/766",
        "id": 1627878956,
        "node_id": "I_kwDOIWuq585hB3Ys",
        "number": 766,
        "title": "About token cost",
        "user": {
            "login": "KAMIENDER",
            "id": 30643514,
            "node_id": "MDQ6VXNlcjMwNjQzNTE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/30643514?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KAMIENDER",
            "html_url": "https://github.com/KAMIENDER",
            "followers_url": "https://api.github.com/users/KAMIENDER/followers",
            "following_url": "https://api.github.com/users/KAMIENDER/following{/other_user}",
            "gists_url": "https://api.github.com/users/KAMIENDER/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KAMIENDER/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KAMIENDER/subscriptions",
            "organizations_url": "https://api.github.com/users/KAMIENDER/orgs",
            "repos_url": "https://api.github.com/users/KAMIENDER/repos",
            "events_url": "https://api.github.com/users/KAMIENDER/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KAMIENDER/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-16T16:39:57Z",
        "updated_at": "2023-03-16T17:13:59Z",
        "closed_at": "2023-03-16T17:13:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When using the MockLLMPredictor, how can I get the token cost results without making a request to the LLM?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/766/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/766/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/765",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/765/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/765/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/765/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/765",
        "id": 1627490111,
        "node_id": "PR_kwDOIWuq585MNeDj",
        "number": 765,
        "title": "Fix `GPTSQLStructStoreIndex.load_from_disk`",
        "user": {
            "login": "vladsavelyev",
            "id": 1575412,
            "node_id": "MDQ6VXNlcjE1NzU0MTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1575412?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vladsavelyev",
            "html_url": "https://github.com/vladsavelyev",
            "followers_url": "https://api.github.com/users/vladsavelyev/followers",
            "following_url": "https://api.github.com/users/vladsavelyev/following{/other_user}",
            "gists_url": "https://api.github.com/users/vladsavelyev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vladsavelyev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vladsavelyev/subscriptions",
            "organizations_url": "https://api.github.com/users/vladsavelyev/orgs",
            "repos_url": "https://api.github.com/users/vladsavelyev/repos",
            "events_url": "https://api.github.com/users/vladsavelyev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vladsavelyev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-03-16T13:35:57Z",
        "updated_at": "2023-03-20T17:24:33Z",
        "closed_at": "2023-03-20T17:24:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/765",
            "html_url": "https://github.com/run-llama/llama_index/pull/765",
            "diff_url": "https://github.com/run-llama/llama_index/pull/765.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/765.patch",
            "merged_at": "2023-03-20T17:24:33Z"
        },
        "body": "Defaulting to an empty list for `documents` doesn't work here, because it would later fail the check against `None` on this line: https://github.com/jerryjliu/llama_index/blob/main/gpt_index/indices/base.py#L82-L83, which leads to `Only one of documents or index_struct can be provided.` when loading the index from disk.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/765/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/765/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/764",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/764/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/764/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/764/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/764",
        "id": 1627424220,
        "node_id": "I_kwDOIWuq585hAIXc",
        "number": 764,
        "title": "Load GPTSQLStructStoreIndex from disk",
        "user": {
            "login": "Thieund",
            "id": 14900487,
            "node_id": "MDQ6VXNlcjE0OTAwNDg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/14900487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Thieund",
            "html_url": "https://github.com/Thieund",
            "followers_url": "https://api.github.com/users/Thieund/followers",
            "following_url": "https://api.github.com/users/Thieund/following{/other_user}",
            "gists_url": "https://api.github.com/users/Thieund/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Thieund/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Thieund/subscriptions",
            "organizations_url": "https://api.github.com/users/Thieund/orgs",
            "repos_url": "https://api.github.com/users/Thieund/repos",
            "events_url": "https://api.github.com/users/Thieund/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Thieund/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4751318873,
                "node_id": "LA_kwDOIWuq588AAAABGzNfWQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/good%20first%20issue",
                "name": "good first issue",
                "color": "7057ff",
                "default": true,
                "description": "Good for newcomers"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-03-16T12:58:24Z",
        "updated_at": "2023-06-06T01:29:52Z",
        "closed_at": "2023-06-06T01:29:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\nI've created a GPTSQLStructStoreIndex and saved it to disk.\r\nThen I tried to load it from disk as following:\r\n`index = GPTSQLStructStoreIndex.load_from_disk('citizenDb.json', sql_database=sql_database)`\r\nI encountered the error \"Only one of documents or index_struct can be provided.\"\r\nCould anyone help me with that ? Thanks.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/764/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/764/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/763",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/763/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/763/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/763/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/763",
        "id": 1627132076,
        "node_id": "I_kwDOIWuq585g_BCs",
        "number": 763,
        "title": "multimodal/ Multimodal.ipynb example doesn't include vital details",
        "user": {
            "login": "pleabargain",
            "id": 640846,
            "node_id": "MDQ6VXNlcjY0MDg0Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/640846?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pleabargain",
            "html_url": "https://github.com/pleabargain",
            "followers_url": "https://api.github.com/users/pleabargain/followers",
            "following_url": "https://api.github.com/users/pleabargain/following{/other_user}",
            "gists_url": "https://api.github.com/users/pleabargain/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pleabargain/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pleabargain/subscriptions",
            "organizations_url": "https://api.github.com/users/pleabargain/orgs",
            "repos_url": "https://api.github.com/users/pleabargain/repos",
            "events_url": "https://api.github.com/users/pleabargain/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pleabargain/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-16T10:10:31Z",
        "updated_at": "2023-06-06T01:29:04Z",
        "closed_at": "2023-06-06T01:29:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "There are a number of libs | imports not included\r\ne.g. # ! pip install sentencepiece\r\n#! pip install transformers\r\n# ! pip install gpt_index\r\n\r\nAnd the code insists on openai_api_key\r\nbut no matter how I try to set this VAR, the code complains that the openai_api_key doesn't exist.\r\n\r\nreciept reader code complains for a long time:\r\nCould not find image processor class in the image processor config or the model config. Loading based on pattern matching with the model's feature extractor configuration.\r\n\r\n\r\n\r\nI tried with\r\nOPENAI_API_KEY=\"sk-XXX\"\r\nand\r\nopenai_api_key=\"sk-XXX\"\r\nboth failed with\r\n\r\n\r\nDid not find openai_api_key, please add an environment variable `OPENAI_API_KEY` which contains it, or pass  `openai_api_key` as a named parameter. (type=value_error)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/763/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/763/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/762",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/762/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/762/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/762/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/762",
        "id": 1626967299,
        "node_id": "I_kwDOIWuq585g-Y0D",
        "number": 762,
        "title": "on Azure OpenAI, load from json, query index from it, an error occured",
        "user": {
            "login": "yongxin-ms",
            "id": 7688554,
            "node_id": "MDQ6VXNlcjc2ODg1NTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7688554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yongxin-ms",
            "html_url": "https://github.com/yongxin-ms",
            "followers_url": "https://api.github.com/users/yongxin-ms/followers",
            "following_url": "https://api.github.com/users/yongxin-ms/following{/other_user}",
            "gists_url": "https://api.github.com/users/yongxin-ms/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yongxin-ms/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yongxin-ms/subscriptions",
            "organizations_url": "https://api.github.com/users/yongxin-ms/orgs",
            "repos_url": "https://api.github.com/users/yongxin-ms/repos",
            "events_url": "https://api.github.com/users/yongxin-ms/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yongxin-ms/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-16T08:37:53Z",
        "updated_at": "2023-03-25T02:20:52Z",
        "closed_at": "2023-03-25T02:20:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "I am using these models:\r\ndeployment_name = \"text-davinci-003\"\r\ndocument_model = \"text-embedding-ada-002\"\r\nquery_model = \"text-embedding-ada-002\"\r\n\r\nit's on Azure OpenAI\r\n\r\nWhen it creates the index and runs, everything is fine, but when saves it to a json file, then loads from it, then query index from it, an error occured like this:\r\n\r\n`\r\nInvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.completion.Completion'>\r\nTraceback:\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\streamlit\\runtime\\scriptrunner\\script_runner.py\", line 565, in _run_script\r\n    exec(code, module.__dict__)\r\nFile \"D:\\5_OpenAI\\spring-apps-bot\\app.py\", line 85, in <module>\r\n    response = query_index(index, text)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\streamlit\\runtime\\caching\\cache_utils.py\", line 194, in wrapper\r\n    return cached_func(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\streamlit\\runtime\\caching\\cache_utils.py\", line 223, in __call__\r\n    return self._get_or_create_cached_value(args, kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\streamlit\\runtime\\caching\\cache_utils.py\", line 248, in _get_or_create_cached_value\r\n    return self._handle_cache_miss(cache, value_key, func_args, func_kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\streamlit\\runtime\\caching\\cache_utils.py\", line 302, in _handle_cache_miss\r\n    computed_value = self._info.func(*func_args, **func_kwargs)\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"D:\\5_OpenAI\\spring-apps-bot\\app.py\", line 74, in query_index\r\n    response = _index.query(query_text)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\llama_index\\indices\\base.py\", line 419, in query\r\n    return query_runner.query(query_str, self._index_struct)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\llama_index\\indices\\query\\query_runner.py\", line 149, in query\r\n    return query_obj.query(query_bundle)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\llama_index\\token_counter\\token_counter.py\", line 84, in wrapped_llm_predict\r\n    f_return_val = f(_self, *args, **kwargs)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\llama_index\\indices\\query\\base.py\", line 383, in query\r\n    response = self._query(query_bundle)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\llama_index\\indices\\query\\base.py\", line 359, in _query\r\n    response_str = self._give_response_for_nodes(query_bundle.query_str)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\llama_index\\indices\\query\\base.py\", line 251, in _give_response_for_nodes\r\n    response = self.response_builder.get_response(\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\llama_index\\indices\\response\\builder.py\", line 318, in get_response\r\n    return self._get_response_default(query_str, prev_response)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\llama_index\\indices\\response\\builder.py\", line 201, in _get_response_default\r\n    return self.get_response_over_chunks(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\llama_index\\indices\\response\\builder.py\", line 183, in get_response_over_chunks\r\n    response = self.give_response_single(\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\llama_index\\indices\\response\\builder.py\", line 144, in give_response_single\r\n    response, _ = self.llm_predictor.predict(\r\n                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\llama_index\\langchain_helpers\\chain_wrapper.py\", line 133, in predict\r\n    llm_prediction = self._predict(prompt, **prompt_args)\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\llama_index\\langchain_helpers\\chain_wrapper.py\", line 107, in _predict\r\n    llm_prediction = retry_on_exceptions_with_backoff(\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\llama_index\\utils.py\", line 162, in retry_on_exceptions_with_backoff\r\n    return lambda_fn()\r\n           ^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\llama_index\\langchain_helpers\\chain_wrapper.py\", line 108, in <lambda>\r\n    lambda: llm_chain.predict(**full_prompt_args),\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\langchain\\chains\\llm.py\", line 151, in predict\r\n    return self(kwargs)[self.output_key]\r\n           ^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\langchain\\chains\\base.py\", line 116, in __call__\r\n    raise e\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\langchain\\chains\\base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n              ^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\langchain\\chains\\llm.py\", line 57, in _call\r\n    return self.apply([inputs])[0]\r\n           ^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\langchain\\chains\\llm.py\", line 118, in apply\r\n    response = self.generate(input_list)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\langchain\\chains\\llm.py\", line 62, in generate\r\n    return self.llm.generate_prompt(prompts, stop)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\langchain\\llms\\base.py\", line 107, in generate_prompt\r\n    return self.generate(prompt_strings, stop=stop)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\langchain\\llms\\base.py\", line 140, in generate\r\n    raise e\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\langchain\\llms\\base.py\", line 137, in generate\r\n    output = self._generate(prompts, stop=stop)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\langchain\\llms\\openai.py\", line 274, in _generate\r\n    response = completion_with_retry(self, prompt=_prompts, **params)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\langchain\\llms\\openai.py\", line 98, in completion_with_retry\r\n    return _completion_with_retry(**kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\tenacity\\__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n           ^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\tenacity\\__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\tenacity\\__init__.py\", line 314, in iter\r\n    return fut.result()\r\n           ^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\r\n    return self.__get_result()\r\n           ^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\r\n    raise self._exception\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\tenacity\\__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\langchain\\llms\\openai.py\", line 96, in _completion_with_retry\r\n    return llm.client.create(**kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\openai\\api_resources\\completion.py\", line 25, in create\r\n    return super().create(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py\", line 149, in create\r\n    ) = cls.__prepare_create_request(\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nFile \"C:\\Users\\yongxin\\scoop\\apps\\python\\current\\Lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py\", line 83, in __prepare_create_request\r\n    raise error.InvalidRequestError(\r\n`\r\n\r\nthanks",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/762/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/762/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/761",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/761/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/761/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/761/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/761",
        "id": 1626919855,
        "node_id": "PR_kwDOIWuq585MLhTJ",
        "number": 761,
        "title": "Fix minor mistakes to run on Azure OpenAI",
        "user": {
            "login": "yongxin-ms",
            "id": 7688554,
            "node_id": "MDQ6VXNlcjc2ODg1NTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7688554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yongxin-ms",
            "html_url": "https://github.com/yongxin-ms",
            "followers_url": "https://api.github.com/users/yongxin-ms/followers",
            "following_url": "https://api.github.com/users/yongxin-ms/following{/other_user}",
            "gists_url": "https://api.github.com/users/yongxin-ms/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yongxin-ms/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yongxin-ms/subscriptions",
            "organizations_url": "https://api.github.com/users/yongxin-ms/orgs",
            "repos_url": "https://api.github.com/users/yongxin-ms/repos",
            "events_url": "https://api.github.com/users/yongxin-ms/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yongxin-ms/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-16T08:03:40Z",
        "updated_at": "2023-03-16T15:49:58Z",
        "closed_at": "2023-03-16T15:49:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/761",
            "html_url": "https://github.com/run-llama/llama_index/pull/761",
            "diff_url": "https://github.com/run-llama/llama_index/pull/761.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/761.patch",
            "merged_at": "2023-03-16T15:49:58Z"
        },
        "body": "Fix minor mistakes, Now it can run on Azure OpenAI",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/761/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/761/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/760",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/760/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/760/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/760/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/760",
        "id": 1626897037,
        "node_id": "PR_kwDOIWuq585MLccT",
        "number": 760,
        "title": "update logger nb",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-16T07:46:22Z",
        "updated_at": "2023-03-16T07:54:40Z",
        "closed_at": "2023-03-16T07:54:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/760",
            "html_url": "https://github.com/run-llama/llama_index/pull/760",
            "diff_url": "https://github.com/run-llama/llama_index/pull/760.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/760.patch",
            "merged_at": "2023-03-16T07:54:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/760/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/760/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/759",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/759/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/759/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/759/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/759",
        "id": 1626896240,
        "node_id": "I_kwDOIWuq585g-Hdw",
        "number": 759,
        "title": "Wrong number of results returned from get_queued_text_embeddings",
        "user": {
            "login": "yoeldk",
            "id": 12507451,
            "node_id": "MDQ6VXNlcjEyNTA3NDUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12507451?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yoeldk",
            "html_url": "https://github.com/yoeldk",
            "followers_url": "https://api.github.com/users/yoeldk/followers",
            "following_url": "https://api.github.com/users/yoeldk/following{/other_user}",
            "gists_url": "https://api.github.com/users/yoeldk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yoeldk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yoeldk/subscriptions",
            "organizations_url": "https://api.github.com/users/yoeldk/orgs",
            "repos_url": "https://api.github.com/users/yoeldk/repos",
            "events_url": "https://api.github.com/users/yoeldk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yoeldk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-16T07:45:42Z",
        "updated_at": "2023-06-06T01:24:46Z",
        "closed_at": "2023-06-06T01:24:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "There's a mismatch between the number of keys and paragraphs sent to queue_text_for_embeddding and number of keys/vectors I get in response from get_queued_text_embeddings.\r\n\r\nWhen I queue up to 10 paragraphs I get the same amount back.\r\nHowever, when the number exceeds 10 (say 11), I get an additional 10 results (meaning 21 results in total).\r\n\r\nI queued 189 paragraphs having ids 0,1,2,...,188\r\nand got in response 199 ids:\r\n0,1,2,...,9,0,1,...,188\r\n\r\nThen I queued 11 paragraphs having ids 0,1,2...10 and got in response 21 ids\r\n0,1,2,...,9,0,1,2,...,10\r\n\r\nSeems like it somehow duplicated the first 10 IDs",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/759/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/759/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/758",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/758/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/758/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/758/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/758",
        "id": 1626888296,
        "node_id": "PR_kwDOIWuq585MLanD",
        "number": 758,
        "title": "add logger nb",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-16T07:38:41Z",
        "updated_at": "2023-03-16T07:45:05Z",
        "closed_at": "2023-03-16T07:45:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/758",
            "html_url": "https://github.com/run-llama/llama_index/pull/758",
            "diff_url": "https://github.com/run-llama/llama_index/pull/758.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/758.patch",
            "merged_at": "2023-03-16T07:45:04Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/758/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/758/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/757",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/757/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/757/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/757/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/757",
        "id": 1626861904,
        "node_id": "I_kwDOIWuq585g9_FQ",
        "number": 757,
        "title": "KeyError: <QueryMode.SUMMARIZE: 'summarize'>",
        "user": {
            "login": "Tobi-De",
            "id": 40334729,
            "node_id": "MDQ6VXNlcjQwMzM0NzI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/40334729?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Tobi-De",
            "html_url": "https://github.com/Tobi-De",
            "followers_url": "https://api.github.com/users/Tobi-De/followers",
            "following_url": "https://api.github.com/users/Tobi-De/following{/other_user}",
            "gists_url": "https://api.github.com/users/Tobi-De/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Tobi-De/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Tobi-De/subscriptions",
            "organizations_url": "https://api.github.com/users/Tobi-De/orgs",
            "repos_url": "https://api.github.com/users/Tobi-De/repos",
            "events_url": "https://api.github.com/users/Tobi-De/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Tobi-De/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-16T07:18:12Z",
        "updated_at": "2023-03-16T08:00:29Z",
        "closed_at": "2023-03-16T07:59:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Trying to run the code below result in a KeyError\r\n\r\n```python\r\nllm_predictor = LLMPredictor(llm=OpenAI(temperature=0, model_name=\"gpt-3.5-turbo\"))\r\nindex = GPTSimpleVectorIndex(documents, llm_predictor=llm_predictor)\r\nindex.query(\"summarize the content\", mode=\"summarize\")\r\n```\r\n\r\ntraceback\r\n\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"/home/tobi/Builds/documate/ai.py\", line 62, in <module>\r\n    main()\r\n  File \"/home/tobi/Builds/documate/ai.py\", line 47, in main\r\n    summary = index.query(\"summarize the content\", mode=\"summarize\", use_async=True)\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/tobi/.cache/pypoetry/virtualenvs/documate-D2J91GFU-py3.11/lib/python3.11/site-packages/llama_index/indices/base.py\", line 419, in query\r\n    return query_runner.query(query_str, self._index_struct)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/tobi/.cache/pypoetry/virtualenvs/documate-D2J91GFU-py3.11/lib/python3.11/site-packages/llama_index/indices/query/query_runner.py\", line 147, in query\r\n    query_obj = self._get_query_obj(index_struct)\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/tobi/.cache/pypoetry/virtualenvs/documate-D2J91GFU-py3.11/lib/python3.11/site-packages/llama_index/indices/query/query_runner.py\", line 117, in _get_query_obj\r\n    query_cls = self._index_registry.type_to_query[index_struct_type][mode]\r\n                ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^\r\nKeyError: <QueryMode.SUMMARIZE: 'summarize'>\r\n\r\n```\r\n\r\nllama-index = \"^0.4.28\"\r\npython 3.11",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/757/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/757/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/756",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/756/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/756/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/756/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/756",
        "id": 1626834263,
        "node_id": "PR_kwDOIWuq585MLOvy",
        "number": 756,
        "title": "[version] bump version to 0.4.29",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-16T06:55:08Z",
        "updated_at": "2023-03-16T07:34:54Z",
        "closed_at": "2023-03-16T07:34:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/756",
            "html_url": "https://github.com/run-llama/llama_index/pull/756",
            "diff_url": "https://github.com/run-llama/llama_index/pull/756.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/756.patch",
            "merged_at": "2023-03-16T07:34:53Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/756/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/756/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/755",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/755/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/755/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/755/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/755",
        "id": 1626764290,
        "node_id": "PR_kwDOIWuq585MK_oA",
        "number": 755,
        "title": "check in NYC GPT-4 nb",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-16T05:46:39Z",
        "updated_at": "2023-03-16T06:45:22Z",
        "closed_at": "2023-03-16T06:45:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/755",
            "html_url": "https://github.com/run-llama/llama_index/pull/755",
            "diff_url": "https://github.com/run-llama/llama_index/pull/755.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/755.patch",
            "merged_at": "2023-03-16T06:45:21Z"
        },
        "body": "\r\nalso modified leaf_query to integrate with logger ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/755/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/755/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/754",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/754/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/754/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/754/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/754",
        "id": 1626527244,
        "node_id": "I_kwDOIWuq585g8tYM",
        "number": 754,
        "title": "Incomplete replies often appear under Chinese replies",
        "user": {
            "login": "madawei2699",
            "id": 2446612,
            "node_id": "MDQ6VXNlcjI0NDY2MTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2446612?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/madawei2699",
            "html_url": "https://github.com/madawei2699",
            "followers_url": "https://api.github.com/users/madawei2699/followers",
            "following_url": "https://api.github.com/users/madawei2699/following{/other_user}",
            "gists_url": "https://api.github.com/users/madawei2699/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/madawei2699/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/madawei2699/subscriptions",
            "organizations_url": "https://api.github.com/users/madawei2699/orgs",
            "repos_url": "https://api.github.com/users/madawei2699/repos",
            "events_url": "https://api.github.com/users/madawei2699/events{/privacy}",
            "received_events_url": "https://api.github.com/users/madawei2699/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318867,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/duplicate",
                "name": "duplicate",
                "color": "cfd3d7",
                "default": true,
                "description": "This issue or pull request already exists"
            },
            {
                "id": 5254588857,
                "node_id": "LA_kwDOIWuq588AAAABOTKpuQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/international",
                "name": "international",
                "color": "E07D46",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-16T01:21:15Z",
        "updated_at": "2023-03-16T17:20:31Z",
        "closed_at": "2023-03-16T17:20:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Here is my code:\r\n\r\n```\r\ndef get_answer_from_llama_web(message, urls, logger):\r\n    logger.info('=====> Use llama with chatGPT to answer!')\r\n    combained_urls = get_urls(urls)\r\n    logger.info(combained_urls)\r\n    documents = get_documents_from_urls(combained_urls)\r\n    llm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\"))\r\n    logger.info(documents)\r\n    index = GPTSimpleVectorIndex(documents, text_qa_template=QUESTION_ANSWER_PROMPT)\r\n    return index.query(message, llm_predictor=llm_predictor)\r\n```\r\n\r\nBut when using Chinese to reply, it is often incomplete. When using the web of chatGPT, this question is a low probability of occurrence, but with llama_index it seems to be a high probability.\r\n\r\ne.g. when I give this article `https://www.federalreserve.gov/newsevents/pressreleases/monetary20230312b.htm`, the prompt is `what does this post says?`. and the replay with Chinese is like this:\r\n\r\n```\r\n\u8fd9\u7bc7\u6587\u7ae0\u662f\u5173\u4e8e\u7f8e\u56fd\u8d22\u653f\u90e8\u3001\u8054\u90a6\u50a8\u5907\u59d4\u5458\u4f1a\u548c\u8054\u90a6\u5b58\u6b3e\u4fdd\u9669\u516c\u53f8\u8054\u5408\u53d1\u5e03\u7684\u4e00\u4efd\u58f0\u660e\u3002\u58f0\u660e\u5ba3\u5e03\u4ed6\u4eec\u6b63\u5728\u91c7\u53d6\u51b3\u5b9a\u6027\u63aa\u65bd\u6765\u4fdd\u62a4\u7f8e\u56fd\u7ecf\u6d4e\uff0c\u52a0\u5f3a\u516c\u4f17\u5bf9\u94f6\u884c\u7cfb\u7edf\u7684\u4fe1\u5fc3\u3002\u4ed6\u4eec\u91c7\u53d6\u7684\u63aa\u65bd\u5c06\u786e\u4fdd\u7f8e\u56fd\u94f6\u884c\u7cfb\u7edf\u7ee7\u7eed\u5c65\u884c\u5176\u4fdd\u62a4\u5b58\u6b3e\u548c\u4e3a\u5bb6\u5ead\u548c\u4f01\u4e1a\u63d0\u4f9b\u4fe1\u8d37\u7684\u91cd\u8981\u89d2\u8272\uff0c\u4ee5\u4fc3\u8fdb\u5f3a\u52b2\u548c\u53ef\u6301\u7eed\u7684\u7ecf\u6d4e\u589e\u957f\u3002\u58f0\u660e\u8fd8\u5ba3\u5e03\u4e86\u5bf9\u7845\u8c37\u94f6\u884c\u548cSignature Bank\u7684\u7c7b\u4f3c\u7cfb\u7edf\u6027\u98ce\u9669\u4f8b\u5916\u63aa\u65bd\uff0c\u4ee5\u4fdd\u62a4\u6240\u6709\u5b58\u6b3e\u4eba\u3002\u58f0\u660e\u6307\u51fa\uff0c\u8fd9\u4e9b\u63aa\u65bd\u4e0d\u4f1a\u7531\u7eb3\u7a0e\u4eba\u627f\u62c5\u4efb\u4f55\u635f\u5931\u3002\u58f0\u660e\u8fd8\u63d0\u5230\uff0c\u8054\u90a6\u50a8\u5907\u59d4\u5458\u4f1a\u5c06\u5411\u7b26\u5408\u6761\u4ef6\u7684\u5b58\u6b3e\u673a\u6784\u63d0\u4f9b\u989d\u5916\r\n```\r\nbut the English are:\r\n\r\n```\r\nThis post is a joint statement released by the Department of the Treasury, the Federal Reserve Board, and the Federal Deposit Insurance Corporation (FDIC) on March 12, 2023. The statement announces decisive actions taken to protect the U.S. economy by strengthening public confidence in the banking system. The actions will ensure that the banking system continues to protect deposits and provide access to credit to households and businesses in a manner that promotes strong and sustainable economic growth. The FDIC has been enabled to complete its resolution of Silicon Valley Bank, Santa Clara, California, in a manner that fully protects all depositors, and depositors will have access to all of their money starting Monday, March 13. No losses associated with the resolution of Silicon Valley Bank will be borne by the taxpayer. The statement also announces a similar systemic risk exception for Signature Bank, New York, New York, which was closed today by its state chartering authority. All depositors of this institution will be made whole, and no losses will be borne by the taxpayer. Shareholders and certain unsecured debtholders will not be protected, and senior management has been removed. Any losses to the Deposit Insurance Fund to support uninsured depositors will be recovered by a special assessment on banks, as required by law\r\n```\r\nObviously, the English is complete but the Chinese are incomplete.\r\n\r\nActually, I don't know if this is a bug of chatGPT API or llama_index, or do I need to config the llama_index?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/754/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/754/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/753",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/753/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/753/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/753/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/753",
        "id": 1626518160,
        "node_id": "I_kwDOIWuq585g8rKQ",
        "number": 753,
        "title": "How to use llama_index to summarize information from multiple articles",
        "user": {
            "login": "madawei2699",
            "id": 2446612,
            "node_id": "MDQ6VXNlcjI0NDY2MTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2446612?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/madawei2699",
            "html_url": "https://github.com/madawei2699",
            "followers_url": "https://api.github.com/users/madawei2699/followers",
            "following_url": "https://api.github.com/users/madawei2699/following{/other_user}",
            "gists_url": "https://api.github.com/users/madawei2699/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/madawei2699/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/madawei2699/subscriptions",
            "organizations_url": "https://api.github.com/users/madawei2699/orgs",
            "repos_url": "https://api.github.com/users/madawei2699/repos",
            "events_url": "https://api.github.com/users/madawei2699/events{/privacy}",
            "received_events_url": "https://api.github.com/users/madawei2699/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-16T01:13:00Z",
        "updated_at": "2023-03-16T17:17:47Z",
        "closed_at": "2023-03-16T17:17:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When I use llama_index to summarize information from multiple articles, my code is like this:\r\n\r\n```\r\ndef get_answer_from_llama_web(message, urls, logger):\r\n    logger.info('=====> Use llama with chatGPT to answer!')\r\n    combained_urls = get_urls(urls)\r\n    logger.info(combained_urls)\r\n    documents = get_documents_from_urls(combained_urls)\r\n    llm_predictor = LLMPredictor(llm=ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\"))\r\n    logger.info(documents)\r\n    index = GPTSimpleVectorIndex(documents, text_qa_template=QUESTION_ANSWER_PROMPT)\r\n    return index.query(message, llm_predictor=llm_predictor)\r\n```\r\n\r\nThis code will fetch multiple articles from the URLs and use the `GPTSimpleVectorIndex` to summarize information. What I want is to summarize the information by article. But when given the prompt is:\r\n\r\n```\r\nFor the following articles to write an article recommendation email out, my requirements.\r\n1. write a separate summary paragraph for each article, sorting out the most valuable parts\r\n\r\nhttps://mp.weixin.qq.com/s/JFbdL0oUAlZU-os6CerSog\r\n\r\nhttps://mp.weixin.qq.com/s/SZsW-SlkWdQq-aAyrCikDw\r\n\r\nhttps://mp.weixin.qq.com/s/Wx5q-rEwG4sROvnewGxWrw\r\n```\r\n\r\nBut the answer is totally wrong which is looks nothing to do with the content of the article. My question is what index is suitable to do this work?\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/753/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/753/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/752",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/752/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/752/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/752/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/752",
        "id": 1626392191,
        "node_id": "PR_kwDOIWuq585MJwP_",
        "number": 752,
        "title": "add verbose option to tree index",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-15T22:53:11Z",
        "updated_at": "2023-03-16T00:29:18Z",
        "closed_at": "2023-03-16T00:29:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/752",
            "html_url": "https://github.com/run-llama/llama_index/pull/752",
            "diff_url": "https://github.com/run-llama/llama_index/pull/752.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/752.patch",
            "merged_at": "2023-03-16T00:29:17Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/752/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/752/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/751",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/751/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/751/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/751/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/751",
        "id": 1626382832,
        "node_id": "PR_kwDOIWuq585MJuO5",
        "number": 751,
        "title": "GPT4 analysis on Paul Graham essay",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-15T22:41:10Z",
        "updated_at": "2023-03-19T15:57:14Z",
        "closed_at": "2023-03-19T15:57:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/751",
            "html_url": "https://github.com/run-llama/llama_index/pull/751",
            "diff_url": "https://github.com/run-llama/llama_index/pull/751.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/751.patch",
            "merged_at": "2023-03-19T15:57:13Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/751/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/751/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/750",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/750/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/750/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/750/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/750",
        "id": 1626321501,
        "node_id": "PR_kwDOIWuq585MJg6m",
        "number": 750,
        "title": "fix LLM bug ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-15T21:37:38Z",
        "updated_at": "2023-03-15T21:39:13Z",
        "closed_at": "2023-03-15T21:39:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/750",
            "html_url": "https://github.com/run-llama/llama_index/pull/750",
            "diff_url": "https://github.com/run-llama/llama_index/pull/750.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/750.patch",
            "merged_at": "2023-03-15T21:39:11Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/750/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/750/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/749",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/749/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/749/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/749/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/749",
        "id": 1626072024,
        "node_id": "I_kwDOIWuq585g6-PY",
        "number": 749,
        "title": "SQLDatabase not using MSSQL in syntax",
        "user": {
            "login": "keithschm",
            "id": 3873842,
            "node_id": "MDQ6VXNlcjM4NzM4NDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3873842?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/keithschm",
            "html_url": "https://github.com/keithschm",
            "followers_url": "https://api.github.com/users/keithschm/followers",
            "following_url": "https://api.github.com/users/keithschm/following{/other_user}",
            "gists_url": "https://api.github.com/users/keithschm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/keithschm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/keithschm/subscriptions",
            "organizations_url": "https://api.github.com/users/keithschm/orgs",
            "repos_url": "https://api.github.com/users/keithschm/repos",
            "events_url": "https://api.github.com/users/keithschm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/keithschm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-03-15T18:47:41Z",
        "updated_at": "2023-06-06T01:25:20Z",
        "closed_at": "2023-06-06T01:25:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Having strange behavior with SQLDatabase. See code below. I am clearly connected to a mssql database, yet the query returned is not MSSQL. Is this a bug or am I missing something?  \r\n\r\n```\r\nfrom llama_index import GPTSimpleVectorIndex, Document, SimpleDirectoryReader,GPTSQLStructStoreIndex,SQLDatabase\r\nfrom llama_index.indices.struct_store import SQLContextContainerBuilder\r\nimport os\r\nfrom sqlalchemy import create_engine, MetaData, Table, Column, String, Integer, select, column\r\ncon = create_engine('mssql+pyodbc://:@my_server/my_db?driver=SQL+Server+Native+Client+11.0')\r\nmetadata_obj = MetaData(bind=con)\r\n\r\nsql_database = SQLDatabase(con, include_tables=[\"my_table\"])\r\n\r\nindex = GPTSQLStructStoreIndex(\r\n    [],\r\n    sql_database=sql_database, \r\n    table_name=\"mytable\",\r\n)\r\n\r\nresponse = index.query(\"which PM had the most responses?\")\r\nprint(response)\r\n```\r\n\r\nThe Response is not MSSQL as there is no Limit!\r\n\r\nsqlalchemy.exc.ProgrammingError: (pyodbc.ProgrammingError) ('42000', \"[42000] [Microsoft][SQL Server Native Client 11.0][SQL Server]Incorrect syntax near 'LIMIT'. (102) (SQLExecDirectW)\")\r\n[SQL: SELECT PM, COUNT(*) AS NumResponses\r\nFROM my_table\r\nGROUP BY PM\r\nORDER BY NumResponses DESC\r\nLIMIT 1;]",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/749/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/749/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/748",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/748/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/748/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/748/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/748",
        "id": 1625974516,
        "node_id": "I_kwDOIWuq585g6mb0",
        "number": 748,
        "title": "GPTSimpleVectorIndex: Effective chunk size is non positive after considering extra_info",
        "user": {
            "login": "jan-tosovsky-cz",
            "id": 3907898,
            "node_id": "MDQ6VXNlcjM5MDc4OTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3907898?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jan-tosovsky-cz",
            "html_url": "https://github.com/jan-tosovsky-cz",
            "followers_url": "https://api.github.com/users/jan-tosovsky-cz/followers",
            "following_url": "https://api.github.com/users/jan-tosovsky-cz/following{/other_user}",
            "gists_url": "https://api.github.com/users/jan-tosovsky-cz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jan-tosovsky-cz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jan-tosovsky-cz/subscriptions",
            "organizations_url": "https://api.github.com/users/jan-tosovsky-cz/orgs",
            "repos_url": "https://api.github.com/users/jan-tosovsky-cz/repos",
            "events_url": "https://api.github.com/users/jan-tosovsky-cz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jan-tosovsky-cz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-15T17:37:26Z",
        "updated_at": "2023-09-10T17:08:49Z",
        "closed_at": "2023-09-10T17:08:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When trying to index documents obtained from ElasticSearch, it fails inside `split_text_with_overlaps` method. See the full stack trace at the bottom.\r\n\r\n```python\r\nElasticsearchReader = download_loader(\"ElasticsearchReader\")\r\nreader = ElasticsearchReader(\"http://localhost:9201\", \"my-index\")\r\ndocuments = reader.load_data(\"content\", query=query_dict)\r\nindex = GPTSimpleVectorIndex(documents, llm_predictor=llm_predictor)\r\n```\r\n\r\nI think this is caused by the incorrectly constructed `Document` object. The desired content is stored in the `text` field, but the original JSON content is flattened and stored inside `extra_info_str` field.\r\n\r\ntext: `my content...`\r\nextra_info_str: `id: 168613\\ngroupId: 10719\\npublishDate: 19700101000000\\nlanguage: English\\ncontent: my content...`\r\n\r\nIt is clear the latter field contains more chars, so when they are chunked, this equation returns negative value:\r\n\r\n```\r\neffective_chunk_size = self._chunk_size - num_extra_tokens\r\n```\r\n\r\nIf the Document structure is really incorrect, I assume it should be fixed in that ElasticsearchReader first, but I can imagine having some detection for such cases here as well.\r\n\r\n<details>\r\n  <summary>Stack trace</summary>\r\n\r\n```\r\nException has occurred: ValueError       (note: full exception trace is shown but execution is paused at: _run_module_as_main)\r\nEffective chunk size is non positive after considering extra_info\r\n  File \"C:\\Python310\\Lib\\site-packages\\llama_index\\langchain_helpers\\text_splitter.py\", line 136, in split_text_with_overlaps\r\n    raise ValueError(\r\n  File \"C:\\Python310\\Lib\\site-packages\\llama_index\\indices\\node_utils.py\", line 28, in get_text_splits_from_document\r\n    text_splits = text_splitter.split_text_with_overlaps(\r\n  File \"C:\\Python310\\Lib\\site-packages\\llama_index\\indices\\node_utils.py\", line 48, in get_nodes_from_document\r\n    text_splits = get_text_splits_from_document(\r\n  File \"C:\\Python310\\Lib\\site-packages\\llama_index\\indices\\base.py\", line 263, in _get_nodes_from_document\r\n    return get_nodes_from_document(\r\n  File \"C:\\Python310\\Lib\\site-packages\\llama_index\\indices\\vector_store\\base.py\", line 181, in _add_document_to_index\r\n    nodes = self._get_nodes_from_document(document)\r\n  File \"C:\\Python310\\Lib\\site-packages\\llama_index\\indices\\vector_store\\base.py\", line 206, in _build_index_from_documents\r\n    self._add_document_to_index(index_struct, d)\r\n  File \"C:\\Python310\\Lib\\site-packages\\llama_index\\indices\\base.py\", line 281, in build_index_from_documents\r\n    return self._build_index_from_documents(documents)\r\n  File \"C:\\Python310\\Lib\\site-packages\\llama_index\\token_counter\\token_counter.py\", line 84, in wrapped_llm_predict\r\n    f_return_val = f(_self, *args, **kwargs)\r\n  File \"C:\\Python310\\Lib\\site-packages\\llama_index\\indices\\base.py\", line 109, in __init__\r\n    self._index_struct = self.build_index_from_documents(documents)\r\n  File \"C:\\Python310\\Lib\\site-packages\\llama_index\\indices\\vector_store\\base.py\", line 63, in __init__\r\n    super().__init__(\r\n  File \"C:\\Python310\\Lib\\site-packages\\llama_index\\indices\\vector_store\\vector_indices.py\", line 84, in __init__\r\n    super().__init__(\r\n  File \"C:\\llama\\llama.py\", line 40, in <module>\r\n    index = GPTSimpleVectorIndex(documents, llm_predictor=llm_predictor)\r\n  File \"C:\\Python310\\Lib\\runpy.py\", line 86, in _run_code\r\n    exec(code, run_globals)\r\n  File \"C:\\Python310\\Lib\\runpy.py\", line 196, in _run_module_as_main (Current frame)\r\n    return _run_code(code, main_globals, None,\r\nValueError: Effective chunk size is non positive after considering extra_info\r\n```\r\n</details>",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/748/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/748/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/747",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/747/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/747/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/747/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/747",
        "id": 1625668221,
        "node_id": "PR_kwDOIWuq585MHSmV",
        "number": 747,
        "title": "Update README.md",
        "user": {
            "login": "kobigurk",
            "id": 3520024,
            "node_id": "MDQ6VXNlcjM1MjAwMjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3520024?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kobigurk",
            "html_url": "https://github.com/kobigurk",
            "followers_url": "https://api.github.com/users/kobigurk/followers",
            "following_url": "https://api.github.com/users/kobigurk/following{/other_user}",
            "gists_url": "https://api.github.com/users/kobigurk/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kobigurk/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kobigurk/subscriptions",
            "organizations_url": "https://api.github.com/users/kobigurk/orgs",
            "repos_url": "https://api.github.com/users/kobigurk/repos",
            "events_url": "https://api.github.com/users/kobigurk/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kobigurk/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-15T14:44:32Z",
        "updated_at": "2023-03-15T19:42:42Z",
        "closed_at": "2023-03-15T19:42:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/747",
            "html_url": "https://github.com/run-llama/llama_index/pull/747",
            "diff_url": "https://github.com/run-llama/llama_index/pull/747.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/747.patch",
            "merged_at": "2023-03-15T19:42:42Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/747/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/747/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/746",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/746/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/746/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/746/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/746",
        "id": 1625617086,
        "node_id": "I_kwDOIWuq585g5PK-",
        "number": 746,
        "title": "Is there any way to have llama_index access GPT3 through the requests module instead of the openai module?",
        "user": {
            "login": "xjdeng",
            "id": 17135596,
            "node_id": "MDQ6VXNlcjE3MTM1NTk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/17135596?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xjdeng",
            "html_url": "https://github.com/xjdeng",
            "followers_url": "https://api.github.com/users/xjdeng/followers",
            "following_url": "https://api.github.com/users/xjdeng/following{/other_user}",
            "gists_url": "https://api.github.com/users/xjdeng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xjdeng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xjdeng/subscriptions",
            "organizations_url": "https://api.github.com/users/xjdeng/orgs",
            "repos_url": "https://api.github.com/users/xjdeng/repos",
            "events_url": "https://api.github.com/users/xjdeng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xjdeng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-15T14:15:34Z",
        "updated_at": "2023-03-16T17:42:42Z",
        "closed_at": "2023-03-16T17:42:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Long story short, due to firewall rules at my corporation, the GPT-3 endpoints cannot be accessed using the openai module though they work if we manually make a request using the **requests** module in Python.\r\n\r\nGiven these constraints, what will it take to get llama_index working on such a system?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/746/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/746/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/745",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/745/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/745/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/745/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/745",
        "id": 1624902278,
        "node_id": "PR_kwDOIWuq585MEsOu",
        "number": 745,
        "title": "add initial object logging ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-15T07:18:34Z",
        "updated_at": "2023-03-16T02:52:23Z",
        "closed_at": "2023-03-16T02:52:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/745",
            "html_url": "https://github.com/run-llama/llama_index/pull/745",
            "diff_url": "https://github.com/run-llama/llama_index/pull/745.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/745.patch",
            "merged_at": "2023-03-16T02:52:22Z"
        },
        "body": "- add very basic initial logger abstraction \r\n- store intermediate outputs during create/refine specifically \r\n- TODO: add for tree summarize, add for selecting nodes, add for building the index ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/745/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/745/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/744",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/744/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/744/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/744/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/744",
        "id": 1624759277,
        "node_id": "PR_kwDOIWuq585MENXd",
        "number": 744,
        "title": "Added Mynd URL to Gallery",
        "user": {
            "login": "at-b612",
            "id": 76621143,
            "node_id": "MDQ6VXNlcjc2NjIxMTQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/76621143?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/at-b612",
            "html_url": "https://github.com/at-b612",
            "followers_url": "https://api.github.com/users/at-b612/followers",
            "following_url": "https://api.github.com/users/at-b612/following{/other_user}",
            "gists_url": "https://api.github.com/users/at-b612/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/at-b612/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/at-b612/subscriptions",
            "organizations_url": "https://api.github.com/users/at-b612/orgs",
            "repos_url": "https://api.github.com/users/at-b612/repos",
            "events_url": "https://api.github.com/users/at-b612/events{/privacy}",
            "received_events_url": "https://api.github.com/users/at-b612/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-15T05:09:28Z",
        "updated_at": "2023-03-15T05:31:29Z",
        "closed_at": "2023-03-15T05:31:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/744",
            "html_url": "https://github.com/run-llama/llama_index/pull/744",
            "diff_url": "https://github.com/run-llama/llama_index/pull/744.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/744.patch",
            "merged_at": "2023-03-15T05:31:28Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/744/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/744/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/743",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/743/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/743/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/743/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/743",
        "id": 1624647208,
        "node_id": "I_kwDOIWuq585g1iYo",
        "number": 743,
        "title": "Can GPTKnowledgeGraphIndex insert triples directly?",
        "user": {
            "login": "pxlsdz",
            "id": 43774986,
            "node_id": "MDQ6VXNlcjQzNzc0OTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/43774986?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pxlsdz",
            "html_url": "https://github.com/pxlsdz",
            "followers_url": "https://api.github.com/users/pxlsdz/followers",
            "following_url": "https://api.github.com/users/pxlsdz/following{/other_user}",
            "gists_url": "https://api.github.com/users/pxlsdz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pxlsdz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pxlsdz/subscriptions",
            "organizations_url": "https://api.github.com/users/pxlsdz/orgs",
            "repos_url": "https://api.github.com/users/pxlsdz/repos",
            "events_url": "https://api.github.com/users/pxlsdz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pxlsdz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-03-15T03:06:09Z",
        "updated_at": "2023-03-31T16:26:46Z",
        "closed_at": "2023-03-31T16:26:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Can GPTKnowledgeGraphIndex insert triples directly?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/743/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/743/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/742",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/742/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/742/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/742/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/742",
        "id": 1624599694,
        "node_id": "I_kwDOIWuq585g1WyO",
        "number": 742,
        "title": "Does llama_index support multi-language when the data is English-only?",
        "user": {
            "login": "zmcmcc",
            "id": 21139159,
            "node_id": "MDQ6VXNlcjIxMTM5MTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/21139159?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zmcmcc",
            "html_url": "https://github.com/zmcmcc",
            "followers_url": "https://api.github.com/users/zmcmcc/followers",
            "following_url": "https://api.github.com/users/zmcmcc/following{/other_user}",
            "gists_url": "https://api.github.com/users/zmcmcc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zmcmcc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zmcmcc/subscriptions",
            "organizations_url": "https://api.github.com/users/zmcmcc/orgs",
            "repos_url": "https://api.github.com/users/zmcmcc/repos",
            "events_url": "https://api.github.com/users/zmcmcc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zmcmcc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5254588857,
                "node_id": "LA_kwDOIWuq588AAAABOTKpuQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/international",
                "name": "international",
                "color": "E07D46",
                "default": false,
                "description": ""
            },
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-15T02:14:09Z",
        "updated_at": "2023-03-16T17:43:34Z",
        "closed_at": "2023-03-16T17:43:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/742/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/742/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/741",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/741/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/741/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/741/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/741",
        "id": 1624366781,
        "node_id": "I_kwDOIWuq585g0d69",
        "number": 741,
        "title": "ValueError: shapes (768,) and (1536,) not aligned: 768 (dim 0) != 1536 (dim 0)",
        "user": {
            "login": "fabioaurelios123",
            "id": 102997034,
            "node_id": "U_kgDOBiOcKg",
            "avatar_url": "https://avatars.githubusercontent.com/u/102997034?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fabioaurelios123",
            "html_url": "https://github.com/fabioaurelios123",
            "followers_url": "https://api.github.com/users/fabioaurelios123/followers",
            "following_url": "https://api.github.com/users/fabioaurelios123/following{/other_user}",
            "gists_url": "https://api.github.com/users/fabioaurelios123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fabioaurelios123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fabioaurelios123/subscriptions",
            "organizations_url": "https://api.github.com/users/fabioaurelios123/orgs",
            "repos_url": "https://api.github.com/users/fabioaurelios123/repos",
            "events_url": "https://api.github.com/users/fabioaurelios123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fabioaurelios123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-14T22:07:19Z",
        "updated_at": "2023-03-16T19:15:03Z",
        "closed_at": "2023-03-16T19:15:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When I try to call hunging face embeding model I receive a error message\r\n\r\n`embed_model = LangchainEmbedding(HuggingFaceEmbeddings())\r\n    # load index\r\n    \r\n    new_index = GPTSimpleVectorIndex.load_from_disk('indexgpt.json',\r\n                   embed_model=embed_model)\r\n    \r\n    context_str  = \"Can you give code examples - How to customize embedding??\"\r\n    # query with embed_model specified\r\n    response = new_index.query(\r\n        context_str,\r\n        mode=\"default\",\r\n        verbose=True\r\n    )\r\n    print(response)`\r\n\r\n\r\nFull text error:\r\n\r\n  ` response = new_index.query(\r\n  File \"/Users/fabiosviatowski/Documents/CODIGO_GERAL/ServiceEnv/lib/python3.9/site-packages/llama_index/indices/base.py\", line 417, in query\r\n    return query_runner.query(query_str, self._index_struct)\r\n  File \"/Users/fabiosviatowski/Documents/CODIGO_GERAL/ServiceEnv/lib/python3.9/site-packages/llama_index/indices/query/query_runner.py\", line 149, in query\r\n    return query_obj.query(query_bundle)\r\n  File \"/Users/fabiosviatowski/Documents/CODIGO_GERAL/ServiceEnv/lib/python3.9/site-packages/llama_index/token_counter/token_counter.py\", line 84, in wrapped_llm_predict\r\n    f_return_val = f(_self, *args, **kwargs)\r\n  File \"/Users/fabiosviatowski/Documents/CODIGO_GERAL/ServiceEnv/lib/python3.9/site-packages/llama_index/indices/query/base.py\", line 383, in query\r\n    response = self._query(query_bundle)\r\n  File \"/Users/fabiosviatowski/Documents/CODIGO_GERAL/ServiceEnv/lib/python3.9/site-packages/llama_index/indices/query/base.py\", line 353, in _query\r\n    tuples = self.get_nodes_and_similarities_for_response(query_bundle)\r\n  File \"/Users/fabiosviatowski/Documents/CODIGO_GERAL/ServiceEnv/lib/python3.9/site-packages/llama_index/indices/query/base.py\", line 277, in get_nodes_and_similarities_for_response\r\n    nodes = self._get_nodes_for_response(\r\n  File \"/Users/fabiosviatowski/Documents/CODIGO_GERAL/ServiceEnv/lib/python3.9/site-packages/llama_index/indices/query/vector_store/base.py\", line 49, in _get_nodes_for_response\r\n    query_result = self._vector_store.query(\r\n  File \"/Users/fabiosviatowski/Documents/CODIGO_GERAL/ServiceEnv/lib/python3.9/site-packages/llama_index/vector_stores/simple.py\", line 104, in query\r\n    top_similarities, top_ids = get_top_k_embeddings(\r\n  File \"/Users/fabiosviatowski/Documents/CODIGO_GERAL/ServiceEnv/lib/python3.9/site-packages/llama_index/indices/query/embedding_utils.py\", line 25, in get_top_k_embeddings\r\n    similarity = similarity_fn(query_embedding, emb)\r\n  File \"/Users/fabiosviatowski/Documents/CODIGO_GERAL/ServiceEnv/lib/python3.9/site-packages/llama_index/embeddings/base.py\", line 43, in similarity\r\n    product = np.dot(embedding1, embedding2)\r\n  File \"<__array_function__ internals>\", line 200, in dot\r\nValueError: shapes (768,) and (1536,) not aligned: 768 (dim 0) != 1536 (dim 0)`",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/741/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/741/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/740",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/740/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/740/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/740/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/740",
        "id": 1624316722,
        "node_id": "I_kwDOIWuq585g0Rsy",
        "number": 740,
        "title": "During the create and refine process, intermediate responses are not saved",
        "user": {
            "login": "Martok88",
            "id": 17170367,
            "node_id": "MDQ6VXNlcjE3MTcwMzY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/17170367?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Martok88",
            "html_url": "https://github.com/Martok88",
            "followers_url": "https://api.github.com/users/Martok88/followers",
            "following_url": "https://api.github.com/users/Martok88/following{/other_user}",
            "gists_url": "https://api.github.com/users/Martok88/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Martok88/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Martok88/subscriptions",
            "organizations_url": "https://api.github.com/users/Martok88/orgs",
            "repos_url": "https://api.github.com/users/Martok88/repos",
            "events_url": "https://api.github.com/users/Martok88/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Martok88/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-14T21:18:30Z",
        "updated_at": "2023-03-16T08:02:48Z",
        "closed_at": "2023-03-16T08:02:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "Hi @jerryjliu. We talked on Discord about this and I figured I'd open an issue in order to track it and possibly recruit help, since I don't think I'm quite familiar enough with your code to tackle it myself yet.\r\n\r\nUsing ChatGPT to query a document index, I find that I sometimes get a response such as \"Return the original answer. The new context is not relevant to the question ...\" It would be helpful to store the responses that are being generated during the create and refine process, in case they are more useful than the final response.\r\n\r\nAs a workaround, I'm using a custom StringIO logger to grab the debug output, and then filtering each line looking for \"Initial response\" and \"Refined response.\" In order to make this work, I modified \"indices/response/builder.py\" to remove newlines which are sometimes being added in front of or within the responses.\r\n\r\nhttps://github.com/jerryjliu/llama_index/compare/main...Martok88:gpt_index:main#diff-8583bac0dcc8a7df7316fa7cc4b57e087845f8ccc9d02f5272ebf2d07d345b24\r\n\r\n```\r\n# Additional imports needed\r\nimport logging\r\nfrom io import StringIO\r\n\r\n# Configure custom string IO logger\r\nlogging.basicConfig()\r\nlogger = logging.getLogger()\r\nlogger.setLevel(logging.DEBUG)\r\nlog_capture_string = StringIO()\r\nlog_handler = logging.StreamHandler(log_capture_string)\r\nlog_handler.setLevel(logging.DEBUG)\r\nlogger.addHandler(log_handler)\r\n\r\n# Suppress debug messages from imported modules (Optional, makes console output more readable)\r\ngpt_index_logger = logging.getLogger(\"gpt_index\")\r\ngpt_index_logger.setLevel(logging.INFO)\r\nopenai_logger = logging.getLogger(\"openai\")\r\nopenai_logger.setLevel(logging.INFO)\r\nurllib3_logger = logging.getLogger(\"urllib3\")\r\nurllib3_logger.setLevel(logging.INFO)\r\n\r\n# ... Query as usual, then ...\r\n# Loop over debug messages to get initial and refined responses\r\nresponselist = []\r\nlog_contents = log_capture_string.getvalue()\r\nlog_capture_string.truncate(0)\r\nfor line in log_contents.splitlines():\r\n    if line[0:20] == \"> Refined response: \" or line[0:20] == \"> Initial response: \":\r\n        responselist.append(line[2:])\r\nresponse.response = \"\\n\\n\".join(responselist)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/740/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/740/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/739",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/739/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/739/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/739/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/739",
        "id": 1624128395,
        "node_id": "PR_kwDOIWuq585MCG7Q",
        "number": 739,
        "title": "Change log calls that use the root logger to module logger calls.",
        "user": {
            "login": "OliverFarren",
            "id": 5064282,
            "node_id": "MDQ6VXNlcjUwNjQyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5064282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OliverFarren",
            "html_url": "https://github.com/OliverFarren",
            "followers_url": "https://api.github.com/users/OliverFarren/followers",
            "following_url": "https://api.github.com/users/OliverFarren/following{/other_user}",
            "gists_url": "https://api.github.com/users/OliverFarren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OliverFarren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OliverFarren/subscriptions",
            "organizations_url": "https://api.github.com/users/OliverFarren/orgs",
            "repos_url": "https://api.github.com/users/OliverFarren/repos",
            "events_url": "https://api.github.com/users/OliverFarren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OliverFarren/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-14T19:02:20Z",
        "updated_at": "2023-03-14T20:57:47Z",
        "closed_at": "2023-03-14T20:57:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/739",
            "html_url": "https://github.com/run-llama/llama_index/pull/739",
            "diff_url": "https://github.com/run-llama/llama_index/pull/739.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/739.patch",
            "merged_at": "2023-03-14T20:57:46Z"
        },
        "body": "This pull request changes log calls to the root logger to calls to a module logger.\r\n\r\nThis improvements allows users to override the verbosity of the llm_index module loggers and better visibility of where the log calls are made. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/739/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/739/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/738",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/738/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/738/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/738/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/738",
        "id": 1623493773,
        "node_id": "I_kwDOIWuq585gxIyN",
        "number": 738,
        "title": "GPTSimpleVectorIndex has assert error",
        "user": {
            "login": "mobilestack",
            "id": 5794691,
            "node_id": "MDQ6VXNlcjU3OTQ2OTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5794691?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mobilestack",
            "html_url": "https://github.com/mobilestack",
            "followers_url": "https://api.github.com/users/mobilestack/followers",
            "following_url": "https://api.github.com/users/mobilestack/following{/other_user}",
            "gists_url": "https://api.github.com/users/mobilestack/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mobilestack/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mobilestack/subscriptions",
            "organizations_url": "https://api.github.com/users/mobilestack/orgs",
            "repos_url": "https://api.github.com/users/mobilestack/repos",
            "events_url": "https://api.github.com/users/mobilestack/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mobilestack/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-14T13:34:07Z",
        "updated_at": "2023-03-15T08:52:47Z",
        "closed_at": "2023-03-15T08:52:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "```\r\nfrom gpt_index import GPTSimpleVectorIndex\r\nindex = GPTSimpleVectorIndex([])\r\n```\r\n\r\nIf I only have these two lines for an empty list, it will still show the error below:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAssertionError                            Traceback (most recent call last)\r\nCell In[1], line 2\r\n      1 from gpt_index import GPTSimpleVectorIndex\r\n----> 2 index = GPTSimpleVectorIndex([])\r\n\r\nFile ~/work/venv310/lib/python3.10/site-packages/gpt_index/indices/vector_store/vector_indices.py:84, in GPTSimpleVectorIndex.__init__(self, documents, index_struct, text_qa_template, llm_predictor, embed_model, simple_vector_store_data_dict, **kwargs)\r\n     79 \"\"\"Init params.\"\"\"\r\n     80 vector_store = SimpleVectorStore(\r\n     81     simple_vector_store_data_dict=simple_vector_store_data_dict\r\n     82 )\r\n---> 84 super().__init__(\r\n     85     documents=documents,\r\n     86     index_struct=index_struct,\r\n     87     text_qa_template=text_qa_template,\r\n     88     llm_predictor=llm_predictor,\r\n     89     embed_model=embed_model,\r\n     90     vector_store=vector_store,\r\n     91     **kwargs,\r\n     92 )\r\n     94 # TODO: Temporary hack to also store embeddings in index_struct\r\n     95 embedding_dict = vector_store._data.embedding_dict\r\n\r\nFile ~/work/venv310/lib/python3.10/site-packages/gpt_index/indices/vector_store/base.py:63, in GPTVectorStoreIndex.__init__(self, documents, index_struct, text_qa_template, llm_predictor, embed_model, vector_store, text_splitter, use_async, **kwargs)\r\n     61 self.text_qa_template = text_qa_template or DEFAULT_TEXT_QA_PROMPT\r\n     62 self._use_async = use_async\r\n---> 63 super().__init__(\r\n     64     documents=documents,\r\n     65     index_struct=index_struct,\r\n     66     llm_predictor=llm_predictor,\r\n     67     embed_model=embed_model,\r\n     68     text_splitter=text_splitter,\r\n     69     **kwargs,\r\n     70 )\r\n\r\nFile ~/work/venv310/lib/python3.10/site-packages/gpt_index/indices/base.py:83, in BaseGPTIndex.__init__(self, documents, index_struct, llm_predictor, embed_model, docstore, index_registry, prompt_helper, text_splitter, chunk_size_limit, include_extra_info)\r\n     81 self._llm_predictor = llm_predictor or LLMPredictor()\r\n     82 # NOTE: the embed_model isn't used in all indices\r\n---> 83 self._embed_model = embed_model or OpenAIEmbedding()\r\n     84 self._include_extra_info = include_extra_info\r\n     86 # TODO: move out of base if we need custom params per index\r\n\r\nFile ~/work/venv310/lib/python3.10/site-packages/gpt_index/embeddings/openai.py:208, in OpenAIEmbedding.__init__(self, mode, model, deployment_name)\r\n    201 def __init__(\r\n    202     self,\r\n    203     mode: str = OpenAIEmbeddingMode.TEXT_SEARCH_MODE,\r\n    204     model: str = OpenAIEmbeddingModelType.TEXT_EMBED_ADA_002,\r\n    205     deployment_name: Optional[str] = None,\r\n    206 ) -> None:\r\n    207     \"\"\"Init params.\"\"\"\r\n--> 208     super().__init__()\r\n    209     self.mode = OpenAIEmbeddingMode(mode)\r\n    210     self.model = OpenAIEmbeddingModelType(model)\r\n\r\nFile ~/work/venv310/lib/python3.10/site-packages/gpt_index/embeddings/base.py:55, in BaseEmbedding.__init__(self, embed_batch_size)\r\n     53 self._total_tokens_used = 0\r\n     54 self._last_token_usage: Optional[int] = None\r\n---> 55 self._tokenizer: Callable = globals_helper.tokenizer\r\n     56 # list of tuples of id, text\r\n     57 self._text_queue: List[Tuple[str, str]] = []\r\n\r\nFile ~/work/venv310/lib/python3.10/site-packages/gpt_index/utils.py:38, in GlobalsHelper.tokenizer(self)\r\n     36     except ImportError:\r\n     37         raise ImportError(tiktoken_import_err)\r\n---> 38     enc = tiktoken.get_encoding(\"gpt2\")\r\n     39     self._tokenizer = cast(Callable[[str], List], enc.encode)\r\n     40 else:\r\n\r\nFile ~/work/venv310/lib/python3.10/site-packages/tiktoken/registry.py:63, in get_encoding(encoding_name)\r\n     60     raise ValueError(f\"Unknown encoding {encoding_name}\")\r\n     62 constructor = ENCODING_CONSTRUCTORS[encoding_name]\r\n---> 63 enc = Encoding(**constructor())\r\n     64 ENCODINGS[encoding_name] = enc\r\n     65 return enc\r\n\r\nFile ~/work/venv310/lib/python3.10/site-packages/tiktoken_ext/openai_public.py:11, in gpt2()\r\n     10 def gpt2():\r\n---> 11     mergeable_ranks = data_gym_to_mergeable_bpe_ranks(\r\n     12         vocab_bpe_file=\"https://openaipublic.blob.core.windows.net/gpt-2/encodings/main/vocab.bpe\",\r\n     13         encoder_json_file=\"https://openaipublic.blob.core.windows.net/gpt-2/encodings/main/encoder.json\",\r\n     14     )\r\n     15     return {\r\n     16         \"name\": \"gpt2\",\r\n     17         \"explicit_n_vocab\": 50257,\r\n   (...)\r\n     20         \"special_tokens\": {\"<|endoftext|>\": 50256},\r\n     21     }\r\n\r\nFile ~/work/venv310/lib/python3.10/site-packages/tiktoken/load.py:95, in data_gym_to_mergeable_bpe_ranks(vocab_bpe_file, encoder_json_file)\r\n     93 encoder_json_loaded.pop(b\"<|endoftext|>\", None)\r\n     94 encoder_json_loaded.pop(b\"<|startoftext|>\", None)\r\n---> 95 assert bpe_ranks == encoder_json_loaded\r\n     97 return bpe_ranks\r\n\r\nAssertionError: \r\n```\r\n\r\nMy tiktoken is like this:\r\n\r\n```\r\npip install -U tiktoken\r\nRequirement already satisfied: tiktoken in ./venv310/lib/python3.10/site-packages (0.3.1)\r\nRequirement already satisfied: regex>=2022.1.18 in ./venv310/lib/python3.10/site-packages (from tiktoken) (2022.10.31)\r\nRequirement already satisfied: requests>=2.26.0 in ./venv310/lib/python3.10/site-packages (from tiktoken) (2.28.2)\r\nRequirement already satisfied: certifi>=2017.4.17 in ./venv310/lib/python3.10/site-packages (from requests>=2.26.0->tiktoken) (2022.12.7)\r\nRequirement already satisfied: urllib3<1.27,>=1.21.1 in ./venv310/lib/python3.10/site-packages (from requests>=2.26.0->tiktoken) (1.26.9)\r\nRequirement already satisfied: idna<4,>=2.5 in ./venv310/lib/python3.10/site-packages (from requests>=2.26.0->tiktoken) (3.3)\r\nRequirement already satisfied: charset-normalizer<4,>=2 in ./venv310/lib/python3.10/site-packages (from requests>=2.26.0->tiktoken) (2.0.12)\r\n```\r\n\r\nHope anyone can help. Many thanks!\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/738/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/738/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/737",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/737/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/737/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/737/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/737",
        "id": 1623394499,
        "node_id": "I_kwDOIWuq585gwwjD",
        "number": 737,
        "title": "How to concat GPTSimpleVectorIndex?",
        "user": {
            "login": "kenoharada",
            "id": 26840538,
            "node_id": "MDQ6VXNlcjI2ODQwNTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/26840538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kenoharada",
            "html_url": "https://github.com/kenoharada",
            "followers_url": "https://api.github.com/users/kenoharada/followers",
            "following_url": "https://api.github.com/users/kenoharada/following{/other_user}",
            "gists_url": "https://api.github.com/users/kenoharada/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kenoharada/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kenoharada/subscriptions",
            "organizations_url": "https://api.github.com/users/kenoharada/orgs",
            "repos_url": "https://api.github.com/users/kenoharada/repos",
            "events_url": "https://api.github.com/users/kenoharada/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kenoharada/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-03-14T12:37:19Z",
        "updated_at": "2023-09-10T17:08:57Z",
        "closed_at": "2023-09-10T17:08:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi!\r\nI want to combine two GPTSimpleVectorIndex to one GPTSimpleVectorIndex.\r\n\r\nList index is one way to do, but ListIndex queries each GPTSimpleVectorIndex.\r\n\r\nI want to call one query over two GPTSimpleVectorIndex, so i want to combine two GPTSimpleVectorIndex to one two GPTSimpleVectorIndex. Is there any procedures?\r\n\r\nThanks!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/737/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/737/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/736",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/736/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/736/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/736/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/736",
        "id": 1622897538,
        "node_id": "PR_kwDOIWuq585L98wA",
        "number": 736,
        "title": "Exclude directories and files in SimpleDirectoryReader",
        "user": {
            "login": "kevin51jiang",
            "id": 33907581,
            "node_id": "MDQ6VXNlcjMzOTA3NTgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/33907581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevin51jiang",
            "html_url": "https://github.com/kevin51jiang",
            "followers_url": "https://api.github.com/users/kevin51jiang/followers",
            "following_url": "https://api.github.com/users/kevin51jiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevin51jiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevin51jiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevin51jiang/subscriptions",
            "organizations_url": "https://api.github.com/users/kevin51jiang/orgs",
            "repos_url": "https://api.github.com/users/kevin51jiang/repos",
            "events_url": "https://api.github.com/users/kevin51jiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevin51jiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-14T07:34:17Z",
        "updated_at": "2023-03-14T21:24:32Z",
        "closed_at": "2023-03-14T20:52:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/736",
            "html_url": "https://github.com/run-llama/llama_index/pull/736",
            "diff_url": "https://github.com/run-llama/llama_index/pull/736.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/736.patch",
            "merged_at": "2023-03-14T20:52:53Z"
        },
        "body": "Fixes #671 ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/736/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/736/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/735",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/735/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/735/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/735/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/735",
        "id": 1622885409,
        "node_id": "PR_kwDOIWuq585L96Kq",
        "number": 735,
        "title": "Improve text-to-sql performance with updated prompt and stop token",
        "user": {
            "login": "ekzhu",
            "id": 320302,
            "node_id": "MDQ6VXNlcjMyMDMwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/320302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ekzhu",
            "html_url": "https://github.com/ekzhu",
            "followers_url": "https://api.github.com/users/ekzhu/followers",
            "following_url": "https://api.github.com/users/ekzhu/following{/other_user}",
            "gists_url": "https://api.github.com/users/ekzhu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ekzhu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ekzhu/subscriptions",
            "organizations_url": "https://api.github.com/users/ekzhu/orgs",
            "repos_url": "https://api.github.com/users/ekzhu/repos",
            "events_url": "https://api.github.com/users/ekzhu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ekzhu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-03-14T07:24:05Z",
        "updated_at": "2023-03-16T06:45:10Z",
        "closed_at": "2023-03-16T06:45:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/735",
            "html_url": "https://github.com/run-llama/llama_index/pull/735",
            "diff_url": "https://github.com/run-llama/llama_index/pull/735.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/735.patch",
            "merged_at": "2023-03-16T06:45:09Z"
        },
        "body": "1. On spider benchmark dev set, execution accuracy increased to 70% from 50% (on a 1% sample queries). \r\n2. Added `stop_token` to `Prompt` class to allow new prompts to specify when to ask LLM to stop generation. Particularity useful when you ask LLM to generate items 1, 2, 3 but only want item 1, and items 2 and 3 are just there due to prompt engineering. \r\n3. Updated text-to-sql prompt which utilizes `stop_token`. \r\n4. Use ChatGPT instead of davinci for running benchmark to save $$$\r\n5. Add foreign keys to table context in structured index.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/735/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/735/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/734",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/734/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/734/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/734/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/734",
        "id": 1622756641,
        "node_id": "PR_kwDOIWuq585L9es5",
        "number": 734,
        "title": "[version] bump version to 0.4.28",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-14T05:27:05Z",
        "updated_at": "2023-03-14T05:27:45Z",
        "closed_at": "2023-03-14T05:27:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/734",
            "html_url": "https://github.com/run-llama/llama_index/pull/734",
            "diff_url": "https://github.com/run-llama/llama_index/pull/734.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/734.patch",
            "merged_at": "2023-03-14T05:27:27Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/734/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/734/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/733",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/733/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/733/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/733/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/733",
        "id": 1622736976,
        "node_id": "PR_kwDOIWuq585L9aZ5",
        "number": 733,
        "title": "add use chatgpt_refine_prompt examples",
        "user": {
            "login": "WangRongsheng",
            "id": 55651568,
            "node_id": "MDQ6VXNlcjU1NjUxNTY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/55651568?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/WangRongsheng",
            "html_url": "https://github.com/WangRongsheng",
            "followers_url": "https://api.github.com/users/WangRongsheng/followers",
            "following_url": "https://api.github.com/users/WangRongsheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/WangRongsheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/WangRongsheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/WangRongsheng/subscriptions",
            "organizations_url": "https://api.github.com/users/WangRongsheng/orgs",
            "repos_url": "https://api.github.com/users/WangRongsheng/repos",
            "events_url": "https://api.github.com/users/WangRongsheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/WangRongsheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-14T05:10:12Z",
        "updated_at": "2023-03-14T15:34:17Z",
        "closed_at": "2023-03-14T15:34:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/733",
            "html_url": "https://github.com/run-llama/llama_index/pull/733",
            "diff_url": "https://github.com/run-llama/llama_index/pull/733.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/733.patch",
            "merged_at": null
        },
        "body": "Updated `CHAT_REFINE_PROMPT` examples based on #709 ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/733/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/733/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/732",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/732/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/732/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/732/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/732",
        "id": 1622647905,
        "node_id": "I_kwDOIWuq585gt6Rh",
        "number": 732,
        "title": "Why `aquery` with default mode can only use sync `_get_response_default`?",
        "user": {
            "login": "Green-li",
            "id": 11475982,
            "node_id": "MDQ6VXNlcjExNDc1OTgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11475982?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Green-li",
            "html_url": "https://github.com/Green-li",
            "followers_url": "https://api.github.com/users/Green-li/followers",
            "following_url": "https://api.github.com/users/Green-li/following{/other_user}",
            "gists_url": "https://api.github.com/users/Green-li/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Green-li/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Green-li/subscriptions",
            "organizations_url": "https://api.github.com/users/Green-li/orgs",
            "repos_url": "https://api.github.com/users/Green-li/repos",
            "events_url": "https://api.github.com/users/Green-li/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Green-li/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-03-14T03:09:55Z",
        "updated_at": "2023-07-13T23:36:31Z",
        "closed_at": "2023-07-13T23:36:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I want to use async create of openai.\r\nBut the default mode can only use sync get response.\r\nWhen an use summarize mode in ListIndex, it raise an error:\r\n```\r\nquery_cls = self._index_registry.type_to_query[index_struct_type][mode]\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^^^^^^\r\nKeyError: <QueryMode.SUMMARIZE: 'summarize'>\r\n```\r\nSo is there a option to choose use sync or async?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/732/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/732/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/731",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/731/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/731/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/731/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/731",
        "id": 1622534517,
        "node_id": "PR_kwDOIWuq585L8vA7",
        "number": 731,
        "title": "Followup of prevent duplicate query embedding calls  ",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-03-14T00:59:54Z",
        "updated_at": "2023-03-14T05:08:50Z",
        "closed_at": "2023-03-14T05:08:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/731",
            "html_url": "https://github.com/run-llama/llama_index/pull/731",
            "diff_url": "https://github.com/run-llama/llama_index/pull/731.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/731.patch",
            "merged_at": "2023-03-14T05:08:48Z"
        },
        "body": "Follow up of https://github.com/jerryjliu/llama_index/pull/719",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/731/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/731/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]