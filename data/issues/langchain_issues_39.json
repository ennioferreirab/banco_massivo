[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10556",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10556/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10556/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10556/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10556",
        "id": 1895042137,
        "node_id": "PR_kwDOIPDwls5aQz1x",
        "number": 10556,
        "title": "add mmr support to redis retriever",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5955630415,
                "node_id": "LA_kwDOIPDwls8AAAABYvu1Tw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20redis",
                "name": "integration: redis",
                "color": "F9D0C4",
                "default": false,
                "description": "Any integration that uses Redis"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-13T18:28:25Z",
        "updated_at": "2023-09-14T15:55:16Z",
        "closed_at": "2023-09-14T15:43:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10556",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10556",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10556.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10556.patch",
            "merged_at": "2023-09-14T15:43:50Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10556/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10556/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10555",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10555/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10555/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10555/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10555",
        "id": 1894977351,
        "node_id": "I_kwDOIPDwls5w8w9H",
        "number": 10555,
        "title": "LangChain's Chroma similarity_search return results from other db",
        "user": {
            "login": "fengyuyan",
            "id": 7063292,
            "node_id": "MDQ6VXNlcjcwNjMyOTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7063292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/fengyuyan",
            "html_url": "https://github.com/fengyuyan",
            "followers_url": "https://api.github.com/users/fengyuyan/followers",
            "following_url": "https://api.github.com/users/fengyuyan/following{/other_user}",
            "gists_url": "https://api.github.com/users/fengyuyan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/fengyuyan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/fengyuyan/subscriptions",
            "organizations_url": "https://api.github.com/users/fengyuyan/orgs",
            "repos_url": "https://api.github.com/users/fengyuyan/repos",
            "events_url": "https://api.github.com/users/fengyuyan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/fengyuyan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-09-13T17:42:19Z",
        "updated_at": "2023-12-06T13:20:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain 0.0.281\r\nPlatform: Centos\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nHi,\r\n\r\nI have two vector stores:\r\n\r\nsplitter = RecursiveCharacterTextSplitter(chunk_size=400, chunk_overlap=50)\r\nsplits_1 = splitter.split_documents(docs_1)\r\nsplits_2 = splitter.split_documents(docs_2)\r\n\r\nstore1 = Chroma.from_documents(documents=splits_1, embedding=HuggingFaceEmbeddings())\r\nstore2 = Chroma.from_documents(documents=splits_2, embedding=HuggingFaceEmbeddings())\r\n\r\nThen I use store2 to do similarity search, it returns results from splits_1, that's very wired. Can someone please help?\r\n\r\nThanks\r\nTom\n\n### Expected behavior\n\nDifferent vector store should use its own pool to do the similarity search",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10555/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10555/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10554",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10554/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10554/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10554/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10554",
        "id": 1894953189,
        "node_id": "I_kwDOIPDwls5w8rDl",
        "number": 10554,
        "title": "Issue: Parsing issue",
        "user": {
            "login": "KingCam12",
            "id": 72319290,
            "node_id": "MDQ6VXNlcjcyMzE5Mjkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/72319290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KingCam12",
            "html_url": "https://github.com/KingCam12",
            "followers_url": "https://api.github.com/users/KingCam12/followers",
            "following_url": "https://api.github.com/users/KingCam12/following{/other_user}",
            "gists_url": "https://api.github.com/users/KingCam12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KingCam12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KingCam12/subscriptions",
            "organizations_url": "https://api.github.com/users/KingCam12/orgs",
            "repos_url": "https://api.github.com/users/KingCam12/repos",
            "events_url": "https://api.github.com/users/KingCam12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KingCam12/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T17:23:30Z",
        "updated_at": "2023-12-13T16:01:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nimport pandas as pd\r\nimport pandas_gpt\r\n\r\ndf = pd.read_csv('aisc-shapes-database-v16.0.csv', index_col=0, header=0, usecols = [\"A:F\"], names = [\r\n   \"Type\", \"EDI_Std_Nomenclature\", \"AISC_Manual_Label\", \"T_F\", \"W\", \"Area\"])\r\n\r\ndf.ask('what is the area of W12X12?')\r\n\r\nNeed help getting this file to read with pandas.read_csv\r\n[aisc-shapes-database-v16.0.csv](https://github.com/langchain-ai/langchain/files/12600284/aisc-shapes-database-v16.0.csv)\r\n\n\n### Suggestion:\n\nThis is my error message\r\n\r\n  File \"c:\\Users\\camer\\import pandas as pd.py\", line 4, in <module>\r\n    df = pd.read_csv('aisc-shapes-database-v16.0.csv', index_col=0, header=0, usecols = [\"A:F\"], names = [\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\camer\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py\", line 948, in read_csv\r\n    return _read(filepath_or_buffer, kwds)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\camer\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py\", line 611, in _read\r\n    parser = TextFileReader(filepath_or_buffer, **kwds)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\camer\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py\", line 1448, in __init__\r\n    self._engine = self._make_engine(f, self.engine)  \r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  \r\n  File \"C:\\Users\\camer\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pandas\\io\\parsers\\readers.py\", line 1723, in _make_engine\r\n    return mapping[engine](f, **self.options)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\camer\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\pandas\\io\\parsers\\c_parser_wrapper.py\", line 93, in __init__\r\n    self._reader = parsers.TextReader(src, **kwds)    \r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^    \r\n  File \"parsers.pyx\", line 579, in pandas._libs.parsers.TextReader.__cinit__\r\n  File \"parsers.pyx\", line 668, in pandas._libs.parsers.TextReader._get_header\r\n  File \"parsers.pyx\", line 879, in pandas._libs.parsers.TextReader._tokenize_rows\r\n  File \"parsers.pyx\", line 890, in pandas._libs.parsers.TextReader._check_tokenize_status\r\n  File \"parsers.pyx\", line 2050, in pandas._libs.parsers.raise_parser_error\r\nUnicodeDecodeError: 'utf-8' codec can't decode byte 0x96 in position 703: invalid start byte",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10554/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10554/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10553",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10553/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10553/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10553/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10553",
        "id": 1894880317,
        "node_id": "I_kwDOIPDwls5w8ZQ9",
        "number": 10553,
        "title": "Issue: Can I load THUDM/chatglm-6b?",
        "user": {
            "login": "ggnicolau",
            "id": 79374447,
            "node_id": "MDQ6VXNlcjc5Mzc0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/79374447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ggnicolau",
            "html_url": "https://github.com/ggnicolau",
            "followers_url": "https://api.github.com/users/ggnicolau/followers",
            "following_url": "https://api.github.com/users/ggnicolau/following{/other_user}",
            "gists_url": "https://api.github.com/users/ggnicolau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ggnicolau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ggnicolau/subscriptions",
            "organizations_url": "https://api.github.com/users/ggnicolau/orgs",
            "repos_url": "https://api.github.com/users/ggnicolau/repos",
            "events_url": "https://api.github.com/users/ggnicolau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ggnicolau/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-13T16:32:12Z",
        "updated_at": "2023-11-11T02:27:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I've been searching for a large-context LLM with a relatively low parameter count suitable for local execution on multiple T4 GPUs or a single A100. My primary goal is to summarize extensive financial reports. While I came across FinGPT v1, it seems it isn't hosted on HuggingFace.\r\n\r\nHowever, I did find chatglm-6b, which serves as the foundation for FinGPT v1. This model is accessible on HuggingFace, but I'm facing issues loading it.\r\n\r\nHere's a snippet that successfully loads and uses the model outside Langchain:\r\n\r\n```\r\nfrom transformers import AutoModel, AutoTokenizer\r\n\r\nmodel_name = \"THUDM/chatglm2-6b\"\r\n\r\ntokenizer = AutoTokenizer.from_pretrained(model_name, trust_remote_code=True)\r\n\r\n# model = AutoModel.from_pretrained(model_name, trust_remote_code=True).cuda()\r\n\r\n# \u6309\u9700\u4fee\u6539\uff0c\u76ee\u524d\u53ea\u652f\u6301 4/8 bit \u91cf\u5316\r\n# model = AutoModel.from_pretrained(\"THUDM/chatglm2-6b\", trust_remote_code=True).quantize(4).cuda()\r\n\r\nimport torch\r\n\r\nhas_cuda = torch.cuda.is_available()\r\n# has_cuda = False  # force cpu\r\n\r\nif has_cuda:\r\n    #model = AutoModel.from_pretrained(\"THUDM/chatglm2-6b-int4\",trust_remote_code=True).half().cuda()  # 3.92\r\n    model = AutoModel.from_pretrained(\"THUDM/chatglm2-6b\", trust_remote_code=True).quantize(4).cuda()\r\nelse:\r\n    model = AutoModel.from_pretrained(\"THUDM/chatglm2-6b-int4\",trust_remote_code=True).half()  # float()\r\n\r\nresponse, history = model.chat(tokenizer, f\"Summarize this in a few words: {a}\", history=[])\r\n\r\n```\r\n\r\nBut, when I try the following, to use in Langchain:\r\n\r\n```\r\nfrom langchain.llms import HuggingFacePipeline\r\n\r\nllm = HuggingFacePipeline.from_model_id(\r\n    model_id=\"THUDM/chatglm-6b\",\r\n    task=\"text-generation\",\r\n    model_kwargs={\"temperature\": 0, \"max_length\": 64},\r\n)\r\n```\r\n\r\nI encounter this error:\r\n\r\n```\r\nValueError: Tokenizer class ChatGLMTokenizer does not exist or is not currently imported.\r\n```\r\n\r\nFrom what I gather, the ChatGLM model cannot be passed directly to HuggingFace's pipeline. While the Langchain documentation does mention using ChatGLM as a local model, it seems to primarily focus on using it via an API endpoint:\r\n\r\n```\r\nendpoint_url = \"http://127.0.0.1:8000\"\r\n\r\n# direct access endpoint in a proxied environment\r\n# os.environ['NO_PROXY'] = '127.0.0.1'\r\n\r\nllm = ChatGLM(\r\n    endpoint_url=endpoint_url,\r\n    max_token=80000,\r\n    history=[[\"\u6211\u5c06\u4ece\u7f8e\u56fd\u5230\u4e2d\u56fd\u6765\u65c5\u6e38\uff0c\u51fa\u884c\u524d\u5e0c\u671b\u4e86\u89e3\u4e2d\u56fd\u7684\u57ce\u5e02\", \"\u6b22\u8fce\u95ee\u6211\u4efb\u4f55\u95ee\u9898\u3002\"]],\r\n    top_p=0.9,\r\n    model_kwargs={\"sample_model_args\": False},\r\n)\r\n```\r\n\r\nWould anyone have insights on how to correctly load ChatGLM for tasks within Langchain?\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10553/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10553/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10552",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10552/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10552/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10552/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10552",
        "id": 1894837821,
        "node_id": "I_kwDOIPDwls5w8O49",
        "number": 10552,
        "title": "DOC: inexistent documentation for index",
        "user": {
            "login": "RoderickVM",
            "id": 64725908,
            "node_id": "MDQ6VXNlcjY0NzI1OTA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/64725908?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RoderickVM",
            "html_url": "https://github.com/RoderickVM",
            "followers_url": "https://api.github.com/users/RoderickVM/followers",
            "following_url": "https://api.github.com/users/RoderickVM/following{/other_user}",
            "gists_url": "https://api.github.com/users/RoderickVM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RoderickVM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RoderickVM/subscriptions",
            "organizations_url": "https://api.github.com/users/RoderickVM/orgs",
            "repos_url": "https://api.github.com/users/RoderickVM/repos",
            "events_url": "https://api.github.com/users/RoderickVM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RoderickVM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T16:04:16Z",
        "updated_at": "2023-12-13T16:01:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nThe `index` [API Reference document](https://api.python.langchain.com/en/latest/indexes/langchain.indexes._api.index.html) that is linked in the [Indexing documentation](https://python.langchain.com/docs/modules/data_connection/indexing#quickstart) returns a 404 error.\n\n### Idea or request for content:\n\nPlease include detailed documentation for `index` to use correctly `SQLRecordManager`.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10552/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10552/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10551",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10551/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10551/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10551/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10551",
        "id": 1894829054,
        "node_id": "I_kwDOIPDwls5w8Mv-",
        "number": 10551,
        "title": "SQLRecordManager index adds documents outside existing Redis vectorstore index",
        "user": {
            "login": "RoderickVM",
            "id": 64725908,
            "node_id": "MDQ6VXNlcjY0NzI1OTA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/64725908?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RoderickVM",
            "html_url": "https://github.com/RoderickVM",
            "followers_url": "https://api.github.com/users/RoderickVM/followers",
            "following_url": "https://api.github.com/users/RoderickVM/following{/other_user}",
            "gists_url": "https://api.github.com/users/RoderickVM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RoderickVM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RoderickVM/subscriptions",
            "organizations_url": "https://api.github.com/users/RoderickVM/orgs",
            "repos_url": "https://api.github.com/users/RoderickVM/repos",
            "events_url": "https://api.github.com/users/RoderickVM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RoderickVM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5955630415,
                "node_id": "LA_kwDOIPDwls8AAAABYvu1Tw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20redis",
                "name": "integration: redis",
                "color": "F9D0C4",
                "default": false,
                "description": "Any integration that uses Redis"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T15:58:42Z",
        "updated_at": "2023-09-25T07:55:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain_version: \"0.0.287\"\r\nlibrary: \"langchain\"\r\nlibrary_version: \"0.0.287\"\r\nplatform: \"Linux-6.1.0-12-amd64-x86_64-with-glibc2.36\"\r\npy_implementation: \"CPython\"\r\nruntime: \"python\"\r\nruntime_version: \"3.11.2\"\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nAfter following the [indexing instructions](https://python.langchain.com/docs/modules/data_connection/indexing), `index` stores the documents in a Redis vectorstore, but it does so outside the vectorstore's index.\r\n\r\n```\r\nimport os, time, json, openai\r\nfrom langchain.vectorstores.redis import Redis\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.indexes import SQLRecordManager, index\r\nfrom langchain.schema import Document\r\nfrom datetime import datetime\r\nfrom pathlib import Path\r\n\r\nopenai.api_key  = os.environ['OPENAI_API_KEY']\r\n\r\nVECTORS_INDEX_NAME = 'Vectors'\r\nCOLLECTION_NAME = 'DocsDB'\r\nNAMESPACE = f\"Redis/{COLLECTION_NAME}\"\r\nREDIS_URL = \"redis://10.0.1.21:6379\"\r\n\r\nembeddings = OpenAIEmbeddings()\r\n\r\nrecord_manager = SQLRecordManager(NAMESPACE, db_url=\"sqlite:///cache_Redis.sql\")\r\nrecord_manager.create_schema()\r\n\r\nrds_vectorstore = Redis.from_existing_index(\r\n    embeddings,\r\n    index_name=VECTORS_INDEX_NAME,\r\n    redis_url=REDIS_URL,\r\n    schema='Redis_schema.yaml'\r\n)\r\n\r\nindex(\r\n    document,\r\n    record_manager,\r\n    rds_vectorstore,\r\n    cleanup = \"full\", # None: for first document load; \"incremental\": for following documents\r\n    source_id_key = \"title\",\r\n)\r\n```\r\nWhen exploring the Redis vectorstore, all `documents` loaded outside the specified `VECTORS_INDEX_NAME`.\r\n\r\nWhen `documents` are loaded to the vectorstore without `RecordManager` `index`, they are created inside the specified `VECTORS_INDEX_NAME` when using the following code:\r\n```\r\nrds = Redis.from_documents(\r\n    document,\r\n    embeddings,\r\n    index_name=VECTORS_INDEX_NAME,\r\n    redis_url=REDIS_URL,\r\n    index_schema='Redis_schema.yaml'\r\n)\r\n```\n\n### Expected behavior\n\n`Documents` loaded into a Redis vectorstore using `index` `RecordManager` should be created inside the vectorstore's index.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10551/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10551/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10550",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10550/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10550/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10550/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10550",
        "id": 1894829007,
        "node_id": "I_kwDOIPDwls5w8MvP",
        "number": 10550,
        "title": "MMR search_type not implemented for Google Vertex AI Matching Engine Vector Store  (new name of Matching Engine- Vector Search)",
        "user": {
            "login": "UmerQam",
            "id": 138873074,
            "node_id": "U_kgDOCEcI8g",
            "avatar_url": "https://avatars.githubusercontent.com/u/138873074?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UmerQam",
            "html_url": "https://github.com/UmerQam",
            "followers_url": "https://api.github.com/users/UmerQam/followers",
            "following_url": "https://api.github.com/users/UmerQam/following{/other_user}",
            "gists_url": "https://api.github.com/users/UmerQam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UmerQam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UmerQam/subscriptions",
            "organizations_url": "https://api.github.com/users/UmerQam/orgs",
            "repos_url": "https://api.github.com/users/UmerQam/repos",
            "events_url": "https://api.github.com/users/UmerQam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UmerQam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-13T15:58:41Z",
        "updated_at": "2023-12-01T14:01:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nMMR search_type is not implemented for Google Vertex AI Matching Engine  Vector Store (new name of Matching Engine- Vector Search).\r\n\r\nI am getting the error `NotImplementedError`\r\n\r\nBelow is the code that I had used\r\n\r\n`retriever = me.as_retriever(\r\n    search_type=\"mmr\",\r\n    search_kwargs={\r\n        \"k\": 10,\r\n        \"search_distance\": 0.6,\r\n         \"fetch_k\": 15,\r\n        \"lambda_mult\": 0.7 }}`\r\n\r\nPlease implement it at the earliest, request the team if they can provide ETA too\r\n\r\n### Motivation\r\n\r\nI am working for a client where they are using only Google Vertex AI components for creating LLM chatbot agents using various unstructured document types. We are not getting optimal results with the default `search_type=\"similarity\"` , we understand that results can improve a  lot with MMR search. Hence kindly requesting the team to add the `search_type=\"mmr\"`  feature\r\n\r\n### Your contribution\r\n\r\nCan provide feedback on the new feature performance",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10550/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10550/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10549",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10549/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10549/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10549/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10549",
        "id": 1894815399,
        "node_id": "I_kwDOIPDwls5w8Jan",
        "number": 10549,
        "title": "Issue: Not sure whether my transformation using the model I created was correct, as I am getting an error.",
        "user": {
            "login": "SanjayDevarajan03",
            "id": 119276096,
            "node_id": "U_kgDOBxwCQA",
            "avatar_url": "https://avatars.githubusercontent.com/u/119276096?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SanjayDevarajan03",
            "html_url": "https://github.com/SanjayDevarajan03",
            "followers_url": "https://api.github.com/users/SanjayDevarajan03/followers",
            "following_url": "https://api.github.com/users/SanjayDevarajan03/following{/other_user}",
            "gists_url": "https://api.github.com/users/SanjayDevarajan03/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SanjayDevarajan03/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SanjayDevarajan03/subscriptions",
            "organizations_url": "https://api.github.com/users/SanjayDevarajan03/orgs",
            "repos_url": "https://api.github.com/users/SanjayDevarajan03/repos",
            "events_url": "https://api.github.com/users/SanjayDevarajan03/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SanjayDevarajan03/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-13T15:50:31Z",
        "updated_at": "2023-12-13T16:02:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n# The code for my model for sentiment analysis (this works, the problem is in the next part of my code)\r\n\r\nfrom datasets import load_dataset,Dataset\r\nfrom sentence_transformers.losses import CosineSimilarityLoss\r\nfrom setfit import SetFitModel, SetFitTrainer, sample_dataset\r\nfrom transformers import pipeline\r\nimport pandas as pd\r\nimport langchain\r\n\r\n# df = pd.read_csv(\"C:/Users/sanja/OneDrive/Desktop/Trillo InternShip/train.csv\",encoding='ISO-8859-1')\r\ndf = pd.read_csv(\"C:/Users/sanja/OneDrive/Desktop/Trillo InternShip/train-utf-8.csv\")\r\n\r\n# Create a mapping from string labels to integer labels\r\nlabel_mapping = {\"negative\": 0, \"neutral\": 1, \"positive\": 2}  # Customize this mapping as needed\r\n\r\n# Apply the mapping to the \"sentiment\" column\r\ndf['label'] = df['label'].map(label_mapping)\r\n\r\n\r\n# Specify the columns for text (input) and label (output)\r\ntext_column = \"selected_text\"\r\nlabel_column = \"label\"\r\n\r\n# Assuming you have already preprocessed and tokenized your text data\r\ndataset = Dataset.from_pandas(df)\r\n\r\nnum_samples_per_class = 8\r\n# Simulate the few-shot regime by sampling 8 examples per class\r\ntrain_dataset = sample_dataset(dataset, label_column=label_column, num_samples=num_samples_per_class)\r\neval_dataset = dataset  # Assuming you want to evaluate on the same DataFrame\r\n\r\n\r\n\r\n# Load a SetFit model from Hub\r\nmodel = SetFitModel.from_pretrained(\"sentence-transformers/paraphrase-mpnet-base-v2\")\r\n\r\n# Create trainer\r\ntrainer1 = SetFitTrainer(\r\n    model=model,\r\n    train_dataset=train_dataset,\r\n    eval_dataset=eval_dataset,\r\n    loss_class=CosineSimilarityLoss,\r\n    metric=\"accuracy\",\r\n    batch_size=16,\r\n    num_iterations=20,  # The number of text pairs to generate for contrastive learning\r\n    num_epochs=1,  # The number of epochs to use for contrastive learning\r\n    column_mapping={text_column: \"text\", label_column: \"label\"}  # Map dataset columns to text/label expected by trainer\r\n)\r\n\r\n# Train and evaluate\r\ntrainer1.train()\r\nmetrics = trainer1.evaluate()\r\n\r\n# Pushing model to hub\r\ntrainer1.push_to_hub(\"Sanjay1234/Trillo-Project\")\r\n\r\n# But here I get a problem when I do transformation,\r\nfrom langchain.chains import TransformChain, LLMChain, SimpleSequentialChain\r\nfrom sentence_transformers.losses import CosineSimilarityLoss\r\nfrom setfit import SetFitModel, SetFitTrainer, sample_dataset\r\nfrom transformers import pipeline\r\n\r\ndef transform_func(text):\r\n    shortened_text = \"\\n\\n\".join(text.split(\"\\n\\n\")[:3])\r\n    return shortened_text\r\n\r\ntransform_chain = TransformChain(\r\n    input_variables=[\"text\"], output_variables=[\"output_text\"], transform=transform_func\r\n)\r\n\r\n# I get a problem here\r\nllm_chain = LLMChain(\r\n   llm={\"llm\": \"Sanjay1234/Trillo-Project\"},  # Provide the llm parameter as a dictionary\r\n        prompt={\"prompt\": \"Summarize this text:\"}\r\n)\r\n\r\nsequential_chain = SimpleSequentialChain(chains=[transform_chain, llm_chain])\r\ntext = \"This is a long text. I want to transform it to only the first 3 paragraphs.\"\r\ntransformed_text = sequential_chain.run(text)\r\nprint(transformed_text)\r\n\r\nI get the following error.-\r\n---------------------------------------------------------------------------\r\nValidationError                           Traceback (most recent call last)\r\nCell In[26], line 1\r\n----> 1 llm_chain = LLMChain(\r\n      2     llm={\"llm\": \"Sanjay1234/Trillo-Project\"},  # Provide the llm parameter as a dictionary\r\n      3         prompt={\"prompt\": \"Summarize this text:\"}\r\n      4 )\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\langchain\\load\\serializable.py:74, in Serializable.__init__(self, **kwargs)\r\n     73 def __init__(self, **kwargs: Any) -> None:\r\n---> 74     super().__init__(**kwargs)\r\n     75     self._lc_kwargs = kwargs\r\n\r\nFile ~\\AppData\\Local\\Programs\\Python\\Python39\\lib\\site-packages\\pydantic\\main.py:341, in pydantic.main.BaseModel.__init__()\r\n\r\nValidationError: 2 validation errors for LLMChain\r\nprompt\r\n  Can't instantiate abstract class BasePromptTemplate with abstract methods format, format_prompt (type=type_error)\r\nllm\r\n  Can't instantiate abstract class BaseLanguageModel with abstract methods agenerate_prompt, apredict, apredict_messages, generate_prompt, invoke, predict, predict_messages (type=type_error)\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10549/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10549/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10548",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10548/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10548/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10548/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10548",
        "id": 1894798632,
        "node_id": "PR_kwDOIPDwls5aP-3e",
        "number": 10548,
        "title": "bump 288",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-13T15:41:22Z",
        "updated_at": "2023-09-13T15:57:44Z",
        "closed_at": "2023-09-13T15:57:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10548",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10548",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10548.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10548.patch",
            "merged_at": "2023-09-13T15:57:43Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10548/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10548/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10546",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10546/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10546/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10546/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10546",
        "id": 1894742556,
        "node_id": "PR_kwDOIPDwls5aPyqy",
        "number": 10546,
        "title": "Fix `GoogleEnterpriseSearchRetriever`",
        "user": {
            "login": "tomaspiaggio",
            "id": 18428646,
            "node_id": "MDQ6VXNlcjE4NDI4NjQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/18428646?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomaspiaggio",
            "html_url": "https://github.com/tomaspiaggio",
            "followers_url": "https://api.github.com/users/tomaspiaggio/followers",
            "following_url": "https://api.github.com/users/tomaspiaggio/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomaspiaggio/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomaspiaggio/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomaspiaggio/subscriptions",
            "organizations_url": "https://api.github.com/users/tomaspiaggio/orgs",
            "repos_url": "https://api.github.com/users/tomaspiaggio/repos",
            "events_url": "https://api.github.com/users/tomaspiaggio/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomaspiaggio/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T15:08:51Z",
        "updated_at": "2023-09-13T18:45:24Z",
        "closed_at": "2023-09-13T18:45:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10546",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10546",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10546.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10546.patch",
            "merged_at": "2023-09-13T18:45:08Z"
        },
        "body": "Replace this entire comment with:\r\n  - Description: fixed Google Enterprise Search Retriever where it was consistently returning empty results, \r\n  - Issue: related to [issue 8219](https://github.com/langchain-ai/langchain/issues/8219),\r\n  - Dependencies: no dependencies,\r\n  - Tag maintainer: @hwchase17 ,\r\n  - Twitter handle: [Tomas Piaggio](https://twitter.com/TomasPiaggio)!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10546/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10546/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10544",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10544/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10544/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10544/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10544",
        "id": 1894630727,
        "node_id": "I_kwDOIPDwls5w7cVH",
        "number": 10544,
        "title": "Issue: Want to get this to run, im suspecting that the csv. file is causing the problem",
        "user": {
            "login": "KingCam12",
            "id": 72319290,
            "node_id": "MDQ6VXNlcjcyMzE5Mjkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/72319290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KingCam12",
            "html_url": "https://github.com/KingCam12",
            "followers_url": "https://api.github.com/users/KingCam12/followers",
            "following_url": "https://api.github.com/users/KingCam12/following{/other_user}",
            "gists_url": "https://api.github.com/users/KingCam12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KingCam12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KingCam12/subscriptions",
            "organizations_url": "https://api.github.com/users/KingCam12/orgs",
            "repos_url": "https://api.github.com/users/KingCam12/repos",
            "events_url": "https://api.github.com/users/KingCam12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KingCam12/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T14:15:08Z",
        "updated_at": "2023-12-13T16:01:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nimports\r\nimport langchain\r\nimport os\r\nfrom apikey import apikey\r\nimport openai\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain import OpenAI\r\nfrom langchain.document_loaders import UnstructuredFileLoader\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.chains import RetrievalQA\r\n\r\nimport streamlit as st\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\n\r\n\r\n\r\nimport nltk\r\nnltk.download(\"punkt\")\r\n#loading file\r\n\r\nloader = UnstructuredFileLoader(\"aisc-shapes-database-v16.0.csv\",\"aisc-shapes-database-v16.0_a1085.pdf\")              \r\ndocuments = loader.load()\r\nlen(documents)\r\n\r\ntext_splitter = CharacterTextSplitter(chunk_size =1000000000, chunk_overlap = 0)\r\ntext = text_splitter.split_documents(documents)\r\n\r\nembeddings = OpenAIEmbeddings()#(openai_api_key = os.environ['OPENAI_API_KEY'])\r\n\r\n\r\ndoc_search = Chroma.from_documents(text, embeddings)\r\nchain = RetrievalQA.from_chain_type(llm =OpenAI(), chain_type=\"stuff\", retriever=doc_search.as_retriever(search_kwargs={\"k\":1}))\r\n\r\n\r\nquery = \"What is the area of wide flange W44X408\"\r\n\r\nresult = chain.run(query)\r\nprint(result)\r\n\r\nmodel.save('CIVEN-GPT')\n\n### Suggestion:\n\nIt runs without the csv. file so im assuming it is that however I would like to be able to include the data in the file in the training. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10544/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10544/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10543",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10543/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10543/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10543/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10543",
        "id": 1894573196,
        "node_id": "PR_kwDOIPDwls5aPNgn",
        "number": 10543,
        "title": "openai_functions_multi_agent: solved the case when the \"arguments\" is valid JSON but it does not contain `actions` key",
        "user": {
            "login": "laurentiupiciu",
            "id": 9489444,
            "node_id": "MDQ6VXNlcjk0ODk0NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9489444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laurentiupiciu",
            "html_url": "https://github.com/laurentiupiciu",
            "followers_url": "https://api.github.com/users/laurentiupiciu/followers",
            "following_url": "https://api.github.com/users/laurentiupiciu/following{/other_user}",
            "gists_url": "https://api.github.com/users/laurentiupiciu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laurentiupiciu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laurentiupiciu/subscriptions",
            "organizations_url": "https://api.github.com/users/laurentiupiciu/orgs",
            "repos_url": "https://api.github.com/users/laurentiupiciu/repos",
            "events_url": "https://api.github.com/users/laurentiupiciu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laurentiupiciu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T13:45:41Z",
        "updated_at": "2023-10-05T18:14:14Z",
        "closed_at": "2023-10-05T18:08:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10543",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10543",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10543.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10543.patch",
            "merged_at": "2023-10-05T18:08:09Z"
        },
        "body": "Description: There are cases when the output from the LLM comes fine (i.e. function_call[\"arguments\"] is a valid JSON object), but it does not contain the key \"actions\". So I split the validation in 2 steps: loading arguments as JSON and then checking for \"actions\" in it.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10543/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10543/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10542",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10542/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10542/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10542/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10542",
        "id": 1894566864,
        "node_id": "I_kwDOIPDwls5w7MvQ",
        "number": 10542,
        "title": "Get input prompt in a callback handler",
        "user": {
            "login": "kevin-guimard-ext",
            "id": 140074762,
            "node_id": "U_kgDOCFlfCg",
            "avatar_url": "https://avatars.githubusercontent.com/u/140074762?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevin-guimard-ext",
            "html_url": "https://github.com/kevin-guimard-ext",
            "followers_url": "https://api.github.com/users/kevin-guimard-ext/followers",
            "following_url": "https://api.github.com/users/kevin-guimard-ext/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevin-guimard-ext/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevin-guimard-ext/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevin-guimard-ext/subscriptions",
            "organizations_url": "https://api.github.com/users/kevin-guimard-ext/orgs",
            "repos_url": "https://api.github.com/users/kevin-guimard-ext/repos",
            "events_url": "https://api.github.com/users/kevin-guimard-ext/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevin-guimard-ext/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-13T13:42:49Z",
        "updated_at": "2023-10-31T18:15:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nI want to intercept the input prompt and the output of a chain, so I added a custom callback to the chain (derived from _BaseCallbackHandler_), but the input prompt seems quite tricky to retrieve.\r\n\r\nThe _on_chain_start_ method has the information hidden in the \"serialized\" variable, but accessing it is quite cumbersome. I let you judge by yourself:\r\n\r\n```\r\ndef on_chain_start(self, serialized: Dict[str, Any], inputs: Dict[str, Any], **kwargs: Any) -> Any:\r\n    \"\"\"Run when chain starts running.\"\"\"\r\n    print(serialized[\"kwargs\"][\"prompt\"][\"kwargs\"][\"messages\"][0][\"kwargs\"][\"prompt\"][\"kwargs\"][\"template\"])\r\n```\r\n\r\nNote that the format of _serialized_ changes from time to time for a reason I ignore, and it doesn't seem to be documented. This makes it unusable. Moreover, the \"template\" value is not the final prompt passed to the LLM after replacement of variables.\r\n\r\nAs for the _on_text_ method, it contains a formatted and colored text:\r\n\r\n> Prompt after formatting:\r\n> Human: prompt in green\r\n\r\nAre there simpler ways to retrieve the input prompt from a callback handler?\r\n\r\n### Motivation\r\n\r\nShowing both input and output could help debugging and it may be desirable to customize the outputs given by the _verbose_ mode.\r\n\r\n### Your contribution\r\n\r\nMaybe simply add the input message in the parameters of the _on_chain_start_ method, regardless of the way it has been generated.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10542/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10542/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10541",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10541/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10541/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10541/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10541",
        "id": 1894532433,
        "node_id": "I_kwDOIPDwls5w7EVR",
        "number": 10541,
        "title": "Issue: Agents using GPTQ models from huggingface is really slow. ",
        "user": {
            "login": "sauravm8",
            "id": 20572827,
            "node_id": "MDQ6VXNlcjIwNTcyODI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/20572827?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sauravm8",
            "html_url": "https://github.com/sauravm8",
            "followers_url": "https://api.github.com/users/sauravm8/followers",
            "following_url": "https://api.github.com/users/sauravm8/following{/other_user}",
            "gists_url": "https://api.github.com/users/sauravm8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sauravm8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sauravm8/subscriptions",
            "organizations_url": "https://api.github.com/users/sauravm8/orgs",
            "repos_url": "https://api.github.com/users/sauravm8/repos",
            "events_url": "https://api.github.com/users/sauravm8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sauravm8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T13:26:28Z",
        "updated_at": "2023-12-13T16:01:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nWhile trying to load a GPTQ model through a HuggingFace Pipeline and then run an agent on it, the inference time is really slow. \r\n\r\n```\r\n# Load configuration from the model to avoid warnings\r\ngeneration_config = GenerationConfig.from_pretrained(model_name_or_path)\r\n\r\n# Create a pipeline for text generation\r\npipe = pipeline(\r\n    task=\"text-generation\",\r\n    model=model,\r\n    tokenizer=tokenizer,\r\n    max_new_tokens=1024,\r\n    do_sample=True,\r\n    repetition_penalty=1.15,\r\n    generation_config=generation_config,\r\n    use_cache=False\r\n)\r\n\r\nlocal_llm = HuggingFacePipeline(pipeline=pipe)\r\nlogging.info(\"Local LLM Loaded\")\r\n\r\n```\r\n\r\nThe model is getting loaded on GPU\r\n\r\n![image](https://github.com/langchain-ai/langchain/assets/20572827/3df28d2b-527c-492f-9a01-b6bf9f7b8933)\r\n\r\nHowever the inference is really slow. I am waiting around 10 minutes for one iteration to complete. \r\n\r\n`agent = create_csv_agent(\r\n    local_llm,\r\n    \"titanic.csv\",\r\n    verbose=True,\r\n    agent_type=AgentType.ZERO_SHOT_REACT_DESCRIPTION,\r\n    handle_parsing_errors=True\r\n)`\r\n\r\n`agent.run(\"What is the total number of rows in titanic.csv\")\r\n`\r\n\r\nAlso, I get an error message -` Observation: len() is not a valid tool, try one of [python_repl_ast].` How to enable all tools so that the agent can use them? \n\n### Suggestion:\n\nNo suggestion, require help. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10541/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10541/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10540",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10540/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10540/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10540/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10540",
        "id": 1894516796,
        "node_id": "PR_kwDOIPDwls5aPBJR",
        "number": 10540,
        "title": "Add language detection example",
        "user": {
            "login": "mateusz-wosinski-ds",
            "id": 142883372,
            "node_id": "U_kgDOCIQ6LA",
            "avatar_url": "https://avatars.githubusercontent.com/u/142883372?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mateusz-wosinski-ds",
            "html_url": "https://github.com/mateusz-wosinski-ds",
            "followers_url": "https://api.github.com/users/mateusz-wosinski-ds/followers",
            "following_url": "https://api.github.com/users/mateusz-wosinski-ds/following{/other_user}",
            "gists_url": "https://api.github.com/users/mateusz-wosinski-ds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mateusz-wosinski-ds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mateusz-wosinski-ds/subscriptions",
            "organizations_url": "https://api.github.com/users/mateusz-wosinski-ds/orgs",
            "repos_url": "https://api.github.com/users/mateusz-wosinski-ds/repos",
            "events_url": "https://api.github.com/users/mateusz-wosinski-ds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mateusz-wosinski-ds/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T13:18:02Z",
        "updated_at": "2023-10-05T17:39:09Z",
        "closed_at": "2023-10-05T17:39:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10540",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10540",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10540.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10540.patch",
            "merged_at": "2023-10-05T17:39:09Z"
        },
        "body": "### Description\r\n\r\nAdds language detection examples based on [langdetect](https://github.com/Mimino666/langdetect/tree/master/langdetect) and [fasttext](https://github.com/facebookresearch/fastText/) libraries. These frameworks can be especially useful together with components that require selection of the language (e.g. data-anonymizer)\r\n\r\n### Twitter handle\r\n\r\n@deepsense_ai, @matt_wosinski",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10540/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10540/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10539",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10539/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10539/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10539/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10539",
        "id": 1894471329,
        "node_id": "I_kwDOIPDwls5w61ah",
        "number": 10539,
        "title": "Will langchain be able to support Baidu Qianfan in the future?",
        "user": {
            "login": "614TChen",
            "id": 47622353,
            "node_id": "MDQ6VXNlcjQ3NjIyMzUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/47622353?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/614TChen",
            "html_url": "https://github.com/614TChen",
            "followers_url": "https://api.github.com/users/614TChen/followers",
            "following_url": "https://api.github.com/users/614TChen/following{/other_user}",
            "gists_url": "https://api.github.com/users/614TChen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/614TChen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/614TChen/subscriptions",
            "organizations_url": "https://api.github.com/users/614TChen/orgs",
            "repos_url": "https://api.github.com/users/614TChen/repos",
            "events_url": "https://api.github.com/users/614TChen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/614TChen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T12:55:51Z",
        "updated_at": "2023-09-28T01:19:12Z",
        "closed_at": "2023-09-28T01:19:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nNew features to support Baudu's Qianfan\r\n\r\n### Motivation\r\n\r\nI believe that Baidu's recently launched LLM platform, Qianfan, which offers a range of APIs, will soon become widely adopted. It would be beneficial to consider incorporating features that facilitate seamless integration between Langchain and Qianfan, making it easier for developers to build applications.\r\n\r\n### Your contribution\r\n\r\nhttps://github.com/langchain-ai/langchain/pull/10496",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10539/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10539/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10538",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10538/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10538/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10538/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10538",
        "id": 1894462413,
        "node_id": "I_kwDOIPDwls5w6zPN",
        "number": 10538,
        "title": "SimpleJsonOutputParser not working",
        "user": {
            "login": "LarsAC",
            "id": 84110,
            "node_id": "MDQ6VXNlcjg0MTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/84110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LarsAC",
            "html_url": "https://github.com/LarsAC",
            "followers_url": "https://api.github.com/users/LarsAC/followers",
            "following_url": "https://api.github.com/users/LarsAC/following{/other_user}",
            "gists_url": "https://api.github.com/users/LarsAC/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LarsAC/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LarsAC/subscriptions",
            "organizations_url": "https://api.github.com/users/LarsAC/orgs",
            "repos_url": "https://api.github.com/users/LarsAC/repos",
            "events_url": "https://api.github.com/users/LarsAC/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LarsAC/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T12:50:53Z",
        "updated_at": "2023-12-13T21:22:04Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.287\r\n\r\nIn output_parsers there is a `SimpleJsonOutputParser` defined (json.py). This looks very reasonable for easily getting answers back in structured a format. However, the class does not work as it does not specify the method `get_format_instructions`and thus calling the parse method raises a `NotImplementedError`. In addition, there is no documentation and the class is not imported into the `__init__.py` of the directory.\r\n\r\nIs this intended behavior ? I am ok to submit a small patch - for my case the class comes very handy and has less complexity than the approach via Pydantic.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce\r\n\r\n1. from langchain.output_parsers.json import SimpleJsonOutputParser\r\n2. output_parser = SimpleJsonOutputParser()\r\n3. format_instructions = output_parser.get_format_instructions()\n\n### Expected behavior\n\nSimpleJsonOutputParser works like any other output parser.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10538/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10538/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10536",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10536/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10536/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10536/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10536",
        "id": 1894354179,
        "node_id": "I_kwDOIPDwls5w6Y0D",
        "number": 10536,
        "title": "Issue: google calendar agent",
        "user": {
            "login": "isayahc",
            "id": 18591926,
            "node_id": "MDQ6VXNlcjE4NTkxOTI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/18591926?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/isayahc",
            "html_url": "https://github.com/isayahc",
            "followers_url": "https://api.github.com/users/isayahc/followers",
            "following_url": "https://api.github.com/users/isayahc/following{/other_user}",
            "gists_url": "https://api.github.com/users/isayahc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/isayahc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/isayahc/subscriptions",
            "organizations_url": "https://api.github.com/users/isayahc/orgs",
            "repos_url": "https://api.github.com/users/isayahc/repos",
            "events_url": "https://api.github.com/users/isayahc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/isayahc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-13T11:46:22Z",
        "updated_at": "2023-09-14T02:37:27Z",
        "closed_at": "2023-09-14T02:37:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nIs there an agent toolkit for google calendar?\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10536/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10536/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10535",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10535/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10535/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10535/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10535",
        "id": 1894353050,
        "node_id": "PR_kwDOIPDwls5aOdPl",
        "number": 10535,
        "title": "Added Streaming Capability to SageMaker LLMs",
        "user": {
            "login": "dazajuandaniel",
            "id": 7788126,
            "node_id": "MDQ6VXNlcjc3ODgxMjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7788126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dazajuandaniel",
            "html_url": "https://github.com/dazajuandaniel",
            "followers_url": "https://api.github.com/users/dazajuandaniel/followers",
            "following_url": "https://api.github.com/users/dazajuandaniel/following{/other_user}",
            "gists_url": "https://api.github.com/users/dazajuandaniel/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dazajuandaniel/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dazajuandaniel/subscriptions",
            "organizations_url": "https://api.github.com/users/dazajuandaniel/orgs",
            "repos_url": "https://api.github.com/users/dazajuandaniel/repos",
            "events_url": "https://api.github.com/users/dazajuandaniel/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dazajuandaniel/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 5959659008,
                "node_id": "LA_kwDOIPDwls8AAAABYzkuAA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20aws",
                "name": "integration: aws",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to Amazon Web Services (AWS) integrations"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-09-13T11:45:36Z",
        "updated_at": "2023-10-25T16:08:00Z",
        "closed_at": "2023-10-05T18:08:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10535",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10535",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10535.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10535.patch",
            "merged_at": "2023-10-05T18:08:44Z"
        },
        "body": "This PR adds the ability to declare a Streaming response in the SageMaker LLM by leveraging the `invoke_endpoint_with_response_stream` capability in `boto3`. It is heavily based on the AWS Blog Post announcement linked [here](https://aws.amazon.com/blogs/machine-learning/elevating-the-generative-ai-experience-introducing-streaming-support-in-amazon-sagemaker-hosting/).\r\n\r\nIt does not add any additional dependencies since it uses the existing `boto3` version.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10535/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10535/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10534",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10534/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10534/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10534/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10534",
        "id": 1894334794,
        "node_id": "PR_kwDOIPDwls5aOZOT",
        "number": 10534,
        "title": "Fix SingleStoreDB",
        "user": {
            "login": "volodymyr-memsql",
            "id": 57520563,
            "node_id": "MDQ6VXNlcjU3NTIwNTYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/57520563?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/volodymyr-memsql",
            "html_url": "https://github.com/volodymyr-memsql",
            "followers_url": "https://api.github.com/users/volodymyr-memsql/followers",
            "following_url": "https://api.github.com/users/volodymyr-memsql/following{/other_user}",
            "gists_url": "https://api.github.com/users/volodymyr-memsql/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/volodymyr-memsql/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/volodymyr-memsql/subscriptions",
            "organizations_url": "https://api.github.com/users/volodymyr-memsql/orgs",
            "repos_url": "https://api.github.com/users/volodymyr-memsql/repos",
            "events_url": "https://api.github.com/users/volodymyr-memsql/events{/privacy}",
            "received_events_url": "https://api.github.com/users/volodymyr-memsql/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T11:33:27Z",
        "updated_at": "2023-09-18T07:17:22Z",
        "closed_at": "2023-09-13T19:09:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10534",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10534",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10534.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10534.patch",
            "merged_at": "2023-09-13T19:09:46Z"
        },
        "body": "After the refactoring #6570, the DistanceStrategy class was moved to another module and this introduced a bug into the SingleStoreDB vector store, as the `DistanceStrategy.EUCLEDIAN_DISTANCE` started to convert into the 'DistanceStrategy.EUCLEDIAN_DISTANCE' string, instead of just 'EUCLEDIAN_DISTANCE' (same for 'DOT_PRODUCT'). \r\n\r\nIn this change, I check the type of the parameter and use `.name` attribute to get the correct object's name. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10534/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10534/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10533",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10533/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10533/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10533/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10533",
        "id": 1894264876,
        "node_id": "I_kwDOIPDwls5w6DAs",
        "number": 10533,
        "title": "Issue: Is LangSmith playground compatible with Azure OpenAI?",
        "user": {
            "login": "gchlodzinski",
            "id": 561223,
            "node_id": "MDQ6VXNlcjU2MTIyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/561223?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gchlodzinski",
            "html_url": "https://github.com/gchlodzinski",
            "followers_url": "https://api.github.com/users/gchlodzinski/followers",
            "following_url": "https://api.github.com/users/gchlodzinski/following{/other_user}",
            "gists_url": "https://api.github.com/users/gchlodzinski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gchlodzinski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gchlodzinski/subscriptions",
            "organizations_url": "https://api.github.com/users/gchlodzinski/orgs",
            "repos_url": "https://api.github.com/users/gchlodzinski/repos",
            "events_url": "https://api.github.com/users/gchlodzinski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gchlodzinski/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-09-13T10:48:45Z",
        "updated_at": "2023-10-11T10:43:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n1. I have downloaded original LangSmith walkthrough notebook and modified it to run AzureOpenAI llm instead of OpenAI\r\n2. After successful run of the first example I went to Langsmith, selected first LLM call and opened it in the Playground.\r\n3. I have filled up OpenAI key and hit 'Start'\r\n\r\nHere is the error I get:\r\n\r\nError: Invalid namespace: $ -> {\"id\":[\"langchain\",\"chat_models\",\"azure_openai\",\"AzureChatOpenAI\"],\"lc\":1,\"type\":\"constructor\",\"kwargs\":{\"temperature\":0,\"openai_api_key\":{\"id\":[\"xxx\"],\"lc\":1,\"type\":\"secret\"},\"deployment_name\":\"chat-gpt\",\"openai_api_base\":\"yyy\",\"openai_api_type\":\"azure\",\"openai_api_version\":\"2023-03-15-preview\"}}\r\n\r\nI have played with different ways of setting OPEN_API_KEY but none of them works, the same error is consistently displayed.\r\nSo it is a bug or Azure Open AI does not work by design in the Playground?\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10533/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10533/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10532",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10532/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10532/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10532/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10532",
        "id": 1894161102,
        "node_id": "PR_kwDOIPDwls5aNzDk",
        "number": 10532,
        "title": "Add support for Exllama",
        "user": {
            "login": "EkChinHui",
            "id": 57344608,
            "node_id": "MDQ6VXNlcjU3MzQ0NjA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/57344608?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EkChinHui",
            "html_url": "https://github.com/EkChinHui",
            "followers_url": "https://api.github.com/users/EkChinHui/followers",
            "following_url": "https://api.github.com/users/EkChinHui/following{/other_user}",
            "gists_url": "https://api.github.com/users/EkChinHui/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EkChinHui/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EkChinHui/subscriptions",
            "organizations_url": "https://api.github.com/users/EkChinHui/orgs",
            "repos_url": "https://api.github.com/users/EkChinHui/repos",
            "events_url": "https://api.github.com/users/EkChinHui/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EkChinHui/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-13T09:48:14Z",
        "updated_at": "2023-10-15T04:04:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10532",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10532",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10532.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10532.patch",
            "merged_at": null
        },
        "body": "  - Description: Integrate exllama as an LLM, \r\n  - Issue:  #8385 ,\r\n  - Dependencies: https://github.com/jllllll/exllama\r\n\r\nReferenced https://github.com/CoffeeVampir3/exllama-langchain-example/tree/master",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10532/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10532/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10531",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10531/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10531/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10531/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10531",
        "id": 1894137855,
        "node_id": "I_kwDOIPDwls5w5j__",
        "number": 10531,
        "title": "ValueError: Missing some input keys: {'input'}",
        "user": {
            "login": "awais-akhtar",
            "id": 70436174,
            "node_id": "MDQ6VXNlcjcwNDM2MTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/70436174?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/awais-akhtar",
            "html_url": "https://github.com/awais-akhtar",
            "followers_url": "https://api.github.com/users/awais-akhtar/followers",
            "following_url": "https://api.github.com/users/awais-akhtar/following{/other_user}",
            "gists_url": "https://api.github.com/users/awais-akhtar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/awais-akhtar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/awais-akhtar/subscriptions",
            "organizations_url": "https://api.github.com/users/awais-akhtar/orgs",
            "repos_url": "https://api.github.com/users/awais-akhtar/repos",
            "events_url": "https://api.github.com/users/awais-akhtar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/awais-akhtar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-13T09:36:13Z",
        "updated_at": "2023-09-25T07:52:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain deplopment on sagemaker\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [x] My own modified scripts\n\n### Related Components\n\n- [x] LLMs/Chat Models\n- [x] Embedding Models\n- [x] Prompts / Prompt Templates / Prompt Selectors\n- [x] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [x] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain import SagemakerEndpoint\r\nfrom langchain.llms.sagemaker_endpoint import LLMContentHandler\r\nfrom typing import Dict\r\nimport json\r\n\r\nclass HFContentHandler(LLMContentHandler):\r\n    content_type = \"application/json\"\r\n    accepts = \"application/json\"\r\n\r\n    def transform_input(self, prompt: str, model_kwargs: Dict) -> bytes:\r\n        input_dict = {\r\n            \"input\": {\r\n                \"question\": prompt,\r\n                \"context\": model_kwargs\r\n            }\r\n        }\r\n        input_str = json.dumps(input_dict)\r\n        return input_str.encode('utf-8')\r\n\r\n    def transform_output(self, output: bytes) -> str:\r\n        response_json = output.read().decode('utf-8')\r\n        res = json.loads(response_json)\r\n\r\n        # Stripping away the input prompt from the returned response\r\n        ans = res[0]['generated_text'][self.len_prompt:]\r\n        ans = ans[:ans.rfind(\"Human\")].strip()\r\n        return ans\r\n\r\n# Example parameters\r\nparameters = {\r\n    'do_sample': True,\r\n    'top_p': 0.3,\r\n    'max_new_tokens': 1024,\r\n    'temperature': 0.6,\r\n    'watermark': True       \r\n}\r\n\r\nllm = SagemakerEndpoint(\r\n    endpoint_name=\"huggingface-pytorch-inference-**********\",\r\n    region_name=\"us-east-1\",\r\n    model_kwargs=parameters,\r\n    content_handler=HFContentHandler(), \r\n)\r\n\r\n\r\n\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom langchain.chains import ConversationChain\r\n\r\nmemory = ConversationBufferMemory()\r\n# Creating a chain with buffer memory to keep track of conversations\r\nchain = ConversationChain(llm=llm, memory=memory)\r\n\r\nchain.predict({\"input\": {\"question\": \"this is test\", \"context\": \"this is answer\"}})\r\n\n\n### Expected behavior\n\nthere is error in content handler please help to correct it. \r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nCell In[87], line 8\r\n      5 # Creating a chain with buffer memory to keep track of conversations\r\n      6 chain = ConversationChain(llm=llm, memory=memory)\r\n----> 8 chain.predict({\"input\": {\"question\": \"this is test\", \"context\": \"this is answer\"}})\r\n\r\nFile ~/anaconda3/envs/python3/lib/python3.10/site-packages/langchain/chains/llm.py:255, in LLMChain.predict(self, callbacks, **kwargs)\r\n    240 def predict(self, callbacks: Callbacks = None, **kwargs: Any) -> str:\r\n    241     \"\"\"Format prompt with kwargs and pass to LLM.\r\n    242 \r\n    243     Args:\r\n   (...)\r\n    253             completion = llm.predict(adjective=\"funny\")\r\n    254     \"\"\"\r\n--> 255     return self(kwargs, callbacks=callbacks)[self.output_key]\r\n\r\nFile ~/anaconda3/envs/python3/lib/python3.10/site-packages/langchain/chains/base.py:268, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, metadata, run_name, include_run_info)\r\n    232 def __call__(\r\n    233     self,\r\n    234     inputs: Union[Dict[str, Any], Any],\r\n   (...)\r\n    241     include_run_info: bool = False,\r\n    242 ) -> Dict[str, Any]:\r\n    243     \"\"\"Execute the chain.\r\n    244 \r\n    245     Args:\r\n   (...)\r\n    266             `Chain.output_keys`.\r\n    267     \"\"\"\r\n--> 268     inputs = self.prep_inputs(inputs)\r\n    269     callback_manager = CallbackManager.configure(\r\n    270         callbacks,\r\n    271         self.callbacks,\r\n   (...)\r\n    276         self.metadata,\r\n    277     )\r\n    278     new_arg_supported = inspect.signature(self._call).parameters.get(\"run_manager\")\r\n\r\nFile ~/anaconda3/envs/python3/lib/python3.10/site-packages/langchain/chains/base.py:425, in Chain.prep_inputs(self, inputs)\r\n    423     external_context = self.memory.load_memory_variables(inputs)\r\n    424     inputs = dict(inputs, **external_context)\r\n--> 425 self._validate_inputs(inputs)\r\n    426 return inputs\r\n\r\nFile ~/anaconda3/envs/python3/lib/python3.10/site-packages/langchain/chains/base.py:179, in Chain._validate_inputs(self, inputs)\r\n    177 missing_keys = set(self.input_keys).difference(inputs)\r\n    178 if missing_keys:\r\n--> 179     raise ValueError(f\"Missing some input keys: {missing_keys}\")\r\n\r\nValueError: Missing some input keys: {'input'}",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10531/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10531/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10530",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10530/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10530/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10530/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10530",
        "id": 1894127953,
        "node_id": "I_kwDOIPDwls5w5hlR",
        "number": 10530,
        "title": "Can not access to url: https://python.langchain.com/docs/integrations/text_embedding/sentence_transformers ",
        "user": {
            "login": "phamkhactu",
            "id": 42369268,
            "node_id": "MDQ6VXNlcjQyMzY5MjY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/42369268?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phamkhactu",
            "html_url": "https://github.com/phamkhactu",
            "followers_url": "https://api.github.com/users/phamkhactu/followers",
            "following_url": "https://api.github.com/users/phamkhactu/following{/other_user}",
            "gists_url": "https://api.github.com/users/phamkhactu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phamkhactu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phamkhactu/subscriptions",
            "organizations_url": "https://api.github.com/users/phamkhactu/orgs",
            "repos_url": "https://api.github.com/users/phamkhactu/repos",
            "events_url": "https://api.github.com/users/phamkhactu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phamkhactu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T09:30:31Z",
        "updated_at": "2023-09-15T12:57:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nhttps://python.langchain.com/docs/integrations/text_embedding/sentence_transformers is unreachable.\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10530/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10530/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10529",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10529/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10529/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10529/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10529",
        "id": 1894107226,
        "node_id": "I_kwDOIPDwls5w5cha",
        "number": 10529,
        "title": "compress content when using gpt-4",
        "user": {
            "login": "easontsai",
            "id": 19547472,
            "node_id": "MDQ6VXNlcjE5NTQ3NDcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/19547472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/easontsai",
            "html_url": "https://github.com/easontsai",
            "followers_url": "https://api.github.com/users/easontsai/followers",
            "following_url": "https://api.github.com/users/easontsai/following{/other_user}",
            "gists_url": "https://api.github.com/users/easontsai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/easontsai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/easontsai/subscriptions",
            "organizations_url": "https://api.github.com/users/easontsai/orgs",
            "repos_url": "https://api.github.com/users/easontsai/repos",
            "events_url": "https://api.github.com/users/easontsai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/easontsai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T09:20:29Z",
        "updated_at": "2023-12-13T16:01:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "hi team,\r\n\r\nIn langchain agent, any recommendations to compress the content? Hoping to reduce the token usage.\r\nSetting max token was not working to reduce the token usage.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10529/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10529/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10528",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10528/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10528/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10528/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10528",
        "id": 1894078446,
        "node_id": "I_kwDOIPDwls5w5Vfu",
        "number": 10528,
        "title": "Handle by default `ToolException`",
        "user": {
            "login": "clemlesne",
            "id": 10001945,
            "node_id": "MDQ6VXNlcjEwMDAxOTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/10001945?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/clemlesne",
            "html_url": "https://github.com/clemlesne",
            "followers_url": "https://api.github.com/users/clemlesne/followers",
            "following_url": "https://api.github.com/users/clemlesne/following{/other_user}",
            "gists_url": "https://api.github.com/users/clemlesne/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/clemlesne/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clemlesne/subscriptions",
            "organizations_url": "https://api.github.com/users/clemlesne/orgs",
            "repos_url": "https://api.github.com/users/clemlesne/repos",
            "events_url": "https://api.github.com/users/clemlesne/events{/privacy}",
            "received_events_url": "https://api.github.com/users/clemlesne/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-13T09:05:35Z",
        "updated_at": "2023-10-25T17:07:51Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nAs of today, if a tool crashes, the whole agent or chain crashes. From a user point-of-view, it is understandable that a specific tool is not available.\r\n\r\n### Motivation\r\n\r\nThe user experience should be maintained if a dependency is broken. Plus, catching by default tool error can enhance the software reliability.\r\n\r\n### Relates\r\n\r\n- https://github.com/langchain-ai/langchain/issues/8348",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10528/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10528/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10526",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10526/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10526/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10526/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10526",
        "id": 1893881183,
        "node_id": "I_kwDOIPDwls5w4lVf",
        "number": 10526,
        "title": "Issue: How to retrieve and search from multiple collections or directories?",
        "user": {
            "login": "apurv101",
            "id": 14235444,
            "node_id": "MDQ6VXNlcjE0MjM1NDQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/14235444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apurv101",
            "html_url": "https://github.com/apurv101",
            "followers_url": "https://api.github.com/users/apurv101/followers",
            "following_url": "https://api.github.com/users/apurv101/following{/other_user}",
            "gists_url": "https://api.github.com/users/apurv101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apurv101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apurv101/subscriptions",
            "organizations_url": "https://api.github.com/users/apurv101/orgs",
            "repos_url": "https://api.github.com/users/apurv101/repos",
            "events_url": "https://api.github.com/users/apurv101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apurv101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T07:03:24Z",
        "updated_at": "2023-12-13T16:01:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nIs there any way in langchain to fetch documents from multiple vectorstores, and then combine them to ask the question.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10526/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10526/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10525",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10525/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10525/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10525/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10525",
        "id": 1893801398,
        "node_id": "PR_kwDOIPDwls5aMlOR",
        "number": 10525,
        "title": "Bagatur/elevenlabs",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-13T06:01:10Z",
        "updated_at": "2023-09-13T06:11:05Z",
        "closed_at": "2023-09-13T06:11:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10525",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10525",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10525.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10525.patch",
            "merged_at": "2023-09-13T06:11:04Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10525/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10525/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10524",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10524/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10524/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10524/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10524",
        "id": 1893792079,
        "node_id": "I_kwDOIPDwls5w4PlP",
        "number": 10524,
        "title": "Opensearch metadata_field and metadata_filter not working",
        "user": {
            "login": "abhinavmishra05",
            "id": 29484957,
            "node_id": "MDQ6VXNlcjI5NDg0OTU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29484957?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abhinavmishra05",
            "html_url": "https://github.com/abhinavmishra05",
            "followers_url": "https://api.github.com/users/abhinavmishra05/followers",
            "following_url": "https://api.github.com/users/abhinavmishra05/following{/other_user}",
            "gists_url": "https://api.github.com/users/abhinavmishra05/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abhinavmishra05/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abhinavmishra05/subscriptions",
            "organizations_url": "https://api.github.com/users/abhinavmishra05/orgs",
            "repos_url": "https://api.github.com/users/abhinavmishra05/repos",
            "events_url": "https://api.github.com/users/abhinavmishra05/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abhinavmishra05/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-13T05:51:57Z",
        "updated_at": "2023-10-17T11:22:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version = 0.0.281 \r\npython =  3.11\r\nopensearch-py = 2.3.0\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n\r\nI am trying to do metadata based filtering alongside the query execution using `OpensearchVectorSearch.similarity_search()`. But when I use `metadata_field` and `metadata_filter`, the search doesn't seems to take that into account and still returns results outside of those filters.\r\n\r\nHere is myr code:\r\n\r\n`response = es.similarity_search( query = \"<sample query text>\", K =4, metadata_field = \"title\", metadata_filter = {\"match\":{\"title\": \"<sample doc title>}}, )`\r\n\r\nHere `es` is the `OpenSearchVectorSearch` object for `index1`\r\n\r\nThe output structure is like this:\r\n`[Document(page_content = ' ', metadata={'vector_field' : [], 'text' : ' ', 'metadata' : {'source' : ' ', 'title' : ' ' }})]`\r\n\r\nHere the title I see is not the title I specified in my query.\r\n\r\nSteps to reproduce:\r\n\r\n1. Create an Opensearch index with multiple documents.\r\n2. Run similarity_search() query with a metadata_field and/or metadata_filter\r\n\n\n### Expected behavior\n\nThe query should be run against the specified `metadata_field` and `metadata_filter` and in output, I should only see the correct document name I specified in `metadata_field` and `metadata_filter`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10524/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10524/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10523",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10523/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10523/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10523/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10523",
        "id": 1893725262,
        "node_id": "PR_kwDOIPDwls5aMUx8",
        "number": 10523,
        "title": "fix: unify generation outputs on newer openllm release",
        "user": {
            "login": "aarnphm",
            "id": 29749331,
            "node_id": "MDQ6VXNlcjI5NzQ5MzMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29749331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aarnphm",
            "html_url": "https://github.com/aarnphm",
            "followers_url": "https://api.github.com/users/aarnphm/followers",
            "following_url": "https://api.github.com/users/aarnphm/following{/other_user}",
            "gists_url": "https://api.github.com/users/aarnphm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aarnphm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aarnphm/subscriptions",
            "organizations_url": "https://api.github.com/users/aarnphm/orgs",
            "repos_url": "https://api.github.com/users/aarnphm/repos",
            "events_url": "https://api.github.com/users/aarnphm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aarnphm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T04:37:36Z",
        "updated_at": "2023-09-13T20:49:17Z",
        "closed_at": "2023-09-13T20:49:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10523",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10523",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10523.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10523.patch",
            "merged_at": "2023-09-13T20:49:17Z"
        },
        "body": "update newer generation format from OpenLLm where it returns a dictionary for one shot generation\n\ncc @baskaryan \n\nSigned-off-by: Aaron <29749331+aarnphm@users.noreply.github.com>\n\n<!-- Thank you for contributing to LangChain!\n\nReplace this entire comment with:\n  - Description: a description of the change, \n  - Issue: the issue # it fixes (if applicable),\n  - Dependencies: any dependencies required for this change,\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\n\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\n\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\n\nIf you're adding a new integration, please include:\n  1. a test for the integration, preferably unit tests that do not rely on network access,\n  2. an example notebook showing its use. These live is docs/extras directory.\n\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\n -->\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10523/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10523/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10522",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10522/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10522/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10522/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10522",
        "id": 1893647164,
        "node_id": "PR_kwDOIPDwls5aMDZV",
        "number": 10522,
        "title": "Additional Weaviate Filter Comparators",
        "user": {
            "login": "prandell",
            "id": 52766847,
            "node_id": "MDQ6VXNlcjUyNzY2ODQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/52766847?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prandell",
            "html_url": "https://github.com/prandell",
            "followers_url": "https://api.github.com/users/prandell/followers",
            "following_url": "https://api.github.com/users/prandell/following{/other_user}",
            "gists_url": "https://api.github.com/users/prandell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prandell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prandell/subscriptions",
            "organizations_url": "https://api.github.com/users/prandell/orgs",
            "repos_url": "https://api.github.com/users/prandell/repos",
            "events_url": "https://api.github.com/users/prandell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prandell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-13T03:17:45Z",
        "updated_at": "2023-10-05T17:40:05Z",
        "closed_at": "2023-10-05T17:40:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10522",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10522",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10522.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10522.patch",
            "merged_at": "2023-10-05T17:40:05Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n\r\n### Description\r\nWhen using Weaviate Self-Retrievers, certain common filter comparators generated by user queries were unimplemented, resulting in errors. This PR implements some of them. All linting and format commands have been run and tests passed.\r\n### Issue\r\n#10474\r\n### Dependencies\r\ntimestamp module\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10522/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10522/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10521",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10521/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10521/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10521/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10521",
        "id": 1893622488,
        "node_id": "I_kwDOIPDwls5w3mLY",
        "number": 10521,
        "title": "only use past x messages ",
        "user": {
            "login": "MannJadwani",
            "id": 89898145,
            "node_id": "MDQ6VXNlcjg5ODk4MTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/89898145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MannJadwani",
            "html_url": "https://github.com/MannJadwani",
            "followers_url": "https://api.github.com/users/MannJadwani/followers",
            "following_url": "https://api.github.com/users/MannJadwani/following{/other_user}",
            "gists_url": "https://api.github.com/users/MannJadwani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MannJadwani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MannJadwani/subscriptions",
            "organizations_url": "https://api.github.com/users/MannJadwani/orgs",
            "repos_url": "https://api.github.com/users/MannJadwani/repos",
            "events_url": "https://api.github.com/users/MannJadwani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MannJadwani/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T02:42:51Z",
        "updated_at": "2023-12-13T16:01:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAn input for conversational chains to be able to limit their context to a set number of chats\n\n### Motivation\n\nI am in the process of building a document analysis tool using langchain but when the chat chain becomes too long, I just get an error stating that the limit for the no of openai tokens has been reached because the context keeps becoming longer and longer. is there some way i could limit the context to only a certain no of messages and not take all of them in.\n\n### Your contribution\n\nNo I am very new to  using langchain and having a hard time understanding the codebase. so i am afraid their is nothing i could do to help.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10521/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10521/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10520",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10520/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10520/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10520/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10520",
        "id": 1893566283,
        "node_id": "I_kwDOIPDwls5w3YdL",
        "number": 10520,
        "title": "Reduce azure openai token usage",
        "user": {
            "login": "easontsai",
            "id": 19547472,
            "node_id": "MDQ6VXNlcjE5NTQ3NDcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/19547472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/easontsai",
            "html_url": "https://github.com/easontsai",
            "followers_url": "https://api.github.com/users/easontsai/followers",
            "following_url": "https://api.github.com/users/easontsai/following{/other_user}",
            "gists_url": "https://api.github.com/users/easontsai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/easontsai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/easontsai/subscriptions",
            "organizations_url": "https://api.github.com/users/easontsai/orgs",
            "repos_url": "https://api.github.com/users/easontsai/repos",
            "events_url": "https://api.github.com/users/easontsai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/easontsai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-13T01:23:29Z",
        "updated_at": "2023-12-13T16:02:10Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "hi team,\r\n\r\nI  am using the Azure openai gpt4-32k as llm in langchain. I implemented openai plugin by agent, but the cost is increasing at an incredible rate. I think the agent would ask gpt4 modal to understand the plugin openapi json that make the token usage increasing. any recommendations to reduce the token usage in agent?\r\n\r\nthanks",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10520/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10520/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10519",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10519/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10519/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10519/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10519",
        "id": 1893555356,
        "node_id": "I_kwDOIPDwls5w3Vyc",
        "number": 10519,
        "title": "Support jinja2 template format when using ChatPromptTemplate.from_template_file",
        "user": {
            "login": "mep-um",
            "id": 3371600,
            "node_id": "MDQ6VXNlcjMzNzE2MDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3371600?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mep-um",
            "html_url": "https://github.com/mep-um",
            "followers_url": "https://api.github.com/users/mep-um/followers",
            "following_url": "https://api.github.com/users/mep-um/following{/other_user}",
            "gists_url": "https://api.github.com/users/mep-um/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mep-um/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mep-um/subscriptions",
            "organizations_url": "https://api.github.com/users/mep-um/orgs",
            "repos_url": "https://api.github.com/users/mep-um/repos",
            "events_url": "https://api.github.com/users/mep-um/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mep-um/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-09-13T01:10:23Z",
        "updated_at": "2023-10-07T10:26:42Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nBaseStringMessagePromptTemplate.from_template supports the template_format variable, while BaseStringMessagePromptTemplate.from_template_file does not.\r\n\r\n### Motivation\r\n\r\nAll supported template formats (including Jinja2) should be supported by all template loaders equally.\r\n\r\n### Your contribution\r\n\r\nI'm not experienced enough with the Langchain codebase to submit PRs at this time.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10519/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10519/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10518",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10518/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10518/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10518/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10518",
        "id": 1893540448,
        "node_id": "PR_kwDOIPDwls5aLs0c",
        "number": 10518,
        "title": "add replicate stream",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-13T00:49:58Z",
        "updated_at": "2023-09-14T15:49:45Z",
        "closed_at": "2023-09-14T15:44:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10518",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10518",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10518.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10518.patch",
            "merged_at": "2023-09-14T15:44:06Z"
        },
        "body": "support direct replicate streaming. cc @cbh123 @tjaffri ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10518/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10518/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10517",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10517/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10517/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10517/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10517",
        "id": 1893454929,
        "node_id": "PR_kwDOIPDwls5aLaJv",
        "number": 10517,
        "title": "cache replicate version",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-12T23:12:18Z",
        "updated_at": "2023-09-14T15:34:06Z",
        "closed_at": "2023-09-14T15:34:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10517",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10517",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10517.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10517.patch",
            "merged_at": "2023-09-14T15:34:05Z"
        },
        "body": "In subsequent pr will update _call to use replicate.run directly when not streaming, so version object isn't needed at all\r\n\r\ncc @cbh123 @tjaffri ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10517/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10517/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10516",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10516/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10516/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10516/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10516",
        "id": 1893413058,
        "node_id": "PR_kwDOIPDwls5aLUsm",
        "number": 10516,
        "title": "Bagatur/replicate inputs",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-12T22:46:51Z",
        "updated_at": "2023-09-12T22:52:14Z",
        "closed_at": "2023-09-12T22:52:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10516",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10516",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10516.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10516.patch",
            "merged_at": "2023-09-12T22:52:13Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10516/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10516/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10515",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10515/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10515/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10515/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10515",
        "id": 1893387846,
        "node_id": "PR_kwDOIPDwls5aLPHK",
        "number": 10515,
        "title": "fixed PR template",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-12T22:22:37Z",
        "updated_at": "2023-09-13T16:36:20Z",
        "closed_at": "2023-09-13T16:35:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10515",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10515",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10515.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10515.patch",
            "merged_at": "2023-09-13T16:35:48Z"
        },
        "body": "@hwchase17 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10515/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10515/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10514",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10514/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10514/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10514/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10514",
        "id": 1893322151,
        "node_id": "PR_kwDOIPDwls5aLEo1",
        "number": 10514,
        "title": "Moved from InferenceApi to InferenceClient to avoid deprecation warning for huggingface_hub",
        "user": {
            "login": "keenborder786",
            "id": 45242107,
            "node_id": "MDQ6VXNlcjQ1MjQyMTA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/45242107?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/keenborder786",
            "html_url": "https://github.com/keenborder786",
            "followers_url": "https://api.github.com/users/keenborder786/followers",
            "following_url": "https://api.github.com/users/keenborder786/following{/other_user}",
            "gists_url": "https://api.github.com/users/keenborder786/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/keenborder786/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/keenborder786/subscriptions",
            "organizations_url": "https://api.github.com/users/keenborder786/orgs",
            "repos_url": "https://api.github.com/users/keenborder786/repos",
            "events_url": "https://api.github.com/users/keenborder786/events{/privacy}",
            "received_events_url": "https://api.github.com/users/keenborder786/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-12T21:43:33Z",
        "updated_at": "2023-10-27T18:31:28Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10514",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10514",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10514.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10514.patch",
            "merged_at": null
        },
        "body": "Updated huggingface_hub llm to use the new InferenceClient to avoid deprecation warning. \r\n\r\nResolves the issue: #10483\r\n\r\n\r\n@baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10514/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10514/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10513",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10513/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10513/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10513/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10513",
        "id": 1893300757,
        "node_id": "PR_kwDOIPDwls5aK_7P",
        "number": 10513,
        "title": "fix: Update Google Cloud Enterprise Search to Vertex AI Search",
        "user": {
            "login": "holtskinner",
            "id": 13262395,
            "node_id": "MDQ6VXNlcjEzMjYyMzk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13262395?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/holtskinner",
            "html_url": "https://github.com/holtskinner",
            "followers_url": "https://api.github.com/users/holtskinner/followers",
            "following_url": "https://api.github.com/users/holtskinner/following{/other_user}",
            "gists_url": "https://api.github.com/users/holtskinner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/holtskinner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/holtskinner/subscriptions",
            "organizations_url": "https://api.github.com/users/holtskinner/orgs",
            "repos_url": "https://api.github.com/users/holtskinner/repos",
            "events_url": "https://api.github.com/users/holtskinner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/holtskinner/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 26,
        "created_at": "2023-09-12T21:25:48Z",
        "updated_at": "2023-10-06T15:11:45Z",
        "closed_at": "2023-10-05T17:47:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10513",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10513",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10513.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10513.patch",
            "merged_at": "2023-10-05T17:47:47Z"
        },
        "body": "- Description: Google Cloud Enterprise Search was renamed to Vertex AI Search\r\n  - https://cloud.google.com/blog/products/ai-machine-learning/vertex-ai-search-and-conversation-is-now-generally-available\r\n  - This PR updates the documentation and Retriever class to use the new terminology.\r\n  - Changed retriever class from `GoogleCloudEnterpriseSearchRetriever` to `GoogleVertexAISearchRetriever`\r\n  - Updated documentation to specify that `extractive_segments` requires the new [Enterprise edition](https://cloud.google.com/generative-ai-app-builder/docs/about-advanced-features#enterprise-features) to be enabled.\r\n  - Fixed spelling errors in documentation.\r\n  - Change parameter for Retriever from `search_engine_id` to `data_store_id`\r\n    - When this retriever was originally implemented, there was no distinction between a data store and search engine, but now these have been split.\r\n  - Fixed an issue blocking some users where the api_endpoint can't be set",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10513/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10513/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10512",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10512/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10512/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10512/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10512",
        "id": 1893280591,
        "node_id": "PR_kwDOIPDwls5aK7c_",
        "number": 10512,
        "title": "Fix fine-tuned replicate models with faster cold boot",
        "user": {
            "login": "tjaffri",
            "id": 749277,
            "node_id": "MDQ6VXNlcjc0OTI3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/749277?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjaffri",
            "html_url": "https://github.com/tjaffri",
            "followers_url": "https://api.github.com/users/tjaffri/followers",
            "following_url": "https://api.github.com/users/tjaffri/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjaffri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjaffri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjaffri/subscriptions",
            "organizations_url": "https://api.github.com/users/tjaffri/orgs",
            "repos_url": "https://api.github.com/users/tjaffri/repos",
            "events_url": "https://api.github.com/users/tjaffri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjaffri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-12T21:11:54Z",
        "updated_at": "2023-09-17T18:54:22Z",
        "closed_at": "2023-09-12T22:40:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10512",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10512",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10512.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10512.patch",
            "merged_at": "2023-09-12T22:40:55Z"
        },
        "body": "With the latest support for faster cold boot in replicate https://replicate.com/blog/fine-tune-cold-boots it looks like the replicate LLM support in langchain is broken since some internal replicate inputs are being returned. \r\n\r\nScreenshot below illustrates the problem:\r\n\r\n<img width=\"1917\" alt=\"image\" src=\"https://github.com/langchain-ai/langchain/assets/749277/d28c27cc-40fb-4258-8710-844c00d3c2b0\">\r\n\r\nAs you can see, the new replicate_weights param is being sent down with x-order = 0 (which is causing langchain to use that param instead of prompt which is x-order = 1)\r\n\r\nFYI @baskaryan this requires a fix otherwise replicate is broken for these models. I have pinged replicate whether they want to fix it on their end by changing the x-order returned by them.\r\n\r\nUpdate: per suggestion I updated the PR to just allow manually setting the prompt_key which can be set to \"prompt\" in this case by callers... I think this is going to be faster anyway than trying to dynamically query the model every time if you know the prompt key for your model.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10512/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10512/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10511",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10511/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10511/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10511/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10511",
        "id": 1893219675,
        "node_id": "I_kwDOIPDwls5w2D1b",
        "number": 10511,
        "title": "APIError: HTTP code 203 from API when running from a Click CLI app on a local Windows terminal",
        "user": {
            "login": "chriscarrollsmith",
            "id": 75859865,
            "node_id": "MDQ6VXNlcjc1ODU5ODY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/75859865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chriscarrollsmith",
            "html_url": "https://github.com/chriscarrollsmith",
            "followers_url": "https://api.github.com/users/chriscarrollsmith/followers",
            "following_url": "https://api.github.com/users/chriscarrollsmith/following{/other_user}",
            "gists_url": "https://api.github.com/users/chriscarrollsmith/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chriscarrollsmith/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chriscarrollsmith/subscriptions",
            "organizations_url": "https://api.github.com/users/chriscarrollsmith/orgs",
            "repos_url": "https://api.github.com/users/chriscarrollsmith/repos",
            "events_url": "https://api.github.com/users/chriscarrollsmith/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chriscarrollsmith/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-12T20:33:16Z",
        "updated_at": "2023-12-12T16:01:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nDevice name\tLAPTOP-3BD5HR1V\r\nProcessor\tAMD Ryzen 5 3500U with Radeon Vega Mobile Gfx     2.10 GHz\r\nInstalled RAM\t20.0 GB (17.9 GB usable)\r\nDevice ID\tF8ACB5C8-80FB-46C6-AE6D-33AD019A5728\r\nProduct ID\t00325-82110-59554-AAOEM\r\nSystem type\t64-bit operating system, x64-based processor\r\nPen and touch\tNo pen or touch input is available for this display\r\n\r\nEdition\tWindows 11 Home\r\nVersion\t22H2\r\nInstalled on\t\u200e10/\u200e5/\u200e2022\r\nOS build\t22621.2134\r\nSerial number\tPF2WCKPH\r\nExperience\tWindows Feature Experience Pack 1000.22659.1000.0\r\n\r\nPython 3.11.2\r\nlangchain 0.0.272\n\n### Who can help?\n\n@hwchase17\r\n@agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI have created a Python CLI tool called 'dir-diary' that uses Chain.run to make API calls. The tool is built on `click`. When I run the tool from a terminal window with a Python virtual environment activated, the tool works okay. It also appears to work okay from both Linux-based and Windows-based Github Actions runners. But when I run it from a vanilla Windows terminal on my own machine, langchain fails to authenticate with Azure DevOps after several retries.\r\n\r\nThere's a whole lot of text returned with the error. The most helpful bits are:\r\n\r\n.APIError: HTTP code 203 from API.\r\n'Microsoft Internet Explorer&#39;s Enhanced Security Configuration is currently enabled on your environment. This enhanced level of security prevents our web integration experiences from displaying or performing correctly. To continue with your operation please disable this configuration or contact your administrator'\r\n'Unable to complete authentication for user due to looping logins'\r\n'Traceback (most recent call last):\r\n  File \"C:\\Users\\chris\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\openai\\api_requestor.py\", line 755, in _interpret_response_line\r\n    data = json.loads(rbody)\r\n           ^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\chris\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\json\\__init__.py\", line 335, in loads\r\n    raise JSONDecodeError(\"Unexpected UTF-8 BOM (decode using utf-8-sig)\",\r\njson.decoder.JSONDecodeError: Unexpected UTF-8 BOM (decode using utf-8-sig): line 1 column 1 (char 0)'\r\n\r\nSteps to reproduce:\r\n\r\nI haven't fully figured out the secret to reproducing this yet. Obviously, if it works on a Windows runner, then it's not really a Windows problem. There must be something problematic about my local setup that I can't identify. FWIW, here are my steps:\r\n\r\n1. run command `pip install -U dir-diary` from a Windows terminal\r\n2. go to any code project folder\r\n3. run command `summarize`\r\n\r\nI have tried running as administrator and turning down the Internet security level through Internet Options in Control Panel, but neither of those solutions fixed the problem.\n\n### Expected behavior\n\nIt's supposed to successfully query the API to summarize the project folder.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10511/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10511/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10510",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10510/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10510/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10510/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10510",
        "id": 1893212736,
        "node_id": "PR_kwDOIPDwls5aKsVQ",
        "number": 10510,
        "title": "Add support for showing IO to chain group",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-12T20:27:50Z",
        "updated_at": "2023-09-17T07:47:53Z",
        "closed_at": "2023-09-17T07:47:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10510",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10510",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10510.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10510.patch",
            "merged_at": "2023-09-17T07:47:52Z"
        },
        "body": "As well as error propagation",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10510/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10510/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10509",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10509/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10509/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10509/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10509",
        "id": 1893212013,
        "node_id": "PR_kwDOIPDwls5aKsLT",
        "number": 10509,
        "title": "add avg feedback",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-12T20:27:14Z",
        "updated_at": "2023-09-12T21:05:19Z",
        "closed_at": "2023-09-12T21:05:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10509",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10509",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10509.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10509.patch",
            "merged_at": "2023-09-12T21:05:18Z"
        },
        "body": "in run_on_dataset agg feedback printout",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10509/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10509/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10506",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10506/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10506/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10506/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10506",
        "id": 1893131951,
        "node_id": "I_kwDOIPDwls5w1uav",
        "number": 10506,
        "title": "Elasticsearch ELSER Timeout",
        "user": {
            "login": "DrSebastianK",
            "id": 129894211,
            "node_id": "U_kgDOB74HQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/129894211?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DrSebastianK",
            "html_url": "https://github.com/DrSebastianK",
            "followers_url": "https://api.github.com/users/DrSebastianK/followers",
            "following_url": "https://api.github.com/users/DrSebastianK/following{/other_user}",
            "gists_url": "https://api.github.com/users/DrSebastianK/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DrSebastianK/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DrSebastianK/subscriptions",
            "organizations_url": "https://api.github.com/users/DrSebastianK/orgs",
            "repos_url": "https://api.github.com/users/DrSebastianK/repos",
            "events_url": "https://api.github.com/users/DrSebastianK/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DrSebastianK/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-12T19:32:37Z",
        "updated_at": "2023-09-27T20:28:26Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nPython 3.10.12\r\nGoogle Colab\r\nElasticsearch Cloud 8.9.2\r\nLangchain - latest\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @agola11\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nSteps:\r\n\r\n1. Load list of documents\r\n2. Setup ElasticsearchStore of Langchain, with appropriate ES cloud credentials\r\n3. Successfully create index with custom embedding model (HF embedding model, deployed on colab)\r\n4. Deploy ELSER model and run it (with default model id).\r\n5. Try creating index with SparseVectorRetrievalStrategy (ELSER) over the same list of documents.\r\n6. Tried to change timeout, but didn't effect the outcome.\r\n7. NOTE: It does start uploading docs and docs count is increasing, but it stops after about 10 sec. I tried to run the ELSER model on 3 nodes, but nothing changed.\r\n\r\n### Expected behavior\r\n\r\nWARNING:elastic_transport.node_pool:Node <Urllib3HttpNode([https://-------.us-central1.gcp.cloud.es.io:443](https:/------.us-central1.gcp.cloud.es.io/))> has failed for 1 times in a row, putting on 1 second timeout\r\n---------------------------------------------------------------------------\r\nConnectionTimeout                         Traceback (most recent call last)\r\n[<ipython-input-92----------cb>](https://-------colab.googleusercontent.com/outputframe.html?vrz=colab_20230911-060143_RC00_564310758#) in <cell line: 1>()\r\n----> 1 elastic_elser_search = ElasticsearchStore.from_documents(\r\n      2     documents=split_texts,\r\n      3     es_cloud_id=\"cloudid\",\r\n      4     index_name=\"search-tmd-elser\",\r\n      5     es_user=\"elastic\",\r\n\r\n10 frames\r\n[/usr/local/lib/python3.10/dist-packages/elastic_transport/_node/_http_urllib3.py](https://---XXXX-----0-colab.googleusercontent.com/outputframe.html?vrz=colab_---XXXX-----#) in perform_request(self, method, target, body, headers, request_timeout)\r\n    197                 exception=err,\r\n    198             )\r\n--> 199             raise err from None\r\n    200 \r\n    201         meta = ApiResponseMeta(\r\n\r\nConnectionTimeout: Connection timed out",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10506/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10506/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10505",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10505/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10505/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10505/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10505",
        "id": 1893051229,
        "node_id": "PR_kwDOIPDwls5aKIwC",
        "number": 10505,
        "title": "JSONLoader Documentation Fix",
        "user": {
            "login": "amdmax",
            "id": 1109522,
            "node_id": "MDQ6VXNlcjExMDk1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1109522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amdmax",
            "html_url": "https://github.com/amdmax",
            "followers_url": "https://api.github.com/users/amdmax/followers",
            "following_url": "https://api.github.com/users/amdmax/following{/other_user}",
            "gists_url": "https://api.github.com/users/amdmax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amdmax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amdmax/subscriptions",
            "organizations_url": "https://api.github.com/users/amdmax/orgs",
            "repos_url": "https://api.github.com/users/amdmax/repos",
            "events_url": "https://api.github.com/users/amdmax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amdmax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-12T18:31:36Z",
        "updated_at": "2023-09-21T18:37:41Z",
        "closed_at": "2023-09-21T18:37:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10505",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10505",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10505.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10505.patch",
            "merged_at": "2023-09-21T18:37:41Z"
        },
        "body": "- Description: \nUpdated JSONLoader usage documentation which was making it unusable\n- Issue: JSONLoader if used with the documented arguments was failing on various JSON documents. \n- Dependencies: \nno dependencies\n- Twitter handle: @TheSlnArchitect\n\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\n -->\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10505/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10505/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10504",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10504/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10504/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10504/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10504",
        "id": 1892995250,
        "node_id": "PR_kwDOIPDwls5aJ8iW",
        "number": 10504,
        "title": "`fallback` definition",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-12T17:48:35Z",
        "updated_at": "2023-10-03T19:51:06Z",
        "closed_at": "2023-10-03T19:38:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10504",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10504",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10504.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10504.patch",
            "merged_at": "2023-10-03T19:38:59Z"
        },
        "body": "I've added a definition to `fallback` and fixed couple misspells. It was not really clear what is the \"fallback\".\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10504/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10504/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10503",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10503/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10503/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10503/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10503",
        "id": 1892952161,
        "node_id": "PR_kwDOIPDwls5aJy2E",
        "number": 10503,
        "title": "Update SQLDatabaseChain for intermediate SQLResults",
        "user": {
            "login": "zzfab",
            "id": 35594229,
            "node_id": "MDQ6VXNlcjM1NTk0MjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/35594229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zzfab",
            "html_url": "https://github.com/zzfab",
            "followers_url": "https://api.github.com/users/zzfab/followers",
            "following_url": "https://api.github.com/users/zzfab/following{/other_user}",
            "gists_url": "https://api.github.com/users/zzfab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zzfab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zzfab/subscriptions",
            "organizations_url": "https://api.github.com/users/zzfab/orgs",
            "repos_url": "https://api.github.com/users/zzfab/repos",
            "events_url": "https://api.github.com/users/zzfab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zzfab/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-12T17:24:40Z",
        "updated_at": "2023-11-13T06:45:01Z",
        "closed_at": "2023-11-13T06:45:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10503",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10503",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10503.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10503.patch",
            "merged_at": null
        },
        "body": "Description: \r\nIn the call method within the SQLDatabaseChain class:\r\nAmend the intermediate steps dictionary to include a new key, say sql_result, where the SQL results at different stages would be saved.\r\nDuring the SQL execution step, save the SQL result into the sql_result key in the intermediate steps dictionary, similar to how sql_cmd is being saved currently.\r\n\r\nIssue: #10500 \r\nTag maintainer: zzfab\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10503/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10503/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10502",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10502/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10502/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10502/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10502",
        "id": 1892908861,
        "node_id": "PR_kwDOIPDwls5aJpfw",
        "number": 10502,
        "title": "docs: `self-query` consistency",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-12T16:53:20Z",
        "updated_at": "2023-09-13T22:02:32Z",
        "closed_at": "2023-09-13T21:43:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10502",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10502",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10502.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10502.patch",
            "merged_at": "2023-09-13T21:43:04Z"
        },
        "body": "The `self-que[ring` navbar](https://python.langchain.com/docs/modules/data_connection/retrievers/self_query/) has repeated `self-quering` repeated in each menu item. I've simplified it to be more readable\r\n- removed `self-quering` from a title of each page;\r\n- added description to the vector stores\r\n- added description and link to the Integration Card (`integrations/providers`) of the vector stores when they are missed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10502/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10502/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10501",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10501/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10501/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10501/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10501",
        "id": 1892781541,
        "node_id": "PR_kwDOIPDwls5aJNtb",
        "number": 10501,
        "title": "Instance anonymization",
        "user": {
            "login": "maks-operlejn-ds",
            "id": 142261444,
            "node_id": "U_kgDOCHq8xA",
            "avatar_url": "https://avatars.githubusercontent.com/u/142261444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maks-operlejn-ds",
            "html_url": "https://github.com/maks-operlejn-ds",
            "followers_url": "https://api.github.com/users/maks-operlejn-ds/followers",
            "following_url": "https://api.github.com/users/maks-operlejn-ds/following{/other_user}",
            "gists_url": "https://api.github.com/users/maks-operlejn-ds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maks-operlejn-ds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maks-operlejn-ds/subscriptions",
            "organizations_url": "https://api.github.com/users/maks-operlejn-ds/orgs",
            "repos_url": "https://api.github.com/users/maks-operlejn-ds/repos",
            "events_url": "https://api.github.com/users/maks-operlejn-ds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maks-operlejn-ds/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-12T15:37:14Z",
        "updated_at": "2023-10-05T18:23:03Z",
        "closed_at": "2023-10-05T18:23:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10501",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10501",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10501.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10501.patch",
            "merged_at": "2023-10-05T18:23:03Z"
        },
        "body": "### Description\r\n\r\nAdd instance anonymization - if `John Doe` will appear twice in the text, it will be treated as the same entity.\r\nThe difference between `PresidioAnonymizer` and `PresidioReversibleAnonymizer` is that only the second one has a built-in memory, so it will remember anonymization mapping for multiple texts:\r\n\r\n```\r\n>>> anonymizer = PresidioAnonymizer()\r\n>>> anonymizer.anonymize(\"My name is John Doe. Hi John Doe!\")\r\n'My name is Noah Rhodes. Hi Noah Rhodes!'\r\n>>> anonymizer.anonymize(\"My name is John Doe. Hi John Doe!\")\r\n'My name is Brett Russell. Hi Brett Russell!'\r\n```\r\n```\r\n>>> anonymizer = PresidioReversibleAnonymizer()\r\n>>> anonymizer.anonymize(\"My name is John Doe. Hi John Doe!\")\r\n'My name is Noah Rhodes. Hi Noah Rhodes!'\r\n>>> anonymizer.anonymize(\"My name is John Doe. Hi John Doe!\")\r\n'My name is Noah Rhodes. Hi Noah Rhodes!'\r\n```\r\n\r\n### Twitter handle\r\n@deepsense_ai / @MaksOpp\r\n\r\n### Tag maintainer\r\n@baskaryan @hwchase17 @hinthornw ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10501/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10501/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10500",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10500/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10500/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10500/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10500",
        "id": 1892729571,
        "node_id": "I_kwDOIPDwls5w0MLj",
        "number": 10500,
        "title": "Enhance SQLDatabaseChain with SQL Results in Intermediate Steps Dictionary",
        "user": {
            "login": "zzfab",
            "id": 35594229,
            "node_id": "MDQ6VXNlcjM1NTk0MjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/35594229?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zzfab",
            "html_url": "https://github.com/zzfab",
            "followers_url": "https://api.github.com/users/zzfab/followers",
            "following_url": "https://api.github.com/users/zzfab/following{/other_user}",
            "gists_url": "https://api.github.com/users/zzfab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zzfab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zzfab/subscriptions",
            "organizations_url": "https://api.github.com/users/zzfab/orgs",
            "repos_url": "https://api.github.com/users/zzfab/repos",
            "events_url": "https://api.github.com/users/zzfab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zzfab/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-12T15:11:12Z",
        "updated_at": "2023-12-12T16:02:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\n## Description\r\n\r\nCurrently, the SQLDatabaseChain class is designed to optionally return intermediate steps taken during the SQL command generation and execution. These intermediate steps are helpful in understanding the processing flow, especially during debugging or for logging purposes. However, these intermediate steps do not store the SQL results obtained at various steps, which could offer deeper insights and can aid in further optimizations or analyses.\r\n\r\nThis feature request proposes to enhance the SQLDatabaseChain class to save SQL results from intermediate steps into a dictionary, akin to how SQL commands are currently stored. This would not only facilitate a more comprehensive view of each step but also potentially help in identifying and fixing issues or optimizing the process further.\r\n\r\n### Motivation\r\n\r\n#### Insightful Debugging: \r\nStoring SQL results in intermediate steps will facilitate deeper insights during debugging, helping to pinpoint the exact step where a potential issue might be occurring.\r\n\r\n#### Enhanced Logging: \r\nLogging the SQL results at each step can help in creating a more detailed log, which can be instrumental in analyzing the performance and identifying optimization opportunities.\r\n\r\nImproved Analysis and Optimization: With the SQL results available at each step, it becomes feasible to analyze the results at different stages, which can be used to further optimize the SQL queries or the process flow.\r\n\r\n### Your contribution\r\n\r\nI propose to contribute to implementing this feature by:\r\n\r\n#### Code Adaptation: \r\nModifying the _call_ method in the SQLDatabaseChain class to include SQL results in the intermediate steps dictionary, similar to how sql_cmd is currently being saved.\r\n\r\n#### Testing: \r\nDeveloping appropriate unit tests to ensure the correct functioning of the new feature, and that it does not break the existing functionality.\r\n\r\n#### Documentation: \r\nUpdating the documentation to include details of the new feature, illustrating how to use it and how it can benefit the users.\r\n\r\n#### Optimization: \r\nOnce implemented, analyzing the stored results to propose further optimizations or enhancements to the Langchain project.\r\n\r\n## Proposed Changes\r\nIn the _call_ method within the SQLDatabaseChain class:\r\n\r\nAmend the intermediate steps dictionary to include a new key, say sql_result, where the SQL results at different stages would be saved.\r\n\r\nDuring the SQL execution step, save the SQL result into the sql_result key in the intermediate steps dictionary, similar to how sql_cmd is being saved currently.\r\n\r\n```\r\nif not self.use_query_checker:\r\n    ...\r\n    intermediate_steps.append({\"sql_cmd\": sql_cmd, \"sql_result\": str(result)})  # Save sql result here\r\nelse:\r\n    ...\r\n    intermediate_steps.append({\"sql_cmd\": checked_sql_command, \"sql_result\": str(result)})  # Save sql result here\r\n```\r\nI believe that this contribution would be a valuable addition to the Langchain project, and I am eager to collaborate with the team to make it a reality.\r\n\r\nLooking forward to hearing your thoughts on this proposal.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10500/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10500/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10499",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10499/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10499/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10499/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10499",
        "id": 1892695091,
        "node_id": "PR_kwDOIPDwls5aI6ou",
        "number": 10499,
        "title": "Agent Variant 4",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-12T14:52:51Z",
        "updated_at": "2023-09-12T14:53:07Z",
        "closed_at": null,
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10499",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10499",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10499.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10499.patch",
            "merged_at": null
        },
        "body": "- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n- x\n\n<!-- Thank you for contributing to LangChain!\n\nReplace this entire comment with:\n  - Description: a description of the change, \n  - Issue: the issue # it fixes (if applicable),\n  - Dependencies: any dependencies required for this change,\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\n\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\n\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\n\nIf you're adding a new integration, please include:\n  1. a test for the integration, preferably unit tests that do not rely on network access,\n  2. an example notebook showing its use. These live is docs/extras directory.\n\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\n -->\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10499/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10499/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10498",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10498/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10498/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10498/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10498",
        "id": 1892695031,
        "node_id": "PR_kwDOIPDwls5aI6n3",
        "number": 10498,
        "title": "bump 287",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-12T14:52:50Z",
        "updated_at": "2023-09-12T15:06:48Z",
        "closed_at": "2023-09-12T15:06:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10498",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10498",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10498.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10498.patch",
            "merged_at": "2023-09-12T15:06:47Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10498/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10498/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10497",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10497/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10497/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10497/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10497",
        "id": 1892622763,
        "node_id": "I_kwDOIPDwls5wzyGr",
        "number": 10497,
        "title": "Issue: <Please write a comprehensive title after the 'Issue: ' prefix>",
        "user": {
            "login": "KingCam12",
            "id": 72319290,
            "node_id": "MDQ6VXNlcjcyMzE5Mjkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/72319290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KingCam12",
            "html_url": "https://github.com/KingCam12",
            "followers_url": "https://api.github.com/users/KingCam12/followers",
            "following_url": "https://api.github.com/users/KingCam12/following{/other_user}",
            "gists_url": "https://api.github.com/users/KingCam12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KingCam12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KingCam12/subscriptions",
            "organizations_url": "https://api.github.com/users/KingCam12/orgs",
            "repos_url": "https://api.github.com/users/KingCam12/repos",
            "events_url": "https://api.github.com/users/KingCam12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KingCam12/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-12T14:15:52Z",
        "updated_at": "2023-12-12T16:02:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n\r\nWhen I run the code I don't get any errors but I also don't get any output in the terminal or output area either? Can you help?\r\n![Screenshot 2023-09-12 101445](https://github.com/langchain-ai/langchain/assets/72319290/8e7ac61a-8343-409f-bb98-a2cbf7401ad7)\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10497/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10497/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10496",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10496/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10496/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10496/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10496",
        "id": 1892617612,
        "node_id": "PR_kwDOIPDwls5aIp2w",
        "number": 10496,
        "title": "Add Baidu Qianfan endpoint for LLM",
        "user": {
            "login": "stonekim",
            "id": 1155052,
            "node_id": "MDQ6VXNlcjExNTUwNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1155052?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stonekim",
            "html_url": "https://github.com/stonekim",
            "followers_url": "https://api.github.com/users/stonekim/followers",
            "following_url": "https://api.github.com/users/stonekim/following{/other_user}",
            "gists_url": "https://api.github.com/users/stonekim/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stonekim/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stonekim/subscriptions",
            "organizations_url": "https://api.github.com/users/stonekim/orgs",
            "repos_url": "https://api.github.com/users/stonekim/repos",
            "events_url": "https://api.github.com/users/stonekim/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stonekim/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-12T14:13:11Z",
        "updated_at": "2023-09-13T23:33:17Z",
        "closed_at": "2023-09-13T23:23:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10496",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10496",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10496.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10496.patch",
            "merged_at": "2023-09-13T23:23:50Z"
        },
        "body": "- Description\uff1a\r\n    * Baidu AI Cloud's [Qianfan Platform](https://cloud.baidu.com/doc/WENXINWORKSHOP/index.html) is an all-in-one platform for large model development and service deployment, catering to enterprise developers in China. Qianfan Platform offers a wide range of resources, including the Wenxin Yiyan model (ERNIE-Bot) and various third-party open-source models.\r\n- Issue: none\r\n- Dependencies: \r\n    * qianfan\r\n- Tag maintainer: @baskaryan\r\n- Twitter handle:",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10496/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10496/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10495",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10495/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10495/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10495/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10495",
        "id": 1892605606,
        "node_id": "PR_kwDOIPDwls5aInNx",
        "number": 10495,
        "title": "Update pdf.py comment for PyPDFLoader",
        "user": {
            "login": "KylePancamo",
            "id": 50267605,
            "node_id": "MDQ6VXNlcjUwMjY3NjA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/50267605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KylePancamo",
            "html_url": "https://github.com/KylePancamo",
            "followers_url": "https://api.github.com/users/KylePancamo/followers",
            "following_url": "https://api.github.com/users/KylePancamo/following{/other_user}",
            "gists_url": "https://api.github.com/users/KylePancamo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KylePancamo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KylePancamo/subscriptions",
            "organizations_url": "https://api.github.com/users/KylePancamo/orgs",
            "repos_url": "https://api.github.com/users/KylePancamo/repos",
            "events_url": "https://api.github.com/users/KylePancamo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KylePancamo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-12T14:07:04Z",
        "updated_at": "2023-10-05T18:22:40Z",
        "closed_at": "2023-10-05T18:22:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10495",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10495",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10495.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10495.patch",
            "merged_at": "2023-10-05T18:22:40Z"
        },
        "body": "PyPDF does not chunk at the character level to my understanding.\r\n\r\nDescription: PyPDF does not chunk at the character level, but instead breaks up content by page. Fixup comment\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10495/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10495/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10494",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10494/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10494/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10494/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10494",
        "id": 1892585572,
        "node_id": "I_kwDOIPDwls5wzpBk",
        "number": 10494,
        "title": "Observation: Human is not a valid tool, try one of [human, Search, Calculator]",
        "user": {
            "login": "jsemrau",
            "id": 416379,
            "node_id": "MDQ6VXNlcjQxNjM3OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/416379?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsemrau",
            "html_url": "https://github.com/jsemrau",
            "followers_url": "https://api.github.com/users/jsemrau/followers",
            "following_url": "https://api.github.com/users/jsemrau/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsemrau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsemrau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsemrau/subscriptions",
            "organizations_url": "https://api.github.com/users/jsemrau/orgs",
            "repos_url": "https://api.github.com/users/jsemrau/repos",
            "events_url": "https://api.github.com/users/jsemrau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsemrau/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-12T13:57:04Z",
        "updated_at": "2023-12-12T16:01:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version = 0.0.286\r\nPython=3.8.8\r\nMacOs\r\n\r\nI am working on a **ReAct agent with Memory and Tools** that should stop and ask a human for input.\r\n\r\nI worked off this article in the documentation: https://python.langchain.com/docs/modules/memory/agent_with_memory\r\n\r\nOn Jupyter Notebook it works well when the agent stops and picks up the \"Observation\" from the human.\r\nNow I am trying to bring this over to Streamlit and am struggling with having the agent wait for the observation.\r\n\r\nAs one can see in the video, the output is brought over into the right streamlit container, yet doesn't stop to get the human feedback.\r\n\r\nI am using a custom output parser and the recommended StreamlitCallbackHandler.\r\n\r\n\r\n\r\n\r\nhttps://github.com/langchain-ai/langchain/assets/416379/ed57834a-2a72-4938-b901-519f0748dd95\r\n\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nMy output parser looks like this:\r\n\r\n ```\r\nclass CustomOutputParser(AgentOutputParser):\r\n\r\n    def parse(self, llm_output: str) -> Union[AgentAction, AgentFinish]:\r\n        # Check if agent should finish\r\n        \r\n        print(llm_output)\r\n\r\n        if \"Final Answer:\" in llm_output:\r\n            print(\"Agent should finish\")\r\n            return AgentFinish(\r\n                # Return values is generally always a dictionary with a single `output` key\r\n                # It is not recommended to try anything else at the moment :)\r\n                return_values={\"output\": llm_output.split(\r\n                    \"Final Answer:\")[-1].strip()},\r\n                log=llm_output,\r\n            )\r\n        # Parse out the action and action input\r\n        regex = r\"Action\\s*\\d*\\s*:(.*?)\\nAction\\s*\\d*\\s*Input\\s*\\d*\\s*:[\\s]*(.*)\"\r\n        match = re.search(regex, llm_output, re.DOTALL)\r\n        if not match:\r\n\r\n            print(\"Parsing Action Input\")\r\n            return AgentFinish(\r\n                # Return values is generally always a dictionary with a single `output` key\r\n                # It is not recommended to try anything else at the moment :)\r\n                return_values={\"output\": llm_output},\r\n                log=llm_output,\r\n            )\r\n            # raise ValueError(f\"Could not parse LLM output: `{llm_output}`\")\r\n        action = match.group(1).strip()\r\n        action_input = match.group(2)\r\n\r\n        #This can't be agent finish because otherwise the agent stops working.\r\n        return AgentAction(tool=action, tool_input=action_input.strip(\" \").strip('\"'), log=llm_output)\r\n \r\n```\n\n### Expected behavior\n\nThe agent should wait for streamlit to create an input_chat and use this as the feedback from the \"human\" tool",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10494/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10494/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10493",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10493/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10493/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10493/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10493",
        "id": 1892491559,
        "node_id": "I_kwDOIPDwls5wzSEn",
        "number": 10493,
        "title": "FlareChain's response_chain not picking up specified LLM model",
        "user": {
            "login": "devinbost",
            "id": 7418031,
            "node_id": "MDQ6VXNlcjc0MTgwMzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7418031?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/devinbost",
            "html_url": "https://github.com/devinbost",
            "followers_url": "https://api.github.com/users/devinbost/followers",
            "following_url": "https://api.github.com/users/devinbost/following{/other_user}",
            "gists_url": "https://api.github.com/users/devinbost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/devinbost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/devinbost/subscriptions",
            "organizations_url": "https://api.github.com/users/devinbost/orgs",
            "repos_url": "https://api.github.com/users/devinbost/repos",
            "events_url": "https://api.github.com/users/devinbost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/devinbost/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-09-12T13:09:18Z",
        "updated_at": "2023-09-15T20:31:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nUsing LangChain 0.0.276\r\nPython 3.11.4 \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nConstruct a FlareChain instance like this and run it:\r\n\r\n```\r\n    myllm = ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo-16k\")\r\n\r\n    flare = FlareChain.from_llm(\r\n        llm=myllm,\r\n        retriever=vectorstore.as_retriever(),\r\n        max_generation_len=164,\r\n        min_prob=0.3,\r\n    )\r\n    result = flare.run(querytext)\r\n```\r\n\r\nWhen I inspect during debugging, the specified LLM model was set on `flare.question_generator_chain.llm.model_name` but NOT `flare.response_chain.llm.model_name`,\r\nwhich is still the default value. \r\n\n\n### Expected behavior\n\nI'm expecting `flare.response_chain.llm.model_name` to return `gpt-3.5-turbo-16k`, not `text-davinci-003`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10493/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10493/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10492",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10492/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10492/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10492/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10492",
        "id": 1892448998,
        "node_id": "PR_kwDOIPDwls5aIFBy",
        "number": 10492,
        "title": "Update milvus.py: avoid key error of insert_dict",
        "user": {
            "login": "liunux4odoo",
            "id": 41217877,
            "node_id": "MDQ6VXNlcjQxMjE3ODc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/41217877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liunux4odoo",
            "html_url": "https://github.com/liunux4odoo",
            "followers_url": "https://api.github.com/users/liunux4odoo/followers",
            "following_url": "https://api.github.com/users/liunux4odoo/following{/other_user}",
            "gists_url": "https://api.github.com/users/liunux4odoo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liunux4odoo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liunux4odoo/subscriptions",
            "organizations_url": "https://api.github.com/users/liunux4odoo/orgs",
            "repos_url": "https://api.github.com/users/liunux4odoo/repos",
            "events_url": "https://api.github.com/users/liunux4odoo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liunux4odoo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-12T12:47:22Z",
        "updated_at": "2023-10-31T13:47:49Z",
        "closed_at": "2023-10-31T13:47:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10492",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10492",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10492.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10492.patch",
            "merged_at": null
        },
        "body": "the Milvus.fields is union of all metadata.keys from different file types. but insert_dict is limited to specific file, `insert_dict[x]` will raise key error after Milvus.fields growed.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10492/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10492/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10491",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10491/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10491/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10491/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10491",
        "id": 1892399133,
        "node_id": "PR_kwDOIPDwls5aH6H1",
        "number": 10491,
        "title": "add vearch repository link",
        "user": {
            "login": "wxingda",
            "id": 12606514,
            "node_id": "MDQ6VXNlcjEyNjA2NTE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/12606514?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wxingda",
            "html_url": "https://github.com/wxingda",
            "followers_url": "https://api.github.com/users/wxingda/followers",
            "following_url": "https://api.github.com/users/wxingda/following{/other_user}",
            "gists_url": "https://api.github.com/users/wxingda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wxingda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wxingda/subscriptions",
            "organizations_url": "https://api.github.com/users/wxingda/orgs",
            "repos_url": "https://api.github.com/users/wxingda/repos",
            "events_url": "https://api.github.com/users/wxingda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wxingda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-12T12:20:03Z",
        "updated_at": "2023-09-13T19:32:46Z",
        "closed_at": "2023-09-13T19:06:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10491",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10491",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10491.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10491.patch",
            "merged_at": "2023-09-13T19:06:47Z"
        },
        "body": "  - Description: add vearch repository link\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10491/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10491/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10490",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10490/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10490/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10490/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10490",
        "id": 1892379026,
        "node_id": "PR_kwDOIPDwls5aH1to",
        "number": 10490,
        "title": "Improve code example indent",
        "user": {
            "login": "superyyrrzz",
            "id": 3831744,
            "node_id": "MDQ6VXNlcjM4MzE3NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3831744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/superyyrrzz",
            "html_url": "https://github.com/superyyrrzz",
            "followers_url": "https://api.github.com/users/superyyrrzz/followers",
            "following_url": "https://api.github.com/users/superyyrrzz/following{/other_user}",
            "gists_url": "https://api.github.com/users/superyyrrzz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/superyyrrzz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/superyyrrzz/subscriptions",
            "organizations_url": "https://api.github.com/users/superyyrrzz/orgs",
            "repos_url": "https://api.github.com/users/superyyrrzz/repos",
            "events_url": "https://api.github.com/users/superyyrrzz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/superyyrrzz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-12T12:08:13Z",
        "updated_at": "2023-09-13T21:59:11Z",
        "closed_at": "2023-09-13T21:59:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10490",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10490",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10490.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10490.patch",
            "merged_at": "2023-09-13T21:59:11Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10490/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10490/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10489",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10489/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10489/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10489/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10489",
        "id": 1892270542,
        "node_id": "I_kwDOIPDwls5wycHO",
        "number": 10489,
        "title": "Issue: pinecone.core.client.exceptions.ApiTypeError: Invalid type for variable 'namespace'. Required value type is str and passed type was NoneType at ['namespace']",
        "user": {
            "login": "axen2u",
            "id": 68794951,
            "node_id": "MDQ6VXNlcjY4Nzk0OTUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/68794951?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axen2u",
            "html_url": "https://github.com/axen2u",
            "followers_url": "https://api.github.com/users/axen2u/followers",
            "following_url": "https://api.github.com/users/axen2u/following{/other_user}",
            "gists_url": "https://api.github.com/users/axen2u/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axen2u/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axen2u/subscriptions",
            "organizations_url": "https://api.github.com/users/axen2u/orgs",
            "repos_url": "https://api.github.com/users/axen2u/repos",
            "events_url": "https://api.github.com/users/axen2u/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axen2u/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5932474361,
                "node_id": "LA_kwDOIPDwls8AAAABYZpf-Q",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20pinecone",
                "name": "integration: pinecone",
                "color": "BC53BE",
                "default": false,
                "description": "Related to Pinecone vector store integration"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-12T11:02:56Z",
        "updated_at": "2023-09-13T06:20:43Z",
        "closed_at": "2023-09-13T06:20:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am getting this error when using langchain vectorstores similarity  search on local machine. `pinecone.core.client.exceptions.ApiTypeError: Invalid type for variable 'namespace'. Required value type is str and passed type was NoneType at ['namespace']`. But it is working fine on Google Colab. \n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10489/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10489/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10488",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10488/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10488/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10488/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10488",
        "id": 1892200287,
        "node_id": "PR_kwDOIPDwls5aHOMi",
        "number": 10488,
        "title": "Fix OpenAIFunctionsAgent function call message content retrieving ",
        "user": {
            "login": "skozlovf",
            "id": 730013,
            "node_id": "MDQ6VXNlcjczMDAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/730013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skozlovf",
            "html_url": "https://github.com/skozlovf",
            "followers_url": "https://api.github.com/users/skozlovf/followers",
            "following_url": "https://api.github.com/users/skozlovf/following{/other_user}",
            "gists_url": "https://api.github.com/users/skozlovf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skozlovf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skozlovf/subscriptions",
            "organizations_url": "https://api.github.com/users/skozlovf/orgs",
            "repos_url": "https://api.github.com/users/skozlovf/repos",
            "events_url": "https://api.github.com/users/skozlovf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skozlovf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-12T10:25:37Z",
        "updated_at": "2023-09-13T23:19:25Z",
        "closed_at": "2023-09-13T23:19:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10488",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10488",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10488.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10488.patch",
            "merged_at": "2023-09-13T23:19:25Z"
        },
        "body": "`langchain.agents.openai_functions[_multi]_agent._parse_ai_message()` incorrectly extracts AI message content, thus LLM response (\"thoughts\") is lost and can't be logged or processed by callbacks.\r\n\r\nThis PR fixes function call message content retrieving.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10488/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10488/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10487",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10487/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10487/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10487/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10487",
        "id": 1892138220,
        "node_id": "I_kwDOIPDwls5wx7zs",
        "number": 10487,
        "title": "Redis vector  init error",
        "user": {
            "login": "scorpiord",
            "id": 115451149,
            "node_id": "U_kgDOBuGlDQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/115451149?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scorpiord",
            "html_url": "https://github.com/scorpiord",
            "followers_url": "https://api.github.com/users/scorpiord/followers",
            "following_url": "https://api.github.com/users/scorpiord/following{/other_user}",
            "gists_url": "https://api.github.com/users/scorpiord/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scorpiord/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scorpiord/subscriptions",
            "organizations_url": "https://api.github.com/users/scorpiord/orgs",
            "repos_url": "https://api.github.com/users/scorpiord/repos",
            "events_url": "https://api.github.com/users/scorpiord/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scorpiord/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-09-12T09:59:40Z",
        "updated_at": "2023-09-19T09:10:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain:0.0.286\r\npython:3.10.10\r\nredis:5.0.0b4\n\n### Who can help?\n\n@hwc\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nrds = Redis.from_texts(\r\n    texts,\r\n    embeddings,\r\n    metadatas=metadata,\r\n    redis_url=\"XXXXX\",\r\n    index_name=\"XXXX\"\r\n)\r\nThe following exception occurred\uff1a\r\nAttributeError: 'RedisCluster' object has no attribute 'module_list'\r\n\r\nThe version of my redis package is 5.0.0b4.\r\n\r\nAn error occurred in the following code\uff1a\r\n\r\nlangchain\\Lib\\site-packages\\langchain\\utilities\\redis.py\r\n\r\ndef check_redis_module_exist(client: RedisType, required_modules: List[dict]) -> None:\r\n    \"\"\"Check if the correct Redis modules are installed.\"\"\"\r\n-> installed_modules = client.module_list()\n\n### Expected behavior\n\nredis init success",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10487/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10487/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10486",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10486/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10486/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10486/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10486",
        "id": 1892030554,
        "node_id": "I_kwDOIPDwls5wxhha",
        "number": 10486,
        "title": "Add device to GPT4All",
        "user": {
            "login": "mauricioscotton",
            "id": 34411735,
            "node_id": "MDQ6VXNlcjM0NDExNzM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/34411735?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mauricioscotton",
            "html_url": "https://github.com/mauricioscotton",
            "followers_url": "https://api.github.com/users/mauricioscotton/followers",
            "following_url": "https://api.github.com/users/mauricioscotton/following{/other_user}",
            "gists_url": "https://api.github.com/users/mauricioscotton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mauricioscotton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mauricioscotton/subscriptions",
            "organizations_url": "https://api.github.com/users/mauricioscotton/orgs",
            "repos_url": "https://api.github.com/users/mauricioscotton/repos",
            "events_url": "https://api.github.com/users/mauricioscotton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mauricioscotton/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-09-12T09:02:19Z",
        "updated_at": "2023-10-04T00:37:32Z",
        "closed_at": "2023-10-04T00:37:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nHey guys!\r\nThanks for the great tool you've developed.\r\n\r\nLLama now supports device and so is GPT4All:\r\nhttps://docs.gpt4all.io/gpt4all_python.html#gpt4all.gpt4all.GPT4All.__init__\r\n\r\nCan you guys please add the device property to the file: \"langchain/llms/gpt4all.py\"\r\n\r\nLN 96:\r\n`\r\n    device: Optional[str] = Field(\"cpu\", alias=\"device\")\r\n    \"\"\"Device name: cpu, gpu, nvidia, intel, amd or DeviceName.\"\"\"\r\n`\r\n\r\nModel Init:\r\n`\r\n        values[\"client\"] = GPT4AllModel(\r\n            model_name,\r\n            model_path=model_path or None,\r\n            model_type=values[\"backend\"],\r\n            allow_download=values[\"allow_download\"],\r\n            device=values[\"device\"]\r\n        )\r\n`\r\n\r\n\r\n### Motivation\r\n\r\nNecessity to use the device on GPU powered machines.\r\n\r\n### Your contribution\r\n\r\nNone.. :(",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10486/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10486/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10485",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10485/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10485/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10485/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10485",
        "id": 1892029382,
        "node_id": "PR_kwDOIPDwls5aGocc",
        "number": 10485,
        "title": "Fix Import BedrockChat",
        "user": {
            "login": "alisoliman",
            "id": 10839896,
            "node_id": "MDQ6VXNlcjEwODM5ODk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/10839896?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alisoliman",
            "html_url": "https://github.com/alisoliman",
            "followers_url": "https://api.github.com/users/alisoliman/followers",
            "following_url": "https://api.github.com/users/alisoliman/following{/other_user}",
            "gists_url": "https://api.github.com/users/alisoliman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alisoliman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alisoliman/subscriptions",
            "organizations_url": "https://api.github.com/users/alisoliman/orgs",
            "repos_url": "https://api.github.com/users/alisoliman/repos",
            "events_url": "https://api.github.com/users/alisoliman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alisoliman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-12T09:01:41Z",
        "updated_at": "2023-09-13T21:58:48Z",
        "closed_at": "2023-09-13T21:58:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10485",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10485",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10485.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10485.patch",
            "merged_at": "2023-09-13T21:58:48Z"
        },
        "body": "  - Description: Couldn't import BedrockChat from the chat_models\r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: N/A\r\n  - Issues: #10468",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10485/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10485/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10484",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10484/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10484/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10484/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10484",
        "id": 1891987071,
        "node_id": "PR_kwDOIPDwls5aGe_K",
        "number": 10484,
        "title": "Mark Vertex AI classes as serialisable",
        "user": {
            "login": "dqbd",
            "id": 1443449,
            "node_id": "MDQ6VXNlcjE0NDM0NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1443449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dqbd",
            "html_url": "https://github.com/dqbd",
            "followers_url": "https://api.github.com/users/dqbd/followers",
            "following_url": "https://api.github.com/users/dqbd/following{/other_user}",
            "gists_url": "https://api.github.com/users/dqbd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dqbd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dqbd/subscriptions",
            "organizations_url": "https://api.github.com/users/dqbd/orgs",
            "repos_url": "https://api.github.com/users/dqbd/repos",
            "events_url": "https://api.github.com/users/dqbd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dqbd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-12T08:44:43Z",
        "updated_at": "2023-10-02T23:48:22Z",
        "closed_at": "2023-10-02T23:48:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10484",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10484",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10484.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10484.patch",
            "merged_at": "2023-10-02T23:48:21Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\n\nReplace this entire comment with:\n  - Description: a description of the change, \n  - Issue: the issue # it fixes (if applicable),\n  - Dependencies: any dependencies required for this change,\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\n\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\n\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\n\nIf you're adding a new integration, please include:\n  1. a test for the integration, preferably unit tests that do not rely on network access,\n  2. an example notebook showing its use. These live is docs/extras directory.\n\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\n -->\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10484/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10484/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10483",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10483/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10483/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10483/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10483",
        "id": 1891974960,
        "node_id": "I_kwDOIPDwls5wxT8w",
        "number": 10483,
        "title": "Issue: Use huggingface_hub InferenceClient instead of InferenceAPI",
        "user": {
            "login": "teckick",
            "id": 10803535,
            "node_id": "MDQ6VXNlcjEwODAzNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/10803535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/teckick",
            "html_url": "https://github.com/teckick",
            "followers_url": "https://api.github.com/users/teckick/followers",
            "following_url": "https://api.github.com/users/teckick/following{/other_user}",
            "gists_url": "https://api.github.com/users/teckick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/teckick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/teckick/subscriptions",
            "organizations_url": "https://api.github.com/users/teckick/orgs",
            "repos_url": "https://api.github.com/users/teckick/repos",
            "events_url": "https://api.github.com/users/teckick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/teckick/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-12T08:37:39Z",
        "updated_at": "2023-11-29T20:48:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nLangchain is still using the deprecated huggingface_hub `InferenceApi` in the latest version. the `InferenceApi` will be removed from version '0.19.0'.\r\n\r\n```\r\n/usr/local/lib/python3.10/dist-packages/huggingface_hub/utils/_deprecation.py:127: FutureWarning: '__init__' (from 'huggingface_hub.inference_api') is deprecated and will be removed from version '0.19.0'. `InferenceApi` client is deprecated in favor of the more feature-complete `InferenceClient`. Check out this guide to learn how to convert your script to use it: https://huggingface.co/docs/huggingface_hub/guides/inference#legacy-inferenceapi-client.\r\n  warnings.warn(warning_message, FutureWarning)\r\n```\n\n### Suggestion:\n\nIt it recommended to use the new `InferenceClient` in huggingface_hub.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10483/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10483/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10481",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10481/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10481/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10481/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10481",
        "id": 1891889704,
        "node_id": "I_kwDOIPDwls5ww_Io",
        "number": 10481,
        "title": "Issue: Which version of langchain supports the elasticsearch 7.6",
        "user": {
            "login": "eswarthammana",
            "id": 23114153,
            "node_id": "MDQ6VXNlcjIzMTE0MTUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/23114153?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eswarthammana",
            "html_url": "https://github.com/eswarthammana",
            "followers_url": "https://api.github.com/users/eswarthammana/followers",
            "following_url": "https://api.github.com/users/eswarthammana/following{/other_user}",
            "gists_url": "https://api.github.com/users/eswarthammana/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eswarthammana/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eswarthammana/subscriptions",
            "organizations_url": "https://api.github.com/users/eswarthammana/orgs",
            "repos_url": "https://api.github.com/users/eswarthammana/repos",
            "events_url": "https://api.github.com/users/eswarthammana/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eswarthammana/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 19,
        "created_at": "2023-09-12T07:49:46Z",
        "updated_at": "2023-09-15T06:41:16Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi Team,\r\n\r\nI have a fixed elasticsearch version 7.6 which i cannot upgrade. could you please share me some details about which version of langchain supports mentioned version.\r\n\r\nProblem with the latest langchain i have faced, similarity search or normal search says that KNN is not available. \"Unexpected keyword argument called 'knn'\".\r\n\r\nif possible please share a sample code to connect with the existing elastic search and create an index to update the Elasticsearch data to Lang chain supported data format or document format.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10481/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10481/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10480",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10480/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10480/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10480/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10480",
        "id": 1891887474,
        "node_id": "PR_kwDOIPDwls5aGJhA",
        "number": 10480,
        "title": "Fix tool arguments formatting in StructuredChatAgent",
        "user": {
            "login": "skozlovf",
            "id": 730013,
            "node_id": "MDQ6VXNlcjczMDAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/730013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skozlovf",
            "html_url": "https://github.com/skozlovf",
            "followers_url": "https://api.github.com/users/skozlovf/followers",
            "following_url": "https://api.github.com/users/skozlovf/following{/other_user}",
            "gists_url": "https://api.github.com/users/skozlovf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skozlovf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skozlovf/subscriptions",
            "organizations_url": "https://api.github.com/users/skozlovf/orgs",
            "repos_url": "https://api.github.com/users/skozlovf/repos",
            "events_url": "https://api.github.com/users/skozlovf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skozlovf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-09-12T07:48:40Z",
        "updated_at": "2023-11-20T02:45:43Z",
        "closed_at": "2023-11-20T02:45:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10480",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10480",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10480.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10480.patch",
            "merged_at": "2023-11-20T02:45:43Z"
        },
        "body": "In the `FORMAT_INSTRUCTIONS` template, 4 curly braces (escaping) are used to get single curly brace after formatting:\r\n\r\n```\r\n\"{{{ ... }}}}\" -> format_instructions.format() ->  \"{{ ... }}\" -> template.format() -> \"{ ... }\".\r\n```\r\n\r\nTool's `args_schema` string contains single braces `{ ... }`, and is also transformed to `{{{{ ... }}}}` form. But this is not really correct since there is only one `format()` call:\r\n\r\n```\r\n\"{{{{ ... }}}}\" -> template.format() -> \"{{ ... }}\".\r\n```\r\n\r\nAs a result we get double curly braces in the prompt:\r\n````\r\nRespond to the human as helpfully and accurately as possible. You have access to the following tools:\r\n\r\nfoo: Test tool FOO, args: {{'tool_input': {{'type': 'string'}}}}    # <--- !!!\r\n...\r\nProvide only ONE action per $JSON_BLOB, as shown:\r\n\r\n```\r\n{\r\n  \"action\": $TOOL_NAME,\r\n  \"action_input\": $INPUT\r\n}\r\n```\r\n````\r\n\r\nThis PR fixes curly braces escaping in the `args_schema` to have single braces in the final prompt:\r\n````\r\nRespond to the human as helpfully and accurately as possible. You have access to the following tools:\r\n\r\nfoo: Test tool FOO, args: {'tool_input': {'type': 'string'}}    # <--- !!!\r\n...\r\nProvide only ONE action per $JSON_BLOB, as shown:\r\n\r\n```\r\n{\r\n  \"action\": $TOOL_NAME,\r\n  \"action_input\": $INPUT\r\n}\r\n```\r\n````",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10480/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10480/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10479",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10479/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10479/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10479/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10479",
        "id": 1891850817,
        "node_id": "I_kwDOIPDwls5ww1pB",
        "number": 10479,
        "title": "max_execution_time does not work for some queries in create_pandas_dataframe_agent",
        "user": {
            "login": "aiakubovich",
            "id": 136030897,
            "node_id": "U_kgDOCBuqsQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/136030897?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aiakubovich",
            "html_url": "https://github.com/aiakubovich",
            "followers_url": "https://api.github.com/users/aiakubovich/followers",
            "following_url": "https://api.github.com/users/aiakubovich/following{/other_user}",
            "gists_url": "https://api.github.com/users/aiakubovich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aiakubovich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aiakubovich/subscriptions",
            "organizations_url": "https://api.github.com/users/aiakubovich/orgs",
            "repos_url": "https://api.github.com/users/aiakubovich/repos",
            "events_url": "https://api.github.com/users/aiakubovich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aiakubovich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-12T07:24:52Z",
        "updated_at": "2023-12-12T16:01:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\npython == 3.11\r\nlangchain == 0.0.286\r\nwindows 10\r\n\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```\r\nfrom langchain.chat_models import AzureChatOpenAI\r\nfrom langchain.agents.agent_types import AgentType\r\nfrom langchain.agents import create_pandas_dataframe_agent\r\n\r\nllm = AzureChatOpenAI(\r\n                deployment_name = \"gpt-4\", \r\n                model_name = \"gpt-4\",\r\n                openai_api_key = '...',\r\n                openai_api_version = \"2023-08-01-preview\",\r\n                openai_api_base = '...',\r\n                temperature = 0\r\n                )\r\n\r\ndf = pd.DataFrame({  \r\n    'Feature1': np.random.rand(1000000),  \r\n    'Feature2': np.random.rand(1000000),  \r\n    'Class': np.random.choice(['Class1', 'Class2', 'Class3'], 1000000)  \r\n})  \r\n\r\nagent = create_pandas_dataframe_agent(\r\n                                                        llm, \r\n                                                        df, \r\n                                                        verbose=False, \r\n                                                        agent_type=AgentType.OPENAI_FUNCTIONS,\r\n                                                        reduce_k_below_max_tokens=True, \r\n                                                        max_execution_time = 1,\r\n                                                     )\r\n\r\nagent.run('print 100 first rows in dataframe')\r\n```\r\n\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nThe `max_execution_time` is set to 1, indicating that the query should run for one second before stopping. However, it currently runs for approximately 10 seconds before stopping. This is a simple example, but in the case of the actual dataframe that I have (which contains a lot of textual data), the agent runs for around one minute before I receive the results. At the same time, if the query doesn't request a large amount of data from the model to output, the agent would stop in one second. For instance, if my query is agent.run('give some examples of delays mention?'), the results would not be returned because the max_execution_time is 1, and it needs roughly three seconds to output the results. Therefore, this troubleshooting indicates that there's an issue with the `max_execution_time` when the requested output is too lengthy.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10479/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10479/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10478",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10478/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10478/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10478/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10478",
        "id": 1891811527,
        "node_id": "PR_kwDOIPDwls5aF5Ij",
        "number": 10478,
        "title": "fix typo in aleph_alpha.ipynb",
        "user": {
            "login": "ItzPAX",
            "id": 54080059,
            "node_id": "MDQ6VXNlcjU0MDgwMDU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/54080059?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ItzPAX",
            "html_url": "https://github.com/ItzPAX",
            "followers_url": "https://api.github.com/users/ItzPAX/followers",
            "following_url": "https://api.github.com/users/ItzPAX/following{/other_user}",
            "gists_url": "https://api.github.com/users/ItzPAX/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ItzPAX/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ItzPAX/subscriptions",
            "organizations_url": "https://api.github.com/users/ItzPAX/orgs",
            "repos_url": "https://api.github.com/users/ItzPAX/repos",
            "events_url": "https://api.github.com/users/ItzPAX/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ItzPAX/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-12T06:58:23Z",
        "updated_at": "2023-09-14T00:09:18Z",
        "closed_at": "2023-09-14T00:09:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10478",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10478",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10478.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10478.patch",
            "merged_at": "2023-09-14T00:09:11Z"
        },
        "body": "fixes the aleph_alpha.ipynb typo from contnt to content\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: fix a typo in the docs, \r\n  - Issue: make docs more comprehensible,\r\n  - Dependencies: -,\r\n  - Tag maintainer: -,\r\n  - Twitter handle: -\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10478/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10478/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10475",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10475/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10475/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10475/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10475",
        "id": 1891676241,
        "node_id": "I_kwDOIPDwls5wwLBR",
        "number": 10475,
        "title": "AsyncChromiumLoader not working with FastAPI",
        "user": {
            "login": "hasansustcse13",
            "id": 94289705,
            "node_id": "U_kgDOBZ6_KQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/94289705?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hasansustcse13",
            "html_url": "https://github.com/hasansustcse13",
            "followers_url": "https://api.github.com/users/hasansustcse13/followers",
            "following_url": "https://api.github.com/users/hasansustcse13/following{/other_user}",
            "gists_url": "https://api.github.com/users/hasansustcse13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hasansustcse13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hasansustcse13/subscriptions",
            "organizations_url": "https://api.github.com/users/hasansustcse13/orgs",
            "repos_url": "https://api.github.com/users/hasansustcse13/repos",
            "events_url": "https://api.github.com/users/hasansustcse13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hasansustcse13/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-09-12T05:03:16Z",
        "updated_at": "2023-10-28T18:41:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n```\r\n@router.post('/web-page')\r\ndef web_page_embedding(model: WebPageEmbedding):\r\n    try:\r\n        data = download_page(model.page)\r\n        return {'success': True}\r\n    except Exception as e:\r\n        return Response(str(e))\r\n\r\n def download_page(url: str):\r\n    loader = AsyncChromiumLoader(urls=[url])\r\n    docs = loader.load()\r\n    return docs \r\n```\r\nI am trying to download the page content using the above FastAPI code. But I am facing this `NotImplementedError` error\r\n```\r\nTask exception was never retrieved\r\nfuture: <Task finished name='Task-6' coro=<Connection.run() done, defined at E:\\Projects\\abcd\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py:264> exception=NotImplementedError()>\r\nTraceback (most recent call last):\r\n  File \"E:\\Projects\\abcd\\venv\\Lib\\site-packages\\playwright\\_impl\\_connection.py\", line 271, in run\r\n    await self._transport.connect()\r\n  File \"E:\\Projects\\abcd\\venv\\Lib\\site-packages\\playwright\\_impl\\_transport.py\", line 135, in connect\r\n    raise exc\r\n  File \"E:\\Projects\\abcd\\venv\\Lib\\site-packages\\playwright\\_impl\\_transport.py\", line 123, in connect\r\n    self._proc = await asyncio.create_subprocess_exec(\r\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\hasan\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\subprocess.py\", line 218, in create_subprocess_exec\r\n    transport, protocol = await loop.subprocess_exec(\r\n                          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\hasan\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\base_events.py\", line 1694, in subprocess_exec\r\n    transport = await self._make_subprocess_transport(\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\hasan\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\asyncio\\base_events.py\", line 502, in _make_subprocess_transport\r\n    raise NotImplementedError\r\nNotImplementedError\r\n```\r\n\r\nI have also tried with with async await which directly call the async method of the loader and this also not working\r\n```\r\n@router.post('/web-page-1')\r\nasync def web_page_embedding_async(model: WebPageEmbedding):\r\n    try:\r\n        data = await download_page_async(model.page)\r\n        return {'success': True}\r\n    except Exception as e:\r\n        return Response(str(e))\r\n        \r\n async def download_page_async(url: str):\r\n    loader = AsyncChromiumLoader(urls=[url])\r\n    # docs = loader.load()\r\n    docs = await loader.ascrape_playwright(url)\r\n    return docs\r\n```\r\n\r\nBut If I try to download the page in a python script it working as expected (both async and non-async)\r\n\r\n```\r\nif __name__ == '__main__':\r\n    try:\r\n        url = 'https://python.langchain.com/docs/integrations/document_loaders/async_chromium'\r\n        # d = download_page(url) # working\r\n        d = asyncio.run(download_page_async(url))  # also working\r\n\r\n        print(len(d))\r\n    except Exception as e:\r\n        print(e)\r\n```\r\nPackages:\r\n\r\n- langchain==0.0.284\r\n- playwright==1.37.0\r\n- fastapi==0.103.1\r\n- uvicorn==0.23.2\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [X] Async\r\n\r\n### Reproduction\r\n\r\nPlease run the code\r\n\r\n### Expected behavior\r\n\r\nLoader should work in FastAPI environment",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10475/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10475/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10474",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10474/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10474/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10474/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10474",
        "id": 1891662372,
        "node_id": "I_kwDOIPDwls5wwHok",
        "number": 10474,
        "title": "Error when using Self Query Retriever with Weaviate ",
        "user": {
            "login": "prandell",
            "id": 52766847,
            "node_id": "MDQ6VXNlcjUyNzY2ODQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/52766847?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prandell",
            "html_url": "https://github.com/prandell",
            "followers_url": "https://api.github.com/users/prandell/followers",
            "following_url": "https://api.github.com/users/prandell/following{/other_user}",
            "gists_url": "https://api.github.com/users/prandell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prandell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prandell/subscriptions",
            "organizations_url": "https://api.github.com/users/prandell/orgs",
            "repos_url": "https://api.github.com/users/prandell/repos",
            "events_url": "https://api.github.com/users/prandell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prandell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-12T04:46:10Z",
        "updated_at": "2023-12-12T16:01:48Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version: 0.0.286\r\nPython version: 3.11.2\r\nPlatform: MacOS Ventura 13.5.1 M1 chip\r\nWeaviate 1.21.2 as vectorstore\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nWhen following LangChain's documentation for [ Weaviate Self-Query Retriever](https://python.langchain.com/docs/modules/data_connection/retrievers/self_query/weaviate_self_query),\r\nI get the following Warning:\r\n\r\n```\r\n/opt/homebrew/lib/python3.11/site-packages/langchain/chains/llm.py:278: UserWarning: The predict_and_parse method is deprecated, instead pass an output parser directly to LLMChain.\r\n  warnings.warn(\r\n```\r\nand the following errors\r\n```\r\nValueError: Received disallowed comparator gte. Allowed comparators are [<Comparator.EQ: 'eq'>]\r\n\r\n...\r\n... stack trace\r\n...\r\n\r\nFile \"/opt/homebrew/lib/python3.11/site-packages/langchain/chains/query_constructor/base.py\", line 52, in parse\r\n    raise OutputParserException(\r\nlangchain.schema.output_parser.OutputParserException: Parsing text\r\n``json\r\n{\r\n    \"query\": \"natural disasters\",\r\n    \"filter\": \"and(gte(\\\"published_at\\\", \\\"2022-10-01\\\"), lte(\\\"published_at\\\", \\\"2022-10-07\\\"))\"\r\n}\r\n``\r\n raised following error:\r\nReceived disallowed comparator gte. Allowed comparators are [<Comparator.EQ: 'eq'>]\r\n```\r\n\r\nThe following code led to the errors\r\n\r\n```\r\nimport os, openai, weaviate, logging\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Weaviate\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.retrievers.self_query.base import SelfQueryRetriever\r\nfrom langchain.chains.query_constructor.base import AttributeInfo\r\nfrom langchain.retrievers.self_query.weaviate import WeaviateTranslator\r\n\r\nopenai.api_key  = os.environ['OPENAI_API_KEY']\r\n\r\nembeddings = OpenAIEmbeddings()\r\n\r\nclient = weaviate.Client(\r\n    url = WEAVIATE_URL,\r\n    additional_headers = {\r\n        \"X-OpenAI-Api-Key\": openai.api_key\r\n    }\r\n)\r\n\r\nweaviate = Weaviate(\r\n    client = client,\r\n    index_name = INDEX_NAME,\r\n    text_key = \"article_body\"\r\n)\r\n\r\nmetadata_field_info = [ # Shortened for brevity\r\n   AttributeInfo(\r\n        name=\"published_at\",\r\n        description=\"Date article was published\",\r\n        type=\"date\",\r\n    ),\r\n    AttributeInfo(\r\n        name=\"weblink\",\r\n        description=\"The URL where the document was taken from.\",\r\n        type=\"string\",\r\n    ),\r\n    AttributeInfo(\r\n        name=\"keywords\",\r\n        description=\"A list of keywords from the piece of text.\",\r\n        type=\"string\",\r\n    ),\r\n]\r\n\r\nlogging.basicConfig()\r\nlogging.getLogger('langchain.retrievers.self_query').setLevel(logging.INFO)\r\n\r\ndocument_content_description = \"News articles\"\r\n\r\nllm = OpenAI(temperature=0)\r\n\r\nretriever = SelfQueryRetriever.from_llm(\r\n    llm,\r\n    weaviate,\r\n    document_content_description,\r\n    metadata_field_info,\r\n    enable_limit = True,\r\n    verbose=True,\r\n)\r\n\r\nreturned_docs_selfq = retriever.get_relevant_documents(question)\r\n```\n\n### Expected behavior\n\nNo warnings or errors, or documentation stating what output parser replicates the existing functionality. Specifically picking up date range filters from user queries",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10474/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10474/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10473",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10473/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10473/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10473/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10473",
        "id": 1891650757,
        "node_id": "I_kwDOIPDwls5wwEzF",
        "number": 10473,
        "title": "How to add structured tools / functions with multiple inputs ",
        "user": {
            "login": "astelmach01",
            "id": 58709763,
            "node_id": "MDQ6VXNlcjU4NzA5NzYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/58709763?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/astelmach01",
            "html_url": "https://github.com/astelmach01",
            "followers_url": "https://api.github.com/users/astelmach01/followers",
            "following_url": "https://api.github.com/users/astelmach01/following{/other_user}",
            "gists_url": "https://api.github.com/users/astelmach01/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/astelmach01/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/astelmach01/subscriptions",
            "organizations_url": "https://api.github.com/users/astelmach01/orgs",
            "repos_url": "https://api.github.com/users/astelmach01/repos",
            "events_url": "https://api.github.com/users/astelmach01/events{/privacy}",
            "received_events_url": "https://api.github.com/users/astelmach01/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-09-12T04:31:04Z",
        "updated_at": "2023-12-10T19:51:53Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Currently, there is no support for agents that have both:\r\n1) Conversational history\r\n2) Structured tool chat (functions with multiple inputs/parameters)\r\n\r\n\r\n\r\n#3700 mentions this as well but it was not resolved, `AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION` is zero_shot, and essentially has [no memory](https://stackoverflow.com/questions/76906469/langchain-zero-shot-react-agent-uses-memory-or-not). The langchain docs for [structured tool chat](https://python.langchain.com/docs/modules/agents/agent_types/structured_chat) the agent have a sense of memory through creating one massive input prompt. Still, this agent was performing much worse as #3700 mentions and other agents do not support multi input tools, even after creating [custom tools](https://python.langchain.com/docs/modules/agents/tools/custom_tools).\r\n\r\n\r\nMY SOLUTION:\r\n\r\n1) Use ConversationBufferMemory to keep track of chat history.\r\n2) Convert these messages to a format OpenAI wants for their API.\r\n3) Use the OpenAI chat completion endpoint, that has support for function calling\r\n\r\nUsage: `chatgpt_function_response(user_prompt)`\r\n\r\n- Dynamo db and session id stuff comes from the [docs](https://python.langchain.com/docs/integrations/memory/dynamodb_chat_message_history)\r\n- `memory.py` handles getting the chat history for a particular session (can be interpreted as a user). We use ConversationBufferMemory as we usually would and add a helper method to convert the ConversationBufferMemory to a [format that OpenAI wants](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_call_functions_with_chat_models.ipynb)\r\n- `core.py` handles the main functionality with a user prompt. We add the user's prompt to the message history, and get the message history in the OpenAI format. We use the chat completion endpoint as normal, and add the function response call to the message history as an AI message.\r\n- `functions.py` is also how we would normally use the chat completions API, also described [here](https://github.com/openai/openai-cookbook/blob/main/examples/How_to_call_functions_with_chat_models.ipynb)\r\n\r\n`memory.py`\r\n```\r\n\r\nimport logging\r\nfrom typing import List\r\nimport boto3\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom langchain.memory.chat_message_histories import DynamoDBChatMessageHistory\r\nfrom langchain.schema.messages import SystemMessage\r\nfrom langchain.adapters.openai import convert_message_to_dict\r\n\r\nTABLE_NAME = \"your table name\"\r\n\r\n# if using dynamodb\r\nsession = boto3.session.Session(\r\n    aws_access_key_id=\"\",\r\n    aws_secret_access_key=\"\",\r\n    region_name=\"\",\r\n)\r\n\r\n\r\ndef get_memory(session_id: str):\r\n    \"\"\"Get a conversation buffer with chathistory saved to dynamodb\r\n\r\n    Returns:\r\n        ConversationBufferMemory: A memory object with chat history saved to dynamodb\r\n    \"\"\"\r\n\r\n    # Define the necessary components with the dynamodb endpoint\r\n    message_history = DynamoDBChatMessageHistory(\r\n        table_name=TABLE_NAME,\r\n        session_id=session_id,\r\n        boto3_session=session,\r\n    )\r\n    # if you want to add a system prompt\r\n    if len(message_history.messages) == 0:\r\n        message_history.add_message(SystemMessage(content=\"whatever system prompt\"))\r\n\r\n    memory = ConversationBufferMemory(\r\n        memory_key=\"chat_history\", chat_memory=message_history, return_messages=True\r\n    )\r\n\r\n    logging.info(f\"Memory: {memory}\")\r\n\r\n    return memory\r\n\r\n\r\ndef convert_message_buffer_to_openai(memory: ConversationBufferMemory) -> List[dict]:\r\n    \"\"\"Convert a message buffer to a list of messages that OpenAI can understand\r\n\r\n    Args:\r\n        memory (ConversationBufferMemory): A memory object with chat history saved to dynamodb\r\n\r\n    Returns:\r\n        List[dict]: A list of messages that OpenAI can understand\r\n    \"\"\"\r\n    messages = []\r\n    for message in memory.buffer_as_messages:\r\n        messages.append(convert_message_to_dict(message))\r\n\r\n    return messages\r\n\r\n```\r\n\r\n`core.py`\r\n\r\n```\r\ndef _handle_function_call(response: dict) -> str:\r\n    response_message = response[\"message\"]\r\n\r\n    function_name = response_message[\"function_call\"][\"name\"]\r\n    function_to_call = function_names[function_name]\r\n    function_args = json.loads(response_message[\"function_call\"][\"arguments\"])\r\n\r\n    function_response = function_to_call(**function_args)\r\n    return function_response\r\n\r\n\r\ndef chatgpt_response(prompt, model=MODEL, session_id: str = SESSION_ID) -> str:\r\n    memory = get_memory(session_id)\r\n    memory.chat_memory.add_user_message(prompt)\r\n\r\n    messages = convert_message_buffer_to_openai(memory)\r\n\r\n    logging.info(f\"Memory: {messages}\")\r\n    response = openai.ChatCompletion.create(\r\n        model=model,\r\n        messages=messages,\r\n    )\r\n\r\n    answer = response[\"choices\"][0][\"message\"][\"content\"]\r\n\r\n    memory.chat_memory.add_ai_message(answer)\r\n    return answer\r\n\r\n\r\ndef chatgpt_function_response(\r\n    prompt: str,\r\n    functions=function_descriptions,\r\n    model=MODEL,\r\n    session_id: str = SESSION_ID,\r\n) -> str:\r\n    memory = get_memory(session_id)\r\n    memory.chat_memory.add_user_message(prompt)\r\n\r\n    messages = convert_message_buffer_to_openai(memory)\r\n\r\n    logging.info(f\"Memory for function response: {messages}\")\r\n\r\n    response = openai.ChatCompletion.create(\r\n        model=model,\r\n        messages=messages,\r\n        functions=functions,\r\n    )[\"choices\"][0]\r\n\r\n    if response[\"finish_reason\"] == \"function_call\":\r\n        answer = _handle_function_call(response)\r\n\r\n    else:\r\n        answer = response[\"message\"][\"content\"]\r\n\r\n    memory.chat_memory.add_ai_message(answer)\r\n    return answer\r\n\r\n```\r\n\r\n`functions.py`\r\n\r\n```\r\ndef create_reminder(\r\n    task: str, days: int, hours: int, minutes: int\r\n) -> str:\r\n    return 'whatever'\r\n\r\n\r\nfunction_names = {\r\n    \"create_reminder\": create_reminder,\r\n}\r\n\r\n\r\nfunction_descriptions = [\r\n    {\r\n        \"name\": \"create_reminder\",\r\n        \"description\": \"This function handles the logic for creating a reminder for a \"\r\n        \"generic task at a given date and time.\",\r\n        \"parameters\": {\r\n            \"type\": \"object\",\r\n            \"properties\": {\r\n                \"task\": {\r\n                    \"type\": \"string\",\r\n                    \"description\": \"The task to be reminded of, such as 'clean the \"\r\n                    \"house'\",\r\n                },\r\n                \"days\": {\r\n                    \"type\": \"integer\",\r\n                    \"description\": \"The number of days from now to be reminded\",\r\n                },\r\n                \"hours\": {\r\n                    \"type\": \"integer\",\r\n                    \"description\": \"The number of hours from now to be reminded\",\r\n                },\r\n                \"minutes\": {\r\n                    \"type\": \"integer\",\r\n                    \"description\": \"The number of minutes from now to be reminded\",\r\n                },\r\n            },\r\n            \"required\": [\"task\", \"days\", \"hours\", \"minutes\"],\r\n        },\r\n    },\r\n]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10473/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10473/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10472",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10472/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10472/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10472/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10472",
        "id": 1891606072,
        "node_id": "I_kwDOIPDwls5wv544",
        "number": 10472,
        "title": "The exception 'Must provide a pydantic class for schema when output_parser is 'pydantic'.' is caused by the inconsistent package name of BaseModel",
        "user": {
            "login": "jxyer",
            "id": 49470136,
            "node_id": "MDQ6VXNlcjQ5NDcwMTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/49470136?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jxyer",
            "html_url": "https://github.com/jxyer",
            "followers_url": "https://api.github.com/users/jxyer/followers",
            "following_url": "https://api.github.com/users/jxyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/jxyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jxyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jxyer/subscriptions",
            "organizations_url": "https://api.github.com/users/jxyer/orgs",
            "repos_url": "https://api.github.com/users/jxyer/repos",
            "events_url": "https://api.github.com/users/jxyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jxyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-12T03:35:02Z",
        "updated_at": "2023-12-12T16:03:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version: 0.0.279\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThe key issue causing the error is the import statement of **BaseModel**. In the official example, the package is imported as **from pydantic import BaseModel, Field**, but in the langchain source code at _langchain\\chains\\openai_functions\\qa_with_structure.py_, it's imported as **from langchain.pydantic_v1 import BaseModel, Field**. The inconsistency between these two package names results in an error when executing create_qa_with_structure_chain().\r\nBelow is an error example.\r\n``` python\r\nimport os\r\nfrom typing import List\r\n\r\nfrom langchain import PromptTemplate\r\nfrom langchain.chains.openai_functions import create_qa_with_structure_chain\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.prompts.chat import ChatPromptTemplate, HumanMessagePromptTemplate\r\nfrom langchain.schema import SystemMessage, HumanMessage\r\nfrom pydantic import BaseModel, Field\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = \"xxxx\"\r\n\r\nllm = ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo-0613\")\r\n\r\n\r\nclass CustomResponseSchema(BaseModel):\r\n    \"\"\"An answer to the question being asked, with sources.\"\"\"\r\n    answer: str = Field(..., description=\"Answer to the question that was asked\")\r\n    countries_referenced: List[str] = Field(\r\n        ..., description=\"All of the countries mentioned in the sources\"\r\n    )\r\n    sources: List[str] = Field(\r\n        ..., description=\"List of sources used to answer the question\"\r\n    )\r\n\r\n\r\ndoc_prompt = PromptTemplate(\r\n    template=\"Content: {page_content}\\nSource: {source}\",\r\n    input_variables=[\"page_content\", \"source\"],\r\n)\r\n\r\nprompt_messages = [\r\n    SystemMessage(\r\n        content=(\r\n            \"You are a world class algorithm to answer \"\r\n            \"questions in a specific format.\"\r\n        )\r\n    ),\r\n    HumanMessage(content=\"Answer question using the following context\"),\r\n    HumanMessagePromptTemplate.from_template(\"{context}\"),\r\n    HumanMessagePromptTemplate.from_template(\"Question: {question}\"),\r\n    HumanMessage(\r\n        content=\"Tips: Make sure to answer in the correct format. Return all of the countries mentioned in the \"\r\n                \"sources in uppercase characters. \"\r\n    ),\r\n]\r\n\r\nchain_prompt = ChatPromptTemplate(messages=prompt_messages)\r\n\r\nqa_chain_pydantic = create_qa_with_structure_chain(\r\n    llm, CustomResponseSchema, output_parser=\"pydantic\", prompt=chain_prompt\r\n)\r\nquery = \"What did he say about russia\"\r\nqa_chain_pydantic.run({\"question\": query, \"context\": query})\r\n```\n\n### Expected behavior\n\nIt is hoped that the package names can be standardized",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10472/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10472/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10471",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10471/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10471/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10471/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10471",
        "id": 1891540586,
        "node_id": "I_kwDOIPDwls5wvp5q",
        "number": 10471,
        "title": "Make entire element accessible for processing when loading with Unstructured loaders",
        "user": {
            "login": "six5532one",
            "id": 1435725,
            "node_id": "MDQ6VXNlcjE0MzU3MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1435725?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/six5532one",
            "html_url": "https://github.com/six5532one",
            "followers_url": "https://api.github.com/users/six5532one/followers",
            "following_url": "https://api.github.com/users/six5532one/following{/other_user}",
            "gists_url": "https://api.github.com/users/six5532one/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/six5532one/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/six5532one/subscriptions",
            "organizations_url": "https://api.github.com/users/six5532one/orgs",
            "repos_url": "https://api.github.com/users/six5532one/repos",
            "events_url": "https://api.github.com/users/six5532one/events{/privacy}",
            "received_events_url": "https://api.github.com/users/six5532one/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-12T02:02:20Z",
        "updated_at": "2023-12-12T16:01:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nCurrently, Unstructured loaders allow users to process elements when loading the document. This is done by applying user-specified `post_processors` to each element. These post processing functions are str -> str callables.\r\n\r\nWhen using Unstructured loaders, allow element processing using `(Element) -> Element` or `(Element) -> str` callables.\r\n\r\n### Motivation\r\n\r\nA user using `UnstructuredPDFLoader` wants to take advantage of the inferred table structure when processing elements. They can't use the `post_processors` argument to access `element.metadata.text_as_html` because the input to each `post_processors` callable is a string:\r\n>I'm finding that the mode='elements' option already does str(element) to every element, so I can't really use element.metadata.text_as_html\r\n\r\nThey evaluated this workaround:\r\n```\r\nclass CustomPDFLoader(UnstructuredPDFLoader):\r\n    def __init__(\r\n        self,\r\n        *args,\r\n        pre_processors: list[Callable[[elmt.Element], str]] | None,\r\n        **kwargs,\r\n    ) -> None:\r\n        super().__init__(*args, **kwargs)\r\n        self.pre_processors = pre_processors\r\n\u200b\r\n    def _pre_process_elements(self, elements: list[elmt.Element]) -> elmt.Element:\r\n        for element in elements:\r\n            for cleaner in self.pre_processors:\r\n                element.text = cleaner(element)\r\n\u200b\r\n    def load(self) -> str:\r\n        if self.mode != \"single\":\r\n            raise ValueError(f\"mode of {self.mode} not supported.\")\r\n\u200b\r\n        elements = self._get_elements()\r\n        self._pre_process_elements(elements)\r\n\u200b\r\n        metadata = self._get_metadata()\r\n        text = \"\\n\\n\".join([str(el) for el in elements])\r\n        docs = [Document(page_content=text, metadata=metadata)]\r\n        return docs\r\n```\r\n\r\nThe intent is for the `_pre_process_elements` method above to replace the call to `_post_process_elements` in the second line of the [original load function](https://github.com/langchain-ai/langchain/blob/737b75d278a0eef8b3b9002feadba69ffe50e1b1/libs/langchain/langchain/document_loaders/unstructured.py#L87). Using this workaround would require copying the rest of the `load` method's code in the subclass, too.\r\n\r\n### Your contribution\r\n\r\nThe team at Unstructured can investigate this request and submit a PR if needed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10471/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10471/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10470",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10470/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10470/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10470/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10470",
        "id": 1891532227,
        "node_id": "PR_kwDOIPDwls5aE9gc",
        "number": 10470,
        "title": "Stream refac and vertex streaming",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-12T01:50:36Z",
        "updated_at": "2023-09-20T18:49:18Z",
        "closed_at": "2023-09-20T18:49:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10470",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10470",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10470.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10470.patch",
            "merged_at": "2023-09-20T18:49:17Z"
        },
        "body": "will add async if we like this cc @eyurtsev @nfcampos ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10470/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10470/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10469",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10469/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10469/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10469/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10469",
        "id": 1891487103,
        "node_id": "PR_kwDOIPDwls5aE0GH",
        "number": 10469,
        "title": "Chat model stream readability nit",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-12T00:48:00Z",
        "updated_at": "2023-09-12T01:05:25Z",
        "closed_at": "2023-09-12T01:05:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10469",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10469",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10469.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10469.patch",
            "merged_at": "2023-09-12T01:05:24Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10469/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10469/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10468",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10468/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10468/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10468/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10468",
        "id": 1891477538,
        "node_id": "I_kwDOIPDwls5wvagi",
        "number": 10468,
        "title": "BedrockChat model mistakenly removed in latest version?",
        "user": {
            "login": "kaleko",
            "id": 5712203,
            "node_id": "MDQ6VXNlcjU3MTIyMDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5712203?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kaleko",
            "html_url": "https://github.com/kaleko",
            "followers_url": "https://api.github.com/users/kaleko/followers",
            "following_url": "https://api.github.com/users/kaleko/following{/other_user}",
            "gists_url": "https://api.github.com/users/kaleko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kaleko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kaleko/subscriptions",
            "organizations_url": "https://api.github.com/users/kaleko/orgs",
            "repos_url": "https://api.github.com/users/kaleko/repos",
            "events_url": "https://api.github.com/users/kaleko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kaleko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-12T00:32:49Z",
        "updated_at": "2023-10-03T19:51:12Z",
        "closed_at": "2023-10-03T19:51:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nIt looks like BedrockChat was removed from the chat_models/__init__.py when ChatKonko was added in this commit: https://github.com/langchain-ai/langchain/pull/10267/commits/280c1e465c4b89c6313fcc2c0679e3756b8566f9#diff-04148cb9262d722a69b81a119e1f8120515532263a1807239f60f00d9ff2a755\r\n\r\nI'm guessing this was accidental, because the BedrockChat class definitions still exist.\r\n\r\n@agola11 @hwchase17 \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n.\n\n### Expected behavior\n\nI expect `from langchain.chat_models import BedrockChat` to work",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10468/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10468/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10467",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10467/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10467/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10467/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10467",
        "id": 1891332043,
        "node_id": "PR_kwDOIPDwls5aESLl",
        "number": 10467,
        "title": "docs: `document_transformers` consistency",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-11T22:03:10Z",
        "updated_at": "2023-10-01T02:27:40Z",
        "closed_at": "2023-09-30T23:36:24Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10467",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10467",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10467.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10467.patch",
            "merged_at": "2023-09-30T23:36:23Z"
        },
        "body": "- Updated `document_transformers` examples: titles, descriptions, links\r\n- Added `integrations/providers` for missed document_transformers\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10467/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10467/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10466",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10466/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10466/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10466/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10466",
        "id": 1891328503,
        "node_id": "PR_kwDOIPDwls5aERaK",
        "number": 10466,
        "title": "Mv vearch provider doc",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-11T21:59:44Z",
        "updated_at": "2023-09-11T22:21:04Z",
        "closed_at": "2023-09-11T22:00:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10466",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10466",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10466.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10466.patch",
            "merged_at": "2023-09-11T22:00:41Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10466/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10466/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10465",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10465/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10465/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10465/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10465",
        "id": 1891310465,
        "node_id": "PR_kwDOIPDwls5aENdq",
        "number": 10465,
        "title": "Add Runnable.input_keys",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-11T21:42:57Z",
        "updated_at": "2023-09-27T11:41:07Z",
        "closed_at": "2023-09-27T11:41:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10465",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10465",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10465.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10465.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10465/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10465/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10464",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10464/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10464/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10464/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10464",
        "id": 1891282515,
        "node_id": "PR_kwDOIPDwls5aEHP4",
        "number": 10464,
        "title": "Bagatur/hf injection",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-11T21:19:34Z",
        "updated_at": "2023-09-11T21:56:43Z",
        "closed_at": "2023-09-11T21:56:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10464",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10464",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10464.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10464.patch",
            "merged_at": "2023-09-11T21:56:42Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10464/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10464/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10463",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10463/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10463/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10463/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10463",
        "id": 1891252685,
        "node_id": "I_kwDOIPDwls5wujnN",
        "number": 10463,
        "title": "Issue: Add new metadata to document_ids already saved in vectorstore (FAISS)",
        "user": {
            "login": "ggnicolau",
            "id": 79374447,
            "node_id": "MDQ6VXNlcjc5Mzc0NDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/79374447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ggnicolau",
            "html_url": "https://github.com/ggnicolau",
            "followers_url": "https://api.github.com/users/ggnicolau/followers",
            "following_url": "https://api.github.com/users/ggnicolau/following{/other_user}",
            "gists_url": "https://api.github.com/users/ggnicolau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ggnicolau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ggnicolau/subscriptions",
            "organizations_url": "https://api.github.com/users/ggnicolau/orgs",
            "repos_url": "https://api.github.com/users/ggnicolau/repos",
            "events_url": "https://api.github.com/users/ggnicolau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ggnicolau/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-11T20:55:58Z",
        "updated_at": "2023-12-12T16:02:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHi. I've a vectorstore which has embeddings from chunks of documents. I've used FAISS to create my vector_db.  As metadata I've 'document_id', 'chunk_id', 'source'.\r\n\r\nBut now I want to run a summarizer to extract a summary for each document_id and put it as a new metadata for each chunk.\r\n\r\nHow can I do it?\r\n\r\nThe only way I've found out was to process everything all over again, but now extracting the summary as a new step from the pipeline...but that's not ideal....\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10463/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10463/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10462",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10462/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10462/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10462/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10462",
        "id": 1891181081,
        "node_id": "I_kwDOIPDwls5wuSIZ",
        "number": 10462,
        "title": "User Warning when using Self Query Retriever with Weaviate",
        "user": {
            "login": "RoderickVM",
            "id": 64725908,
            "node_id": "MDQ6VXNlcjY0NzI1OTA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/64725908?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RoderickVM",
            "html_url": "https://github.com/RoderickVM",
            "followers_url": "https://api.github.com/users/RoderickVM/followers",
            "following_url": "https://api.github.com/users/RoderickVM/following{/other_user}",
            "gists_url": "https://api.github.com/users/RoderickVM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RoderickVM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RoderickVM/subscriptions",
            "organizations_url": "https://api.github.com/users/RoderickVM/orgs",
            "repos_url": "https://api.github.com/users/RoderickVM/repos",
            "events_url": "https://api.github.com/users/RoderickVM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RoderickVM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-11T20:04:55Z",
        "updated_at": "2023-12-11T16:01:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version: 0.0.286\r\nPython version: 3.11.2\r\nPlatform: x86_64 Debian 12.2.0-14\r\nWeaviate 1.21.2 as vectorstore\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nWhen following LangChain's documentation for[ Weaviate Self-Query Retriever](https://python.langchain.com/docs/modules/data_connection/retrievers/self_query/weaviate_self_query), \r\nI get the following Warning:\r\n```\r\n/langchain/chains/llm.py:278: UserWarning: The predict_and_parse method is deprecated, instead pass an output parser directly to LLMChain.\r\n  warnings.warn(\r\n```\r\n\r\nThe following code led to the warning, although retrieving documents as expected:\r\n```\r\nimport os, openai, weaviate, logging\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Weaviate\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.retrievers.self_query.base import SelfQueryRetriever\r\nfrom langchain.chains.query_constructor.base import AttributeInfo\r\nfrom langchain.retrievers.self_query.weaviate import WeaviateTranslator\r\n\r\nopenai.api_key  = os.environ['OPENAI_API_KEY']\r\n\r\nembeddings = OpenAIEmbeddings()\r\n\r\nclient = weaviate.Client(\r\n    url = WEAVIATE_URL,\r\n    additional_headers = {\r\n        \"X-OpenAI-Api-Key\": openai.api_key\r\n    }\r\n)\r\n\r\nweaviate = Weaviate(\r\n    client = client,\r\n    index_name = INDEX_NAME,\r\n    text_key = \"text\",\r\n    by_text = False,\r\n    embedding = embeddings,\r\n)\r\n\r\nmetadata_field_info = [ # Shortened for brevity\r\n        AttributeInfo(\r\n        name=\"text\",\r\n        description=\"This is the main content of text.\",\r\n        type=\"string\",\r\n    ),\r\n    AttributeInfo(\r\n        name=\"source\",\r\n        description=\"The URL where the document was taken from.\",\r\n        type=\"string\",\r\n    ),\r\n    AttributeInfo(\r\n        name=\"keywords\",\r\n        description=\"A list of keywords from the piece of text.\",\r\n        type=\"string\",\r\n    ),\r\n]\r\n\r\nlogging.basicConfig()\r\nlogging.getLogger('langchain.retrievers.self_query').setLevel(logging.INFO)\r\n\r\ndocument_content_description = \"Collection of Laws and Code documents, including the Labor Code and related Laws.\"\r\n\r\nllm = OpenAI(temperature=0)\r\n\r\nretriever = SelfQueryRetriever.from_llm(\r\n    llm,\r\n    weaviate,\r\n    document_content_description,\r\n    metadata_field_info,\r\n    enable_limit = True,\r\n    verbose=True,\r\n)\r\n\r\nreturned_docs_selfq = retriever.get_relevant_documents(question)\r\n```\r\n\r\n\n\n### Expected behavior\n\nNo Warnings and/or updated documentation instructing how to pass the output parser to LLMChain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10462/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10462/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10461",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10461/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10461/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10461/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10461",
        "id": 1891124816,
        "node_id": "PR_kwDOIPDwls5aDkzB",
        "number": 10461,
        "title": "adjust docs zoom",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-11T19:23:25Z",
        "updated_at": "2023-09-11T20:15:48Z",
        "closed_at": "2023-09-11T20:15:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10461",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10461",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10461.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10461.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10461/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10461/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10460",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10460/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10460/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10460/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10460",
        "id": 1891117462,
        "node_id": "I_kwDOIPDwls5wuCmW",
        "number": 10460,
        "title": "Issue: Error in LangChainTracerV1.on_chain_end callback: Unknown run type:",
        "user": {
            "login": "moayadeldin",
            "id": 100358671,
            "node_id": "U_kgDOBftaDw",
            "avatar_url": "https://avatars.githubusercontent.com/u/100358671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/moayadeldin",
            "html_url": "https://github.com/moayadeldin",
            "followers_url": "https://api.github.com/users/moayadeldin/followers",
            "following_url": "https://api.github.com/users/moayadeldin/following{/other_user}",
            "gists_url": "https://api.github.com/users/moayadeldin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/moayadeldin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/moayadeldin/subscriptions",
            "organizations_url": "https://api.github.com/users/moayadeldin/orgs",
            "repos_url": "https://api.github.com/users/moayadeldin/repos",
            "events_url": "https://api.github.com/users/moayadeldin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/moayadeldin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-11T19:17:54Z",
        "updated_at": "2023-12-13T16:02:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am trying to trace my LangChain runs by using LangChain Tracing Native Support on my local host, I created a session named agent_workflow and tried to receive the runs on it but it didn't work.\r\n\r\nThe problem is that whenever I run the RetrievalQA chain it gives me the following error:\r\n`Error in LangChainTracerV1.on_chain_end callback: Unknown run type: retriever`\r\n\r\nThis is the code snippet specifying the problem:\r\n\r\n```\r\nos.environ[\"LANGCHAIN_TRACING\"] = \"true\"\r\nos.environ[\"LANGCHAIN_SESSION\"] = \"agent_workflow\"\r\nembed = OpenAIEmbeddings(\r\n    model=self.embedding_model_name\r\n)\r\n\r\nvectorStore = Chroma.from_documents(texts,embed)\r\n\r\n def retrieval(self,question):\r\n\r\n      qa = RetrievalQA.from_chain_type(\r\n          llm,\r\n          chain_type=\"stuff\",\r\n          retriever= vectorStore.as_retriever(k=1),\r\n          verbose=True,\r\n          chain_type_kwargs={\r\n              \"verbose\":True,\r\n              \"prompt\":prompt,\r\n              \"memory\": memory,\r\n          }\r\n      )\r\n      \r\n      with get_openai_callback() as cb:\r\n             response = qa.run({\"query\":question})\r\n  \r\n      return qa.run({\"query\":question})\r\n```\r\nHow can I solve this? I saw a tutorial where it worked with initialized_agent instead of RetrievalQA but don't know whether this is the case or not.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10460/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10460/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10459",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10459/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10459/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10459/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10459",
        "id": 1891072612,
        "node_id": "PR_kwDOIPDwls5aDZG2",
        "number": 10459,
        "title": "rm .html",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-11T18:51:34Z",
        "updated_at": "2023-09-11T19:03:26Z",
        "closed_at": "2023-09-11T19:03:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10459",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10459",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10459.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10459.patch",
            "merged_at": "2023-09-11T19:03:25Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10459/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10459/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10457",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10457/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10457/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10457/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10457",
        "id": 1890942149,
        "node_id": "PR_kwDOIPDwls5aC86k",
        "number": 10457,
        "title": "Fix chroma vectorstore error message",
        "user": {
            "login": "jeremynac",
            "id": 63456504,
            "node_id": "MDQ6VXNlcjYzNDU2NTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/63456504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeremynac",
            "html_url": "https://github.com/jeremynac",
            "followers_url": "https://api.github.com/users/jeremynac/followers",
            "following_url": "https://api.github.com/users/jeremynac/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeremynac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeremynac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeremynac/subscriptions",
            "organizations_url": "https://api.github.com/users/jeremynac/orgs",
            "repos_url": "https://api.github.com/users/jeremynac/repos",
            "events_url": "https://api.github.com/users/jeremynac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeremynac/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-11T17:20:51Z",
        "updated_at": "2023-09-11T18:52:50Z",
        "closed_at": "2023-09-11T18:52:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10457",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10457",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10457.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10457.patch",
            "merged_at": "2023-09-11T18:52:44Z"
        },
        "body": "- Description: Updated the error message in the Chroma vectorestore, that displayed a wrong import path for langchain.vectorstores.utils.filter_complex_metadata.\r\n- Tag maintainer: @sbusso \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10457/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10457/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10456",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10456/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10456/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10456/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10456",
        "id": 1890923908,
        "node_id": "I_kwDOIPDwls5wtTWE",
        "number": 10456,
        "title": "Issue: Cannot pass more than one stop sequence to AI21 Bedrock model",
        "user": {
            "login": "supreetkt",
            "id": 12472954,
            "node_id": "MDQ6VXNlcjEyNDcyOTU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/12472954?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/supreetkt",
            "html_url": "https://github.com/supreetkt",
            "followers_url": "https://api.github.com/users/supreetkt/followers",
            "following_url": "https://api.github.com/users/supreetkt/following{/other_user}",
            "gists_url": "https://api.github.com/users/supreetkt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/supreetkt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/supreetkt/subscriptions",
            "organizations_url": "https://api.github.com/users/supreetkt/orgs",
            "repos_url": "https://api.github.com/users/supreetkt/repos",
            "events_url": "https://api.github.com/users/supreetkt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/supreetkt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-11T17:07:23Z",
        "updated_at": "2023-12-11T16:01:12Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nThe following raises a `ValidationException: An error occurred (ValidationException) when calling the InvokeModel operation: Malformed input request: expected maximum item count: 1, found: 2, please reformat your input and try again.`:\r\n```\r\nfrom langchain.chains import ConversationChain\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom langchain.prompts import PromptTemplate\r\nfrom langchain.llms.bedrock import Bedrock\r\n\r\nllm = Bedrock(\r\n    client=bedrock_client,\r\n    model_id=\"ai21.j2-ultra\",\r\n    model_kwargs={\"temperature\": 0.9, \"maxTokens\": 500, \"topP\": 1, \"stopSequences\": [\"\\\\n\\\\nHuman:\", \"\\n\\nAI:\"] \r\n})\r\n\r\nprompt_template = PromptTemplate(template=\"{history}Human:I want to know how to write a story.\\nAssistant: What genre do you want to write the story in?\\n\\nHuman: {input}\",  input_variables=['history', 'input'])\r\n\r\nconversation = ConversationChain(\r\n    llm=llm, verbose=True, memory=ConversationBufferMemory(),prompt=prompt_template\r\n)\r\n\r\nconversation.predict(input=\"I want to write a horror story.\")\r\n```\r\nThis code works when only one stop sequence is passed.\r\n\r\nThe issue seems to be coming from within the Bedrock `invoke_model` call as I tried the same thing in Bedrock playground and received the same error.\r\n\r\n### Suggestion:\r\n\r\nBedrock team needs to be contacted for this one.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10456/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10456/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10455",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10455/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10455/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10455/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10455",
        "id": 1890888136,
        "node_id": "I_kwDOIPDwls5wtKnI",
        "number": 10455,
        "title": "stop sequences as a parameter for ChatAnthropic cannot be added",
        "user": {
            "login": "supreetkt",
            "id": 12472954,
            "node_id": "MDQ6VXNlcjEyNDcyOTU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/12472954?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/supreetkt",
            "html_url": "https://github.com/supreetkt",
            "followers_url": "https://api.github.com/users/supreetkt/followers",
            "following_url": "https://api.github.com/users/supreetkt/following{/other_user}",
            "gists_url": "https://api.github.com/users/supreetkt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/supreetkt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/supreetkt/subscriptions",
            "organizations_url": "https://api.github.com/users/supreetkt/orgs",
            "repos_url": "https://api.github.com/users/supreetkt/repos",
            "events_url": "https://api.github.com/users/supreetkt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/supreetkt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-11T16:42:36Z",
        "updated_at": "2023-12-12T16:02:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nWhile other model parameters for Anthropic are provided as class variables, `stop_sequence` does not for `_AnthropicCommon` class, so you can only send `stop` in the `generate` call. And `generate` manually adds the stop sequences to the parameters before the call to Anthropic.\r\n\r\nI suggest having `stop` as a class level parameters so it can be supplied during the creation of the `ChatAnthropic` class for example, like:\r\n\r\n```\r\nChatAnthropic(\r\n    anthropic_api_key=api_token,\r\n    model=model,\r\n    temperature=temperature,\r\n    top_k=top_k,\r\n    top_p=top_p,\r\n    default_request_timeout=default_request_timeout,\r\n    max_tokens_to_sample=max_tokens_to_sample,\r\n    verbose=verbose,\r\n    stop=stop_sequences,\r\n)\r\n``` \r\nThe changes required for this will be adding the class variable to the `_AnthropicCommon` class and changing the `_default_params` property like so:\r\n\r\n```\r\n@property\r\ndef _default_params(self) -> Mapping[str, Any]:\r\n  \"\"\"Get the default parameters for calling Anthropic API.\"\"\"\r\n  d = {\r\n      \"max_tokens_to_sample\": self.max_tokens_to_sample,\r\n      \"model\": self.model,\r\n  }\r\n  if self.temperature is not None:\r\n      d[\"temperature\"] = self.temperature\r\n  ...\r\n  if self.stop_sequences is not None:\r\n      d[\"stop_sequences\"] = self.stop_sequences\r\n```\r\nThis would enable the addition of stop sequences directly to the model call through the creation of the chat-model object while still keeping the current functionality to also pass it in the generate call for `ConversationChain` if the user so desires (also, under what cases would a user pass stop in the generate call if its already available as a class variable?). This is especially useful because `ConversationalRetrievalChain` doesn't provide `stop` in its own call so addition of this would also enable keeping the behaviour similar across the different chains for a model.\r\n\r\nSo with `ConversationalRetrievalChain`, now the LLM would have the stop sequences already present which you can't currently pass like for `ConversationChain`: \r\n```\r\nConversationalRetrievalChain.from_llm(\r\n    llm=llm,\r\n    retriever=knowledge_base.retriever,\r\n    chain_type=chain_type,\r\n    verbose=verbose,\r\n    memory=conversation_memory,\r\n    return_source_documents=True\r\n)\r\n```\r\n\r\nI would be happy to create a PR for this, just wanted to see some feedback/support, and see if someone has any counter points to this suggestion.\r\n\r\n### Motivation\r\n\r\nUsing stop sequences for `ChatAnthropic` with `ConversationChain` and `ConversationRetrievalChain` causes issues.\r\n\r\n### Your contribution\r\n\r\nYes, I'd be happy to create a PR for this.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10455/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10455/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10454",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10454/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10454/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10454/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10454",
        "id": 1890863082,
        "node_id": "I_kwDOIPDwls5wtEfq",
        "number": 10454,
        "title": "hnsw in Postgres via Neon extention return error",
        "user": {
            "login": "NikitaSemenovAiforia",
            "id": 138506609,
            "node_id": "U_kgDOCEFxcQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/138506609?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NikitaSemenovAiforia",
            "html_url": "https://github.com/NikitaSemenovAiforia",
            "followers_url": "https://api.github.com/users/NikitaSemenovAiforia/followers",
            "following_url": "https://api.github.com/users/NikitaSemenovAiforia/following{/other_user}",
            "gists_url": "https://api.github.com/users/NikitaSemenovAiforia/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NikitaSemenovAiforia/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NikitaSemenovAiforia/subscriptions",
            "organizations_url": "https://api.github.com/users/NikitaSemenovAiforia/orgs",
            "repos_url": "https://api.github.com/users/NikitaSemenovAiforia/repos",
            "events_url": "https://api.github.com/users/NikitaSemenovAiforia/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NikitaSemenovAiforia/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-09-11T16:27:02Z",
        "updated_at": "2023-12-11T16:01:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain uses max_elements parameter to build hnsw index. But since 0.3.2 version of pg_embedding it is not exists.\r\n\r\nThe error is:\r\n`Failed to create HNSW extension or index: (psycopg2.errors.InvalidParameterValue) unrecognized parameter \"maxelements\"`\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nCreate Neon DB as an example in their cloud\n\n### Expected behavior\n\nPGEmbedding.from_embeddings.create_hnsw_index should run migration without errors",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10454/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10454/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10453",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10453/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10453/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10453/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10453",
        "id": 1890830662,
        "node_id": "I_kwDOIPDwls5ws8lG",
        "number": 10453,
        "title": "Error 97 connecting to localhost:6379. Address family not supported by protocol",
        "user": {
            "login": "kolyanez",
            "id": 13738703,
            "node_id": "MDQ6VXNlcjEzNzM4NzAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/13738703?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kolyanez",
            "html_url": "https://github.com/kolyanez",
            "followers_url": "https://api.github.com/users/kolyanez/followers",
            "following_url": "https://api.github.com/users/kolyanez/following{/other_user}",
            "gists_url": "https://api.github.com/users/kolyanez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kolyanez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kolyanez/subscriptions",
            "organizations_url": "https://api.github.com/users/kolyanez/orgs",
            "repos_url": "https://api.github.com/users/kolyanez/repos",
            "events_url": "https://api.github.com/users/kolyanez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kolyanez/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-09-11T16:06:18Z",
        "updated_at": "2023-09-11T23:23:39Z",
        "closed_at": "2023-09-11T23:23:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHI, I try to use  RedisChatMessageHistory but there is an error:\r\nError 97 connecting to localhost:6379. Address family not supported by protocol\r\n\r\nHowever, another URL is defined:\r\n\r\n```\r\nREDIS_URL = f\"redis://default:mypassword@redis-17697.c304.europe-west1-2.gce.cloud.redislabs.com:17697/0\"\r\nhistory = RedisChatMessageHistory(session_id='2', url=REDIS_URL, key_prefix='LILOK')\r\n```\r\n\r\nThe Redis server is external, the VPC is disabled for the Lambda.\r\n\r\n**Full error:**\r\n\r\n```\r\n[ERROR] ConnectionError: Error 97 connecting to localhost:6379. Address family not supported by protocol.\r\nTraceback (most recent call last):\r\n\u00a0\u00a0File \"/var/task/lambda_function.py\", line 45, in lambda_handler\r\n\u00a0\u00a0\u00a0\u00a0history.add_user_message(text)\r\n\u00a0\u00a0File \"/opt/python/langchain/schema/chat_history.py\", line 46, in add_user_message\r\n\u00a0\u00a0\u00a0\u00a0self.add_message(HumanMessage(content=message))\r\n\u00a0\u00a0File \"/opt/python/langchain/memory/chat_message_histories/redis.py\", line 56, in add_message\r\n\u00a0\u00a0\u00a0\u00a0self.redis_client.lpush(self.key, json.dumps(_message_to_dict(message)))\r\n\u00a0\u00a0File \"/opt/python/redis/commands/core.py\", line 2734, in lpush\r\n\u00a0\u00a0\u00a0\u00a0return self.execute_command(\"LPUSH\", name, *values)\r\n\u00a0\u00a0File \"/opt/python/redis/client.py\", line 505, in execute_command\r\n\u00a0\u00a0\u00a0\u00a0conn = self.connection or pool.get_connection(command_name, **options)\r\n\u00a0\u00a0File \"/opt/python/redis/connection.py\", line 1073, in get_connection\r\n\u00a0\u00a0\u00a0\u00a0connection.connect()\r\n\u00a0\u00a0File \"/opt/python/redis/connection.py\", line 265, in connect\r\n\u00a0\u00a0\u00a0\u00a0raise ConnectionError(self._error_message(e))\r\n```\r\n**Full code:**\r\n```\r\nimport os\r\nimport json\r\nimport requests\r\n\r\nfrom langchain.memory import RedisChatMessageHistory\r\nfrom langchain import OpenAI\r\nfrom langchain.chains.conversation.memory import ConversationBufferMemory\r\nfrom langchain.chains import ConversationChain\r\nTELEGRAM_TOKEN = 'mytoken'\r\nTELEGRAM_URL = f\"https://api.telegram.org/bot{TELEGRAM_TOKEN}/\"\r\n\r\ndef lambda_handler(event, context):\r\n\r\n\r\n    REDIS_URL = f\"redis://default:mypassword@redis-17697.c304.europe-west1-2.gce.cloud.redislabs.com:17697/0\"\r\n    history = RedisChatMessageHistory(session_id='2', url=REDIS_URL, key_prefix='LILOK')\r\n    llm = OpenAI(model_name='text-davinci-003', \r\n             temperature=0, \r\n             max_tokens = 256)\r\n             \r\n    memory = ConversationBufferMemory()\r\n    conversation = ConversationChain(\r\n        llm=llm, \r\n        verbose=True, \r\n        memory=memory\r\n    )\r\n    history = RedisChatMessageHistory(\"foo\")\r\n    # Log the received event for debugging\r\n    print(\"Received event: \", json.dumps(event, indent=4))\r\n    \r\n    message = json.loads(event['body'])\r\n\r\n    # Check if 'message' key exists in the event\r\n    if 'message' in message:\r\n        chat_id = message['message']['chat']['id']\r\n        text = message['message'].get('text', '')\r\n        \r\n        if text == '/start':\r\n             send_telegram_message(chat_id, \"Hi!\")\r\n\r\n        else:\r\n            history.add_user_message(text)\r\n            result = conversation.predict(input=history.messages)\r\n            \r\n            history.add_ai_message(result)\r\n            send_telegram_message(chat_id, result)\r\n    else:\r\n        print(\"No 'message' key found in the received event\")\r\n        return {\r\n            'statusCode': 400,\r\n            'body': json.dumps(\"Bad Request: No 'message' key\")\r\n        }\r\n\r\n    return {\r\n        'statusCode': 200\r\n    }\r\n\r\ndef send_telegram_message(chat_id, message):\r\n    url = TELEGRAM_URL + f\"sendMessage?chat_id={chat_id}&text={message}\"\r\n    requests.get(url)\r\n\r\n```\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nPlease advise\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10453/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10453/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10452",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10452/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10452/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10452/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10452",
        "id": 1890816313,
        "node_id": "PR_kwDOIPDwls5aCh0P",
        "number": 10452,
        "title": "Fix deps when using supabase self-query retriever on v3.11",
        "user": {
            "login": "gregnr",
            "id": 4133076,
            "node_id": "MDQ6VXNlcjQxMzMwNzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4133076?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gregnr",
            "html_url": "https://github.com/gregnr",
            "followers_url": "https://api.github.com/users/gregnr/followers",
            "following_url": "https://api.github.com/users/gregnr/following{/other_user}",
            "gists_url": "https://api.github.com/users/gregnr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gregnr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gregnr/subscriptions",
            "organizations_url": "https://api.github.com/users/gregnr/orgs",
            "repos_url": "https://api.github.com/users/gregnr/repos",
            "events_url": "https://api.github.com/users/gregnr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gregnr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-09-11T15:57:27Z",
        "updated_at": "2023-09-11T18:44:10Z",
        "closed_at": "2023-09-11T18:44:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10452",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10452",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10452.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10452.patch",
            "merged_at": "2023-09-11T18:44:10Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. These live is docs/extras directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17, @rlancemartin.\r\n -->\r\n\r\n## Description\r\nFixes dependency errors when using Supabase self-query retrievers on Python 3.11\r\n\r\n## Issues\r\n- https://github.com/langchain-ai/langchain/issues/10447\r\n- https://github.com/langchain-ai/langchain/issues/10444\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10452/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10452/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10451",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10451/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10451/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10451/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10451",
        "id": 1890802166,
        "node_id": "PR_kwDOIPDwls5aCezC",
        "number": 10451,
        "title": "Fixed documentation",
        "user": {
            "login": "kripper",
            "id": 1479804,
            "node_id": "MDQ6VXNlcjE0Nzk4MDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1479804?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kripper",
            "html_url": "https://github.com/kripper",
            "followers_url": "https://api.github.com/users/kripper/followers",
            "following_url": "https://api.github.com/users/kripper/following{/other_user}",
            "gists_url": "https://api.github.com/users/kripper/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kripper/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kripper/subscriptions",
            "organizations_url": "https://api.github.com/users/kripper/orgs",
            "repos_url": "https://api.github.com/users/kripper/repos",
            "events_url": "https://api.github.com/users/kripper/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kripper/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-11T15:49:34Z",
        "updated_at": "2023-09-11T18:51:59Z",
        "closed_at": "2023-09-11T18:51:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10451",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10451",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10451.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10451.patch",
            "merged_at": "2023-09-11T18:51:58Z"
        },
        "body": "It's ._collection, not ._collection_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10451/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10451/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10449",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10449/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10449/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10449/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10449",
        "id": 1890680627,
        "node_id": "PR_kwDOIPDwls5aCEqY",
        "number": 10449,
        "title": "Feature vertex streaming",
        "user": {
            "login": "TerryCM",
            "id": 33166112,
            "node_id": "MDQ6VXNlcjMzMTY2MTEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/33166112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TerryCM",
            "html_url": "https://github.com/TerryCM",
            "followers_url": "https://api.github.com/users/TerryCM/followers",
            "following_url": "https://api.github.com/users/TerryCM/following{/other_user}",
            "gists_url": "https://api.github.com/users/TerryCM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TerryCM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TerryCM/subscriptions",
            "organizations_url": "https://api.github.com/users/TerryCM/orgs",
            "repos_url": "https://api.github.com/users/TerryCM/repos",
            "events_url": "https://api.github.com/users/TerryCM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TerryCM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-09-11T14:44:46Z",
        "updated_at": "2023-09-20T18:50:15Z",
        "closed_at": "2023-09-20T18:50:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10449",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10449",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10449.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10449.patch",
            "merged_at": null
        },
        "body": "Description:\r\nAdded streaming feature to Vertex AI.\r\n\r\n@baskaryan \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10449/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10449/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10448",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10448/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10448/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10448/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/10448",
        "id": 1890662733,
        "node_id": "PR_kwDOIPDwls5aCAyw",
        "number": 10448,
        "title": "Modifying generations.append to solve problem with OpenLLM",
        "user": {
            "login": "victorleaoo",
            "id": 33530818,
            "node_id": "MDQ6VXNlcjMzNTMwODE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/33530818?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/victorleaoo",
            "html_url": "https://github.com/victorleaoo",
            "followers_url": "https://api.github.com/users/victorleaoo/followers",
            "following_url": "https://api.github.com/users/victorleaoo/following{/other_user}",
            "gists_url": "https://api.github.com/users/victorleaoo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/victorleaoo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/victorleaoo/subscriptions",
            "organizations_url": "https://api.github.com/users/victorleaoo/orgs",
            "repos_url": "https://api.github.com/users/victorleaoo/repos",
            "events_url": "https://api.github.com/users/victorleaoo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/victorleaoo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-09-11T14:36:02Z",
        "updated_at": "2023-09-14T00:15:03Z",
        "closed_at": "2023-09-14T00:15:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/10448",
            "html_url": "https://github.com/langchain-ai/langchain/pull/10448",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/10448.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/10448.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nAdded the generation_info=text in the generations.append on the _generate function, to fix generation with OpenLLM model deployment.\r\n\r\n# Issue\r\n\r\nFix: https://github.com/langchain-ai/langchain/issues/9923\r\n\r\n# Twitter\r\n\r\n@vitinleao1\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10448/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10448/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10447",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10447/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10447/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10447/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10447",
        "id": 1890633505,
        "node_id": "I_kwDOIPDwls5wsMch",
        "number": 10447,
        "title": "Error creating Supabase vector store when running self-query example code",
        "user": {
            "login": "tleyden",
            "id": 296876,
            "node_id": "MDQ6VXNlcjI5Njg3Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/296876?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tleyden",
            "html_url": "https://github.com/tleyden",
            "followers_url": "https://api.github.com/users/tleyden/followers",
            "following_url": "https://api.github.com/users/tleyden/following{/other_user}",
            "gists_url": "https://api.github.com/users/tleyden/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tleyden/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tleyden/subscriptions",
            "organizations_url": "https://api.github.com/users/tleyden/orgs",
            "repos_url": "https://api.github.com/users/tleyden/repos",
            "events_url": "https://api.github.com/users/tleyden/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tleyden/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-09-11T14:21:18Z",
        "updated_at": "2023-09-12T07:04:17Z",
        "closed_at": "2023-09-12T07:04:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain: 0.0.285\r\nPlatform: OSX Ventura (apple silicon)\r\nPython version: 3.11\n\n### Who can help?\n\n@gregnr since it looks like you added the [Supabase example code](https://python.langchain.com/docs/modules/data_connection/retrievers/self_query/supabase_self_query)\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Create fresh conda env with python 3.11\r\n2. Install JupyterLap and create notebook\r\n3. Follow the steps in the [Supabase example code](https://python.langchain.com/docs/modules/data_connection/retrievers/self_query/supabase_self_query) tutorial\r\n\r\nOn the step to:\r\n\r\n```\r\nvectorstore = SupabaseVectorStore.from_documents(\r\n    docs, \r\n    embeddings, \r\n    client=supabase, \r\n    table_name=\"documents\", \r\n    query_name=\"match_documents\"\r\n)\r\n```\r\n\r\nit fails with error `JSONDecodeError: Expecting value: line 1 column 1 (char 0)`:\r\n\r\n<details>\r\n\r\n<summary>Stacktrace</summary>\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nJSONDecodeError                           Traceback (most recent call last)\r\nCell In[10], line 1\r\n----> 1 vectorstore = SupabaseVectorStore.from_documents(\r\n      2     docs, \r\n      3     embeddings, \r\n      4     client=supabase, \r\n      5     table_name=\"documents\", \r\n      6     query_name=\"match_documents\"\r\n      7 )\r\n\r\nFile /opt/miniconda3/envs/self-query-experiment/lib/python3.11/site-packages/langchain/vectorstores/base.py:417, in VectorStore.from_documents(cls, documents, embedding, **kwargs)\r\n    415 texts = [d.page_content for d in documents]\r\n    416 metadatas = [d.metadata for d in documents]\r\n--> 417 return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)\r\n\r\nFile /opt/miniconda3/envs/self-query-experiment/lib/python3.11/site-packages/langchain/vectorstores/supabase.py:147, in SupabaseVectorStore.from_texts(cls, texts, embedding, metadatas, client, table_name, query_name, ids, **kwargs)\r\n    145 ids = [str(uuid.uuid4()) for _ in texts]\r\n    146 docs = cls._texts_to_documents(texts, metadatas)\r\n--> 147 cls._add_vectors(client, table_name, embeddings, docs, ids)\r\n    149 return cls(\r\n    150     client=client,\r\n    151     embedding=embedding,\r\n    152     table_name=table_name,\r\n    153     query_name=query_name,\r\n    154 )\r\n\r\nFile /opt/miniconda3/envs/self-query-experiment/lib/python3.11/site-packages/langchain/vectorstores/supabase.py:323, in SupabaseVectorStore._add_vectors(client, table_name, vectors, documents, ids)\r\n    320 for i in range(0, len(rows), chunk_size):\r\n    321     chunk = rows[i : i + chunk_size]\r\n--> 323     result = client.from_(table_name).upsert(chunk).execute()  # type: ignore\r\n    325     if len(result.data) == 0:\r\n    326         raise Exception(\"Error inserting: No rows added\")\r\n\r\nFile /opt/miniconda3/envs/self-query-experiment/lib/python3.11/site-packages/postgrest/_sync/request_builder.py:62, in SyncQueryRequestBuilder.execute(self)\r\n     53 r = self.session.request(\r\n     54     self.http_method,\r\n     55     self.path,\r\n   (...)\r\n     58     headers=self.headers,\r\n     59 )\r\n     61 try:\r\n---> 62     return APIResponse.from_http_request_response(r)\r\n     63 except ValidationError as e:\r\n     64     raise APIError(r.json()) from e\r\n\r\nFile /opt/miniconda3/envs/self-query-experiment/lib/python3.11/site-packages/postgrest/base_request_builder.py:154, in APIResponse.from_http_request_response(cls, request_response)\r\n    150 @classmethod\r\n    151 def from_http_request_response(\r\n    152     cls: Type[APIResponse], request_response: RequestResponse\r\n    153 ) -> APIResponse:\r\n--> 154     data = request_response.json()\r\n    155     count = cls._get_count_from_http_request_response(request_response)\r\n    156     return cls(data=data, count=count)\r\n\r\nFile /opt/miniconda3/envs/self-query-experiment/lib/python3.11/site-packages/httpx/_models.py:756, in Response.json(self, **kwargs)\r\n    754     if encoding is not None:\r\n    755         return jsonlib.loads(self.content.decode(encoding), **kwargs)\r\n--> 756 return jsonlib.loads(self.text, **kwargs)\r\n\r\nFile /opt/miniconda3/envs/self-query-experiment/lib/python3.11/json/__init__.py:346, in loads(s, cls, object_hook, parse_float, parse_int, parse_constant, object_pairs_hook, **kw)\r\n    341     s = s.decode(detect_encoding(s), 'surrogatepass')\r\n    343 if (cls is None and object_hook is None and\r\n    344         parse_int is None and parse_float is None and\r\n    345         parse_constant is None and object_pairs_hook is None and not kw):\r\n--> 346     return _default_decoder.decode(s)\r\n    347 if cls is None:\r\n    348     cls = JSONDecoder\r\n\r\nFile /opt/miniconda3/envs/self-query-experiment/lib/python3.11/json/decoder.py:337, in JSONDecoder.decode(self, s, _w)\r\n    332 def decode(self, s, _w=WHITESPACE.match):\r\n    333     \"\"\"Return the Python representation of ``s`` (a ``str`` instance\r\n    334     containing a JSON document).\r\n    335 \r\n    336     \"\"\"\r\n--> 337     obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n    338     end = _w(s, end).end()\r\n    339     if end != len(s):\r\n\r\nFile /opt/miniconda3/envs/self-query-experiment/lib/python3.11/json/decoder.py:355, in JSONDecoder.raw_decode(self, s, idx)\r\n    353     obj, end = self.scan_once(s, idx)\r\n    354 except StopIteration as err:\r\n--> 355     raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\n    356 return obj, end\r\n\r\nJSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n```\r\n\r\n</details>\r\n\r\nIt appears that Supabase is returning a 201 response code, with an empty body in the response.  Then the posgrest library is trying to parse the json with `data = request_response.json()`, but that fails due to the empty body.\r\n\r\nAre there some extra headers that should be added to the supabase client to tell it return a response body?\r\n\n\n### Expected behavior\n\nNo error when invoking `SupabaseVectorStore.from_documents()`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10447/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10447/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10446",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10446/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10446/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10446/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/10446",
        "id": 1890624612,
        "node_id": "I_kwDOIPDwls5wsKRk",
        "number": 10446,
        "title": "Summarize agent_scratchpad when it exceeds n tokens",
        "user": {
            "login": "mdziezyc",
            "id": 27692483,
            "node_id": "MDQ6VXNlcjI3NjkyNDgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/27692483?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mdziezyc",
            "html_url": "https://github.com/mdziezyc",
            "followers_url": "https://api.github.com/users/mdziezyc/followers",
            "following_url": "https://api.github.com/users/mdziezyc/following{/other_user}",
            "gists_url": "https://api.github.com/users/mdziezyc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mdziezyc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mdziezyc/subscriptions",
            "organizations_url": "https://api.github.com/users/mdziezyc/orgs",
            "repos_url": "https://api.github.com/users/mdziezyc/repos",
            "events_url": "https://api.github.com/users/mdziezyc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mdziezyc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-09-11T14:16:50Z",
        "updated_at": "2023-11-27T12:19:06Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nSimilarly to `memory=ConversationSummaryBufferMemory(llm=llm, max_token_limit=n)` passed in `initialize_agent`, there should be a possibility to pass `ConversationSummaryBufferMemory` like-object which would summarize the `intermediate_steps` in the agent if the `agent_scratchpad` created from the `intermediate_steps`  exceeds `n` tokens\r\n\r\n### Motivation\r\n\r\nAgents can run out of the context window when solving a complex problem with tools.\r\n\r\n### Your contribution\r\n\r\nI can't commit to anything for now.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/10446/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/10446/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]