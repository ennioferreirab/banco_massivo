[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6915",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6915/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6915/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6915/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6915",
        "id": 1780653651,
        "node_id": "I_kwDOIPDwls5qIp5T",
        "number": 6915,
        "title": "make - ModuleNotFoundError: No module named 'scripts'",
        "user": {
            "login": "aj-hoang",
            "id": 106922132,
            "node_id": "U_kgDOBl-AlA",
            "avatar_url": "https://avatars.githubusercontent.com/u/106922132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aj-hoang",
            "html_url": "https://github.com/aj-hoang",
            "followers_url": "https://api.github.com/users/aj-hoang/followers",
            "following_url": "https://api.github.com/users/aj-hoang/following{/other_user}",
            "gists_url": "https://api.github.com/users/aj-hoang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aj-hoang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aj-hoang/subscriptions",
            "organizations_url": "https://api.github.com/users/aj-hoang/orgs",
            "repos_url": "https://api.github.com/users/aj-hoang/repos",
            "events_url": "https://api.github.com/users/aj-hoang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aj-hoang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-29T11:40:35Z",
        "updated_at": "2023-11-25T16:08:49Z",
        "closed_at": "2023-11-25T16:08:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nOS: `Ubuntu 22.04`\r\nLangchain Version: `0.0.219`\r\nPoetry Version: `1.5.1`\r\nPython Version: `3.10.6`\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI would like to contribute to the project, I followed instructions for [contributing](https://github.com/hwchase17/langchain/blob/8502117f62fc4caa53d504ccc9d4e6a512006e7f/.github/CONTRIBUTING.md) and have installed poetry.\r\n\r\nAfter setting up the virtual env, the command: `poetry install -E all` runs successfully :heavy_check_mark: \r\nHowever when trying to do a `make test` I get the following error:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"[redacted]/langchain/.venv/bin/make\", line 5, in <module>\r\n    from scripts.proto import main\r\nModuleNotFoundError: No module named 'scripts'\r\n```\r\nI have the virtual env activated and the command `make` is using the one installed in the virtual env. (see above error)\r\n\r\nI'm assuming I'm missing a dependency but it's not obvious to determine, can you help please?\r\n\r\n### Expected behavior\r\n\r\n`make` should run properly",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6915/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6915/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6914",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6914/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6914/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6914/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6914",
        "id": 1780630901,
        "node_id": "PR_kwDOIPDwls5UO0nT",
        "number": 6914,
        "title": "Fix run_inline to run hooks in the same context",
        "user": {
            "login": "mariokostelac",
            "id": 1917451,
            "node_id": "MDQ6VXNlcjE5MTc0NTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1917451?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mariokostelac",
            "html_url": "https://github.com/mariokostelac",
            "followers_url": "https://api.github.com/users/mariokostelac/followers",
            "following_url": "https://api.github.com/users/mariokostelac/following{/other_user}",
            "gists_url": "https://api.github.com/users/mariokostelac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mariokostelac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mariokostelac/subscriptions",
            "organizations_url": "https://api.github.com/users/mariokostelac/orgs",
            "repos_url": "https://api.github.com/users/mariokostelac/repos",
            "events_url": "https://api.github.com/users/mariokostelac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mariokostelac/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5568495735,
                "node_id": "LA_kwDOIPDwls8AAAABS-iAdw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/callbacks",
                "name": "callbacks",
                "color": "5A02F9",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "agola11",
                "id": 9536492,
                "node_id": "MDQ6VXNlcjk1MzY0OTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/agola11",
                "html_url": "https://github.com/agola11",
                "followers_url": "https://api.github.com/users/agola11/followers",
                "following_url": "https://api.github.com/users/agola11/following{/other_user}",
                "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
                "organizations_url": "https://api.github.com/users/agola11/orgs",
                "repos_url": "https://api.github.com/users/agola11/repos",
                "events_url": "https://api.github.com/users/agola11/events{/privacy}",
                "received_events_url": "https://api.github.com/users/agola11/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-29T11:30:09Z",
        "updated_at": "2023-11-01T22:56:46Z",
        "closed_at": "2023-11-01T22:56:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6914",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6914",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6914.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6914.patch",
            "merged_at": null
        },
        "body": "Since https://github.com/hwchase17/langchain/commit/e1b801be36d2d492eea071dcb594e966414b31cf, run_inline flags on callbacks (introduced in [PR](https://github.com/hwchase17/langchain/pull/6424)) are broken.\r\n\r\nBecause higher-level on_llm_start uses asyncio.gather, it's creates a task for given coroutines, and changes the hooks' context. Hence, it's not run inline and context is lost. Added test shows that if ran without changes in the manager.py.\r\n\r\nThis approach changes the interface of `_ahandle_event` to be synchronous method that returns an awaitable (I think it doesn't change much), which is a result of one `asyncio.wait` statement.\r\n\r\nThis ensures that `run_inline` hooks will be run before async hooks, but it doesn't ensure that relative order of inline hooks is preserved.\r\n\r\nI'm not sure if that's a good approach, but posting it anyway so we can discuss the direction.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6914/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6914/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6913",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6913/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6913/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6913/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6913",
        "id": 1780624598,
        "node_id": "PR_kwDOIPDwls5UOzM0",
        "number": 6913,
        "title": "Add JSON Lines support to JSONLoader",
        "user": {
            "login": "skozlovf",
            "id": 730013,
            "node_id": "MDQ6VXNlcjczMDAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/730013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skozlovf",
            "html_url": "https://github.com/skozlovf",
            "followers_url": "https://api.github.com/users/skozlovf/followers",
            "following_url": "https://api.github.com/users/skozlovf/following{/other_user}",
            "gists_url": "https://api.github.com/users/skozlovf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skozlovf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skozlovf/subscriptions",
            "organizations_url": "https://api.github.com/users/skozlovf/orgs",
            "repos_url": "https://api.github.com/users/skozlovf/repos",
            "events_url": "https://api.github.com/users/skozlovf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skozlovf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-29T11:26:07Z",
        "updated_at": "2023-07-02T19:32:42Z",
        "closed_at": "2023-07-02T19:32:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6913",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6913",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6913.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6913.patch",
            "merged_at": "2023-07-02T19:32:41Z"
        },
        "body": "**Description**:\r\n\r\nThe JSON Lines format is used by some services such as OpenAI and HuggingFace. It's also a convenient alternative to CSV.\r\n\r\nThis PR adds JSON Lines support to `JSONLoader` and also updates related tests.\r\n\r\n**Tag maintainer**: @rlancemartin, @eyurtsev.\r\n\r\nPS I was not able to build docs locally so didn't update related section.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6913/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6913/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6912",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6912/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6912/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6912/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6912",
        "id": 1780597576,
        "node_id": "PR_kwDOIPDwls5UOtQr",
        "number": 6912,
        "title": "Fix different naming of params for chain type",
        "user": {
            "login": "Lin-jun-xiang",
            "id": 63782903,
            "node_id": "MDQ6VXNlcjYzNzgyOTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/63782903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lin-jun-xiang",
            "html_url": "https://github.com/Lin-jun-xiang",
            "followers_url": "https://api.github.com/users/Lin-jun-xiang/followers",
            "following_url": "https://api.github.com/users/Lin-jun-xiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lin-jun-xiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lin-jun-xiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lin-jun-xiang/subscriptions",
            "organizations_url": "https://api.github.com/users/Lin-jun-xiang/orgs",
            "repos_url": "https://api.github.com/users/Lin-jun-xiang/repos",
            "events_url": "https://api.github.com/users/Lin-jun-xiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lin-jun-xiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-29T11:07:29Z",
        "updated_at": "2023-09-04T08:11:47Z",
        "closed_at": "2023-07-06T14:00:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6912",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6912",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6912.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6912.patch",
            "merged_at": null
        },
        "body": "# Changed and Fixed what?\r\nRenaming the parameters in different chain type.\r\n\r\nTo enable smooth and error-free invocation of `RetrievalQA.from_chain_type` functions with different chain types, and to make the usage more intuitive.\r\n\r\n\r\n# Problem description\r\n\r\n`RetrievalQA.from_chain_type` can execute successfully with `stuff` chain type.\r\n\r\nHowever, it cannot use with `map_reduce`, `refine`.\r\n\r\nIf we use `RetrievalQA.from_chain_type()` with `map_reduce` or `refine` chain type, we will get `ValidationError`:\r\n\r\n## Code\r\n```python\r\nprompt_template = \"\"\"\r\nUse the following pieces of context to answer the question, if you don't know the answer, leave it blank don't try to make up an answer.\r\n\r\n{context}\r\n\r\nQuestion: {question}\r\nAnswer in JSON representations\r\n\"\"\"\r\n\r\nQA_PROMPT = PromptTemplate(\r\n    template=prompt_template,\r\n    input_variables=['context', 'question']\r\n)\r\n\r\nchain_type_kwargs = {'prompt': QA_PROMPT, 'verbose': True}\r\n\r\nqa_cahin = RetrievalQA.from_chain_type(\r\n    llm=OpenAI(temperature=0.2),\r\n    chain_type='refine',\r\n    retriever=db.as_retriever(),\r\n    chain_type_kwargs=chain_type_kwargs\r\n)\r\n```\r\n\r\n## Result\r\n```\r\nValidationError: 1 validation error for RefineDocumentsChain\r\nprompt\r\n  extra fields not permitted (type=value_error.extra)\r\n```\r\n\r\n---\r\n\r\n# Source of error\r\n\r\nCheck the [source code](https://github.com/hwchase17/langchain/blob/d85f57ef9cbbbd5e512e064fb81c531b28c6591c/langchain/chains/question_answering/__init__.py#L146)\r\n\r\nThe different types have **different naming of parameter** as following:\r\n\r\n* stuff\r\n\r\n```python\r\ndef _load_stuff_chain(\r\n    llm: BaseLanguageModel,\r\n    prompt: Optional[BasePromptTemplate] = None,\r\n    document_variable_name: str = \"context\",\r\n    verbose: Optional[bool] = None,\r\n    callback_manager: Optional[BaseCallbackManager] = None,\r\n    **kwargs: Any,\r\n) -> StuffDocumentsChain:\r\n```\r\n\r\n* map_reduce\r\n\r\n```python\r\ndef _load_map_reduce_chain(\r\n    llm: BaseLanguageModel,\r\n    question_prompt: Optional[BasePromptTemplate] = None,\r\n    combine_prompt: Optional[BasePromptTemplate] = None,\r\n    combine_document_variable_name: str = \"summaries\",\r\n    map_reduce_document_variable_name: str = \"context\",\r\n    collapse_prompt: Optional[BasePromptTemplate] = None,\r\n    reduce_llm: Optional[BaseLanguageModel] = None,\r\n    collapse_llm: Optional[BaseLanguageModel] = None,\r\n    verbose: Optional[bool] = None,\r\n    callback_manager: Optional[BaseCallbackManager] = None,\r\n    **kwargs: Any,\r\n) -> MapReduceDocumentsChain:\r\n```\r\n\r\n* refine\r\n\r\n```python\r\ndef _load_refine_chain(\r\n    llm: BaseLanguageModel,\r\n    question_prompt: Optional[BasePromptTemplate] = None,\r\n    refine_prompt: Optional[BasePromptTemplate] = None,\r\n    document_variable_name: str = \"context_str\",\r\n    initial_response_name: str = \"existing_answer\",\r\n    refine_llm: Optional[BaseLanguageModel] = None,\r\n    verbose: Optional[bool] = None,\r\n    callback_manager: Optional[BaseCallbackManager] = None,\r\n    **kwargs: Any,\r\n) -> RefineDocumentsChain:\r\n```\r\n\r\n---\r\n\r\nIf want to use different chaint type, we should:\r\n\r\n```python\r\nprompt_template = \"\"\"\r\nUse the following pieces of context to answer the question, if you don't know the answer, leave it blank don't try to make up an answer.\r\n\r\n{context_str}\r\n\r\nQuestion: {question}\r\nAnswer in JSON representations\r\n\"\"\"\r\n\r\nQA_PROMPT = PromptTemplate(\r\n    template=prompt_template,\r\n    input_variables=['context_str', 'question']\r\n)\r\n\r\nchain_type_kwargs = {'question_prompt': QA_PROMPT, 'verbose': True}\r\n\r\nqa_cahin = RetrievalQA.from_chain_type(\r\n    llm=OpenAI(temperature=0.2),\r\n    chain_type='refine',\r\n    retriever=db.as_retriever(),\r\n    chain_type_kwargs=chain_type_kwargs\r\n)\r\n```\r\n\r\nThere're a confusing in the different naming of parameters.\r\n\r\n* `context` vs `context_str`\r\n* `prompt` vs `question_prompt`\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6912/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6912/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6911",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6911/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6911/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6911/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6911",
        "id": 1780551489,
        "node_id": "PR_kwDOIPDwls5UOjNJ",
        "number": 6911,
        "title": "Timeout for base llms",
        "user": {
            "login": "alessarcross",
            "id": 97063602,
            "node_id": "U_kgDOBckSsg",
            "avatar_url": "https://avatars.githubusercontent.com/u/97063602?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alessarcross",
            "html_url": "https://github.com/alessarcross",
            "followers_url": "https://api.github.com/users/alessarcross/followers",
            "following_url": "https://api.github.com/users/alessarcross/following{/other_user}",
            "gists_url": "https://api.github.com/users/alessarcross/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alessarcross/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alessarcross/subscriptions",
            "organizations_url": "https://api.github.com/users/alessarcross/orgs",
            "repos_url": "https://api.github.com/users/alessarcross/repos",
            "events_url": "https://api.github.com/users/alessarcross/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alessarcross/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-29T10:35:20Z",
        "updated_at": "2023-11-07T03:53:33Z",
        "closed_at": "2023-11-07T03:53:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6911",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6911",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6911.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6911.patch",
            "merged_at": null
        },
        "body": "Description: Adding timeout as an option to the BaseLLM class. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6911/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6911/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6909",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6909/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6909/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6909/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6909",
        "id": 1780472015,
        "node_id": "PR_kwDOIPDwls5UOR6V",
        "number": 6909,
        "title": "Fix the different naming of params for chain type",
        "user": {
            "login": "Lin-jun-xiang",
            "id": 63782903,
            "node_id": "MDQ6VXNlcjYzNzgyOTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/63782903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lin-jun-xiang",
            "html_url": "https://github.com/Lin-jun-xiang",
            "followers_url": "https://api.github.com/users/Lin-jun-xiang/followers",
            "following_url": "https://api.github.com/users/Lin-jun-xiang/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lin-jun-xiang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lin-jun-xiang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lin-jun-xiang/subscriptions",
            "organizations_url": "https://api.github.com/users/Lin-jun-xiang/orgs",
            "repos_url": "https://api.github.com/users/Lin-jun-xiang/repos",
            "events_url": "https://api.github.com/users/Lin-jun-xiang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lin-jun-xiang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-29T09:40:20Z",
        "updated_at": "2023-09-04T08:11:47Z",
        "closed_at": "2023-06-29T11:09:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6909",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6909",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6909.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6909.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nRenaming the different naming of parameters for chain type.\r\n\r\nFixed the `ValidationError: 1 validation error for RefineDocumentsChain`\r\n\r\n# The promblem\r\n\r\n`RetrievalQA.from_chain_type` can execute successfully with 'stuff' chain type.\r\n\r\nHowever, it cannot use with `map_reduce`, `refine`.\r\n\r\n## Code\r\n```python\r\nprompt_template = \"\"\"\r\nUse the following pieces of context to answer the question, if you don't know the answer, leave it blank don't try to make up an answer.\r\n\r\n{context}\r\n\r\nQuestion: {question}\r\nAnswer in JSON representations\r\n\"\"\"\r\n\r\nQA_PROMPT = PromptTemplate(\r\n    template=prompt_template,\r\n    input_variables=['context', 'question']\r\n)\r\n\r\nchain_type_kwargs = {'prompt': QA_PROMPT, 'verbose': True}\r\n\r\nqa_cahin = RetrievalQA.from_chain_type(\r\n    llm=OpenAI(temperature=0.2),\r\n    chain_type='refine',\r\n    retriever=db.as_retriever(),\r\n    chain_type_kwargs=chain_type_kwargs\r\n)\r\n```\r\n\r\n## Result\r\n```\r\nValidationError: 1 validation error for RefineDocumentsChain\r\nprompt\r\n  extra fields not permitted (type=value_error.extra)\r\n```\r\n\r\n---\r\n\r\nI've tried to find the [source code](https://github.com/hwchase17/langchain/blob/d85f57ef9cbbbd5e512e064fb81c531b28c6591c/langchain/chains/question_answering/__init__.py#L146)\r\n\r\nI see the different types have **different naming of parameter** as following:\r\n\r\n* stuff\r\n\r\n```python\r\ndef _load_stuff_chain(\r\n    llm: BaseLanguageModel,\r\n    prompt: Optional[BasePromptTemplate] = None,\r\n    document_variable_name: str = \"context\",\r\n    verbose: Optional[bool] = None,\r\n    callback_manager: Optional[BaseCallbackManager] = None,\r\n    **kwargs: Any,\r\n) -> StuffDocumentsChain:\r\n```\r\n\r\n* map_reduce\r\n\r\n```python\r\ndef _load_map_reduce_chain(\r\n    llm: BaseLanguageModel,\r\n    question_prompt: Optional[BasePromptTemplate] = None,\r\n    combine_prompt: Optional[BasePromptTemplate] = None,\r\n    combine_document_variable_name: str = \"summaries\",\r\n    map_reduce_document_variable_name: str = \"context\",\r\n    collapse_prompt: Optional[BasePromptTemplate] = None,\r\n    reduce_llm: Optional[BaseLanguageModel] = None,\r\n    collapse_llm: Optional[BaseLanguageModel] = None,\r\n    verbose: Optional[bool] = None,\r\n    callback_manager: Optional[BaseCallbackManager] = None,\r\n    **kwargs: Any,\r\n) -> MapReduceDocumentsChain:\r\n```\r\n\r\n* refine\r\n\r\n```python\r\ndef _load_refine_chain(\r\n    llm: BaseLanguageModel,\r\n    question_prompt: Optional[BasePromptTemplate] = None,\r\n    refine_prompt: Optional[BasePromptTemplate] = None,\r\n    document_variable_name: str = \"context_str\",\r\n    initial_response_name: str = \"existing_answer\",\r\n    refine_llm: Optional[BaseLanguageModel] = None,\r\n    verbose: Optional[bool] = None,\r\n    callback_manager: Optional[BaseCallbackManager] = None,\r\n    **kwargs: Any,\r\n) -> RefineDocumentsChain:\r\n```\r\n\r\n---\r\n\r\nIf I use the following code, it can work:\r\n\r\n```python\r\nprompt_template = \"\"\"\r\nUse the following pieces of context to answer the question, if you don't know the answer, leave it blank don't try to make up an answer.\r\n\r\n{context_str}\r\n\r\nQuestion: {question}\r\nAnswer in JSON representations\r\n\"\"\"\r\n\r\nQA_PROMPT = PromptTemplate(\r\n    template=prompt_template,\r\n    input_variables=['context_str', 'question']\r\n)\r\n\r\nchain_type_kwargs = {'question_prompt': QA_PROMPT, 'verbose': True}\r\n\r\nqa_cahin = RetrievalQA.from_chain_type(\r\n    llm=OpenAI(temperature=0.2),\r\n    chain_type='refine',\r\n    retriever=db.as_retriever(),\r\n    chain_type_kwargs=chain_type_kwargs\r\n)\r\n```\r\n\r\nMaybe, the error comes from the different naming of parameters ?\r\n\r\n* `context` vs `context_str`\r\n* `prompt` vs `question_prompt`\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6909/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6909/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6908",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6908/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6908/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6908/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6908",
        "id": 1780471865,
        "node_id": "PR_kwDOIPDwls5UOR4S",
        "number": 6908,
        "title": "Add password to PyPDR loader and parser",
        "user": {
            "login": "lucasiscovici",
            "id": 15991202,
            "node_id": "MDQ6VXNlcjE1OTkxMjAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/15991202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lucasiscovici",
            "html_url": "https://github.com/lucasiscovici",
            "followers_url": "https://api.github.com/users/lucasiscovici/followers",
            "following_url": "https://api.github.com/users/lucasiscovici/following{/other_user}",
            "gists_url": "https://api.github.com/users/lucasiscovici/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lucasiscovici/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lucasiscovici/subscriptions",
            "organizations_url": "https://api.github.com/users/lucasiscovici/orgs",
            "repos_url": "https://api.github.com/users/lucasiscovici/repos",
            "events_url": "https://api.github.com/users/lucasiscovici/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lucasiscovici/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-29T09:40:14Z",
        "updated_at": "2023-06-30T00:35:52Z",
        "closed_at": "2023-06-30T00:35:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6908",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6908",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6908.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6908.patch",
            "merged_at": "2023-06-30T00:35:51Z"
        },
        "body": "Add password to PyPDR loader and parser\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6908/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6908/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6907",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6907/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6907/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6907/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6907",
        "id": 1780466588,
        "node_id": "I_kwDOIPDwls5qH8Oc",
        "number": 6907,
        "title": "Stream Mode does not recognize openai.error",
        "user": {
            "login": "wqj97",
            "id": 18662395,
            "node_id": "MDQ6VXNlcjE4NjYyMzk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/18662395?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wqj97",
            "html_url": "https://github.com/wqj97",
            "followers_url": "https://api.github.com/users/wqj97/followers",
            "following_url": "https://api.github.com/users/wqj97/following{/other_user}",
            "gists_url": "https://api.github.com/users/wqj97/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wqj97/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wqj97/subscriptions",
            "organizations_url": "https://api.github.com/users/wqj97/orgs",
            "repos_url": "https://api.github.com/users/wqj97/repos",
            "events_url": "https://api.github.com/users/wqj97/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wqj97/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-29T09:36:28Z",
        "updated_at": "2023-10-06T16:06:39Z",
        "closed_at": "2023-10-06T16:06:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain-0.0.219\r\npython-3.9\r\nmacos-13.4.1 (22F82)\n\n### Who can help?\n\n@agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [X] Async\n\n### Reproduction\n\n1. use async style request in stream mode\r\n```python\r\nChatOpenAI(streaming=True).agenerate([...])\r\n```\r\n2. Got an error if openai sdk raises `openai.error.APIError`\r\n![image](https://github.com/hwchase17/langchain/assets/18662395/efacc3e8-f075-4b36-877e-afd23bb9ef88)\r\n3. `acompletion_with_retry` not effective because the exception was thrown by `\"openai/api_requestor.py\", line 763, in _interpret_response_line` which is after \u201crequest\u201d\r\nin: tenacity/_asyncio.py\r\n![tenacity/_asyncio.py](https://github.com/hwchase17/langchain/assets/18662395/be78d17a-b0f3-4f25-941b-f1a50cd0708d)\r\n\n\n### Expected behavior\n\nCatch exception, and do retry.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6907/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6907/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6906",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6906/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6906/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6906/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6906",
        "id": 1780456921,
        "node_id": "I_kwDOIPDwls5qH53Z",
        "number": 6906,
        "title": "\"ParserError: Error tokenizing data. C error: Expected 2 fields in line 4, saw 4\"",
        "user": {
            "login": "reyfar",
            "id": 13643966,
            "node_id": "MDQ6VXNlcjEzNjQzOTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13643966?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/reyfar",
            "html_url": "https://github.com/reyfar",
            "followers_url": "https://api.github.com/users/reyfar/followers",
            "following_url": "https://api.github.com/users/reyfar/following{/other_user}",
            "gists_url": "https://api.github.com/users/reyfar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/reyfar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/reyfar/subscriptions",
            "organizations_url": "https://api.github.com/users/reyfar/orgs",
            "repos_url": "https://api.github.com/users/reyfar/repos",
            "events_url": "https://api.github.com/users/reyfar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/reyfar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-29T09:29:43Z",
        "updated_at": "2023-11-03T16:07:17Z",
        "closed_at": "2023-11-03T16:07:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nUsing Google Colab, Python 3.10.12. Installing latest version of langchain as of today (v0.0.219, I believe).\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nWhen running the following function to create a chain on a collection of text files , I get the following error:\r\n\r\n```\r\ndef get_company_qa_chain(company_text_dir):\r\n\r\n\r\n  loader = DirectoryLoader(company_text_dir, glob=\"*.txt\")\r\n  documents = loader.load()\r\n\r\n  text_splitter = RecursiveCharacterTextSplitter(\r\n      chunk_size = 1000,\r\n      chunk_overlap  = 100,\r\n      length_function = len,\r\n  )\r\n\r\n  docs = text_splitter.split_documents(documents)\r\n\r\n  embeddings = OpenAIEmbeddings() # default model=\"text-embedding-ada-002\"\r\n\r\n  docsearch = Chroma.from_documents(docs, embeddings)\r\n\r\n  model_name = \"gpt-3.5-turbo\"\r\n\r\n  temperature=0\r\n\r\n  chat = ChatOpenAI(model_name = model_name, temperature=temperature)\r\n\r\n\r\n  template=\"\"\"You are a helpful utility for answering questions. Communicate in English only.\"\"\"\r\n\r\n  system_message_prompt = SystemMessagePromptTemplate.from_template(template)\r\n\r\n  human_template = \"\"\"Use the following context to answer the question that follows. If you don't know the answer,\r\n  say you don't know, don't try to make up an answer:\r\n\r\n  {context}\r\n\r\n  Question: {question}\r\n  \"\"\"\r\n\r\n  human_message_prompt = HumanMessagePromptTemplate.from_template(human_template,\r\n      input_variables=[\"context\", \"question\"])\r\n\r\n  chat_prompt = ChatPromptTemplate.from_messages([system_message_prompt, human_message_prompt])\r\n\r\n\r\n  chain_type_kwargs = {\"prompt\": chat_prompt}\r\n  qa = RetrievalQA.from_chain_type(llm=chat, chain_type=\"stuff\",\r\n                                  retriever=docsearch.as_retriever(),\r\n                                  return_source_documents=True,\r\n                                  chain_type_kwargs=chain_type_kwargs)\r\n\r\n  return qa\r\n```\r\n```\r\n/usr/local/lib/python3.10/dist-packages/pandas/_libs/parsers.pyx in pandas._libs.parsers.raise_parser_error()\r\nParserError: Error tokenizing data. C error: Expected 2 fields in line 4, saw 4\r\n```\r\n\r\nI have isolated the error to a particular text file, which has been produced by pymupdf. There are no clearly strange characters in the file, and everything has been cleaned using the following function before writing to text file:\r\n\r\n```\r\ndef clean_str(text):\r\n  text = unicodedata.normalize('NFKC', text)\r\n  text = text.replace(\"{\", \"\").replace(\"}\", \"\").replace(\"[\", \"\").replace(\"]\", \"\")\r\n  return text\r\n```\r\n\r\n### Expected behavior\r\n\r\nI would expect the code to handle this error and skip the problematic file. I would be also totally happy with a way of cleaning the input files to ensure this doesn't happen again. It was quite a bit of work to hunt down the problem file manually.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6906/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6906/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6905",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6905/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6905/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6905/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6905",
        "id": 1780435182,
        "node_id": "PR_kwDOIPDwls5UOJ7k",
        "number": 6905,
        "title": "Create repo1",
        "user": {
            "login": "treinex",
            "id": 52037031,
            "node_id": "MDQ6VXNlcjUyMDM3MDMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/52037031?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/treinex",
            "html_url": "https://github.com/treinex",
            "followers_url": "https://api.github.com/users/treinex/followers",
            "following_url": "https://api.github.com/users/treinex/following{/other_user}",
            "gists_url": "https://api.github.com/users/treinex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/treinex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/treinex/subscriptions",
            "organizations_url": "https://api.github.com/users/treinex/orgs",
            "repos_url": "https://api.github.com/users/treinex/repos",
            "events_url": "https://api.github.com/users/treinex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/treinex/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-29T09:14:40Z",
        "updated_at": "2023-06-29T19:57:06Z",
        "closed_at": "2023-06-29T19:57:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6905",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6905",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6905.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6905.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6905/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6905/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6904",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6904/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6904/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6904/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6904",
        "id": 1780426625,
        "node_id": "PR_kwDOIPDwls5UOIFs",
        "number": 6904,
        "title": "chore: NebulaGraph prompt optmization",
        "user": {
            "login": "wey-gu",
            "id": 1651790,
            "node_id": "MDQ6VXNlcjE2NTE3OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1651790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wey-gu",
            "html_url": "https://github.com/wey-gu",
            "followers_url": "https://api.github.com/users/wey-gu/followers",
            "following_url": "https://api.github.com/users/wey-gu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wey-gu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wey-gu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wey-gu/subscriptions",
            "organizations_url": "https://api.github.com/users/wey-gu/orgs",
            "repos_url": "https://api.github.com/users/wey-gu/repos",
            "events_url": "https://api.github.com/users/wey-gu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wey-gu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-29T09:08:30Z",
        "updated_at": "2023-06-30T00:04:35Z",
        "closed_at": "2023-06-29T19:57:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6904",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6904",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6904.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6904.patch",
            "merged_at": "2023-06-29T19:57:40Z"
        },
        "body": "Was preparing for a demo project of NebulaGraphQAChain to find out the prompt needed to be optimized a little bit.\r\n\r\nPlease @hwchase17 kindly help review.\r\n\r\nThanks!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6904/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6904/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6903",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6903/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6903/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6903/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6903",
        "id": 1780323771,
        "node_id": "PR_kwDOIPDwls5UNx4W",
        "number": 6903,
        "title": "Extend the QA use cases by DataChad example",
        "user": {
            "login": "gustavz",
            "id": 29252883,
            "node_id": "MDQ6VXNlcjI5MjUyODgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/29252883?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gustavz",
            "html_url": "https://github.com/gustavz",
            "followers_url": "https://api.github.com/users/gustavz/followers",
            "following_url": "https://api.github.com/users/gustavz/following{/other_user}",
            "gists_url": "https://api.github.com/users/gustavz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gustavz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gustavz/subscriptions",
            "organizations_url": "https://api.github.com/users/gustavz/orgs",
            "repos_url": "https://api.github.com/users/gustavz/repos",
            "events_url": "https://api.github.com/users/gustavz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gustavz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-29T07:57:26Z",
        "updated_at": "2023-07-03T07:25:01Z",
        "closed_at": "2023-06-29T19:59:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6903",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6903",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6903.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6903.patch",
            "merged_at": null
        },
        "body": "  - Description: Add an use case example to question_answering section\r\n  - Issue: tN/A\r\n  - Dependencies: N/A\r\n  - Tag maintainer: @hwchase17 \r\n  - Twitter handle: @thegreatgustby\r\n  \r\n  @hwchase17 we had spoken in twitter dms (12th May) to include the project in the use-cases section.\r\n  I forgot to do it since, so wanted to do it now. Hope it's still accepted.\r\n  Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6903/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6903/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6902",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6902/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6902/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6902/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6902",
        "id": 1780310048,
        "node_id": "PR_kwDOIPDwls5UNu9X",
        "number": 6902,
        "title": "Add API Header for Amazon API Gateway Authentication",
        "user": {
            "login": "sunbc0120",
            "id": 7380988,
            "node_id": "MDQ6VXNlcjczODA5ODg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7380988?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sunbc0120",
            "html_url": "https://github.com/sunbc0120",
            "followers_url": "https://api.github.com/users/sunbc0120/followers",
            "following_url": "https://api.github.com/users/sunbc0120/following{/other_user}",
            "gists_url": "https://api.github.com/users/sunbc0120/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sunbc0120/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sunbc0120/subscriptions",
            "organizations_url": "https://api.github.com/users/sunbc0120/orgs",
            "repos_url": "https://api.github.com/users/sunbc0120/repos",
            "events_url": "https://api.github.com/users/sunbc0120/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sunbc0120/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-29T07:46:45Z",
        "updated_at": "2023-06-29T19:58:08Z",
        "closed_at": "2023-06-29T19:58:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6902",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6902",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6902.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6902.patch",
            "merged_at": "2023-06-29T19:58:07Z"
        },
        "body": "Add API Headers support for Amazon API Gateway to enable Authentication using DynamoDB.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6902/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6902/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6901",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6901/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6901/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6901/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6901",
        "id": 1780285232,
        "node_id": "PR_kwDOIPDwls5UNplh",
        "number": 6901,
        "title": "move octo notebook",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-29T07:28:12Z",
        "updated_at": "2023-06-29T19:20:57Z",
        "closed_at": "2023-06-29T19:20:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6901",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6901",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6901.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6901.patch",
            "merged_at": "2023-06-29T19:20:56Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6901/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6901/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6900",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6900/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6900/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6900/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6900",
        "id": 1780233553,
        "node_id": "I_kwDOIPDwls5qHDVR",
        "number": 6900,
        "title": "load_prompt Unable to set encoding for JSON files",
        "user": {
            "login": "jiaxin576",
            "id": 24885828,
            "node_id": "MDQ6VXNlcjI0ODg1ODI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/24885828?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiaxin576",
            "html_url": "https://github.com/jiaxin576",
            "followers_url": "https://api.github.com/users/jiaxin576/followers",
            "following_url": "https://api.github.com/users/jiaxin576/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiaxin576/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiaxin576/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiaxin576/subscriptions",
            "organizations_url": "https://api.github.com/users/jiaxin576/orgs",
            "repos_url": "https://api.github.com/users/jiaxin576/repos",
            "events_url": "https://api.github.com/users/jiaxin576/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiaxin576/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-29T06:48:33Z",
        "updated_at": "2023-12-06T14:51:42Z",
        "closed_at": "2023-10-05T16:08:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nllm = OpenAI(temperature=0)\r\nchain = LLMChain(llm=llm, prompt=load_prompt(\"coolapk_prompt.json\"))\r\n\r\nconfig = json.load(f)\r\nUnicodeDecodeError: 'gbk' codec can't decode byte 0xaf in position 108: illegal multibyte sequence\n\n### Who can help?\n\n\r\nllm = OpenAI(temperature=0)\r\nchain = LLMChain(llm=llm, prompt=load_prompt(\"coolapk_prompt.json\"))\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n \r\nllm = OpenAI(temperature=0)\r\nchain = LLMChain(llm=llm, prompt=load_prompt(\"coolapk_prompt.json\"))\n\n### Expected behavior\n\nadd set encoding for JSON files\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6900/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6900/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6899",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6899/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6899/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6899/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6899",
        "id": 1780205677,
        "node_id": "PR_kwDOIPDwls5UNYXL",
        "number": 6899,
        "title": "bump version to 219",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-29T06:21:03Z",
        "updated_at": "2023-06-29T06:48:44Z",
        "closed_at": "2023-06-29T06:48:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6899",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6899",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6899.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6899.patch",
            "merged_at": "2023-06-29T06:48:43Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6899/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6899/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6898",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6898/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6898/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6898/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6898",
        "id": 1780203422,
        "node_id": "I_kwDOIPDwls5qG7-e",
        "number": 6898,
        "title": "The ReDOS Attack for the regex in langchain",
        "user": {
            "login": "wqh17101",
            "id": 26429138,
            "node_id": "MDQ6VXNlcjI2NDI5MTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/26429138?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wqh17101",
            "html_url": "https://github.com/wqh17101",
            "followers_url": "https://api.github.com/users/wqh17101/followers",
            "following_url": "https://api.github.com/users/wqh17101/following{/other_user}",
            "gists_url": "https://api.github.com/users/wqh17101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wqh17101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wqh17101/subscriptions",
            "organizations_url": "https://api.github.com/users/wqh17101/orgs",
            "repos_url": "https://api.github.com/users/wqh17101/repos",
            "events_url": "https://api.github.com/users/wqh17101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wqh17101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-29T06:18:22Z",
        "updated_at": "2023-10-05T16:06:45Z",
        "closed_at": "2023-10-05T16:06:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\npython 3.9\r\nlangchain 0.0.199\n\n### Who can help?\n\n@hwchase17 @agola11 @eyu\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThe regex such as https://github.com/hwchase17/langchain/blob/6370808d41eda0d056375015fda9284e9f01280c/langchain/agents/mrkl/output_parser.py#L18\r\nwill raise a ReDOS when the model output something below\r\n`'Action' + '\\n'*n + ':' + '\\t'*n + '\\t0Input:' + '\\t'*n + '\\nAction' + '\\t'*n + 'Input' + '\\t'*n + '\\t0Input:ActionInput:'`\r\nfull code:\r\n```\r\nimport re\r\nn=780\r\nllm_output='Action' + '\\n'*n + ':' + '\\t'*n + '\\t0Input:' + '\\t'*n + '\\nAction' + '\\t'*n + 'Input' + '\\t'*n + '\\t0Input:ActionInput:'\r\nregex = (\r\n            r\"Action\\s*\\d*\\s*:[\\s]*(.*?)[\\s]*Action\\s*\\d*\\s*Input\\s*\\d*\\s*:[\\s]*(.*)\"\r\n        )\r\nmatch = re.search(regex, llm_output, re.DOTALL)\r\naction = match.group(1).strip()\r\nprint(action)\r\naction_input = match.group(2)\r\n```\r\nTo slow the regex\n\n### Expected behavior\n\n```\r\nProtection\r\nThere are several things you can do to protect yourself from ReDoS attacks.\r\n\r\n1.Look at safer alternative libraries such as Facebook\u2019s [pyre2](https://pypi.org/project/pyre2/), which is a python wrapper around Google\u2019s C++ Regex Library, [re2](https://github.com/google/re2/).\r\n2.Always double check all regex you add to your application and never blindly trust regex patterns you find online.\r\n3.Utilize SAST and fuzzing tools to test your own code, and check out [Ochrona](https://ochrona.dev/) to make sure your dependencies are not vulnerable to ReDoS attacks.\r\n4.If possible, limit the length of your input to avoid longer than necessary strings.\r\n```\r\nfrom  https://medium.com/ochrona/python-dos-prevention-the-redos-attack-7267a8fa2d5c\r\n\r\nAlso you can check your regex online https://devina.io/redos-checker.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6898/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6898/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6897",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6897/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6897/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6897/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6897",
        "id": 1780171970,
        "node_id": "PR_kwDOIPDwls5UNRG0",
        "number": 6897,
        "title": "Harrison/octo ml",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-29T05:43:49Z",
        "updated_at": "2023-06-29T06:04:12Z",
        "closed_at": "2023-06-29T06:04:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6897",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6897",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6897.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6897.patch",
            "merged_at": "2023-06-29T06:04:11Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6897/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6897/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6896",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6896/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6896/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6896/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6896",
        "id": 1780004871,
        "node_id": "PR_kwDOIPDwls5UMtMT",
        "number": 6896,
        "title": "chore(openllm): make sure to download the model if not exists",
        "user": {
            "login": "aarnphm",
            "id": 29749331,
            "node_id": "MDQ6VXNlcjI5NzQ5MzMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29749331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aarnphm",
            "html_url": "https://github.com/aarnphm",
            "followers_url": "https://api.github.com/users/aarnphm/followers",
            "following_url": "https://api.github.com/users/aarnphm/following{/other_user}",
            "gists_url": "https://api.github.com/users/aarnphm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aarnphm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aarnphm/subscriptions",
            "organizations_url": "https://api.github.com/users/aarnphm/orgs",
            "repos_url": "https://api.github.com/users/aarnphm/repos",
            "events_url": "https://api.github.com/users/aarnphm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aarnphm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-29T02:16:19Z",
        "updated_at": "2023-06-30T08:41:25Z",
        "closed_at": "2023-06-30T07:54:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6896",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6896",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6896.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6896.patch",
            "merged_at": null
        },
        "body": "OpenLLM Runner now include a ensure_available argument to separate the process\nof automatic setup of the given model. This was introduced to allow better UX\nwith openllm.\n\nI updated the OpenLLM accordingly, since we are just loading the model into\nmemory in \"local\" mode, `ensure_available` should set to `True`\n\ncc @dev2049\n\nSigned-off-by: Aaron <29749331+aarnphm@users.noreply.github.com>\n\n<!-- Thank you for contributing to LangChain!\n\nReplace this comment with:\n  - Description: a description of the change,\n  - Issue: the issue # it fixes (if applicable),\n  - Dependencies: any dependencies required for this change,\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\n\nIf you're adding a new integration, please include:\n  1. a test for the integration, preferably unit tests that do not rely on network access,\n  2. an example notebook showing its use.\n\nMaintainer responsibilities:\n  - General / Misc / if you don't know who to tag: @dev2049\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\n  - Models / Prompts: @hwchase17, @dev2049\n  - Memory: @hwchase17\n  - Agents / Tools / Toolkits: @vowelparrot\n  - Tracing / Callbacks: @agola11\n  - Async: @agola11\n\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\n\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\n -->\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6896/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6896/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6895",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6895/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6895/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6895/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6895",
        "id": 1779997091,
        "node_id": "PR_kwDOIPDwls5UMrrw",
        "number": 6895,
        "title": "Re-add Support for SQLAlchemy <1.4",
        "user": {
            "login": "bradcrossen",
            "id": 8551321,
            "node_id": "MDQ6VXNlcjg1NTEzMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8551321?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bradcrossen",
            "html_url": "https://github.com/bradcrossen",
            "followers_url": "https://api.github.com/users/bradcrossen/followers",
            "following_url": "https://api.github.com/users/bradcrossen/following{/other_user}",
            "gists_url": "https://api.github.com/users/bradcrossen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bradcrossen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bradcrossen/subscriptions",
            "organizations_url": "https://api.github.com/users/bradcrossen/orgs",
            "repos_url": "https://api.github.com/users/bradcrossen/repos",
            "events_url": "https://api.github.com/users/bradcrossen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bradcrossen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5483526101,
                "node_id": "LA_kwDOIPDwls8AAAABRtf31Q",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/breaking",
                "name": "breaking",
                "color": "B60205",
                "default": false,
                "description": "Breaking change"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-29T02:06:28Z",
        "updated_at": "2023-06-29T21:49:37Z",
        "closed_at": "2023-06-29T21:49:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6895",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6895",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6895.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6895.patch",
            "merged_at": "2023-06-29T21:49:36Z"
        },
        "body": "Support for SQLAlchemy 1.3 was removed in version 0.0.203 by change #6086. Re-adding support.\r\n\r\n  - Description: Imports SQLAlchemy Row at class creation time instead of at init to support SQLAlchemy <1.4. This is the only breaking change and was introduced in version 0.0.203 #6086.\r\n  \r\n  A similar change was merged before: https://github.com/hwchase17/langchain/pull/4647\r\n  \r\n  - Dependencies: Reduces SQLAlchemy dependency to > 1.3\r\n  - Tag maintainer: @rlancemartin, @eyurtsev, @hwchase17, @wangxuqi\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6895/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6895/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6894",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6894/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6894/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6894/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6894",
        "id": 1779956438,
        "node_id": "PR_kwDOIPDwls5UMjW5",
        "number": 6894,
        "title": "Add Input Mapper in run_on_dataset",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-29T01:02:08Z",
        "updated_at": "2023-06-29T23:53:50Z",
        "closed_at": "2023-06-29T23:53:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6894",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6894",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6894.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6894.patch",
            "merged_at": "2023-06-29T23:53:49Z"
        },
        "body": "If you create a dataset from runs and run the same chain or llm on it later, it usually works great.\r\n\r\nIf you have an agent dataset and want to run a different agent on it, or have more complex schema, it's hard for us to automatically map these values every time. This PR lets you pass in an input_mapper function that converts the example inputs to whatever format your model expects",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6894/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6893",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6893/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6893/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6893/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6893",
        "id": 1779886649,
        "node_id": "PR_kwDOIPDwls5UMUfT",
        "number": 6893,
        "title": "Add pg_hnsw vectorstore integration",
        "user": {
            "login": "raoufchebri",
            "id": 13738772,
            "node_id": "MDQ6VXNlcjEzNzM4Nzcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13738772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raoufchebri",
            "html_url": "https://github.com/raoufchebri",
            "followers_url": "https://api.github.com/users/raoufchebri/followers",
            "following_url": "https://api.github.com/users/raoufchebri/following{/other_user}",
            "gists_url": "https://api.github.com/users/raoufchebri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raoufchebri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raoufchebri/subscriptions",
            "organizations_url": "https://api.github.com/users/raoufchebri/orgs",
            "repos_url": "https://api.github.com/users/raoufchebri/repos",
            "events_url": "https://api.github.com/users/raoufchebri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raoufchebri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-06-28T23:11:55Z",
        "updated_at": "2023-07-05T15:10:11Z",
        "closed_at": "2023-07-05T15:10:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6893",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6893",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6893.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6893.patch",
            "merged_at": "2023-07-05T15:10:10Z"
        },
        "body": "Hi @rlancemartin, @eyurtsev!\r\n\r\n  - Description: Adding HNSW extension support for Postgres. Similar to pgvector vectorstore, with 3 differences \r\n      1. it uses HNSW extension for exact and ANN searches, \r\n      2. Vectors are of type array of real\r\n      3. Only supports L2\r\n      \r\n  - Dependencies: [HNSW](https://github.com/knizhnik/hnsw) extension for Postgres\r\n  \r\n  - Example:\r\n  ```python\r\n    db = HNSWVectoreStore.from_documents(\r\n      embedding=embeddings,\r\n      documents=docs,\r\n      collection_name=collection_name,\r\n      connection_string=connection_string\r\n  )\r\n  \r\n  query = \"What did the president say about Ketanji Brown Jackson\"\r\n  docs_with_score: List[Tuple[Document, float]] = db.similarity_search_with_score(query) \r\n  ```\r\n\r\nThe example notebook is in the PR too.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6893/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6893/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6892",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6892/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6892/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6892/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6892",
        "id": 1779879955,
        "node_id": "PR_kwDOIPDwls5UMTDU",
        "number": 6892,
        "title": "Update Zapier Jupyter notebook to include brief OAuth example",
        "user": {
            "login": "ralewis85",
            "id": 3906177,
            "node_id": "MDQ6VXNlcjM5MDYxNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3906177?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ralewis85",
            "html_url": "https://github.com/ralewis85",
            "followers_url": "https://api.github.com/users/ralewis85/followers",
            "following_url": "https://api.github.com/users/ralewis85/following{/other_user}",
            "gists_url": "https://api.github.com/users/ralewis85/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ralewis85/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ralewis85/subscriptions",
            "organizations_url": "https://api.github.com/users/ralewis85/orgs",
            "repos_url": "https://api.github.com/users/ralewis85/repos",
            "events_url": "https://api.github.com/users/ralewis85/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ralewis85/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T23:01:34Z",
        "updated_at": "2023-06-29T01:06:23Z",
        "closed_at": "2023-06-29T01:06:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6892",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6892",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6892.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6892.patch",
            "merged_at": "2023-06-29T01:06:22Z"
        },
        "body": "Description: Adds a brief example of using an OAuth access token with the Zapier wrapper.  Also links to the Zapier documentation to learn more about OAuth flows.\r\nTag maintainer: @dev2049 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6892/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6891",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6891/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6891/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6891/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6891",
        "id": 1779853268,
        "node_id": "PR_kwDOIPDwls5UMNVu",
        "number": 6891,
        "title": "Use `getLogger` instead of `basicConfig` in `multi_query.py`",
        "user": {
            "login": "zhichenggeng",
            "id": 22341194,
            "node_id": "MDQ6VXNlcjIyMzQxMTk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/22341194?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhichenggeng",
            "html_url": "https://github.com/zhichenggeng",
            "followers_url": "https://api.github.com/users/zhichenggeng/followers",
            "following_url": "https://api.github.com/users/zhichenggeng/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhichenggeng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhichenggeng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhichenggeng/subscriptions",
            "organizations_url": "https://api.github.com/users/zhichenggeng/orgs",
            "repos_url": "https://api.github.com/users/zhichenggeng/repos",
            "events_url": "https://api.github.com/users/zhichenggeng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhichenggeng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-28T22:22:51Z",
        "updated_at": "2023-07-03T21:13:32Z",
        "closed_at": "2023-06-29T01:06:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6891",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6891",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6891.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6891.patch",
            "merged_at": "2023-06-29T01:06:10Z"
        },
        "body": "Remove `logging.basicConfig`, which turns on logging. Use `getLogger` instead.\r\n\r\ncc @rlancemartin ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6891/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6891/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6890",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6890/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6890/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6890/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6890",
        "id": 1779828932,
        "node_id": "PR_kwDOIPDwls5UMH4x",
        "number": 6890,
        "title": "docstrings `document_loaders` 2",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T22:00:44Z",
        "updated_at": "2023-07-02T21:26:04Z",
        "closed_at": "2023-07-02T19:14:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6890",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6890",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6890.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6890.patch",
            "merged_at": "2023-07-02T19:14:23Z"
        },
        "body": "updated docstring for the `document_loaders`\r\n\r\nMaintainer responsibilities:\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6890/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6890/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6889",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6889/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6889/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6889/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6889",
        "id": 1779800725,
        "node_id": "I_kwDOIPDwls5qFZqV",
        "number": 6889,
        "title": "SQLDatabaseChain cannot be loaded",
        "user": {
            "login": "liangz1",
            "id": 7851093,
            "node_id": "MDQ6VXNlcjc4NTEwOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7851093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liangz1",
            "html_url": "https://github.com/liangz1",
            "followers_url": "https://api.github.com/users/liangz1/followers",
            "following_url": "https://api.github.com/users/liangz1/following{/other_user}",
            "gists_url": "https://api.github.com/users/liangz1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liangz1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liangz1/subscriptions",
            "organizations_url": "https://api.github.com/users/liangz1/orgs",
            "repos_url": "https://api.github.com/users/liangz1/repos",
            "events_url": "https://api.github.com/users/liangz1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liangz1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-28T21:29:40Z",
        "updated_at": "2023-09-20T16:03:12Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.217\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThe following code fails:\r\n```python\r\ndef create_sqlite_db_file(db_dir):\r\n    # Connect to SQLite database (or create it if it doesn't exist)\r\n    conn = sqlite3.connect(db_dir)\r\n\r\n    # Create a cursor\r\n    c = conn.cursor()\r\n\r\n    # Create a dummy table\r\n    c.execute('''\r\n        CREATE TABLE IF NOT EXISTS employees(\r\n            id INTEGER PRIMARY KEY,\r\n            name TEXT,\r\n            salary REAL,\r\n            department TEXT,\r\n            position TEXT,\r\n            hireDate TEXT);\r\n        ''')\r\n\r\n    # Insert dummy data into the table\r\n    c.execute('''\r\n        INSERT INTO employees (name, salary, department, position, hireDate)\r\n        VALUES ('John Doe', 80000, 'IT', 'Engineer', '2023-06-26');\r\n        ''')\r\n\r\n    # Commit the transaction\r\n    conn.commit()\r\n\r\n    # Close the connection\r\n    conn.close()\r\n\r\ndef test_log_and_load_sql_database_chain(tmp_path):\r\n    # Create the SQLDatabaseChain\r\n    db_file_path = tmp_path / \"my_database.db\"\r\n    sqlite_uri = f\"sqlite:///{db_file_path}\"\r\n    llm = OpenAI(temperature=0)\r\n    create_sqlite_db_file(db_file_path)\r\n    db = SQLDatabase.from_uri(sqlite_uri)\r\n    db_chain = SQLDatabaseChain.from_llm(llm, db)\r\n\r\n    db_chain.save('/path/to/test_chain.yaml')\r\n    from langchain.chains import load_chain\r\n    loaded_chain = load_chain('/path/to/test_chain.yaml', database=db)\r\n```\r\nError:\r\n```\r\n    def load_llm_from_config(config: dict) -> BaseLLM:\r\n        \"\"\"Load LLM from Config Dict.\"\"\"\r\n>       if \"_type\" not in config:\r\nE       TypeError: argument of type 'NoneType' is not iterable\r\n```\n\n### Expected behavior\n\nNo error should occur.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6889/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6889/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6888",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6888/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6888/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6888/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6888",
        "id": 1779783273,
        "node_id": "PR_kwDOIPDwls5UL-Es",
        "number": 6888,
        "title": "Accept any single input",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T21:12:05Z",
        "updated_at": "2023-06-29T17:29:18Z",
        "closed_at": "2023-06-29T17:29:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6888",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6888",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6888.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6888.patch",
            "merged_at": "2023-06-29T17:29:17Z"
        },
        "body": "If I upload a dataset with a single input and output column, we should be able to let the chain prepare the input without having to maintain a strict dataset format.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6888/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6888/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6887",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6887/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6887/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6887/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6887",
        "id": 1779772749,
        "node_id": "PR_kwDOIPDwls5UL7xR",
        "number": 6887,
        "title": "Update `langchain.chains.create_extraction_chain_pydantic` to parse results successfully",
        "user": {
            "login": "shotarok",
            "id": 1156179,
            "node_id": "MDQ6VXNlcjExNTYxNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1156179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shotarok",
            "html_url": "https://github.com/shotarok",
            "followers_url": "https://api.github.com/users/shotarok/followers",
            "following_url": "https://api.github.com/users/shotarok/following{/other_user}",
            "gists_url": "https://api.github.com/users/shotarok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shotarok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shotarok/subscriptions",
            "organizations_url": "https://api.github.com/users/shotarok/orgs",
            "repos_url": "https://api.github.com/users/shotarok/repos",
            "events_url": "https://api.github.com/users/shotarok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shotarok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hwchase17",
                "id": 11986836,
                "node_id": "MDQ6VXNlcjExOTg2ODM2",
                "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hwchase17",
                "html_url": "https://github.com/hwchase17",
                "followers_url": "https://api.github.com/users/hwchase17/followers",
                "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
                "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
                "organizations_url": "https://api.github.com/users/hwchase17/orgs",
                "repos_url": "https://api.github.com/users/hwchase17/repos",
                "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hwchase17/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-28T21:03:02Z",
        "updated_at": "2023-06-29T04:57:43Z",
        "closed_at": "2023-06-29T04:57:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6887",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6887",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6887.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6887.patch",
            "merged_at": "2023-06-29T04:57:42Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n \r\n- Description: \r\n  - The current code uses `PydanticSchema.schema()` and `_get_extraction_function` at the same time. As a result, a response from OpenAI has two nested `info`, and `PydanticAttrOutputFunctionsParser` fails to parse it. This PR will use the pydantic class given as an arg instead.\r\n- Issue: no related issue yet\r\n- Dependencies: no dependency change\r\n- Tag maintainer: @dev2049\r\n- Twitter handle: @shotarok28\r\n \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6887/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6887/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6886",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6886/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6886/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6886/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6886",
        "id": 1779770001,
        "node_id": "PR_kwDOIPDwls5UL7LI",
        "number": 6886,
        "title": "Harrison/marqo",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T21:00:28Z",
        "updated_at": "2023-07-06T14:01:21Z",
        "closed_at": "2023-07-06T14:01:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6886",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6886",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6886.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6886.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6886/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6886/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6885",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6885/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6885/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6885/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6885",
        "id": 1779701054,
        "node_id": "I_kwDOIPDwls5qFBU-",
        "number": 6885,
        "title": "MultiQueryReceiver does not work",
        "user": {
            "login": "RomanPolach",
            "id": 36015583,
            "node_id": "MDQ6VXNlcjM2MDE1NTgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/36015583?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RomanPolach",
            "html_url": "https://github.com/RomanPolach",
            "followers_url": "https://api.github.com/users/RomanPolach/followers",
            "following_url": "https://api.github.com/users/RomanPolach/following{/other_user}",
            "gists_url": "https://api.github.com/users/RomanPolach/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RomanPolach/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RomanPolach/subscriptions",
            "organizations_url": "https://api.github.com/users/RomanPolach/orgs",
            "repos_url": "https://api.github.com/users/RomanPolach/repos",
            "events_url": "https://api.github.com/users/RomanPolach/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RomanPolach/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-28T20:24:26Z",
        "updated_at": "2023-06-28T20:37:18Z",
        "closed_at": "2023-06-28T20:37:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n langchain-0.0.218\r\nPython 3.10.10\r\n\n\n### Who can help?\n\n\r\n@hwchase17 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nCannot import MultiQueryRetriever, because when i run it, it says:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\langchain\\JETPACK-FLOW-MULTIQUERY.py\", line 14, in <module>\r\n    from langchain.retrievers.multi_query import MultiQueryRetriever\r\n  File \"C:\\Users\\roman\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\langchain\\retrievers\\__init__.py\", line 21, in <module>\r\n    from langchain.retrievers.self_query.base import SelfQueryRetriever\r\n  File \"C:\\Users\\roman\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\langchain\\retrievers\\self_query\\base.py\", line 9, in <module>\r\n    from langchain.chains.query_constructor.base import load_query_constructor_chain\r\n  File \"C:\\Users\\roman\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\langchain\\chains\\query_constructor\\base.py\", line 14, in <module>\r\n    from langchain.chains.query_constructor.parser import get_parser\r\n  File \"C:\\Users\\roman\\AppData\\Local\\Programs\\Python\\Python310\\lib\\site-packages\\langchain\\chains\\query_constructor\\parser.py\", line 9, in <module>\r\n    raise ValueError(\r\nValueError: Lark should be at least version 1.1.5, got 0.12.0\r\n\r\nThere was same error reported in this bug report:\r\nhttps://github.com/hwchase17/langchain/discussions/6068\r\nTheir solution was simply to install langchain version 0.0.201, but for me it does not help, because there is no MultiQueryReceiver in this version. \r\n\r\nI am using: langchain-0.0.218\r\n\r\n\n\n### Expected behavior\n\nDoes not crash, when i try to run it. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6885/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6885/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6884",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6884/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6884/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6884/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6884",
        "id": 1779699848,
        "node_id": "I_kwDOIPDwls5qFBCI",
        "number": 6884,
        "title": "Include pruning on VectorStoreRetrieverMemory",
        "user": {
            "login": "lathamri",
            "id": 51802673,
            "node_id": "MDQ6VXNlcjUxODAyNjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/51802673?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lathamri",
            "html_url": "https://github.com/lathamri",
            "followers_url": "https://api.github.com/users/lathamri/followers",
            "following_url": "https://api.github.com/users/lathamri/following{/other_user}",
            "gists_url": "https://api.github.com/users/lathamri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lathamri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lathamri/subscriptions",
            "organizations_url": "https://api.github.com/users/lathamri/orgs",
            "repos_url": "https://api.github.com/users/lathamri/repos",
            "events_url": "https://api.github.com/users/lathamri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lathamri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-28T20:23:47Z",
        "updated_at": "2023-06-28T20:49:16Z",
        "closed_at": "2023-06-28T20:49:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nSeveral memory storage options have a \"buffer\" type which includes a pruning function that allows users to specify a max_tokens_limit which stops token overflow issues. I'm requesting this be included with the VectorStoreRetrieverMemory as well.\n\n### Motivation\n\nRunning into token overflow issues is annoying and a pruning option is a simple way to get around this when using vector store based memory.\n\n### Your contribution\n\nI'm happy to attempt a solution on this given I'm able to use my company computer this weekend. Otherwise I would appreciate any support people are able to give.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6884/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6884/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6883",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6883/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6883/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6883/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6883",
        "id": 1779642812,
        "node_id": "I_kwDOIPDwls5qEzG8",
        "number": 6883,
        "title": "Incompatibility with latest Anthropic Client",
        "user": {
            "login": "rasharab",
            "id": 3806658,
            "node_id": "MDQ6VXNlcjM4MDY2NTg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3806658?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rasharab",
            "html_url": "https://github.com/rasharab",
            "followers_url": "https://api.github.com/users/rasharab/followers",
            "following_url": "https://api.github.com/users/rasharab/following{/other_user}",
            "gists_url": "https://api.github.com/users/rasharab/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rasharab/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rasharab/subscriptions",
            "organizations_url": "https://api.github.com/users/rasharab/orgs",
            "repos_url": "https://api.github.com/users/rasharab/repos",
            "events_url": "https://api.github.com/users/rasharab/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rasharab/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5483526101,
                "node_id": "LA_kwDOIPDwls8AAAABRtf31Q",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/breaking",
                "name": "breaking",
                "color": "B60205",
                "default": false,
                "description": "Breaking change"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-28T19:50:00Z",
        "updated_at": "2023-10-17T16:06:25Z",
        "closed_at": "2023-10-17T16:06:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nMassive client changes as of this pr:\r\nhttps://github.com/anthropics/anthropic-sdk-python/commit/8d1d6af6527a3ef80b74dc3a466166ab7df057df\r\n\r\nInstalling the latest anthropic client will cause langchain Anthropic LLM utiltiies to fail.\r\nLooks like api_url no longer exists (they've moved to base_url).\r\n\r\n```\r\n   ???\r\nE   pydantic.error_wrappers.ValidationError: 1 validation error for ChatAnthropic\r\nE   __root__\r\nE     __init__() got an unexpected keyword argument 'api_url' (type=type_error)\r\n```\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [x] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Install latest version of anthropic.\r\n2. Attempt to run Anthropic LLM and it will produce a runtime failure about api_url which no longer exists in the Anthropic client initializer.\n\n### Expected behavior\n\nShould work with latest release of Anthropic client.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6883/reactions",
            "total_count": 4,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 4
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6883/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6882",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6882/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6882/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6882/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6882",
        "id": 1779625315,
        "node_id": "PR_kwDOIPDwls5ULaW8",
        "number": 6882,
        "title": "Document loader for Cube Semantic Layer",
        "user": {
            "login": "MikeNitsenko",
            "id": 18572161,
            "node_id": "MDQ6VXNlcjE4NTcyMTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/18572161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MikeNitsenko",
            "html_url": "https://github.com/MikeNitsenko",
            "followers_url": "https://api.github.com/users/MikeNitsenko/followers",
            "following_url": "https://api.github.com/users/MikeNitsenko/following{/other_user}",
            "gists_url": "https://api.github.com/users/MikeNitsenko/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MikeNitsenko/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MikeNitsenko/subscriptions",
            "organizations_url": "https://api.github.com/users/MikeNitsenko/orgs",
            "repos_url": "https://api.github.com/users/MikeNitsenko/repos",
            "events_url": "https://api.github.com/users/MikeNitsenko/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MikeNitsenko/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-28T19:38:42Z",
        "updated_at": "2023-07-06T07:01:55Z",
        "closed_at": "2023-07-05T22:18:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6882",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6882",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6882.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6882.patch",
            "merged_at": "2023-07-05T22:18:13Z"
        },
        "body": "### Description\r\n\r\nThis pull request introduces the \"Cube Semantic Layer\" document loader, which demonstrates the retrieval of Cube's data model metadata in a format suitable for passing to LLMs as embeddings. This enhancement aims to provide contextual information and improve the understanding of data.\r\n\r\nTwitter handle:\r\n@the_cube_dev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6882/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6882/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6881",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6881/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6881/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6881/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6881",
        "id": 1779553687,
        "node_id": "PR_kwDOIPDwls5ULJ78",
        "number": 6881,
        "title": "PowerBI Toolkit additional logs",
        "user": {
            "login": "eavanvalkenburg",
            "id": 13749212,
            "node_id": "MDQ6VXNlcjEzNzQ5MjEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13749212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eavanvalkenburg",
            "html_url": "https://github.com/eavanvalkenburg",
            "followers_url": "https://api.github.com/users/eavanvalkenburg/followers",
            "following_url": "https://api.github.com/users/eavanvalkenburg/following{/other_user}",
            "gists_url": "https://api.github.com/users/eavanvalkenburg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eavanvalkenburg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eavanvalkenburg/subscriptions",
            "organizations_url": "https://api.github.com/users/eavanvalkenburg/orgs",
            "repos_url": "https://api.github.com/users/eavanvalkenburg/repos",
            "events_url": "https://api.github.com/users/eavanvalkenburg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eavanvalkenburg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-28T19:04:05Z",
        "updated_at": "2023-06-29T04:33:33Z",
        "closed_at": "2023-06-29T01:16:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6881",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6881",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6881.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6881.patch",
            "merged_at": "2023-06-29T01:16:41Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\nAdded some additional logs to better be able to troubleshoot and understand the performance of the call to PBI vs the rest of the work.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6881/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6881/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6880",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6880/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6880/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6880/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6880",
        "id": 1779341889,
        "node_id": "PR_kwDOIPDwls5UKaYF",
        "number": 6880,
        "title": "Time To First Token",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T16:55:19Z",
        "updated_at": "2023-08-11T00:18:35Z",
        "closed_at": "2023-08-11T00:18:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6880",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6880",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6880.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6880.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6880/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6880/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6879",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6879/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6879/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6879/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6879",
        "id": 1779327153,
        "node_id": "I_kwDOIPDwls5qDmCx",
        "number": 6879,
        "title": "Allow skipping \"condense_question_prompt\" when using ConversationalRetrievalChain",
        "user": {
            "login": "bastoo0",
            "id": 37190278,
            "node_id": "MDQ6VXNlcjM3MTkwMjc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/37190278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bastoo0",
            "html_url": "https://github.com/bastoo0",
            "followers_url": "https://api.github.com/users/bastoo0/followers",
            "following_url": "https://api.github.com/users/bastoo0/following{/other_user}",
            "gists_url": "https://api.github.com/users/bastoo0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bastoo0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bastoo0/subscriptions",
            "organizations_url": "https://api.github.com/users/bastoo0/orgs",
            "repos_url": "https://api.github.com/users/bastoo0/repos",
            "events_url": "https://api.github.com/users/bastoo0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bastoo0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-28T16:46:24Z",
        "updated_at": "2023-10-25T18:22:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nAdd a parameter to ConversationalRetrievalChain to skip the condense question prompt procedure.\r\n\r\n\r\n### Motivation\r\n\r\nCurrently, when using ConversationalRetrievalChain (with the from_llm() function), we have to run the input through a LLMChain with a default \"condense_question_prompt\" which condenses the chat history and the input to make a standalone question out of it.\r\n\r\nThis could be a good idea, but in my test cases (in French) it performs very poorly when switching between topics. It mixes things up and hallucinates a new question which is nowhere near the original question.\r\n\r\nThe only solution I can think of is to just allow the actual chat history to be sent in the prompt but we can't skip the condense question prompt part. For now, a workaround could be to provide a custom condense prompt asking the LLM to do nothing but that would call the LLM twice for no reason...\r\n\r\n### Your contribution\r\n\r\nSince I am not sure why this isn't already an option, I'd assume it's for a good reason so I'm asking here before thinking of implementing anything.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6879/reactions",
            "total_count": 4,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6879/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6878",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6878/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6878/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6878/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6878",
        "id": 1779314171,
        "node_id": "PR_kwDOIPDwls5UKUPm",
        "number": 6878,
        "title": "delete api_key requirements",
        "user": {
            "login": "kmj4034",
            "id": 68986630,
            "node_id": "MDQ6VXNlcjY4OTg2NjMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/68986630?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kmj4034",
            "html_url": "https://github.com/kmj4034",
            "followers_url": "https://api.github.com/users/kmj4034/followers",
            "following_url": "https://api.github.com/users/kmj4034/following{/other_user}",
            "gists_url": "https://api.github.com/users/kmj4034/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kmj4034/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kmj4034/subscriptions",
            "organizations_url": "https://api.github.com/users/kmj4034/orgs",
            "repos_url": "https://api.github.com/users/kmj4034/repos",
            "events_url": "https://api.github.com/users/kmj4034/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kmj4034/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-28T16:38:01Z",
        "updated_at": "2023-08-11T00:17:26Z",
        "closed_at": "2023-08-11T00:17:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6878",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6878",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6878.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6878.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6878/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6878/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6877",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6877/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6877/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6877/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6877",
        "id": 1779281098,
        "node_id": "I_kwDOIPDwls5qDazK",
        "number": 6877,
        "title": "In memory vector store as python object based on purely numpy ",
        "user": {
            "login": "shroominic",
            "id": 34897716,
            "node_id": "MDQ6VXNlcjM0ODk3NzE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34897716?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shroominic",
            "html_url": "https://github.com/shroominic",
            "followers_url": "https://api.github.com/users/shroominic/followers",
            "following_url": "https://api.github.com/users/shroominic/following{/other_user}",
            "gists_url": "https://api.github.com/users/shroominic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shroominic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shroominic/subscriptions",
            "organizations_url": "https://api.github.com/users/shroominic/orgs",
            "repos_url": "https://api.github.com/users/shroominic/repos",
            "events_url": "https://api.github.com/users/shroominic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shroominic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T16:17:22Z",
        "updated_at": "2023-10-05T16:06:50Z",
        "closed_at": "2023-10-05T16:06:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nCan someone please create and integrate an in memory vector store based on purely numpy? \r\nI don't like that ChromaDB downloads to much deps when I just want something really simple.\r\n\n\n### Motivation\n\nI saw this https://github.com/jdagdelen/hyperDB and it works so this should be in langchain\n\n### Your contribution\n\nI dont have the time rn but I want to publish this idea",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6877/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6877/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6876",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6876/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6876/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6876/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6876",
        "id": 1779222858,
        "node_id": "PR_kwDOIPDwls5UKAFt",
        "number": 6876,
        "title": "Added filter and delete all option to delete function in Pinecone integration, updated base VectorStore's delete function",
        "user": {
            "login": "0xcha05",
            "id": 103983696,
            "node_id": "U_kgDOBjKqUA",
            "avatar_url": "https://avatars.githubusercontent.com/u/103983696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xcha05",
            "html_url": "https://github.com/0xcha05",
            "followers_url": "https://api.github.com/users/0xcha05/followers",
            "following_url": "https://api.github.com/users/0xcha05/following{/other_user}",
            "gists_url": "https://api.github.com/users/0xcha05/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/0xcha05/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/0xcha05/subscriptions",
            "organizations_url": "https://api.github.com/users/0xcha05/orgs",
            "repos_url": "https://api.github.com/users/0xcha05/repos",
            "events_url": "https://api.github.com/users/0xcha05/events{/privacy}",
            "received_events_url": "https://api.github.com/users/0xcha05/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 15,
        "created_at": "2023-06-28T15:41:28Z",
        "updated_at": "2023-07-06T15:36:12Z",
        "closed_at": "2023-07-02T18:46:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6876",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6876",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6876.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6876.patch",
            "merged_at": "2023-07-02T18:46:19Z"
        },
        "body": "### Description:\r\nUpdated the delete function in the Pinecone integration to allow for deletion of vectors by specifying a filter condition, and to delete all vectors in a namespace.\r\n\r\nMade the ids parameter optional in the delete function in the base VectorStore class and allowed for additional keyword arguments.\r\n\r\nUpdated the delete function in several classes (Redis, Chroma, Supabase, Deeplake, Elastic, Weaviate, and Cassandra) to match the changes made in the base VectorStore class. This involved making the ids parameter optional and allowing for additional keyword arguments.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6876/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6876/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6875",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6875/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6875/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6875/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6875",
        "id": 1779179472,
        "node_id": "I_kwDOIPDwls5qDB_Q",
        "number": 6875,
        "title": "I think the SitemapLoader should be as robust with default options as the UnstructuredURLLoader, which has an option continue_on_failure set to true.",
        "user": {
            "login": "Morriz",
            "id": 941865,
            "node_id": "MDQ6VXNlcjk0MTg2NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/941865?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Morriz",
            "html_url": "https://github.com/Morriz",
            "followers_url": "https://api.github.com/users/Morriz/followers",
            "following_url": "https://api.github.com/users/Morriz/following{/other_user}",
            "gists_url": "https://api.github.com/users/Morriz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Morriz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Morriz/subscriptions",
            "organizations_url": "https://api.github.com/users/Morriz/orgs",
            "repos_url": "https://api.github.com/users/Morriz/repos",
            "events_url": "https://api.github.com/users/Morriz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Morriz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T15:16:30Z",
        "updated_at": "2023-10-05T16:06:55Z",
        "closed_at": "2023-10-05T16:06:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n0.0.218\r\nOSX\n\n### Who can help?\n\n@eyurtsev\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Create or find a sitemap with url(s) that run into an infinite redirect loop.\r\n2. Run `SitemapLoader` with that.\r\n3. Observe it crashing\n\n### Expected behavior\n\nThe loader to continue on such errors, or have a config flag to say so, like `UnstructuredURLLoader`'s `continue_on_failure`.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6875/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6875/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6874",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6874/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6874/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6874/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6874",
        "id": 1779151880,
        "node_id": "PR_kwDOIPDwls5UJwfF",
        "number": 6874,
        "title": "Throw error if evaluation key not present",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T15:00:57Z",
        "updated_at": "2023-06-29T17:30:41Z",
        "closed_at": "2023-06-29T17:30:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6874",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6874",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6874.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6874.patch",
            "merged_at": "2023-06-29T17:30:40Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6874/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6874/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6873",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6873/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6873/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6873/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6873",
        "id": 1779065593,
        "node_id": "PR_kwDOIPDwls5UJdTr",
        "number": 6873,
        "title": "Accept Chain",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T14:24:28Z",
        "updated_at": "2023-07-12T06:49:44Z",
        "closed_at": "2023-07-12T06:49:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6873",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6873",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6873.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6873.patch",
            "merged_at": null
        },
        "body": "Relax the requirement that you use a chain factory instead of a chain directly. It wasn't foolproof anyway since sub-chains could have memory as well. Log warning if the chain has memory. Retain ability to pass in factory though\r\n\r\n\r\nWe could alternatively call `clear_memory()` every time we make a prediction but I'm unsure of the side effects of that for certain implementations?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6873/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6872",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6872/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6872/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6872/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6872",
        "id": 1779010819,
        "node_id": "I_kwDOIPDwls5qCY0D",
        "number": 6872,
        "title": "Issue: Unable to store user specific chat history in redis. Using ConversationalRetrievalChain along with ConversationBufferMemory",
        "user": {
            "login": "akshayghatiki311",
            "id": 22797515,
            "node_id": "MDQ6VXNlcjIyNzk3NTE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22797515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akshayghatiki311",
            "html_url": "https://github.com/akshayghatiki311",
            "followers_url": "https://api.github.com/users/akshayghatiki311/followers",
            "following_url": "https://api.github.com/users/akshayghatiki311/following{/other_user}",
            "gists_url": "https://api.github.com/users/akshayghatiki311/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akshayghatiki311/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akshayghatiki311/subscriptions",
            "organizations_url": "https://api.github.com/users/akshayghatiki311/orgs",
            "repos_url": "https://api.github.com/users/akshayghatiki311/repos",
            "events_url": "https://api.github.com/users/akshayghatiki311/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akshayghatiki311/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-28T13:57:42Z",
        "updated_at": "2023-12-13T09:13:59Z",
        "closed_at": "2023-07-20T05:04:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nembeddings = OpenAIEmbeddings(model='text-embedding-ada-002',deployment='XXXXX',chunk_size=1)\r\n\r\ndb = Chroma.from_documents(texts, embeddings)\r\n\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True,chat_memory=ChatMessageHistory(messages=[]))\r\n\r\nmodel = ConversationalRetrievalChain.from_llm(llm=AzureOpenAI(model_name='gpt-35-turbo',deployment_name='XXXXX',temperature=0.7,openai_api_base=os.environ['OPENAI_API_BASE'],openai_api_key=os.environ['OPENAI_API_KEY']), retriever=db.as_retriever(), memory=memory)\r\n\r\nI'm using ConversationalRetrievalChain to query from embeddings and also using memory to store chat history.\r\nI've written a Flask api to fetch result from model.\r\nI'm trying to store memory of each user in redis store, so that there wont be any mix and match in chat history.\r\nFor that I'm trying with below code, but I'm unable to store memory in redis.\r\n        `r = redis.Redis(host='redis-1XXX.c3XXX.ap-south-1-1.ec2.cloud.redislabs.com', port=17506, db=0, password='XXXX')`\r\n        `memory = {}`\r\n        `memory_key = f\"memory_{employee_code}\"`\r\n        `messages = r.get(memory_key)`\r\n        `messages = json.loads(messages)`\r\n        `memory[memory_key] = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True, chat_memory=ChatMessageHistory(messages=messages))`\r\n        `model = ConversationalRetrievalChain.from_llm(llm=AzureOpenAI(model_name='gpt-35-turbo',deployment_name='XXXXXX',temperature=0.7,openai_api_base=os.environ['OPENAI_API_BASE'],openai_api_key=os.environ['OPENAI_API_KEY']), retriever=db.as_retriever(), memory=memory[memory_key])`\r\n        `res=model.run(query)`\r\n        `messages.append({query:res})`\r\n        `r.set(memory_key,json.dumps(messages))`\r\n\r\nThis is not working. Can anyone help me on this?\r\n\r\n\r\nThanks in advance.\r\n\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6872/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6872/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6871",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6871/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6871/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6871/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6871",
        "id": 1778997351,
        "node_id": "PR_kwDOIPDwls5UJOVn",
        "number": 6871,
        "title": "Support named vectors in Qdrant",
        "user": {
            "login": "kacperlukawski",
            "id": 2649301,
            "node_id": "MDQ6VXNlcjI2NDkzMDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2649301?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kacperlukawski",
            "html_url": "https://github.com/kacperlukawski",
            "followers_url": "https://api.github.com/users/kacperlukawski/followers",
            "following_url": "https://api.github.com/users/kacperlukawski/following{/other_user}",
            "gists_url": "https://api.github.com/users/kacperlukawski/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kacperlukawski/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kacperlukawski/subscriptions",
            "organizations_url": "https://api.github.com/users/kacperlukawski/orgs",
            "repos_url": "https://api.github.com/users/kacperlukawski/repos",
            "events_url": "https://api.github.com/users/kacperlukawski/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kacperlukawski/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-28T13:51:35Z",
        "updated_at": "2023-06-29T22:14:23Z",
        "closed_at": "2023-06-29T22:14:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6871",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6871",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6871.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6871.patch",
            "merged_at": "2023-06-29T22:14:22Z"
        },
        "body": "# Description\r\n\r\nThis PR makes it possible to use named vectors from Qdrant in Langchain. That was requested multiple times, as people want to reuse externally created collections in Langchain. It doesn't change anything for the existing applications. The changes were covered with some integration tests and included in the docs.\r\n\r\n## Example\r\n\r\n```python\r\nQdrant.from_documents(\r\n    docs,\r\n    embeddings,\r\n    location=\":memory:\",\r\n    collection_name=\"my_documents\",\r\n    vector_name=\"custom_vector\",\r\n)\r\n```\r\n\r\n### Issue: #2594 \r\n\r\nTagging @rlancemartin & @eyurtsev. I'd appreciate your review.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6871/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6871/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6870",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6870/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6870/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6870/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6870",
        "id": 1778943766,
        "node_id": "I_kwDOIPDwls5qCIcW",
        "number": 6870,
        "title": "SQLDatabaseChain - Questions/error",
        "user": {
            "login": "sofgun1",
            "id": 90384050,
            "node_id": "MDQ6VXNlcjkwMzg0MDUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/90384050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sofgun1",
            "html_url": "https://github.com/sofgun1",
            "followers_url": "https://api.github.com/users/sofgun1/followers",
            "following_url": "https://api.github.com/users/sofgun1/following{/other_user}",
            "gists_url": "https://api.github.com/users/sofgun1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sofgun1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sofgun1/subscriptions",
            "organizations_url": "https://api.github.com/users/sofgun1/orgs",
            "repos_url": "https://api.github.com/users/sofgun1/repos",
            "events_url": "https://api.github.com/users/sofgun1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sofgun1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-28T13:24:59Z",
        "updated_at": "2023-11-22T17:15:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nWhile trying to run example from https://python.langchain.com/docs/modules/chains/popular/sqlite I get the following error:\r\n\r\n\r\n\r\n````\r\n---------------------------------------------------------------------------\r\nTypeError                                 Traceback (most recent call last)\r\nCell In[42], line 1\r\n----> 1 db_chain.run(\"What is the expected assisted goals by Erling Haaland\")\r\n\r\nFile ~/.local/lib/python3.10/site-packages/langchain/chains/base.py:273, in Chain.run(self, callbacks, tags, *args, **kwargs)\r\n    271     if len(args) != 1:\r\n    272         raise ValueError(\"`run` supports only one positional argument.\")\r\n--> 273     return self(args[0], callbacks=callbacks, tags=tags)[_output_key]\r\n    275 if kwargs and not args:\r\n    276     return self(kwargs, callbacks=callbacks, tags=tags)[_output_key]\r\n\r\nFile ~/.local/lib/python3.10/site-packages/langchain/chains/base.py:149, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    147 except (KeyboardInterrupt, Exception) as e:\r\n    148     run_manager.on_chain_error(e)\r\n--> 149     raise e\r\n    150 run_manager.on_chain_end(outputs)\r\n    151 final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    152     inputs, outputs, return_only_outputs\r\n    153 )\r\n\r\nFile ~/.local/lib/python3.10/site-packages/langchain/chains/base.py:143, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    137 run_manager = callback_manager.on_chain_start(\r\n    138     dumpd(self),\r\n    139     inputs,\r\n    140 )\r\n    141 try:\r\n    142     outputs = (\r\n--> 143         self._call(inputs, run_manager=run_manager)\r\n    144         if new_arg_supported\r\n    145         else self._call(inputs)\r\n    146     )\r\n    147 except (KeyboardInterrupt, Exception) as e:\r\n    148     run_manager.on_chain_error(e)\r\n\r\nFile ~/.local/lib/python3.10/site-packages/langchain/chains/sql_database/base.py:105, in SQLDatabaseChain._call(self, inputs, run_manager)\r\n    103 # If not present, then defaults to None which is all tables.\r\n    104 table_names_to_use = inputs.get(\"table_names_to_use\")\r\n--> 105 table_info = self.database.get_table_info(table_names=table_names_to_use)\r\n    106 llm_inputs = {\r\n    107     \"input\": input_text,\r\n    108     \"top_k\": str(self.top_k),\r\n   (...)\r\n    111     \"stop\": [\"\\nSQLResult:\"],\r\n    112 }\r\n    113 intermediate_steps: List = []\r\n\r\nFile ~/.local/lib/python3.10/site-packages/langchain/sql_database.py:289, in SQLDatabase.get_table_info(self, table_names)\r\n    287     table_info += f\"\\n{self._get_table_indexes(table)}\\n\"\r\n    288 if self._sample_rows_in_table_info:\r\n--> 289     table_info += f\"\\n{self._get_sample_rows(table)}\\n\"\r\n    290 if has_extra_info:\r\n    291     table_info += \"*/\"\r\n\r\nFile ~/.local/lib/python3.10/site-packages/langchain/sql_database.py:311, in SQLDatabase._get_sample_rows(self, table)\r\n    308 try:\r\n    309     # get the sample rows\r\n    310     with self._engine.connect() as connection:\r\n--> 311         sample_rows_result = connection.execute(command)  # type: ignore\r\n    312         # shorten values in the sample rows\r\n    313         sample_rows = list(\r\n    314             map(lambda ls: [str(i)[:100] for i in ls], sample_rows_result)\r\n    315         )\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/sqlalchemy/engine/base.py:1413, in Connection.execute(self, statement, parameters, execution_options)\r\n   1411     raise exc.ObjectNotExecutableError(statement) from err\r\n   1412 else:\r\n-> 1413     return meth(\r\n   1414         self,\r\n   1415         distilled_parameters,\r\n   1416         execution_options or NO_OPTIONS,\r\n   1417     )\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/sqlalchemy/sql/elements.py:483, in ClauseElement._execute_on_connection(self, connection, distilled_params, execution_options)\r\n    481     if TYPE_CHECKING:\r\n    482         assert isinstance(self, Executable)\r\n--> 483     return connection._execute_clauseelement(\r\n    484         self, distilled_params, execution_options\r\n    485     )\r\n    486 else:\r\n    487     raise exc.ObjectNotExecutableError(self)\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/sqlalchemy/engine/base.py:1629, in Connection._execute_clauseelement(self, elem, distilled_parameters, execution_options)\r\n   1621 schema_translate_map = execution_options.get(\r\n   1622     \"schema_translate_map\", None\r\n   1623 )\r\n   1625 compiled_cache: Optional[CompiledCacheType] = execution_options.get(\r\n   1626     \"compiled_cache\", self.engine._compiled_cache\r\n   1627 )\r\n-> 1629 compiled_sql, extracted_params, cache_hit = elem._compile_w_cache(\r\n   1630     dialect=dialect,\r\n   1631     compiled_cache=compiled_cache,\r\n   1632     column_keys=keys,\r\n   1633     for_executemany=for_executemany,\r\n   1634     schema_translate_map=schema_translate_map,\r\n   1635     linting=self.dialect.compiler_linting | compiler.WARN_LINTING,\r\n   1636 )\r\n   1637 ret = self._execute_context(\r\n   1638     dialect,\r\n   1639     dialect.execution_ctx_cls._init_compiled,\r\n   (...)\r\n   1647     cache_hit=cache_hit,\r\n   1648 )\r\n   1649 if has_events:\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/sqlalchemy/sql/elements.py:684, in ClauseElement._compile_w_cache(self, dialect, compiled_cache, column_keys, for_executemany, schema_translate_map, **kw)\r\n    682 else:\r\n    683     extracted_params = None\r\n--> 684     compiled_sql = self._compiler(\r\n    685         dialect,\r\n    686         cache_key=elem_cache_key,\r\n    687         column_keys=column_keys,\r\n    688         for_executemany=for_executemany,\r\n    689         schema_translate_map=schema_translate_map,\r\n    690         **kw,\r\n    691     )\r\n    693     if not dialect._supports_statement_cache:\r\n    694         cache_hit = dialect.NO_DIALECT_SUPPORT\r\n\r\nFile /opt/conda/lib/python3.10/site-packages/sqlalchemy/sql/elements.py:288, in CompilerElement._compiler(self, dialect, **kw)\r\n    286 if TYPE_CHECKING:\r\n    287     assert isinstance(self, ClauseElement)\r\n--> 288 return dialect.statement_compiler(dialect, self, **kw)\r\n\r\nFile ~/.local/lib/python3.10/site-packages/pybigquery/sqlalchemy_bigquery.py:137, in BigQueryCompiler.__init__(self, dialect, statement, column_keys, inline, **kwargs)\r\n    135 if isinstance(statement, Column):\r\n    136     kwargs['compile_kwargs'] = util.immutabledict({'include_table': False})\r\n--> 137 super(BigQueryCompiler, self).__init__(dialect, statement, column_keys, inline, **kwargs)\r\n\r\nTypeError: SQLCompiler.__init__() got multiple values for argument 'cache_key'\r\n````\r\n\r\nI use a VertexAI model (MODEL_TEXT_BISON_001) as the LLM.\r\n\r\nSome essential library versions:\r\nlangchain == 0.0.206\r\nSQLAlchemy == 2.0.11\r\nipython == 8.12.1\r\npython == 3.10.10\r\ngoogle-cloud-bigquery == 3.10.0\r\ngoogle-cloud-bigquery-storage == 2.16.2\r\n\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n`db` = SQLDatabase.from_uri(f\"bigquery://{project_id}/{dataset}\")\r\ntoolkit = SQLDatabaseToolkit(llm=llm, db=db)\r\ndb_chain = SQLDatabaseChain.from_llm(llm, db, verbose=True)\r\ndb_chain.run(\"What is the sport that generates highest revenue\")`\n\n### Expected behavior\n\nWhen running the db_chain, I expect to get an answer from the bigquery database",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6870/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6870/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6869",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6869/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6869/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6869/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6869",
        "id": 1778919115,
        "node_id": "I_kwDOIPDwls5qCCbL",
        "number": 6869,
        "title": "how to track token usage for OpenAIEmbeddings? it seems that  get_openai_callback always return 0.",
        "user": {
            "login": "xiaoyhuang123",
            "id": 20966476,
            "node_id": "MDQ6VXNlcjIwOTY2NDc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/20966476?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xiaoyhuang123",
            "html_url": "https://github.com/xiaoyhuang123",
            "followers_url": "https://api.github.com/users/xiaoyhuang123/followers",
            "following_url": "https://api.github.com/users/xiaoyhuang123/following{/other_user}",
            "gists_url": "https://api.github.com/users/xiaoyhuang123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xiaoyhuang123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xiaoyhuang123/subscriptions",
            "organizations_url": "https://api.github.com/users/xiaoyhuang123/orgs",
            "repos_url": "https://api.github.com/users/xiaoyhuang123/repos",
            "events_url": "https://api.github.com/users/xiaoyhuang123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xiaoyhuang123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-28T13:14:02Z",
        "updated_at": "2023-10-06T16:06:44Z",
        "closed_at": "2023-10-06T16:06:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nhow to track token usage for OpenAIEmbeddings? it seems that  get_openai_callback always return 0.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6869/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6869/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6868",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6868/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6868/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6868/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6868",
        "id": 1778835710,
        "node_id": "I_kwDOIPDwls5qBuD-",
        "number": 6868,
        "title": "Word2vec/Glove/FastText embedding support",
        "user": {
            "login": "pradeepdev-1995",
            "id": 41164884,
            "node_id": "MDQ6VXNlcjQxMTY0ODg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/41164884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pradeepdev-1995",
            "html_url": "https://github.com/pradeepdev-1995",
            "followers_url": "https://api.github.com/users/pradeepdev-1995/followers",
            "following_url": "https://api.github.com/users/pradeepdev-1995/following{/other_user}",
            "gists_url": "https://api.github.com/users/pradeepdev-1995/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pradeepdev-1995/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pradeepdev-1995/subscriptions",
            "organizations_url": "https://api.github.com/users/pradeepdev-1995/orgs",
            "repos_url": "https://api.github.com/users/pradeepdev-1995/repos",
            "events_url": "https://api.github.com/users/pradeepdev-1995/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pradeepdev-1995/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T12:26:22Z",
        "updated_at": "2023-09-25T07:22:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIs there any way to store the word2vec/glove/fasttext based embeddings in the vector database using langchain\r\n```\r\npages= \"page content\"\r\nembeddings = OpenAIEmbeddings()\r\npersist_directory = 'db'\r\nvectordb = Chroma.from_documents(documents=pages, embedding=embeddings, persist_directory=persist_directory)\r\n```\r\nshall use **word2vec/glove/fasttext**  embeddings instead of **OpenAIEmbeddings()** in the above code?\r\nif possible then what is the syntax for that?\n\n### Motivation\n\nFor using native embedding formats\n\n### Your contribution\n\nFor using native embedding formats like word2vec/glove/fasttext in langchain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6868/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6868/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6867",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6867/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6867/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6867/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6867",
        "id": 1778781194,
        "node_id": "PR_kwDOIPDwls5UIfVs",
        "number": 6867,
        "title": "add with score option for max marginal relevance",
        "user": {
            "login": "rian-dolphin",
            "id": 34861538,
            "node_id": "MDQ6VXNlcjM0ODYxNTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/34861538?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rian-dolphin",
            "html_url": "https://github.com/rian-dolphin",
            "followers_url": "https://api.github.com/users/rian-dolphin/followers",
            "following_url": "https://api.github.com/users/rian-dolphin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rian-dolphin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rian-dolphin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rian-dolphin/subscriptions",
            "organizations_url": "https://api.github.com/users/rian-dolphin/orgs",
            "repos_url": "https://api.github.com/users/rian-dolphin/repos",
            "events_url": "https://api.github.com/users/rian-dolphin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rian-dolphin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T11:50:30Z",
        "updated_at": "2023-06-29T05:00:35Z",
        "closed_at": "2023-06-29T05:00:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6867",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6867",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6867.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6867.patch",
            "merged_at": "2023-06-29T05:00:34Z"
        },
        "body": "### Adding the functionality to return the scores with retrieved documents when using the max marginal relevance\r\n  - Description: Add the method `max_marginal_relevance_search_with_score_by_vector` to the FAISS wrapper. Functionality operates the same as `similarity_search_with_score_by_vector` except for using the max marginal relevance retrieval framework like is used in the `max_marginal_relevance_search_by_vector` method.\r\n  - Dependencies: None\r\n  - Tag maintainer: @rlancemartin @eyurtsev \r\n  - Twitter handle: @RianDolphin\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6867/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6867/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6866",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6866/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6866/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6866/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6866",
        "id": 1778756225,
        "node_id": "I_kwDOIPDwls5qBaqB",
        "number": 6866,
        "title": "PGVector is Lacking Basic Features",
        "user": {
            "login": "notchatbot",
            "id": 137807081,
            "node_id": "U_kgDOCDbE6Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/137807081?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/notchatbot",
            "html_url": "https://github.com/notchatbot",
            "followers_url": "https://api.github.com/users/notchatbot/followers",
            "following_url": "https://api.github.com/users/notchatbot/following{/other_user}",
            "gists_url": "https://api.github.com/users/notchatbot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/notchatbot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/notchatbot/subscriptions",
            "organizations_url": "https://api.github.com/users/notchatbot/orgs",
            "repos_url": "https://api.github.com/users/notchatbot/repos",
            "events_url": "https://api.github.com/users/notchatbot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/notchatbot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-28T11:32:05Z",
        "updated_at": "2023-10-16T16:06:54Z",
        "closed_at": "2023-10-16T16:06:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nPGVector lacks Upsert and deletion capabilities.\r\n\r\nI have to custom create this functionality.\n\n### Motivation\n\nI want to use PGVector because it's easy to implement and I don't require to deal with DB vector providers.\n\n### Your contribution\n\nIf you deem this useful I will try propose a pull request.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6866/reactions",
            "total_count": 6,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6866/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6865",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6865/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6865/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6865/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6865",
        "id": 1778692437,
        "node_id": "PR_kwDOIPDwls5UIMRB",
        "number": 6865,
        "title": "added example notebook - use custom functions with openai agent",
        "user": {
            "login": "shashankdeshpande",
            "id": 47742503,
            "node_id": "MDQ6VXNlcjQ3NzQyNTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/47742503?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shashankdeshpande",
            "html_url": "https://github.com/shashankdeshpande",
            "followers_url": "https://api.github.com/users/shashankdeshpande/followers",
            "following_url": "https://api.github.com/users/shashankdeshpande/following{/other_user}",
            "gists_url": "https://api.github.com/users/shashankdeshpande/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shashankdeshpande/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shashankdeshpande/subscriptions",
            "organizations_url": "https://api.github.com/users/shashankdeshpande/orgs",
            "repos_url": "https://api.github.com/users/shashankdeshpande/repos",
            "events_url": "https://api.github.com/users/shashankdeshpande/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shashankdeshpande/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T10:48:46Z",
        "updated_at": "2023-06-29T05:07:34Z",
        "closed_at": "2023-06-29T05:07:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6865",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6865",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6865.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6865.patch",
            "merged_at": "2023-06-29T05:07:33Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6865/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6865/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6864",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6864/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6864/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6864/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6864",
        "id": 1778638674,
        "node_id": "PR_kwDOIPDwls5UIAcr",
        "number": 6864,
        "title": "Chroma: add vector search with scores",
        "user": {
            "login": "jan-kubica",
            "id": 104276362,
            "node_id": "U_kgDOBjchig",
            "avatar_url": "https://avatars.githubusercontent.com/u/104276362?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jan-kubica",
            "html_url": "https://github.com/jan-kubica",
            "followers_url": "https://api.github.com/users/jan-kubica/followers",
            "following_url": "https://api.github.com/users/jan-kubica/following{/other_user}",
            "gists_url": "https://api.github.com/users/jan-kubica/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jan-kubica/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jan-kubica/subscriptions",
            "organizations_url": "https://api.github.com/users/jan-kubica/orgs",
            "repos_url": "https://api.github.com/users/jan-kubica/repos",
            "events_url": "https://api.github.com/users/jan-kubica/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jan-kubica/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T10:14:00Z",
        "updated_at": "2023-09-29T13:25:41Z",
        "closed_at": "2023-07-06T14:01:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6864",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6864",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6864.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6864.patch",
            "merged_at": "2023-07-06T14:01:56Z"
        },
        "body": "  - Description: Adding to Chroma integration the option to run a similarity search by a vector with relevance scores. Fixing two minor typos.\r\n  \r\n  - Issue: The \"lambda_mult\" typo is related to #4861 \r\n  \r\n  - Maintainer: @rlancemartin, @eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6864/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6864/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6863",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6863/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6863/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6863/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6863",
        "id": 1778573038,
        "node_id": "PR_kwDOIPDwls5UHyAp",
        "number": 6863,
        "title": "Increase flexibility of ElasticVectorSearch ",
        "user": {
            "login": "mertkayhan",
            "id": 42064129,
            "node_id": "MDQ6VXNlcjQyMDY0MTI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/42064129?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mertkayhan",
            "html_url": "https://github.com/mertkayhan",
            "followers_url": "https://api.github.com/users/mertkayhan/followers",
            "following_url": "https://api.github.com/users/mertkayhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/mertkayhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mertkayhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mertkayhan/subscriptions",
            "organizations_url": "https://api.github.com/users/mertkayhan/orgs",
            "repos_url": "https://api.github.com/users/mertkayhan/repos",
            "events_url": "https://api.github.com/users/mertkayhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mertkayhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 20,
        "created_at": "2023-06-28T09:34:52Z",
        "updated_at": "2023-11-17T12:34:26Z",
        "closed_at": "2023-11-13T22:36:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6863",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6863",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6863.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6863.patch",
            "merged_at": "2023-11-13T22:36:03Z"
        },
        "body": "Hey @rlancemartin, @eyurtsev ,\r\n\r\nI did some minimal changes to the `ElasticVectorSearch` client so that it plays better with existing ES indices. \r\n\r\nMain changes are as follows:\r\n\r\n1. You can pass the dense vector field name into `_default_script_query`\r\n2. You can pass a custom script query implementation and the respective parameters to `similarity_search_with_score`\r\n3. You can pass functions for building page content and metadata for the resulting `Document`\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  4. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6863/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6863/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6862",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6862/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6862/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6862/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6862",
        "id": 1778509000,
        "node_id": "PR_kwDOIPDwls5UHkCu",
        "number": 6862,
        "title": "Add `call_actor_task` to the Apify integration",
        "user": {
            "login": "jirimoravcik",
            "id": 951187,
            "node_id": "MDQ6VXNlcjk1MTE4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/951187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jirimoravcik",
            "html_url": "https://github.com/jirimoravcik",
            "followers_url": "https://api.github.com/users/jirimoravcik/followers",
            "following_url": "https://api.github.com/users/jirimoravcik/following{/other_user}",
            "gists_url": "https://api.github.com/users/jirimoravcik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jirimoravcik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jirimoravcik/subscriptions",
            "organizations_url": "https://api.github.com/users/jirimoravcik/orgs",
            "repos_url": "https://api.github.com/users/jirimoravcik/repos",
            "events_url": "https://api.github.com/users/jirimoravcik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jirimoravcik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T08:58:02Z",
        "updated_at": "2023-06-29T05:13:48Z",
        "closed_at": "2023-06-29T05:13:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6862",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6862",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6862.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6862.patch",
            "merged_at": "2023-06-29T05:13:47Z"
        },
        "body": "A user has been testing the Apify integration inside langchain and he was not able to run saved Actor tasks.\r\n\r\nThis PR adds support for calling saved Actor tasks on the Apify platform to the existing integration. The structure of very similar to the one of calling Actors.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6862/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6861",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6861/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6861/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6861/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6861",
        "id": 1778460142,
        "node_id": "I_kwDOIPDwls5qASXu",
        "number": 6861,
        "title": "sqldatabasechain result incomplete",
        "user": {
            "login": "xvgaoxing2023",
            "id": 126930926,
            "node_id": "U_kgDOB5DP7g",
            "avatar_url": "https://avatars.githubusercontent.com/u/126930926?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xvgaoxing2023",
            "html_url": "https://github.com/xvgaoxing2023",
            "followers_url": "https://api.github.com/users/xvgaoxing2023/followers",
            "following_url": "https://api.github.com/users/xvgaoxing2023/following{/other_user}",
            "gists_url": "https://api.github.com/users/xvgaoxing2023/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xvgaoxing2023/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xvgaoxing2023/subscriptions",
            "organizations_url": "https://api.github.com/users/xvgaoxing2023/orgs",
            "repos_url": "https://api.github.com/users/xvgaoxing2023/repos",
            "events_url": "https://api.github.com/users/xvgaoxing2023/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xvgaoxing2023/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-28T08:26:32Z",
        "updated_at": "2023-12-08T16:06:35Z",
        "closed_at": "2023-12-08T16:06:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\ndb_chain = SQLDatabaseChain(llm=llm, database=db, prompt=PROMPT, verbose=True, return_intermediate_steps=True, top_k=3)\r\nresult = db_chain(\"Make a list of those taking the exam\")\r\nresult['result']  is incomplete\uff0cwhy \uff1ftoken ?\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6861/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6861/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6859",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6859/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6859/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6859/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6859",
        "id": 1778444316,
        "node_id": "PR_kwDOIPDwls5UHWEf",
        "number": 6859,
        "title": "feat: ctransformers support async chain",
        "user": {
            "login": "semoal",
            "id": 22656541,
            "node_id": "MDQ6VXNlcjIyNjU2NTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/22656541?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/semoal",
            "html_url": "https://github.com/semoal",
            "followers_url": "https://api.github.com/users/semoal/followers",
            "following_url": "https://api.github.com/users/semoal/following{/other_user}",
            "gists_url": "https://api.github.com/users/semoal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/semoal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/semoal/subscriptions",
            "organizations_url": "https://api.github.com/users/semoal/orgs",
            "repos_url": "https://api.github.com/users/semoal/repos",
            "events_url": "https://api.github.com/users/semoal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/semoal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-28T08:16:18Z",
        "updated_at": "2023-07-10T08:23:49Z",
        "closed_at": "2023-07-10T08:23:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6859",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6859",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6859.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6859.patch",
            "merged_at": "2023-07-10T08:23:41Z"
        },
        "body": "  - Description: Adding async method for CTransformers \r\n  - Issue: I've found impossible without this code to run Websockets inside a FastAPI micro service and a CTransformers model.\r\n  - Tag maintainer: Not necessary yet, I don't like to mention directly \r\n  - Twitter handle: @_semoal\r\n  - \r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: I've found impossible without this code to run Websockets inside a FastAPI micro service and a CTransformers model.\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6859/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6859/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6858",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6858/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6858/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6858/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6858",
        "id": 1778304792,
        "node_id": "PR_kwDOIPDwls5UG48_",
        "number": 6858,
        "title": "Provided default values for tags and inheritable_tags args in BaseRun\u2026",
        "user": {
            "login": "Siraj-Aizlewood",
            "id": 31565026,
            "node_id": "MDQ6VXNlcjMxNTY1MDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/31565026?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Siraj-Aizlewood",
            "html_url": "https://github.com/Siraj-Aizlewood",
            "followers_url": "https://api.github.com/users/Siraj-Aizlewood/followers",
            "following_url": "https://api.github.com/users/Siraj-Aizlewood/following{/other_user}",
            "gists_url": "https://api.github.com/users/Siraj-Aizlewood/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Siraj-Aizlewood/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Siraj-Aizlewood/subscriptions",
            "organizations_url": "https://api.github.com/users/Siraj-Aizlewood/orgs",
            "repos_url": "https://api.github.com/users/Siraj-Aizlewood/repos",
            "events_url": "https://api.github.com/users/Siraj-Aizlewood/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Siraj-Aizlewood/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T06:35:39Z",
        "updated_at": "2023-06-30T05:01:09Z",
        "closed_at": "2023-06-30T05:01:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6858",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6858",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6858.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6858.patch",
            "merged_at": "2023-06-30T05:01:08Z"
        },
        "body": "\u2026Manager\r\n\r\nTo avoid the error message:\r\n\r\nTypeError: BaseRunManager.__init__() missing 2 required keyword-only arguments: 'tags' and 'inheritable_tags'\r\n\r\nwhen running AsyncCallbackManagerForChainRun (from langchain.callbacks.manager import AsyncCallbackManagerForChainRun), provided default values for tags and inheritable_tages of empty lists in manager.py BaseRunManager.\r\n\r\n\r\n  - Description: In manager.py, `BaseRunManager`, default values were provided for the `__init__` args `tags` and `inheritable_tags`. They default to empty lists (`[]`).\r\n  - Issue: When trying to use Nvidia NeMo Guardrails with LangChain, the following exception was raised:\r\n  \r\n```\r\n[autoreload of chatbot failed: Traceback (most recent call last):\r\n  File \"C:\\Users\\Siraj\\anaconda3\\envs\\redacre_test_1\\lib\\site-packages\\IPython\\extensions\\autoreload.py\", line 276, in check\r\n    superreload(m, reload, self.old_objects)\r\n  File \"C:\\Users\\Siraj\\anaconda3\\envs\\redacre_test_1\\lib\\site-packages\\IPython\\extensions\\autoreload.py\", line 475, in superreload\r\n    module = reload(module)\r\n  File \"C:\\Users\\Siraj\\anaconda3\\envs\\redacre_test_1\\lib\\importlib\\__init__.py\", line 169, in reload\r\n    _bootstrap._exec(spec, module)\r\n  File \"<frozen importlib._bootstrap>\", line 619, in _exec\r\n  File \"<frozen importlib._bootstrap_external>\", line 883, in exec_module\r\n  File \"<frozen importlib._bootstrap>\", line 241, in _call_with_frames_removed\r\n  File \"C:\\Users\\Siraj\\Documents\\Personal\\Work\\Aurelio\\20230530 Red Acre\\automationai\\backend\\chatbot\\automationai\\chatbot.py\", line 9, in <module>\r\n    from nemoguardrails import LLMRails, RailsConfig\r\n  File \"C:\\Users\\Siraj\\anaconda3\\envs\\redacre_test_1\\lib\\site-packages\\nemoguardrails\\__init__.py\", line 17, in <module>\r\n    from .rails import LLMRails, RailsConfig\r\n  File \"C:\\Users\\Siraj\\anaconda3\\envs\\redacre_test_1\\lib\\site-packages\\nemoguardrails\\rails\\__init__.py\", line 17, in <module>\r\n    from .llm.llmrails import LLMRails\r\n  File \"C:\\Users\\Siraj\\anaconda3\\envs\\redacre_test_1\\lib\\site-packages\\nemoguardrails\\rails\\llm\\llmrails.py\", line 26, in <module>\r\n    from nemoguardrails.actions.llm.generation import LLMGenerationActions\r\nTypeError: BaseRunManager.__init__() missing 2 required keyword-only arguments: 'tags' and 'inheritable_tags'\r\n]\r\nTraceback (most recent call last):\r\n\r\n  File ~\\anaconda3\\envs\\redacre_test_1\\lib\\site-packages\\spyder_kernels\\py3compat.py:356 in compat_exec\r\n    exec(code, globals, locals)\r\n\r\n  File c:\\users\\siraj\\documents\\personal\\work\\aurelio\\20230530 red acre\\automationai\\backend\\chatbot\\automationai\\sra_test_1.py:8\r\n    from chatbot import Chatbot\r\n\r\n  File ~\\Documents\\Personal\\Work\\Aurelio\\20230530 Red Acre\\automationai\\backend\\chatbot\\automationai\\chatbot.py:9\r\n    from nemoguardrails import LLMRails, RailsConfig\r\n\r\n  File ~\\anaconda3\\envs\\redacre_test_1\\lib\\site-packages\\nemoguardrails\\__init__.py:17\r\n    from .rails import LLMRails, RailsConfig\r\n\r\n  File ~\\anaconda3\\envs\\redacre_test_1\\lib\\site-packages\\nemoguardrails\\rails\\__init__.py:17\r\n    from .llm.llmrails import LLMRails\r\n\r\n  File ~\\anaconda3\\envs\\redacre_test_1\\lib\\site-packages\\nemoguardrails\\rails\\llm\\llmrails.py:26\r\n    from nemoguardrails.actions.llm.generation import LLMGenerationActions\r\n\r\n  File ~\\anaconda3\\envs\\redacre_test_1\\lib\\site-packages\\nemoguardrails\\actions\\llm\\generation.py:46\r\n    from nemoguardrails.logging.callbacks import logging_callbacks\r\n\r\n  File ~\\anaconda3\\envs\\redacre_test_1\\lib\\site-packages\\nemoguardrails\\logging\\callbacks.py:237\r\n    logging_callback_manager_for_chain = AsyncCallbackManagerForChainRun(\r\n\r\nTypeError: BaseRunManager.__init__() missing 2 required keyword-only arguments: 'tags' and 'inheritable_tags'\r\n```\r\nI was using the NeMo Guardrails `LLMRails` module to create an app objects:\r\n\r\n`self.app = LLMRails(config, verbose =True)`\r\n\r\nThe I tried to use:\r\n\r\n`bot_message = self.app.generate_async(prompt=self.sys_msg, messages=history)`\r\n\r\nThe LLMRails` class makes use of `LLMGenerationActions`, which comes from:\r\n\r\n`from nemoguardrails.actions.llm.generation import LLMGenerationActions`\r\n\r\nIn the generations.py module we have:\r\n\r\n`from nemoguardrails.logging.callbacks import logging_callbacks`\r\n\r\nand in callbacks.py, we have \r\n\r\n`from langchain.callbacks.manager import AsyncCallbackManagerForChainRun`\r\n\r\nand the code (Let's call this 'Code A'):\r\n\r\n```\r\nlogging_callback_manager_for_chain = AsyncCallbackManagerForChainRun(\r\n    run_id=uuid.uuid4(),\r\n    parent_run_id=None,\r\n    handlers=handlers,\r\n    inheritable_handlers=handlers,\r\n)\r\n```\r\n\r\nIn the LangChain manager.py module, the class `AsyncCallbackManagerForChainRun` inherits the `AsyncRunManager` class, which in turn inherits the `BaseRunManager` class, which previously had (let's call this 'Code B'):\r\n\r\n```\r\ndef __init__(\r\n        self,\r\n        *,\r\n        run_id: UUID,\r\n        handlers: List[BaseCallbackHandler],\r\n        inheritable_handlers: List[BaseCallbackHandler],\r\n        parent_run_id: Optional[UUID] = None,\r\n        tags: List[str],\r\n        inheritable_tags: List[str],\r\n    )\r\n```\r\n  \r\n  As you can see, Code A fails to provide the tags and inheritable_tags arguments. My guess was that these can be optional arguments, but perhaps I'm wrong. So, I changed Code B to:\r\n  \r\n```\r\n  def __init__(\r\n        self,\r\n        *,\r\n        run_id: UUID,\r\n        handlers: List[BaseCallbackHandler],\r\n        inheritable_handlers: List[BaseCallbackHandler],\r\n        parent_run_id: Optional[UUID] = None,\r\n        tags: List[str]=[],\r\n        inheritable_tags: List[str]=[],\r\n    )\r\n```\r\n  \r\n  - Dependencies: The fix doesn't require any dependencies. Although to recreate the issue you probably need to install Nvidia NeMo Guardrails.\r\n  - Tag maintainer: @agola11 @vowelparrot\r\n  - Twitter handle: n/a.\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6858/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6857",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6857/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6857/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6857/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6857",
        "id": 1778278309,
        "node_id": "PR_kwDOIPDwls5UGzL-",
        "number": 6857,
        "title": "bump version to 218",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T06:13:50Z",
        "updated_at": "2023-06-28T06:36:39Z",
        "closed_at": "2023-06-28T06:36:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6857",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6857",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6857.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6857.patch",
            "merged_at": "2023-06-28T06:36:38Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6857/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6857/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6856",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6856/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6856/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6856/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6856",
        "id": 1778218848,
        "node_id": "PR_kwDOIPDwls5UGmnw",
        "number": 6856,
        "title": "Implement timeout cancellation on Chain base class",
        "user": {
            "login": "alessarcross",
            "id": 97063602,
            "node_id": "U_kgDOBckSsg",
            "avatar_url": "https://avatars.githubusercontent.com/u/97063602?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alessarcross",
            "html_url": "https://github.com/alessarcross",
            "followers_url": "https://api.github.com/users/alessarcross/followers",
            "following_url": "https://api.github.com/users/alessarcross/following{/other_user}",
            "gists_url": "https://api.github.com/users/alessarcross/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alessarcross/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alessarcross/subscriptions",
            "organizations_url": "https://api.github.com/users/alessarcross/orgs",
            "repos_url": "https://api.github.com/users/alessarcross/repos",
            "events_url": "https://api.github.com/users/alessarcross/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alessarcross/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-28T05:18:27Z",
        "updated_at": "2023-11-07T03:53:50Z",
        "closed_at": "2023-11-07T03:53:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6856",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6856",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6856.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6856.patch",
            "merged_at": null
        },
        "body": " **Description:** Implement base Chain cancellation policy (execute a Chain\u2019s cancellation after n milliseconds), similar to the implementation in the JS repository\r\n ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6856/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6855",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6855/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6855/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6855/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6855",
        "id": 1778193487,
        "node_id": "PR_kwDOIPDwls5UGhMz",
        "number": 6855,
        "title": "support max_chunk_bytes in OpensearchVectorSearch to pass down to bulk",
        "user": {
            "login": "superpan",
            "id": 201234,
            "node_id": "MDQ6VXNlcjIwMTIzNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/201234?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/superpan",
            "html_url": "https://github.com/superpan",
            "followers_url": "https://api.github.com/users/superpan/followers",
            "following_url": "https://api.github.com/users/superpan/following{/other_user}",
            "gists_url": "https://api.github.com/users/superpan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/superpan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/superpan/subscriptions",
            "organizations_url": "https://api.github.com/users/superpan/orgs",
            "repos_url": "https://api.github.com/users/superpan/repos",
            "events_url": "https://api.github.com/users/superpan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/superpan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-28T05:00:15Z",
        "updated_at": "2023-06-30T06:40:02Z",
        "closed_at": "2023-06-29T22:50:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6855",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6855",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6855.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6855.patch",
            "merged_at": "2023-06-29T22:50:08Z"
        },
        "body": "Support `max_chunk_bytes` kwargs to pass down to `buik` helper, in order to support the request limits in Opensearch locally and in AWS.\r\n\r\n@rlancemartin, @eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6855/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6855/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6854",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6854/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6854/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6854/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6854",
        "id": 1778137863,
        "node_id": "I_kwDOIPDwls5p_DsH",
        "number": 6854,
        "title": "Different results when loading Chroma() vs Chroma.from_documents",
        "user": {
            "login": "adityakadrekar16",
            "id": 43070287,
            "node_id": "MDQ6VXNlcjQzMDcwMjg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/43070287?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adityakadrekar16",
            "html_url": "https://github.com/adityakadrekar16",
            "followers_url": "https://api.github.com/users/adityakadrekar16/followers",
            "following_url": "https://api.github.com/users/adityakadrekar16/following{/other_user}",
            "gists_url": "https://api.github.com/users/adityakadrekar16/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adityakadrekar16/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adityakadrekar16/subscriptions",
            "organizations_url": "https://api.github.com/users/adityakadrekar16/orgs",
            "repos_url": "https://api.github.com/users/adityakadrekar16/repos",
            "events_url": "https://api.github.com/users/adityakadrekar16/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adityakadrekar16/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-28T04:06:56Z",
        "updated_at": "2023-12-14T09:25:45Z",
        "closed_at": "2023-10-16T16:06:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.217\r\npython=3.10\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nHi! I am working on a 'question answering' use case. I am loading PDF docs which I am storing in the Chroma vectorDB along with the instructor embeddings. I use the following command to do that:\r\n```\r\nvectordb = Chroma.from_documents(documents=texts, \r\n                                 embedding=embedding,\r\n                                 persist_directory='db')\r\n```\r\nHere I am storing the vectordb on my local machine in the 'db' folder.\r\nWhen I use this vectordb as retriever and then use RetrievalQA to ask questions I get 'X' answers.\r\n\r\nAfter storing the vectordb on my local, the next time I directly load the db from the directory:\r\n`vectordb = Chroma(persist_directory='db', embedding_function=embedding)`\r\n\r\nWhen I use this vectordb as retriever and then use RetrievalQA to ask the same questions, I get different answers.\r\n\r\nI hope I was able to explain the issue properly.\r\n\r\n### Expected behavior\r\n\r\nMy understanding is that I should get the same answer after loading the vectordb from my local. Why am I getting different answers?  Is this an issue with langchain or am I doing this incorrectly? Can you please help me understand?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6854/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6854/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6853",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6853/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6853/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6853/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6853",
        "id": 1778125158,
        "node_id": "PR_kwDOIPDwls5UGSZ5",
        "number": 6853,
        "title": "Support AwaDB for macosx arm64 platform",
        "user": {
            "login": "ljeagle",
            "id": 15918167,
            "node_id": "MDQ6VXNlcjE1OTE4MTY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15918167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ljeagle",
            "html_url": "https://github.com/ljeagle",
            "followers_url": "https://api.github.com/users/ljeagle/followers",
            "following_url": "https://api.github.com/users/ljeagle/following{/other_user}",
            "gists_url": "https://api.github.com/users/ljeagle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ljeagle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ljeagle/subscriptions",
            "organizations_url": "https://api.github.com/users/ljeagle/orgs",
            "repos_url": "https://api.github.com/users/ljeagle/repos",
            "events_url": "https://api.github.com/users/ljeagle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ljeagle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T03:50:48Z",
        "updated_at": "2023-06-28T03:56:54Z",
        "closed_at": "2023-06-28T03:56:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6853",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6853",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6853.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6853.patch",
            "merged_at": null
        },
        "body": "Upgrade the version of AwaDB for supporting macosx arm64 platform\r\n\r\nPlease review, thanks!  @rlancemartin, @eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6853/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6853/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6852",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6852/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6852/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6852/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6852",
        "id": 1778086793,
        "node_id": "PR_kwDOIPDwls5UGKK0",
        "number": 6852,
        "title": "chat_models: Add support for calling Poe",
        "user": {
            "login": "BrendanGraham14",
            "id": 13935040,
            "node_id": "MDQ6VXNlcjEzOTM1MDQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/13935040?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BrendanGraham14",
            "html_url": "https://github.com/BrendanGraham14",
            "followers_url": "https://api.github.com/users/BrendanGraham14/followers",
            "following_url": "https://api.github.com/users/BrendanGraham14/following{/other_user}",
            "gists_url": "https://api.github.com/users/BrendanGraham14/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BrendanGraham14/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BrendanGraham14/subscriptions",
            "organizations_url": "https://api.github.com/users/BrendanGraham14/orgs",
            "repos_url": "https://api.github.com/users/BrendanGraham14/repos",
            "events_url": "https://api.github.com/users/BrendanGraham14/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BrendanGraham14/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899415699,
                "node_id": "LA_kwDOIPDwls8AAAABJAcmkw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/llms",
                "name": "llms",
                "color": "7CDBB2",
                "default": false,
                "description": ""
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-28T02:58:12Z",
        "updated_at": "2023-10-06T21:12:24Z",
        "closed_at": "2023-10-06T20:58:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6852",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6852",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6852.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6852.patch",
            "merged_at": null
        },
        "body": "- Add a ChatModel to call Poe bots\r\n- Dependencies: fastapi-poe (optional project-wide)\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6852/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6852/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6851",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6851/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6851/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6851/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6851",
        "id": 1777979636,
        "node_id": "I_kwDOIPDwls5p-dD0",
        "number": 6851,
        "title": "max_length support for HuggingFaceTextGenInference",
        "user": {
            "login": "sioan",
            "id": 21059313,
            "node_id": "MDQ6VXNlcjIxMDU5MzEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/21059313?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sioan",
            "html_url": "https://github.com/sioan",
            "followers_url": "https://api.github.com/users/sioan/followers",
            "following_url": "https://api.github.com/users/sioan/following{/other_user}",
            "gists_url": "https://api.github.com/users/sioan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sioan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sioan/subscriptions",
            "organizations_url": "https://api.github.com/users/sioan/orgs",
            "repos_url": "https://api.github.com/users/sioan/repos",
            "events_url": "https://api.github.com/users/sioan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sioan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-28T01:07:18Z",
        "updated_at": "2023-12-13T16:38:12Z",
        "closed_at": "2023-06-28T09:31:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nTL;DR\r\nThe error is reported in the error reproduction section.\r\n\r\nHere's a guess at the solution:\r\n\r\nHuggingFaceTextGenInference [docs](https://python.langchain.com/docs/modules/model_io/models/llms/integrations/huggingface_textgen_inference) and [code](https://github.com/hwchase17/langchain/blob/master/langchain/llms/huggingface_text_gen_inference.py#L77-L90) don't yet support  [huggingface's native max_length generation kwarg](https://huggingface.co/docs/transformers/main_classes/text_generation#transformers.GenerationConfig.max_length)\r\n\r\nI'm guessing  adding max_length below max_new_tokens in places like [here](https://github.com/hwchase17/langchain/blob/master/langchain/llms/huggingface_text_gen_inference.py#L142)\r\nwould provide the desired behavior? Ctrl-F for max_length shows other places the addition may be required\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [x] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nThe  code snippet below works for local models\r\n\r\n```\r\npipe = pipeline(\"text-generation\", model=hf_llm, tokenizer=tokenizer, max_new_tokens=200)\r\nllm = HuggingFacePipeline(pipeline=pipe)\r\n\r\nchain = RetrievalQAWithSourcesChain.from_chain_type(\r\n    llm, chain_type=\"stuff\", retriever=db.as_retriever()\r\n)\r\nchain(\r\n    {\"question\": \"What did the president say about Justice Breyer\"},\r\n    return_only_outputs=True,\r\n)\r\n```\r\n\r\nHowever, when replacing the llm definition with this snippet\r\n\r\n```\r\n  llm = HuggingFaceTextGenInference(\r\n      inference_server_url=\"http://hf-inference-server:80/\",\r\n      max_new_tokens=256,    \r\n      top_k=10,\r\n      top_p=0.95,\r\n      typical_p=0.95,\r\n      temperature=0.01,\r\n      repetition_penalty=1.03,\r\n  )\r\n```\r\nYields this error \r\n```\r\nValidationError: Input validation error: `inputs` tokens + `max_new_tokens` must be <= 1512. Given: 2342 `inputs` \r\ntokens and 512 `max_new_tokens`\r\n```\r\nThe code snippet that fails here works on it's own when used like this\r\n\r\n`generated_text = llm(\"<|prompter|>What is the capital of Hungary?<|endoftext|><|assistant|>\")`\r\n\r\n### Expected behavior\r\n\r\nExpecting a text based answer with no error.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6851/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6851/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6850",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6850/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6850/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6850/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6850",
        "id": 1777879256,
        "node_id": "I_kwDOIPDwls5p-EjY",
        "number": 6850,
        "title": "UnpicklingError: pickle data was truncated",
        "user": {
            "login": "heavenkiller2018",
            "id": 45555611,
            "node_id": "MDQ6VXNlcjQ1NTU1NjEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/45555611?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/heavenkiller2018",
            "html_url": "https://github.com/heavenkiller2018",
            "followers_url": "https://api.github.com/users/heavenkiller2018/followers",
            "following_url": "https://api.github.com/users/heavenkiller2018/following{/other_user}",
            "gists_url": "https://api.github.com/users/heavenkiller2018/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/heavenkiller2018/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/heavenkiller2018/subscriptions",
            "organizations_url": "https://api.github.com/users/heavenkiller2018/orgs",
            "repos_url": "https://api.github.com/users/heavenkiller2018/repos",
            "events_url": "https://api.github.com/users/heavenkiller2018/events{/privacy}",
            "received_events_url": "https://api.github.com/users/heavenkiller2018/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-27T23:10:44Z",
        "updated_at": "2023-10-05T16:07:05Z",
        "closed_at": "2023-10-05T16:07:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n\u276f pip list |grep unstructured\r\nunstructured             0.7.9\r\n\u276f pip list |grep langchain\r\nlangchain                0.0.215\r\nlangchainplus-sdk        0.0.17\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [x] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nfrom langchain.document_loaders import UnstructuredFileLoader\r\nloader = UnstructuredFileLoader(\"../modules/tk.txt\")\r\ndocument = loader.load()\r\n```\r\n\r\nerrors:\r\n```\r\nUnpicklingError                           Traceback (most recent call last)\r\nCell In[11], line 3\r\n      1 from langchain.document_loaders import UnstructuredFileLoader\r\n      2 loader = UnstructuredFileLoader(\"../modules/tk.txt\")\r\n----> 3 document = loader.load()\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/langchain/document_loaders/unstructured.py:71](https://vscode-remote+ssh-002dremote-002bubuntu-002eh.vscode-resource.vscode-cdn.net/home/john/project/testscratch/python/hello-world/llm/langchain/getting_started_guide_zh/~/micromamba/envs/openai/lib/python3.11/site-packages/langchain/document_loaders/unstructured.py:71), in UnstructuredBaseLoader.load(self)\r\n     69 def load(self) -> List[Document]:\r\n     70     \"\"\"Load file.\"\"\"\r\n---> 71     elements = self._get_elements()\r\n     72     if self.mode == \"elements\":\r\n     73         docs: List[Document] = list()\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/langchain/document_loaders/unstructured.py:133](https://vscode-remote+ssh-002dremote-002bubuntu-002eh.vscode-resource.vscode-cdn.net/home/john/project/testscratch/python/hello-world/llm/langchain/getting_started_guide_zh/~/micromamba/envs/openai/lib/python3.11/site-packages/langchain/document_loaders/unstructured.py:133), in UnstructuredFileLoader._get_elements(self)\r\n    130 def _get_elements(self) -> List:\r\n    131     from unstructured.partition.auto import partition\r\n--> 133     return partition(filename=self.file_path, **self.unstructured_kwargs)\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/partition/auto.py:193](https://vscode-remote+ssh-002dremote-002bubuntu-002eh.vscode-resource.vscode-cdn.net/home/john/project/testscratch/python/hello-world/llm/langchain/getting_started_guide_zh/~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/partition/auto.py:193), in partition(filename, content_type, file, file_filename, url, include_page_breaks, strategy, encoding, paragraph_grouper, headers, ssl_verify, ocr_languages, pdf_infer_table_structure, xml_keep_tags, data_source_metadata, **kwargs)\r\n    183     elements = partition_image(\r\n    184         filename=filename,  # type: ignore\r\n    185         file=file,  # type: ignore\r\n   (...)\r\n    190         **kwargs,\r\n    191     )\r\n    192 elif filetype == FileType.TXT:\r\n--> 193     elements = partition_text(\r\n    194         filename=filename,\r\n    195         file=file,\r\n    196         encoding=encoding,\r\n    197         paragraph_grouper=paragraph_grouper,\r\n    198         **kwargs,\r\n    199     )\r\n    200 elif filetype == FileType.RTF:\r\n    201     elements = partition_rtf(\r\n    202         filename=filename,\r\n    203         file=file,\r\n    204         include_page_breaks=include_page_breaks,\r\n    205         **kwargs,\r\n    206     )\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/documents/elements.py:118](https://vscode-remote+ssh-002dremote-002bubuntu-002eh.vscode-resource.vscode-cdn.net/home/john/project/testscratch/python/hello-world/llm/langchain/getting_started_guide_zh/~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/documents/elements.py:118), in process_metadata..decorator..wrapper(*args, **kwargs)\r\n    116 @wraps(func)\r\n    117 def wrapper(*args, **kwargs):\r\n--> 118     elements = func(*args, **kwargs)\r\n    119     sig = inspect.signature(func)\r\n    120     params = dict(**dict(zip(sig.parameters, args)), **kwargs)\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/file_utils/filetype.py:493](https://vscode-remote+ssh-002dremote-002bubuntu-002eh.vscode-resource.vscode-cdn.net/home/john/project/testscratch/python/hello-world/llm/langchain/getting_started_guide_zh/~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/file_utils/filetype.py:493), in add_metadata_with_filetype..decorator..wrapper(*args, **kwargs)\r\n    491 @wraps(func)\r\n    492 def wrapper(*args, **kwargs):\r\n--> 493     elements = func(*args, **kwargs)\r\n    494     sig = inspect.signature(func)\r\n    495     params = dict(**dict(zip(sig.parameters, args)), **kwargs)\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/partition/text.py:92](https://vscode-remote+ssh-002dremote-002bubuntu-002eh.vscode-resource.vscode-cdn.net/home/john/project/testscratch/python/hello-world/llm/langchain/getting_started_guide_zh/~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/partition/text.py:92), in partition_text(filename, file, text, encoding, paragraph_grouper, metadata_filename, include_metadata, **kwargs)\r\n     89 ctext = ctext.strip()\r\n     91 if ctext:\r\n---> 92     element = element_from_text(ctext)\r\n     93     element.metadata = metadata\r\n     94     elements.append(element)\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/partition/text.py:104](https://vscode-remote+ssh-002dremote-002bubuntu-002eh.vscode-resource.vscode-cdn.net/home/john/project/testscratch/python/hello-world/llm/langchain/getting_started_guide_zh/~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/partition/text.py:104), in element_from_text(text)\r\n    102 elif is_us_city_state_zip(text):\r\n    103     return Address(text=text)\r\n--> 104 elif is_possible_narrative_text(text):\r\n    105     return NarrativeText(text=text)\r\n    106 elif is_possible_title(text):\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/partition/text_type.py:86](https://vscode-remote+ssh-002dremote-002bubuntu-002eh.vscode-resource.vscode-cdn.net/home/john/project/testscratch/python/hello-world/llm/langchain/getting_started_guide_zh/~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/partition/text_type.py:86), in is_possible_narrative_text(text, cap_threshold, non_alpha_threshold, language, language_checks)\r\n     83 if under_non_alpha_ratio(text, threshold=non_alpha_threshold):\r\n     84     return False\r\n---> 86 if (sentence_count(text, 3) < 2) and (not contains_verb(text)) and language == \"en\":\r\n     87     trace_logger.detail(f\"Not narrative. Text does not contain a verb:\\n\\n{text}\")  # type: ignore # noqa: E501\r\n     88     return False\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/partition/text_type.py:189](https://vscode-remote+ssh-002dremote-002bubuntu-002eh.vscode-resource.vscode-cdn.net/home/john/project/testscratch/python/hello-world/llm/langchain/getting_started_guide_zh/~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/partition/text_type.py:189), in contains_verb(text)\r\n    186 if text.isupper():\r\n    187     text = text.lower()\r\n--> 189 pos_tags = pos_tag(text)\r\n    190 return any(tag in POS_VERB_TAGS for _, tag in pos_tags)\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/nlp/tokenize.py:57](https://vscode-remote+ssh-002dremote-002bubuntu-002eh.vscode-resource.vscode-cdn.net/home/john/project/testscratch/python/hello-world/llm/langchain/getting_started_guide_zh/~/micromamba/envs/openai/lib/python3.11/site-packages/unstructured/nlp/tokenize.py:57), in pos_tag(text)\r\n     55 for sentence in sentences:\r\n     56     tokens = _word_tokenize(sentence)\r\n---> 57     parts_of_speech.extend(_pos_tag(tokens))\r\n     58 return parts_of_speech\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/nltk/tag/__init__.py:165](https://vscode-remote+ssh-002dremote-002bubuntu-002eh.vscode-resource.vscode-cdn.net/home/john/project/testscratch/python/hello-world/llm/langchain/getting_started_guide_zh/~/micromamba/envs/openai/lib/python3.11/site-packages/nltk/tag/__init__.py:165), in pos_tag(tokens, tagset, lang)\r\n    140 def pos_tag(tokens, tagset=None, lang=\"eng\"):\r\n    141     \"\"\"\r\n    142     Use NLTK's currently recommended part of speech tagger to\r\n    143     tag the given list of tokens.\r\n   (...)\r\n    163     :rtype: list(tuple(str, str))\r\n    164     \"\"\"\r\n--> 165     tagger = _get_tagger(lang)\r\n    166     return _pos_tag(tokens, tagset, tagger, lang)\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/nltk/tag/__init__.py:107](https://vscode-remote+ssh-002dremote-002bubuntu-002eh.vscode-resource.vscode-cdn.net/home/john/project/testscratch/python/hello-world/llm/langchain/getting_started_guide_zh/~/micromamba/envs/openai/lib/python3.11/site-packages/nltk/tag/__init__.py:107), in _get_tagger(lang)\r\n    105     tagger.load(ap_russian_model_loc)\r\n    106 else:\r\n--> 107     tagger = PerceptronTagger()\r\n    108 return tagger\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/nltk/tag/perceptron.py:169](https://vscode-remote+ssh-002dremote-002bubuntu-002eh.vscode-resource.vscode-cdn.net/home/john/project/testscratch/python/hello-world/llm/langchain/getting_started_guide_zh/~/micromamba/envs/openai/lib/python3.11/site-packages/nltk/tag/perceptron.py:169), in PerceptronTagger.__init__(self, load)\r\n    165 if load:\r\n    166     AP_MODEL_LOC = \"file:\" + str(\r\n    167         find(\"taggers/averaged_perceptron_tagger/\" + PICKLE)\r\n    168     )\r\n--> 169     self.load(AP_MODEL_LOC)\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/nltk/tag/perceptron.py:252](https://vscode-remote+ssh-002dremote-002bubuntu-002eh.vscode-resource.vscode-cdn.net/home/john/project/testscratch/python/hello-world/llm/langchain/getting_started_guide_zh/~/micromamba/envs/openai/lib/python3.11/site-packages/nltk/tag/perceptron.py:252), in PerceptronTagger.load(self, loc)\r\n    246 def load(self, loc):\r\n    247     \"\"\"\r\n    248     :param loc: Load a pickled model at location.\r\n    249     :type loc: str\r\n    250     \"\"\"\r\n--> 252     self.model.weights, self.tagdict, self.classes = load(loc)\r\n    253     self.model.classes = self.classes\r\n\r\nFile [~/micromamba/envs/openai/lib/python3.11/site-packages/nltk/data.py:755](https://vscode-remote+ssh-002dremote-002bubuntu-002eh.vscode-resource.vscode-cdn.net/home/john/project/testscratch/python/hello-world/llm/langchain/getting_started_guide_zh/~/micromamba/envs/openai/lib/python3.11/site-packages/nltk/data.py:755), in load(resource_url, format, cache, verbose, logic_parser, fstruct_reader, encoding)\r\n    753     resource_val = opened_resource.read()\r\n    754 elif format == \"pickle\":\r\n--> 755     resource_val = pickle.load(opened_resource)\r\n    756 elif format == \"json\":\r\n    757     import json\r\n\r\nUnpicklingError: pickle data was truncated\r\n```\r\n\r\nhow to fix it\n\n### Expected behavior\n\nno",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6850/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6850/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6849",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6849/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6849/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6849/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6849",
        "id": 1777871565,
        "node_id": "PR_kwDOIPDwls5UFbHi",
        "number": 6849,
        "title": "Added missing attribute value object",
        "user": {
            "login": "3coins",
            "id": 289369,
            "node_id": "MDQ6VXNlcjI4OTM2OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/289369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3coins",
            "html_url": "https://github.com/3coins",
            "followers_url": "https://api.github.com/users/3coins/followers",
            "following_url": "https://api.github.com/users/3coins/following{/other_user}",
            "gists_url": "https://api.github.com/users/3coins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3coins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3coins/subscriptions",
            "organizations_url": "https://api.github.com/users/3coins/orgs",
            "repos_url": "https://api.github.com/users/3coins/repos",
            "events_url": "https://api.github.com/users/3coins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3coins/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-27T23:05:04Z",
        "updated_at": "2023-06-28T01:57:50Z",
        "closed_at": "2023-06-27T23:30:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6849",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6849",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6849.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6849.patch",
            "merged_at": "2023-06-27T23:30:11Z"
        },
        "body": "## Description\r\nAdds a missing type class for [AdditionalResultAttributeValue](https://docs.aws.amazon.com/kendra/latest/APIReference/API_AdditionalResultAttributeValue.html). Fixes validation failure for the query API that have `AdditionalAttributes` in the response.\r\n\r\ncc @dev2049 \r\ncc @zhichenggeng",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6849/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6849/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6848",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6848/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6848/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6848/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6848",
        "id": 1777867466,
        "node_id": "I_kwDOIPDwls5p-BrK",
        "number": 6848,
        "title": "Issue: Installing langchain[llms] is really difficult",
        "user": {
            "login": "FlorianGrohmann",
            "id": 66842043,
            "node_id": "MDQ6VXNlcjY2ODQyMDQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/66842043?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FlorianGrohmann",
            "html_url": "https://github.com/FlorianGrohmann",
            "followers_url": "https://api.github.com/users/FlorianGrohmann/followers",
            "following_url": "https://api.github.com/users/FlorianGrohmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/FlorianGrohmann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FlorianGrohmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FlorianGrohmann/subscriptions",
            "organizations_url": "https://api.github.com/users/FlorianGrohmann/orgs",
            "repos_url": "https://api.github.com/users/FlorianGrohmann/repos",
            "events_url": "https://api.github.com/users/FlorianGrohmann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FlorianGrohmann/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-27T23:01:43Z",
        "updated_at": "2023-10-05T16:07:28Z",
        "closed_at": "2023-10-05T16:07:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI tried to install langchain[llms] with pip on Windows 11. The installation did not throw any errors. But trying to import langchain in a python script gives the following error:\r\nfrom numexpr.interpreter import MAX_THREADS, use_vml, __BLOCK_SIZE1__\r\nImportError: DLL load failed while importing interpreter: The specified module could not be found.\r\n\r\npip list shows that numexpr=2.8.4 is installed.\r\nUninstalling and reinstalling numexpr did not help.\r\nSince I had a machine where langchain was working I could determine the difference that the one machine had Visual Studio installed with C compiling capabilities.\r\nUninstalling and reinstalling numexpr fixed it after installing Visual Studio on the second machine.\r\n\r\nBut since the documentation does not explain that Visual Studio is required in Windows I am confused and it took me a while to figure this out. Also that the installation had no errors but still didnt worked? Maybe someone looks into that.\r\n\r\nPlease delete the issue if this is not the right place.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6848/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6848/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6847",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6847/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6847/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6847/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6847",
        "id": 1777837410,
        "node_id": "PR_kwDOIPDwls5UFToP",
        "number": 6847,
        "title": "docstrings `document_loaders` 1",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-27T22:25:54Z",
        "updated_at": "2023-07-02T21:25:44Z",
        "closed_at": "2023-07-02T19:13:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6847",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6847",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6847.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6847.patch",
            "merged_at": "2023-07-02T19:13:04Z"
        },
        "body": "- Updated docstrings in `document_loaders`\r\n- several code fixes.\r\n- added `docs/extras/ecosystem/integrations/airtable.md`\r\n\r\n@rlancemartin, @eyurtsev \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6847/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6847/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6846",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6846/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6846/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6846/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6846",
        "id": 1777829041,
        "node_id": "I_kwDOIPDwls5p94Sx",
        "number": 6846,
        "title": "Callbacks for retriever",
        "user": {
            "login": "vishalsrao",
            "id": 36671559,
            "node_id": "MDQ6VXNlcjM2NjcxNTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/36671559?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishalsrao",
            "html_url": "https://github.com/vishalsrao",
            "followers_url": "https://api.github.com/users/vishalsrao/followers",
            "following_url": "https://api.github.com/users/vishalsrao/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishalsrao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishalsrao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishalsrao/subscriptions",
            "organizations_url": "https://api.github.com/users/vishalsrao/orgs",
            "repos_url": "https://api.github.com/users/vishalsrao/repos",
            "events_url": "https://api.github.com/users/vishalsrao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishalsrao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T22:15:16Z",
        "updated_at": "2023-10-05T16:08:00Z",
        "closed_at": "2023-10-05T16:07:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nHave callbacks as an argument for BaseConversationalRetrievalChain._get_docs method and BaseRetriever.get_relevant_documents\n\n### Motivation\n\nI am using a custom retriever which has multiple intermediate steps, and I would like to store info from some of these steps for debugging and subsequent analyses. This information is specific to the request, and it cannot be stored at an individual document level.\n\n### Your contribution\n\nI think this can be addressed by having an option to pass callbacks to the BaseConversationalRetrievalChain._get_docs method and BaseRetriever.get_relevant_documents. BaseCallbackHandler may have to be modified too to extend a new class RetrieverManagerMixin which can contain methods like on_retriever_start and on_retriever_end.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6846/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6846/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6845",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6845/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6845/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6845/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6845",
        "id": 1777823452,
        "node_id": "PR_kwDOIPDwls5UFQng",
        "number": 6845,
        "title": "Fix Document Similarity Check with passed Threshold",
        "user": {
            "login": "Sidchat95",
            "id": 122575389,
            "node_id": "U_kgDOB05aHQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/122575389?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Sidchat95",
            "html_url": "https://github.com/Sidchat95",
            "followers_url": "https://api.github.com/users/Sidchat95/followers",
            "following_url": "https://api.github.com/users/Sidchat95/following{/other_user}",
            "gists_url": "https://api.github.com/users/Sidchat95/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Sidchat95/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Sidchat95/subscriptions",
            "organizations_url": "https://api.github.com/users/Sidchat95/orgs",
            "repos_url": "https://api.github.com/users/Sidchat95/repos",
            "events_url": "https://api.github.com/users/Sidchat95/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Sidchat95/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-06-27T22:09:29Z",
        "updated_at": "2023-07-17T16:57:59Z",
        "closed_at": "2023-07-13T05:30:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6845",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6845",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6845.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6845.patch",
            "merged_at": "2023-07-13T05:30:48Z"
        },
        "body": "Converting the Similarity obtained in the similarity_search_with_score_by_vector method whilst comparing to the passed \r\nthreshold. This is because the passed threshold is a number between 0 to 1 and is already in the relevance_score_fn format. \r\nAs of now, the function is comparing two different scoring parameters and that wouldn't work.\r\n\r\nDependencies\r\nNone\r\n\r\nIssue:\r\nDifferent scores being compared in similarity_search_with_score_by_vector method in FAISS.\r\n\r\nTag maintainer\r\n@hwchase17\r\n\r\n\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6845/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6845/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6844",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6844/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6844/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6844/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6844",
        "id": 1777784516,
        "node_id": "PR_kwDOIPDwls5UFH-F",
        "number": 6844,
        "title": "Implement async for the human tool",
        "user": {
            "login": "bencrouse",
            "id": 165111,
            "node_id": "MDQ6VXNlcjE2NTExMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/165111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bencrouse",
            "html_url": "https://github.com/bencrouse",
            "followers_url": "https://api.github.com/users/bencrouse/followers",
            "following_url": "https://api.github.com/users/bencrouse/following{/other_user}",
            "gists_url": "https://api.github.com/users/bencrouse/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bencrouse/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bencrouse/subscriptions",
            "organizations_url": "https://api.github.com/users/bencrouse/orgs",
            "repos_url": "https://api.github.com/users/bencrouse/repos",
            "events_url": "https://api.github.com/users/bencrouse/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bencrouse/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-27T21:33:32Z",
        "updated_at": "2023-11-07T03:54:00Z",
        "closed_at": "2023-11-07T03:54:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6844",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6844",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6844.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6844.patch",
            "merged_at": null
        },
        "body": "**Description**\r\nImplement running the human tool asynchronously. Pretty hacky, not sure what the intent is for how this should work. I'm very open to feedback!\r\n\r\n**Issue**\r\nCurrently the tool just raises `NotImplementedError`.\r\n\r\n**Dependencies**\r\nNone\r\n\r\n**Tag maintainer**\r\n@vowelparrot\r\n\r\n**Twitter handle**\r\n@bencrouse",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6844/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6844/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6843",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6843/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6843/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6843/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6843",
        "id": 1777729789,
        "node_id": "PR_kwDOIPDwls5UE75c",
        "number": 6843,
        "title": "Azure Cognitive Search: Custom index and scoring profile support",
        "user": {
            "login": "ruoccofabrizio",
            "id": 22171838,
            "node_id": "MDQ6VXNlcjIyMTcxODM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22171838?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ruoccofabrizio",
            "html_url": "https://github.com/ruoccofabrizio",
            "followers_url": "https://api.github.com/users/ruoccofabrizio/followers",
            "following_url": "https://api.github.com/users/ruoccofabrizio/following{/other_user}",
            "gists_url": "https://api.github.com/users/ruoccofabrizio/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ruoccofabrizio/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ruoccofabrizio/subscriptions",
            "organizations_url": "https://api.github.com/users/ruoccofabrizio/orgs",
            "repos_url": "https://api.github.com/users/ruoccofabrizio/repos",
            "events_url": "https://api.github.com/users/ruoccofabrizio/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ruoccofabrizio/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-27T20:51:17Z",
        "updated_at": "2023-07-27T00:58:02Z",
        "closed_at": "2023-07-27T00:58:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6843",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6843",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6843.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6843.patch",
            "merged_at": "2023-07-27T00:58:01Z"
        },
        "body": "Description: Adding support for custom index and scoring profile support in Azure Cognitive Search\r\n@hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6843/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6843/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6842",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6842/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6842/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6842/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6842",
        "id": 1777709551,
        "node_id": "PR_kwDOIPDwls5UE3hV",
        "number": 6842,
        "title": "feat: Add `UnstructuredOrgModeLoader`",
        "user": {
            "login": "MthwRobinson",
            "id": 1635179,
            "node_id": "MDQ6VXNlcjE2MzUxNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1635179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MthwRobinson",
            "html_url": "https://github.com/MthwRobinson",
            "followers_url": "https://api.github.com/users/MthwRobinson/followers",
            "following_url": "https://api.github.com/users/MthwRobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/MthwRobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MthwRobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MthwRobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/MthwRobinson/orgs",
            "repos_url": "https://api.github.com/users/MthwRobinson/repos",
            "events_url": "https://api.github.com/users/MthwRobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MthwRobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T20:33:59Z",
        "updated_at": "2023-06-27T23:34:18Z",
        "closed_at": "2023-06-27T23:34:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6842",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6842",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6842.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6842.patch",
            "merged_at": "2023-06-27T23:34:17Z"
        },
        "body": "### Summary\r\n\r\nAdds `UnstructuredOrgModeLoader` for processing [Org-mode](https://en.wikipedia.org/wiki/Org-mode) documents.\r\n\r\n### Testing\r\n\r\n```python\r\nfrom langchain.document_loaders import UnstructuredOrgModeLoader\r\n\r\nloader = UnstructuredOrgModeLoader(\r\n    file_path=\"example_data/README.org\", mode=\"elements\"\r\n)\r\ndocs = loader.load()\r\nprint(docs[0])\r\n```\r\n\r\n### Reviewers\r\n\r\n- @rlancemartin\r\n- @eyurtsev\r\n- @hwchase17\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6842/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6842/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6841",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6841/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6841/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6841/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6841",
        "id": 1777698608,
        "node_id": "I_kwDOIPDwls5p9Ycw",
        "number": 6841,
        "title": "Support for Pydantic v2",
        "user": {
            "login": "preritdas",
            "id": 96673937,
            "node_id": "U_kgDOBcMgkQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/96673937?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/preritdas",
            "html_url": "https://github.com/preritdas",
            "followers_url": "https://api.github.com/users/preritdas/followers",
            "following_url": "https://api.github.com/users/preritdas/following{/other_user}",
            "gists_url": "https://api.github.com/users/preritdas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/preritdas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/preritdas/subscriptions",
            "organizations_url": "https://api.github.com/users/preritdas/orgs",
            "repos_url": "https://api.github.com/users/preritdas/repos",
            "events_url": "https://api.github.com/users/preritdas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/preritdas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 30,
        "created_at": "2023-06-27T20:24:25Z",
        "updated_at": "2023-08-17T21:20:44Z",
        "closed_at": "2023-08-17T00:43:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nCurrently, `langchain 0.0.217 depends on pydantic<2 and >=1`. Pydantic v2 is re-written in Rust and is between 5-50x faster than v1 depending on the use case. Given how much LangChain relies on Pydantic for both modeling and functional components, and given that FastAPI is now supporting (in beta) Pydantic v2, it'd be great to see LangChain handle a user-specified installation of Pydantic above v2. \r\n\r\nThe following is an example of what happens when a user specifies installing Pydantic above v2. \r\n\r\n```bash\r\nThe conflict is caused by:\r\n    The user requested pydantic==2.0b2\r\n    fastapi 0.100.0b1 depends on pydantic!=1.8, !=1.8.1, <3.0.0 and >=1.7.4\r\n    inflect 6.0.4 depends on pydantic>=1.9.1\r\n    langchain 0.0.217 depends on pydantic<2 and >=1\r\n```\n\n### Motivation\n\nPydantic v2 is re-written in Rust and is between 5-50x faster than v1 depending on the use case. Given how much LangChain relies on Pydantic for both modeling and functional components, and given that FastAPI is now supporting (in beta) Pydantic v2, it'd be great to see LangChain handle a user-specified installation of Pydantic above v2. \n\n### Your contribution\n\nYes! I'm currently opening just an issue to document my request, and because I'm fairly backlogged. But I have contributed to LangChain in the past and would love to write a pull request to facilitate this in full. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6841/reactions",
            "total_count": 85,
            "+1": 71,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 14
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6841/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6840",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6840/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6840/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6840/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6840",
        "id": 1777621104,
        "node_id": "PR_kwDOIPDwls5UEkLD",
        "number": 6840,
        "title": "Zapier - Add better error messaging for 401 responses",
        "user": {
            "login": "ralewis85",
            "id": 3906177,
            "node_id": "MDQ6VXNlcjM5MDYxNzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3906177?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ralewis85",
            "html_url": "https://github.com/ralewis85",
            "followers_url": "https://api.github.com/users/ralewis85/followers",
            "following_url": "https://api.github.com/users/ralewis85/following{/other_user}",
            "gists_url": "https://api.github.com/users/ralewis85/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ralewis85/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ralewis85/subscriptions",
            "organizations_url": "https://api.github.com/users/ralewis85/orgs",
            "repos_url": "https://api.github.com/users/ralewis85/repos",
            "events_url": "https://api.github.com/users/ralewis85/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ralewis85/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T19:26:09Z",
        "updated_at": "2023-06-27T23:35:43Z",
        "closed_at": "2023-06-27T23:35:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6840",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6840",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6840.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6840.patch",
            "merged_at": "2023-06-27T23:35:42Z"
        },
        "body": "Description: When a 401 response is given back by Zapier, hint to the end user why that may have occurred\r\n\r\n- If an API Key was initialized with the wrapper, ask them to check their API Key value\r\n- if an access token was initialized with the wrapper, ask them to check their access token or verify that it doesn't need to be refreshed.\r\n\r\nTag maintainer: @dev2049 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6840/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6840/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6839",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6839/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6839/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6839/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6839",
        "id": 1777611659,
        "node_id": "PR_kwDOIPDwls5UEiGh",
        "number": 6839,
        "title": "Enhancement : Ignore deleted messages and media in WhatsAppChatLoader",
        "user": {
            "login": "augtheo",
            "id": 16444359,
            "node_id": "MDQ6VXNlcjE2NDQ0MzU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/16444359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/augtheo",
            "html_url": "https://github.com/augtheo",
            "followers_url": "https://api.github.com/users/augtheo/followers",
            "following_url": "https://api.github.com/users/augtheo/following{/other_user}",
            "gists_url": "https://api.github.com/users/augtheo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/augtheo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/augtheo/subscriptions",
            "organizations_url": "https://api.github.com/users/augtheo/orgs",
            "repos_url": "https://api.github.com/users/augtheo/repos",
            "events_url": "https://api.github.com/users/augtheo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/augtheo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T19:19:26Z",
        "updated_at": "2023-06-27T23:36:55Z",
        "closed_at": "2023-06-27T23:36:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6839",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6839",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6839.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6839.patch",
            "merged_at": "2023-06-27T23:36:55Z"
        },
        "body": "  - Description: Ignore deleted messages and media\r\n  - Issue: #6838 \r\n  - Dependencies: No new dependencies\r\n  - Tag maintainer: @rlancemartin, @eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6839/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6839/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6838",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6838/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6838/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6838/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6838",
        "id": 1777599060,
        "node_id": "I_kwDOIPDwls5p9AJU",
        "number": 6838,
        "title": "WhatsappChatLoader doesn't ignore deleted messages and omitted media ",
        "user": {
            "login": "augtheo",
            "id": 16444359,
            "node_id": "MDQ6VXNlcjE2NDQ0MzU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/16444359?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/augtheo",
            "html_url": "https://github.com/augtheo",
            "followers_url": "https://api.github.com/users/augtheo/followers",
            "following_url": "https://api.github.com/users/augtheo/following{/other_user}",
            "gists_url": "https://api.github.com/users/augtheo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/augtheo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/augtheo/subscriptions",
            "organizations_url": "https://api.github.com/users/augtheo/orgs",
            "repos_url": "https://api.github.com/users/augtheo/repos",
            "events_url": "https://api.github.com/users/augtheo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/augtheo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T19:11:54Z",
        "updated_at": "2023-06-28T02:21:59Z",
        "closed_at": "2023-06-28T02:21:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain git+https://github.com/hwchase17/langchain@8392ca602c03d3ae660d05981154f17ee0ad438e \r\nArchcraft x86_64\r\nPython 3.11.3\n\n### Who can help?\n\n@eyurtsev @dev2049 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1.  Export the chat from WhatsApp, of a conversation with media and deleted messages.\r\n2. The exported chat contains deleted messages and omitted media during the export. For example :  `6/29/23, 12:16\u202fam - User 4: This message was deleted` and `4/20/23, 9:42\u202fam - User 3: <Media omitted>`.  \r\n3. Currently these messages are also processed and stored in the index.\n\n### Expected behavior\n\nWe can avoid embedding these  messages in the index.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6838/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6838/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6837",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6837/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6837/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6837/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6837",
        "id": 1777551770,
        "node_id": "I_kwDOIPDwls5p80ma",
        "number": 6837,
        "title": "agent with memory unable to execute and throwing a output key error",
        "user": {
            "login": "sundi133",
            "id": 892858,
            "node_id": "MDQ6VXNlcjg5Mjg1OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/892858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sundi133",
            "html_url": "https://github.com/sundi133",
            "followers_url": "https://api.github.com/users/sundi133/followers",
            "following_url": "https://api.github.com/users/sundi133/following{/other_user}",
            "gists_url": "https://api.github.com/users/sundi133/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sundi133/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sundi133/subscriptions",
            "organizations_url": "https://api.github.com/users/sundi133/orgs",
            "repos_url": "https://api.github.com/users/sundi133/repos",
            "events_url": "https://api.github.com/users/sundi133/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sundi133/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-27T18:45:58Z",
        "updated_at": "2023-06-28T18:15:34Z",
        "closed_at": "2023-06-28T18:15:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\npython - 3.9\r\nlangchain - 0.0.213\r\nOS - Mac Monterey\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [X] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n\r\nCode Snippet\r\n```\r\nfrom langchain import (\r\n    LLMMathChain,\r\n    OpenAI,\r\n    SerpAPIWrapper,\r\n    SQLDatabase,\r\n    SQLDatabaseChain,\r\n)\r\nfrom langchain.agents import initialize_agent, Tool\r\nfrom langchain.agents import AgentType\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chains import RetrievalQA, ConversationChain\r\nfrom langchain.agents import ZeroShotAgent, Tool, AgentExecutor\r\nfrom langchain import OpenAI, LLMChain\r\nfrom langchain.utilities import GoogleSearchAPIWrapper\r\nfrom langchain import OpenAI, LLMMathChain, SerpAPIWrapper\r\nfrom langchain.agents import initialize_agent, Tool\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.memory import ConversationBufferMemory, ConversationSummaryMemory, ConversationBufferWindowMemory\r\nimport time\r\nfrom chainlit import AskUserMessage, Message, on_chat_start\r\nimport random\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.text_splitter import CharacterTextSplitter, RecursiveCharacterTextSplitter\r\nfrom langchain.vectorstores import Milvus\r\nfrom langchain.docstore.document import Document\r\nfrom langchain.document_loaders.csv_loader import CSVLoader\r\nfrom langchain.document_loaders import WebBaseLoader\r\nfrom langchain.document_loaders import UnstructuredHTMLLoader\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.prompts import ChatPromptTemplate\r\nfrom langchain.chains import LLMChain\r\nfrom langchain.prompts import PromptTemplate\r\nfrom pathlib import Path\r\nfrom langchain.document_loaders import WebBaseLoader\r\nfrom langchain.prompts import PromptTemplate\r\nimport json\r\nimport os\r\n\r\n\r\nllm = ChatOpenAI(temperature=0, model=\"gpt-3.5-turbo\", openai_api_key=openai_api_key)\r\n\r\nllm_math_chain = LLMMathChain.from_llm(llm=llm, verbose=True)\r\n\r\nconversational_memory = ConversationBufferWindowMemory(\r\n    memory_key='chat_history',\r\n    k=50,\r\n    return_messages=True,\r\n    input_key=\"question\", \r\n    output_key='output'\r\n)\r\n\r\n# load will vector db\r\nrelevant_parts = []\r\nfor p in Path(\".\").absolute().parts:\r\n    relevant_parts.append(p)\r\n    if relevant_parts[-3:] == [\"langchain\", \"docs\", \"modules\"]:\r\n        break\r\n        \r\n\r\n\r\n\r\ndef get_meta(data:str):\r\n    split_data = [item.split(\":\") for item in data.split(\"\\n\")]\r\n\r\n    # Creating a dictionary from the split data\r\n    result = {}\r\n    for item in split_data:\r\n        if len(item) > 1:\r\n            key = item[0].strip()\r\n            value = item[1].strip()\r\n            result[key] = value\r\n\r\n    # Converting the dictionary to JSON format\r\n    json_data = json.dumps(result)\r\n    return json_data\r\n    \r\n    \r\ntemplate = \"\"\"You're an customer care representative\r\n \r\nYou have the following products in your store based on the customer question. Answer politely to customer questions on any questions on product sold in the wesbite and provide product details. Send the product webpage links for each recommendation\r\n\r\n{context}\r\n\r\n\"chat_history\": {chat_history}\r\n\r\nQuestion: {question}\r\nAnswer:\"\"\"\r\n \r\n\r\nproducts_path = \"ecommerce__20200101_20200131__10k_data_10.csv\"\r\n\r\n\r\nloader = CSVLoader(products_path, csv_args={\r\n    'delimiter': ',',\r\n    'quotechar': '\"',\r\n})\r\n\r\ndocuments = loader.load()\r\n\r\ntext_splitter = RecursiveCharacterTextSplitter(chunk_size=4000, chunk_overlap=0, length_function = len)\r\nsources = text_splitter.split_documents(documents)\r\nsource_chunks = []\r\nsplitter = RecursiveCharacterTextSplitter(chunk_size=3000, chunk_overlap=100, length_function = len)\r\n\r\nfor source in sources:\r\n    for chunk in splitter.split_text(source.page_content):\r\n        chunk_metadata = json_meta = json.loads(get_meta(chunk))\r\n        source_chunks.append(Document(page_content=chunk, metadata=chunk_metadata))\r\n\r\nembeddings = OpenAIEmbeddings(openai_api_key=openai_api_key, model=\"ada\")\r\n\r\nproducts_db = Chroma.from_documents(source_chunks, embeddings, collection_name=\"products\")\r\n\r\nprompt = PromptTemplate(template=template, input_variables=[\"context\", \"question\", \"chat_history\"])\r\n\r\nproduct_inquery_agent = RetrievalQA.from_chain_type(\r\n    llm=llm,\r\n    chain_type=\"stuff\",\r\n    retriever=products_db.as_retriever(search_kwargs={\"k\": 4}),\r\n    chain_type_kwargs = {\"prompt\": prompt, \"verbose\": True, \"memory\": conversational_memory},\r\n)\r\n\r\n\r\ntools = [\r\n    Tool(\r\n        name=\"Product inquiries System\",\r\n        func=product_inquery_agent.run,\r\n        description=\"useful for getting information about products, features, and specifications to make informed purchase decisions. Input should be a fully formed question.\",\r\n        return_direct=True,\r\n    ),\r\n]\r\n\r\n\r\n\r\n\r\nprefix = \"\"\"Have a conversation with a human as a customer representative agent, answering the following questions as best you can in a polite and friendly manner. You have access to the following tools:\"\"\"\r\nsuffix = \"\"\"Begin!\"\r\n\r\n{chat_history}\r\nQuestion: {input}\r\n{agent_scratchpad}\"\"\"\r\n\r\nprompt = ZeroShotAgent.create_prompt(\r\n    tools,\r\n    prefix=prefix,\r\n    suffix=suffix,\r\n    input_variables=[\"input\", \"chat_history\", \"agent_scratchpad\"],\r\n)\r\nllm_chain = LLMChain(llm=OpenAI(temperature=0, openai_api_key=openai_api_key), prompt=prompt)\r\n\r\nagent = ZeroShotAgent(llm_chain=llm_chain, tools=tools, verbose=True)\r\nagent_chain = AgentExecutor.from_agent_and_tools(agent=agent, tools=tools, verbose=True, memory=conversational_memory)\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nquery = \"what products are available in your website ?\"\r\nresponse = agent_chain.run(query)\r\nprint(response)\r\n\r\nThe response should print the output captured but it throws a error with key not found\r\n\r\n``` > Entering new  chain...\r\nThought: I need to find out what products are available\r\nAction: Product inquiries System\r\nAction Input: What products are available in your website?\r\n\r\n> Entering new  chain...\r\n\r\n\r\n> Entering new  chain...\r\nPrompt after formatting:\r\nYou're an customer care representative\r\n \r\nYou have the following products in your store based on the customer question. Answer politely to customer questions on any questions on product sold in the wesbite and provide product details. Send the product webpage links for each recommendation\r\n\r\nUniq Id: cc2083338a16c3fe2f7895289d2e98fe\r\nProduct Name: ARTSCAPE Etched Glass 24\" x 36\" Window Film, 24-by-36-Inch\r\nBrand Name: \r\nAsin: \r\nCategory: Home & Kitchen | Home D\u00e9cor | Window Treatments | Window Stickers & Films | Window Films\r\nUpc Ean Code: \r\nList Price: \r\nSelling Price: $12.99\r\nQuantity: \r\nModel Number: 01-0121\r\nAbout Product: Make sure this fits by entering your model number. | The visual effect of textured glass and stained glass | Creates privacy / Provides UV protection | No adhesives / Applies easily | Patterns repeat to cover any size window | Made in USA\r\nProduct Specification: ProductDimensions:72x36x0inches|ItemWeight:11.2ounces|ShippingWeight:12.2ounces(Viewshippingratesandpolicies)|Manufacturer:Artscape|ASIN:B000Q3PRYA|DomesticShipping:ItemcanbeshippedwithinU.S.|InternationalShipping:ThisitemcanbeshippedtoselectcountriesoutsideoftheU.S.LearnMore|ShippingAdvisory:Thisitemmustbeshippedseparatelyfromotheritemsinyourorder.Additionalshippingchargeswillnotapply.|Itemmodelnumber:01-0121\r\nTechnical Details: show up to 2 reviews by default Product Description Artscape window films create the look of stained and etched glass. These thin, translucent films provide privacy while still allowing natural light to enter the room. Artscape films are easily applied to any smooth glass surface. They do not use adhesives and are easily removed if needed. They can be trimmed or combined to fit any size window. The images have a repeating pattern left to right and top to bottom and can be used either vertically or horizontally. These films provide UV protection and are the perfect decorative accent for windows that require continued privacy. Artscape patented products are all made in the USA. From the Manufacturer Artscape window films create the look of stained and etched glass. These thin, translucent films provide privacy while still allowing natural light to enter the room. Artscape films are easily applied to any smooth glass surface. They do not use adhesives and are easily removed if needed. They can be trimmed or combined to fit any size window. The images have a repeating pattern left to right and top to bottom and can be used either vertically or horizontally. These films provide UV protection and are the perfect decorative accent for windows that require continued privacy. Artscape patented products are all made in the USA. | 12.2 ounces (View shipping rates and policies)\r\nShipping Weight: 12.2 ounces\r\nProduct Dimensions: \r\nImage: [https://images-na.ssl-images-amazon.com/images/I/51iAe3LF7FL.jpg|https://images-na.ssl-images-amazon.com/images/I/417B20oEehL.jpg|https://images-na.ssl-images-amazon.com/images/I/41J3bDg633L.jpg|https://images-na.ssl-images-amazon.com/images/I/51hhnuGWwdL.jpg|https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/transparent-pixel.jpg](https://images-na.ssl-images-amazon.com/images/I/51iAe3LF7FL.jpg%7Chttps://images-na.ssl-images-amazon.com/images/I/417B20oEehL.jpg%7Chttps://images-na.ssl-images-amazon.com/images/I/41J3bDg633L.jpg%7Chttps://images-na.ssl-images-amazon.com/images/I/51hhnuGWwdL.jpg%7Chttps://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/transparent-pixel.jpg)\r\nVariants: \r\nSku: \r\nProduct Url: https://www.amazon.com/ARTSCAPE-Etched-Glass-Window-Film/dp/B000Q3PRYA\r\nStock: \r\nProduct Details: \r\nDimensions: \r\nColor: \r\nIngredients:\r\n\r\nStock: \r\nProduct Details: \r\nDimensions: \r\nColor: \r\nIngredients: \r\nDirection To Use: \r\nIs Amazon Seller: Y\r\nSize Quantity Variant: \r\nProduct Description:\r\n\r\nUniq Id: f8c32a45e507a177992973cf0d46d20c\r\nProduct Name: Terra by Battat \u2013 4 Dinosaur Toys, Medium \u2013 Dinosaurs for Kids & Collectors, Scientifically Accurate & Designed by A Paleo-Artist; Age 3+ (4 Pc)\r\nBrand Name: \r\nAsin: \r\nCategory: \r\nUpc Ean Code: \r\nList Price: \r\nSelling Price: $18.66\r\nQuantity: \r\nModel Number: AN4054Z\r\nAbout Product: Make sure this fits by entering your model number. | 4 medium-sized dinosaurs for kids, with lifelike pose, accurate ratio, and exquisitely detailed paint | Includes: Parasaurolophus walkeri, Stegosaurus ungulatus, Pachyrhinosaurus, and euoplocephalus tutus toy dinos | Museum Quality: classic toy dinosaurs designed by an internationally renowned paleo-artist | Educational toy: dinosaur toys for kids spark curiosity about paleontology, science, and natural History | Dimensions: Dimensions: miniature figurines measure 6.25-8.5 (L) 1.5-2.25 (W) 2.25-3.5 (H) inches approximately toys 6.25-8.5 (L) 1.5-2.25 (W) 2.25-3.5 (H) inches approximately | No batteries required, just imagination! | Earth-friendly recyclable packaging | Age: suggested for ages 3+ | Collect them all! Discover the entire Terra by Battat family of animal toy figurines and dinosaur playsets!\r\nProduct Specification: ProductDimensions:8.7x3.9x3.4inches|ItemWeight:15.8ounces|ShippingWeight:1.4pounds(Viewshippingratesandpolicies)|ASIN:B07PF1R8LS|Itemmodelnumber:AN4054Z|Manufacturerrecommendedage:36months-10years\r\nTechnical Details: Go to your orders and start the return Select the ship method Ship it! | Go to your orders and start the return Select the ship method Ship it! | show up to 2 reviews by default Look out! Here come 4 incredible dinosaur toys that look like the real thing! Sought after by both kids and collectors, These scientifically precise and very collectable dinosaur replicas also feature bright, beautiful colors and look amazing in any dinosaur playset. And, they're made with high quality material, so these dinos will never go extinct! The intimidating-looking, and instantly recognizable Stegosaurus was the largest of plate-backed prehistoric herbivores. Scientists have suggested that the Stegosaurus\u2019 iconic plates were for defense against predators, but this is unlikely as the plates were quite thin. Others have said the Stegosaurus\u2019 spiked tail may have been used as a weapon. Terra\u2019s Stegosaurus toy accurately recreates the formidable size and terrifying presence of this iconic predator. In particular, the large, heavily built frame and rounded backs of the mighty Stegosaurus are faithfully depicted in the dinosaur replica. This highly collectable playset also includes a toy Parasaurolophus, Stegosaurus, Pachyrhinosaurus, and euoplocephalus tutus. Collect your own miniature versions of 4 powerful and iconic dinosaurs from Terra by Battat! | 1.4 pounds (View shipping rates and policies)\r\nShipping Weight: 1.4 pounds\r\nProduct Dimensions:\r\n\r\nUniq Id: e04b990e95bf73bbe6a3fa09785d7cd0\r\nProduct Name: Woodstock- Collage 500 pc Puzzle\r\nBrand Name: \r\nAsin: \r\nCategory: Toys & Games | Puzzles | Jigsaw Puzzles\r\nUpc Ean Code: \r\nList Price: \r\nSelling Price: $17.49\r\nQuantity: \r\nModel Number: 62151\r\nAbout Product: Make sure this fits by entering your model number. | Puzzle has 500 pieces | Completed puzzle measure 14 x 19 | 100% officially licensed merchandise | Great for fans & puzzlers alike\r\nProduct Specification: ProductDimensions:1.9x8x10inches|ItemWeight:13.4ounces|ShippingWeight:13.4ounces(Viewshippingratesandpolicies)|ASIN:B07MX21WWX|Itemmodelnumber:62151|Manufacturerrecommendedage:14yearsandup\r\nTechnical Details: show up to 2 reviews by default 100% Officially licensed merchandise; complete puzzle measures 14 x 19 in. | 13.4 ounces (View shipping rates and policies)\r\nShipping Weight: 13.4 ounces\r\nProduct Dimensions: \r\nImage: [https://images-na.ssl-images-amazon.com/images/I/61plo8Xv4vL.jpg|https://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/transparent-pixel.jpg](https://images-na.ssl-images-amazon.com/images/I/61plo8Xv4vL.jpg%7Chttps://images-na.ssl-images-amazon.com/images/G/01/x-locale/common/transparent-pixel.jpg)\r\nVariants: \r\nSku: \r\nProduct Url: https://www.amazon.com/Woodstock-Collage-500-pc-Puzzle/dp/B07MX21WWX\r\nStock: \r\nProduct Details: \r\nDimensions: \r\nColor: \r\nIngredients: \r\nDirection To Use: \r\nIs Amazon Seller: Y\r\nSize Quantity Variant: \r\nProduct Description:\r\n\r\n\"chat_history\": []\r\n\r\nQuestion: What products are available in your website?\r\nAnswer:\r\n\r\n> Finished chain.\r\n\r\n> Finished chain.\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\nCell In[42], line 2\r\n      1 query = \"what products are available in your website ?\"\r\n----> 2 response = agent_chain.run(query)\r\n      3 print(response)\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/chains/base.py:290, in Chain.run(self, callbacks, tags, *args, **kwargs)\r\n    288     if len(args) != 1:\r\n    289         raise ValueError(\"`run` supports only one positional argument.\")\r\n--> 290     return self(args[0], callbacks=callbacks, tags=tags)[_output_key]\r\n    292 if kwargs and not args:\r\n    293     return self(kwargs, callbacks=callbacks, tags=tags)[_output_key]\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/chains/base.py:166, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    164 except (KeyboardInterrupt, Exception) as e:\r\n    165     run_manager.on_chain_error(e)\r\n--> 166     raise e\r\n    167 run_manager.on_chain_end(outputs)\r\n    168 final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    169     inputs, outputs, return_only_outputs\r\n    170 )\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/chains/base.py:160, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    154 run_manager = callback_manager.on_chain_start(\r\n    155     dumpd(self),\r\n    156     inputs,\r\n    157 )\r\n    158 try:\r\n    159     outputs = (\r\n--> 160         self._call(inputs, run_manager=run_manager)\r\n    161         if new_arg_supported\r\n    162         else self._call(inputs)\r\n    163     )\r\n    164 except (KeyboardInterrupt, Exception) as e:\r\n    165     run_manager.on_chain_error(e)\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/agents/agent.py:987, in AgentExecutor._call(self, inputs, run_manager)\r\n    985 # We now enter the agent loop (until it returns something).\r\n    986 while self._should_continue(iterations, time_elapsed):\r\n--> 987     next_step_output = self._take_next_step(\r\n    988         name_to_tool_map,\r\n    989         color_mapping,\r\n    990         inputs,\r\n    991         intermediate_steps,\r\n    992         run_manager=run_manager,\r\n    993     )\r\n    994     if isinstance(next_step_output, AgentFinish):\r\n    995         return self._return(\r\n    996             next_step_output, intermediate_steps, run_manager=run_manager\r\n    997         )\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/agents/agent.py:850, in AgentExecutor._take_next_step(self, name_to_tool_map, color_mapping, inputs, intermediate_steps, run_manager)\r\n    848         tool_run_kwargs[\"llm_prefix\"] = \"\"\r\n    849     # We then call the tool on the tool input to get an observation\r\n--> 850     observation = tool.run(\r\n    851         agent_action.tool_input,\r\n    852         verbose=self.verbose,\r\n    853         color=color,\r\n    854         callbacks=run_manager.get_child() if run_manager else None,\r\n    855         **tool_run_kwargs,\r\n    856     )\r\n    857 else:\r\n    858     tool_run_kwargs = self.agent.tool_run_logging_kwargs()\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/tools/base.py:299, in BaseTool.run(self, tool_input, verbose, start_color, color, callbacks, **kwargs)\r\n    297 except (Exception, KeyboardInterrupt) as e:\r\n    298     run_manager.on_tool_error(e)\r\n--> 299     raise e\r\n    300 else:\r\n    301     run_manager.on_tool_end(\r\n    302         str(observation), color=color, name=self.name, **kwargs\r\n    303     )\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/tools/base.py:271, in BaseTool.run(self, tool_input, verbose, start_color, color, callbacks, **kwargs)\r\n    268 try:\r\n    269     tool_args, tool_kwargs = self._to_args_and_kwargs(parsed_input)\r\n    270     observation = (\r\n--> 271         self._run(*tool_args, run_manager=run_manager, **tool_kwargs)\r\n    272         if new_arg_supported\r\n    273         else self._run(*tool_args, **tool_kwargs)\r\n    274     )\r\n    275 except ToolException as e:\r\n    276     if not self.handle_tool_error:\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/tools/base.py:414, in Tool._run(self, run_manager, *args, **kwargs)\r\n    411 \"\"\"Use the tool.\"\"\"\r\n    412 new_argument_supported = signature(self.func).parameters.get(\"callbacks\")\r\n    413 return (\r\n--> 414     self.func(\r\n    415         *args,\r\n    416         callbacks=run_manager.get_child() if run_manager else None,\r\n    417         **kwargs,\r\n    418     )\r\n    419     if new_argument_supported\r\n    420     else self.func(*args, **kwargs)\r\n    421 )\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/chains/base.py:290, in Chain.run(self, callbacks, tags, *args, **kwargs)\r\n    288     if len(args) != 1:\r\n    289         raise ValueError(\"`run` supports only one positional argument.\")\r\n--> 290     return self(args[0], callbacks=callbacks, tags=tags)[_output_key]\r\n    292 if kwargs and not args:\r\n    293     return self(kwargs, callbacks=callbacks, tags=tags)[_output_key]\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/chains/base.py:166, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    164 except (KeyboardInterrupt, Exception) as e:\r\n    165     run_manager.on_chain_error(e)\r\n--> 166     raise e\r\n    167 run_manager.on_chain_end(outputs)\r\n    168 final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    169     inputs, outputs, return_only_outputs\r\n    170 )\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/chains/base.py:160, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    154 run_manager = callback_manager.on_chain_start(\r\n    155     dumpd(self),\r\n    156     inputs,\r\n    157 )\r\n    158 try:\r\n    159     outputs = (\r\n--> 160         self._call(inputs, run_manager=run_manager)\r\n    161         if new_arg_supported\r\n    162         else self._call(inputs)\r\n    163     )\r\n    164 except (KeyboardInterrupt, Exception) as e:\r\n    165     run_manager.on_chain_error(e)\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/chains/retrieval_qa/base.py:120, in BaseRetrievalQA._call(self, inputs, run_manager)\r\n    117 question = inputs[self.input_key]\r\n    119 docs = self._get_docs(question)\r\n--> 120 answer = self.combine_documents_chain.run(\r\n    121     input_documents=docs, question=question, callbacks=_run_manager.get_child()\r\n    122 )\r\n    124 if self.return_source_documents:\r\n    125     return {self.output_key: answer, \"source_documents\": docs}\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/chains/base.py:293, in Chain.run(self, callbacks, tags, *args, **kwargs)\r\n    290     return self(args[0], callbacks=callbacks, tags=tags)[_output_key]\r\n    292 if kwargs and not args:\r\n--> 293     return self(kwargs, callbacks=callbacks, tags=tags)[_output_key]\r\n    295 if not kwargs and not args:\r\n    296     raise ValueError(\r\n    297         \"`run` supported with either positional arguments or keyword arguments,\"\r\n    298         \" but none were provided.\"\r\n    299     )\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/chains/base.py:168, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, include_run_info)\r\n    166     raise e\r\n    167 run_manager.on_chain_end(outputs)\r\n--> 168 final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    169     inputs, outputs, return_only_outputs\r\n    170 )\r\n    171 if include_run_info:\r\n    172     final_outputs[RUN_KEY] = RunInfo(run_id=run_manager.run_id)\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/chains/base.py:233, in Chain.prep_outputs(self, inputs, outputs, return_only_outputs)\r\n    231 self._validate_outputs(outputs)\r\n    232 if self.memory is not None:\r\n--> 233     self.memory.save_context(inputs, outputs)\r\n    234 if return_only_outputs:\r\n    235     return outputs\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/memory/chat_memory.py:34, in BaseChatMemory.save_context(self, inputs, outputs)\r\n     32 def save_context(self, inputs: Dict[str, Any], outputs: Dict[str, str]) -> None:\r\n     33     \"\"\"Save context from this conversation to buffer.\"\"\"\r\n---> 34     input_str, output_str = self._get_input_output(inputs, outputs)\r\n     35     self.chat_memory.add_user_message(input_str)\r\n     36     self.chat_memory.add_ai_message(output_str)\r\n\r\nFile /opt/miniconda3/envs/discord_dev/lib/python3.9/site-packages/langchain/memory/chat_memory.py:30, in BaseChatMemory._get_input_output(self, inputs, outputs)\r\n     28 else:\r\n     29     output_key = self.output_key\r\n---> 30 return inputs[prompt_input_key], outputs[output_key]\r\n\r\nKeyError: 'output' ```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6837/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6836",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6836/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6836/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6836/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6836",
        "id": 1777470667,
        "node_id": "I_kwDOIPDwls5p8gzL",
        "number": 6836,
        "title": "Issue: Large observation handling limit",
        "user": {
            "login": "haifengwu-msft",
            "id": 127444870,
            "node_id": "U_kgDOB5inhg",
            "avatar_url": "https://avatars.githubusercontent.com/u/127444870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/haifengwu-msft",
            "html_url": "https://github.com/haifengwu-msft",
            "followers_url": "https://api.github.com/users/haifengwu-msft/followers",
            "following_url": "https://api.github.com/users/haifengwu-msft/following{/other_user}",
            "gists_url": "https://api.github.com/users/haifengwu-msft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/haifengwu-msft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/haifengwu-msft/subscriptions",
            "organizations_url": "https://api.github.com/users/haifengwu-msft/orgs",
            "repos_url": "https://api.github.com/users/haifengwu-msft/repos",
            "events_url": "https://api.github.com/users/haifengwu-msft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/haifengwu-msft/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-27T17:57:22Z",
        "updated_at": "2023-11-08T16:08:35Z",
        "closed_at": "2023-11-08T16:08:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Large observation handling limit.\r\n\r\nHey langchain community,\r\n\r\nI have a tool which takes a database query as input and does database query. This is similar to what `QuerySQLDataBaseTool` does. The problem is the output of the query is out of control, it can be large and the agent exceeded the token limit.\r\n\r\nThe solution I have tried:\r\n1. Do pagination:\r\n    - Chunk the large output, summarize each chunk according to the target question\r\n    - Combine all chunks' summarization, which is much smaller than the original output.\r\n\r\n    Problems: \r\n    - Even though I did the summarization according to the target question, the summarization will still lose information.\r\n    - The pagination can be slow.\r\n\r\n2. Vectorization:\r\n    - Chunk the large output\r\n    - Embed each chunk and put them into a Vector DB.\r\n    - Do a similarity search based on the target question, and take number of chunks within the token limit.\r\n\r\n    Problems:\r\n    - The embedding take times, so it can be slow for a single thought.\r\n    - The output of the query is semantic continuously as a a whole, the chunks can break the semantic meaning.\r\n\r\nDoes anyone have a solution for this problem? I appreciated any idea! \r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6836/reactions",
            "total_count": 5,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 5
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6836/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6835",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6835/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6835/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6835/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6835",
        "id": 1777434119,
        "node_id": "PR_kwDOIPDwls5UD6ob",
        "number": 6835,
        "title": "Implement Function Callback tracer",
        "user": {
            "login": "alexiri",
            "id": 5055697,
            "node_id": "MDQ6VXNlcjUwNTU2OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5055697?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alexiri",
            "html_url": "https://github.com/alexiri",
            "followers_url": "https://api.github.com/users/alexiri/followers",
            "following_url": "https://api.github.com/users/alexiri/following{/other_user}",
            "gists_url": "https://api.github.com/users/alexiri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alexiri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alexiri/subscriptions",
            "organizations_url": "https://api.github.com/users/alexiri/orgs",
            "repos_url": "https://api.github.com/users/alexiri/repos",
            "events_url": "https://api.github.com/users/alexiri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alexiri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "vowelparrot",
                "id": 130414180,
                "node_id": "U_kgDOB8X2ZA",
                "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/vowelparrot",
                "html_url": "https://github.com/vowelparrot",
                "followers_url": "https://api.github.com/users/vowelparrot/followers",
                "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
                "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
                "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
                "repos_url": "https://api.github.com/users/vowelparrot/repos",
                "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
                "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-27T17:31:31Z",
        "updated_at": "2023-07-12T18:38:42Z",
        "closed_at": "2023-07-12T18:38:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6835",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6835",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6835.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6835.patch",
            "merged_at": "2023-07-12T18:38:41Z"
        },
        "body": "Description: I wanted to be able to redirect debug output to a function, but it wasn't very easy. I figured it would make sense to implement a `FunctionCallbackHandler`, and reimplement `ConsoleCallbackHandler` as a subclass that calls the `print` function. Now I can create a simple subclass in my project that calls `logging.info` or whatever I need.\r\n\r\nTag maintainer: @agola11\r\nTwitter handle: `@andandaraalex`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6835/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6835/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6834",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6834/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6834/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6834/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6834",
        "id": 1777413068,
        "node_id": "PR_kwDOIPDwls5UD2EF",
        "number": 6834,
        "title": "Adds a chain around sympy for symbolic math",
        "user": {
            "login": "sreiswig",
            "id": 2806769,
            "node_id": "MDQ6VXNlcjI4MDY3Njk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2806769?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sreiswig",
            "html_url": "https://github.com/sreiswig",
            "followers_url": "https://api.github.com/users/sreiswig/followers",
            "following_url": "https://api.github.com/users/sreiswig/following{/other_user}",
            "gists_url": "https://api.github.com/users/sreiswig/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sreiswig/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sreiswig/subscriptions",
            "organizations_url": "https://api.github.com/users/sreiswig/orgs",
            "repos_url": "https://api.github.com/users/sreiswig/repos",
            "events_url": "https://api.github.com/users/sreiswig/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sreiswig/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-27T17:15:15Z",
        "updated_at": "2023-07-12T19:17:33Z",
        "closed_at": "2023-07-12T19:17:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6834",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6834",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6834.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6834.patch",
            "merged_at": "2023-07-12T19:17:32Z"
        },
        "body": "- Description: Adds a new chain that acts as a wrapper around Sympy to give LLMs the ability to do some symbolic math.\r\n- Dependencies: SymPy\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6834/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6834/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6833",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6833/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6833/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6833/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6833",
        "id": 1777343878,
        "node_id": "PR_kwDOIPDwls5UDm0O",
        "number": 6833,
        "title": "Create MultiQueryRetriever",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-27T16:30:03Z",
        "updated_at": "2023-06-30T03:44:35Z",
        "closed_at": "2023-06-28T05:59:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6833",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6833",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6833.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6833.patch",
            "merged_at": "2023-06-28T05:59:40Z"
        },
        "body": "Distance-based vector database retrieval embeds (represents) queries in high-dimensional space and finds similar embedded documents based on \"distance\". But, retrieval may produce difference results with subtle changes in query wording or if the embeddings do not capture the semantics of the data well. Prompt engineering / tuning is sometimes done to manually address these problems, but can be tedious.\r\n\r\nThe `MultiQueryRetriever` automates the process of prompt tuning by using an LLM to generate multiple queries from different perspectives for a given  user input query. For each query, it retrieves a set of relevant documents and takes the unique union across all queries to get a larger set of potentially relevant documents. By generating multiple perspectives on the same question, the `MultiQueryRetriever` might be able to overcome some of the limitations of the distance-based retrieval and get a richer set of results.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6833/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6833/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6832",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6832/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6832/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6832/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6832",
        "id": 1777324704,
        "node_id": "PR_kwDOIPDwls5UDip2",
        "number": 6832,
        "title": "rail_parser: Allow creation from pydantic",
        "user": {
            "login": "irgolic",
            "id": 24586651,
            "node_id": "MDQ6VXNlcjI0NTg2NjUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/24586651?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/irgolic",
            "html_url": "https://github.com/irgolic",
            "followers_url": "https://api.github.com/users/irgolic/followers",
            "following_url": "https://api.github.com/users/irgolic/following{/other_user}",
            "gists_url": "https://api.github.com/users/irgolic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/irgolic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/irgolic/subscriptions",
            "organizations_url": "https://api.github.com/users/irgolic/orgs",
            "repos_url": "https://api.github.com/users/irgolic/repos",
            "events_url": "https://api.github.com/users/irgolic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/irgolic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T16:17:44Z",
        "updated_at": "2023-06-27T23:40:53Z",
        "closed_at": "2023-06-27T23:40:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6832",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6832",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6832.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6832.patch",
            "merged_at": "2023-06-27T23:40:52Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n\r\nAdds a way to create the guardrails output parser from a pydantic model.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6832/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6832/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6831",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6831/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6831/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6831/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6831",
        "id": 1777314172,
        "node_id": "PR_kwDOIPDwls5UDgWu",
        "number": 6831,
        "title": "bump version to 217",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T16:10:15Z",
        "updated_at": "2023-06-27T16:39:57Z",
        "closed_at": "2023-06-27T16:39:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6831",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6831",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6831.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6831.patch",
            "merged_at": "2023-06-27T16:39:56Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6831/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6831/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6830",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6830/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6830/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6830/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6830",
        "id": 1777245964,
        "node_id": "PR_kwDOIPDwls5UDRVP",
        "number": 6830,
        "title": "Order messages in PostgresChatMessageHistory",
        "user": {
            "login": "mattflo",
            "id": 35749,
            "node_id": "MDQ6VXNlcjM1NzQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/35749?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattflo",
            "html_url": "https://github.com/mattflo",
            "followers_url": "https://api.github.com/users/mattflo/followers",
            "following_url": "https://api.github.com/users/mattflo/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattflo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattflo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattflo/subscriptions",
            "organizations_url": "https://api.github.com/users/mattflo/orgs",
            "repos_url": "https://api.github.com/users/mattflo/repos",
            "events_url": "https://api.github.com/users/mattflo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattflo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T15:32:42Z",
        "updated_at": "2023-06-30T02:14:21Z",
        "closed_at": "2023-06-30T01:10:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6830",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6830",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6830.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6830.patch",
            "merged_at": "2023-06-30T01:10:28Z"
        },
        "body": "Fixes issue: https://github.com/hwchase17/langchain/issues/6829\r\n\r\nThis guarantees message history is in the correct order. \r\n\r\n@hwchase17 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6830/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6829",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6829/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6829/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6829/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6829",
        "id": 1777227042,
        "node_id": "I_kwDOIPDwls5p7lUi",
        "number": 6829,
        "title": "PostgresChatMessageHistory message order isn't guaranteed",
        "user": {
            "login": "mattflo",
            "id": 35749,
            "node_id": "MDQ6VXNlcjM1NzQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/35749?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattflo",
            "html_url": "https://github.com/mattflo",
            "followers_url": "https://api.github.com/users/mattflo/followers",
            "following_url": "https://api.github.com/users/mattflo/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattflo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattflo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattflo/subscriptions",
            "organizations_url": "https://api.github.com/users/mattflo/orgs",
            "repos_url": "https://api.github.com/users/mattflo/repos",
            "events_url": "https://api.github.com/users/mattflo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattflo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T15:22:50Z",
        "updated_at": "2023-06-30T17:13:58Z",
        "closed_at": "2023-06-30T17:13:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version: 0.0.208\r\nOS version: macOS 13.4\r\nPython version: 3.10.12\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [X] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nQueries without an `order by` clause aren't guaranteed to have any particular order. \n\n### Expected behavior\n\nChat history should be in order.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6829/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6829/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6828",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6828/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6828/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6828/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6828",
        "id": 1777167767,
        "node_id": "I_kwDOIPDwls5p7W2X",
        "number": 6828,
        "title": "Custom tool class not working with extra properties",
        "user": {
            "login": "lironezra",
            "id": 28096499,
            "node_id": "MDQ6VXNlcjI4MDk2NDk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/28096499?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lironezra",
            "html_url": "https://github.com/lironezra",
            "followers_url": "https://api.github.com/users/lironezra/followers",
            "following_url": "https://api.github.com/users/lironezra/following{/other_user}",
            "gists_url": "https://api.github.com/users/lironezra/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lironezra/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lironezra/subscriptions",
            "organizations_url": "https://api.github.com/users/lironezra/orgs",
            "repos_url": "https://api.github.com/users/lironezra/repos",
            "events_url": "https://api.github.com/users/lironezra/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lironezra/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-27T14:54:25Z",
        "updated_at": "2023-11-25T18:35:57Z",
        "closed_at": "2023-10-05T16:10:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nHello everyone,\r\n\r\nI am currently utilizing the OpenAIFunctions agent along with some custom tools that I've developed. I'm trying to incorporate a custom property named `source_documents` into one of these tools. My intention is to assign a value to this property within the tool and subsequently utilize this value outside of the tool.\r\n\r\nTo illustrate, this is how I invoke my custom tool: `tools = [JamesAllenRetrievalSearchTool(source_documents), OrderTrackingTool()]`. Here, `source_documents `is the property that I wish to update within the `JamesAllenRetrievalSearchTool `class.\r\n\r\nI attempted to create a constructor within the custom tool and pass the desired variable for updating, but unfortunately, this approach was unsuccessful. If anyone has knowledge of a solution to my problem, I would greatly appreciate your assistance.\r\n\r\nThank you!\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [x] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nHere is My custom tool Class: \r\n\r\n`class JamesAllenRetrivalSearchTool(BaseTool):\r\n\r\n    name = \"jamesallen-search\"\r\n    description = \"Use this tool as the primary source of context information. Always search for the answers using this tool first, don't make up answers yourself\"\r\n    return_direct = True\r\n    args_schema: Type[BaseModel] = JamesAllenRetrivalSearchInput  \r\n\r\n    def _run(self, question: str, run_manager: Optional[CallbackManagerForToolRun] = None) -> str:\r\n        knowledge_base_retrival_chain = RetrivalQAChain(prompt)\r\n        result = knowledge_base_retrival_chain.run(question)\r\n        # **HERE -> I need to update returned source_documents from the chain outside the custom tool class**\r\n        # source_documents = result[\"source_documents\"]\r\n        # self.retrival_source_docs = source_documents\r\n        return result[\"result\"]\r\n    \r\n    async def _arun(self, question: str, run_manager: Optional[AsyncCallbackManagerForToolRun] = None) -> str:\r\n        \"\"\"Use the tool asynchronously.\"\"\"\r\n        raise NotImplementedError(\"Not implemented\")\r\n`\r\n\r\n### Expected behavior\r\n\r\nWhen I run the tool I expect that the answer from the chain will return and the source documents will be update.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6828/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6828/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6827",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6827/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6827/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6827/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6827",
        "id": 1777164701,
        "node_id": "PR_kwDOIPDwls5UC_xs",
        "number": 6827,
        "title": "Use serialized format for messages in tracer",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-27T14:52:59Z",
        "updated_at": "2023-07-04T09:19:09Z",
        "closed_at": "2023-07-04T09:19:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6827",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6827",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6827.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6827.patch",
            "merged_at": "2023-07-04T09:19:09Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @dev2049\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @dev2049\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @vowelparrot\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6827/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6827/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6825",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6825/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6825/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6825/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6825",
        "id": 1776978548,
        "node_id": "I_kwDOIPDwls5p6op0",
        "number": 6825,
        "title": "Import Error for Gpt4All",
        "user": {
            "login": "atanvectorsolv",
            "id": 111008526,
            "node_id": "U_kgDOBp3bDg",
            "avatar_url": "https://avatars.githubusercontent.com/u/111008526?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/atanvectorsolv",
            "html_url": "https://github.com/atanvectorsolv",
            "followers_url": "https://api.github.com/users/atanvectorsolv/followers",
            "following_url": "https://api.github.com/users/atanvectorsolv/following{/other_user}",
            "gists_url": "https://api.github.com/users/atanvectorsolv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/atanvectorsolv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/atanvectorsolv/subscriptions",
            "organizations_url": "https://api.github.com/users/atanvectorsolv/orgs",
            "repos_url": "https://api.github.com/users/atanvectorsolv/repos",
            "events_url": "https://api.github.com/users/atanvectorsolv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/atanvectorsolv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-27T13:31:27Z",
        "updated_at": "2023-11-28T16:10:20Z",
        "closed_at": "2023-11-28T16:10:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version: 0.0.27 (I installed over pip install lanchain)\r\nPython v: 3.8\r\nOS: Windows 11\r\n\r\nWhen I try to ``from langchain.llms import GPT4All`\r\n\r\nI am getting the error that says there is no Gpt4All module.\r\nWhen I check the installed library it does not exist. However when I check github repo it exist in the latest version as per today.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nfrom langchain.llms import GPT4All\r\n\r\nmodel_path = r\"C:\\Users\\suat.atan\\AppData\\Local\\nomic.ai\\GPT4All\\ggml-gpt4all-j-v1.3-groovy.bin\"\r\nllm = GPT4All(model= model_path)\r\n\r\nllm(\"Where is Paris?\")\r\n```\n\n### Expected behavior\n\nAt least the first line of the code should work.\r\nThis code should answer my prompt",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6825/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6825/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6824",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6824/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6824/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6824/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6824",
        "id": 1776977466,
        "node_id": "PR_kwDOIPDwls5UCW2x",
        "number": 6824,
        "title": "Add `OpenAIMultiFunctionsAgent` to import list in agents directory",
        "user": {
            "login": "Tajcore",
            "id": 45900878,
            "node_id": "MDQ6VXNlcjQ1OTAwODc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/45900878?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Tajcore",
            "html_url": "https://github.com/Tajcore",
            "followers_url": "https://api.github.com/users/Tajcore/followers",
            "following_url": "https://api.github.com/users/Tajcore/following{/other_user}",
            "gists_url": "https://api.github.com/users/Tajcore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Tajcore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Tajcore/subscriptions",
            "organizations_url": "https://api.github.com/users/Tajcore/orgs",
            "repos_url": "https://api.github.com/users/Tajcore/repos",
            "events_url": "https://api.github.com/users/Tajcore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Tajcore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-27T13:30:56Z",
        "updated_at": "2023-06-30T01:34:28Z",
        "closed_at": "2023-06-30T01:34:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6824",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6824",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6824.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6824.patch",
            "merged_at": "2023-06-30T01:34:27Z"
        },
        "body": "- Added OpenAIMultiFunctionsAgent to the import list of the Agents directory\r\n@hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6824/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6824/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6823",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6823/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6823/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6823/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6823",
        "id": 1776873702,
        "node_id": "PR_kwDOIPDwls5UB_X9",
        "number": 6823,
        "title": "WebBaseLoader: optionally raise exception in the case of http error",
        "user": {
            "login": "mrtj",
            "id": 3469711,
            "node_id": "MDQ6VXNlcjM0Njk3MTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3469711?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mrtj",
            "html_url": "https://github.com/mrtj",
            "followers_url": "https://api.github.com/users/mrtj/followers",
            "following_url": "https://api.github.com/users/mrtj/following{/other_user}",
            "gists_url": "https://api.github.com/users/mrtj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mrtj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mrtj/subscriptions",
            "organizations_url": "https://api.github.com/users/mrtj/orgs",
            "repos_url": "https://api.github.com/users/mrtj/repos",
            "events_url": "https://api.github.com/users/mrtj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mrtj/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T12:51:54Z",
        "updated_at": "2023-06-27T23:44:00Z",
        "closed_at": "2023-06-27T23:44:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6823",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6823",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6823.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6823.patch",
            "merged_at": "2023-06-27T23:44:00Z"
        },
        "body": "  - **Description**: this PR adds the possibility to raise an exception in the case the http request did not return a 2xx status code. This is particularly useful in the situation when the url points to a non-existent web page, the server returns a http status of 404 NOT FOUND, but WebBaseLoader anyway parses and returns the http body of the error message.\r\n  - **Dependencies**: none,\r\n  - **Tag maintainer**: @rlancemartin, @eyurtsev,\r\n  - **Twitter handle**: jtolgyesi\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6823/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6823/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6822",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6822/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6822/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6822/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6822",
        "id": 1776845482,
        "node_id": "I_kwDOIPDwls5p6IKq",
        "number": 6822,
        "title": "\"office365/__init__ .py\" filename contains typo",
        "user": {
            "login": "shwang",
            "id": 1750835,
            "node_id": "MDQ6VXNlcjE3NTA4MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1750835?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shwang",
            "html_url": "https://github.com/shwang",
            "followers_url": "https://api.github.com/users/shwang/followers",
            "following_url": "https://api.github.com/users/shwang/following{/other_user}",
            "gists_url": "https://api.github.com/users/shwang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shwang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shwang/subscriptions",
            "organizations_url": "https://api.github.com/users/shwang/orgs",
            "repos_url": "https://api.github.com/users/shwang/repos",
            "events_url": "https://api.github.com/users/shwang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shwang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-27T12:42:09Z",
        "updated_at": "2023-10-09T16:06:26Z",
        "closed_at": "2023-10-09T16:06:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nMost recent version of langchain, 0.0.216.\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nCauses bazel build fail due to small typo in __init__.py filename (filenames cannot have spaces).\r\n\r\n### Expected behavior\r\n\r\nShould rename __init__. py to __init__.py",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6822/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6822/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6821",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6821/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6821/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6821/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6821",
        "id": 1776838431,
        "node_id": "PR_kwDOIPDwls5UB3ek",
        "number": 6821,
        "title": "Specify utilities package in SerpAPIWrapper docstring",
        "user": {
            "login": "jung-hunsoo",
            "id": 6870447,
            "node_id": "MDQ6VXNlcjY4NzA0NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6870447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jung-hunsoo",
            "html_url": "https://github.com/jung-hunsoo",
            "followers_url": "https://api.github.com/users/jung-hunsoo/followers",
            "following_url": "https://api.github.com/users/jung-hunsoo/following{/other_user}",
            "gists_url": "https://api.github.com/users/jung-hunsoo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jung-hunsoo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jung-hunsoo/subscriptions",
            "organizations_url": "https://api.github.com/users/jung-hunsoo/orgs",
            "repos_url": "https://api.github.com/users/jung-hunsoo/repos",
            "events_url": "https://api.github.com/users/jung-hunsoo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jung-hunsoo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T12:38:31Z",
        "updated_at": "2023-06-28T12:58:52Z",
        "closed_at": "2023-06-28T05:26:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6821",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6821",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6821.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6821.patch",
            "merged_at": "2023-06-28T05:26:21Z"
        },
        "body": "  - Description: Specify utilities package in SerpAPIWrapper docstring\r\n  - Issue: Not an issue\r\n  - Dependencies: (n/a)\r\n  - Tag maintainer: @dev2049 \r\n  - Twitter handle: (n/a)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6821/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6821/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6820",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6820/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6820/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6820/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6820",
        "id": 1776748473,
        "node_id": "PR_kwDOIPDwls5UBjmZ",
        "number": 6820,
        "title": "Synchronize metadata types between pgvector.add_texts() and pgvector.similarity_search_with_score_by_vector()",
        "user": {
            "login": "yungang",
            "id": 3469716,
            "node_id": "MDQ6VXNlcjM0Njk3MTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3469716?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yungang",
            "html_url": "https://github.com/yungang",
            "followers_url": "https://api.github.com/users/yungang/followers",
            "following_url": "https://api.github.com/users/yungang/following{/other_user}",
            "gists_url": "https://api.github.com/users/yungang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yungang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yungang/subscriptions",
            "organizations_url": "https://api.github.com/users/yungang/orgs",
            "repos_url": "https://api.github.com/users/yungang/repos",
            "events_url": "https://api.github.com/users/yungang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yungang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-27T11:50:58Z",
        "updated_at": "2023-11-07T03:54:13Z",
        "closed_at": "2023-11-07T03:54:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6820",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6820",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6820.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6820.patch",
            "merged_at": null
        },
        "body": "\u2026similarity_search_with_score_by_vector()\r\n\r\npgvector.add_texts() stored metadata to postgresql is from dict to string, but pgvector.similarity_search_with_score_by_vector() get metadata just string from database, when struct Document object, report error:\r\n```\r\npydantic.error_wrappers.ValidationError: 1 validation error for Document\r\nmetadata\r\n  value is not a valid dict (type=type_error.dict)\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6820/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6820/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6819",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6819/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6819/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6819/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6819",
        "id": 1776735480,
        "node_id": "I_kwDOIPDwls5p5tT4",
        "number": 6819,
        "title": "LLMRouterChain uses deprecated predict_and_parse method",
        "user": {
            "login": "amosjyng",
            "id": 1863868,
            "node_id": "MDQ6VXNlcjE4NjM4Njg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1863868?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amosjyng",
            "html_url": "https://github.com/amosjyng",
            "followers_url": "https://api.github.com/users/amosjyng/followers",
            "following_url": "https://api.github.com/users/amosjyng/following{/other_user}",
            "gists_url": "https://api.github.com/users/amosjyng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amosjyng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amosjyng/subscriptions",
            "organizations_url": "https://api.github.com/users/amosjyng/orgs",
            "repos_url": "https://api.github.com/users/amosjyng/repos",
            "events_url": "https://api.github.com/users/amosjyng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amosjyng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 20,
        "created_at": "2023-06-27T11:45:08Z",
        "updated_at": "2023-11-22T03:19:32Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain v0.0.216, Python 3.11.3 on WSL2\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nFollow the first example at https://python.langchain.com/docs/modules/chains/foundational/router\n\n### Expected behavior\n\n[This line](https://github.com/hwchase17/langchain/blob/v0.0.216/langchain/chains/llm.py#L275) gets triggered:\r\n\r\n> The predict_and_parse method is deprecated, instead pass an output parser directly to LLMChain.\r\n\r\nAs suggested by the error, we can make the following code changes to pass the output parser directly to LLMChain by changing [this line](https://github.com/hwchase17/langchain/blob/v0.0.216/langchain/chains/router/llm_router.py#L83) to this:\r\n\r\n```python\r\nllm_chain = LLMChain(llm=llm, prompt=prompt, output_parser=prompt.output_parser)\r\n```\r\n\r\nAnd calling `LLMChain.__call__` instead of `LLMChain.predict_and_parse` by changing [these lines](https://github.com/hwchase17/langchain/blob/v0.0.216/langchain/chains/router/llm_router.py#L58-L61) to this:\r\n\r\n```python\r\ncast(\r\n    Dict[str, Any],\r\n    self.llm_chain(inputs, callbacks=callbacks),\r\n)\r\n```\r\n\r\nUnfortunately, while this avoids the warning, it creates a new error:\r\n\r\n> ValueError: Missing some output keys: {'destination', 'next_inputs'}\r\n\r\nbecause LLMChain currently [assumes the existence of a single `self.output_key`](https://github.com/hwchase17/langchain/blob/v0.0.216/langchain/chains/llm.py#L220) and produces this as output:\r\n\r\n> {'text': {'destination': 'physics', 'next_inputs': {'input': 'What is black body radiation?'}}}\r\n\r\nEven modifying that function to return the keys if the parsed output is a dict triggers the same error, but for the missing key of \"text\" instead. `predict_and_parse` avoids this fate by skipping output validation entirely.\r\n\r\nIt appears changes may have to be a bit more involved here if LLMRouterChain is to keep using LLMChain.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6819/reactions",
            "total_count": 15,
            "+1": 11,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 4
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6819/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6818",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6818/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6818/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6818/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6818",
        "id": 1776722095,
        "node_id": "I_kwDOIPDwls5p5qCv",
        "number": 6818,
        "title": "Batch search for Qdrant database",
        "user": {
            "login": "MalteHB",
            "id": 47593213,
            "node_id": "MDQ6VXNlcjQ3NTkzMjEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/47593213?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MalteHB",
            "html_url": "https://github.com/MalteHB",
            "followers_url": "https://api.github.com/users/MalteHB/followers",
            "following_url": "https://api.github.com/users/MalteHB/following{/other_user}",
            "gists_url": "https://api.github.com/users/MalteHB/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MalteHB/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MalteHB/subscriptions",
            "organizations_url": "https://api.github.com/users/MalteHB/orgs",
            "repos_url": "https://api.github.com/users/MalteHB/repos",
            "events_url": "https://api.github.com/users/MalteHB/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MalteHB/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T11:37:00Z",
        "updated_at": "2023-10-05T16:08:11Z",
        "closed_at": "2023-10-05T16:08:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI am proposing an enhancement for the `langchain` implementation of `qdrant`. As of the current version, `langchain` only supports single text searches. My feature proposal involves extending `langchain` to integrate the [search_batch](https://github.com/qdrant/qdrant-client/blob/master/qdrant_client/qdrant_client.py#L171) method from the `qdrant` client. This would allow us to conduct batch searches, increasing efficiency, and potentially speeding up the process for large volumes of text.\n\n### Motivation\n\nThis feature request is born out of the need for more efficient text searches when dealing with large data sets. Currently, using `langchain` for search functionality becomes cumbersome and time-consuming due to the lack of batch search capabilities. Running single text searches one after another restricts the speed of operations and is not scalable when dealing with large text corpuses.\r\n\r\nGiven the increasing size and complexity of modern text datasets and applications, it is more pertinent than ever to have a robust and efficient method of search that can handle bulk operations. With this enhancement, we can perform multiple text searches simultaneously, thus saving considerable time and computing resources.\n\n### Your contribution\n\nWhile I would love to contribute, I simply do not have the time right now, so I, therefore, hope that the great community, currently building `langchain` sees some sense in the above-mentioned paragraphs.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6818/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6818/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6817",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6817/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6817/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6817/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6817",
        "id": 1776689335,
        "node_id": "PR_kwDOIPDwls5UBWff",
        "number": 6817,
        "title": "feat: prompt laboratory",
        "user": {
            "login": "dubuduru",
            "id": 78554126,
            "node_id": "MDQ6VXNlcjc4NTU0MTI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/78554126?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dubuduru",
            "html_url": "https://github.com/dubuduru",
            "followers_url": "https://api.github.com/users/dubuduru/followers",
            "following_url": "https://api.github.com/users/dubuduru/following{/other_user}",
            "gists_url": "https://api.github.com/users/dubuduru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dubuduru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dubuduru/subscriptions",
            "organizations_url": "https://api.github.com/users/dubuduru/orgs",
            "repos_url": "https://api.github.com/users/dubuduru/repos",
            "events_url": "https://api.github.com/users/dubuduru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dubuduru/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-27T11:17:33Z",
        "updated_at": "2023-11-07T03:54:51Z",
        "closed_at": "2023-11-07T03:54:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6817",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6817",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6817.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6817.patch",
            "merged_at": null
        },
        "body": "- Description: implement `PromptLaboratory` similar to `ModelLaboratory`, which facilitates experimenting with different prompts on one model.\r\n- Example usage can be checked with `docs/extras/guides/prompt_laboratory.ipynb`\r\n- Tag maintainer:   @hwchase17, @dev2049",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6817/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6817/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6816",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6816/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6816/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6816/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6816",
        "id": 1776676123,
        "node_id": "PR_kwDOIPDwls5UBThO",
        "number": 6816,
        "title": "fix pinecone delete bug",
        "user": {
            "login": "IANTHEREAL",
            "id": 10701973,
            "node_id": "MDQ6VXNlcjEwNzAxOTcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/10701973?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IANTHEREAL",
            "html_url": "https://github.com/IANTHEREAL",
            "followers_url": "https://api.github.com/users/IANTHEREAL/followers",
            "following_url": "https://api.github.com/users/IANTHEREAL/following{/other_user}",
            "gists_url": "https://api.github.com/users/IANTHEREAL/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IANTHEREAL/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IANTHEREAL/subscriptions",
            "organizations_url": "https://api.github.com/users/IANTHEREAL/orgs",
            "repos_url": "https://api.github.com/users/IANTHEREAL/repos",
            "events_url": "https://api.github.com/users/IANTHEREAL/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IANTHEREAL/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T11:11:17Z",
        "updated_at": "2023-06-28T01:58:22Z",
        "closed_at": "2023-06-27T23:50:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6816",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6816",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6816.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6816.patch",
            "merged_at": "2023-06-27T23:50:17Z"
        },
        "body": " The implementation of delete in pinecone vector omits the namespace, which will cause delete failed\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6816/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6816/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6815",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6815/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6815/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6815/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6815",
        "id": 1776637787,
        "node_id": "PR_kwDOIPDwls5UBLAX",
        "number": 6815,
        "title": "feat: implement prompt laboratory",
        "user": {
            "login": "jeeewooon",
            "id": 126535544,
            "node_id": "U_kgDOB4rHeA",
            "avatar_url": "https://avatars.githubusercontent.com/u/126535544?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeeewooon",
            "html_url": "https://github.com/jeeewooon",
            "followers_url": "https://api.github.com/users/jeeewooon/followers",
            "following_url": "https://api.github.com/users/jeeewooon/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeeewooon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeeewooon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeeewooon/subscriptions",
            "organizations_url": "https://api.github.com/users/jeeewooon/orgs",
            "repos_url": "https://api.github.com/users/jeeewooon/repos",
            "events_url": "https://api.github.com/users/jeeewooon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeeewooon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T10:50:25Z",
        "updated_at": "2023-06-27T11:17:01Z",
        "closed_at": "2023-06-27T11:15:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6815",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6815",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6815.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6815.patch",
            "merged_at": null
        },
        "body": "- Description: implement `PromptLaboratory` similar to `ModelLaboratory`, which facilitates experimenting with different prompts on one model.\r\n- Example usage can be checked with `docs/extras/guides/prompt_laboratory.ipynb`\r\n- Tag maintainer:   @hwchase17, @dev2049",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6815/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6815/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6814",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6814/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6814/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6814/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6814",
        "id": 1776544976,
        "node_id": "I_kwDOIPDwls5p4-zQ",
        "number": 6814,
        "title": "Issue: The parameters passed by the OpenAI function agent seem to have a problem.",
        "user": {
            "login": "xukecheng",
            "id": 29099863,
            "node_id": "MDQ6VXNlcjI5MDk5ODYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/29099863?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xukecheng",
            "html_url": "https://github.com/xukecheng",
            "followers_url": "https://api.github.com/users/xukecheng/followers",
            "following_url": "https://api.github.com/users/xukecheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/xukecheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xukecheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xukecheng/subscriptions",
            "organizations_url": "https://api.github.com/users/xukecheng/orgs",
            "repos_url": "https://api.github.com/users/xukecheng/repos",
            "events_url": "https://api.github.com/users/xukecheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xukecheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-27T10:01:30Z",
        "updated_at": "2023-07-04T07:42:15Z",
        "closed_at": "2023-07-04T07:40:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain 0.0.200 in Debian 11\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nPydantic Model:\r\n```py\r\nclass SortCondition(BaseModel):\r\n    field: str = Field(description=\"Field name\")\r\n    order: str = Field(description=\"Sort order\", enum=[\"desc\", \"asc\"])\r\n\r\n\r\nclass RecordQueryCondition(BaseModel):\r\n    datasheet_id: str = Field(description=\"The ID of the datasheet to retrieve records from.\")\r\n    filter_condition: Optional[Dict[str, str]] = Field(\r\n        description=\"\"\"\r\n            Find records that meet specific conditions.\r\n            This object should contain a key-value pair where the key is the field name and the value is the lookup value. For instance: {\"title\": \"test\"}.\r\n            \"\"\"\r\n    )\r\n    sort_condition: Optional[List[SortCondition]] = Field(min_items=1,\r\n        description=\"Sort returned records by specific field\"\r\n    )\r\n    maxRecords_condition: Optional[int] = Field(\r\n        description=\"Limit the number of returned values.\"\r\n    )\r\n```\r\n\r\nOpenAI return parameters:\r\n```json\r\n{\r\n    \"datasheet_id\": \"dsti6VpNpuKQpHVSnh\",\r\n    \"sort_condition\": [\r\n        {\r\n            \"field\": \"Timestamp\",\r\n            \"direction\": \"desc\" # error key!\r\n        }\r\n    ],\r\n    \"maxRecords_condition\": 1\r\n}\r\n```\r\n\r\nSo, LangChain raise a error: \r\nValidationError: 1 validation error for RecordQueryCondition\r\nsort_condition -> 0 -> order\r\n  field required (type=value_error.missing)\r\n\r\nThis is source code: https://github.com/xukecheng/APITable-LLMs-Enhancement-Experiments/blob/main/apitable_langchain_function.ipynb\r\n\r\n### Expected behavior\r\n\r\nI use the OpenAI API to define functions, so it will work properly: https://github.com/xukecheng/APITable-LLMs-Enhancement-Experiments/blob/main/apitable_openai_function.ipynb",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6814/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6814/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6813",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6813/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6813/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6813/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6813",
        "id": 1776446588,
        "node_id": "I_kwDOIPDwls5p4mx8",
        "number": 6813,
        "title": "Issue[Bug]: OpenAIMultiFunctionsAgent stuck - 'tool_selection is not a valid tool'",
        "user": {
            "login": "SimonB97",
            "id": 102378134,
            "node_id": "U_kgDOBhoqlg",
            "avatar_url": "https://avatars.githubusercontent.com/u/102378134?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SimonB97",
            "html_url": "https://github.com/SimonB97",
            "followers_url": "https://api.github.com/users/SimonB97/followers",
            "following_url": "https://api.github.com/users/SimonB97/following{/other_user}",
            "gists_url": "https://api.github.com/users/SimonB97/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SimonB97/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SimonB97/subscriptions",
            "organizations_url": "https://api.github.com/users/SimonB97/orgs",
            "repos_url": "https://api.github.com/users/SimonB97/repos",
            "events_url": "https://api.github.com/users/SimonB97/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SimonB97/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528808,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-27T09:09:28Z",
        "updated_at": "2023-10-05T16:07:36Z",
        "closed_at": "2023-10-05T16:07:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHi, \r\n\r\nI was trying to get `PythonREPL `or in this case `PythonAstREPL `to work with the `OpenAIMultiFunctionsAgent` reliably, because I came across the same problem as mentioned in this issue: https://github.com/hwchase17/langchain/issues/6364.\r\n\r\nI applied the mentioned fix, which worked very well for fixing the REPL tool, but sadly it also broke the usage of any other tools. The agent repeatedly reports `tool_selection is not a valid tool, try another one.`\r\n\r\nThis is my code to create the agent and tools, as well as for applying the fix (i'm using chainlit for ui):\r\n\r\n```\r\n@cl.langchain_factory(use_async=False)\r\ndef factory():\r\n    # Initialize the OpenAI language model\r\n    model = llms[str(use_model)]\r\n    llm = ChatOpenAI(\r\n        temperature=0, \r\n        model=model,\r\n        streaming=True, \r\n        client=\"openai\",\r\n        # callbacks=[cl.ChainlitCallbackHandler()]\r\n    )\r\n\r\n    # Initialize the SerpAPIWrapper for search functionality\r\n    search = SerpAPIWrapper(search_engine=\"google\")\r\n\r\n    # Define a list of tools offered by the agent\r\n    tools = [\r\n        Tool(\r\n            name=\"Search\",\r\n            func=search.run, \r\n            description=\"Useful when you need to answer questions about current events or if you have to search the web. You should ask targeted questions like for google.\"\r\n        ),\r\n        CustomPythonAstREPLTool(),\r\n        WriteFileTool(),\r\n        ReadFileTool(),\r\n        CopyFileTool(),\r\n        MoveFileTool(),\r\n        DeleteFileTool(),\r\n        FileSearchTool(),\r\n        ListDirectoryTool(),\r\n        ShellTool(),\r\n        HumanInputRun(),\r\n    ]\r\n\r\n    memory = ConversationTokenBufferMemory(\r\n        memory_key=\"memory\", \r\n        return_messages=True,\r\n        max_token_limit=2000,\r\n        llm=llm\r\n    )\r\n\r\n    # needed for memory with openai functions agent\r\n    agent_kwargs = {\r\n        \"extra_prompt_messages\": [MessagesPlaceholder(variable_name=\"memory\")],\r\n    }\r\n\r\n    prompt = OpenAIFunctionsAgent.create_prompt(\r\n        extra_prompt_messages=[MessagesPlaceholder(variable_name=\"memory\")],\r\n    ),\r\n\r\n    print(\"Prompt: \", prompt[0])\r\n\r\n    cust_agent = CustomOpenAIMultiFunctionsAgent(\r\n        tools=tools,\r\n        llm=llm,\r\n        prompt=prompt[0],\r\n        # kwargs=agent_kwargs,\r\n        # return_intermediate_steps=True,\r\n    )\r\n\r\n    mrkl = AgentExecutor.from_agent_and_tools(\r\n        agent=cust_agent,\r\n        tools=tools,\r\n        memory=memory,\r\n        # kwargs=agent_kwargs,\r\n        # return_intermediate_steps=True,\r\n    )\r\n\r\n    return mrkl\r\n\r\n\r\n\r\n# ----- Custom classes and functions ----- #\r\n\r\nclass CustomPythonAstREPLTool(PythonAstREPLTool):\r\n    name = \"python\"\r\n    description = (\r\n        \"A Python shell. Use this to execute python commands. \"\r\n        \"The input must be an object as follows: \"\r\n        \"{'__arg1': 'a valid python command.'} \"\r\n        \"When using this tool, sometimes output is abbreviated - \"\r\n        \"Make sure it does not look abbreviated before using it in your answer. \"\r\n        \"Don't add comments to your python code.\"\r\n    )\r\n\r\ndef _parse_ai_message(message: BaseMessage) -> Union[AgentAction, AgentFinish]:\r\n    \"\"\"Parse an AI message.\"\"\"\r\n    if not isinstance(message, AIMessage):\r\n        raise TypeError(f\"Expected an AI message got {type(message)}\")\r\n\r\n    function_call = message.additional_kwargs.get(\"function_call\", {})\r\n\r\n    if function_call:\r\n        function_call = message.additional_kwargs[\"function_call\"]\r\n        function_name = function_call[\"name\"]\r\n        try:\r\n            _tool_input = json.loads(function_call[\"arguments\"])\r\n        except JSONDecodeError:\r\n            print(\r\n                f\"Could not parse tool input: {function_call} because \"\r\n                f\"the `arguments` is not valid JSON.\"\r\n            )\r\n            _tool_input = function_call[\"arguments\"]\r\n\r\n        # HACK HACK HACK:\r\n        # The code that encodes tool input into Open AI uses a special variable\r\n        # name called `__arg1` to handle old style tools that do not expose a\r\n        # schema and expect a single string argument as an input.\r\n        # We unpack the argument here if it exists.\r\n        # Open AI does not support passing in a JSON array as an argument.\r\n        if \"__arg1\" in _tool_input:\r\n            tool_input = _tool_input[\"__arg1\"]\r\n        else:\r\n            tool_input = _tool_input\r\n\r\n        content_msg = \"responded: {content}\\n\" if message.content else \"\\n\"\r\n\r\n        return _FunctionsAgentAction(\r\n            tool=function_name,\r\n            tool_input=tool_input,\r\n            log=f\"\\nInvoking: `{function_name}` with `{tool_input}`\\n{content_msg}\\n\",\r\n            message_log=[message],\r\n        )\r\n\r\n    return AgentFinish(return_values={\"output\": message.content}, log=message.content)\r\n\r\nclass CustomOpenAIMultiFunctionsAgent(OpenAIMultiFunctionsAgent):\r\n    def plan(\r\n        self,\r\n        intermediate_steps: List[Tuple[AgentAction, str]],\r\n        callbacks: Callbacks = None,\r\n        **kwargs: Any,\r\n    ) -> Union[AgentAction, AgentFinish]:\r\n        \"\"\"Given input, decided what to do.\r\n        Args:\r\n            intermediate_steps: Steps the LLM has taken to date, along with observations\r\n            **kwargs: User inputs.\r\n        Returns:\r\n            Action specifying what tool to use.\r\n        \"\"\"\r\n        user_input = kwargs[\"input\"]\r\n        agent_scratchpad = _format_intermediate_steps(intermediate_steps)\r\n        memory = kwargs[\"memory\"]\r\n        prompt = self.prompt.format_prompt(\r\n            input=user_input, agent_scratchpad=agent_scratchpad, memory=memory\r\n        )\r\n        messages = prompt.to_messages()\r\n        predicted_message = self.llm.predict_messages(\r\n            messages, functions=self.functions, callbacks=callbacks\r\n        )\r\n        agent_decision = _parse_ai_message(predicted_message)\r\n        return agent_decision\r\n```\r\n\r\n\r\nAnd these are the console outputs with `langchain.debug = true`:\r\n\r\n```\r\nPrompt:  input_variables=['memory', 'agent_scratchpad', 'input'] output_parser=None partial_variables={} \r\nmessages=[SystemMessage(content='You are a helpful AI assistant.', additional_kwargs={}), MessagesPlaceholder(variable_name='memory'), HumanMessagePromptTemplate(prompt=PromptTemplate(input_variables=['input'], output_parser=None, partial_variables={}, template='{input}', template_format='f-string', validate_template=True), additional_kwargs={}), MessagesPlaceholder(variable_name='agent_scratchpad')]\r\n[chain/start] [1:chain:AgentExecutor] Entering Chain run with input:\r\n{\r\n  \"input\": \"write a text file to my desktop\",\r\n  \"memory\": []\r\n}\r\n[llm/start] [1:chain:AgentExecutor > 2:llm:ChatOpenAI] Entering LLM run with input:\r\n{\r\n  \"prompts\": [\r\n    \"System: You are a helpful AI assistant.\\nHuman: write a text file to my desktop\"\r\n  ]\r\n}\r\n[llm/end] [1:chain:AgentExecutor > 2:llm:ChatOpenAI] [3.00s] Exiting LLM run with output:\r\n{\r\n  \"generations\": [\r\n    [\r\n      {\r\n        \"text\": \"\",\r\n        \"generation_info\": null,\r\n        \"message\": {\r\n          \"content\": \"\",\r\n          \"additional_kwargs\": {\r\n            \"function_call\": {\r\n              \"name\": \"tool_selection\",\r\n              \"arguments\": \"{\\n  \\\"actions\\\": [\\n    {\\n      \\\"action_name\\\": \\\"write_file\\\",\\n      \\\"action\\\": {\\n        \\\"file_path\\\": \\\"~/Desktop/my_file.txt\\\",\\n        \\\"text\\\": \\\"This is the content of my file.\\\"\\n      }\\n    }\\n  ]\\n}\"\r\n            }\r\n          },\r\n          \"example\": false\r\n        }\r\n      }\r\n    ]\r\n  ],\r\n  \"llm_output\": null,\r\n  \"run\": null\r\n}\r\n[tool/start] [1:chain:AgentExecutor > 3:tool:invalid_tool] Entering Tool run with input:\r\n\"tool_selection\"\r\n[tool/end] [1:chain:AgentExecutor > 3:tool:invalid_tool] [0.0ms] Exiting Tool run with output:\r\n\"tool_selection is not a valid tool, try another one.\"\r\n[llm/start] [1:chain:AgentExecutor > 4:llm:ChatOpenAI] Entering LLM run with input:\r\n{\r\n  \"prompts\": [\r\n    \"System: You are a helpful AI assistant.\\nHuman: write a text file to my desktop\\nAI: {'name': 'tool_selection', 'arguments': '{\\\\n  \\\"actions\\\": [\\\\n    {\\\\n      \\\"action_name\\\": \\\"write_file\\\",\\\\n      \\\"action\\\": {\\\\n        \\\"file_path\\\": \\\"~/Desktop/my_file.txt\\\",\\\\n        \\\"text\\\": \\\"This is the content of my file.\\\"\\\\n      }\\\\n    }\\\\n  ]\\\\n}'}\\nFunction: tool_selection is not a valid tool, try another one.\"\r\n  ]\r\n}\r\n[llm/end] [1:chain:AgentExecutor > 4:llm:ChatOpenAI] [2.42s] Exiting LLM run with output:\r\n{\r\n  \"generations\": [\r\n    [\r\n      {\r\n        \"text\": \"\",\r\n        \"generation_info\": null,\r\n        \"message\": {\r\n          \"content\": \"\",\r\n          \"additional_kwargs\": {\r\n            \"function_call\": {\r\n              \"name\": \"tool_selection\",\r\n              \"arguments\": \"{\\n  \\\"actions\\\": [\\n    {\\n      \\\"action_name\\\": \\\"write_file\\\",\\n      \\\"action\\\": {\\n        \\\"file_path\\\": \\\"~/Desktop/my_file.txt\\\",\\n        \\\"text\\\": \\\"This is the content of my file.\\\"\\n      }\\n    }\\n  ]\\n}\"\r\n            }\r\n          },\r\n          \"example\": false\r\n        }\r\n      }\r\n    ]\r\n  ],\r\n  \"llm_output\": null,\r\n  \"run\": null\r\n}\r\n[tool/start] [1:chain:AgentExecutor > 5:tool:invalid_tool] Entering Tool run with input:\r\n\"tool_selection\"\r\n[tool/end] [1:chain:AgentExecutor > 5:tool:invalid_tool] [0.0ms] Exiting Tool run with output:\r\n\"tool_selection is not a valid tool, try another one.\"\r\n[llm/start] [1:chain:AgentExecutor > 6:llm:ChatOpenAI] Entering LLM run with input:\r\n{\r\n  \"prompts\": [\r\n    \"System: You are a helpful AI assistant.\\nHuman: write a text file to my desktop\\nAI: {'name': 'tool_selection', 'arguments': '{\\\\n  \\\"actions\\\": [\\\\n    {\\\\n      \\\"action_name\\\": \\\"write_file\\\",\\\\n      \\\"action\\\": {\\\\n        \\\"file_path\\\": \\\"~/Desktop/my_file.txt\\\",\\\\n        \\\"text\\\": \\\"This is the content of my file.\\\"\\\\n      }\\\\n    }\\\\n  ]\\\\n}'}\\nFunction: tool_selection is not a valid tool, try another one.\\nAI: {'name': 'tool_selection', 'arguments': '{\\\\n  \\\"actions\\\": [\\\\n    {\\\\n      \\\"action_name\\\": \\\"write_file\\\",\\\\n      \\\"action\\\": {\\\\n        \\\"file_path\\\": \\\"~/Desktop/my_file.txt\\\",\\\\n        \\\"text\\\": \\\"This is the content of my file.\\\"\\\\n      }\\\\n    }\\\\n  ]\\\\n}'}\\nFunction: tool_selection is not a valid tool, try another one.\"\r\n  ]\r\n}\r\n[llm/end] [1:chain:AgentExecutor > 6:llm:ChatOpenAI] [2.35s] Exiting LLM run with output:\r\n{\r\n  \"generations\": [\r\n    [\r\n      {\r\n        \"text\": \"\",\r\n        \"generation_info\": null,\r\n        \"message\": {\r\n          \"content\": \"\",\r\n          \"additional_kwargs\": {\r\n            \"function_call\": {\r\n              \"name\": \"tool_selection\",\r\n              \"arguments\": \"{\\n  \\\"actions\\\": [\\n    {\\n      \\\"action_name\\\": \\\"write_file\\\",\\n      \\\"action\\\": {\\n        \\\"file_path\\\": \\\"~/Desktop/my_file.txt\\\",\\n        \\\"text\\\": \\\"This is the content of my file.\\\"\\n      }\\n    }\\n  ]\\n}\"\r\n            }\r\n          },\r\n          \"example\": false\r\n        }\r\n      }\r\n    ]\r\n  ],\r\n  \"llm_output\": null,\r\n  \"run\": null\r\n}\r\n2023-06-27 11:07:24 - Error in ChainlitCallbackHandler.on_tool_start callback: Task stopped by user       \r\n[chain/error] [1:chain:AgentExecutor] [7.86s] Chain run errored with error:\r\n\"InterruptedError('Task stopped by user')\"\r\n\r\n```\r\n\r\n\r\nLangchain Plus run: https://www.langchain.plus/public/b6c08e7e-bdb0-4792-a291-545e055ad966/r\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6813/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6813/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    }
]