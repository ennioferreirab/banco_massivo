[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6584",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6584/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6584/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6584/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6584",
        "id": 1773492155,
        "node_id": "PR_kwDOIWuq585T2tCJ",
        "number": 6584,
        "title": "[WIP] Hongyi sql cleanup",
        "user": {
            "login": "hongyishi",
            "id": 7098202,
            "node_id": "MDQ6VXNlcjcwOTgyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7098202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hongyishi",
            "html_url": "https://github.com/hongyishi",
            "followers_url": "https://api.github.com/users/hongyishi/followers",
            "following_url": "https://api.github.com/users/hongyishi/following{/other_user}",
            "gists_url": "https://api.github.com/users/hongyishi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hongyishi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hongyishi/subscriptions",
            "organizations_url": "https://api.github.com/users/hongyishi/orgs",
            "repos_url": "https://api.github.com/users/hongyishi/repos",
            "events_url": "https://api.github.com/users/hongyishi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hongyishi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-25T21:14:46Z",
        "updated_at": "2023-06-25T21:15:59Z",
        "closed_at": "2023-06-25T21:15:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6584",
            "html_url": "https://github.com/run-llama/llama_index/pull/6584",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6584.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6584.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nChange the notebooks to deprecate usage of SQLStructStoreIndex. WIP\r\n\r\n## Type of Change\r\n\r\nNotebook changes\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Ran notebooks (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6584/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6584/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6583",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6583/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6583/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6583/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6583",
        "id": 1773471440,
        "node_id": "PR_kwDOIWuq585T2o7q",
        "number": 6583,
        "title": "Index creation progress bars",
        "user": {
            "login": "ajamjoom",
            "id": 7957213,
            "node_id": "MDQ6VXNlcjc5NTcyMTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7957213?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajamjoom",
            "html_url": "https://github.com/ajamjoom",
            "followers_url": "https://api.github.com/users/ajamjoom/followers",
            "following_url": "https://api.github.com/users/ajamjoom/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajamjoom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajamjoom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajamjoom/subscriptions",
            "organizations_url": "https://api.github.com/users/ajamjoom/orgs",
            "repos_url": "https://api.github.com/users/ajamjoom/repos",
            "events_url": "https://api.github.com/users/ajamjoom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajamjoom/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-25T20:10:31Z",
        "updated_at": "2023-07-04T06:56:53Z",
        "closed_at": "2023-07-04T06:56:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6583",
            "html_url": "https://github.com/run-llama/llama_index/pull/6583",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6583.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6583.patch",
            "merged_at": "2023-07-04T06:56:52Z"
        },
        "body": "# Description\r\n\r\n[Linear task](https://linear.app/gpt-index/issue/LLAMA-138/show-progress-when-building-index)\r\n\r\nWhen creating an index, you can now optionally set the `show_progress` flag from the `from_documents` index creation call to see tqdm progress bars for the slowest parts of the indexing process (e.g parsing nodes from a document, creating embeddings...etc.)\r\n\r\nFor example:\r\n\r\n`KeywordTableIndex.from_documents(documents=documents, show_progress=True)`\r\n<img width=\"646\" alt=\"CleanShot 2023-06-25 at 11 59 55@2x\" src=\"https://github.com/jerryjliu/llama_index/assets/7957213/fb7e0ef3-02d3-4416-9307-5279faabbf52\">\r\n\r\n### Principles\r\n\r\n1. Off by default. Progress bars are primary useful when testing or running monitored scripts (someone is looking and waiting for completion). Adding progress bars adds a slight delay, tqdm is very fast though, but we still don't want to take even a slight perf hit if users won't be looking at these progress bar. Therefore, these bars will be off by default.\r\n2. Fall-safe. Indexing should never fail to work because of a tqdm import issue. Catch these errors and re-try the operation w/o tqdm in such cases.\r\n3. Only show on bottlenecks. An indexing creation call may have multiple for loop that we can add progress bar to. Adding these bars every where is not necessary for simple iterations that are not expected to take a long time. \r\n\r\n### Jupyter notebook\r\n\r\nInstall and upgrade `ipywidgets` if the tqdm progress bars don't look like the image above in Jupyter notebooks.\r\n\r\n`pip install ipywidgets --upgrade`\r\n\r\nIf you want to run [index_progress_bars.ipynb](https://github.com/jerryjliu/llama_index/compare/main...ajamjoom:llama_index:index_progress_bars?expand=1#diff-9e8672c7d8b8c298508608b62a4496b05ccea7f0b065c44067e84ccb4e648c5f), then start your `jupyter notebook` from the root directory to have access to the `paul_graham` data in the `/examples` folder.\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nRun this jupyter notebook [index_progress_bars.ipynb](https://github.com/jerryjliu/llama_index/compare/main...ajamjoom:llama_index:index_progress_bars?expand=1#diff-9e8672c7d8b8c298508608b62a4496b05ccea7f0b065c44067e84ccb4e648c5f)\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6583/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6583/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6582",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6582/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6582/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6582/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6582",
        "id": 1773383208,
        "node_id": "PR_kwDOIWuq585T2WB7",
        "number": 6582,
        "title": "bs4 -> beautifulsoup4 in requirements",
        "user": {
            "login": "jpetrucciani",
            "id": 8117202,
            "node_id": "MDQ6VXNlcjgxMTcyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8117202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpetrucciani",
            "html_url": "https://github.com/jpetrucciani",
            "followers_url": "https://api.github.com/users/jpetrucciani/followers",
            "following_url": "https://api.github.com/users/jpetrucciani/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpetrucciani/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpetrucciani/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpetrucciani/subscriptions",
            "organizations_url": "https://api.github.com/users/jpetrucciani/orgs",
            "repos_url": "https://api.github.com/users/jpetrucciani/repos",
            "events_url": "https://api.github.com/users/jpetrucciani/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpetrucciani/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-25T17:06:55Z",
        "updated_at": "2023-06-25T18:32:52Z",
        "closed_at": "2023-06-25T18:32:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6582",
            "html_url": "https://github.com/run-llama/llama_index/pull/6582",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6582.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6582.patch",
            "merged_at": "2023-06-25T18:32:24Z"
        },
        "body": "# Description\r\n\r\nbs4 is just an alias package to the real beautifulsoup4 package - this can cause some confusion and issues with certain types of dependency resolution\r\n\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6582/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6582/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6581",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6581/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6581/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6581/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6581",
        "id": 1773362890,
        "node_id": "PR_kwDOIWuq585T2RzG",
        "number": 6581,
        "title": "add df output parser notebook link to docs",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-25T16:17:07Z",
        "updated_at": "2023-06-25T16:17:22Z",
        "closed_at": "2023-06-25T16:17:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6581",
            "html_url": "https://github.com/run-llama/llama_index/pull/6581",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6581.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6581.patch",
            "merged_at": "2023-06-25T16:17:21Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6581/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6581/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6580",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6580/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6580/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6580/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6580",
        "id": 1773358311,
        "node_id": "PR_kwDOIWuq585T2Q3V",
        "number": 6580,
        "title": "[version] bump version to 0.6.33",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-25T16:04:55Z",
        "updated_at": "2023-06-25T16:13:58Z",
        "closed_at": "2023-06-25T16:13:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6580",
            "html_url": "https://github.com/run-llama/llama_index/pull/6580",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6580.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6580.patch",
            "merged_at": "2023-06-25T16:13:57Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6580/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6580/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6579",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6579/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6579/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6579/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6579",
        "id": 1773291166,
        "node_id": "PR_kwDOIWuq585T2C9_",
        "number": 6579,
        "title": "feat: enable custom download folder for nltk",
        "user": {
            "login": "jokersoft",
            "id": 11043232,
            "node_id": "MDQ6VXNlcjExMDQzMjMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11043232?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jokersoft",
            "html_url": "https://github.com/jokersoft",
            "followers_url": "https://api.github.com/users/jokersoft/followers",
            "following_url": "https://api.github.com/users/jokersoft/following{/other_user}",
            "gists_url": "https://api.github.com/users/jokersoft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jokersoft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jokersoft/subscriptions",
            "organizations_url": "https://api.github.com/users/jokersoft/orgs",
            "repos_url": "https://api.github.com/users/jokersoft/repos",
            "events_url": "https://api.github.com/users/jokersoft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jokersoft/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-25T13:37:47Z",
        "updated_at": "2023-06-26T19:16:34Z",
        "closed_at": "2023-06-26T18:27:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6579",
            "html_url": "https://github.com/run-llama/llama_index/pull/6579",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6579.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6579.patch",
            "merged_at": "2023-06-26T18:27:06Z"
        },
        "body": "# Description\r\n\r\n[Current usage](https://github.com/jerryjliu/llama_index/blob/main/llama_index/utils.py#L84) of the `nltk` library breaks the [original ability](https://github.com/nltk/nltk/blob/develop/nltk/data.py#L71) to control the download folder for the stopwords with the ENV var.\r\n**Use case**: this is critical for those who uses remote environments where only specified directories are writable - for example, [AWS Lambda only can write to /tmp folder](https://docs.aws.amazon.com/lambda/latest/dg/images-create.html), whereas with the current implementation, `nltk` will try to download to `/home` dir and fail.\r\n\r\nPlease, tell me if this minor update requires additional documentation or tests.\r\n\r\n## Type of Change\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6579/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6579/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6578",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6578/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6578/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6578/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6578",
        "id": 1773260818,
        "node_id": "I_kwDOIWuq585psdAS",
        "number": 6578,
        "title": "[Question]: AttributeError: 'SQLDatabase' object has no attribute 'get_single_table_info'",
        "user": {
            "login": "byamasu-patrick",
            "id": 43136469,
            "node_id": "MDQ6VXNlcjQzMTM2NDY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/43136469?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/byamasu-patrick",
            "html_url": "https://github.com/byamasu-patrick",
            "followers_url": "https://api.github.com/users/byamasu-patrick/followers",
            "following_url": "https://api.github.com/users/byamasu-patrick/following{/other_user}",
            "gists_url": "https://api.github.com/users/byamasu-patrick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/byamasu-patrick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/byamasu-patrick/subscriptions",
            "organizations_url": "https://api.github.com/users/byamasu-patrick/orgs",
            "repos_url": "https://api.github.com/users/byamasu-patrick/repos",
            "events_url": "https://api.github.com/users/byamasu-patrick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/byamasu-patrick/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-25T12:46:09Z",
        "updated_at": "2023-06-25T17:25:51Z",
        "closed_at": "2023-06-25T17:23:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nHere is my code and the error I am getting \r\n```\r\nsql_database = SQLDatabase.from_uri(db_uri)\r\ntable_node_mapping = SQLTableNodeMapping(sql_database)\r\nall_table_names = [\r\n    \"table1\",\r\n    \"table2\",\r\n    \"table3\"]\r\ntable_schema_objs = []\r\nfor table_name in all_table_names:\r\n    table_schema_objs.append(SQLTableSchema(table_name=table_name))\r\n\r\nobj_index = ObjectIndex.from_objects(\r\n    table_schema_objs,\r\n    table_node_mapping,\r\n    VectorStoreIndex,\r\n)\r\n```\r\n`\r\npython main.py\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\hp\\Desktop\\openai\\main.py\", line 64, in <module>\r\n    obj_index = ObjectIndex.from_objects(\r\n  File \"C:\\Users\\hp\\Desktop\\openai\\jmf-env\\lib\\site-packages\\llama_index\\objects\\base.py\", line 50, in from_objects\r\n    nodes = object_mapping.to_nodes(objects)\r\n  File \"C:\\Users\\hp\\Desktop\\openai\\jmf-env\\lib\\site-packages\\llama_index\\objects\\base_node_mapping.py\", line 55, in to_nodes\r\n    return [self.to_node(obj) for obj in objs]\r\n  File \"C:\\Users\\hp\\Desktop\\openai\\jmf-env\\lib\\site-packages\\llama_index\\objects\\base_node_mapping.py\", line 55, in <listcomp>\r\n    return [self.to_node(obj) for obj in objs]\r\n  File \"C:\\Users\\hp\\Desktop\\openai\\jmf-env\\lib\\site-packages\\llama_index\\objects\\table_node_mapping.py\", line 46, in to_node\r\n    f\"{self._sql_database.get_single_table_info(obj.table_name)}\\n\"\r\nAttributeError: 'SQLDatabase' object has no attribute 'get_single_table_info'`\r\n\r\nCan someone help me how to resolve this error? I have tried to check my code everything seems to work perfectly fine",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6578/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6577",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6577/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6577/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6577/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6577",
        "id": 1773260343,
        "node_id": "I_kwDOIWuq585psc43",
        "number": 6577,
        "title": "[Feature Request]: Explore Neural Search: ColBERTv2/PLAID",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-25T12:44:49Z",
        "updated_at": "2023-07-28T18:16:06Z",
        "closed_at": "2023-07-28T18:16:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nColBERTv2 (and corresponding serving engine PLAID) is an approach to neural search which combines keyword search (multi-vector representations, inverted list), vector similarity search.\r\n\r\nTo my understanding, it is used in the Vectara neural search engine (https://vectara.com/).\r\n\r\nThe following procedure is applied (may contain inaccuracies):\r\n\r\nIndexing time:\r\n1. Compute the centroids of the embeddings for ColBERTv2 (late interaction similarity scoring model) for the knowledge base\r\n2. Compute an inverted index (e.g. BM25) from the centroids to the documents\r\n\r\nRetrieval time:\r\n1. Compute the embeddings for the query\r\n2. For each embedding, retrieve the m centroids\r\n3. Using the inverted index, retrieve the relevant documents\r\n4. For each document, compute the MaxSim operation (sum of max pool of cosine similarity) of its relevant embeddings\r\n5. Take the Top K based on the score\r\n\r\nPlease read the paper for a more detailed description: https://arxiv.org/pdf/2112.01488.pdf \r\n\r\nNext: also explore SpladeV2 (apparently better scalability)\r\n\r\nI think this may need different API than `VectorStoreIndex`, since one cannot plug and play vector embedding and vector stores. Also note that we may want to consider integrating vectara.\r\n\r\n### Reason\r\n\r\n_No response_\r\n\r\n### Value of Feature\r\n\r\nPossibly better performance than dense embeddings, especially on out-of-domain queries or knowledge bases.\r\n\r\n### References\r\n- ColBERT/PLAID in Intel's [FastRAG](https://github.com/IntelLabs/fastRAG/blob/main/examples/plaid_colbert_pipeline.ipynb)\r\n- [ColBERT Repo](https://github.com/stanford-futuredata/ColBERT)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6577/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6577/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6576",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6576/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6576/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6576/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6576",
        "id": 1773076019,
        "node_id": "PR_kwDOIWuq585T1VZQ",
        "number": 6576,
        "title": "add df output parser",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-25T05:51:27Z",
        "updated_at": "2023-06-25T16:03:09Z",
        "closed_at": "2023-06-25T16:03:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6576",
            "html_url": "https://github.com/run-llama/llama_index/pull/6576",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6576.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6576.patch",
            "merged_at": "2023-06-25T16:03:08Z"
        },
        "body": "# Description\r\n\r\nAdd df output parser - notebook example showing how you can extract df using OpenAIPydanticProgram, also added wrapper output parsers.\r\n\r\nAlso wrapped Pydantic programs with an output parser.\r\n\r\nAlso moved BaseOutputParser to llama_index/types.py to avoid circular deps \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6576/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6576/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6575",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6575/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6575/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6575/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6575",
        "id": 1772787804,
        "node_id": "PR_kwDOIWuq585T0Zfy",
        "number": 6575,
        "title": "[Feature] Add redis functionality for `IndexStore` & `DocumentStore`",
        "user": {
            "login": "NickNYU",
            "id": 6777449,
            "node_id": "MDQ6VXNlcjY3Nzc0NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6777449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NickNYU",
            "html_url": "https://github.com/NickNYU",
            "followers_url": "https://api.github.com/users/NickNYU/followers",
            "following_url": "https://api.github.com/users/NickNYU/following{/other_user}",
            "gists_url": "https://api.github.com/users/NickNYU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NickNYU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NickNYU/subscriptions",
            "organizations_url": "https://api.github.com/users/NickNYU/orgs",
            "repos_url": "https://api.github.com/users/NickNYU/repos",
            "events_url": "https://api.github.com/users/NickNYU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NickNYU/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-24T15:29:22Z",
        "updated_at": "2023-06-28T19:06:09Z",
        "closed_at": "2023-06-28T19:06:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6575",
            "html_url": "https://github.com/run-llama/llama_index/pull/6575",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6575.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6575.patch",
            "merged_at": "2023-06-28T19:06:08Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n## Motivation & Context\r\nSupport a redis storage backend for both `IndexStore` and `DocuemntStore`. \r\n\r\nRedis is used widely and mostly in companies or private projects, so I think maybe it's a good idea for users who want to start easily with an extenal storage, maybe, Redis is their first choice, as Redis is quite simple, we could find it anywhere: running locally or remotely, it's not hard to build up a redis as a remote storage.\r\n\r\n## Dependencies\r\n- [ ] `pip install redis`\r\n- [ ] A redis server or redis cluster\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6575/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6575/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6574",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6574/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6574/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6574/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6574",
        "id": 1772711168,
        "node_id": "I_kwDOIWuq585pqW0A",
        "number": 6574,
        "title": "Support to add  conversation history  in the prompt",
        "user": {
            "login": "dekanayake",
            "id": 3830444,
            "node_id": "MDQ6VXNlcjM4MzA0NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3830444?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dekanayake",
            "html_url": "https://github.com/dekanayake",
            "followers_url": "https://api.github.com/users/dekanayake/followers",
            "following_url": "https://api.github.com/users/dekanayake/following{/other_user}",
            "gists_url": "https://api.github.com/users/dekanayake/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dekanayake/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dekanayake/subscriptions",
            "organizations_url": "https://api.github.com/users/dekanayake/orgs",
            "repos_url": "https://api.github.com/users/dekanayake/repos",
            "events_url": "https://api.github.com/users/dekanayake/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dekanayake/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-24T13:37:19Z",
        "updated_at": "2023-07-22T01:55:37Z",
        "closed_at": "2023-07-22T01:55:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi , Much appreciated your alls work on llama_index. It is a great tool to integrate with LLM. I'm currently trying to implement a use case for a client which the chat agent  askes question base on the context. I have attach my code with this . However I can't add the conversation history , hence I the chat agent starts to repeat the question since it does not know the history. Could you help me on how to integrate the chat history to the chat .\r\n\r\n`import logging\r\nimport sys\r\nfrom llama_index import StorageContext, load_index_from_storage,LLMPredictor,ServiceContext\r\nfrom llama_index import (\r\n    VectorStoreIndex,\r\n    ResponseSynthesizer,\r\n)\r\nfrom llama_index.retrievers import VectorIndexRetriever\r\nfrom llama_index.query_engine import RetrieverQueryEngine\r\nfrom llama_index.indices.postprocessor import SimilarityPostprocessor\r\nfrom langchain.llms.openai import OpenAIChat\r\nfrom llama_index.indices.response.type import ResponseMode\r\nfrom llama_index import Prompt\r\nfrom llama_index.langchain_helpers.agents import LlamaToolkit, create_llama_chat_agent, IndexToolConfig\r\nfrom langchain.chains.conversation.memory import ConversationBufferMemory\r\n\r\n\r\n# rebuild storage context\r\nstorage_context = StorageContext.from_defaults(persist_dir=\"./storage\")\r\n# load index\r\nindex = load_index_from_storage(storage_context)\r\n\r\nlogging.basicConfig(stream=sys.stdout, level=logging.DEBUG)\r\nlogging.getLogger().addHandler(logging.StreamHandler(stream=sys.stdout))\r\nllm = OpenAIChat(temperature=0)\r\nllm_predictor = LLMPredictor(llm=OpenAIChat(temperature=0))\r\nservice_context = ServiceContext.from_defaults(\r\n    llm_predictor=llm_predictor, chunk_size=1024\r\n)\r\n\r\nretriever = VectorIndexRetriever(\r\n    index=index, \r\n    similarity_top_k=10,\r\n)\r\n\r\nqa_template = (\r\n    \"\"\"\r\nWe have provided context information below.\r\n    ---------------------\r\n   {context_str}\r\n    ---------------------\r\n\r\nYou are CLientbot, a friendly AI assistant assisting homeowers to select the right hot water unit based on their needs. \r\nBased on the data, ask the customer questions one at a time to help guide them toward the right product for them.\r\n Be as succinct as possible. please avoid  asking previously asked questions.\r\n Do NOT ever provide any information about installation or maintenance, \r\n if customers as questions about this then inform them to contact a licensed plumber. \r\n If customers ask irrelevant questions, inform them you are only able to provide questions about hot water units at this stage.\r\n  with all that inforamtion ask question or provide the answer to question :  {query_str} \"\"\"\r\n)\r\n\r\nqa_template_prompt = Prompt(qa_template)\r\n\r\nrefine_template = (\r\n    \"\"\"\r\nThe existing answer is as follows:\r\n    ---------------------\r\n    {existing_answer}\r\n    ---------------------\r\n\r\nThe original question is as fellows:\r\n    ---------------------\r\n    {query_str}\r\n    ---------------------  \r\n\r\nfollowing is the context:\r\n    ------------------------\r\n    {context_msg}\r\n    ------------------------    \r\n\r\nYou are Clientbot, a friendly AI assistant assisting homeowers to select the right hot water unit based on their needs. \r\nBased on the data,ask the customer questions one at a time to help guide them toward the right product for them. \r\nBe as succinct as possible. please avoid  asking previously asked questions. Do NOT ever provide any information about installation or maintenance, \r\nif customers as questions about this then inform them to contact a licensed plumber. \r\nIf customers ask irrelevant questions, inform them you are only able to provide questions about hot water units at this stage. \r\nif you cant ask conclude to a answer ask the original question. if you have a answer then provide the answer \"\"\"\r\n)\r\n\r\nrefine_template_prompt = Prompt(refine_template)\r\n\r\n\r\n# configure response synthesizer\r\nresponse_synthesizer = ResponseSynthesizer.from_args(\r\n    service_context= service_context,\r\n    text_qa_template=qa_template_prompt,\r\n    refine_template=refine_template_prompt,\r\n    node_postprocessors=[\r\n        SimilarityPostprocessor(similarity_cutoff=0.7)\r\n    ]\r\n)\r\n\r\nquery_engine = RetrieverQueryEngine(\r\n    retriever=retriever,\r\n    response_synthesizer=response_synthesizer,\r\n)\r\n\r\n\r\n\r\n# tool config\r\ngraph_config = IndexToolConfig(\r\n    query_engine=query_engine,\r\n    name=f\"search Index\",\r\n    description=\"useful for when you want to answer queries for client brands.\",\r\n    tool_kwargs={\"return_direct\": True}\r\n)\r\n\r\n\r\ntoolkit = LlamaToolkit(\r\n    index_configs=[graph_config],\r\n)\r\n\r\n\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\")\r\nagent_chain = create_llama_chat_agent(\r\n    toolkit,\r\n    llm,\r\n    verbose=True,\r\n    memory=memory,\r\n    salesperson_name=\"Vince Black\"\r\n)\r\n\r\n\r\nwhile True:\r\n    text_input = input(\"User: \")\r\n    response = agent_chain.run(input=text_input)\r\n    print(f'Agent: {response}')\r\n`\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6574/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6574/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6573",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6573/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6573/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6573/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6573",
        "id": 1772410356,
        "node_id": "PR_kwDOIWuq585TzHnk",
        "number": 6573,
        "title": "Track langchain dependency via bridge module.",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-24T02:53:49Z",
        "updated_at": "2023-06-24T06:52:16Z",
        "closed_at": "2023-06-24T06:52:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6573",
            "html_url": "https://github.com/run-llama/llama_index/pull/6573",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6573.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6573.patch",
            "merged_at": "2023-06-24T06:52:15Z"
        },
        "body": "# Description\r\n\r\nTrack langchain dependency via bridge module. Noop PR.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6573/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6573/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6572",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6572/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6572/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6572/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6572",
        "id": 1772237029,
        "node_id": "PR_kwDOIWuq585TyhE0",
        "number": 6572,
        "title": "updated Chroma notebook",
        "user": {
            "login": "jeffchuber",
            "id": 891664,
            "node_id": "MDQ6VXNlcjg5MTY2NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/891664?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffchuber",
            "html_url": "https://github.com/jeffchuber",
            "followers_url": "https://api.github.com/users/jeffchuber/followers",
            "following_url": "https://api.github.com/users/jeffchuber/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffchuber/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffchuber/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffchuber/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffchuber/orgs",
            "repos_url": "https://api.github.com/users/jeffchuber/repos",
            "events_url": "https://api.github.com/users/jeffchuber/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffchuber/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-23T22:23:39Z",
        "updated_at": "2023-07-03T03:54:57Z",
        "closed_at": "2023-06-27T19:26:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6572",
            "html_url": "https://github.com/run-llama/llama_index/pull/6572",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6572.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6572.patch",
            "merged_at": "2023-06-27T19:26:50Z"
        },
        "body": "This PR updates the Chroma example notebook to be much more user friendly. \r\n\r\nIt still requires setting an OpenAI key, which I was hoping to avoid. But this now prompts the user for it. \r\n\r\n<img width=\"1400\" alt=\"Screenshot 2023-06-23 at 3 22 59 PM\" src=\"https://github.com/jerryjliu/llama_index/assets/891664/99e85f0c-278d-41b3-baff-a17fc934eb86\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6572/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6572/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6571",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6571/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6571/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6571/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6571",
        "id": 1771863199,
        "node_id": "I_kwDOIWuq585pnHyf",
        "number": 6571,
        "title": "[Question]: Where is this prompt written in the code",
        "user": {
            "login": "ItsEnosgit",
            "id": 80300962,
            "node_id": "MDQ6VXNlcjgwMzAwOTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/80300962?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ItsEnosgit",
            "html_url": "https://github.com/ItsEnosgit",
            "followers_url": "https://api.github.com/users/ItsEnosgit/followers",
            "following_url": "https://api.github.com/users/ItsEnosgit/following{/other_user}",
            "gists_url": "https://api.github.com/users/ItsEnosgit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ItsEnosgit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ItsEnosgit/subscriptions",
            "organizations_url": "https://api.github.com/users/ItsEnosgit/orgs",
            "repos_url": "https://api.github.com/users/ItsEnosgit/repos",
            "events_url": "https://api.github.com/users/ItsEnosgit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ItsEnosgit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T18:00:22Z",
        "updated_at": "2023-06-24T06:42:37Z",
        "closed_at": "2023-06-24T06:42:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n\u2018Given the context information and not prior knowledge, answer the question:\u2019\r\nI want to know where this piece of code appears\uff0cand trying to change it.Thanks\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6571/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6571/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6570",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6570/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6570/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6570/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6570",
        "id": 1771619807,
        "node_id": "PR_kwDOIWuq585TwcYG",
        "number": 6570,
        "title": "[version] bump version to 0.6.32",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-23T15:04:49Z",
        "updated_at": "2023-06-23T15:15:38Z",
        "closed_at": "2023-06-23T15:15:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6570",
            "html_url": "https://github.com/run-llama/llama_index/pull/6570",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6570.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6570.patch",
            "merged_at": "2023-06-23T15:15:37Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6570/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6570/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6569",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6569/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6569/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6569/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6569",
        "id": 1771003182,
        "node_id": "PR_kwDOIWuq585TuWQS",
        "number": 6569,
        "title": "add SQL Schema Node Mapping + SQLTableRetrieverQueryEngine + obj index fixes",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-23T07:58:44Z",
        "updated_at": "2023-06-23T15:07:47Z",
        "closed_at": "2023-06-23T15:03:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6569",
            "html_url": "https://github.com/run-llama/llama_index/pull/6569",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6569.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6569.patch",
            "merged_at": "2023-06-23T15:03:28Z"
        },
        "body": "# Description\r\n\r\nThis PR adds a `SQLTableNodeMapping` which allows mapping a table schema to from Node, \r\nand a `SQLTableRetrieverQueryEngine` that can use this to dynamically retrieve table schemas.\r\n\r\nCleaner than previous interfaces.\r\n\r\nAlso fixed object index \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6569/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6569/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6568",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6568/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6568/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6568/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6568",
        "id": 1770912990,
        "node_id": "I_kwDOIWuq585pjfze",
        "number": 6568,
        "title": "[Bug]: Throws InvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter again with Azure when using the RouterQueryEngine. ",
        "user": {
            "login": "buddhics",
            "id": 10113390,
            "node_id": "MDQ6VXNlcjEwMTEzMzkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10113390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/buddhics",
            "html_url": "https://github.com/buddhics",
            "followers_url": "https://api.github.com/users/buddhics/followers",
            "following_url": "https://api.github.com/users/buddhics/following{/other_user}",
            "gists_url": "https://api.github.com/users/buddhics/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/buddhics/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/buddhics/subscriptions",
            "organizations_url": "https://api.github.com/users/buddhics/orgs",
            "repos_url": "https://api.github.com/users/buddhics/repos",
            "events_url": "https://api.github.com/users/buddhics/events{/privacy}",
            "received_events_url": "https://api.github.com/users/buddhics/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-23T07:09:46Z",
        "updated_at": "2023-07-06T00:48:41Z",
        "closed_at": "2023-07-05T00:41:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nThere was an issue with Azure explained here: https://github.com/jerryjliu/llama_index/issues/2129, But this has been fixed.\r\n\r\nI get the same error when using RouterQueryEngine.\r\n\r\n```\r\nimport os\r\nimport openai\r\nfrom langchain.llms import AzureOpenAI\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom llama_index import LangchainEmbedding\r\nfrom llama_index import (\r\n    GPTVectorStoreIndex,\r\n    GPTEmptyIndex,\r\n    LLMPredictor,\r\n    PromptHelper,\r\n    ServiceContext\r\n)\r\nimport logging\r\nimport sys\r\nfrom llama_index import download_loader\r\nfrom llama_index.tools.query_engine import QueryEngineTool\r\nfrom llama_index.query_engine.router_query_engine import RouterQueryEngine\r\nfrom llama_index.selectors.llm_selectors import LLMSingleSelector\r\n\r\nopenai.api_type = \"azure\"\r\nos.environ['OPENAI_API_VERSION'] = '2023-05-15'\r\nopenai.api_version = os.getenv('OPENAI_API_VERSION')\r\nopenai.api_base = '<basu_url>'\r\nos.environ['OPENAI_API_KEY'] = '<key>'\r\nopenai.api_key = os.getenv(\"OPENAI_API_KEY\")\r\n\r\nllm = AzureOpenAI(deployment_name='<deployment_name>',model_name='text-davinci-003', model_kwargs={\r\n    \"api_key\": openai.api_key,\r\n    \"api_base\": openai.api_base,\r\n    \"api_type\": openai.api_type,\r\n    \"api_version\": openai.api_version,\r\n})\r\n\r\nlogging.basicConfig(stream=sys.stdout, level=logging.INFO) # logging.DEBUG for more verbose output\r\nlogging.getLogger().addHandler(logging.StreamHandler(stream=sys.stdout))\r\n\r\nllm_predictor = LLMPredictor(llm=llm)\r\n\r\nembedding_llm = LangchainEmbedding(\r\n    OpenAIEmbeddings(\r\n        model=\"text-embedding-ada-002\",\r\n        deployment=\"<deployment_name>\",\r\n        openai_api_key= openai.api_key,\r\n        openai_api_base=openai.api_base,\r\n        openai_api_type=openai.api_type,\r\n        openai_api_version=openai.api_version\r\n    ),\r\n    embed_batch_size=1,\r\n)\r\n\r\nBeautifulSoupWebReader = download_loader(\"BeautifulSoupWebReader\")\r\n\r\nloader = BeautifulSoupWebReader()\r\ndocuments = loader.load_data(urls=['<url_1>','<url_2>'])\r\n\r\nmax_input_size = 500\r\nnum_output = 48\r\nmax_chunk_overlap = 0.2\r\n\r\nprompt_helper = PromptHelper(max_input_size, num_output, max_chunk_overlap)\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n    llm_predictor=llm_predictor,\r\n    embed_model=embedding_llm,\r\n    prompt_helper=prompt_helper\r\n)\r\n\r\nvector_index = GPTVectorStoreIndex.from_documents(documents, service_context=service_context)\r\n\r\nempty_index = GPTEmptyIndex(service_context=service_context)\r\n\r\nvector_query_engine = vector_index.as_query_engine()\r\nempty_query_engine = empty_index.as_query_engine(response_mode='generation')\r\n\r\nvector_tool = QueryEngineTool.from_defaults(\r\n    query_engine=vector_query_engine,\r\n    description='custom domain',\r\n)\r\n\r\nempty_tool = QueryEngineTool.from_defaults(\r\n    query_engine=empty_query_engine,\r\n    description='generic',\r\n)\r\n\r\nquery_engine = RouterQueryEngine(\r\n    selector=LLMSingleSelector.from_defaults(),\r\n    query_engine_tools=[\r\n        vector_tool,\r\n        empty_tool,\r\n    ]\r\n)\r\n\r\nquery_engine.query('Who is the CEO of company ABC?')\r\n```\n\n### Version\n\n0.6.31\n\n### Steps to Reproduce\n\n1. Run the above code.\n\n### Relevant Logs/Tracbacks\n\n```shell\nTraceback (most recent call last):\r\n  File \"C:\\workspace\\exp\\main.py\", line 126, in <module>\r\n    query_engine.query('Who is the CEO of company ABC?')\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\llama_index\\indices\\query\\base.py\", line 23, in query\r\n    response = self._query(str_or_query_bundle)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\llama_index\\query_engine\\router_query_engine.py\", line 117, in _query\r\n    result = self._selector.select(self._metadatas, query_bundle)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\llama_index\\selectors\\types.py\", line 76, in select\r\n    return self._select(choices=metadatas, query=query_bundle)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\llama_index\\selectors\\llm_selectors.py\", line 179, in _select\r\n    prediction, _ = self._llm_predictor.predict(\r\n                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\llama_index\\llm_predictor\\base.py\", line 241, in predict\r\n    llm_prediction = self._predict(prompt, **prompt_args)\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\llama_index\\llm_predictor\\base.py\", line 209, in _predict\r\n    llm_prediction = retry_on_exceptions_with_backoff(\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\llama_index\\utils.py\", line 178, in retry_on_exceptions_with_backoff\r\n    return lambda_fn()\r\n           ^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\llama_index\\llm_predictor\\base.py\", line 210, in <lambda>\r\n    lambda: llm_chain.predict(**full_prompt_args),\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\langchain\\chains\\llm.py\", line 252, in predict\r\n    return self(kwargs, callbacks=callbacks)[self.output_key]\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\langchain\\chains\\base.py\", line 166, in __call__\r\n    raise e\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\langchain\\chains\\base.py\", line 160, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\langchain\\chains\\llm.py\", line 92, in _call\r\n    response = self.generate([inputs], run_manager=run_manager)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\langchain\\chains\\llm.py\", line 102, in generate\r\n    return self.llm.generate_prompt(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\langchain\\llms\\base.py\", line 140, in generate_prompt\r\n    return self.generate(prompt_strings, stop=stop, callbacks=callbacks, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\langchain\\llms\\base.py\", line 206, in generate\r\n    raise e\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\langchain\\llms\\base.py\", line 198, in generate\r\n    self._generate(\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\langchain\\llms\\openai.py\", line 326, in _generate\r\n    response = completion_with_retry(self, prompt=_prompts, **params)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\langchain\\llms\\openai.py\", line 106, in completion_with_retry\r\n    return _completion_with_retry(**kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\tenacity\\__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\tenacity\\__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\tenacity\\__init__.py\", line 314, in iter\r\n    return fut.result()\r\n           ^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\r\n    return self.__get_result()\r\n           ^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\r\n    raise self._exception\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\tenacity\\__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\langchain\\llms\\openai.py\", line 104, in _completion_with_retry\r\n    return llm.client.create(**kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\openai\\api_resources\\completion.py\", line 25, in create\r\n    return super().create(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py\", line 149, in create\r\n    ) = cls.__prepare_create_request(\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\XYZ\\miniconda3\\envs\\temp\\Lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py\", line 83, in __prepare_create_request\r\n    raise error.InvalidRequestError(\r\nopenai.error.InvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.completion.Completion'>\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6568/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6568/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6567",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6567/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6567/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6567/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6567",
        "id": 1770864077,
        "node_id": "I_kwDOIWuq585pjT3N",
        "number": 6567,
        "title": "[Bug]: Qdrant named vectors are not working",
        "user": {
            "login": "wodka",
            "id": 385731,
            "node_id": "MDQ6VXNlcjM4NTczMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/385731?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wodka",
            "html_url": "https://github.com/wodka",
            "followers_url": "https://api.github.com/users/wodka/followers",
            "following_url": "https://api.github.com/users/wodka/following{/other_user}",
            "gists_url": "https://api.github.com/users/wodka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wodka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wodka/subscriptions",
            "organizations_url": "https://api.github.com/users/wodka/orgs",
            "repos_url": "https://api.github.com/users/wodka/repos",
            "events_url": "https://api.github.com/users/wodka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wodka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-23T06:29:31Z",
        "updated_at": "2023-10-18T09:07:40Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nWhen named vectors are used, it must be defined where to do the distance search. If no vector name is passed, then a error is shown:\r\n\r\n```\r\nWrong input: Default vector params are not specified in config\r\n```\r\n\r\n### Version\r\n\r\n0.6.31\r\n\r\nQdrant as of version 0.10.0 has named vectors:\r\n> Available as of v0.10.0\r\n> If the collection was created with multiple vectors, each vector data can be provided using the vector\u2019s name:\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create a collection in qdrant\r\n2. Add an entry with a vector name\r\n3. use https://github.com/jerryjliu/llama_index/blob/48f5460b24e43ae1fe4540ce2fefa37ea6cc1c76/docs/examples/vector_stores/QdrantIndexDemo.ipynb to try to access the vector name\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6567/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6567/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6566",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6566/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6566/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6566/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6566",
        "id": 1770859422,
        "node_id": "I_kwDOIWuq585pjSue",
        "number": 6566,
        "title": "added a simple chatbot web ui for running on local machine ",
        "user": {
            "login": "phoenix8875",
            "id": 94134684,
            "node_id": "U_kgDOBZxhnA",
            "avatar_url": "https://avatars.githubusercontent.com/u/94134684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phoenix8875",
            "html_url": "https://github.com/phoenix8875",
            "followers_url": "https://api.github.com/users/phoenix8875/followers",
            "following_url": "https://api.github.com/users/phoenix8875/following{/other_user}",
            "gists_url": "https://api.github.com/users/phoenix8875/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phoenix8875/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phoenix8875/subscriptions",
            "organizations_url": "https://api.github.com/users/phoenix8875/orgs",
            "repos_url": "https://api.github.com/users/phoenix8875/repos",
            "events_url": "https://api.github.com/users/phoenix8875/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phoenix8875/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T06:24:40Z",
        "updated_at": "2023-06-24T06:49:17Z",
        "closed_at": "2023-06-24T06:49:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nadded a simple chatbot web ui for running on local machine \r\nhttps://github.com/phoenix8875/llama_index_UI\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6566/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6566/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6565",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6565/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6565/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6565/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6565",
        "id": 1770810919,
        "node_id": "I_kwDOIWuq585pjG4n",
        "number": 6565,
        "title": "[Feature Request]: Explore integration with langflow",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-23T05:35:57Z",
        "updated_at": "2023-10-17T10:32:54Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nLangflow provides a visual UI to construct langchain applications.\r\n\r\nIn my mind, this is the most user friendly way to build a complex conversational AI application. \r\n\r\nI think there may be value to create a UI plugin which allows knowledge base management via llamaindex from within langflow\r\n\r\nSee https://huggingface.co/spaces/Logspace/LangFlow to try out the UI.\r\n\r\nSee here for example:\r\n![image](https://github.com/jerryjliu/llama_index/assets/9093549/61fab64f-9390-4067-871d-b0215fd54b5d)\r\n\r\nIf all of this is hosted somewhere (e.g. hugging face spaces), it would be even more awesome.\r\n\r\n### Reason\r\n\r\n### Value of Feature\r\n\r\nQuick, visual prototyping. KB mgmt.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6565/reactions",
            "total_count": 5,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 4,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6565/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6564",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6564/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6564/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6564/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6564",
        "id": 1770761792,
        "node_id": "PR_kwDOIWuq585TtmJ7",
        "number": 6564,
        "title": "negate euclidean distance",
        "user": {
            "login": "yisding",
            "id": 1209314,
            "node_id": "MDQ6VXNlcjEyMDkzMTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1209314?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yisding",
            "html_url": "https://github.com/yisding",
            "followers_url": "https://api.github.com/users/yisding/followers",
            "following_url": "https://api.github.com/users/yisding/following{/other_user}",
            "gists_url": "https://api.github.com/users/yisding/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yisding/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yisding/subscriptions",
            "organizations_url": "https://api.github.com/users/yisding/orgs",
            "repos_url": "https://api.github.com/users/yisding/repos",
            "events_url": "https://api.github.com/users/yisding/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yisding/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-23T04:34:32Z",
        "updated_at": "2023-06-25T18:27:23Z",
        "closed_at": "2023-06-25T18:27:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6564",
            "html_url": "https://github.com/run-llama/llama_index/pull/6564",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6564.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6564.patch",
            "merged_at": "2023-06-25T18:27:22Z"
        },
        "body": "\r\n# Description\r\n\r\nNegate the because raw euclidean distance will give opposite ranking as dot product and cosine\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] Added new unit/integration tests\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [X] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6564/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6564/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6563",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6563/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6563/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6563/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6563",
        "id": 1770670707,
        "node_id": "I_kwDOIWuq585pikpz",
        "number": 6563,
        "title": "[Feature Request]: Make streaming when CondenseQuestionChatEngine work with RouterQueryEngine ",
        "user": {
            "login": "dinhan92",
            "id": 86275789,
            "node_id": "MDQ6VXNlcjg2Mjc1Nzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/86275789?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dinhan92",
            "html_url": "https://github.com/dinhan92",
            "followers_url": "https://api.github.com/users/dinhan92/followers",
            "following_url": "https://api.github.com/users/dinhan92/following{/other_user}",
            "gists_url": "https://api.github.com/users/dinhan92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dinhan92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dinhan92/subscriptions",
            "organizations_url": "https://api.github.com/users/dinhan92/orgs",
            "repos_url": "https://api.github.com/users/dinhan92/repos",
            "events_url": "https://api.github.com/users/dinhan92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dinhan92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-23T02:14:23Z",
        "updated_at": "2023-07-11T02:05:11Z",
        "closed_at": "2023-07-11T02:05:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nI've tried CondenseQuestionChatEngine to work with SubQuestionQueryEngine, and I am able to make it streaming. However, it takes too long to answer the question (For example: 47 seconds for a \"Hello!\" question). So I tried RouterQueryEngine. In fact it is faster to generate answer of questions about the data. However with questions like \"Hello!\". It gives this error:\r\nAttributeError: 'str' object has no attribute 'response_gen'\r\nSo I think streaming hasn't been supported in this case yet? I hope you can add this feature, because RouterQueryEngine is really a good way to select tool.\r\nBesides, I ve tried ReActChatEngine but it does not generate stream too. Hope you can add stream too this too.\r\n\r\n### Reason\r\n\r\n_No response_\r\n\r\n### Value of Feature\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6563/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6563/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6562",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6562/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6562/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6562/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6562",
        "id": 1770527365,
        "node_id": "PR_kwDOIWuq585Ts4ec",
        "number": 6562,
        "title": "Update vector_stores.md",
        "user": {
            "login": "nwstephens",
            "id": 7519295,
            "node_id": "MDQ6VXNlcjc1MTkyOTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7519295?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nwstephens",
            "html_url": "https://github.com/nwstephens",
            "followers_url": "https://api.github.com/users/nwstephens/followers",
            "following_url": "https://api.github.com/users/nwstephens/following{/other_user}",
            "gists_url": "https://api.github.com/users/nwstephens/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nwstephens/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nwstephens/subscriptions",
            "organizations_url": "https://api.github.com/users/nwstephens/orgs",
            "repos_url": "https://api.github.com/users/nwstephens/repos",
            "events_url": "https://api.github.com/users/nwstephens/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nwstephens/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-22T23:38:53Z",
        "updated_at": "2023-06-23T06:36:05Z",
        "closed_at": "2023-06-23T06:36:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6562",
            "html_url": "https://github.com/run-llama/llama_index/pull/6562",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6562.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6562.patch",
            "merged_at": "2023-06-23T06:36:04Z"
        },
        "body": "Adding missing bullet for Redis in the list of backends.\r\n\r\n# Description\r\n\r\nThe bullet list at the top of this document did not include Redis. I would expect the list to include Redis, because every other backend mentioned in the document is also mentioned in the list. This fixes what appears to be an oversight in the docs.\r\n\r\nFixes #1895 \r\n\r\n## Type of Change\r\n\r\n- [x] This change requires a documentation update\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6562/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6562/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6561",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6561/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6561/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6561/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6561",
        "id": 1770513441,
        "node_id": "PR_kwDOIWuq585Ts1kQ",
        "number": 6561,
        "title": "Add typesense vector store",
        "user": {
            "login": "hongyishi",
            "id": 7098202,
            "node_id": "MDQ6VXNlcjcwOTgyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7098202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hongyishi",
            "html_url": "https://github.com/hongyishi",
            "followers_url": "https://api.github.com/users/hongyishi/followers",
            "following_url": "https://api.github.com/users/hongyishi/following{/other_user}",
            "gists_url": "https://api.github.com/users/hongyishi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hongyishi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hongyishi/subscriptions",
            "organizations_url": "https://api.github.com/users/hongyishi/orgs",
            "repos_url": "https://api.github.com/users/hongyishi/repos",
            "events_url": "https://api.github.com/users/hongyishi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hongyishi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-22T23:16:43Z",
        "updated_at": "2023-06-24T00:49:17Z",
        "closed_at": "2023-06-24T00:49:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6561",
            "html_url": "https://github.com/run-llama/llama_index/pull/6561",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6561.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6561.patch",
            "merged_at": "2023-06-24T00:49:16Z"
        },
        "body": "# Description\r\n\r\nImplements a Typesense vector store that supports both vector search and text search.\r\n\r\n## Type of Change\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6561/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6561/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6560",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6560/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6560/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6560/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6560",
        "id": 1770418182,
        "node_id": "PR_kwDOIWuq585TshPF",
        "number": 6560,
        "title": "Document Modelling Refactor v2",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-22T21:27:04Z",
        "updated_at": "2023-06-26T04:25:34Z",
        "closed_at": "2023-06-26T04:25:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6560",
            "html_url": "https://github.com/run-llama/llama_index/pull/6560",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6560.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6560.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nMassive change, appologies in advance.\r\n\r\nTLDR: see the llama_index/schema.py file for the new node schemas.\r\n\r\n## Type of Change\r\n\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n## TODO\r\n\r\n- [x] appease the mypy gods\r\n- [x] make sure unit tests pass\r\n- [x] re-think node-serialization for vector stores that store text\r\n- [x] clean up references to `doc_id` and `extra_info`\r\n- [x] write conversion script for legacy indexes\r\n- [x] update docs \r\n- [ ] fully test changes (ALL vector stores, as many notebooks as possible)\r\n- [ ] one last merge of main before merging PR\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6560/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6560/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6559",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6559/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6559/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6559/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6559",
        "id": 1770374606,
        "node_id": "PR_kwDOIWuq585TsX2O",
        "number": 6559,
        "title": "Adding ondemand tool loader and small patches to tool base classes",
        "user": {
            "login": "ajhofmann",
            "id": 10040285,
            "node_id": "MDQ6VXNlcjEwMDQwMjg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/10040285?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajhofmann",
            "html_url": "https://github.com/ajhofmann",
            "followers_url": "https://api.github.com/users/ajhofmann/followers",
            "following_url": "https://api.github.com/users/ajhofmann/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajhofmann/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajhofmann/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajhofmann/subscriptions",
            "organizations_url": "https://api.github.com/users/ajhofmann/orgs",
            "repos_url": "https://api.github.com/users/ajhofmann/repos",
            "events_url": "https://api.github.com/users/ajhofmann/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajhofmann/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-22T20:50:00Z",
        "updated_at": "2023-06-30T06:21:01Z",
        "closed_at": "2023-06-30T06:21:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6559",
            "html_url": "https://github.com/run-llama/llama_index/pull/6559",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6559.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6559.patch",
            "merged_at": "2023-06-30T06:21:00Z"
        },
        "body": "# Description\r\n\r\n- In the ondemand loader tool, the literal string `\"query_str\"` is passed when initializing from defaults. This has been corrected to the variable `query_str_kwargs_key` as `\"query_str\"` is only the correct value by default\r\n- In the base tool_spec, we can provide a concrete implementation that infers function schema, instead of requiring that the user provides the schema\r\n- Adds a new class, `ondemand_tool_loader_tool.py` (naming help requested \ud83d\ude05) that acts similarly to `ondemand_loader_tool.py`, however the new class takes in a FunctionTool. \r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [] I have made corresponding changes to the documentation\r\n- [] My changes generate no new warnings\r\n- [] I have added tests that prove my fix is effective or that my feature works\r\n- [] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6559/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6559/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6558",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6558/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6558/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6558/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6558",
        "id": 1770329757,
        "node_id": "I_kwDOIWuq585phRad",
        "number": 6558,
        "title": "[Question]: How do you utilize more than one filter with the AutoRetrieval function?",
        "user": {
            "login": "tuitejc",
            "id": 1263732,
            "node_id": "MDQ6VXNlcjEyNjM3MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1263732?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tuitejc",
            "html_url": "https://github.com/tuitejc",
            "followers_url": "https://api.github.com/users/tuitejc/followers",
            "following_url": "https://api.github.com/users/tuitejc/following{/other_user}",
            "gists_url": "https://api.github.com/users/tuitejc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tuitejc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tuitejc/subscriptions",
            "organizations_url": "https://api.github.com/users/tuitejc/orgs",
            "repos_url": "https://api.github.com/users/tuitejc/repos",
            "events_url": "https://api.github.com/users/tuitejc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tuitejc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-22T20:11:53Z",
        "updated_at": "2023-09-28T16:01:38Z",
        "closed_at": "2023-09-28T16:01:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am modifying the example from this cookbook:\r\nhttps://gpt-index.readthedocs.io/en/latest/examples/agent/openai_agent_query_cookbook.html\r\n\r\nThis works great to filter a single field, but I couldn't figure out how to get it o automatically use multiple fields to filter.  Even in the example, there are two fields defined within the MetadataInfo, but only one is ever used by the agent.\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6558/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6558/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6557",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6557/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6557/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6557/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6557",
        "id": 1770271384,
        "node_id": "PR_kwDOIWuq585TsBNp",
        "number": 6557,
        "title": "Minor `BaseResponseBuilder` interface cleanup",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-22T19:27:42Z",
        "updated_at": "2023-06-22T22:24:58Z",
        "closed_at": "2023-06-22T22:24:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6557",
            "html_url": "https://github.com/run-llama/llama_index/pull/6557",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6557.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6557.patch",
            "merged_at": "2023-06-22T22:24:57Z"
        },
        "body": "# Description\r\n\r\nRemove `prev_response` from `BaseResponseBuilder` interface.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6557/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6557/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6556",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6556/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6556/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6556/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6556",
        "id": 1770079434,
        "node_id": "I_kwDOIWuq585pgUTK",
        "number": 6556,
        "title": "[Question]: newbie question",
        "user": {
            "login": "g3434343",
            "id": 81695893,
            "node_id": "MDQ6VXNlcjgxNjk1ODkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/81695893?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/g3434343",
            "html_url": "https://github.com/g3434343",
            "followers_url": "https://api.github.com/users/g3434343/followers",
            "following_url": "https://api.github.com/users/g3434343/following{/other_user}",
            "gists_url": "https://api.github.com/users/g3434343/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/g3434343/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/g3434343/subscriptions",
            "organizations_url": "https://api.github.com/users/g3434343/orgs",
            "repos_url": "https://api.github.com/users/g3434343/repos",
            "events_url": "https://api.github.com/users/g3434343/events{/privacy}",
            "received_events_url": "https://api.github.com/users/g3434343/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-22T17:02:25Z",
        "updated_at": "2023-09-28T16:01:22Z",
        "closed_at": "2023-09-28T16:01:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI need to know if I use a LLM like open-assistant or any other. Will it analyze my docs using more than the token limit? Usually they're 512 or 2048, no?\r\nPlease answer this question. I know to use LLM but I don't know how this would perform.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6556/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6556/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6555",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6555/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6555/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6555/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6555",
        "id": 1769969625,
        "node_id": "PR_kwDOIWuq585Tq_b1",
        "number": 6555,
        "title": "[version] bump version to 0.6.31",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-22T15:48:00Z",
        "updated_at": "2023-06-22T17:19:41Z",
        "closed_at": "2023-06-22T17:19:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6555",
            "html_url": "https://github.com/run-llama/llama_index/pull/6555",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6555.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6555.patch",
            "merged_at": "2023-06-22T17:19:40Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6555/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6555/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6554",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6554/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6554/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6554/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6554",
        "id": 1769866019,
        "node_id": "I_kwDOIWuq585pfgMj",
        "number": 6554,
        "title": "[Tracking]: Integrate BEIR for Evaluation ",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-22T14:55:45Z",
        "updated_at": "2023-10-21T16:04:16Z",
        "closed_at": "2023-10-21T16:04:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nhttps://github.com/beir-cellar/beir shows that, at the time of publication, BM25+sparse embedding methods outperforms other methods including dense ANN-based retrieval. Since there are complex pipelines built with llama_index, such as multi query, or query rewriting, I believe that integrating this evaluation framework can help users be more objective about the retrieval augmented pipeline they build.\r\n\r\nTasks:\r\n- [x] Basic integration: https://github.com/jerryjliu/llama_index/pull/6825\r\n- [ ] https://github.com/jerryjliu/llama_index/issues/6877\r\n- [x] https://github.com/jerryjliu/llama_index/issues/6878\r\n- [ ] Utilize BEIR test sets for fine-tuning.\r\n\r\n### Resources\r\n\r\n#### Eval Methodology\r\n1. [Cost/Efficiency/Accuracy Tradeoff](https://arxiv.org/pdf/2212.01340.pdf)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6554/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6554/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6553",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6553/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6553/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6553/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6553",
        "id": 1769433894,
        "node_id": "I_kwDOIWuq585pd2sm",
        "number": 6553,
        "title": "[Question]: Does llama index support sharepoint documents?",
        "user": {
            "login": "mkddatascience",
            "id": 98097243,
            "node_id": "U_kgDOBdjYWw",
            "avatar_url": "https://avatars.githubusercontent.com/u/98097243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mkddatascience",
            "html_url": "https://github.com/mkddatascience",
            "followers_url": "https://api.github.com/users/mkddatascience/followers",
            "following_url": "https://api.github.com/users/mkddatascience/following{/other_user}",
            "gists_url": "https://api.github.com/users/mkddatascience/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mkddatascience/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mkddatascience/subscriptions",
            "organizations_url": "https://api.github.com/users/mkddatascience/orgs",
            "repos_url": "https://api.github.com/users/mkddatascience/repos",
            "events_url": "https://api.github.com/users/mkddatascience/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mkddatascience/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-22T10:52:31Z",
        "updated_at": "2023-07-22T01:59:08Z",
        "closed_at": "2023-07-22T01:59:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nDoes llama index support sharepoint documents?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6553/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6553/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6552",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6552/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6552/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6552/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6552",
        "id": 1769336233,
        "node_id": "PR_kwDOIWuq585To157",
        "number": 6552,
        "title": "Fix bug where KG relation was added as node in get_networkx_graph",
        "user": {
            "login": "simonwh",
            "id": 207447,
            "node_id": "MDQ6VXNlcjIwNzQ0Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/207447?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simonwh",
            "html_url": "https://github.com/simonwh",
            "followers_url": "https://api.github.com/users/simonwh/followers",
            "following_url": "https://api.github.com/users/simonwh/following{/other_user}",
            "gists_url": "https://api.github.com/users/simonwh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simonwh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simonwh/subscriptions",
            "organizations_url": "https://api.github.com/users/simonwh/orgs",
            "repos_url": "https://api.github.com/users/simonwh/repos",
            "events_url": "https://api.github.com/users/simonwh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simonwh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-22T09:50:54Z",
        "updated_at": "2023-06-22T16:35:01Z",
        "closed_at": "2023-06-22T15:54:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6552",
            "html_url": "https://github.com/run-llama/llama_index/pull/6552",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6552.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6552.patch",
            "merged_at": "2023-06-22T15:54:50Z"
        },
        "body": "# Description\r\n\r\nSimple change that fixes a small bug in KnowledgeGraphIndex#get_networkx_graph method. The bug caused the relation between two nodes to be added as a node in the network_x graph, instead of being added as a label on the edge.\r\n\r\nWith this fix, the networkx graph are constructed correctly, which is useful for anyone using networkx to visualize etc.\r\n\r\n## Type of Change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nOutputted a full networkx graph with nodes and edges before and after, and confirmed the change resulted in correct structure. Also used pyvis to render the graph and confirm visually.\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] My changes generate no new warnings\r\n- [X] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6552/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6552/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6551",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6551/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6551/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6551/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6551",
        "id": 1769203312,
        "node_id": "PR_kwDOIWuq585ToY-K",
        "number": 6551,
        "title": "fix custom KG retriever notebook nits",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-22T08:29:51Z",
        "updated_at": "2023-06-22T14:48:16Z",
        "closed_at": "2023-06-22T14:48:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6551",
            "html_url": "https://github.com/run-llama/llama_index/pull/6551",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6551.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6551.patch",
            "merged_at": "2023-06-22T14:48:15Z"
        },
        "body": "# Description\r\n\r\nFix a tiny nit in custom KG + vector index retriever notebook, and also add link to docs",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6551/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6551/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6550",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6550/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6550/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6550/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6550",
        "id": 1769069748,
        "node_id": "PR_kwDOIWuq585Tn71e",
        "number": 6550,
        "title": "Refactor TreeSummarize",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-22T07:06:49Z",
        "updated_at": "2023-06-22T22:17:35Z",
        "closed_at": "2023-06-22T22:17:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6550",
            "html_url": "https://github.com/run-llama/llama_index/pull/6550",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6550.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6550.patch",
            "merged_at": "2023-06-22T22:17:33Z"
        },
        "body": "# Description\r\n\r\nRefactor `TreeSummarize` with much simpler logic. Also eliminates the bug where we truncate text when < 10 nodes.\r\n\r\nNew logic is as simple as it gets:\r\n1. repack text chunks (into maximal chunks that fills the context window)\r\n2. if there's one chunk, summarize it and return as final response\r\n3. otherwise, summarize all chunks in parallel, and recurse to step 1.\r\n\r\nBenefits\r\n* no more refine (hard to reason about), now just a basic recursive map / reduce (via repack)\r\n* no more dependency on tree index / builder, easier path to deprecating legacy tree code\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6550/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6550/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6549",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6549/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6549/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6549/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6549",
        "id": 1768896431,
        "node_id": "PR_kwDOIWuq585TnWRV",
        "number": 6549,
        "title": "fix: Fixing the pylint error on the loggers.",
        "user": {
            "login": "noble-varghese",
            "id": 109506617,
            "node_id": "U_kgDOBobwOQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/109506617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noble-varghese",
            "html_url": "https://github.com/noble-varghese",
            "followers_url": "https://api.github.com/users/noble-varghese/followers",
            "following_url": "https://api.github.com/users/noble-varghese/following{/other_user}",
            "gists_url": "https://api.github.com/users/noble-varghese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noble-varghese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noble-varghese/subscriptions",
            "organizations_url": "https://api.github.com/users/noble-varghese/orgs",
            "repos_url": "https://api.github.com/users/noble-varghese/repos",
            "events_url": "https://api.github.com/users/noble-varghese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noble-varghese/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-22T04:14:19Z",
        "updated_at": "2023-06-27T07:45:04Z",
        "closed_at": "2023-06-27T07:45:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6549",
            "html_url": "https://github.com/run-llama/llama_index/pull/6549",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6549.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6549.patch",
            "merged_at": null
        },
        "body": "# Description\r\n1. **Pylint Error in Debug Loggers**:\r\nThe debug loggers in ther codebase have been flagged with the `Pylint(W1203:logging-fstring-interpolation)` and `Pylint(C0103:invalid-name)`. This error suggests that the names used for variables or functions in the debug loggers do not adhere to the recommended naming conventions.\r\n\r\n2. **Inappropriate Usage of f-strings in Debug Loggers**:\r\nWhile inspecting the debug loggers, it was observed that f-strings were used instead of lazy loading using the %s format specifier. This practice goes against the coding standards and is not considered a best practice for string formatting in loggers. To ensure consistency and maintain code quality, it is necessary to replace the f-strings with the proper usage of the %s format specifier.\r\n\r\n3. **Snake Case Conformations in Exception Handling**:\r\nAdditionally, some inconsistencies were found in the snake case conformations used for exception handling. We need to review and update the exception handling sections to ensure uniformity and adherence to snake case conventions.\r\n\r\nFixes # (issue)  #6533\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n- [x] I ran the tests on the local and ensured it passes all the test cases in pytest.\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6549/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6549/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6548",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6548/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6548/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6548/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6548",
        "id": 1768876628,
        "node_id": "PR_kwDOIWuq585TnSAZ",
        "number": 6548,
        "title": "[wip] add object index ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-22T03:45:55Z",
        "updated_at": "2023-06-23T07:02:16Z",
        "closed_at": "2023-06-23T07:02:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6548",
            "html_url": "https://github.com/run-llama/llama_index/pull/6548",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6548.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6548.patch",
            "merged_at": "2023-06-23T07:02:15Z"
        },
        "body": "# Description\r\n\r\nAdd ObjectIndex abstraction - allows serialization/deserialization from Node objects.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6548/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6548/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6547",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6547/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6547/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6547/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6547",
        "id": 1768595702,
        "node_id": "I_kwDOIWuq585paqD2",
        "number": 6547,
        "title": "[Bug]: Imcomplete Doc on Reranker",
        "user": {
            "login": "astro313",
            "id": 1796979,
            "node_id": "MDQ6VXNlcjE3OTY5Nzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1796979?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/astro313",
            "html_url": "https://github.com/astro313",
            "followers_url": "https://api.github.com/users/astro313/followers",
            "following_url": "https://api.github.com/users/astro313/following{/other_user}",
            "gists_url": "https://api.github.com/users/astro313/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/astro313/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/astro313/subscriptions",
            "organizations_url": "https://api.github.com/users/astro313/orgs",
            "repos_url": "https://api.github.com/users/astro313/repos",
            "events_url": "https://api.github.com/users/astro313/events{/privacy}",
            "received_events_url": "https://api.github.com/users/astro313/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-21T22:23:46Z",
        "updated_at": "2023-07-13T22:47:43Z",
        "closed_at": "2023-07-13T22:47:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nFollowing this example on https://gpt-index.readthedocs.io/en/latest/examples/node_postprocessor/LLMReranker-Gatsby.html#retrieval\r\n\r\nonce we get the nodes, how do we pass it to the query engine to get the final response from the LLM? \r\n\r\nFirst, the documentation mentioned `[reranker]` which is not defined. \r\n\r\nSecond, there are incomplete code (the very last cell).\r\n\r\nThere aren't any other documentation to explain how to pass thee reranked nodes to the query engine. \r\n\n\n### Version\n\n0.6.30\n\n### Steps to Reproduce\n\nsee https://gpt-index.readthedocs.io/en/latest/examples/node_postprocessor/LLMReranker-Gatsby.html#retrieval\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6547/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6547/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6546",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6546/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6546/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6546/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6546",
        "id": 1768091317,
        "node_id": "I_kwDOIWuq585pYu61",
        "number": 6546,
        "title": "[Bug]: The statement \"openai.Embedding.create(input=list_of_text, model=engine, **kwargs).data\" is invalid.",
        "user": {
            "login": "zhugexinxin",
            "id": 42615243,
            "node_id": "MDQ6VXNlcjQyNjE1MjQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/42615243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhugexinxin",
            "html_url": "https://github.com/zhugexinxin",
            "followers_url": "https://api.github.com/users/zhugexinxin/followers",
            "following_url": "https://api.github.com/users/zhugexinxin/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhugexinxin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhugexinxin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhugexinxin/subscriptions",
            "organizations_url": "https://api.github.com/users/zhugexinxin/orgs",
            "repos_url": "https://api.github.com/users/zhugexinxin/repos",
            "events_url": "https://api.github.com/users/zhugexinxin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhugexinxin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-21T17:32:14Z",
        "updated_at": "2023-07-13T22:49:28Z",
        "closed_at": "2023-07-13T22:49:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\n```\r\nllm=ChatOpenAI(\r\n    openai_api_base='https://xxxx,\r\n    openai_api_key='sk-xxx',\r\n    temperature=0,\r\n    model_name=\"gpt-3.5-turbo\"\r\n)\r\nllm_predictor = LLMPredictor(llm=llm)\r\n\r\npayload_1 = {\r\n    'openai_api_base': 'https://xxx',\r\n    'openai_api_key': 'sk-xxx',\r\n    'model': 'text-embedding-ada-002',\r\n}\r\n\r\npayload_2 = {\r\n    'api_base': 'https://xxx',\r\n    'api_key': 'sk-xxx',\r\n    'model': 'text-embedding-ada-002',\r\n}\r\n\r\n\r\nembed_model_1 = OpenAIEmbedding(**payload_1)\r\nembed_model_2 = OpenAIEmbedding(**payload_2)\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n    llm_predictor=llm_predictor,\r\n    embed_model=embed_model_1,\r\n)\r\n\r\nindex = VectorStoreIndex.from_documents(\r\n    nodes, service_context=service_context\r\n)\r\n```\r\nembed_model_1 and embed_model_2 both tried and failed\r\n\r\nllama_index/embeddings/openai.py\r\n\r\n```\r\ndef get_embeddings(\r\n    list_of_text: List[str], engine: Optional[str] = None, **kwargs: Any\r\n) -> List[List[float]]:\r\n    \"\"\"Get embeddings.\r\n\r\n    NOTE: Copied from OpenAI's embedding utils:\r\n    https://github.com/openai/openai-python/blob/main/openai/embeddings_utils.py\r\n\r\n    Copied here to avoid importing unnecessary dependencies\r\n    like matplotlib, plotly, scipy, sklearn.\r\n\r\n    \"\"\"\r\n    assert len(list_of_text) <= 2048, \"The batch size should not be larger than 2048.\"\r\n\r\n    # replace newlines, which can negatively affect performance.\r\n    list_of_text = [text.replace(\"\\n\", \" \") for text in list_of_text]\r\n\r\n    data = openai.Embedding.create(input=list_of_text, model=engine, **kwargs).data\r\n    return [d[\"embedding\"] for d in data]\r\n```\r\n\r\ndata = openai.Embedding.create(input=list_of_text, model=engine, **kwargs) is invalid.\r\n\r\n```\r\nopenai.api_key = \"sk-xxxx\"\r\nopenai.api_base = \"https://xxx\"\r\n\r\nresponse = openai.Embedding.create(\r\n    input=\"The best vector database\",\r\n    model='text-embedding-ada-002',\r\n)\r\n```\r\n\r\nThis is correct, passing additional parameters via `kwargs` doesn't seem to achieve the desired effect.\r\n\r\n### Version\r\n\r\nllama-index==0.6.29\r\n\r\n### Steps to Reproduce\r\n\r\n```\r\nllm=ChatOpenAI(\r\n    openai_api_base='https://xxxx,\r\n    openai_api_key='sk-xxx',\r\n    temperature=0,\r\n    model_name=\"gpt-3.5-turbo\"\r\n)\r\nllm_predictor = LLMPredictor(llm=llm)\r\n\r\npayload_1 = {\r\n    'openai_api_base': 'https://xxx',\r\n    'openai_api_key': 'sk-xxx',\r\n    'model': 'text-embedding-ada-002',\r\n}\r\n\r\npayload_2 = {\r\n    'api_base': 'https://xxx',\r\n    'api_key': 'sk-xxx',\r\n    'model': 'text-embedding-ada-002',\r\n}\r\n\r\n\r\nembed_model_1 = OpenAIEmbedding(**payload_1)\r\nembed_model_2 = OpenAIEmbedding(**payload_2)\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n    llm_predictor=llm_predictor,\r\n    embed_model=embed_model_1,\r\n)\r\n\r\nindex = VectorStoreIndex.from_documents(\r\n    nodes, service_context=service_context\r\n)\r\n```\r\nembed_model_1 and embed_model_2 both tried and failed\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"/usr/local/lib/python3.11/site-packages/tenacity/__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/embeddings/openai.py\", line 150, in get_embeddings\r\n    data = openai.Embedding.create(input=list_of_text, model=engine, **kwargs).data\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/openai/api_resources/embedding.py\", line 33, in create\r\n    response = super().create(*args, **kwargs)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 149, in create\r\n    ) = cls.__prepare_create_request(\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/openai/api_resources/abstract/engine_api_resource.py\", line 106, in __prepare_create_request\r\n    requestor = api_requestor.APIRequestor(\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/openai/api_requestor.py\", line 130, in __init__\r\n    self.api_key = key or util.default_api_key()\r\n                          ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/openai/util.py\", line 186, in default_api_key\r\n    raise openai.error.AuthenticationError(\r\nopenai.error.AuthenticationError: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details, or email support@openai.com if you have any questions.\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/indices/base.py\", line 97, in from_documents\r\n    return cls(\r\n           ^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 45, in __init__\r\n    super().__init__(\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/indices/base.py\", line 68, in __init__\r\n    index_struct = self.build_index_from_nodes(nodes)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/token_counter/token_counter.py\", line 78, in wrapped_llm_predict\r\n    f_return_val = f(_self, *args, **kwargs)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 221, in build_index_from_nodes\r\n    return self._build_index_from_nodes(nodes)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 210, in _build_index_from_nodes\r\n    self._add_nodes_to_index(index_struct, nodes)\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 186, in _add_nodes_to_index\r\n    embedding_results = self._get_node_embedding_results(nodes)\r\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 105, in _get_node_embedding_results\r\n    ) = self._service_context.embed_model.get_queued_text_embeddings()\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/embeddings/base.py\", line 172, in get_queued_text_embeddings\r\n    embeddings = self._get_text_embeddings(cur_batch_texts)\r\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/embeddings/openai.py\", line 267, in _get_text_embeddings\r\n    return get_embeddings(\r\n           ^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/tenacity/__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/tenacity/__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/tenacity/__init__.py\", line 326, in iter\r\n    raise retry_exc from fut.exception()\r\ntenacity.RetryError: RetryError[<Future at 0xffffa6f79050 state=finished raised AuthenticationError>]\r\n>>> embed_model\r\n<llama_index.embeddings.openai.OpenAIEmbedding object at 0xffff937bee10>\r\n```\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6546/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6546/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6545",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6545/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6545/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6545/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6545",
        "id": 1767958051,
        "node_id": "PR_kwDOIWuq585TkSE7",
        "number": 6545,
        "title": "fix weaviate distance",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-21T16:15:45Z",
        "updated_at": "2023-08-28T17:11:28Z",
        "closed_at": "2023-06-21T16:31:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6545",
            "html_url": "https://github.com/run-llama/llama_index/pull/6545",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6545.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6545.patch",
            "merged_at": "2023-06-21T16:31:53Z"
        },
        "body": "# Description\r\n\r\nDistance in weaviate is kinda weird, definitely missed this\r\n\r\nhttps://forum.weaviate.io/t/distance-vs-certainty-scores/258\r\n\r\n## Type of Change\r\n\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6545/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6545/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6544",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6544/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6544/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6544/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6544",
        "id": 1767838204,
        "node_id": "PR_kwDOIWuq585Tj4O1",
        "number": 6544,
        "title": "[version] bump version to 0.6.30",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-21T15:13:36Z",
        "updated_at": "2023-06-21T15:23:09Z",
        "closed_at": "2023-06-21T15:23:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6544",
            "html_url": "https://github.com/run-llama/llama_index/pull/6544",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6544.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6544.patch",
            "merged_at": "2023-06-21T15:23:08Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6544/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6544/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6543",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6543/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6543/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6543/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6543",
        "id": 1767540808,
        "node_id": "PR_kwDOIWuq585Ti2xM",
        "number": 6543,
        "title": "fix https://github.com/jerryjliu/llama_index/issues/6542",
        "user": {
            "login": "Hugeldugelking",
            "id": 26121403,
            "node_id": "MDQ6VXNlcjI2MTIxNDAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/26121403?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Hugeldugelking",
            "html_url": "https://github.com/Hugeldugelking",
            "followers_url": "https://api.github.com/users/Hugeldugelking/followers",
            "following_url": "https://api.github.com/users/Hugeldugelking/following{/other_user}",
            "gists_url": "https://api.github.com/users/Hugeldugelking/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Hugeldugelking/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Hugeldugelking/subscriptions",
            "organizations_url": "https://api.github.com/users/Hugeldugelking/orgs",
            "repos_url": "https://api.github.com/users/Hugeldugelking/repos",
            "events_url": "https://api.github.com/users/Hugeldugelking/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Hugeldugelking/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-21T12:52:58Z",
        "updated_at": "2023-06-27T19:17:52Z",
        "closed_at": "2023-06-27T19:17:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6543",
            "html_url": "https://github.com/run-llama/llama_index/pull/6543",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6543.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6543.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nCustom llms couldn't be used to generate questions from documents using the following piece of code, because upon creation of the list index, the `ServiceContext` containing the custom `llm_predictor` was not specified.\r\n```\r\nDatasetGenerator.from_documents(documents, service_context=service_context).generate_questions_from_nodes()\r\n```\r\n\r\nFixes #6542\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n- [x] error didn't came up anymore\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n\r\nThe python script executing the code didn't crash anymore and the issue was resolved following the documentation\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6543/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6543/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6542",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6542/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6542/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6542/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6542",
        "id": 1767518893,
        "node_id": "I_kwDOIWuq585pWjKt",
        "number": 6542,
        "title": "[Bug]: Cannot use DatasetGenerator with custom llm",
        "user": {
            "login": "Hugeldugelking",
            "id": 26121403,
            "node_id": "MDQ6VXNlcjI2MTIxNDAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/26121403?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Hugeldugelking",
            "html_url": "https://github.com/Hugeldugelking",
            "followers_url": "https://api.github.com/users/Hugeldugelking/followers",
            "following_url": "https://api.github.com/users/Hugeldugelking/following{/other_user}",
            "gists_url": "https://api.github.com/users/Hugeldugelking/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Hugeldugelking/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Hugeldugelking/subscriptions",
            "organizations_url": "https://api.github.com/users/Hugeldugelking/orgs",
            "repos_url": "https://api.github.com/users/Hugeldugelking/repos",
            "events_url": "https://api.github.com/users/Hugeldugelking/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Hugeldugelking/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-21T12:42:37Z",
        "updated_at": "2023-07-13T22:50:22Z",
        "closed_at": "2023-07-13T22:50:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI want to generate some questions to a few documents using a custom llm. I used the same code as in the documentation, but llama_index doesn't take the llm_predictor defined in the service_context.  \r\n\r\nI looked up the functions in the stack trace and found out, that the ListIndex, that gets created on line 124 in `evaluation/dataset_generation.py`, doesn't get the `service_context` as a parameter. changing that resolves the issue.\n\n### Version\n\n0.6.24\n\n### Steps to Reproduce\n\nDefine a custom llm, for example with \"Writer/Camel-5b-hf\" just like in the documentation, then load some documents using the following code (also from the documentation):\r\n\r\n```\r\ndocuments = SimpleDirectoryReader('./data').load_data()\r\nfrom llama_index.evaluation import DatasetGenerator\r\ndata_generator = DatasetGenerator.from_documents(documents, service_context=service_context)\r\neval_questions = data_generator.generate_questions_from_nodes()\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\nTraceback (most recent call last):\r\n  File \"/home/aim/playground/tests/llama_index/questiongenerator.py\", line 61, in <module>\r\n    data_generator = DatasetGenerator.from_documents(documents)\r\n  File \"/home/aim/.local/lib/python3.10/site-packages/llama_index/evaluation/dataset_generation.py\", line 92, in from_documents\r\n    service_context = _get_default_service_context()\r\n  File \"/home/aim/.local/lib/python3.10/site-packages/llama_index/evaluation/dataset_generation.py\", line 30, in _get_default_service_context\r\n    llm=ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\")\r\n  File \"/home/aim/.local/lib/python3.10/site-packages/langchain/load/serializable.py\", line 61, in __init__\r\n    super().__init__(**kwargs)\r\n  File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for ChatOpenAI\r\n__root__\r\n  Did not find openai_api_key, please add an environment variable `OPENAI_API_KEY` which contains it, or pass  `openai_api_key` as a named parameter. (type=value_error)\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6542/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6542/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6541",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6541/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6541/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6541/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6541",
        "id": 1767307706,
        "node_id": "I_kwDOIWuq585pVvm6",
        "number": 6541,
        "title": "[Question]: Ingest Unstructured Data Through the Unstructured.io Reader",
        "user": {
            "login": "achilela",
            "id": 112531858,
            "node_id": "U_kgDOBrUZkg",
            "avatar_url": "https://avatars.githubusercontent.com/u/112531858?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/achilela",
            "html_url": "https://github.com/achilela",
            "followers_url": "https://api.github.com/users/achilela/followers",
            "following_url": "https://api.github.com/users/achilela/following{/other_user}",
            "gists_url": "https://api.github.com/users/achilela/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/achilela/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/achilela/subscriptions",
            "organizations_url": "https://api.github.com/users/achilela/orgs",
            "repos_url": "https://api.github.com/users/achilela/repos",
            "events_url": "https://api.github.com/users/achilela/events{/privacy}",
            "received_events_url": "https://api.github.com/users/achilela/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-21T10:45:38Z",
        "updated_at": "2023-06-23T05:05:46Z",
        "closed_at": "2023-06-23T05:05:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello,\r\nI am trying to run the 10K-ChatBot using VSCode, however, each and everytime I run \r\nUnstructuredReader` = download_loader(\"UnstructuredReader\", refresh_cache=True)\r\nI got an error\r\nJSONDecodeError: Extra data: line 1 column 4 (char 3)\r\n\r\nWhereas running on Colab works charmingly without any issue. Is this related to some local dependencies? I am running the VSCode on Ubuntu 22.4 on Macbook Air.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6541/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6541/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6540",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6540/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6540/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6540/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6540",
        "id": 1767114492,
        "node_id": "I_kwDOIWuq585pVAb8",
        "number": 6540,
        "title": "[Question]: Why do I get Rate Limit error?",
        "user": {
            "login": "martennilsson",
            "id": 21829,
            "node_id": "MDQ6VXNlcjIxODI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/21829?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/martennilsson",
            "html_url": "https://github.com/martennilsson",
            "followers_url": "https://api.github.com/users/martennilsson/followers",
            "following_url": "https://api.github.com/users/martennilsson/following{/other_user}",
            "gists_url": "https://api.github.com/users/martennilsson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/martennilsson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/martennilsson/subscriptions",
            "organizations_url": "https://api.github.com/users/martennilsson/orgs",
            "repos_url": "https://api.github.com/users/martennilsson/repos",
            "events_url": "https://api.github.com/users/martennilsson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/martennilsson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-21T08:56:36Z",
        "updated_at": "2023-06-21T15:12:10Z",
        "closed_at": "2023-06-21T15:11:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI'm trying to do the simplest possible POC of indexing a document (for questioning) like this:\r\n\r\n```\r\nfrom llama_index import VectorStoreIndex, SimpleDirectoryReader\r\nimport openai\r\nimport os\r\n\r\nos.environ['OPENAI_API_KEY'] = \"<redacted>\"\r\n\r\ndocuments = SimpleDirectoryReader('test_data').load_data()\r\nindex = VectorStoreIndex.from_documents(documents)\r\n\r\nquery_engine = index.as_query_engine()\r\nresponse = query_engine.query(\"What did the author do growing up?\")\r\nprint(response)\r\n```\r\n \r\nAnd get Rate Limit error,:\r\n ```\r\n File \"/Users/mart/src/im/test2.py\", line 9, in <module>\r\n    index = VectorStoreIndex.from_documents(documents)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/mart/.virtualenvs/im/lib/python3.11/site-packages/llama_index/indices/base.py\", line 97, in from_documents\r\n    return cls(\r\n           ^^^^\r\n  File \"/Users/mart/.virtualenvs/im/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 45, in __init__\r\n    super().__init__(\r\n  File \"/Users/mart/.virtualenvs/im/lib/python3.11/site-packages/llama_index/indices/base.py\", line 68, in __init__\r\n    index_struct = self.build_index_from_nodes(nodes)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/mart/.virtualenvs/im/lib/python3.11/site-packages/llama_index/token_counter/token_counter.py\", line 78, in wrapped_llm_predict\r\n    f_return_val = f(_self, *args, **kwargs)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/mart/.virtualenvs/im/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 221, in build_index_from_nodes\r\n    return self._build_index_from_nodes(nodes)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/mart/.virtualenvs/im/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 210, in _build_index_from_nodes\r\n    self._add_nodes_to_index(index_struct, nodes)\r\n  File \"/Users/mart/.virtualenvs/im/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 186, in _add_nodes_to_index\r\n    embedding_results = self._get_node_embedding_results(nodes)\r\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/mart/.virtualenvs/im/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 105, in _get_node_embedding_results\r\n    ) = self._service_context.embed_model.get_queued_text_embeddings()\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/mart/.virtualenvs/im/lib/python3.11/site-packages/llama_index/embeddings/base.py\", line 172, in get_queued_text_embeddings\r\n    embeddings = self._get_text_embeddings(cur_batch_texts)\r\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/mart/.virtualenvs/im/lib/python3.11/site-packages/llama_index/embeddings/openai.py\", line 267, in _get_text_embeddings\r\n    return get_embeddings(\r\n           ^^^^^^^^^^^^^^^\r\n  File \"/Users/mart/.virtualenvs/im/lib/python3.11/site-packages/tenacity/__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/mart/.virtualenvs/im/lib/python3.11/site-packages/tenacity/__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/mart/.virtualenvs/im/lib/python3.11/site-packages/tenacity/__init__.py\", line 326, in iter\r\n    raise retry_exc from fut.exception()\r\ntenacity.RetryError: RetryError[<Future at 0x146316c10 state=finished raised RateLimitError>]\r\n```\r\n### Although:\r\n - I have a paid account\r\n - I have one document in my test_data, that is only 10 rows, 124 words long.\r\n - I am using a model (text-embedding-ada-002) that should accept 60 RPM\r\n \r\n### What I have tried:\r\n- Created new API-key\r\n- Updated all the libs\r\n- Shortened the doc\r\n \r\n\r\n \r\n### Versions:\r\n```\r\nllama-index             0.6.29\r\n\r\nif relevant:\r\nllama-hub               0.0.3\r\nlangchain               0.0.207\r\n\r\n```\r\nWhat am I missing?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6540/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6540/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6539",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6539/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6539/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6539/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6539",
        "id": 1767097627,
        "node_id": "I_kwDOIWuq585pU8Ub",
        "number": 6539,
        "title": "[Question]: Has anyone tried KnowledgeGraphDemo on local LLM?",
        "user": {
            "login": "karrtikiyer",
            "id": 4375472,
            "node_id": "MDQ6VXNlcjQzNzU0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4375472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/karrtikiyer",
            "html_url": "https://github.com/karrtikiyer",
            "followers_url": "https://api.github.com/users/karrtikiyer/followers",
            "following_url": "https://api.github.com/users/karrtikiyer/following{/other_user}",
            "gists_url": "https://api.github.com/users/karrtikiyer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/karrtikiyer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/karrtikiyer/subscriptions",
            "organizations_url": "https://api.github.com/users/karrtikiyer/orgs",
            "repos_url": "https://api.github.com/users/karrtikiyer/repos",
            "events_url": "https://api.github.com/users/karrtikiyer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/karrtikiyer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-21T08:45:57Z",
        "updated_at": "2023-07-22T01:59:35Z",
        "closed_at": "2023-07-22T01:59:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am trying to reproduce [this](https://github.com/jerryjliu/llama_index/blob/5fcdbfc429ee08193ce03e57bcb61e3a827fa72a/docs/examples/index_structs/knowledge_graph/KnowledgeGraphDemo.ipynb) example on local LLM, however with Open LLAMA 13B or GPT 4 All Snoozy it does not give the desired results.\r\nWanted to know if we can expect this to work local LLM's?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6539/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6539/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6538",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6538/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6538/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6538/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6538",
        "id": 1766954630,
        "node_id": "I_kwDOIWuq585pUZaG",
        "number": 6538,
        "title": "[Bug]: KeyError: 'description' in OpenAIPydanticProgram",
        "user": {
            "login": "Ashish5869",
            "id": 131770947,
            "node_id": "U_kgDOB9qqQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/131770947?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ashish5869",
            "html_url": "https://github.com/Ashish5869",
            "followers_url": "https://api.github.com/users/Ashish5869/followers",
            "following_url": "https://api.github.com/users/Ashish5869/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ashish5869/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ashish5869/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ashish5869/subscriptions",
            "organizations_url": "https://api.github.com/users/Ashish5869/orgs",
            "repos_url": "https://api.github.com/users/Ashish5869/repos",
            "events_url": "https://api.github.com/users/Ashish5869/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ashish5869/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-21T07:39:37Z",
        "updated_at": "2023-06-22T10:54:55Z",
        "closed_at": "2023-06-22T10:54:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nOUTPUT ERROR:\r\n\r\n```\r\nKeyError                                  Traceback (most recent call last)\r\n/tmp/ipykernel_19989/281202892.py in <module>\r\n----> 1 output = program(movie_name='The Shining')\r\n      2 print(output)\r\n\r\n~/.local/lib/python3.10/site-packages/llama_index/program/openai_program.py in __call__(self, *args, **kwargs)\r\n     91         formatted_prompt = self._prompt.format(**kwargs)\r\n     92 \r\n---> 93         openai_fn_spec = _openai_function(self._output_cls)\r\n     94 \r\n     95         ai_message = self._llm.predict_messages(\r\n\r\n~/.local/lib/python3.10/site-packages/llama_index/program/openai_program.py in _openai_function(output_cls)\r\n     18     return {\r\n     19         \"name\": schema[\"title\"],\r\n---> 20         \"description\": schema[\"description\"],\r\n     21         \"parameters\": output_cls.schema(),\r\n     22     }\r\n\r\nKeyError: 'description'\r\n```\n\n### Version\n\n0.6.29\n\n### Steps to Reproduce\n\nCode\r\n```\r\nclass Song(BaseModel):\r\n    title: str\r\n    length_seconds: int\r\n\r\nprompt_template_str = \"\"\"\\\r\nGenerate an example album, with an artist and a list of songs. \\\r\nUsing the movie {movie_name} as inspiration.\\\r\n\"\"\"\r\nprogram = OpenAIPydanticProgram.from_defaults(\r\n    output_cls=Album, \r\n    prompt_template_str=prompt_template_str,\r\n    verbose=True,\r\n    llm=ChatOpenAI(\r\n        model_name=\"gpt-3.5-turbo-0613\", \r\n        openai_api_key=key,\r\n    )\r\n)\r\n\r\noutput = program(movie_name='The Shining')\r\n```\r\n\r\nOUTPUT ERROR:\r\n\r\n```\r\nKeyError                                  Traceback (most recent call last)\r\n/tmp/ipykernel_19989/281202892.py in <module>\r\n----> 1 output = program(movie_name='The Shining')\r\n      2 print(output)\r\n\r\n~/.local/lib/python3.10/site-packages/llama_index/program/openai_program.py in __call__(self, *args, **kwargs)\r\n     91         formatted_prompt = self._prompt.format(**kwargs)\r\n     92 \r\n---> 93         openai_fn_spec = _openai_function(self._output_cls)\r\n     94 \r\n     95         ai_message = self._llm.predict_messages(\r\n\r\n~/.local/lib/python3.10/site-packages/llama_index/program/openai_program.py in _openai_function(output_cls)\r\n     18     return {\r\n     19         \"name\": schema[\"title\"],\r\n---> 20         \"description\": schema[\"description\"],\r\n     21         \"parameters\": output_cls.schema(),\r\n     22     }\r\n\r\nKeyError: 'description'\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6538/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6538/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6537",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6537/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6537/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6537/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6537",
        "id": 1766863573,
        "node_id": "I_kwDOIWuq585pUDLV",
        "number": 6537,
        "title": "Till when we can except the memory in house support in Llama-index Q&A ?",
        "user": {
            "login": "AhmedAffan786",
            "id": 85383906,
            "node_id": "MDQ6VXNlcjg1MzgzOTA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/85383906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AhmedAffan786",
            "html_url": "https://github.com/AhmedAffan786",
            "followers_url": "https://api.github.com/users/AhmedAffan786/followers",
            "following_url": "https://api.github.com/users/AhmedAffan786/following{/other_user}",
            "gists_url": "https://api.github.com/users/AhmedAffan786/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AhmedAffan786/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AhmedAffan786/subscriptions",
            "organizations_url": "https://api.github.com/users/AhmedAffan786/orgs",
            "repos_url": "https://api.github.com/users/AhmedAffan786/repos",
            "events_url": "https://api.github.com/users/AhmedAffan786/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AhmedAffan786/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-21T06:40:50Z",
        "updated_at": "2023-07-22T02:01:23Z",
        "closed_at": "2023-07-22T02:01:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nIn house chat memory, that require to remember the context of previous chat/conversations.\r\nLangChain is providing that why not Llama-index supports with that chat memory.\r\n\n\n### Reason\n\nYes, we can integrate with LangChain agents for that but they get to generative, because they are chat agents not Q&A modules.\r\nHope you understand and try to provide the solution.  \n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6537/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6537/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6536",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6536/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6536/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6536/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6536",
        "id": 1766827271,
        "node_id": "PR_kwDOIWuq585TgarY",
        "number": 6536,
        "title": "Suo/minor pgvector update",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-21T06:11:40Z",
        "updated_at": "2023-06-21T06:15:55Z",
        "closed_at": "2023-06-21T06:15:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6536",
            "html_url": "https://github.com/run-llama/llama_index/pull/6536",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6536.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6536.patch",
            "merged_at": "2023-06-21T06:15:54Z"
        },
        "body": "Minor cleanup following #6190 ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6536/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6536/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6535",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6535/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6535/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6535/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6535",
        "id": 1766815645,
        "node_id": "I_kwDOIWuq585pT3ed",
        "number": 6535,
        "title": "[Feature Request]:  Tutorial for showing to stream output via flask!",
        "user": {
            "login": "vishalp-simplecrm",
            "id": 115548851,
            "node_id": "U_kgDOBuMisw",
            "avatar_url": "https://avatars.githubusercontent.com/u/115548851?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishalp-simplecrm",
            "html_url": "https://github.com/vishalp-simplecrm",
            "followers_url": "https://api.github.com/users/vishalp-simplecrm/followers",
            "following_url": "https://api.github.com/users/vishalp-simplecrm/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishalp-simplecrm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishalp-simplecrm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishalp-simplecrm/subscriptions",
            "organizations_url": "https://api.github.com/users/vishalp-simplecrm/orgs",
            "repos_url": "https://api.github.com/users/vishalp-simplecrm/repos",
            "events_url": "https://api.github.com/users/vishalp-simplecrm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishalp-simplecrm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-21T06:04:25Z",
        "updated_at": "2023-09-27T16:01:40Z",
        "closed_at": "2023-09-27T16:01:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nNeed the \r\nTutorial for showing to stream output via flask!\r\n\r\n\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6535/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6535/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6534",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6534/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6534/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6534/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6534",
        "id": 1766804057,
        "node_id": "PR_kwDOIWuq585TgVq2",
        "number": 6534,
        "title": "Fix: use \"generation\" as default response_mode for EmptyIndex",
        "user": {
            "login": "jjmachan",
            "id": 5261489,
            "node_id": "MDQ6VXNlcjUyNjE0ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5261489?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jjmachan",
            "html_url": "https://github.com/jjmachan",
            "followers_url": "https://api.github.com/users/jjmachan/followers",
            "following_url": "https://api.github.com/users/jjmachan/following{/other_user}",
            "gists_url": "https://api.github.com/users/jjmachan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jjmachan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jjmachan/subscriptions",
            "organizations_url": "https://api.github.com/users/jjmachan/orgs",
            "repos_url": "https://api.github.com/users/jjmachan/repos",
            "events_url": "https://api.github.com/users/jjmachan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jjmachan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-21T05:57:12Z",
        "updated_at": "2023-06-21T16:29:32Z",
        "closed_at": "2023-06-21T16:29:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6534",
            "html_url": "https://github.com/run-llama/llama_index/pull/6534",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6534.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6534.patch",
            "merged_at": "2023-06-21T16:29:31Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\nThe current version of `EmptyIndex` uses the `CompactRefine` response_mode for synthesis. This doesn't seem to work and the `Generation` response_mode is better suited to be the default here\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6534/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6534/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6533",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6533/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6533/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6533/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6533",
        "id": 1766704143,
        "node_id": "I_kwDOIWuq585pTcQP",
        "number": 6533,
        "title": "[Bug]: Pylint(C0103:invalid-name) Issue in Linting and Pylint Configuration",
        "user": {
            "login": "noble-varghese",
            "id": 109506617,
            "node_id": "U_kgDOBobwOQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/109506617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noble-varghese",
            "html_url": "https://github.com/noble-varghese",
            "followers_url": "https://api.github.com/users/noble-varghese/followers",
            "following_url": "https://api.github.com/users/noble-varghese/following{/other_user}",
            "gists_url": "https://api.github.com/users/noble-varghese/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noble-varghese/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noble-varghese/subscriptions",
            "organizations_url": "https://api.github.com/users/noble-varghese/orgs",
            "repos_url": "https://api.github.com/users/noble-varghese/repos",
            "events_url": "https://api.github.com/users/noble-varghese/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noble-varghese/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-21T05:26:51Z",
        "updated_at": "2023-09-28T16:02:16Z",
        "closed_at": "2023-09-28T16:02:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nThis is not a bug in itself but a linting issue. The current codebase is generating Pylint(C0103:invalid-name) warnings during linting. The objective of this issue is to resolve the Pylint warning by updating the codebase to follow the recommended naming conventions.\r\n\r\nBy addressing this issue, we can aim to improve the overall code quality, maintainability, and readability of the project. It will also ensure that the codebase aligns with best practices and adheres to Pylint's guidelines, leading to a more robust and maintainable codebase.\r\n\r\nI would like to address this issue and raise a suitable PR that resolves this issue. Please let me know if this has been prioritised in another PR. If not I can gladly take this up :)\r\n\r\n### Version\r\n\r\nv0.6.29\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6533/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6533/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6532",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6532/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6532/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6532/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6532",
        "id": 1766652955,
        "node_id": "I_kwDOIWuq585pTPwb",
        "number": 6532,
        "title": "AttributeError: 'str' object has no attribute 'get_index_struct' when loading index from load_index_from_storage",
        "user": {
            "login": "yaameenc",
            "id": 105908864,
            "node_id": "U_kgDOBlAKgA",
            "avatar_url": "https://avatars.githubusercontent.com/u/105908864?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yaameenc",
            "html_url": "https://github.com/yaameenc",
            "followers_url": "https://api.github.com/users/yaameenc/followers",
            "following_url": "https://api.github.com/users/yaameenc/following{/other_user}",
            "gists_url": "https://api.github.com/users/yaameenc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yaameenc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yaameenc/subscriptions",
            "organizations_url": "https://api.github.com/users/yaameenc/orgs",
            "repos_url": "https://api.github.com/users/yaameenc/repos",
            "events_url": "https://api.github.com/users/yaameenc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yaameenc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-21T04:23:42Z",
        "updated_at": "2023-06-21T05:31:25Z",
        "closed_at": "2023-06-21T05:30:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [x] I have searched both the documentation and discord for an answer.\n\n### Question\n\n\r\nI have developed a chatbot using llama index and streamlit. However, when I run the app, I encounter an AttributeError: 'str' object has no attribute 'get_index_struct' when trying to load the index using load_index_from_storage.\r\n\r\nIt's strange because a few weeks ago, my code was working perfectly fine, and the chatbot was functioning properly. Recently, I added a new file to my content folder to create the index and store the JSON files in the storage folder. But now, I'm getting the aforementioned error when running the app.\r\n\r\nHere's the relevant code snippet:\r\n\r\n```\r\ndef get_response(query_engine, query):\r\n    try:\r\n        stored_response = c.execute(\"SELECT response FROM history WHERE LOWER(query) = LOWER(?)\", (query,)).fetchone()\r\n        \r\n        if stored_response is not None:\r\n            response = stored_response[0]\r\n        else:\r\n            response = query_engine.query(query)\r\n            if not isinstance(response, dict):\r\n                raise TypeError(f\"Unexpected type {type(response)} for response.\")\r\n            response = str(response)\r\n            c.execute(\"INSERT INTO history (query, response) VALUES (?, ?)\", (query, response))\r\n            conn.commit()\r\n\r\n        return response\r\n    except Exception as e:\r\n        st.error(f'Error: {str(e)}')\r\n\r\ndef check_json_integrity(filepath):\r\n    try:\r\n        with open(filepath, 'r') as f:\r\n            json.load(f)\r\n        print(f\"No issues found in {filepath}.\")\r\n    except json.JSONDecodeError as e:\r\n        print(f\"Invalid JSON in {filepath}. {str(e)}\")\r\n        return False\r\n    return True\r\n\r\ndef main():\r\n    storage_path = './storage'\r\n\r\n    json_files = [\r\n        os.path.join(storage_path, 'graph_store.json'),\r\n        os.path.join(storage_path, 'docstore.json'),\r\n        os.path.join(storage_path, 'vector_store.json'),\r\n        os.path.join(storage_path, 'index_store.json')\r\n    ]\r\n\r\n    json_files_integrity = all([check_json_integrity(filepath) for filepath in json_files])\r\n\r\n    if not json_files_integrity:\r\n        raise ValueError(\"One or more storage files are not valid JSON files.\")\r\n\r\n    storage_context = StorageContext.from_defaults(persist_dir=storage_path)\r\n    index = load_index_from_storage(storage_context)\r\n    query_engine = index.as_query_engine()\r\n```\r\n\r\nI'm wondering if there have been any recent changes or updates that could be causing this issue. Has anyone else faced this problem before, and if so, were they able to find a solution?\r\n\r\n---",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6532/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6532/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6531",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6531/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6531/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6531/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6531",
        "id": 1766487522,
        "node_id": "I_kwDOIWuq585pSnXi",
        "number": 6531,
        "title": "[Feature Request]: Tools for tuning retrieval hyperparameters",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-21T01:07:02Z",
        "updated_at": "2023-09-27T16:01:26Z",
        "closed_at": "2023-09-27T16:01:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nSteps:\r\n1. Build some global config for a retrieval workflow.\r\n2. Next, we should build a basic A/B testing observability/analytics to account for variance in the quality of output. Further, also store the retrieval latency. This is meant to aid the development workflow.\r\n3. Next, for a complex retrieval pipeline, in the online setting, balance exploration/exploitation with A/B, bandits or bayesian testing.\r\n\r\nExample of retrieval hyperparameters:\r\n1. Top K for similarity search\r\n2. Which ranking model to use\r\n3. Whether or not certain mixed media are included in the search.\r\n4. For online web scraping / search, determine the extent of the link traversal tree (this may not be solvable with a global hyperparameter, i.e. may be query specific)\r\n5. Choice of heuristic/data-driven/agent-driven dispatch\r\n6. Choice whether to include a particular KB or grouping of document (this should technically be solved with reranking)\r\n\r\n### Reason\r\n\r\n_No response_\r\n\r\n### Value of Feature\r\n\r\nEven retrieval augmented LLMs frequently make mistakes. Tuning a retrieval model is hard, so one should build tools to make it easier to make the cost/accuracy/performance tradeoff.\r\n\r\nThere are two major workflows:\r\n1. Development tuning (higher quality feedback). Can build an operator-friendly feedback tool (select from 4 options - i.e. similar to that in RLHF or midjourney).\r\n2. Live tuning  - based on interactions and feedback signals from real world users (low SNR)\r\n\r\nI believe this type of feature is necessary for llama_index to become a more comprehensive solution for building conversational products that deliver with high accuracy.\r\n\r\n### Questions and Caveats\r\n\r\nSignificant overlap with tools that may exist for prompt management.\r\n\r\nHence, I think the more general tool could be some separate framework that is able to connect into retrieval (e.g. llama_index) and application layer (prompt chaining e.g. langchain).\r\n\r\nMore generally, this is some kind of tooling that should be available in a larger MLOps framework.\r\n\r\nMore investigation is needed to determine what the right abstractions are and the feasibility in integrating with existing MLOps, observability and hyperparameter tuning tools.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6531/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6531/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6530",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6530/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6530/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6530/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6530",
        "id": 1766321343,
        "node_id": "PR_kwDOIWuq585TfAU6",
        "number": 6530,
        "title": "Update chat engine to use new `LLM` abstraction and `ChatMessage`",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-20T23:02:36Z",
        "updated_at": "2023-07-03T00:33:01Z",
        "closed_at": "2023-07-03T00:33:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6530",
            "html_url": "https://github.com/run-llama/llama_index/pull/6530",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6530.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6530.patch",
            "merged_at": "2023-07-03T00:32:59Z"
        },
        "body": "### Summary\r\n* Update chat engine to use new `LLM` abstraction and `ChatMessage` ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6530/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6530/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6529",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6529/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6529/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6529/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6529",
        "id": 1766292317,
        "node_id": "PR_kwDOIWuq585Te6_O",
        "number": 6529,
        "title": "Hongyi sql refactor",
        "user": {
            "login": "hongyishi",
            "id": 7098202,
            "node_id": "MDQ6VXNlcjcwOTgyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7098202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hongyishi",
            "html_url": "https://github.com/hongyishi",
            "followers_url": "https://api.github.com/users/hongyishi/followers",
            "following_url": "https://api.github.com/users/hongyishi/following{/other_user}",
            "gists_url": "https://api.github.com/users/hongyishi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hongyishi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hongyishi/subscriptions",
            "organizations_url": "https://api.github.com/users/hongyishi/orgs",
            "repos_url": "https://api.github.com/users/hongyishi/repos",
            "events_url": "https://api.github.com/users/hongyishi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hongyishi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-20T22:31:49Z",
        "updated_at": "2023-06-22T20:32:30Z",
        "closed_at": "2023-06-22T20:32:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6529",
            "html_url": "https://github.com/run-llama/llama_index/pull/6529",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6529.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6529.patch",
            "merged_at": "2023-06-22T20:32:29Z"
        },
        "body": "# Description\r\n\r\nA new interface for SQL database indexing. SQLTableIndex only operates on pre-existing SQL databases. Functionally it should be the same as the existing SQLStructStoreIndex.\r\nThe main difference is that the actual index only stores the SQL database reference and table info into the passed in VectorStoreIndex. It does not interface with Nodes on its own.\r\n\r\nThere is a new SQLTableRetriever that can retrieve based on specified table names or llm prediction.\r\nA new NLSQLTableQueryEngine takes in the SQLTableIndex. The main difference is its _get_table_context no longer uses _sql_context_container.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n- [ ] Added new notebook (that tests end-to-end) (I actually modified the existing Airbyte workflow but I can separate it out or leave it as the new version.)\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6529/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6529/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6528",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6528/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6528/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6528/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6528",
        "id": 1766147306,
        "node_id": "I_kwDOIWuq585pRUTq",
        "number": 6528,
        "title": "[Bug]: Cannot load StorageContext from persisted storage context (Chroma)",
        "user": {
            "login": "pchamart",
            "id": 118387029,
            "node_id": "U_kgDOBw5xVQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/118387029?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pchamart",
            "html_url": "https://github.com/pchamart",
            "followers_url": "https://api.github.com/users/pchamart/followers",
            "following_url": "https://api.github.com/users/pchamart/following{/other_user}",
            "gists_url": "https://api.github.com/users/pchamart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pchamart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pchamart/subscriptions",
            "organizations_url": "https://api.github.com/users/pchamart/orgs",
            "repos_url": "https://api.github.com/users/pchamart/repos",
            "events_url": "https://api.github.com/users/pchamart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pchamart/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5274485211,
                "node_id": "LA_kwDOIWuq588AAAABOmJB2w",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/discord",
                "name": "discord",
                "color": "E2208D",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-20T21:02:19Z",
        "updated_at": "2023-06-20T23:11:18Z",
        "closed_at": "2023-06-20T23:11:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nUnable to load presisted `StorageContext` from disk per instructions [here](https://gpt-index.readthedocs.io/en/latest/how_to/storage/customization.html)\r\n\r\nSeems like when the `persist` call is made the index info is stored as `index_store.json` on disk as opposed to `vector_store.json` which the `load_index_from_storage` expects\r\n\r\n```python\r\nindex.storage_context.persist(persist_dir=INDEX_DIR)\r\n```\r\n\r\n*NOTE:* I also tried loading (similar to Pinecone) as suggested from the example [here](https://gpt-index.readthedocs.io/en/latest/how_to/storage/customization.html) but no luck either.\r\n\r\n```python\r\nvector_store = ChromaVectorStore(chroma_collection=COLLECTION_NAME)\r\nloaded_index = VectorStoreIndex.from_vector_store(vector_store=vector_store, service_context=service_context)\r\nquery_engine = loaded_index.as_query_engine(\r\n    service_context=service_context\r\n)\r\n\r\nresponse = query_engine.query(query)\r\nprint(response)\r\n```\r\n\r\n### Version\r\n\r\nllama_index: 0.6.28\r\n\r\n### Steps to Reproduce\r\n\r\n1. Create chroma index and persist StorageContext to disk\r\n```python\r\n\r\nre_index_chroma = False\r\n\r\n# Create index only when re_index_chroma Flag is set to True, else, load from disk\r\nif re_index_chroma:\r\n    print(f\"Ingesting documents to Index\")\r\n    chroma_index = ChromaVectorStore(chroma_collection=pdf_collection)\r\n    storage_context = StorageContext.from_defaults(vector_store=chroma_index)\r\n    index = VectorStoreIndex.from_documents(\r\n        documents=docs, storage_context=storage_context, service_context=service_context\r\n    )\r\n    print(f\"Persisting index to {INDEX_DIR}\")\r\n    index.storage_context.persist(persist_dir=INDEX_DIR)\r\n```\r\n2. Load `storage_context` from disk\r\n\r\n```python\r\n# Loading storage context from disk\r\nstorage_context = StorageContext.from_defaults(persist_dir=INDEX_DIR)\r\nloaded_index = load_index_from_storage(storage_context=storage_context)\r\n```\r\n\r\nError at this step\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 in <module>:3                                                                                    \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1 query = \"what did the president say about Justice beyer?\"                                             \u2502\r\n\u2502   2 # Loading storage context from disk                                                          \u2502\r\n\u2502 \u2771 3 storage_context = StorageContext.from_defaults(persist_dir=INDEX_DIR)                        \u2502\r\n\u2502   4 loaded_index = load_index_from_storage(storage_context=storage_context)                      \u2502\r\n\u2502   5                                                                                              \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /Users/xxxx/miniforge3/envs/nlp/lib/python3.9/site-packages/llama_index/storage/storage_cont \u2502\r\n\u2502 ext.py:81 in from_defaults                                                                       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    78 \u2502   \u2502   \u2502   index_store = index_store or SimpleIndexStore.from_persist_dir(                \u2502\r\n\u2502    79 \u2502   \u2502   \u2502   \u2502   persist_dir, fs=fs                                                         \u2502\r\n\u2502    80 \u2502   \u2502   \u2502   )                                                                              \u2502\r\n\u2502 \u2771  81 \u2502   \u2502   \u2502   vector_store = vector_store or SimpleVectorStore.from_persist_dir(             \u2502\r\n\u2502    82 \u2502   \u2502   \u2502   \u2502   persist_dir, fs=fs                                                         \u2502\r\n\u2502    83 \u2502   \u2502   \u2502   )                                                                              \u2502\r\n\u2502    84 \u2502   \u2502   \u2502   graph_store = graph_store or SimpleGraphStore.from_persist_dir(                \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /Users/xxxx/miniforge3/envs/nlp/lib/python3.9/site-packages/llama_index/vector_stores/simple \u2502\r\n\u2502 .py:87 in from_persist_dir                                                                       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    84 \u2502   \u2502   \u2502   persist_path = concat_dirs(persist_dir, DEFAULT_PERSIST_FNAME)                 \u2502\r\n\u2502    85 \u2502   \u2502   else:                                                                              \u2502\r\n\u2502    86 \u2502   \u2502   \u2502   persist_path = os.path.join(persist_dir, DEFAULT_PERSIST_FNAME)                \u2502\r\n\u2502 \u2771  87 \u2502   \u2502   return cls.from_persist_path(persist_path, fs=fs)                                  \u2502\r\n\u2502    88 \u2502                                                                                          \u2502\r\n\u2502    89 \u2502   @property                                                                              \u2502\r\n\u2502    90 \u2502   def client(self) -> None:                                                              \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /Users/xxxx/miniforge3/envs/nlp/lib/python3.9/site-packages/llama_index/vector_stores/simple \u2502\r\n\u2502 .py:199 in from_persist_path                                                                     \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   196 \u2502   \u2502   \"\"\"Create a SimpleKVStore from a persist directory.\"\"\"                             \u2502\r\n\u2502   197 \u2502   \u2502   fs = fs or fsspec.filesystem(\"file\")                                               \u2502\r\n\u2502   198 \u2502   \u2502   if not fs.exists(persist_path):                                                    \u2502\r\n\u2502 \u2771 199 \u2502   \u2502   \u2502   raise ValueError(                                                              \u2502\r\n\u2502   200 \u2502   \u2502   \u2502   \u2502   f\"No existing {__name__} found at {persist_path}, skipping load.\"          \u2502\r\n\u2502   201 \u2502   \u2502   \u2502   )                                                                              \u2502\r\n\u2502   202                                                                                            \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nValueError: No existing llama_index.vector_stores.simple found at chroma/vector_store.json, skipping load.\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6528/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6528/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6527",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6527/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6527/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6527/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6527",
        "id": 1765858810,
        "node_id": "PR_kwDOIWuq585Tdkuk",
        "number": 6527,
        "title": "Refactor `PandasQueryEngine` to take in df directly, deprecate `PandasIndex`",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-20T17:39:41Z",
        "updated_at": "2023-08-28T17:10:23Z",
        "closed_at": "2023-06-20T18:35:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6527",
            "html_url": "https://github.com/run-llama/llama_index/pull/6527",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6527.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6527.patch",
            "merged_at": "2023-06-20T18:35:51Z"
        },
        "body": "# Description\r\n\r\nRefactor `PandasQueryEngine` to take in df directly, deprecate `PandasIndex`\r\n\r\nUpdated docs, notebooks, API references\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6527/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6527/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6526",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6526/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6526/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6526/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6526",
        "id": 1765737239,
        "node_id": "I_kwDOIWuq585pPwMX",
        "number": 6526,
        "title": "[Bug]: Notion reader not working for both pages and databases.",
        "user": {
            "login": "sapountzis",
            "id": 48756095,
            "node_id": "MDQ6VXNlcjQ4NzU2MDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/48756095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sapountzis",
            "html_url": "https://github.com/sapountzis",
            "followers_url": "https://api.github.com/users/sapountzis/followers",
            "following_url": "https://api.github.com/users/sapountzis/following{/other_user}",
            "gists_url": "https://api.github.com/users/sapountzis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sapountzis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sapountzis/subscriptions",
            "organizations_url": "https://api.github.com/users/sapountzis/orgs",
            "repos_url": "https://api.github.com/users/sapountzis/repos",
            "events_url": "https://api.github.com/users/sapountzis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sapountzis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-20T16:20:02Z",
        "updated_at": "2023-06-20T16:33:16Z",
        "closed_at": "2023-06-20T16:33:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nNotion reader not working for both pages and databases.\r\n\r\nI receive a KeyError: 'results'\n\n### Version\n\nllama-index==0.6.29\n\n### Steps to Reproduce\n\n```\r\nfrom llama_index import ListIndex, NotionPageReader\r\nfrom IPython.display import Markdown, display\r\nimport os\r\n\r\nintegration_token = ''\r\ndatabase_id = ''\r\n\r\ndocuments = NotionPageReader(integration_token=integration_token).load_data(database_id=database_id)\r\n\r\nprint(documents)\r\n```\n\n### Relevant Logs/Tracbacks\n\n```shell\nKeyError                                  Traceback (most recent call last)\r\nCell In[12], line 1\r\n----> 1 documents = NotionPageReader(integration_token=integration_token).load_data(database_id=database_id)\r\n      3 print(documents)\r\n\r\nFile D:\\mambaforge\\envs\\knowledge\\Lib\\site-packages\\llama_index\\readers\\notion.py:155, in NotionPageReader.load_data(self, page_ids, database_id)\r\n    152 docs = []\r\n    153 if database_id is not None:\r\n    154     # get all the pages in the database\r\n--> 155     page_ids = self.query_database(database_id)\r\n    156     for page_id in page_ids:\r\n    157         page_text = self.read_page(page_id)\r\n\r\nFile D:\\mambaforge\\envs\\knowledge\\Lib\\site-packages\\llama_index\\readers\\notion.py:108, in NotionPageReader.query_database(self, database_id, query_dict)\r\n    106 data = res.json()\r\n    107 page_ids = []\r\n--> 108 for result in data[\"results\"]:\r\n    109     page_id = result[\"id\"]\r\n    110     page_ids.append(page_id)\r\n\r\nKeyError: 'results'\r\n```\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6526/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6526/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6525",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6525/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6525/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6525/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6525",
        "id": 1765697934,
        "node_id": "PR_kwDOIWuq585TdDdG",
        "number": 6525,
        "title": "fix title of retrieval-augmented agent notebook guide",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-20T15:54:53Z",
        "updated_at": "2023-06-20T16:43:56Z",
        "closed_at": "2023-06-20T16:43:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6525",
            "html_url": "https://github.com/run-llama/llama_index/pull/6525",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6525.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6525.patch",
            "merged_at": "2023-06-20T16:43:55Z"
        },
        "body": "# Description\r\n\r\nTix title of retrieval-augmented agent notebook guide\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6525/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6525/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6524",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6524/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6524/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6524/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6524",
        "id": 1765534008,
        "node_id": "PR_kwDOIWuq585Tchj7",
        "number": 6524,
        "title": "Fix streaming response for as_chat_engine",
        "user": {
            "login": "HollowMan6",
            "id": 43995067,
            "node_id": "MDQ6VXNlcjQzOTk1MDY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/43995067?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HollowMan6",
            "html_url": "https://github.com/HollowMan6",
            "followers_url": "https://api.github.com/users/HollowMan6/followers",
            "following_url": "https://api.github.com/users/HollowMan6/following{/other_user}",
            "gists_url": "https://api.github.com/users/HollowMan6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HollowMan6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HollowMan6/subscriptions",
            "organizations_url": "https://api.github.com/users/HollowMan6/orgs",
            "repos_url": "https://api.github.com/users/HollowMan6/repos",
            "events_url": "https://api.github.com/users/HollowMan6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HollowMan6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-20T14:30:32Z",
        "updated_at": "2023-06-20T18:26:45Z",
        "closed_at": "2023-06-20T18:26:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6524",
            "html_url": "https://github.com/run-llama/llama_index/pull/6524",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6524.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6524.patch",
            "merged_at": "2023-06-20T18:26:44Z"
        },
        "body": "# Description\r\n\r\nSince waiting for stringifying the `response` and storing it in the `chat_history` before returning the response makes it impossible for streaming the response, this PR fixes this by allowing the `assistant_message` to be `RESPONSE_TYPE`, and stringifying the `assistant_message` only when we are using it.\r\n\r\n## Type of Change\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nTested with my own demo code and I can see the `as_chat_engine` streaming works with this PR.\r\n\r\n- [ ] Added new unit/integration tests\r\n- [X] Added new notebook (that tests end-to-end)\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [X] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [X] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6524/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6524/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6523",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6523/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6523/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6523/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6523",
        "id": 1765065881,
        "node_id": "I_kwDOIWuq585pNMSZ",
        "number": 6523,
        "title": "[Question]: I have customized the prompt in Chinese, but the answer is still in English. who knows\uff1f",
        "user": {
            "login": "dongxu",
            "id": 289812,
            "node_id": "MDQ6VXNlcjI4OTgxMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/289812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dongxu",
            "html_url": "https://github.com/dongxu",
            "followers_url": "https://api.github.com/users/dongxu/followers",
            "following_url": "https://api.github.com/users/dongxu/following{/other_user}",
            "gists_url": "https://api.github.com/users/dongxu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dongxu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dongxu/subscriptions",
            "organizations_url": "https://api.github.com/users/dongxu/orgs",
            "repos_url": "https://api.github.com/users/dongxu/repos",
            "events_url": "https://api.github.com/users/dongxu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dongxu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-20T10:00:12Z",
        "updated_at": "2023-09-27T16:01:33Z",
        "closed_at": "2023-09-27T16:01:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI have customized the prompt in Chinese, but the answer is still in English. who knows\uff1f",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6523/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6523/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6522",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6522/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6522/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6522/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6522",
        "id": 1764931793,
        "node_id": "PR_kwDOIWuq585TafON",
        "number": 6522,
        "title": "[version] bump version to 0.6.29",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-20T08:41:00Z",
        "updated_at": "2023-06-20T08:50:45Z",
        "closed_at": "2023-06-20T08:50:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6522",
            "html_url": "https://github.com/run-llama/llama_index/pull/6522",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6522.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6522.patch",
            "merged_at": "2023-06-20T08:50:44Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6522/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6522/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6521",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6521/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6521/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6521/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6521",
        "id": 1764844292,
        "node_id": "I_kwDOIWuq585pMWME",
        "number": 6521,
        "title": "[Question]: How to use the DEFAULT_SCHEMA_EXTRACT_PROMPT ?",
        "user": {
            "login": "derekgray23",
            "id": 2636613,
            "node_id": "MDQ6VXNlcjI2MzY2MTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2636613?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derekgray23",
            "html_url": "https://github.com/derekgray23",
            "followers_url": "https://api.github.com/users/derekgray23/followers",
            "following_url": "https://api.github.com/users/derekgray23/following{/other_user}",
            "gists_url": "https://api.github.com/users/derekgray23/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derekgray23/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derekgray23/subscriptions",
            "organizations_url": "https://api.github.com/users/derekgray23/orgs",
            "repos_url": "https://api.github.com/users/derekgray23/repos",
            "events_url": "https://api.github.com/users/derekgray23/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derekgray23/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-20T07:44:43Z",
        "updated_at": "2023-06-21T06:50:30Z",
        "closed_at": "2023-06-21T06:50:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [ ] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI have read the [custom prompt doc](https://gpt-index.readthedocs.io/en/latest/how_to/customization/custom_prompts.html): ,  and searched all examples ,  but failed to figure out how to use the DEFAULT_SCHEMA_EXTRACT_PROMPT ,  how to pass the prompt template parameters ({text} and {schema}) value to llama-index?  is it possible for a large text?  \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6521/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6521/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6520",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6520/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6520/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6520/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6520",
        "id": 1764838496,
        "node_id": "PR_kwDOIWuq585TaLR1",
        "number": 6520,
        "title": "[wip] query planning",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-20T07:40:23Z",
        "updated_at": "2023-06-20T08:38:35Z",
        "closed_at": "2023-06-20T08:38:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6520",
            "html_url": "https://github.com/run-llama/llama_index/pull/6520",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6520.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6520.patch",
            "merged_at": "2023-06-20T08:38:34Z"
        },
        "body": "# Description\r\n\r\nInspired by https://github.com/jxnl/openai_function_call/pull/3\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6520/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6520/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6519",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6519/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6519/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6519/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6519",
        "id": 1764534862,
        "node_id": "I_kwDOIWuq585pLKpO",
        "number": 6519,
        "title": "[Documentation]: OpenAI Agent + Query Engine Experimental Cookbook - \"index\" variable not declared",
        "user": {
            "login": "tuitejc",
            "id": 1263732,
            "node_id": "MDQ6VXNlcjEyNjM3MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1263732?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tuitejc",
            "html_url": "https://github.com/tuitejc",
            "followers_url": "https://api.github.com/users/tuitejc/followers",
            "following_url": "https://api.github.com/users/tuitejc/following{/other_user}",
            "gists_url": "https://api.github.com/users/tuitejc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tuitejc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tuitejc/subscriptions",
            "organizations_url": "https://api.github.com/users/tuitejc/orgs",
            "repos_url": "https://api.github.com/users/tuitejc/repos",
            "events_url": "https://api.github.com/users/tuitejc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tuitejc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-20T03:00:59Z",
        "updated_at": "2023-06-20T15:16:31Z",
        "closed_at": "2023-06-20T15:16:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nIn the OpenAI Agent + Query Engine Experimental Cookbook documentation, when defining the Function Tool, the variable for index is used but never defined in the example:\r\nretriever = VectorIndexRetriever(\r\n        index,\r\n        filters=MetadataFilters(filters=exact_match_filters),\r\n        top_k=top_k\r\n    )\r\n\r\nIs this supposed to be the index we created in the previous step?  I tried to use that but it did not work.  Not sure how to define index.\n\n### Documenation Link\n\nhttps://github.com/jerryjliu/llama_index/blob/main/docs/examples/agent/openai_agent_query_cookbook.ipynb",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6519/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6519/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6518",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6518/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6518/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6518/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6518",
        "id": 1764474707,
        "node_id": "PR_kwDOIWuq585TY8db",
        "number": 6518,
        "title": "Logan/router engine multi v2",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-20T01:26:40Z",
        "updated_at": "2023-08-28T17:10:54Z",
        "closed_at": "2023-06-20T17:06:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6518",
            "html_url": "https://github.com/run-llama/llama_index/pull/6518",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6518.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6518.patch",
            "merged_at": "2023-06-20T17:06:09Z"
        },
        "body": "# Description\r\n\r\nThis PR adds to main features\r\n1. Multi-Select support to the router query engine\r\n2. OpenAIPydanticProgram support for the selectors (rather than structured json parsing)\r\n\r\nThe multi-select works by gathering response from all sub-indexes, and then aggregating a final answer with a list index if there are more than 1 responses.\r\n\r\nThe OpennAIPydantic selectors are pretty basic, and mostly just needed specialized prompts to encourage the model to use the function call api (There will be a feature soon to force it to call the function, but langchain hasn't implemented it yet I think?)\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# TODO:\r\n\r\n- [x] create a good example notebook/usecase for the multi-router\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6518/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6518/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6517",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6517/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6517/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6517/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6517",
        "id": 1764474526,
        "node_id": "I_kwDOIWuq585pK76e",
        "number": 6517,
        "title": "[Feature Request]: Website scrapers comprehensive ingestion",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-20T01:26:22Z",
        "updated_at": "2023-09-26T16:01:23Z",
        "closed_at": "2023-09-26T16:01:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nWebsite contains many mixed media including images, but also PDFs, slides, youtube links with transcripts available. One should handle ingestion of all of the linked media under a web domain for comprehensiveness.\r\n\r\n### Reason\r\n\r\n_No response_\r\n\r\n### Value of Feature\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6517/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6517/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6516",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6516/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6516/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6516/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6516",
        "id": 1764426860,
        "node_id": "I_kwDOIWuq585pKwRs",
        "number": 6516,
        "title": "[Feature Request]: text extraction from diagrams/graphs",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-20T01:05:43Z",
        "updated_at": "2023-09-28T16:01:27Z",
        "closed_at": "2023-09-28T16:01:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nExamples: \r\n1. https://huggingface.co/google/deplot (only tabular data)\r\n2. https://huggingface.co/google/pix2struct-infographics-vqa-base\r\n   \r\nLarger workflow: Text extraction pipeline for non-textual documents e.g. \r\n1. image using ViT (blip/blip2): https://llama-hub-ui.vercel.app/l/file-image_blip2\r\n\r\nDoes this feature belong to [llama hub](https://llama-hub-ui.vercel.app/) instead of llama_index? \r\n\r\nNext levels - how can we integrate this into a PDF document extraction / website extraction workflow? (text + img)\r\n\r\n### Caveat\r\n1. Before further work, let's test out if Blip2 can handle technical diagrams or graphs (my guess is no)\r\n2. This work will not cover direct VQA. In the direct VQA pipeline, there may need to exist a refactor or separate layer to handle various types of mixed-media retrieval. From a feasibility standpoint, existing text captions and autocaptioning of diagrams/graphs can serve as the text-based retrieval embedding for mixed media. The retrieved media can then be fed into the downstream VQA/multi-modal LLM pipeline. It is an open question whether descriptive or tabular data extraction from diagrams/graphs/natural images is sufficient or whether direct VQA is necessary for good performance on task. I believe this depends on the use-case.\r\n\r\n### Reason\r\n\r\n_No response_\r\n\r\n### Value of Feature\r\n\r\nIncrease the amount of information extracted from mixed-media documents.\r\n\r\nI think they (and Blip2 models) should be part of the PDF/website workflows with automatic dispatch, preprocessing and model selection/ensembling layer, but some coordination and maintenance on the best performing models would be valuable. \r\n\r\nSome filtering layer to filter out low-quality outputs from the vision models could be helpful as well.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6516/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6516/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6515",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6515/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6515/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6515/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6515",
        "id": 1764282512,
        "node_id": "I_kwDOIWuq585pKNCQ",
        "number": 6515,
        "title": "[Question]: Unable to index documents using HuggingFaceEmbeddings",
        "user": {
            "login": "pchamart",
            "id": 118387029,
            "node_id": "U_kgDOBw5xVQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/118387029?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pchamart",
            "html_url": "https://github.com/pchamart",
            "followers_url": "https://api.github.com/users/pchamart/followers",
            "following_url": "https://api.github.com/users/pchamart/following{/other_user}",
            "gists_url": "https://api.github.com/users/pchamart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pchamart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pchamart/subscriptions",
            "organizations_url": "https://api.github.com/users/pchamart/orgs",
            "repos_url": "https://api.github.com/users/pchamart/repos",
            "events_url": "https://api.github.com/users/pchamart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pchamart/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-19T22:02:49Z",
        "updated_at": "2023-06-20T19:34:46Z",
        "closed_at": "2023-06-20T19:34:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello,\r\n\r\nI'm trying to use Llama Index to load docs and index to a local vectorstore (Chroma/FAISS) however, I keep getting enter \"OPEN API KEY\". \r\n\r\nHere's my sample code using Chroma. I already specified the embedding fun whilst creating the collection. However, it still asks me for OPENAPI Key. \r\n\r\n```\r\nfrom langchain.llms.sagemaker_endpoint import LLMContentHandler, SagemakerEndpoint\r\n\r\n# Flan-T5-XL model parameters\r\nmodel_parameters = {\r\n    \"max_seq_len\": num_output,\r\n    \"top_k\": 0,\r\n    \"top_p\": 0.7,\r\n    \"temperature\": 0.3,\r\n}\r\n\r\nclass ContentHandler(LLMContentHandler):\r\n    content_type = \"application/json\"\r\n    accepts = \"application/json\"\r\n\r\n    def transform_input(self, prompt: str, model_kwargs: Dict) -> bytes:\r\n        input_str = json.dumps({\"inputs\": [prompt], \"parameters\": model_kwargs})\r\n        return input_str.encode(\"utf-8\")\r\n\r\n    def transform_output(self, output: bytes) -> str:\r\n        response_json = json.loads(output.read().decode(\"utf-8\"))\r\n        response = response_json[\"outputs\"][0]\r\n        return response\r\n\r\n\r\ncontent_handler = ContentHandler()\r\n\r\nsm_llm = SagemakerEndpoint(\r\n    endpoint_name=item.llm_endpoint_name,\r\n    region_name=item.aws_region,\r\n    model_kwargs=model_parameters,\r\n    credentials_profile_name=item.credentials_profile_name,\r\n    content_handler=content_handler,\r\n)\r\n\r\n# define LLM\r\nllm_predictor = LLMPredictor(llm=sm_llm)\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n    llm_predictor=llm_predictor, context_window=context_window, num_output=num_output\r\n)\r\n\r\n\r\n# Load PDFS\r\nDATADIR = Path(\"data/pdfs\")\r\nPDF_FILES = DATADIR.glob(\"**/*.pdf\")\r\n\r\n# DEFINE PDF Reader\r\nPDFReader = download_loader(\"PDFReader\")\r\nloader = PDFReader()\r\n\r\nif DATADIR.exists():\r\n    for idx, _pdf in enumerate(PDF_FILES):\r\n        documents = loader.load_data(file=_pdf)\r\nelse:\r\n    print(f\"File {DATADIR} not found!\")\r\n\r\n\r\nCOLLECTION_NAME = \"pdfs\"\r\n\r\n# First we create a chroma collection. Create client\r\nclient = chromadb.Client(\r\n    Settings(\r\n        chroma_db_impl=\"duckdb+parquet\",\r\n        persist_directory=\"chroma\",  # Optional, defaults to .chromadb/ in the current directory\r\n    )\r\n)\r\n\r\ndefault_ef = embedding_functions.DefaultEmbeddingFunction()\r\n\r\nprint(f\"Creating collection: {COLLECTION_NAME}\")\r\npdf_collection = client.create_collection(\r\n    name=COLLECTION_NAME, embedding_function=default_ef\r\n)\r\n\r\nchroma_index = ChromaVectorStore(chroma_collection=pdf_collection)\r\nstorage_context = StorageContext.from_defaults(vector_store=chroma_index)\r\nindex = VectorStoreIndex.from_documents(\r\n    documents=docs, storage_context=storage_context, service_context=service_context\r\n)\r\n```\r\n\r\nI'll not be using Open API at all for both (LLM_PREDICTOR) and for the Embedding model. I have a custom endpoint running an open source text-2-text gen model and have most popular sentence-transformer embedding models downloaded from HF hub.\r\nHowever, when I try to add documents to a VectorStore index I keep getting this error:\r\n\r\n```\r\nFile ~/miniforge3/envs/nlp/lib/python3.9/site-packages/openai/api_resources/abstract/engine_api_resource.py:106, in EngineAPIResource.__prepare_create_request(cls, api_key, api_base, api_type, api_version, organization, **params)\r\n    104     params[\"timeout\"] = MAX_TIMEOUT\r\n--> 106 requestor = api_requestor.APIRequestor(\r\n    107     api_key,\r\n    108     api_base=api_base,\r\n    109     api_type=api_type,\r\n    110     api_version=api_version,\r\n    111     organization=organization,\r\n    112 )\r\n    113 url = cls.class_url(engine, api_type, api_version)\r\n\r\nFile ~/miniforge3/envs/nlp/lib/python3.9/site-packages/openai/api_requestor.py:134, in APIRequestor.__init__(self, key, api_base, api_type, api_version, organization)\r\n    133 self.api_base = api_base or openai.api_base\r\n--> 134 self.api_key = key or util.default_api_key()\r\n    135 self.api_type = (\r\n    136     ApiType.from_str(api_type)\r\n    137     if api_type\r\n    138     else ApiType.from_str(openai.api_type)\r\n    139 )\r\n\r\nFile ~/miniforge3/envs/nlp/lib/python3.9/site-packages/openai/util.py:186, in default_api_key()\r\n    185 else:\r\n--> 186     raise openai.error.AuthenticationError(\r\n    187         \"No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details.\"\r\n    188     )\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6515/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6515/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6514",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6514/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6514/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6514/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6514",
        "id": 1763901382,
        "node_id": "I_kwDOIWuq585pIv_G",
        "number": 6514,
        "title": "[Bug]: StreamingResponse already iterated over before returning in CondenseQuestionChatEngine",
        "user": {
            "login": "stadeltobi",
            "id": 550013,
            "node_id": "MDQ6VXNlcjU1MDAxMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/550013?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stadeltobi",
            "html_url": "https://github.com/stadeltobi",
            "followers_url": "https://api.github.com/users/stadeltobi/followers",
            "following_url": "https://api.github.com/users/stadeltobi/following{/other_user}",
            "gists_url": "https://api.github.com/users/stadeltobi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stadeltobi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stadeltobi/subscriptions",
            "organizations_url": "https://api.github.com/users/stadeltobi/orgs",
            "repos_url": "https://api.github.com/users/stadeltobi/repos",
            "events_url": "https://api.github.com/users/stadeltobi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stadeltobi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-19T17:05:30Z",
        "updated_at": "2023-06-20T18:31:13Z",
        "closed_at": "2023-06-20T18:27:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhile I can get my LLM (ChatOpenAI, in my case) to return streaming responses with\r\n\r\n```\r\nengine = index.as_chat_engine(streaming=True, chat_mode=ChatMode.CONDENSE_QUESTION)\r\n```\r\nit turns out that on a call to `engine.chat('...')`, the StreamingResponse object is already iterated over, so there's no chance to provide streaming user experience in the frontend.\r\n\r\nAfter some debugging, I found that this probably happens in https://github.com/jerryjliu/llama_index/blob/0f4b057bcdd1a3e67812a55a75ce4d156c236e22/llama_index/chat_engine/condense_question.py#L122\r\n\r\n... where the str(response) part is the problematic one, since it will already iterate over the  response_gen object, probably. \r\n\n\n### Version\n\n0.6.28\n\n### Steps to Reproduce\n\nsee above. any call to `engine.chat()` will return a StreamingResponse object where in this example\r\n\r\n```\r\nfor text in response.response_gen:\r\n  do_something()\r\n```\r\n\r\nthe do_something() method will never be called\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6514/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6514/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6513",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6513/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6513/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6513/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6513",
        "id": 1763839886,
        "node_id": "I_kwDOIWuq585pIg-O",
        "number": 6513,
        "title": "[Bug]: The `_get_llm_metadata` function reports an error: \"Did not find openai_api_key, please add an environment variable `OPENAI_API_KEY` which contains it, or pass `openai_api_key` as a named parameter.\" (type=value_error)",
        "user": {
            "login": "zhugexinxin",
            "id": 42615243,
            "node_id": "MDQ6VXNlcjQyNjE1MjQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/42615243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhugexinxin",
            "html_url": "https://github.com/zhugexinxin",
            "followers_url": "https://api.github.com/users/zhugexinxin/followers",
            "following_url": "https://api.github.com/users/zhugexinxin/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhugexinxin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhugexinxin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhugexinxin/subscriptions",
            "organizations_url": "https://api.github.com/users/zhugexinxin/orgs",
            "repos_url": "https://api.github.com/users/zhugexinxin/repos",
            "events_url": "https://api.github.com/users/zhugexinxin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhugexinxin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-19T16:14:16Z",
        "updated_at": "2023-06-20T14:52:35Z",
        "closed_at": "2023-06-20T14:52:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nThe `_get_llm_metadata` function reports an error: \"Did not find openai_api_key, please add an environment variable `OPENAI_API_KEY` which contains it, or pass `openai_api_key` as a named parameter.\" (type=value_error)\r\n\r\nI've passed the `openai_api_key` parameter, but it doesn't seem to be getting through to the `_get_llm_metadata` function within the `context_window=OpenAI().modelname_to_contextsize(llm.model_name)` line.\r\n\r\nI believe this is not reasonable. It should support the parameters corresponding to the `ChatOpenAI` generation.\r\n\r\n### Version\r\n\r\nllama-index==0.6.27\r\n\r\n### Steps to Reproduce\r\n\r\nllm=ChatOpenAI(\r\n    openai_api_base='https://xxxxx,\r\n    openai_api_key='sk-xxxxx',\r\n    temperature=0,\r\n    model_name=\"gpt-3.5-turbo\"\r\n)\r\nllm_predictor = LLMPredictor(llm=llm)\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor)\r\n\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/indices/service_context.py\", line 141, in from_defaults\r\n    llm_metadata=llm_predictor.get_llm_metadata(),\r\n                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/llm_predictor/base.py\", line 177, in get_llm_metadata\r\n    return _get_llm_metadata(self._llm)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/llama_index/llm_predictor/base.py\", line 53, in _get_llm_metadata\r\n    context_window=OpenAI().modelname_to_contextsize(llm.model_name),\r\n                   ^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/load/serializable.py\", line 61, in __init__\r\n    super().__init__(**kwargs)\r\n  File \"/usr/local/lib/python3.11/site-packages/pydantic/main.py\", line 341, in __init__\r\n    raise validation_error\r\npydantic.error_wrappers.ValidationError: 1 validation error for OpenAI\r\n__root__\r\n  Did not find openai_api_key, please add an environment variable `OPENAI_API_KEY` which contains it, or pass  `openai_api_key` as a named parameter. (type=value_error)\r\n>>>\r\n```\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6513/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6513/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6512",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6512/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6512/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6512/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6512",
        "id": 1763818176,
        "node_id": "PR_kwDOIWuq585TWyps",
        "number": 6512,
        "title": "Fix weaviate similarity bug",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-19T16:00:47Z",
        "updated_at": "2023-06-21T16:23:10Z",
        "closed_at": "2023-06-21T00:09:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6512",
            "html_url": "https://github.com/run-llama/llama_index/pull/6512",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6512.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6512.patch",
            "merged_at": "2023-06-21T00:09:16Z"
        },
        "body": "# Description\r\n\r\nWeaviate currently did not support a) returning embedding vectors for low-level workflows and b) returning the similarity scores of each returned node\r\n\r\nNOTE:\r\nWeaviate calculates it's own version of a \"distance\" metrics that seems pretty different from what we use. For example, the similarity scores on the classic \"What did the author do growing up?\" question yieled scores around ~0.2. Normally, this is around 0.8 with our metrics, which is a curious difference.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Tested locally with weaviate\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6512/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6512/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6511",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6511/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6511/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6511/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6511",
        "id": 1763647323,
        "node_id": "PR_kwDOIWuq585TWN4R",
        "number": 6511,
        "title": "feat: add UI tool",
        "user": {
            "login": "eturchenkov",
            "id": 49445761,
            "node_id": "MDQ6VXNlcjQ5NDQ1NzYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/49445761?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eturchenkov",
            "html_url": "https://github.com/eturchenkov",
            "followers_url": "https://api.github.com/users/eturchenkov/followers",
            "following_url": "https://api.github.com/users/eturchenkov/following{/other_user}",
            "gists_url": "https://api.github.com/users/eturchenkov/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eturchenkov/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eturchenkov/subscriptions",
            "organizations_url": "https://api.github.com/users/eturchenkov/orgs",
            "repos_url": "https://api.github.com/users/eturchenkov/repos",
            "events_url": "https://api.github.com/users/eturchenkov/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eturchenkov/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-19T14:15:30Z",
        "updated_at": "2023-07-19T08:06:48Z",
        "closed_at": "2023-07-19T08:06:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6511",
            "html_url": "https://github.com/run-llama/llama_index/pull/6511",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6511.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6511.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nI added UI tool, so users can store and explore their sessions. Check video below. [hayloft](https://github.com/eturchenkov/hayloft) package has been added as a dependency to requirements.txt.\r\n\r\nhttps://github.com/eturchenkov/hayloft/assets/49445761/933f794f-0012-4d26-af57-89a00e7b2dbf\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6511/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6511/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6510",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6510/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6510/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6510/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6510",
        "id": 1763488612,
        "node_id": "I_kwDOIWuq585pHLNk",
        "number": 6510,
        "title": "[Bug]: Query engine does not use the ServiceContext from the index when `service_context` is omitted from `index.as_query_engine`",
        "user": {
            "login": "tomtitherington",
            "id": 30439911,
            "node_id": "MDQ6VXNlcjMwNDM5OTEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/30439911?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomtitherington",
            "html_url": "https://github.com/tomtitherington",
            "followers_url": "https://api.github.com/users/tomtitherington/followers",
            "following_url": "https://api.github.com/users/tomtitherington/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomtitherington/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomtitherington/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomtitherington/subscriptions",
            "organizations_url": "https://api.github.com/users/tomtitherington/orgs",
            "repos_url": "https://api.github.com/users/tomtitherington/repos",
            "events_url": "https://api.github.com/users/tomtitherington/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomtitherington/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-06-19T12:56:43Z",
        "updated_at": "2023-07-22T02:03:18Z",
        "closed_at": "2023-07-22T02:03:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhen the argument `service_context` is omitted from the index constructor `as_query_engine` the query engine uses the default LLMPredictor `text-davinci-003` and not the LLMPredictor defined in the ServiceContext object.\r\n\r\ni.e. \r\n\r\n```\r\n\r\nindex = load_index_from_storage(\r\n    service_context=service_context,\r\n    storage_context=storage_context,\r\n)\r\n\r\n# Works\r\nquery_engine = index.as_query_engine(\r\n    service_context=service_context, \r\n    similarity_top_k=3, \r\n    streaming=True\r\n)  \r\n\r\n# DOES NOT work\r\nquery_engine = index.as_query_engine()\r\n```\r\n\r\nPlease see the Steps to Reproduce for the entire example.\n\n### Version\n\n0.0.205\n\n### Steps to Reproduce\n\n```\r\nservice_context = ServiceContext.from_defaults(\r\n  llm_predictor=LLMPredictor(\r\n        llm=ChatOpenAI(temperature=0, model_name='gpt-4', streaming=True)\r\n    ),\r\n    chunk_size=512,\r\n  )\r\n)\r\n\r\nstorage_context = StorageContext.from_defaults(persist_dir=\"./storage\")\r\n\r\nindex = load_index_from_storage(\r\n    service_context=service_context,\r\n    storage_context=storage_context,\r\n)\r\n\r\n# This works\r\nquery_engine = index.as_query_engine(\r\n    service_context=service_context, \r\n    similarity_top_k=3, \r\n    streaming=True\r\n)  \r\n\r\n# This DOES NOT work\r\nquery_engine = index.as_query_engine()\r\n\r\nresponse = query_engine.query(query)\r\nprint(response)\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6510/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6510/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6509",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6509/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6509/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6509/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6509",
        "id": 1763438592,
        "node_id": "I_kwDOIWuq585pG_AA",
        "number": 6509,
        "title": "[Question]: KnowledgeGraphIndex NebulaGraph tutorial error",
        "user": {
            "login": "salahaz",
            "id": 41476094,
            "node_id": "MDQ6VXNlcjQxNDc2MDk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/41476094?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/salahaz",
            "html_url": "https://github.com/salahaz",
            "followers_url": "https://api.github.com/users/salahaz/followers",
            "following_url": "https://api.github.com/users/salahaz/following{/other_user}",
            "gists_url": "https://api.github.com/users/salahaz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/salahaz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/salahaz/subscriptions",
            "organizations_url": "https://api.github.com/users/salahaz/orgs",
            "repos_url": "https://api.github.com/users/salahaz/repos",
            "events_url": "https://api.github.com/users/salahaz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/salahaz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 17,
        "created_at": "2023-06-19T12:28:06Z",
        "updated_at": "2023-08-24T11:50:29Z",
        "closed_at": "2023-08-24T11:50:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello I'm expirementing with the NebulaGraph example thats been released https://github.com/jerryjliu/llama_index/blob/main/docs/examples/index_structs/knowledge_graph/NebulaGraphKGIndexDemo.ipynb. However, during the instantiation of GPTNebulaGraph KG Indexes the following error occurs. Any idea how to resolve this ?\r\n\r\n![error](https://github.com/jerryjliu/llama_index/assets/41476094/8c5b5e6a-b609-4e34-8b9b-ad39c987335f)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6509/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6509/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6506",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6506/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6506/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6506/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6506",
        "id": 1763050053,
        "node_id": "I_kwDOIWuq585pFgJF",
        "number": 6506,
        "title": "[Question]: I am trying to create stream with agent: create_llama_chat_agent but with no luck, is it not supported yet?",
        "user": {
            "login": "dinhan92",
            "id": 86275789,
            "node_id": "MDQ6VXNlcjg2Mjc1Nzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/86275789?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dinhan92",
            "html_url": "https://github.com/dinhan92",
            "followers_url": "https://api.github.com/users/dinhan92/followers",
            "following_url": "https://api.github.com/users/dinhan92/following{/other_user}",
            "gists_url": "https://api.github.com/users/dinhan92/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dinhan92/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dinhan92/subscriptions",
            "organizations_url": "https://api.github.com/users/dinhan92/orgs",
            "repos_url": "https://api.github.com/users/dinhan92/repos",
            "events_url": "https://api.github.com/users/dinhan92/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dinhan92/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-19T08:46:30Z",
        "updated_at": "2023-07-11T02:05:51Z",
        "closed_at": "2023-07-11T02:05:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHere is my code, I want to streaming with agent, but not find a way, even when I print, it is not a stream but a string:\r\n\r\n              query_engine = index.as_query_engine(\r\n                      streaming=True,\r\n                  )\r\n              \r\n                   # define toolkit\r\n                  index_configs = []\r\n                  tool_config = IndexToolConfig(\r\n                      query_engine=query_engine, \r\n                      name=f\"Vector Index\",\r\n                      description=f\"useful for when you want to answer queries about the Report of Economy in England\",\r\n                      tool_kwargs={\"return_direct\": True}\r\n                  )\r\n                  index_configs.append(tool_config)\r\n              \r\n                  toolkit = LlamaToolkit(\r\n                      index_configs=index_configs,\r\n                  )\r\n              \r\n                  memory = ConversationBufferMemory(memory_key=\"chat_history\")\r\n                  llm=ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo-0301\", openai_api_key=\"open_ai_key\", streaming=True,\r\n                      callbacks=[FinalStreamingStdOutCallbackHandler()]\r\n                  )\r\n                  \r\n                  agent_chain = create_llama_chat_agent(\r\n                      toolkit,\r\n                      llm,\r\n                      memory=memory,\r\n                      verbose=False\r\n                  )\r\n              \r\n                  print(agent_chain.run(input=input_text))\r\n              \r\n                  return agent_chain.run(input=input_text)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6506/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6506/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6505",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6505/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6505/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6505/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6505",
        "id": 1763033019,
        "node_id": "PR_kwDOIWuq585TUG99",
        "number": 6505,
        "title": "[version] bump version to 0.6.28",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-19T08:35:23Z",
        "updated_at": "2023-06-19T16:02:19Z",
        "closed_at": "2023-06-19T16:02:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6505",
            "html_url": "https://github.com/run-llama/llama_index/pull/6505",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6505.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6505.patch",
            "merged_at": "2023-06-19T16:02:18Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6505/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6505/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6504",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6504/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6504/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6504/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6504",
        "id": 1763019482,
        "node_id": "PR_kwDOIWuq585TUEFt",
        "number": 6504,
        "title": "fixes that we forgot to include for openai pydantic program (#6503)",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-19T08:26:27Z",
        "updated_at": "2023-06-19T08:33:18Z",
        "closed_at": "2023-06-19T08:33:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6504",
            "html_url": "https://github.com/run-llama/llama_index/pull/6504",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6504.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6504.patch",
            "merged_at": "2023-06-19T08:33:17Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6504/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6504/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6503",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6503/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6503/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6503/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6503",
        "id": 1762873305,
        "node_id": "PR_kwDOIWuq585TTkl4",
        "number": 6503,
        "title": "allow recursive data extraction (pydantic program) ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-19T06:56:03Z",
        "updated_at": "2023-06-19T08:25:24Z",
        "closed_at": "2023-06-19T08:25:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6503",
            "html_url": "https://github.com/run-llama/llama_index/pull/6503",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6503.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6503.patch",
            "merged_at": "2023-06-19T08:25:23Z"
        },
        "body": "# Description\r\n\r\nallow for recursive data extraction \r\n\r\ninspired by @jxnl's repo here: https://github.com/jxnl/openai_function_call/blob/main/parse_recursive_paths.py\r\n\r\nmade fixes to our OpenAIPydanticProgram to make this work\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6503/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6503/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6502",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6502/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6502/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6502/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6502",
        "id": 1762866909,
        "node_id": "I_kwDOIWuq585pEzbd",
        "number": 6502,
        "title": "[Bug]: AuthenticationError, RetryEror",
        "user": {
            "login": "Ashish5869",
            "id": 131770947,
            "node_id": "U_kgDOB9qqQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/131770947?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ashish5869",
            "html_url": "https://github.com/Ashish5869",
            "followers_url": "https://api.github.com/users/Ashish5869/followers",
            "following_url": "https://api.github.com/users/Ashish5869/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ashish5869/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ashish5869/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ashish5869/subscriptions",
            "organizations_url": "https://api.github.com/users/Ashish5869/orgs",
            "repos_url": "https://api.github.com/users/Ashish5869/repos",
            "events_url": "https://api.github.com/users/Ashish5869/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ashish5869/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4751318867,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUw",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/duplicate",
                "name": "duplicate",
                "color": "cfd3d7",
                "default": true,
                "description": "This issue or pull request already exists"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-19T06:50:44Z",
        "updated_at": "2023-06-20T18:16:51Z",
        "closed_at": "2023-06-20T18:16:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\n```\r\nindex = GPTVectorStoreIndex.from_documents(\r\n    document,\r\n    storage_context=storage_context,\r\n    service_context=service_context\r\n)\r\n\r\n\r\nor \r\n\r\n\r\nindex = GPTVectorStoreIndex.from_documents(\r\n    [],\r\n    storage_context=storage_context,\r\n    service_context=service_context\r\n)\r\n\r\nquery_engine = index.as_query_engine()\r\nresposnse = query_engine.query()\r\n\r\nError:\r\nAuthenticationError                       Traceback (most recent call last)\r\n\r\nAuthenticationError: No API key provided. You can set your API key in code using 'openai.api_key = <API-KEY>', or you can set the environment variable OPENAI_API_KEY=<API-KEY>). If your API key is stored in a file, you can point the openai module at it with 'openai.api_key_path = <PATH>'. You can generate API keys in the OpenAI web interface. See https://platform.openai.com/account/api-keys for details, or email support@openai.com if you have any questions.\r\n\r\nRetryError: RetryError[<Future at 0x7f6bdeb32b30 state=finished raised AuthenticationError>\r\n```\n\n### Version\n\n0.6.25, 0.6.25post1, 0.6.26 and 0.6.27\n\n### Steps to Reproduce\n\nwhile indexing the document\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6502/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6502/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6501",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6501/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6501/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6501/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6501",
        "id": 1762664721,
        "node_id": "PR_kwDOIWuq585TS3X3",
        "number": 6501,
        "title": "update mongo interface",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-19T03:35:40Z",
        "updated_at": "2023-06-19T03:42:18Z",
        "closed_at": "2023-06-19T03:42:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6501",
            "html_url": "https://github.com/run-llama/llama_index/pull/6501",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6501.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6501.patch",
            "merged_at": "2023-06-19T03:42:17Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6501/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6501/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6500",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6500/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6500/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6500/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6500",
        "id": 1762538596,
        "node_id": "PR_kwDOIWuq585TScOR",
        "number": 6500,
        "title": "[vector_store]: Rename `SupabaseVector_` to `PgVector_` to avoid confusion",
        "user": {
            "login": "jon-chuang",
            "id": 9093549,
            "node_id": "MDQ6VXNlcjkwOTM1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9093549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jon-chuang",
            "html_url": "https://github.com/jon-chuang",
            "followers_url": "https://api.github.com/users/jon-chuang/followers",
            "following_url": "https://api.github.com/users/jon-chuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/jon-chuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jon-chuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jon-chuang/subscriptions",
            "organizations_url": "https://api.github.com/users/jon-chuang/orgs",
            "repos_url": "https://api.github.com/users/jon-chuang/repos",
            "events_url": "https://api.github.com/users/jon-chuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jon-chuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-19T00:47:36Z",
        "updated_at": "2023-07-06T15:31:26Z",
        "closed_at": "2023-07-06T15:31:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6500",
            "html_url": "https://github.com/run-llama/llama_index/pull/6500",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6500.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6500.patch",
            "merged_at": null
        },
        "body": "# Description\r\nExisting code works with pgvector extension on any postgres database. Make this explicit and improve info in docs.\r\n\r\nFixes #6058 #499 \r\n\r\n## Type of Change\r\n\r\n- [X] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [X] This change requires a documentation update (done)\r\n\r\n# How Has This Been Tested?\r\n- [X] Example in docs works locally\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] I have commented my code, particularly in hard-to-understand areas\r\n- [X] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6500/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6500/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6499",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6499/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6499/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6499/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6499",
        "id": 1762493061,
        "node_id": "PR_kwDOIWuq585TSS3q",
        "number": 6499,
        "title": "[Issue 6417] Fix prompt_templates docs page",
        "user": {
            "login": "pycui",
            "id": 6148473,
            "node_id": "MDQ6VXNlcjYxNDg0NzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6148473?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pycui",
            "html_url": "https://github.com/pycui",
            "followers_url": "https://api.github.com/users/pycui/followers",
            "following_url": "https://api.github.com/users/pycui/following{/other_user}",
            "gists_url": "https://api.github.com/users/pycui/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pycui/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pycui/subscriptions",
            "organizations_url": "https://api.github.com/users/pycui/orgs",
            "repos_url": "https://api.github.com/users/pycui/repos",
            "events_url": "https://api.github.com/users/pycui/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pycui/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-18T22:43:28Z",
        "updated_at": "2023-06-20T07:25:57Z",
        "closed_at": "2023-06-20T07:25:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6499",
            "html_url": "https://github.com/run-llama/llama_index/pull/6499",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6499.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6499.patch",
            "merged_at": "2023-06-20T07:25:57Z"
        },
        "body": "# Description\r\nDocuments fix for prompt_templates \r\n - Mark Subclass Prompt types as deprecated \r\n - Remove the erroneous autogen doc for the Subclass Prompts (Sphinx used the comment _after_ the object as the docstring, which caused most of the docstrings in wrong order). \r\n \r\n# Fixes # (issue)\r\nIssue 6417\r\n\r\n## Type of Change\r\nDocumentation\r\n\r\nPlease delete options that are not relevant.\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n- [x] build and run local Sphinx doc \r\n\r\n# Suggested Checklist:\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6499/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6499/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6498",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6498/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6498/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6498/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6498",
        "id": 1762316492,
        "node_id": "I_kwDOIWuq585pCtDM",
        "number": 6498,
        "title": "[Bug]: ",
        "user": {
            "login": "noke8868",
            "id": 15937904,
            "node_id": "MDQ6VXNlcjE1OTM3OTA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/15937904?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noke8868",
            "html_url": "https://github.com/noke8868",
            "followers_url": "https://api.github.com/users/noke8868/followers",
            "following_url": "https://api.github.com/users/noke8868/following{/other_user}",
            "gists_url": "https://api.github.com/users/noke8868/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noke8868/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noke8868/subscriptions",
            "organizations_url": "https://api.github.com/users/noke8868/orgs",
            "repos_url": "https://api.github.com/users/noke8868/repos",
            "events_url": "https://api.github.com/users/noke8868/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noke8868/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-18T14:14:15Z",
        "updated_at": "2023-07-13T22:52:37Z",
        "closed_at": "2023-07-13T22:52:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nHi \r\ni have around 8000 small json files under a folder(most of them are under 10k size)\r\ni scan them and load into documents which is very fast.\r\ni try to generate index from them . however it stuck here for over 17 hours.\r\nno error, you may see picture below\r\n**index = GPTListIndex.from_documents(documents, service_context=service_context)**\r\nis it a bug?\r\nthank you\r\n\r\n<img width=\"946\" alt=\"index_Capture\" src=\"https://github.com/jerryjliu/llama_index/assets/15937904/d2e0ef5b-05c2-4063-93ef-05678192a26b\">\r\n\n\n### Version\n\nlatest\n\n### Steps to Reproduce\n\nsource code are here:\r\n\r\nfile_list = []\r\nJsonDataReader = download_loader(\"JSONReader\")\r\nloader = JsonDataReader()\r\ndocuments = []\r\n#mylist=['13208035.txt']\r\nfor root, dirs, files in os.walk(folder_path):\r\n    for file in files:\r\n      #if file not in mylist:\r\n      #  continue\r\n      file_path = os.path.join(root, file)\r\n      file_list.append(file)\r\n      docs = loader.load_data(file_path)\r\n      documents.extend(docs)\r\nprint(len(file_list))\r\n\r\nprompt_helper = PromptHelper(\r\n            num_output=PROMPT_NUM_OUTPUTS,\r\n            chunk_overlap_ratio=0.1\r\n        )\r\n\r\n\r\nllm_predictor = LLMPredictor(\r\n    llm = ChatOpenAI(temperature = OPENAI_MODEL_temperature,\r\n                      model_name = OPENAI_MODEL_name,\r\n                      max_tokens = PROMPT_NUM_OUTPUTS)\r\n    )\r\n\r\n\r\n\r\n\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor, prompt_helper=prompt_helper)\r\n**index = GPTListIndex.from_documents(documents, service_context=service_context)**\r\nindex_file='bot_index.json'\r\nindex.save_to_disk(index_file)\r\nprint('done save_to_disk')\r\n\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6498/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6498/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6497",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6497/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6497/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6497/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6497",
        "id": 1762183715,
        "node_id": "PR_kwDOIWuq585TRT4s",
        "number": 6497,
        "title": "docs: example of kg+vector index",
        "user": {
            "login": "wey-gu",
            "id": 1651790,
            "node_id": "MDQ6VXNlcjE2NTE3OTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1651790?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wey-gu",
            "html_url": "https://github.com/wey-gu",
            "followers_url": "https://api.github.com/users/wey-gu/followers",
            "following_url": "https://api.github.com/users/wey-gu/following{/other_user}",
            "gists_url": "https://api.github.com/users/wey-gu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wey-gu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wey-gu/subscriptions",
            "organizations_url": "https://api.github.com/users/wey-gu/orgs",
            "repos_url": "https://api.github.com/users/wey-gu/repos",
            "events_url": "https://api.github.com/users/wey-gu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wey-gu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-18T08:39:31Z",
        "updated_at": "2023-07-25T11:42:58Z",
        "closed_at": "2023-06-20T08:37:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6497",
            "html_url": "https://github.com/run-llama/llama_index/pull/6497",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6497.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6497.patch",
            "merged_at": "2023-06-20T08:37:39Z"
        },
        "body": "# Description\r\n\r\nPart of #1318\r\n\r\n- example of a custom retriever combining vector and kg, it's an example to load docs from [a new page in Wikipedia](https://en.wikipedia.org/wiki/2023_in_science) created after the 2021 Sept, where 1. how to best leverage kg + vector store backed custom index was demonstrated, 2. the extra cost, performance was evaluated. See rendered notebook [here](https://gist.github.com/wey-gu/93e1541d89657633649fb3f7afca3a9d).\r\n\r\n- polishing kg store/index\r\n  - now get_networkx_graph() will sample 100 starting nodes only(can be specified), as larger graph makes no sense to be rendered all\r\n  - now the predicate of a triplet will be shown in the get_networkx_graph(), too\r\n  - in some LLM models(i.e. azure oai gpt-3.5-turbo), the prompts extraction of knowledge won't ensure pure triplets being returned, extra logic to avoid invalid data was introduced\r\n  - some optimization on the NebulaGraph graph store was introduced\r\n\r\nFixes #1318\r\n\r\nPS, I am writing a blog post(and will record a video, too) together with this change's work.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6497/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6497/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6496",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6496/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6496/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6496/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6496",
        "id": 1762137187,
        "node_id": "PR_kwDOIWuq585TRKu8",
        "number": 6496,
        "title": "Add OpenAI Agent + Query Engine Experimental Cookbook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-18T06:26:40Z",
        "updated_at": "2023-06-18T16:15:00Z",
        "closed_at": "2023-06-18T16:14:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6496",
            "html_url": "https://github.com/run-llama/llama_index/pull/6496",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6496.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6496.patch",
            "merged_at": "2023-06-18T16:14:59Z"
        },
        "body": "# Description\r\n\r\nadd notebook showcasing some openai agent capabilities (autoretrieval + joint sql + vector query engine) \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6496/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6496/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6494",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6494/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6494/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6494/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6494",
        "id": 1761675785,
        "node_id": "I_kwDOIWuq585pAQoJ",
        "number": 6494,
        "title": "[Bug]: _validate_is_flat_dict check extra_info fail when using QdrantVectorStore",
        "user": {
            "login": "Myoungs",
            "id": 15648026,
            "node_id": "MDQ6VXNlcjE1NjQ4MDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/15648026?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Myoungs",
            "html_url": "https://github.com/Myoungs",
            "followers_url": "https://api.github.com/users/Myoungs/followers",
            "following_url": "https://api.github.com/users/Myoungs/following{/other_user}",
            "gists_url": "https://api.github.com/users/Myoungs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Myoungs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Myoungs/subscriptions",
            "organizations_url": "https://api.github.com/users/Myoungs/orgs",
            "repos_url": "https://api.github.com/users/Myoungs/repos",
            "events_url": "https://api.github.com/users/Myoungs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Myoungs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-17T06:40:35Z",
        "updated_at": "2023-06-25T06:24:01Z",
        "closed_at": "2023-06-25T06:24:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhen I build index with QdrantVectorStore, I add filename in extra_info field. The value of extra_info is dict type, which causes the _validate_is_flat_dict to check the value of the key, which will fail, because extra_info is not a string, integer, float or None.\n\n### Version\n\n0.6.23\n\n### Steps to Reproduce\n\nbuild index codes:\r\n\r\n    file_meta = lambda filename: {\"filename\": filename}\r\n\r\n    loader = SimpleDirectoryReader(\r\n        dir_path, \r\n        recursive=True, \r\n        exclude_hidden=False, \r\n        file_metadata=file_meta,\r\n    )\r\n\r\n    documents =loader.load_data()\r\n\r\n    index = GPTVectorStoreIndex.from_documents(\r\n        documents,\r\n        service_context=service_context,\r\n        storage_context=storage_context,\r\n    )\r\n\r\nquery index codes:\r\n\r\n    query_engine = index.as_query_engine(\r\n        service_context=service_context,\r\n        similarity_top_k=2,\r\n    )\r\n    response = query_engine.query(query_str)\n\n### Relevant Logs/Tracbacks\n\n```shell\nTraceback (most recent call last):\r\n  File \"/Users/Myoungs/opt/anaconda3/lib/python3.9/site-packages/flask/app.py\", line 2447, in wsgi_app\r\n    response = self.full_dispatch_request()\r\n  File \"/Users/Myoungs/opt/anaconda3/lib/python3.9/site-packages/flask/app.py\", line 1952, in full_dispatch_request\r\n    rv = self.handle_user_exception(e)\r\n  File \"/Users/Myoungs/opt/anaconda3/lib/python3.9/site-packages/flask/app.py\", line 1821, in handle_user_exception\r\n    reraise(exc_type, exc_value, tb)\r\n  File \"/Users/Myoungs/opt/anaconda3/lib/python3.9/site-packages/flask/_compat.py\", line 39, in reraise\r\n    raise value\r\n  File \"/Users/Myoungs/opt/anaconda3/lib/python3.9/site-packages/flask/app.py\", line 1950, in full_dispatch_request\r\n    rv = self.dispatch_request()\r\n  File \"/Users/Myoungs/opt/anaconda3/lib/python3.9/site-packages/flask/app.py\", line 1936, in dispatch_request\r\n    return self.view_functions[rule.endpoint](**req.view_args)\r\n  File \"/Users/Myoungs/llama/web_server.py\", line 92, in query\r\n    return llama.query_index(query=query_str, llm=llm)\r\n  File \"/Users/Myoungs/llama/index.py\", line 192, in query_index\r\n    response = query_engine.query(query_str)\r\n  File \"/Users/Myoungs/opt/anaconda3/lib/python3.9/site-packages/llama_index/indices/query/base.py\", line 23, in query\r\n    response = self._query(str_or_query_bundle)\r\n  File \"/Users/Myoungs/opt/anaconda3/lib/python3.9/site-packages/llama_index/query_engine/retriever_query_engine.py\", line 142, in _query\r\n    nodes = self._retriever.retrieve(query_bundle)\r\n  File \"/Users/Myoungs/opt/anaconda3/lib/python3.9/site-packages/llama_index/indices/base_retriever.py\", line 21, in retrieve\r\n    return self._retrieve(str_or_query_bundle)\r\n  File \"/Users/Myoungs/opt/anaconda3/lib/python3.9/site-packages/llama_index/token_counter/token_counter.py\", line 78, in wrapped_llm_predict\r\n    f_return_val = f(_self, *args, **kwargs)\r\n  File \"/Users/Myoungs/opt/anaconda3/lib/python3.9/site-packages/llama_index/indices/vector_store/retrievers/retriever.py\", line 84, in _retrieve\r\n    query_result = self._vector_store.query(query, **self._kwargs)\r\n  File \"/Users/Myoungs/opt/anaconda3/lib/python3.9/site-packages/llama_index/vector_stores/qdrant.py\", line 198, in query\r\n    node = Node(\r\n  File \"<string>\", line 10, in __init__\r\n  File \"/Users/Myoungs/opt/anaconda3/lib/python3.9/site-packages/llama_index/data_structs/node.py\", line 63, in __post_init__\r\n    super().__post_init__()\r\n  File \"/Users/Myoungs/opt/anaconda3/lib/python3.9/site-packages/llama_index/schema.py\", line 61, in __post_init__\r\n    _validate_is_flat_dict(self.extra_info)\r\n  File \"/Users/Myoungs/opt/anaconda3/lib/python3.9/site-packages/llama_index/schema.py\", line 24, in _validate_is_flat_dict\r\n    raise ValueError(\"Value must be one of (str, int, float, None)\")\r\nValueError: Value must be one of (str, int, float, None)\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6494/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6494/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6493",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6493/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6493/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6493/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6493",
        "id": 1761603584,
        "node_id": "PR_kwDOIWuq585TPjLB",
        "number": 6493,
        "title": "Fix github pics",
        "user": {
            "login": "hongyishi",
            "id": 7098202,
            "node_id": "MDQ6VXNlcjcwOTgyMDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7098202?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hongyishi",
            "html_url": "https://github.com/hongyishi",
            "followers_url": "https://api.github.com/users/hongyishi/followers",
            "following_url": "https://api.github.com/users/hongyishi/following{/other_user}",
            "gists_url": "https://api.github.com/users/hongyishi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hongyishi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hongyishi/subscriptions",
            "organizations_url": "https://api.github.com/users/hongyishi/orgs",
            "repos_url": "https://api.github.com/users/hongyishi/repos",
            "events_url": "https://api.github.com/users/hongyishi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hongyishi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-17T03:05:33Z",
        "updated_at": "2023-06-17T03:06:17Z",
        "closed_at": "2023-06-17T03:06:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6493",
            "html_url": "https://github.com/run-llama/llama_index/pull/6493",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6493.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6493.patch",
            "merged_at": "2023-06-17T03:06:16Z"
        },
        "body": "# Description\r\n\r\nFix the zendesk pics to use github instead.\r\n\r\n## Type of Change\r\n\r\nNotebook fix\r\n\r\n# How Has This Been Tested?\r\n\r\nn/a only pics\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6493/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6493/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6492",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6492/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6492/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6492/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6492",
        "id": 1761530292,
        "node_id": "PR_kwDOIWuq585TPTHJ",
        "number": 6492,
        "title": "[version] bump version to 0.6.27",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-17T00:25:54Z",
        "updated_at": "2023-06-17T02:44:50Z",
        "closed_at": "2023-06-17T02:44:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6492",
            "html_url": "https://github.com/run-llama/llama_index/pull/6492",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6492.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6492.patch",
            "merged_at": "2023-06-17T02:44:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6492/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6492/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6491",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6491/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6491/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6491/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6491",
        "id": 1761464024,
        "node_id": "PR_kwDOIWuq585TPEkt",
        "number": 6491,
        "title": "openai retrieval function agent",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-16T23:06:25Z",
        "updated_at": "2023-06-17T00:24:01Z",
        "closed_at": "2023-06-17T00:24:00Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6491",
            "html_url": "https://github.com/run-llama/llama_index/pull/6491",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6491.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6491.patch",
            "merged_at": "2023-06-17T00:24:00Z"
        },
        "body": "# Description\r\nRefactored base openai agent\r\n\r\nAdded RetrievalOpenAIAgent \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6491/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6491/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6490",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6490/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6490/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6490/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6490",
        "id": 1761446596,
        "node_id": "PR_kwDOIWuq585TPAre",
        "number": 6490,
        "title": "Rip out monkey patch and update model to context window mapping",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-16T22:47:53Z",
        "updated_at": "2023-06-20T07:15:04Z",
        "closed_at": "2023-06-20T07:15:02Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6490",
            "html_url": "https://github.com/run-llama/llama_index/pull/6490",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6490.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6490.patch",
            "merged_at": "2023-06-20T07:15:02Z"
        },
        "body": "# Description\r\n\r\nRip out monkey patch and update model to context window mapping\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6490/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6490/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6489",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6489/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6489/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6489/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6489",
        "id": 1761356400,
        "node_id": "I_kwDOIWuq585o_Cpw",
        "number": 6489,
        "title": "[Bug]: load_index_from_storage Error! openai.error.InvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter",
        "user": {
            "login": "imgonewild",
            "id": 45378125,
            "node_id": "MDQ6VXNlcjQ1Mzc4MTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/45378125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/imgonewild",
            "html_url": "https://github.com/imgonewild",
            "followers_url": "https://api.github.com/users/imgonewild/followers",
            "following_url": "https://api.github.com/users/imgonewild/following{/other_user}",
            "gists_url": "https://api.github.com/users/imgonewild/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/imgonewild/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/imgonewild/subscriptions",
            "organizations_url": "https://api.github.com/users/imgonewild/orgs",
            "repos_url": "https://api.github.com/users/imgonewild/repos",
            "events_url": "https://api.github.com/users/imgonewild/events{/privacy}",
            "received_events_url": "https://api.github.com/users/imgonewild/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-16T21:12:31Z",
        "updated_at": "2023-07-05T00:47:23Z",
        "closed_at": "2023-07-05T00:47:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\n According to \r\nhttps://gpt-index.readthedocs.io/en/latest/guides/primer/usage_pattern.html#optional-save-the-index-for-future-use\r\n\r\nI follow the [Optional] Save the index for future use\r\nI created the index and store files to local folder successfully.\r\nBut when I want to load the data from local, it shows error\r\n\r\n### Version\r\n\r\n0.6.21.post1\r\n\r\n### Steps to Reproduce\r\n\r\nCode:\r\n```\r\nimport openai, os\r\nfrom llama_index import StorageContext, load_index_from_storage\r\nfrom dotenv import load_dotenv\r\nload_dotenv()\r\n\r\nopenai_api_version = \"2023-03-15-preview\"\r\n\r\nopenai.api_type = \"azure\"\r\nopenai.api_version = openai_api_version\r\nopenai.api_base = os.getenv('OPENAI_API_BASE')\r\nopenai.api_key = os.getenv(\"OPENAI_API_KEY\")\r\n\r\n# load index from local\r\nstorage_context = StorageContext.from_defaults(persist_dir='data_vector')\r\nindex = load_index_from_storage(storage_context) \r\nquery_engine = index.as_query_engine()\r\n\r\nprint(\"Question: What should be done in case of eye contact with the product?\")\r\nresponse = query_engine.query(\r\n    \"What should be done in case of eye contact with the product?\"\r\n)\r\nprint(response)\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\Alan\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\tenacity\\__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Github Repo\\llama_index\\llama_index\\embeddings\\openai.py\", line 106, in get_embedding\r\n    return openai.Embedding.create(input=[text], model=engine, **kwargs)[\"data\"][0][\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Alan\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\openai\\api_resources\\embedding.py\", line 33, in create\r\n    response = super().create(*args, **kwargs)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Alan\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py\", line 149, in create\r\n    ) = cls.__prepare_create_request(\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Alan\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py\", line 83, in __prepare_create_request\r\n    raise error.InvalidRequestError(\r\nopenai.error.InvalidRequestError: Must provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.embedding.Embedding'>\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"c:\\Github Repo\\LlamaIndex\\text-davinci-003_load_index.py\", line 19, in <module>\r\n    response = query_engine.query(\r\n               ^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Github Repo\\llama_index\\llama_index\\indices\\query\\base.py\", line 23, in query\r\n    response = self._query(str_or_query_bundle)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Github Repo\\llama_index\\llama_index\\query_engine\\retriever_query_engine.py\", line 142, in _query        \r\n    nodes = self._retriever.retrieve(query_bundle)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Github Repo\\llama_index\\llama_index\\indices\\base_retriever.py\", line 21, in retrieve\r\n    return self._retrieve(str_or_query_bundle)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Github Repo\\llama_index\\llama_index\\token_counter\\token_counter.py\", line 78, in wrapped_llm_predict    \r\n    f_return_val = f(_self, *args, **kwargs)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Github Repo\\llama_index\\llama_index\\indices\\vector_store\\retrievers\\retriever.py\", line 70, in _retrieve\r\n    self._service_context.embed_model.get_agg_embedding_from_queries(\r\n  File \"C:\\Github Repo\\llama_index\\llama_index\\embeddings\\base.py\", line 91, in get_agg_embedding_from_queries     \r\n    query_embeddings = [self.get_query_embedding(query) for query in queries]\r\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Github Repo\\llama_index\\llama_index\\embeddings\\base.py\", line 91, in <listcomp>\r\n    query_embeddings = [self.get_query_embedding(query) for query in queries]\r\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Github Repo\\llama_index\\llama_index\\embeddings\\base.py\", line 77, in get_query_embedding\r\n    query_embedding = self._get_query_embedding(query)\r\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Github Repo\\llama_index\\llama_index\\embeddings\\openai.py\", line 235, in _get_query_embedding\r\n    return get_embedding(\r\n           ^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Alan\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\tenacity\\__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Alan\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\tenacity\\__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\Alan\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\tenacity\\__init__.py\", line 326, in iter\r\n    raise retry_exc from fut.exception()\r\ntenacity.RetryError: RetryError[<Future at 0x14d1b54d9d0 state=finished raised InvalidRequestError>]\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6489/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6489/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6488",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6488/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6488/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6488/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6488",
        "id": 1761346906,
        "node_id": "PR_kwDOIWuq585TOrzl",
        "number": 6488,
        "title": "Add pydantic selectors, support multi selector router engines",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-16T21:05:46Z",
        "updated_at": "2023-06-20T01:26:24Z",
        "closed_at": "2023-06-20T01:26:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6488",
            "html_url": "https://github.com/run-llama/llama_index/pull/6488",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6488.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6488.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nThis PR adds to main features\r\n1. Multi-Select support to the router query engine\r\n2. OpenAIPydanticProgram support for the selectors (rather than structured json parsing)\r\n\r\nThe multi-select works by gathering response from all sub-indexes, and then aggregating a final answer with a list index if there are more than 1 responses.\r\n\r\nThe OpennAIPydantic selectors are pretty basic, and mostly just needed specialized prompts to encourage the model to use the function call api (There will be a feature soon to force it to call the function, but langchain hasn't implemented it yet I think?)\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# TODO:\r\n\r\n- [ ] create a good example notebook/usecase for the multi-router\r\n- [ ] add some basic unit tests for the pydantic selectors (use the current selector tests as reference)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6488/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6488/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6487",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6487/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6487/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6487/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6487",
        "id": 1760833829,
        "node_id": "I_kwDOIWuq585o9DEl",
        "number": 6487,
        "title": "[Bug]: summaries stored as null",
        "user": {
            "login": "manuel-84",
            "id": 1543715,
            "node_id": "MDQ6VXNlcjE1NDM3MTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1543715?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/manuel-84",
            "html_url": "https://github.com/manuel-84",
            "followers_url": "https://api.github.com/users/manuel-84/followers",
            "following_url": "https://api.github.com/users/manuel-84/following{/other_user}",
            "gists_url": "https://api.github.com/users/manuel-84/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/manuel-84/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/manuel-84/subscriptions",
            "organizations_url": "https://api.github.com/users/manuel-84/orgs",
            "repos_url": "https://api.github.com/users/manuel-84/repos",
            "events_url": "https://api.github.com/users/manuel-84/events{/privacy}",
            "received_events_url": "https://api.github.com/users/manuel-84/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-16T15:12:58Z",
        "updated_at": "2023-10-19T16:04:55Z",
        "closed_at": "2023-10-19T16:04:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\n```\r\n    graph = ComposableGraph.from_indices(\r\n        ListIndex,\r\n        indexes,\r\n        index_summaries=summaries,\r\n        storage_context=storage_context,\r\n        service_context=service_context\r\n    )\r\n```\r\n\r\nusing an array of indexes and summaries then saving the graph with `persist` results in having a index.store.json containing all  `\"summary\": null`\r\n\r\n### Version\r\n\r\n0.6.26\r\n\r\n### Steps to Reproduce\r\n\r\nFollowing this: https://gpt-index.readthedocs.io/en/latest/how_to/index/composability.html#creating-a-graph-with-a-top-level-index\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6487/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6487/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6486",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6486/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6486/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6486/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6486",
        "id": 1760810073,
        "node_id": "PR_kwDOIWuq585TM2nX",
        "number": 6486,
        "title": "edit MMR notebook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-16T14:58:01Z",
        "updated_at": "2023-06-16T23:41:16Z",
        "closed_at": "2023-06-16T23:41:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6486",
            "html_url": "https://github.com/run-llama/llama_index/pull/6486",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6486.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6486.patch",
            "merged_at": "2023-06-16T23:41:15Z"
        },
        "body": "# Description\r\n\r\nEdited MMR notebook \r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Tested notebook\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6486/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6486/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6485",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6485/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6485/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6485/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6485",
        "id": 1760144181,
        "node_id": "PR_kwDOIWuq585TKjrG",
        "number": 6485,
        "title": "Set context window sizes for Cohere and AI21(J2 model)",
        "user": {
            "login": "YeonwooSung",
            "id": 30489717,
            "node_id": "MDQ6VXNlcjMwNDg5NzE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/30489717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YeonwooSung",
            "html_url": "https://github.com/YeonwooSung",
            "followers_url": "https://api.github.com/users/YeonwooSung/followers",
            "following_url": "https://api.github.com/users/YeonwooSung/following{/other_user}",
            "gists_url": "https://api.github.com/users/YeonwooSung/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YeonwooSung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YeonwooSung/subscriptions",
            "organizations_url": "https://api.github.com/users/YeonwooSung/orgs",
            "repos_url": "https://api.github.com/users/YeonwooSung/repos",
            "events_url": "https://api.github.com/users/YeonwooSung/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YeonwooSung/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-16T08:05:21Z",
        "updated_at": "2023-07-04T11:39:21Z",
        "closed_at": "2023-06-20T07:24:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6485",
            "html_url": "https://github.com/run-llama/llama_index/pull/6485",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6485.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6485.patch",
            "merged_at": "2023-06-20T07:24:26Z"
        },
        "body": "# Description\r\n\r\nCurrently, the llama_index uses default context window size, which is 3900, for Cohere and AI21.\r\n\r\nHowever, I found that the Cohere's maximum context window size of Generative model is 2048 which is much smaller than 3900, and the context window size of the AI21 J1 model is 8192 which is much larger than 3900.\r\n\r\nI have covered these TODO lists with corresponding values, and added reference links to the comments.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [v] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [v] I have performed a self-review of my own code\r\n- [v] I have commented my code, particularly in hard-to-understand areas\r\n- [v] I have made corresponding changes to the documentation\r\n- [v] My changes generate no new warnings\r\n- [v] I have added tests that prove my fix is effective or that my feature works\r\n- [v] New and existing unit tests pass locally with my changes\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6485/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6485/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6484",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6484/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6484/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6484/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/6484",
        "id": 1759923159,
        "node_id": "PR_kwDOIWuq585TJ0SG",
        "number": 6484,
        "title": "flare fixes",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-16T05:00:10Z",
        "updated_at": "2023-06-16T23:40:56Z",
        "closed_at": "2023-06-16T23:40:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/6484",
            "html_url": "https://github.com/run-llama/llama_index/pull/6484",
            "diff_url": "https://github.com/run-llama/llama_index/pull/6484.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/6484.patch",
            "merged_at": "2023-06-16T23:40:55Z"
        },
        "body": "# Description\r\n\r\nPrompt improvements to make FLARE more reliable \r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6484/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6484/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6483",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6483/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6483/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6483/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6483",
        "id": 1759877411,
        "node_id": "I_kwDOIWuq585o5Zkj",
        "number": 6483,
        "title": "function call support for openai chatgpt",
        "user": {
            "login": "mccoysc",
            "id": 18025276,
            "node_id": "MDQ6VXNlcjE4MDI1Mjc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/18025276?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mccoysc",
            "html_url": "https://github.com/mccoysc",
            "followers_url": "https://api.github.com/users/mccoysc/followers",
            "following_url": "https://api.github.com/users/mccoysc/following{/other_user}",
            "gists_url": "https://api.github.com/users/mccoysc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mccoysc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mccoysc/subscriptions",
            "organizations_url": "https://api.github.com/users/mccoysc/orgs",
            "repos_url": "https://api.github.com/users/mccoysc/repos",
            "events_url": "https://api.github.com/users/mccoysc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mccoysc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-16T03:58:07Z",
        "updated_at": "2023-06-16T17:17:22Z",
        "closed_at": "2023-06-16T17:17:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nas the title\r\n\r\n### Reason\r\n\r\nbased on the feature,we can interact with some 3rdParty systems just like plugins in chatgpt\r\n\r\n### Value of Feature\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6483/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6483/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/6482",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/6482/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/6482/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/6482/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/6482",
        "id": 1759621403,
        "node_id": "I_kwDOIWuq585o4bEb",
        "number": 6482,
        "title": "[Feature Request]: Support Pinecone 3.0.0 rc2",
        "user": {
            "login": "GalDayan",
            "id": 24251369,
            "node_id": "MDQ6VXNlcjI0MjUxMzY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/24251369?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/GalDayan",
            "html_url": "https://github.com/GalDayan",
            "followers_url": "https://api.github.com/users/GalDayan/followers",
            "following_url": "https://api.github.com/users/GalDayan/following{/other_user}",
            "gists_url": "https://api.github.com/users/GalDayan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/GalDayan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/GalDayan/subscriptions",
            "organizations_url": "https://api.github.com/users/GalDayan/orgs",
            "repos_url": "https://api.github.com/users/GalDayan/repos",
            "events_url": "https://api.github.com/users/GalDayan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/GalDayan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-15T22:16:54Z",
        "updated_at": "2023-09-21T16:02:09Z",
        "closed_at": "2023-09-21T16:02:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nWe're using this pinecone to manage multi-tenant customers pinecone connections\r\nhttps://pypi.org/project/pinecone-client/3.0.0rc2/\r\n\r\n### Reason\r\n\r\nWe can't use both versions and there are breaking changes\r\n\r\n### Value of Feature\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/6482/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/6482/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    }
]