[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3656",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3656/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3656/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3656/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3656",
        "id": 1687084802,
        "node_id": "PR_kwDOIPDwls5PTzcM",
        "number": 3656,
        "title": "Make azure-core optional dep",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-27T15:25:47Z",
        "updated_at": "2023-04-27T16:02:47Z",
        "closed_at": "2023-04-27T16:02:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3656",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3656",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3656.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3656.patch",
            "merged_at": null
        },
        "body": "Make azure-core an optional dependency\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3656/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3656/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3655",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3655/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3655/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3655/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3655",
        "id": 1687033336,
        "node_id": "I_kwDOIPDwls5kjhX4",
        "number": 3655,
        "title": "ImportError: cannot import name 'Mapped' from 'sqlalchemy.orm' (/home/nvme2/kunzhong/anaconda3/lib/python3.8/site-packages/sqlalchemy/orm/__init__.py)",
        "user": {
            "login": "nickyi1990",
            "id": 13381684,
            "node_id": "MDQ6VXNlcjEzMzgxNjg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13381684?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickyi1990",
            "html_url": "https://github.com/nickyi1990",
            "followers_url": "https://api.github.com/users/nickyi1990/followers",
            "following_url": "https://api.github.com/users/nickyi1990/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickyi1990/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickyi1990/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickyi1990/subscriptions",
            "organizations_url": "https://api.github.com/users/nickyi1990/orgs",
            "repos_url": "https://api.github.com/users/nickyi1990/repos",
            "events_url": "https://api.github.com/users/nickyi1990/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickyi1990/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-27T14:55:35Z",
        "updated_at": "2023-09-24T16:07:06Z",
        "closed_at": "2023-09-24T16:07:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "have no idea, just install langchain and run code below, the error popup, any idea?\r\n```python\r\nfrom langchain.document_loaders import UnstructuredPDFLoader, OnlinePDFLoader, UnstructuredImageLoader\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\n\r\n\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\n<ipython-input-2-756b21b77eab> in <module>\r\n----> 1 from langchain.document_loaders import UnstructuredPDFLoader, OnlinePDFLoader, UnstructuredImageLoader\r\n      2 from langchain.text_splitter import RecursiveCharacterTextSplitter\r\n\r\n/home/nvme2/kunzhong/anaconda3/lib/python3.8/site-packages/langchain/__init__.py in <module>\r\n      4 from typing import Optional\r\n      5 \r\n----> 6 from langchain.agents import MRKLChain, ReActChain, SelfAskWithSearchChain\r\n      7 from langchain.cache import BaseCache\r\n      8 from langchain.callbacks import (\r\n\r\n/home/nvme2/kunzhong/anaconda3/lib/python3.8/site-packages/langchain/agents/__init__.py in <module>\r\n      1 \"\"\"Interface for agents.\"\"\"\r\n----> 2 from langchain.agents.agent import (\r\n      3     Agent,\r\n      4     AgentExecutor,\r\n      5     AgentOutputParser,\r\n\r\n/home/nvme2/kunzhong/anaconda3/lib/python3.8/site-packages/langchain/agents/agent.py in <module>\r\n     15 from langchain.agents.tools import InvalidTool\r\n     16 from langchain.callbacks.base import BaseCallbackManager\r\n---> 17 from langchain.chains.base import Chain\r\n     18 from langchain.chains.llm import LLMChain\r\n     19 from langchain.input import get_color_mapping\r\n\r\n/home/nvme2/kunzhong/anaconda3/lib/python3.8/site-packages/langchain/chains/__init__.py in <module>\r\n      1 \"\"\"Chains are easily reusable components which can be linked together.\"\"\"\r\n----> 2 from langchain.chains.api.base import APIChain\r\n      3 from langchain.chains.api.openapi.chain import OpenAPIEndpointChain\r\n      4 from langchain.chains.combine_documents.base import AnalyzeDocumentChain\r\n      5 from langchain.chains.constitutional_ai.base import ConstitutionalChain\r\n\r\n/home/nvme2/kunzhong/anaconda3/lib/python3.8/site-packages/langchain/chains/api/base.py in <module>\r\n      6 from pydantic import Field, root_validator\r\n      7 \r\n----> 8 from langchain.chains.api.prompt import API_RESPONSE_PROMPT, API_URL_PROMPT\r\n      9 from langchain.chains.base import Chain\r\n     10 from langchain.chains.llm import LLMChain\r\n\r\n/home/nvme2/kunzhong/anaconda3/lib/python3.8/site-packages/langchain/chains/api/prompt.py in <module>\r\n      1 # flake8: noqa\r\n----> 2 from langchain.prompts.prompt import PromptTemplate\r\n      3 \r\n      4 API_URL_PROMPT_TEMPLATE = \"\"\"You are given the below API Documentation:\r\n      5 {api_docs}\r\n\r\n/home/nvme2/kunzhong/anaconda3/lib/python3.8/site-packages/langchain/prompts/__init__.py in <module>\r\n      1 \"\"\"Prompt template classes.\"\"\"\r\n      2 from langchain.prompts.base import BasePromptTemplate, StringPromptTemplate\r\n----> 3 from langchain.prompts.chat import (\r\n      4     AIMessagePromptTemplate,\r\n      5     BaseChatPromptTemplate,\r\n\r\n/home/nvme2/kunzhong/anaconda3/lib/python3.8/site-packages/langchain/prompts/chat.py in <module>\r\n      8 from pydantic import BaseModel, Field\r\n      9 \r\n---> 10 from langchain.memory.buffer import get_buffer_string\r\n     11 from langchain.prompts.base import BasePromptTemplate, StringPromptTemplate\r\n     12 from langchain.prompts.prompt import PromptTemplate\r\n\r\n/home/nvme2/kunzhong/anaconda3/lib/python3.8/site-packages/langchain/memory/__init__.py in <module>\r\n     21 from langchain.memory.summary_buffer import ConversationSummaryBufferMemory\r\n     22 from langchain.memory.token_buffer import ConversationTokenBufferMemory\r\n---> 23 from langchain.memory.vectorstore import VectorStoreRetrieverMemory\r\n     24 \r\n     25 __all__ = [\r\n\r\n/home/nvme2/kunzhong/anaconda3/lib/python3.8/site-packages/langchain/memory/vectorstore.py in <module>\r\n      8 from langchain.memory.utils import get_prompt_input_key\r\n      9 from langchain.schema import Document\r\n---> 10 from langchain.vectorstores.base import VectorStoreRetriever\r\n     11 \r\n     12 \r\n\r\n/home/nvme2/kunzhong/anaconda3/lib/python3.8/site-packages/langchain/vectorstores/__init__.py in <module>\r\n      1 \"\"\"Wrappers on top of vector stores.\"\"\"\r\n----> 2 from langchain.vectorstores.analyticdb import AnalyticDB\r\n      3 from langchain.vectorstores.annoy import Annoy\r\n      4 from langchain.vectorstores.atlas import AtlasDB\r\n      5 from langchain.vectorstores.base import VectorStore\r\n\r\n/home/nvme2/kunzhong/anaconda3/lib/python3.8/site-packages/langchain/vectorstores/analyticdb.py in <module>\r\n      9 from sqlalchemy import REAL, Index\r\n     10 from sqlalchemy.dialects.postgresql import ARRAY, JSON, UUID\r\n---> 11 from sqlalchemy.orm import Mapped, Session, declarative_base, relationship\r\n     12 from sqlalchemy.sql.expression import func\r\n     13 \r\n\r\nImportError: cannot import name 'Mapped' from 'sqlalchemy.orm' (/home/nvme2/kunzhong/anaconda3/lib/python3.8/site-packages/sqlalchemy/orm/__init__.py)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3655/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3655/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3654",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3654/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3654/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3654/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3654",
        "id": 1687020237,
        "node_id": "I_kwDOIPDwls5kjeLN",
        "number": 3654,
        "title": "logging Generation text type error",
        "user": {
            "login": "dinggege1024",
            "id": 109070189,
            "node_id": "U_kgDOBoBHbQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/109070189?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dinggege1024",
            "html_url": "https://github.com/dinggege1024",
            "followers_url": "https://api.github.com/users/dinggege1024/followers",
            "following_url": "https://api.github.com/users/dinggege1024/following{/other_user}",
            "gists_url": "https://api.github.com/users/dinggege1024/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dinggege1024/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dinggege1024/subscriptions",
            "organizations_url": "https://api.github.com/users/dinggege1024/orgs",
            "repos_url": "https://api.github.com/users/dinggege1024/repos",
            "events_url": "https://api.github.com/users/dinggege1024/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dinggege1024/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-27T14:48:41Z",
        "updated_at": "2023-09-10T16:26:05Z",
        "closed_at": "2023-09-10T16:26:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "![image](https://user-images.githubusercontent.com/109070189/234898722-419457e3-335c-45ea-bd15-c75227f4ee5c.png)\r\n\r\nif return text is not str, there is nothing helpful info",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3654/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3654/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3653",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3653/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3653/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3653/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3653",
        "id": 1687000644,
        "node_id": "PR_kwDOIPDwls5PThSR",
        "number": 3653,
        "title": "Suppress duckdb warning in unit tests explicitly",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-27T14:37:32Z",
        "updated_at": "2023-04-27T18:29:43Z",
        "closed_at": "2023-04-27T18:29:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3653",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3653",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3653.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3653.patch",
            "merged_at": "2023-04-27T18:29:42Z"
        },
        "body": "This catches the warning raised when using duckdb, asserts that it's as\nexpected.\n\nThe goal is to resolve all existing warnings to make unit-testing much\nstricter.\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3653/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3653/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3652",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3652/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3652/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3652/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3652",
        "id": 1686990030,
        "node_id": "PR_kwDOIPDwls5PTfBl",
        "number": 3652,
        "title": "Fixed some typos on deployment.md",
        "user": {
            "login": "TheSeer507",
            "id": 34147199,
            "node_id": "MDQ6VXNlcjM0MTQ3MTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147199?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheSeer507",
            "html_url": "https://github.com/TheSeer507",
            "followers_url": "https://api.github.com/users/TheSeer507/followers",
            "following_url": "https://api.github.com/users/TheSeer507/following{/other_user}",
            "gists_url": "https://api.github.com/users/TheSeer507/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TheSeer507/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TheSeer507/subscriptions",
            "organizations_url": "https://api.github.com/users/TheSeer507/orgs",
            "repos_url": "https://api.github.com/users/TheSeer507/repos",
            "events_url": "https://api.github.com/users/TheSeer507/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TheSeer507/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-27T14:31:14Z",
        "updated_at": "2023-04-27T20:01:25Z",
        "closed_at": "2023-04-27T20:01:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3652",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3652",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3652.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3652.patch",
            "merged_at": "2023-04-27T20:01:24Z"
        },
        "body": "Fixed typos and added better formatting for easier readability",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3652/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3652/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3651",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3651/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3651/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3651/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3651",
        "id": 1686977339,
        "node_id": "PR_kwDOIPDwls5PTcSm",
        "number": 3651,
        "title": "Fix pytest collection warning",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-27T14:24:39Z",
        "updated_at": "2023-04-27T16:51:45Z",
        "closed_at": "2023-04-27T16:51:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3651",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3651",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3651.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3651.patch",
            "merged_at": "2023-04-27T16:51:44Z"
        },
        "body": "Fixes a pytest collection warning because the test class starts with the prefix \"Test\"\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3651/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3651/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3650",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3650/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3650/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3650/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3650",
        "id": 1686967704,
        "node_id": "PR_kwDOIPDwls5PTaOB",
        "number": 3650,
        "title": "Blob: Add validator and use future annotations",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-27T14:19:08Z",
        "updated_at": "2023-04-27T18:34:01Z",
        "closed_at": "2023-04-27T18:33:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3650",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3650",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3650.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3650.patch",
            "merged_at": "2023-04-27T18:33:59Z"
        },
        "body": "Minor changes to the Blob schema.\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3650/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3650/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3649",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3649/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3649/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3649/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3649",
        "id": 1686748777,
        "node_id": "I_kwDOIPDwls5kib5p",
        "number": 3649,
        "title": "AzureOpenAi - Sql Agent: must provide an `engine` or `deployment_id`",
        "user": {
            "login": "michal-aai",
            "id": 131577266,
            "node_id": "U_kgDOB9e1sg",
            "avatar_url": "https://avatars.githubusercontent.com/u/131577266?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michal-aai",
            "html_url": "https://github.com/michal-aai",
            "followers_url": "https://api.github.com/users/michal-aai/followers",
            "following_url": "https://api.github.com/users/michal-aai/following{/other_user}",
            "gists_url": "https://api.github.com/users/michal-aai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michal-aai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michal-aai/subscriptions",
            "organizations_url": "https://api.github.com/users/michal-aai/orgs",
            "repos_url": "https://api.github.com/users/michal-aai/repos",
            "events_url": "https://api.github.com/users/michal-aai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michal-aai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-27T12:28:05Z",
        "updated_at": "2023-04-28T14:14:46Z",
        "closed_at": "2023-04-27T13:51:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi there,\r\nI'm using Langchain + AzureOpenAi api. Based on that I'm trying to use the sql agent to run queries against the postgresql table (15.2). In many cases it works fine but once in a while I'm getting an error:\r\n\r\n```\r\nMust provide an 'engine' or 'deployment_id' parameter to create a <class 'openai.api_resources.completion.Completion'>\r\n```\r\n\r\nThe llm instance gets initiated as:\r\n```\r\nllm = AzureOpenAI(deployment_name=settings.OPENAI_ENGINE, model_name=\"code-davinci-002\")\r\n```\r\n\r\nHere's an example of the Agent output:\r\n\r\n```\r\n....\r\n> Entering new AgentExecutor chain...\r\nAction: list_tables_sql_db\r\nAction Input: \"\"\r\nObservation: app_organisationadvertiser, app_transaction, app_publisher, app_basketproduct\r\nThought: I need to query the app_organisationadvertiser table to get the list of brands\r\nAction: query_sql_db\r\nAction Input: SELECT name FROM app_organisationadvertiser LIMIT 10\r\nObservation: [('Your brand nr 1',)]\r\nThought: I should check my query before executing it\r\nAction: query_checker_sql_db\r\nAction Input: SELECT name FROM app_organisationadvertiser LIMIT 10\r\n```\r\n\r\nThe final query looks good and is a valid SQL query, but the agent returns an exception with the error as described above.\r\nAny ideas how to deal with that? \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3649/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3649/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3648",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3648/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3648/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3648/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3648",
        "id": 1686708535,
        "node_id": "I_kwDOIPDwls5kiSE3",
        "number": 3648,
        "title": "Azure OpenAI Embeddings model not working",
        "user": {
            "login": "laveshnk-crypto",
            "id": 60281257,
            "node_id": "MDQ6VXNlcjYwMjgxMjU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/60281257?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laveshnk-crypto",
            "html_url": "https://github.com/laveshnk-crypto",
            "followers_url": "https://api.github.com/users/laveshnk-crypto/followers",
            "following_url": "https://api.github.com/users/laveshnk-crypto/following{/other_user}",
            "gists_url": "https://api.github.com/users/laveshnk-crypto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laveshnk-crypto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laveshnk-crypto/subscriptions",
            "organizations_url": "https://api.github.com/users/laveshnk-crypto/orgs",
            "repos_url": "https://api.github.com/users/laveshnk-crypto/repos",
            "events_url": "https://api.github.com/users/laveshnk-crypto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laveshnk-crypto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-27T12:03:40Z",
        "updated_at": "2023-05-04T03:53:17Z",
        "closed_at": "2023-04-29T07:26:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, using the text-embedding-ada-002 model provided by Azure OpenAI doesnt seem to be working for me. Any fixes?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3648/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3648/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3647",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3647/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3647/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3647/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3647",
        "id": 1686700270,
        "node_id": "I_kwDOIPDwls5kiQDu",
        "number": 3647,
        "title": "Token indices sequence length is longer than the specified maximum sequence length for this model",
        "user": {
            "login": "scguoi",
            "id": 19951594,
            "node_id": "MDQ6VXNlcjE5OTUxNTk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/19951594?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/scguoi",
            "html_url": "https://github.com/scguoi",
            "followers_url": "https://api.github.com/users/scguoi/followers",
            "following_url": "https://api.github.com/users/scguoi/following{/other_user}",
            "gists_url": "https://api.github.com/users/scguoi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/scguoi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/scguoi/subscriptions",
            "organizations_url": "https://api.github.com/users/scguoi/orgs",
            "repos_url": "https://api.github.com/users/scguoi/repos",
            "events_url": "https://api.github.com/users/scguoi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/scguoi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-27T11:59:19Z",
        "updated_at": "2023-10-05T16:10:38Z",
        "closed_at": "2023-10-05T16:10:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Use my custom LLM model, got warning like this.\r\n\r\nToken indices sequence length is longer than the specified maximum sequence length for this model (1266 > 1024). Running this sequence through the model will result in indexing errors\r\n\r\nMy model max support token is 8k.\r\n\r\nDid anyone know what this mean?\r\n\r\n``` python\r\nloader = SeleniumURLLoader(urls=urls)\r\n\r\ndata = loader.load()\r\n\r\nprint(data)\r\n\r\nllm = MyLLM()\r\n\r\nchain = load_summarize_chain(llm, chain_type=\"map_reduce\")\r\nprint(chain.run(data))\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3647/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3647/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3646",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3646/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3646/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3646/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3646",
        "id": 1686690676,
        "node_id": "PR_kwDOIPDwls5PSdMf",
        "number": 3646,
        "title": "Pandas agent: Pass callback manager to Python tool.",
        "user": {
            "login": "sliedes",
            "id": 2307997,
            "node_id": "MDQ6VXNlcjIzMDc5OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2307997?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sliedes",
            "html_url": "https://github.com/sliedes",
            "followers_url": "https://api.github.com/users/sliedes/followers",
            "following_url": "https://api.github.com/users/sliedes/following{/other_user}",
            "gists_url": "https://api.github.com/users/sliedes/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sliedes/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sliedes/subscriptions",
            "organizations_url": "https://api.github.com/users/sliedes/orgs",
            "repos_url": "https://api.github.com/users/sliedes/repos",
            "events_url": "https://api.github.com/users/sliedes/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sliedes/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-27T11:53:04Z",
        "updated_at": "2023-04-30T21:57:19Z",
        "closed_at": "2023-04-30T21:13:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3646",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3646",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3646.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3646.patch",
            "merged_at": "2023-04-30T21:13:03Z"
        },
        "body": "The callback manager was not passed to the Python tool, making it hard to observe some intermediate steps.\r\n\r\nNOTE: The mypy hints seem to suggest that the tool does not accept None as an input\u2014but I didn't check the code\u2014so I use get_callback_manager() to get the real default callback manager in case None is passed to the Pandas tool.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3646/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3646/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3645",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3645/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3645/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3645/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3645",
        "id": 1686665722,
        "node_id": "I_kwDOIPDwls5kiHn6",
        "number": 3645,
        "title": "Langchain connection to remote DB takes a lot of time",
        "user": {
            "login": "maby200",
            "id": 18635819,
            "node_id": "MDQ6VXNlcjE4NjM1ODE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/18635819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maby200",
            "html_url": "https://github.com/maby200",
            "followers_url": "https://api.github.com/users/maby200/followers",
            "following_url": "https://api.github.com/users/maby200/following{/other_user}",
            "gists_url": "https://api.github.com/users/maby200/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maby200/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maby200/subscriptions",
            "organizations_url": "https://api.github.com/users/maby200/orgs",
            "repos_url": "https://api.github.com/users/maby200/repos",
            "events_url": "https://api.github.com/users/maby200/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maby200/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 23,
        "created_at": "2023-04-27T11:35:12Z",
        "updated_at": "2023-11-02T15:13:55Z",
        "closed_at": "2023-11-02T15:13:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am using Langchain package to connect to a remote DB. The problem is that it takes a lot of time (sometimes more than 3 minutes) to run the SQLDatabase class. To avoid that long time I am specifying just to load a table but still is taking up to a minute to do that work. Here the code:\r\n\r\n```python\r\nfrom langchain import OpenAI\r\nfrom langchain.sql_database import SQLDatabase\r\nfrom sqlalchemy import create_engine\r\n\r\n# already loaded environment vars \r\n\r\nllm = OpenAI(temperature=0)\r\n\r\nengine = create_engine(\"postgresql+psycopg2://{user}:{passwd}@{host}:{port}/chatdatabase\")\r\n\r\ninclude_tables=['table_1']\r\n\r\ndb = SQLDatabase(engine, include_tables=include_tables)\r\n\r\n...\r\n```\r\n\r\nAs in the documentation, Langchain uses SQLAlchemy in the background for making connections and loading tables. That is why I tried to make a connection with pure SQLAlchemy and not using langchain:\r\n\r\n```python\r\nfrom sqlalchemy import create_engine\r\n\r\nengine = create_engine(\"postgresql+psycopg2://{user}:{passwd}@{host}:{port}/chatdatabase\")\r\n\r\nwith engine.connect() as con:\r\n\r\n  rs = con.execute('select * from table_1 limit 10')\r\n  for row in rs:\r\n    print(row)\r\n```\r\n\r\nAnd surprisingly it takes just few seconds to do so.\r\n\r\nIs there any way or documentation to read (I've searched but not lucky) so that this process can be faster?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3645/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3645/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3644",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3644/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3644/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3644/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3644",
        "id": 1686646460,
        "node_id": "PR_kwDOIPDwls5PSTmB",
        "number": 3644,
        "title": "Add PipelineAI LLM integration",
        "user": {
            "login": "plutopulp",
            "id": 82040835,
            "node_id": "MDQ6VXNlcjgyMDQwODM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/82040835?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/plutopulp",
            "html_url": "https://github.com/plutopulp",
            "followers_url": "https://api.github.com/users/plutopulp/followers",
            "following_url": "https://api.github.com/users/plutopulp/following{/other_user}",
            "gists_url": "https://api.github.com/users/plutopulp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/plutopulp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/plutopulp/subscriptions",
            "organizations_url": "https://api.github.com/users/plutopulp/orgs",
            "repos_url": "https://api.github.com/users/plutopulp/repos",
            "events_url": "https://api.github.com/users/plutopulp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/plutopulp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-27T11:21:50Z",
        "updated_at": "2023-04-27T15:22:27Z",
        "closed_at": "2023-04-27T15:22:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3644",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3644",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3644.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3644.patch",
            "merged_at": "2023-04-27T15:22:27Z"
        },
        "body": "Add PipelineAI LLM integration",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3644/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3644/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3643",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3643/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3643/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3643/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3643",
        "id": 1686587198,
        "node_id": "PR_kwDOIPDwls5PSGqF",
        "number": 3643,
        "title": "Update README.md",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-27T10:40:56Z",
        "updated_at": "2023-04-27T15:14:10Z",
        "closed_at": "2023-04-27T15:14:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3643",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3643",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3643.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3643.patch",
            "merged_at": "2023-04-27T15:14:09Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3643/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3643/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3642",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3642/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3642/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3642/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3642",
        "id": 1686567730,
        "node_id": "I_kwDOIPDwls5khvsy",
        "number": 3642,
        "title": "Issue with ChatVectorDBChain and Hugging Face Accelerate",
        "user": {
            "login": "vcahlik",
            "id": 17980426,
            "node_id": "MDQ6VXNlcjE3OTgwNDI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/17980426?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vcahlik",
            "html_url": "https://github.com/vcahlik",
            "followers_url": "https://api.github.com/users/vcahlik/followers",
            "following_url": "https://api.github.com/users/vcahlik/following{/other_user}",
            "gists_url": "https://api.github.com/users/vcahlik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vcahlik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vcahlik/subscriptions",
            "organizations_url": "https://api.github.com/users/vcahlik/orgs",
            "repos_url": "https://api.github.com/users/vcahlik/repos",
            "events_url": "https://api.github.com/users/vcahlik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vcahlik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-27T10:28:29Z",
        "updated_at": "2023-09-10T16:26:11Z",
        "closed_at": "2023-09-10T16:26:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I think I have found an issue with using ChatVectorDBChain together with HuggingFacePipeline that uses Hugging Face Accelerate.\r\n\r\nFirst, I successfully load and use a ~10GB model pipeline on an ~8GB GPU (setting it to use only ~5GB by specifying `device_map` and `max_memory`), and initialize the vectorstore:\r\n\r\n```python\r\nfrom transformers import pipeline\r\n\r\npipe = pipeline(model='declare-lab/flan-alpaca-xl', device_map='auto', model_kwargs={'max_memory': {0: \"5GiB\", \"cpu\": \"20GiB\"}})\r\n\r\npipe(\"How are you?\")\r\n# [{'generated_text': \"I'm doing well. I'm doing well, thank you. How about you?\"}]\r\n\r\nimport faiss\r\nimport getpass\r\nimport os\r\nfrom langchain.vectorstores.faiss import FAISS\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.chains import ChatVectorDBChain\r\nfrom langchain import HuggingFaceHub, HuggingFacePipeline\r\n\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\nmodel_name = \"sentence-transformers/all-mpnet-base-v2\"\r\nembeddings = HuggingFaceEmbeddings(model_name=model_name)\r\n\r\n!nvidia-smi\r\n# Thu Apr 27 10:14:26 2023       \r\n# +-----------------------------------------------------------------------------+\r\n# | NVIDIA-SMI 510.73.05    Driver Version: 510.73.05    CUDA Version: 11.6     |\r\n# |-------------------------------+----------------------+----------------------+\r\n# | GPU  Name        Persistence-M| Bus-Id        Disp.A | Volatile Uncorr. ECC |\r\n# | Fan  Temp  Perf  Pwr:Usage/Cap|         Memory-Usage | GPU-Util  Compute M. |\r\n# |                               |                      |               MIG M. |\r\n# |===============================+======================+======================|\r\n# |   0  Quadro RTX 4000     Off  | 00000000:00:05.0 Off |                  N/A |\r\n# | 30%   47C    P0    33W / 125W |   5880MiB /  8192MiB |      0%      Default |\r\n# |                               |                      |                  N/A |\r\n# +-------------------------------+----------------------+----------------------+\r\n                                                                               \r\n# +-----------------------------------------------------------------------------+\r\n# | Processes:                                                                  |\r\n# |  GPU   GI   CI        PID   Type   Process name                  GPU Memory |\r\n# |        ID   ID                                                   Usage      |\r\n# |=============================================================================|\r\n# +-----------------------------------------------------------------------------+\r\n\r\nwith open('data/made-up-story.txt') as f:\r\n    text = f.read()\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=20)\r\ntexts = text_splitter.split_text(text)\r\n\r\nvectorstore = FAISS.from_texts(texts, embeddings)\r\n```\r\n\r\nSo far so good. The issue arises when I try to load ChatVectorDBChain:\r\n\r\n```python\r\nllm = HuggingFacePipeline(pipeline=pipe)\r\nqa = ChatVectorDBChain.from_llm(llm, vectorstore)  # Produces RuntimeError: CUDA out of memory.\r\n```\r\n\r\nFull output:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nRuntimeError                              Traceback (most recent call last)\r\nInput In [9], in <cell line: 4>()\r\n      1 from transformers import pipeline\r\n      3 llm = HuggingFacePipeline(pipeline=pipe)\r\n----> 4 qa = ChatVectorDBChain.from_llm(llm, vectorstore)\r\n\r\nFile /usr/local/lib/python3.9/dist-packages/langchain/chains/conversational_retrieval/base.py:240, in ChatVectorDBChain.from_llm(cls, llm, vectorstore, condense_question_prompt, chain_type, combine_docs_chain_kwargs, **kwargs)\r\n    238 \"\"\"Load chain from LLM.\"\"\"\r\n    239 combine_docs_chain_kwargs = combine_docs_chain_kwargs or {}\r\n--> 240 doc_chain = load_qa_chain(\r\n    241     llm,\r\n    242     chain_type=chain_type,\r\n    243     **combine_docs_chain_kwargs,\r\n    244 )\r\n    245 condense_question_chain = LLMChain(llm=llm, prompt=condense_question_prompt)\r\n    246 return cls(\r\n    247     vectorstore=vectorstore,\r\n    248     combine_docs_chain=doc_chain,\r\n    249     question_generator=condense_question_chain,\r\n    250     **kwargs,\r\n    251 )\r\n\r\nFile /usr/local/lib/python3.9/dist-packages/langchain/chains/question_answering/__init__.py:218, in load_qa_chain(llm, chain_type, verbose, callback_manager, **kwargs)\r\n    213 if chain_type not in loader_mapping:\r\n    214     raise ValueError(\r\n    215         f\"Got unsupported chain type: {chain_type}. \"\r\n    216         f\"Should be one of {loader_mapping.keys()}\"\r\n    217     )\r\n--> 218 return loader_mapping[chain_type](\r\n    219     llm, verbose=verbose, callback_manager=callback_manager, **kwargs\r\n    220 )\r\n\r\nFile /usr/local/lib/python3.9/dist-packages/langchain/chains/question_answering/__init__.py:67, in _load_stuff_chain(llm, prompt, document_variable_name, verbose, callback_manager, **kwargs)\r\n     63 llm_chain = LLMChain(\r\n     64     llm=llm, prompt=_prompt, verbose=verbose, callback_manager=callback_manager\r\n     65 )\r\n     66 # TODO: document prompt\r\n---> 67 return StuffDocumentsChain(\r\n     68     llm_chain=llm_chain,\r\n     69     document_variable_name=document_variable_name,\r\n     70     verbose=verbose,\r\n     71     callback_manager=callback_manager,\r\n     72     **kwargs,\r\n     73 )\r\n\r\nFile /usr/local/lib/python3.9/dist-packages/pydantic/main.py:339, in pydantic.main.BaseModel.__init__()\r\n\r\nFile /usr/local/lib/python3.9/dist-packages/pydantic/main.py:1038, in pydantic.main.validate_model()\r\n\r\nFile /usr/local/lib/python3.9/dist-packages/pydantic/fields.py:857, in pydantic.fields.ModelField.validate()\r\n\r\nFile /usr/local/lib/python3.9/dist-packages/pydantic/fields.py:1074, in pydantic.fields.ModelField._validate_singleton()\r\n\r\nFile /usr/local/lib/python3.9/dist-packages/pydantic/fields.py:1121, in pydantic.fields.ModelField._apply_validators()\r\n\r\nFile /usr/local/lib/python3.9/dist-packages/pydantic/class_validators.py:313, in pydantic.class_validators._generic_validator_basic.lambda12()\r\n\r\nFile /usr/local/lib/python3.9/dist-packages/pydantic/main.py:679, in pydantic.main.BaseModel.validate()\r\n\r\nFile /usr/local/lib/python3.9/dist-packages/pydantic/main.py:605, in pydantic.main.BaseModel._copy_and_set_values()\r\n\r\nFile /usr/lib/python3.9/copy.py:146, in deepcopy(x, memo, _nil)\r\n    144 copier = _deepcopy_dispatch.get(cls)\r\n    145 if copier is not None:\r\n--> 146     y = copier(x, memo)\r\n    147 else:\r\n    148     if issubclass(cls, type):\r\n\r\nFile /usr/lib/python3.9/copy.py:230, in _deepcopy_dict(x, memo, deepcopy)\r\n    228 memo[id(x)] = y\r\n    229 for key, value in x.items():\r\n--> 230     y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231 return y\r\n\r\nFile /usr/lib/python3.9/copy.py:172, in deepcopy(x, memo, _nil)\r\n    170                 y = x\r\n    171             else:\r\n--> 172                 y = _reconstruct(x, memo, *rv)\r\n    174 # If is its own copy, don't memoize.\r\n    175 if y is not x:\r\n\r\nFile /usr/lib/python3.9/copy.py:270, in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    268 if state is not None:\r\n    269     if deep:\r\n--> 270         state = deepcopy(state, memo)\r\n    271     if hasattr(y, '__setstate__'):\r\n    272         y.__setstate__(state)\r\n\r\nFile /usr/lib/python3.9/copy.py:146, in deepcopy(x, memo, _nil)\r\n    144 copier = _deepcopy_dispatch.get(cls)\r\n    145 if copier is not None:\r\n--> 146     y = copier(x, memo)\r\n    147 else:\r\n    148     if issubclass(cls, type):\r\n\r\nFile /usr/lib/python3.9/copy.py:230, in _deepcopy_dict(x, memo, deepcopy)\r\n    228 memo[id(x)] = y\r\n    229 for key, value in x.items():\r\n--> 230     y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231 return y\r\n\r\n    [... skipping similar frames: _deepcopy_dict at line 230 (1 times), deepcopy at line 146 (1 times)]\r\n\r\nFile /usr/lib/python3.9/copy.py:172, in deepcopy(x, memo, _nil)\r\n    170                 y = x\r\n    171             else:\r\n--> 172                 y = _reconstruct(x, memo, *rv)\r\n    174 # If is its own copy, don't memoize.\r\n    175 if y is not x:\r\n\r\nFile /usr/lib/python3.9/copy.py:270, in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    268 if state is not None:\r\n    269     if deep:\r\n--> 270         state = deepcopy(state, memo)\r\n    271     if hasattr(y, '__setstate__'):\r\n    272         y.__setstate__(state)\r\n\r\n    [... skipping similar frames: _deepcopy_dict at line 230 (2 times), deepcopy at line 146 (2 times), deepcopy at line 172 (2 times), _reconstruct at line 270 (1 times)]\r\n\r\nFile /usr/lib/python3.9/copy.py:296, in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    294     for key, value in dictiter:\r\n    295         key = deepcopy(key, memo)\r\n--> 296         value = deepcopy(value, memo)\r\n    297         y[key] = value\r\n    298 else:\r\n\r\n    [... skipping similar frames: deepcopy at line 172 (2 times), _deepcopy_dict at line 230 (1 times), _reconstruct at line 270 (1 times), deepcopy at line 146 (1 times)]\r\n\r\nFile /usr/lib/python3.9/copy.py:296, in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    294     for key, value in dictiter:\r\n    295         key = deepcopy(key, memo)\r\n--> 296         value = deepcopy(value, memo)\r\n    297         y[key] = value\r\n    298 else:\r\n\r\n    [... skipping similar frames: deepcopy at line 172 (11 times), _deepcopy_dict at line 230 (5 times), _reconstruct at line 270 (5 times), _reconstruct at line 296 (5 times), deepcopy at line 146 (5 times)]\r\n\r\nFile /usr/lib/python3.9/copy.py:270, in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    268 if state is not None:\r\n    269     if deep:\r\n--> 270         state = deepcopy(state, memo)\r\n    271     if hasattr(y, '__setstate__'):\r\n    272         y.__setstate__(state)\r\n\r\nFile /usr/lib/python3.9/copy.py:146, in deepcopy(x, memo, _nil)\r\n    144 copier = _deepcopy_dispatch.get(cls)\r\n    145 if copier is not None:\r\n--> 146     y = copier(x, memo)\r\n    147 else:\r\n    148     if issubclass(cls, type):\r\n\r\nFile /usr/lib/python3.9/copy.py:230, in _deepcopy_dict(x, memo, deepcopy)\r\n    228 memo[id(x)] = y\r\n    229 for key, value in x.items():\r\n--> 230     y[deepcopy(key, memo)] = deepcopy(value, memo)\r\n    231 return y\r\n\r\nFile /usr/lib/python3.9/copy.py:172, in deepcopy(x, memo, _nil)\r\n    170                 y = x\r\n    171             else:\r\n--> 172                 y = _reconstruct(x, memo, *rv)\r\n    174 # If is its own copy, don't memoize.\r\n    175 if y is not x:\r\n\r\nFile /usr/lib/python3.9/copy.py:296, in _reconstruct(x, memo, func, args, state, listiter, dictiter, deepcopy)\r\n    294     for key, value in dictiter:\r\n    295         key = deepcopy(key, memo)\r\n--> 296         value = deepcopy(value, memo)\r\n    297         y[key] = value\r\n    298 else:\r\n\r\nFile /usr/lib/python3.9/copy.py:153, in deepcopy(x, memo, _nil)\r\n    151 copier = getattr(x, \"__deepcopy__\", None)\r\n    152 if copier is not None:\r\n--> 153     y = copier(memo)\r\n    154 else:\r\n    155     reductor = dispatch_table.get(cls)\r\n\r\nFile /usr/local/lib/python3.9/dist-packages/torch/nn/parameter.py:56, in Parameter.__deepcopy__(self, memo)\r\n     54     return memo[id(self)]\r\n     55 else:\r\n---> 56     result = type(self)(self.data.clone(memory_format=torch.preserve_format), self.requires_grad)\r\n     57     memo[id(self)] = result\r\n     58     return result\r\n\r\nRuntimeError: CUDA out of memory. Tried to allocate 40.00 MiB (GPU 0; 7.80 GiB total capacity; 6.82 GiB already allocated; 30.44 MiB free; 6.85 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF\r\n```\r\n\r\nIt seems to me that LangChain is somehow trying to reload the (whole?) pipeline on the GPU.\r\n\r\nAny help appreciated, thank you.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3642/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3642/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3641",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3641/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3641/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3641/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3641",
        "id": 1686495917,
        "node_id": "I_kwDOIPDwls5kheKt",
        "number": 3641,
        "title": "no 'persistent=True' tag",
        "user": {
            "login": "Amazingldl",
            "id": 54729177,
            "node_id": "MDQ6VXNlcjU0NzI5MTc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/54729177?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Amazingldl",
            "html_url": "https://github.com/Amazingldl",
            "followers_url": "https://api.github.com/users/Amazingldl/followers",
            "following_url": "https://api.github.com/users/Amazingldl/following{/other_user}",
            "gists_url": "https://api.github.com/users/Amazingldl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Amazingldl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Amazingldl/subscriptions",
            "organizations_url": "https://api.github.com/users/Amazingldl/orgs",
            "repos_url": "https://api.github.com/users/Amazingldl/repos",
            "events_url": "https://api.github.com/users/Amazingldl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Amazingldl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-27T09:42:23Z",
        "updated_at": "2023-04-27T19:08:03Z",
        "closed_at": "2023-04-27T19:08:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Follow the instruction: https://python.langchain.com/en/latest/modules/agents/tools/examples/bash.html \r\n\r\n\r\n![image](https://user-images.githubusercontent.com/54729177/234824204-0d44bcbc-bbda-4c57-948c-590b6900c922.png)\r\n\r\nBut I get the error:\r\n```\r\n    bash = BashProcess(persistent=True)\r\nTypeError: BashProcess.__init__() got an unexpected keyword argument 'persistent'\r\n```\r\nThe version of langchain is 0.0.150\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3641/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3641/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3640",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3640/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3640/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3640/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3640",
        "id": 1686435981,
        "node_id": "I_kwDOIPDwls5khPiN",
        "number": 3640,
        "title": "deeplake.util.exceptions.TransformError",
        "user": {
            "login": "CharlesFr",
            "id": 16102087,
            "node_id": "MDQ6VXNlcjE2MTAyMDg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/16102087?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CharlesFr",
            "html_url": "https://github.com/CharlesFr",
            "followers_url": "https://api.github.com/users/CharlesFr/followers",
            "following_url": "https://api.github.com/users/CharlesFr/following{/other_user}",
            "gists_url": "https://api.github.com/users/CharlesFr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CharlesFr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CharlesFr/subscriptions",
            "organizations_url": "https://api.github.com/users/CharlesFr/orgs",
            "repos_url": "https://api.github.com/users/CharlesFr/repos",
            "events_url": "https://api.github.com/users/CharlesFr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CharlesFr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-04-27T09:03:57Z",
        "updated_at": "2023-11-27T04:56:27Z",
        "closed_at": "2023-10-09T16:08:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm attempting to load some Documents and get a `TransformError` - could someone please point me in the right direction? Thanks!\r\nI'm afraid the traceback doesn't mean much to me.\r\n\r\n```python\r\ndb = DeepLake(dataset_path=deeplake_path, embedding_function=embeddings)\r\ndb.add_documents(texts)\r\n```\r\n\r\n\r\n```\r\n  tensor     htype    shape    dtype  compression\r\n  -------   -------  -------  -------  ------- \r\n embedding  generic   (0,)    float32   None   \r\n    ids      text     (0,)      str     None   \r\n metadata    json     (0,)      str     None   \r\n   text      text     (0,)      str     None   \r\nEvaluating ingest: 0%|          | 0/1 [00:10<?\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\chunk_engine.py\", line 1065, in extend\r\n    self._extend(samples, progressbar, pg_callback=pg_callback)\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\chunk_engine.py\", line 1001, in _extend\r\n    self._samples_to_chunks(\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\chunk_engine.py\", line 824, in _samples_to_chunks\r\n    num_samples_added = current_chunk.extend_if_has_space(\r\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\chunk\\chunk_compressed_chunk.py\", line 50, in extend_if_has_space\r\n    return self.extend_if_has_space_byte_compression(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\chunk\\chunk_compressed_chunk.py\", line 233, in extend_if_has_space_byte_compression\r\n    serialized_sample, shape = self.serialize_sample(\r\n                               ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\chunk\\base_chunk.py\", line 342, in serialize_sample\r\n    incoming_sample, shape = serialize_text(\r\n                             ^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\serialize.py\", line 505, in serialize_text\r\n    incoming_sample, shape = text_to_bytes(incoming_sample, dtype, htype)\r\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\serialize.py\", line 458, in text_to_bytes\r\n    byts = json.dumps(sample, cls=HubJsonEncoder).encode()\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\json\\__init__.py\", line 238, in dumps\r\n    **kw).encode(obj)\r\n          ^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\json\\encoder.py\", line 200, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\json\\encoder.py\", line 258, in iterencode\r\n    return _iterencode(o, 0)\r\n           ^^^^^^^^^^^^^^^^^\r\nValueError: Circular reference detected\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\util\\transform.py\", line 220, in _transform_and_append_data_slice\r\n    transform_dataset.flush()\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\transform\\transform_dataset.py\", line 154, in flush\r\n    raise SampleAppendError(name) from e\r\ndeeplake.util.exceptions.SampleAppendError: Failed to append a sample to the tensor 'metadata'. See more details in the traceback.\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\chunk_engine.py\", line 1065, in extend\r\n    self._extend(samples, progressbar, pg_callback=pg_callback)\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\chunk_engine.py\", line 1001, in _extend\r\n    self._samples_to_chunks(\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\chunk_engine.py\", line 824, in _samples_to_chunks\r\n    num_samples_added = current_chunk.extend_if_has_space(\r\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\chunk\\chunk_compressed_chunk.py\", line 50, in extend_if_has_space\r\n    return self.extend_if_has_space_byte_compression(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\chunk\\chunk_compressed_chunk.py\", line 233, in extend_if_has_space_byte_compression\r\n    serialized_sample, shape = self.serialize_sample(\r\n                               ^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\chunk\\base_chunk.py\", line 342, in serialize_sample\r\n    incoming_sample, shape = serialize_text(\r\n                             ^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\serialize.py\", line 505, in serialize_text\r\n    incoming_sample, shape = text_to_bytes(incoming_sample, dtype, htype)\r\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\serialize.py\", line 458, in text_to_bytes\r\n    byts = json.dumps(sample, cls=HubJsonEncoder).encode()\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\json\\__init__.py\", line 238, in dumps\r\n    **kw).encode(obj)\r\n          ^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\json\\encoder.py\", line 200, in encode\r\n    chunks = self.iterencode(o, _one_shot=True)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\charles\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\json\\encoder.py\", line 258, in iterencode\r\n    return _iterencode(o, 0)\r\n           ^^^^^^^^^^^^^^^^^\r\nValueError: Circular reference detected\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\util\\transform.py\", line 177, in _handle_transform_error\r\n    transform_dataset.flush()\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\transform\\transform_dataset.py\", line 154, in flush\r\n    raise SampleAppendError(name) from e\r\ndeeplake.util.exceptions.SampleAppendError: Failed to append a sample to the tensor 'metadata'. See more details in the traceback.\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\charles\\Documents\\GitHub\\Chat-with-Github-Repo\\venv\\Lib\\site-packages\\deeplake\\core\\transform\\transform.py\", line 298, in eval\r\n    raise TransformError(\r\ndeeplake.util.exceptions.TransformError: Transform failed at index 0 of the input data. See traceback for more details.\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3640/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3640/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3639",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3639/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3639/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3639/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3639",
        "id": 1686312619,
        "node_id": "PR_kwDOIPDwls5PRLfn",
        "number": 3639,
        "title": "Surface AgentExecutor kwargs for toolkits",
        "user": {
            "login": "zachschillaci27",
            "id": 40636930,
            "node_id": "MDQ6VXNlcjQwNjM2OTMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/40636930?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zachschillaci27",
            "html_url": "https://github.com/zachschillaci27",
            "followers_url": "https://api.github.com/users/zachschillaci27/followers",
            "following_url": "https://api.github.com/users/zachschillaci27/following{/other_user}",
            "gists_url": "https://api.github.com/users/zachschillaci27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zachschillaci27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zachschillaci27/subscriptions",
            "organizations_url": "https://api.github.com/users/zachschillaci27/orgs",
            "repos_url": "https://api.github.com/users/zachschillaci27/repos",
            "events_url": "https://api.github.com/users/zachschillaci27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zachschillaci27/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-27T07:53:39Z",
        "updated_at": "2023-05-02T06:15:55Z",
        "closed_at": "2023-05-01T22:40:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3639",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3639",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3639.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3639.patch",
            "merged_at": "2023-05-01T22:40:41Z"
        },
        "body": "Surface separate `kwargs` for `Agent` and `AgentExecutor` in a consistent way for the agent toolkits. Following the example in `create_pbi_agent` and `create_pbi_chat_agent`,`agent_kwargs` and `kwargs` are now accessible for all `AgentExecutor` creator functions. This allows the user to separately control the `Agent` and `AgentExecutor` parameters. \r\n\r\n**NOTE:** This will modify the behavior for some of the existing toolkits.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3639/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3639/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3638",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3638/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3638/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3638/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3638",
        "id": 1686256733,
        "node_id": "I_kwDOIPDwls5kgjxd",
        "number": 3638,
        "title": "Sequential chains vs multiple LLMChains (Why prefer one over the other?)",
        "user": {
            "login": "KeshavSingh29",
            "id": 130352102,
            "node_id": "U_kgDOB8UD5g",
            "avatar_url": "https://avatars.githubusercontent.com/u/130352102?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/KeshavSingh29",
            "html_url": "https://github.com/KeshavSingh29",
            "followers_url": "https://api.github.com/users/KeshavSingh29/followers",
            "following_url": "https://api.github.com/users/KeshavSingh29/following{/other_user}",
            "gists_url": "https://api.github.com/users/KeshavSingh29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/KeshavSingh29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/KeshavSingh29/subscriptions",
            "organizations_url": "https://api.github.com/users/KeshavSingh29/orgs",
            "repos_url": "https://api.github.com/users/KeshavSingh29/repos",
            "events_url": "https://api.github.com/users/KeshavSingh29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/KeshavSingh29/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-27T07:12:50Z",
        "updated_at": "2023-10-21T16:09:41Z",
        "closed_at": "2023-10-21T16:09:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Brief summary: \r\nNeed to solve multiple tasks in sequence (eg: translate an input -> use it to answer question -> translate to different language) \r\nPreviously was making multiple LLMChain objects with different prompts and passing outputs of one chain into another.\r\nCame across sequential chains, tried it. \r\n\r\nI didnt find any big difference on why I should use one over the other. Moreover, sequential chains seem to be slower than just calling multiple LLMChains. \r\n\r\nAnything I'm missing, or if anyone can elaborate the need of sequential chains.\r\nThanks!!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3638/reactions",
            "total_count": 6,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 6
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3638/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3637",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3637/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3637/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3637/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3637",
        "id": 1686176243,
        "node_id": "I_kwDOIPDwls5kgQHz",
        "number": 3637,
        "title": "Document Loaders: GoogleDriveLoader hidden option to load spread sheets",
        "user": {
            "login": "adrianlzt",
            "id": 3237784,
            "node_id": "MDQ6VXNlcjMyMzc3ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3237784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adrianlzt",
            "html_url": "https://github.com/adrianlzt",
            "followers_url": "https://api.github.com/users/adrianlzt/followers",
            "following_url": "https://api.github.com/users/adrianlzt/following{/other_user}",
            "gists_url": "https://api.github.com/users/adrianlzt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adrianlzt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adrianlzt/subscriptions",
            "organizations_url": "https://api.github.com/users/adrianlzt/orgs",
            "repos_url": "https://api.github.com/users/adrianlzt/repos",
            "events_url": "https://api.github.com/users/adrianlzt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adrianlzt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-27T06:07:09Z",
        "updated_at": "2023-10-25T21:25:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "In the [docs](https://python.langchain.com/en/latest/modules/indexes/document_loaders/examples/googledrive.html) of the GoogleDriveLoader says ``Currently, only Google Docs are supported``, but then, in the  [code](https://github.com/hwchase17/langchain/blob/8e10ac422e4e6b193fc35e1d64d7f0c5208faa8d/langchain/document_loaders/googledrive.py#L100), there is a function ``_load_sheet_from_id``.\r\n\r\nThat function is only used for folder loading.\r\n\r\nAccessing the _private_ method of the class is it possible, and works perfectly, to load spread sheets:\r\n```\r\nfrom langchain.document_loaders import GoogleDriveLoader\r\nspreadsheet_id = \"122tuu4r-yYng8Lj7XXXUgb-basdbk\"\r\nloader = GoogleDriveLoader(file_ids=[spreadsheet_id])\r\ndocs = loader._load_sheet_from_id(spreadsheet_id)\r\n```\r\n\r\nProbably ``_load_documents_from_ids`` needs some refactor to work based on the mimeType, as ``_load_documents_from_folder`` does.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3637/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3637/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3636",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3636/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3636/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3636/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3636",
        "id": 1686164101,
        "node_id": "PR_kwDOIPDwls5PQrfs",
        "number": 3636,
        "title": "feat: Improvements to SQLDatabaseChain for better local model support (query checker and few shot examples)",
        "user": {
            "login": "tjaffri",
            "id": 749277,
            "node_id": "MDQ6VXNlcjc0OTI3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/749277?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjaffri",
            "html_url": "https://github.com/tjaffri",
            "followers_url": "https://api.github.com/users/tjaffri/followers",
            "following_url": "https://api.github.com/users/tjaffri/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjaffri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjaffri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjaffri/subscriptions",
            "organizations_url": "https://api.github.com/users/tjaffri/orgs",
            "repos_url": "https://api.github.com/users/tjaffri/repos",
            "events_url": "https://api.github.com/users/tjaffri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjaffri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5462634126,
                "node_id": "LA_kwDOIPDwls8AAAABRZkujg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/close",
                "name": "close",
                "color": "776DC8",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-27T05:56:29Z",
        "updated_at": "2023-05-13T03:16:18Z",
        "closed_at": "2023-05-13T03:16:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3636",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3636",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3636.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3636.patch",
            "merged_at": "2023-05-13T03:16:18Z"
        },
        "body": "I have been playing around with SQLDatabaseChain using some non-OpenAI models, and found some useful tips and tricks:\r\n\r\n1. Use a query checker to fix small mistakes in the model generated SQL. This is the same trick used by the SQL agent, and seems to help even with the larger models.\r\n2. Use few shot examples to improve model output, similar to what @jzluo tweeted about here: https://twitter.com/JonZLuo/status/1638638298666004483?s=20. For this, I added more intermediate steps and also returned intermediate steps in case of exceptions (so that the caller can log and add to few shot prompt examples)\r\n3. If using the sequential chain, discard invalid table names which seem to be produced more often with smaller locally hosted models.\r\n\r\nI also updated the example notebook with some ideas on how to collect few shot examples in production.\r\n\r\nI ran the following locally:\r\n1. make format\r\n2. make lint\r\n3. make test\r\n\r\nPlease let me know if there is any other formality I need to complete... first PR to this awesome project :)\r\n\r\n<img width=\"938\" alt=\"image\" src=\"https://user-images.githubusercontent.com/749277/235078036-35a3a43c-8b4c-4ed2-a9fb-c10e1ed2c89d.png\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3636/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3636/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3635",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3635/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3635/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3635/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3635",
        "id": 1686163658,
        "node_id": "PR_kwDOIPDwls5PQrZo",
        "number": 3635,
        "title": "add tair for vector store",
        "user": {
            "login": "seth-hg",
            "id": 848849,
            "node_id": "MDQ6VXNlcjg0ODg0OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/848849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seth-hg",
            "html_url": "https://github.com/seth-hg",
            "followers_url": "https://api.github.com/users/seth-hg/followers",
            "following_url": "https://api.github.com/users/seth-hg/following{/other_user}",
            "gists_url": "https://api.github.com/users/seth-hg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seth-hg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seth-hg/subscriptions",
            "organizations_url": "https://api.github.com/users/seth-hg/orgs",
            "repos_url": "https://api.github.com/users/seth-hg/repos",
            "events_url": "https://api.github.com/users/seth-hg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seth-hg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-27T05:55:57Z",
        "updated_at": "2023-04-29T04:01:13Z",
        "closed_at": "2023-04-29T04:01:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3635",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3635",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3635.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3635.patch",
            "merged_at": "2023-04-29T04:01:13Z"
        },
        "body": "This PR adds Tair integration as a new vector store.\r\n\r\nTair is a Redis compatible cloud-native in-memory database developed by Alibaba Cloud. It has an extension named TairVector which can be used as vector store. So I think this would help.\r\n\r\nIntegration tests and example notebook are also included in this PR. I have followed the contributing guidelines and passed the tests bellow:\r\n- [x] make format\r\n- [x] make lint\r\n- [x] make coverage\r\n- [x] make test",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3635/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3635/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3634",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3634/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3634/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3634/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3634",
        "id": 1686148549,
        "node_id": "PR_kwDOIPDwls5PQoNw",
        "number": 3634,
        "title": "Harrison/lancedb",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-27T05:37:32Z",
        "updated_at": "2023-04-27T15:14:37Z",
        "closed_at": "2023-04-27T15:14:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3634",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3634",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3634.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3634.patch",
            "merged_at": "2023-04-27T15:14:36Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3634/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3634/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3633",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3633/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3633/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3633/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3633",
        "id": 1686139134,
        "node_id": "I_kwDOIPDwls5kgHD-",
        "number": 3633,
        "title": "Unable to call VectorDBQAChain from Executor",
        "user": {
            "login": "LiveBacteria",
            "id": 43526510,
            "node_id": "MDQ6VXNlcjQzNTI2NTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/43526510?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LiveBacteria",
            "html_url": "https://github.com/LiveBacteria",
            "followers_url": "https://api.github.com/users/LiveBacteria/followers",
            "following_url": "https://api.github.com/users/LiveBacteria/following{/other_user}",
            "gists_url": "https://api.github.com/users/LiveBacteria/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LiveBacteria/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LiveBacteria/subscriptions",
            "organizations_url": "https://api.github.com/users/LiveBacteria/orgs",
            "repos_url": "https://api.github.com/users/LiveBacteria/repos",
            "events_url": "https://api.github.com/users/LiveBacteria/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LiveBacteria/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-27T05:25:14Z",
        "updated_at": "2023-04-27T17:40:28Z",
        "closed_at": "2023-04-27T17:40:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello all,\r\n\r\nI have been struggling for the past few days attempting to allow an agent.executor call to reference a text file as a VectorStore and determine the best response, then respond. When the agent eventually calls the VectorDBQAChain chain, it throws the below error stating the inability to redefine run().\r\n\r\nAny input here is much appreciated.\r\n\r\nEven a basic setup throws an error stating:\r\n```\r\n.\\projectPath\\node_modules\\langchain\\dist\\chains\\base.cjs:64\r\n        Object.defineProperty(outputValues, index_js_1.RUN_KEY, {\r\n               ^\r\n\r\nTypeError: Cannot redefine property: __run\r\n    at Function.defineProperty (<anonymous>)\r\n    at VectorDBQAChain.call (C:\\Users\\Tyler\\Documents\\RMMZ\\GPTales-InteractiveNPC\\node_modules\\langchain\\dist\\chains\\base.cjs:64:16)\r\n    at process.processTicksAndRejections (node:internal/process/task_queues:95:5)\r\n    at async VectorDBQAChain.run (C:\\Users\\Tyler\\Documents\\RMMZ\\GPTales-InteractiveNPC\\node_modules\\langchain\\dist\\chains\\base.cjs:29:30)\r\n    at async ChainTool.call (C:\\Users\\Tyler\\Documents\\RMMZ\\GPTales-InteractiveNPC\\node_modules\\langchain\\dist\\tools\\base.cjs:23:22)\r\n    at async C:\\Users\\Tyler\\Documents\\RMMZ\\GPTales-InteractiveNPC\\node_modules\\langchain\\dist\\agents\\executor.cjs:101:23\r\n    at async Promise.all (index 0)\r\n    at async AgentExecutor._call (C:\\Users\\Tyler\\Documents\\RMMZ\\GPTales-InteractiveNPC\\node_modules\\langchain\\dist\\agents\\executor.cjs:97:30)\r\n    at async AgentExecutor.call (C:\\Users\\Tyler\\Documents\\RMMZ\\GPTales-InteractiveNPC\\node_modules\\langchain\\dist\\chains\\base.cjs:53:28)\r\n    at async run (C:\\Users\\Tyler\\Documents\\RMMZ\\GPTales-InteractiveNPC\\Game\\js\\plugins\\GPTales\\example.js:79:19)\r\n\r\nNode.js v19.7.0\r\n```\r\n\r\nCode:\r\n\r\n```\r\nconst run = async () => {\r\n  console.log(\"Starting.\");\r\n  console.log(process.env.OPENAI_API_KEY);\r\n  process.env.LANGCHAIN_HANDLER = \"langchain\";\r\n\r\n  const gameLorePath = path.join(__dirname, \"yuri.txt\");\r\n  const text = fs.readFileSync(gameLorePath, \"utf8\");\r\n\r\n  const textSplitter = new RecursiveCharacterTextSplitter({\r\n    chunkSize: 1000,\r\n  });\r\n  const docs = await textSplitter.createDocuments([text]);\r\n  const vectorStore = await HNSWLib.fromDocuments(docs, new OpenAIEmbeddings());\r\n\r\n  const model = new ChatOpenAI({\r\n    temperature: 0,\r\n    api_key: process.env.OPENAI_API_KEY,\r\n  });\r\n\r\n  const chain = VectorDBQAChain.fromLLM(model, vectorStore);\r\n\r\n  const characterContextTool = new ChainTool({\r\n    name: \"character-contextTool-tool\",\r\n    description:\r\n      \"Context for the character - used for querying context of lore(bio, personality, appearance, etc), characters, events, environments, essentially all aspects of the character and their history.\",\r\n    chain: chain,\r\n  });\r\n\r\n  const tools = [new Calculator(), characterContextTool];\r\n\r\n  // Passing \"chat-conversational-react-description\" as the agent type\r\n  // automatically creates and uses BufferMemory with the executor.\r\n  // If you would like to override this, you can pass in a custom\r\n  // memory option, but the memoryKey set on it must be \"chat_history\".\r\n  const executor = await initializeAgentExecutorWithOptions(tools, model, {\r\n    agentType: \"chat-conversational-react-description\",\r\n    verbose: true,\r\n  });\r\n  console.log(\"Loaded agent.\");\r\n\r\n  const input0 =\r\n    \"hi, i am bob. use the character context tool to best decide how to respond considering all facets of the character.\";\r\n\r\n  const result0 = await executor.call({ input: input0 });\r\n\r\n  console.log(`Got output ${result0.output}`);\r\n\r\n  const input1 = \"whats your name?\";\r\n\r\n  const result1 = await executor.call({ input: input1 });\r\n\r\n  console.log(`Got output ${result1.output}`);\r\n};\r\n\r\nrun();\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3633/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3633/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3632",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3632/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3632/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3632/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3632",
        "id": 1686138122,
        "node_id": "I_kwDOIPDwls5kgG0K",
        "number": 3632,
        "title": "KeyError: 'Could not automatically map azure-resource to a tokeniser. Arising when using the text-embeddings-ada-002 model.",
        "user": {
            "login": "laveshnk-crypto",
            "id": 60281257,
            "node_id": "MDQ6VXNlcjYwMjgxMjU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/60281257?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laveshnk-crypto",
            "html_url": "https://github.com/laveshnk-crypto",
            "followers_url": "https://api.github.com/users/laveshnk-crypto/followers",
            "following_url": "https://api.github.com/users/laveshnk-crypto/following{/other_user}",
            "gists_url": "https://api.github.com/users/laveshnk-crypto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laveshnk-crypto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laveshnk-crypto/subscriptions",
            "organizations_url": "https://api.github.com/users/laveshnk-crypto/orgs",
            "repos_url": "https://api.github.com/users/laveshnk-crypto/repos",
            "events_url": "https://api.github.com/users/laveshnk-crypto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laveshnk-crypto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-27T05:23:59Z",
        "updated_at": "2023-04-30T14:54:06Z",
        "closed_at": "2023-04-30T14:54:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am facing an issue when using the embeddings model that Azure OpenAI offers. Please help. Heres the code below. Assume the azure resource name is azure-resource. This issue is only arising with the text-embeddings-ada-002 model, nothing else\r\n\r\n```\r\nos.environ[\"OPENAI_API_KEY\"] = API_KEY\r\n\r\n# Loading the document using PyPDFLoader\r\nloader = PyPDFLoader('xxx')\r\n\r\n# Splitting the document into chunks\r\npages = loader.load_and_split()\r\n\r\n# Creating your embeddings instance\r\nembeddings = OpenAIEmbeddings(\r\n    model = \"azure-resource\",\r\n)\r\n\r\n# Creating your vector db\r\ndb = FAISS.from_documents(pages, embeddings)\r\n\r\nquery = \"some-query\"\r\ndocs = db.similarity_search(query)\r\n```\r\n\r\nMy error:\r\n`KeyError: 'Could not automatically map azure-resource to a tokeniser. Please use `tiktok.get_encoding` to explicitly get the tokeniser you expect.'`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3632/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3632/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3631",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3631/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3631/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3631/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3631",
        "id": 1686102155,
        "node_id": "PR_kwDOIPDwls5PQeOw",
        "number": 3631,
        "title": "Harrison/opensearch logic",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-27T04:41:11Z",
        "updated_at": "2023-04-27T05:08:05Z",
        "closed_at": "2023-04-27T05:08:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3631",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3631",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3631.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3631.patch",
            "merged_at": "2023-04-27T05:08:03Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3631/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3631/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3630",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3630/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3630/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3630/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3630",
        "id": 1686039035,
        "node_id": "PR_kwDOIPDwls5PQQMK",
        "number": 3630,
        "title": "update example of ConstitutionalChain.from_llm",
        "user": {
            "login": "piotrm0",
            "id": 421701,
            "node_id": "MDQ6VXNlcjQyMTcwMQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/421701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/piotrm0",
            "html_url": "https://github.com/piotrm0",
            "followers_url": "https://api.github.com/users/piotrm0/followers",
            "following_url": "https://api.github.com/users/piotrm0/following{/other_user}",
            "gists_url": "https://api.github.com/users/piotrm0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/piotrm0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/piotrm0/subscriptions",
            "organizations_url": "https://api.github.com/users/piotrm0/orgs",
            "repos_url": "https://api.github.com/users/piotrm0/repos",
            "events_url": "https://api.github.com/users/piotrm0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/piotrm0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-27T03:43:35Z",
        "updated_at": "2023-04-27T18:17:32Z",
        "closed_at": "2023-04-27T18:17:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3630",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3630",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3630.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3630.patch",
            "merged_at": "2023-04-27T18:17:32Z"
        },
        "body": "Example code was missing an argument and import. Fixed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3630/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3630/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3629",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3629/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3629/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3629/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3629",
        "id": 1685909454,
        "node_id": "PR_kwDOIPDwls5PP1Ro",
        "number": 3629,
        "title": "new example: multiagent dialogue with decentralized speaker selection",
        "user": {
            "login": "mbchang",
            "id": 6439365,
            "node_id": "MDQ6VXNlcjY0MzkzNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6439365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbchang",
            "html_url": "https://github.com/mbchang",
            "followers_url": "https://api.github.com/users/mbchang/followers",
            "following_url": "https://api.github.com/users/mbchang/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbchang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbchang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbchang/subscriptions",
            "organizations_url": "https://api.github.com/users/mbchang/orgs",
            "repos_url": "https://api.github.com/users/mbchang/repos",
            "events_url": "https://api.github.com/users/mbchang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbchang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-27T00:25:01Z",
        "updated_at": "2023-04-27T04:37:37Z",
        "closed_at": "2023-04-27T04:37:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3629",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3629",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3629.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3629.patch",
            "merged_at": "2023-04-27T04:37:36Z"
        },
        "body": "This notebook showcases how to implement a multi-agent simulation without a fixed schedule for who speaks when. Instead the agents decide for themselves who speaks. We can implement this by having each agent bid to speak. Whichever agent's bid is the highest gets to speak.\r\n\r\nWe will show how to do this in the example below that showcases a fictitious presidential debate.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3629/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3629/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3628",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3628/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3628/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3628/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3628",
        "id": 1685907595,
        "node_id": "I_kwDOIPDwls5kfOiL",
        "number": 3628,
        "title": "Chroma.py max_marginal_relevance_search_by_vector method currently broken",
        "user": {
            "login": "derekmoeller",
            "id": 69225105,
            "node_id": "MDQ6VXNlcjY5MjI1MTA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/69225105?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/derekmoeller",
            "html_url": "https://github.com/derekmoeller",
            "followers_url": "https://api.github.com/users/derekmoeller/followers",
            "following_url": "https://api.github.com/users/derekmoeller/following{/other_user}",
            "gists_url": "https://api.github.com/users/derekmoeller/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/derekmoeller/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/derekmoeller/subscriptions",
            "organizations_url": "https://api.github.com/users/derekmoeller/orgs",
            "repos_url": "https://api.github.com/users/derekmoeller/repos",
            "events_url": "https://api.github.com/users/derekmoeller/events{/privacy}",
            "received_events_url": "https://api.github.com/users/derekmoeller/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-04-27T00:21:42Z",
        "updated_at": "2023-05-01T17:47:17Z",
        "closed_at": "2023-05-01T17:47:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Using MMR with Chroma currently does not work because the max_marginal_relevance_search_by_vector method calls self.__query_collection with the parameter \"include:\", but \"include\" is not an accepted parameter for __query_collection. This appears to be a regression introduced with #3372 \r\n\r\nExcerpt from max_marginal_relevance_search_by_vector method:\r\n```\r\n        results = self.__query_collection(\r\n            query_embeddings=embedding,\r\n            n_results=fetch_k,\r\n            where=filter,\r\n            include=[\"metadatas\", \"documents\", \"distances\", \"embeddings\"],\r\n        )\r\n```  \r\n  __query_collection does not accept include:\r\n```\r\n    def __query_collection(\r\n        self,\r\n        query_texts: Optional[List[str]] = None,\r\n        query_embeddings: Optional[List[List[float]]] = None,\r\n        n_results: int = 4,\r\n        where: Optional[Dict[str, str]] = None,\r\n    ) -> List[Document]:\r\n```\r\n\r\nThis results in an unexpected keyword error. \r\n\r\nThe short term fix is to use self._collection.query instead of self.__query_collection in max_marginal_relevance_search_by_vector, although that loses the protection when the user requests more records than exist in the store.\r\n\r\n```\r\n        results = self._collection.query(\r\n            query_embeddings=embedding,\r\n            n_results=fetch_k,\r\n            where=filter,\r\n            include=[\"metadatas\", \"documents\", \"distances\", \"embeddings\"],\r\n        )\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3628/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3628/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3627",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3627/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3627/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3627/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3627",
        "id": 1685902803,
        "node_id": "PR_kwDOIPDwls5PPz63",
        "number": 3627,
        "title": "`Arxiv` document loader",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-27T00:13:23Z",
        "updated_at": "2023-04-27T04:18:54Z",
        "closed_at": "2023-04-27T04:04:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3627",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3627",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3627.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3627.patch",
            "merged_at": "2023-04-27T04:04:57Z"
        },
        "body": "It makes sense to use `arxiv` as another source of the documents for downloading.\r\n- Added the `arxiv` document_loader, based on the `utilities/arxiv.py:ArxivAPIWrapper` \r\n- added tests\r\n- added an example notebook\r\n- sorted `__all__` in `__init__.py` (otherwise it is hard to find a class in the very long list)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3627/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3627/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3626",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3626/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3626/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3626/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3626",
        "id": 1685889549,
        "node_id": "PR_kwDOIPDwls5PPxF2",
        "number": 3626,
        "title": "Add Tecton example to the \"Connecting to a Feature Store\" example notebook",
        "user": {
            "login": "brian-tecton-ai",
            "id": 69700358,
            "node_id": "MDQ6VXNlcjY5NzAwMzU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/69700358?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brian-tecton-ai",
            "html_url": "https://github.com/brian-tecton-ai",
            "followers_url": "https://api.github.com/users/brian-tecton-ai/followers",
            "following_url": "https://api.github.com/users/brian-tecton-ai/following{/other_user}",
            "gists_url": "https://api.github.com/users/brian-tecton-ai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brian-tecton-ai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brian-tecton-ai/subscriptions",
            "organizations_url": "https://api.github.com/users/brian-tecton-ai/orgs",
            "repos_url": "https://api.github.com/users/brian-tecton-ai/repos",
            "events_url": "https://api.github.com/users/brian-tecton-ai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brian-tecton-ai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T23:58:36Z",
        "updated_at": "2023-04-28T14:32:06Z",
        "closed_at": "2023-04-27T04:38:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3626",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3626",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3626.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3626.patch",
            "merged_at": "2023-04-27T04:38:51Z"
        },
        "body": "This PR adds a similar example to the Feast example, using the [Tecton Feature Platform](https://www.tecton.ai/) and features from the [Tecton Fundamentals Tutorial](https://docs.tecton.ai/docs/tutorials/tecton-fundamentals).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3626/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3626/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3625",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3625/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3625/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3625/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3625",
        "id": 1685884044,
        "node_id": "PR_kwDOIPDwls5PPv6F",
        "number": 3625,
        "title": "Weaviate client & Time weighted retriever fixes for generative agents",
        "user": {
            "login": "Ryangr0",
            "id": 3602480,
            "node_id": "MDQ6VXNlcjM2MDI0ODA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3602480?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ryangr0",
            "html_url": "https://github.com/Ryangr0",
            "followers_url": "https://api.github.com/users/Ryangr0/followers",
            "following_url": "https://api.github.com/users/Ryangr0/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ryangr0/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ryangr0/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ryangr0/subscriptions",
            "organizations_url": "https://api.github.com/users/Ryangr0/orgs",
            "repos_url": "https://api.github.com/users/Ryangr0/repos",
            "events_url": "https://api.github.com/users/Ryangr0/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ryangr0/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T23:50:40Z",
        "updated_at": "2023-05-01T19:01:26Z",
        "closed_at": "2023-05-01T19:01:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3625",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3625",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3625.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3625.patch",
            "merged_at": "2023-05-01T19:01:26Z"
        },
        "body": "Title says it all, I accidentally closed the last PR: #3369 \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3625/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3625/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3624",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3624/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3624/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3624/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3624",
        "id": 1685880259,
        "node_id": "PR_kwDOIPDwls5PPvHe",
        "number": 3624,
        "title": "fix opensearch create index logic ",
        "user": {
            "login": "engineer-matsuo",
            "id": 95115586,
            "node_id": "U_kgDOBatZQg",
            "avatar_url": "https://avatars.githubusercontent.com/u/95115586?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/engineer-matsuo",
            "html_url": "https://github.com/engineer-matsuo",
            "followers_url": "https://api.github.com/users/engineer-matsuo/followers",
            "following_url": "https://api.github.com/users/engineer-matsuo/following{/other_user}",
            "gists_url": "https://api.github.com/users/engineer-matsuo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/engineer-matsuo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/engineer-matsuo/subscriptions",
            "organizations_url": "https://api.github.com/users/engineer-matsuo/orgs",
            "repos_url": "https://api.github.com/users/engineer-matsuo/repos",
            "events_url": "https://api.github.com/users/engineer-matsuo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/engineer-matsuo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T23:43:32Z",
        "updated_at": "2023-04-27T04:40:44Z",
        "closed_at": "2023-04-27T04:40:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3624",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3624",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3624.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3624.patch",
            "merged_at": "2023-04-27T04:40:44Z"
        },
        "body": "fix #3473\r\n\r\nThe code has been corrected and verified to work, but make integration_tests is not working due to platform dependent issues.\r\nAll other commands are complete.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3624/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3624/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3623",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3623/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3623/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3623/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3623",
        "id": 1685870712,
        "node_id": "I_kwDOIPDwls5kfFh4",
        "number": 3623,
        "title": "Bug: deeplake cosine distance search error",
        "user": {
            "login": "SimonB97",
            "id": 102378134,
            "node_id": "U_kgDOBhoqlg",
            "avatar_url": "https://avatars.githubusercontent.com/u/102378134?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SimonB97",
            "html_url": "https://github.com/SimonB97",
            "followers_url": "https://api.github.com/users/SimonB97/followers",
            "following_url": "https://api.github.com/users/SimonB97/following{/other_user}",
            "gists_url": "https://api.github.com/users/SimonB97/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SimonB97/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SimonB97/subscriptions",
            "organizations_url": "https://api.github.com/users/SimonB97/orgs",
            "repos_url": "https://api.github.com/users/SimonB97/repos",
            "events_url": "https://api.github.com/users/SimonB97/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SimonB97/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-26T23:27:06Z",
        "updated_at": "2023-09-10T16:26:16Z",
        "closed_at": "2023-09-10T16:26:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi, i'm using deeplake with the ConversationalRetrievalBuffer (just like in this brand new guide [code understanding](https://python.langchain.com/en/latest/use_cases/code/code-analysis-deeplake.html#prepare-data) encountering the following error when calling:\r\n\r\n`answer = chain({\"question\": user_input, \"chat_history\": chat_history['history']})`\r\n\r\nerror:\r\n```\r\n File \"C:\\Users\\sbene\\Projects\\GitChat\\src\\chatbot.py\", line 446, in generate_answer\r\n    answer = chain({\"question\": user_input, \"chat_history\": chat_history['history']})\r\n  File \"C:\\Users\\sbene\\miniconda3\\envs\\gitchat\\lib\\site-packages\\langchain\\chains\\base.py\", line 116, in __call__\r\n    raise e\r\n  File \"C:\\Users\\sbene\\miniconda3\\envs\\gitchat\\lib\\site-packages\\langchain\\chains\\base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n  File \"C:\\Users\\sbene\\miniconda3\\envs\\gitchat\\lib\\site-packages\\langchain\\chains\\conversational_retrieval\\base.py\", line 95, in _call\r\n    docs = self._get_docs(new_question, inputs)\r\n  File \"C:\\Users\\sbene\\miniconda3\\envs\\gitchat\\lib\\site-packages\\langchain\\chains\\conversational_retrieval\\base.py\", line 162, in _get_docs\r\n    docs = self.retriever.get_relevant_documents(question)\r\n  File \"C:\\Users\\sbene\\miniconda3\\envs\\gitchat\\lib\\site-packages\\langchain\\vectorstores\\base.py\", line 279, in get_relevant_documents\r\n    docs = self.vectorstore.similarity_search(query, **self.search_kwargs)\r\n  File \"C:\\Users\\sbene\\miniconda3\\envs\\gitchat\\lib\\site-packages\\langchain\\vectorstores\\deeplake.py\", line 350, in similarity_search\r\n    return self.search(query=query, k=k, **kwargs)\r\n  File \"C:\\Users\\sbene\\miniconda3\\envs\\gitchat\\lib\\site-packages\\langchain\\vectorstores\\deeplake.py\", line 294, in search\r\n    indices, scores = vector_search(\r\n  File \"C:\\Users\\sbene\\miniconda3\\envs\\gitchat\\lib\\site-packages\\langchain\\vectorstores\\deeplake.py\", line 51, in vector_search\r\n    nearest_indices[::-1][:k] if distance_metric in [\"cos\"] else nearest_indices[:k]\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3623/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3623/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3622",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3622/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3622/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3622/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3622",
        "id": 1685858023,
        "node_id": "I_kwDOIPDwls5kfCbn",
        "number": 3622,
        "title": "Non OpenAI models",
        "user": {
            "login": "darth-veitcher",
            "id": 1722315,
            "node_id": "MDQ6VXNlcjE3MjIzMTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1722315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/darth-veitcher",
            "html_url": "https://github.com/darth-veitcher",
            "followers_url": "https://api.github.com/users/darth-veitcher/followers",
            "following_url": "https://api.github.com/users/darth-veitcher/following{/other_user}",
            "gists_url": "https://api.github.com/users/darth-veitcher/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/darth-veitcher/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/darth-veitcher/subscriptions",
            "organizations_url": "https://api.github.com/users/darth-veitcher/orgs",
            "repos_url": "https://api.github.com/users/darth-veitcher/repos",
            "events_url": "https://api.github.com/users/darth-veitcher/events{/privacy}",
            "received_events_url": "https://api.github.com/users/darth-veitcher/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-26T23:06:51Z",
        "updated_at": "2023-09-17T17:22:03Z",
        "closed_at": "2023-09-17T17:22:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "It would be good to get some more documentation and examples of using models other than OpenAI. Currently the docs are really heavily skewed and in some areas such as conversation only offer an OpenAI option. \r\n\r\nThanks",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3622/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 3,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3622/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3621",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3621/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3621/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3621/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3621",
        "id": 1685837569,
        "node_id": "I_kwDOIPDwls5ke9cB",
        "number": 3621,
        "title": "ConversationalRetrievalChain with CSV file limited to first 4 rows of data",
        "user": {
            "login": "davidmcomfort",
            "id": 51140565,
            "node_id": "MDQ6VXNlcjUxMTQwNTY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/51140565?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidmcomfort",
            "html_url": "https://github.com/davidmcomfort",
            "followers_url": "https://api.github.com/users/davidmcomfort/followers",
            "following_url": "https://api.github.com/users/davidmcomfort/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidmcomfort/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidmcomfort/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidmcomfort/subscriptions",
            "organizations_url": "https://api.github.com/users/davidmcomfort/orgs",
            "repos_url": "https://api.github.com/users/davidmcomfort/repos",
            "events_url": "https://api.github.com/users/davidmcomfort/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidmcomfort/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-04-26T22:38:48Z",
        "updated_at": "2023-09-01T07:29:44Z",
        "closed_at": "2023-04-28T16:32:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am having issues with using ConversationalRetrievalChain to chat with a CSV file. It only recognizes the first four rows of a CSV file. \r\n\r\n```\r\nloader = CSVLoader(file_path=filepath, encoding=\"utf-8\")\r\ndata = loader.load()\r\n\r\nembeddings = OpenAIEmbeddings(openai_api_key=openai_api_key)\r\nvectorstore = FAISS.from_documents(data, embeddings)\r\n\r\n_template = \"\"\"Given the following conversation and a follow-up question, rephrase the follow-up question to be a standalone question.\r\n    Chat History:\r\n    {chat_history}\r\n    Follow-up entry: {question}\r\n    Standalone question:\"\"\"\r\n\r\nCONDENSE_QUESTION_PROMPT = PromptTemplate.from_template(_template)\r\n\r\nqa_template = \"\"\"\"You are an AI conversational assistant to answer questions based on a context.\r\nYou are given data from a csv file and a question, you must help the user find the information they need. \r\nYour answers should be friendly, in the same language.\r\nquestion: {question}\r\n=========\r\ncontext: {context}\r\n=======\r\n\"\"\"\r\n\r\nQA_PROMPT = PromptTemplate(template=qa_template, input_variables=[\"question\", \"context\"])\r\n\r\nmodel_name = 'gpt-4'\r\n\r\nfrom langchain.memory import ConversationBufferMemory\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\n\r\nchain = ConversationalRetrievalChain.from_llm(\r\nllm = ChatOpenAI(temperature=0.0, \r\nmodel_name=model_name,\r\n    openai_api_key=openai_api_key, \r\n    request_timeout=120),\r\nretriever=vectorstore.as_retriever(),\r\n memory=memory)\r\n\r\nquery = \"\"\"\r\nHow many headlines are in this data set\r\n\"\"\"\r\n\r\nresult = chain({\"question\": query,})\r\n\r\nresult[ 'answer']\r\n```\r\nThe response is `There are four rows in this data set.`\r\n\r\nThe data length is 151 lines so I know that this step is working properly. Could this be a token limitation of OpenAI?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3621/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3621/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3620",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3620/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3620/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3620/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3620",
        "id": 1685815256,
        "node_id": "PR_kwDOIPDwls5PPhQ5",
        "number": 3620,
        "title": "Align names of search tools",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T22:10:39Z",
        "updated_at": "2023-04-26T23:21:36Z",
        "closed_at": "2023-04-26T23:21:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3620",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3620",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3620.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3620.patch",
            "merged_at": "2023-04-26T23:21:35Z"
        },
        "body": "Tools for Bing, DDG and Google weren't consistent even though the underlying implementations were.\r\nAll three services now have the same tools and implementations to easily switch and experiment when building chains.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3620/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3620/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3618",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3618/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3618/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3618/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3618",
        "id": 1685667945,
        "node_id": "PR_kwDOIPDwls5PPAcE",
        "number": 3618,
        "title": "Structured Tool Refactor",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T20:25:37Z",
        "updated_at": "2023-04-28T07:44:24Z",
        "closed_at": "2023-04-28T07:44:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3618",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3618",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3618.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3618.patch",
            "merged_at": null
        },
        "body": "Overall approach:\r\n\r\n- Create new BaseStructuredTool\r\n- BaseTool now inherits from BaseStructuredTool. Wraps string input as a dict to reuse structured tool input. Still some weird handling that's not directly related to this PR for handling json string tools in the Chat Agent\r\n\r\n\r\nAreas of debate:\r\n1.  Signature of `_run/_arun`\r\n  Currently, I have it be all args/kwargs\r\n  ```\r\n  @abstractmethod\r\n      def _run(self, *args: Any, **kwargs: Any) -> OUTPUT_T:\r\n          \"\"\"Use the tool.\"\"\"\r\n  ```\r\n  \r\nI prefer this to the alternative of:\r\n  ```python\r\n  @abstractmethod\r\n      def _run(self, tool_input: SCHEMA_T) -> OUTPUT_T:\r\n          \"\"\"Use the tool.\"\"\"\r\n  ```\r\n  \r\n  where `SCHEMA_T` is a generic bound to either str or base model. This is due to a few tradeoffs:\r\n- necessitates the `args` property as a dict, which gets messy\r\n- Adds generics users must reason about\r\n- Adds an additional class (in my implementation here: https://github.com/hwchase17/langchain/tree/vwp/structured_tools_with_pyd\r\n)\r\n\r\n\r\n\r\nThis PR is telated to feedback from previous draft https://github.com/hwchase17/langchain/pull/3572\r\n\r\nIf it looks good, I'll update the docs and sequence some other PRs to add more tool tests\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3618/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3618/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3617",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3617/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3617/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3617/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3617",
        "id": 1685654780,
        "node_id": "I_kwDOIPDwls5keQz8",
        "number": 3617,
        "title": "BaseConversationalRetrievalChain raising error when no Documents are matched",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-26T20:15:11Z",
        "updated_at": "2023-09-10T16:26:25Z",
        "closed_at": "2023-09-10T16:26:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "if the line in BaseConversationalRetrievalChain::_call() (in chains/conversational_retrieval/base.py):\r\n```\r\ndocs = self._get_docs(new_question, inputs)\r\n```\r\n\r\nreturns an empty list of docs, then a subsequent line in the same method:\r\n```\r\nanswer, _ = self.combine_docs_chain.combine_docs(docs, **new_inputs)\r\n```\r\n\r\nwill result in an error due to the CombineDocsProtocol.combine_docs() line:\r\n```\r\nresults = self.llm_chain.apply(\r\n            # FYI - this is parallelized and so it is fast.\r\n            [{**{self.document_variable_name: d.page_content}, **kwargs} for d in docs]\r\n        )\r\n```\r\n\r\nwhich will pass an empty \"input_list\" arg to LLMChain.apply().  LLMChain.apply() doesn't like an empty input_list.\r\n\r\nShould docs be non-empty in all cases?  If the vectorstore is empty, wouldn't it match 0 docs and then shouldn't that be handled more gracefully?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3617/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3617/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3615",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3615/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3615/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3615/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3615",
        "id": 1685632646,
        "node_id": "I_kwDOIPDwls5keLaG",
        "number": 3615,
        "title": "Human as a Tool Documentation Out of Date",
        "user": {
            "login": "alwinraju",
            "id": 34244581,
            "node_id": "MDQ6VXNlcjM0MjQ0NTgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/34244581?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alwinraju",
            "html_url": "https://github.com/alwinraju",
            "followers_url": "https://api.github.com/users/alwinraju/followers",
            "following_url": "https://api.github.com/users/alwinraju/following{/other_user}",
            "gists_url": "https://api.github.com/users/alwinraju/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alwinraju/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alwinraju/subscriptions",
            "organizations_url": "https://api.github.com/users/alwinraju/orgs",
            "repos_url": "https://api.github.com/users/alwinraju/repos",
            "events_url": "https://api.github.com/users/alwinraju/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alwinraju/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-04-26T19:58:50Z",
        "updated_at": "2023-04-26T22:11:05Z",
        "closed_at": "2023-04-26T22:11:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When executing the code for Human as a tool taken directly from documentation I get the following error: \r\n\r\n```\r\nImportError                               Traceback (most recent call last)\r\n[/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/delete.ipynb](https://file+.vscode-resource.vscode-cdn.net/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/delete.ipynb) Cell 2 in 5\r\n      [3](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/delete.ipynb#W1sZmlsZQ%3D%3D?line=2) from langchain.llms import OpenAI\r\n      [4](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/delete.ipynb#W1sZmlsZQ%3D%3D?line=3) from langchain.agents import load_tools, initialize_agent\r\n----> [5](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/delete.ipynb#W1sZmlsZQ%3D%3D?line=4) from langchain.agents import AgentType\r\n      [7](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/delete.ipynb#W1sZmlsZQ%3D%3D?line=6) llm = ChatOpenAI(temperature=0.0)\r\n      [8](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/delete.ipynb#W1sZmlsZQ%3D%3D?line=7) math_llm = OpenAI(temperature=0.0)\r\n\r\nImportError: cannot import name 'AgentType' from 'langchain.agents' ([/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/agents/__init__.py](https://file+.vscode-resource.vscode-cdn.net/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/agents/__init__.py))\r\n```\r\n\r\nEven when commenting out the  'from langchain.agents import AgentType' and switching the agent like so 'agent=\"zero-shot-react-description\"' I still get the following error: \r\n\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n[/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb](https://file+.vscode-resource.vscode-cdn.net/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb) Cell 4 in 7\r\n      [4](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb#W3sZmlsZQ%3D%3D?line=3) os.environ['WOLFRAM_ALPHA_APPID'] = creds.WOLFRAM_ALPHA_APPID\r\n      [6](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb#W3sZmlsZQ%3D%3D?line=5) llm = OpenAI(temperature=0.0, model_name = \"gpt-3.5-turbo\")\r\n----> [7](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb#W3sZmlsZQ%3D%3D?line=6) tools = load_tools([\"python_repl\",\r\n      [8](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb#W3sZmlsZQ%3D%3D?line=7)                     \"terminal\",\r\n      [9](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb#W3sZmlsZQ%3D%3D?line=8)                     \"wolfram-alpha\",\r\n     [10](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb#W3sZmlsZQ%3D%3D?line=9)                     \"human\",\r\n     [11](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb#W3sZmlsZQ%3D%3D?line=10)                     # \"serpapi\",\r\n     [12](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb#W3sZmlsZQ%3D%3D?line=11)                     # \"wikipedia\",\r\n     [13](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb#W3sZmlsZQ%3D%3D?line=12)                     \"requests\",\r\n     [14](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb#W3sZmlsZQ%3D%3D?line=13)                     ],)\r\n     [16](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb#W3sZmlsZQ%3D%3D?line=15) agent = initialize_agent(tools,\r\n     [17](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb#W3sZmlsZQ%3D%3D?line=16)                              llm,\r\n     [18](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb#W3sZmlsZQ%3D%3D?line=17)                              agent=\"zero-shot-react-description\",\r\n     [19](vscode-notebook-cell:/Users/anonymous/Library/CloudStorage/OneDrive-UniversityCollegeLondon/Python_Projects/LangChain/AGI.ipynb#W3sZmlsZQ%3D%3D?line=18)                              verbose=True)\r\n\r\nFile [/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/agents/load_tools.py:236](https://file+.vscode-resource.vscode-cdn.net/Library/Frameworks/Python.framework/Versions/3.11/lib/python3.11/site-packages/langchain/agents/load_tools.py:236), in load_tools(tool_names, llm, callback_manager, **kwargs)\r\n    234         tools.append(tool)\r\n    235     else:\r\n--> 236         raise ValueError(f\"Got unknown tool {name}\")\r\n    237 return tools\r\n\r\nValueError: Got unknown tool human\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3615/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3615/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3614",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3614/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3614/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3614/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3614",
        "id": 1685591476,
        "node_id": "PR_kwDOIPDwls5POvyJ",
        "number": 3614,
        "title": "Fix Replicate llm response to handle iterator / multiple outputs",
        "user": {
            "login": "cbh123",
            "id": 14149230,
            "node_id": "MDQ6VXNlcjE0MTQ5MjMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/14149230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cbh123",
            "html_url": "https://github.com/cbh123",
            "followers_url": "https://api.github.com/users/cbh123/followers",
            "following_url": "https://api.github.com/users/cbh123/following{/other_user}",
            "gists_url": "https://api.github.com/users/cbh123/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cbh123/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cbh123/subscriptions",
            "organizations_url": "https://api.github.com/users/cbh123/orgs",
            "repos_url": "https://api.github.com/users/cbh123/repos",
            "events_url": "https://api.github.com/users/cbh123/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cbh123/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-26T19:29:56Z",
        "updated_at": "2023-04-27T07:31:33Z",
        "closed_at": "2023-04-26T21:26:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3614",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3614",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3614.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3614.patch",
            "merged_at": "2023-04-26T21:26:34Z"
        },
        "body": "One of our users noticed a bug when calling streaming models. This is because those models return an iterator. So, I've updated the Replicate `_call` code to join together the output. The other advantage of this fix is that if you requested multiple outputs you would get them all \u2013 previously I was just returning output[0].\r\n\r\nI also adjusted the demo docs to use dolly, because we're featuring that model right now and it's always hot, so people won't have to wait for the model to boot up.\r\n\r\nThe error that this fixes:\r\n```\r\n> llm = Replicate(model=\u201creplicate/flan-t5-xl:eec2f71c986dfa3b7a5d842d22e1130550f015720966bec48beaae059b19ef4c\u201d)\r\n>  llm(\u201chello\u201d)\r\n> Traceback (most recent call last):\r\n  File \"/Users/charlieholtz/workspace/dev/python/main.py\", line 15, in <module>\r\n    print(llm(prompt))\r\n  File \"/opt/homebrew/lib/python3.10/site-packages/langchain/llms/base.py\", line 246, in __call__\r\n    return self.generate([prompt], stop=stop).generations[0][0].text\r\n  File \"/opt/homebrew/lib/python3.10/site-packages/langchain/llms/base.py\", line 140, in generate\r\n    raise e\r\n  File \"/opt/homebrew/lib/python3.10/site-packages/langchain/llms/base.py\", line 137, in generate\r\n    output = self._generate(prompts, stop=stop)\r\n  File \"/opt/homebrew/lib/python3.10/site-packages/langchain/llms/base.py\", line 324, in _generate\r\n    text = self._call(prompt, stop=stop)\r\n  File \"/opt/homebrew/lib/python3.10/site-packages/langchain/llms/replicate.py\", line 108, in _call\r\n    return outputs[0]\r\nTypeError: 'generator' object is not subscriptable\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3614/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3614/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3613",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3613/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3613/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3613/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3613",
        "id": 1685588214,
        "node_id": "PR_kwDOIPDwls5POvEx",
        "number": 3613,
        "title": "add metal to ecosystem",
        "user": {
            "login": "softboyjimbo",
            "id": 100361543,
            "node_id": "U_kgDOBftlRw",
            "avatar_url": "https://avatars.githubusercontent.com/u/100361543?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/softboyjimbo",
            "html_url": "https://github.com/softboyjimbo",
            "followers_url": "https://api.github.com/users/softboyjimbo/followers",
            "following_url": "https://api.github.com/users/softboyjimbo/following{/other_user}",
            "gists_url": "https://api.github.com/users/softboyjimbo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/softboyjimbo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/softboyjimbo/subscriptions",
            "organizations_url": "https://api.github.com/users/softboyjimbo/orgs",
            "repos_url": "https://api.github.com/users/softboyjimbo/repos",
            "events_url": "https://api.github.com/users/softboyjimbo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/softboyjimbo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T19:26:53Z",
        "updated_at": "2023-04-26T22:57:49Z",
        "closed_at": "2023-04-26T22:57:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3613",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3613",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3613.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3613.patch",
            "merged_at": "2023-04-26T22:57:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3613/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3613/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3612",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3612/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3612/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3612/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3612",
        "id": 1685569365,
        "node_id": "PR_kwDOIPDwls5POq9R",
        "number": 3612,
        "title": "Fixed typo for HuggingFaceHub",
        "user": {
            "login": "chirag64",
            "id": 591424,
            "node_id": "MDQ6VXNlcjU5MTQyNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/591424?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chirag64",
            "html_url": "https://github.com/chirag64",
            "followers_url": "https://api.github.com/users/chirag64/followers",
            "following_url": "https://api.github.com/users/chirag64/following{/other_user}",
            "gists_url": "https://api.github.com/users/chirag64/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chirag64/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chirag64/subscriptions",
            "organizations_url": "https://api.github.com/users/chirag64/orgs",
            "repos_url": "https://api.github.com/users/chirag64/repos",
            "events_url": "https://api.github.com/users/chirag64/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chirag64/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T19:12:38Z",
        "updated_at": "2023-04-26T21:33:31Z",
        "closed_at": "2023-04-26T21:33:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3612",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3612",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3612.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3612.patch",
            "merged_at": "2023-04-26T21:33:31Z"
        },
        "body": "The current text has a typo. This PR contains the corrected spelling for HuggingFaceHub\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3612/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3612/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3611",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3611/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3611/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3611/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3611",
        "id": 1685569287,
        "node_id": "PR_kwDOIPDwls5POq8L",
        "number": 3611,
        "title": "Close dataframe column names are being treated as one by the LLM",
        "user": {
            "login": "aole",
            "id": 4707543,
            "node_id": "MDQ6VXNlcjQ3MDc1NDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4707543?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aole",
            "html_url": "https://github.com/aole",
            "followers_url": "https://api.github.com/users/aole/followers",
            "following_url": "https://api.github.com/users/aole/following{/other_user}",
            "gists_url": "https://api.github.com/users/aole/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aole/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aole/subscriptions",
            "organizations_url": "https://api.github.com/users/aole/orgs",
            "repos_url": "https://api.github.com/users/aole/repos",
            "events_url": "https://api.github.com/users/aole/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aole/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T19:12:33Z",
        "updated_at": "2023-04-27T13:31:41Z",
        "closed_at": "2023-04-26T23:05:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3611",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3611",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3611.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3611.patch",
            "merged_at": "2023-04-26T23:05:54Z"
        },
        "body": "We are sending sample dataframe to LLM with df.head().\r\nIf the column names are close by, LLM treats two columns names as one, returning incorrect results.\r\n\r\n![image](https://user-images.githubusercontent.com/4707543/234678692-97851fa0-9e12-44db-92ec-9ad9f3545ae2.png)\r\n\r\nIn the above case the LLM uses **Org Week** as the column name instead of **Week** if asked about a specific week.\r\n\r\nReturning head() as a markdown separates out the columns names and thus using correct column name.\r\n\r\n![image](https://user-images.githubusercontent.com/4707543/234678945-c6d7b218-143e-4e70-9e17-77dc64841a49.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3611/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3611/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3610",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3610/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3610/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3610/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3610",
        "id": 1685561439,
        "node_id": "PR_kwDOIPDwls5POpNn",
        "number": 3610,
        "title": "Improve redis caching, docs, and other fixes",
        "user": {
            "login": "tylerhutcherson",
            "id": 20304844,
            "node_id": "MDQ6VXNlcjIwMzA0ODQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/20304844?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tylerhutcherson",
            "html_url": "https://github.com/tylerhutcherson",
            "followers_url": "https://api.github.com/users/tylerhutcherson/followers",
            "following_url": "https://api.github.com/users/tylerhutcherson/following{/other_user}",
            "gists_url": "https://api.github.com/users/tylerhutcherson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tylerhutcherson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tylerhutcherson/subscriptions",
            "organizations_url": "https://api.github.com/users/tylerhutcherson/orgs",
            "repos_url": "https://api.github.com/users/tylerhutcherson/repos",
            "events_url": "https://api.github.com/users/tylerhutcherson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tylerhutcherson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-26T19:06:38Z",
        "updated_at": "2023-04-29T15:55:00Z",
        "closed_at": "2023-04-29T03:22:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3610",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3610",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3610.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3610.patch",
            "merged_at": "2023-04-29T03:22:04Z"
        },
        "body": "With Redis widely used as a cache today, we added some improvements to make better use of native datastructures including HASH objects (for standard caching) and vector indices (for semantic caching).\r\n\r\nThis PR introduces a few things:\r\n\r\n1) Updates to use a HASH datastrcutre for the standard cache\r\n2) Updates to use a deterministic hashing algorithm from `hashlib`\r\n3) Adds Redis Semantic Cache as another caching variant to work with (using similarity threshold based cache hits)\r\n4) Adds new tests\r\n5) Fixes: https://github.com/hwchase17/langchain/issues/3111\r\n6) Addresses: https://github.com/hwchase17/langchain/issues/2618",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3610/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3610/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3609",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3609/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3609/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3609/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3609",
        "id": 1685505802,
        "node_id": "I_kwDOIPDwls5kdscK",
        "number": 3609,
        "title": "Multiple data sources logic ?",
        "user": {
            "login": "VladoPortos",
            "id": 11806871,
            "node_id": "MDQ6VXNlcjExODA2ODcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/11806871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/VladoPortos",
            "html_url": "https://github.com/VladoPortos",
            "followers_url": "https://api.github.com/users/VladoPortos/followers",
            "following_url": "https://api.github.com/users/VladoPortos/following{/other_user}",
            "gists_url": "https://api.github.com/users/VladoPortos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/VladoPortos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/VladoPortos/subscriptions",
            "organizations_url": "https://api.github.com/users/VladoPortos/orgs",
            "repos_url": "https://api.github.com/users/VladoPortos/repos",
            "events_url": "https://api.github.com/users/VladoPortos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/VladoPortos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-26T18:23:02Z",
        "updated_at": "2023-09-17T17:22:08Z",
        "closed_at": "2023-09-17T17:22:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello all, I would like to clarify something regarding indexes, llama connectors etc... I made simple q/a AI app using lanchain with pinecone vector DB, the vector DB is updated from local files on change to that files.. Everything works ok.\r\n\r\nNow, how or what is the logic when adding other connectors ? Do I just use the llama connector to scrape some endpoint like web or discord, and feed it to vector DB and use only one vector DB in the end to query answer?\r\n\r\nI need to query over multiple sources. How to deal with new data ? Currently, since the text files are small the pinecone index is dropped and it's recreated from scratch which does not seem to be a correct way to do it... let's say if the web changes, something is added or modified, it does not make sense to recreate the whole DB (hmm maybe I can drop stuff by source meta ? )",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3609/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3609/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3608",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3608/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3608/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3608/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3608",
        "id": 1685505184,
        "node_id": "PR_kwDOIPDwls5POdFP",
        "number": 3608,
        "title": "Fix/issue 2695",
        "user": {
            "login": "cs0lar",
            "id": 62176855,
            "node_id": "MDQ6VXNlcjYyMTc2ODU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/62176855?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cs0lar",
            "html_url": "https://github.com/cs0lar",
            "followers_url": "https://api.github.com/users/cs0lar/followers",
            "following_url": "https://api.github.com/users/cs0lar/following{/other_user}",
            "gists_url": "https://api.github.com/users/cs0lar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cs0lar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cs0lar/subscriptions",
            "organizations_url": "https://api.github.com/users/cs0lar/orgs",
            "repos_url": "https://api.github.com/users/cs0lar/repos",
            "events_url": "https://api.github.com/users/cs0lar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cs0lar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-26T18:22:28Z",
        "updated_at": "2023-04-29T10:24:27Z",
        "closed_at": "2023-04-27T04:45:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3608",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3608",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3608.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3608.patch",
            "merged_at": "2023-04-27T04:45:04Z"
        },
        "body": "## Background\r\nfixes #2695  \r\n\r\n## Changes\r\nThe `add_text` method uses the internal embedding function if one was passes to the `Weaviate` constructor.\r\nNOTE: the latest merge on the `Weaviate` class made the specification of a `weaviate_api_key` mandatory which might not be desirable for all users and connection methods (for example weaviate also support Embedded Weaviate which I am happy to add support to here if people think it's desirable). I wrapped the fetching of the api key into a try catch in order to allow the `weaviate_api_key` to be unspecified. Do let me know if this is unsatisfactory.\r\n\r\n## Test Plan\r\nadded test for `add_texts` method.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3608/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3608/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3607",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3607/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3607/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3607/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3607",
        "id": 1685494947,
        "node_id": "PR_kwDOIPDwls5POa4J",
        "number": 3607,
        "title": "Self-query with generic query constructor",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-26T18:13:44Z",
        "updated_at": "2023-05-23T15:23:19Z",
        "closed_at": "2023-04-27T15:36:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3607",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3607",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3607.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3607.patch",
            "merged_at": "2023-04-27T15:36:01Z"
        },
        "body": "Alternate implementation of #3452 that relies on a generic query constructor chain and language and then has vector store-specific translation layer. Still refactoring and updating examples but general structure is there and seems to work s well as #3452 on exampels",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3607/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3607/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3606",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3606/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3606/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3606/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3606",
        "id": 1685480734,
        "node_id": "I_kwDOIPDwls5kdmUe",
        "number": 3606,
        "title": "How can I structure  prompt temple for RetrievalQAWithSourcesChain with ChatOpenAI model",
        "user": {
            "login": "SaaS1973",
            "id": 122426952,
            "node_id": "U_kgDOB0wWSA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122426952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SaaS1973",
            "html_url": "https://github.com/SaaS1973",
            "followers_url": "https://api.github.com/users/SaaS1973/followers",
            "following_url": "https://api.github.com/users/SaaS1973/following{/other_user}",
            "gists_url": "https://api.github.com/users/SaaS1973/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SaaS1973/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SaaS1973/subscriptions",
            "organizations_url": "https://api.github.com/users/SaaS1973/orgs",
            "repos_url": "https://api.github.com/users/SaaS1973/repos",
            "events_url": "https://api.github.com/users/SaaS1973/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SaaS1973/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-26T18:02:39Z",
        "updated_at": "2023-09-17T17:22:13Z",
        "closed_at": "2023-09-17T17:22:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello, I and deploying RetrievalQAWithSourcesChain with ChatOpenAI model right now.\r\nUnlike OpenAI model, you can provide system message for the model which is a great complement.\r\nBut I tried many times, it seems the prompt can not be insert into the chain.\r\nPlease suggest what should I do to my code:\r\n\r\n```\r\n#Prompt Construction\r\ntemplate=\"\"\"You play as {user_name}'s assistant,your name is {name},personality is {personality},duty is {duty}\"\"\"\r\nsystem_message_prompt = SystemMessagePromptTemplate.from_template(template)\r\n\r\nhuman_template=\"\"\"\r\nContext: {context}\r\nQuestion: {question}\r\nplease indicate if you are not sure about answer. Do NOT Makeup.\r\nMUST answer in {language}.\"\"\"\r\nhuman_message_prompt = HumanMessagePromptTemplate.from_template(human_template)\r\n\r\nchat_prompt = ChatPromptTemplate.from_messages([system_message_prompt, human_message_prompt])\r\nChatPromptTemplate.input_variables=[\"context\", \"question\",\"name\",\"personality\",\"user_name\",\"duty\",\"language\"]\r\n\r\n#define the chain\r\nchain = RetrievalQAWithSourcesChain.from_chain_type(llm=llm,\r\n                                                    combine_documents_chain=qa_chain,\r\n                                                    chain_type=\"stuff\",\r\n                                                    retriever=compression_retriever,\r\n                                                    chain_type_kwargs = {\"prompt\": chat_prompt}\r\n                                                    )\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3606/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3606/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3605",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3605/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3605/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3605/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3605",
        "id": 1685480283,
        "node_id": "I_kwDOIPDwls5kdmNb",
        "number": 3605,
        "title": "Embeddings normalization and similarity metric",
        "user": {
            "login": "Nomiizz",
            "id": 28963232,
            "node_id": "MDQ6VXNlcjI4OTYzMjMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/28963232?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Nomiizz",
            "html_url": "https://github.com/Nomiizz",
            "followers_url": "https://api.github.com/users/Nomiizz/followers",
            "following_url": "https://api.github.com/users/Nomiizz/following{/other_user}",
            "gists_url": "https://api.github.com/users/Nomiizz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Nomiizz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Nomiizz/subscriptions",
            "organizations_url": "https://api.github.com/users/Nomiizz/orgs",
            "repos_url": "https://api.github.com/users/Nomiizz/repos",
            "events_url": "https://api.github.com/users/Nomiizz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Nomiizz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T18:02:20Z",
        "updated_at": "2023-05-30T18:57:06Z",
        "closed_at": "2023-05-30T18:57:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am new to using Langchain and attempting to make it work with a locally running LLM (Alpaca) and Embeddings model (Sentence Transformer). When configuring the sentence transformer model with `HuggingFaceEmbeddings` no arguments can be passed to the encode method of the model, specifically `normalize_embeddings=True`. Neither can I specify the distance metric that I want to use in the `similarity_search` method irrespective of what vector store I am using. So it seems to me I can only create unnormalized embeddings with huggingface models and only use L2 distance as the similarity metric by default. Whereas I want to use the cosine similarity metric or have normalized embeddings and then use the dot product/L2 distance.\r\n\r\nIf I am wrong here can someone point me in the right direction. If not are there any plans to implement this?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3605/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3605/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3604",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3604/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3604/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3604/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3604",
        "id": 1685462874,
        "node_id": "PR_kwDOIPDwls5POT7f",
        "number": 3604,
        "title": "Add way to get serpapi results async",
        "user": {
            "login": "timothyasp",
            "id": 707699,
            "node_id": "MDQ6VXNlcjcwNzY5OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/707699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timothyasp",
            "html_url": "https://github.com/timothyasp",
            "followers_url": "https://api.github.com/users/timothyasp/followers",
            "following_url": "https://api.github.com/users/timothyasp/following{/other_user}",
            "gists_url": "https://api.github.com/users/timothyasp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timothyasp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timothyasp/subscriptions",
            "organizations_url": "https://api.github.com/users/timothyasp/orgs",
            "repos_url": "https://api.github.com/users/timothyasp/repos",
            "events_url": "https://api.github.com/users/timothyasp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timothyasp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T17:49:01Z",
        "updated_at": "2023-04-26T23:37:05Z",
        "closed_at": "2023-04-26T23:37:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3604",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3604",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3604.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3604.patch",
            "merged_at": "2023-04-26T23:37:05Z"
        },
        "body": "Sometimes it's nice to get the raw results from serpapi, and we're missing the async version of this function.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3604/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3604/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3603",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3603/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3603/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3603/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3603",
        "id": 1685459577,
        "node_id": "PR_kwDOIPDwls5POTPF",
        "number": 3603,
        "title": "Introduce Blob and Blob Loader interface",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-26T17:46:10Z",
        "updated_at": "2023-04-27T13:45:26Z",
        "closed_at": "2023-04-27T13:45:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3603",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3603",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3603.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3603.patch",
            "merged_at": "2023-04-27T13:45:25Z"
        },
        "body": "This PR introduces a Blob data type and a Blob loader interface.\n\nThis is the first of a sequence of PRs that follows this proposal: \n\nhttps://github.com/hwchase17/langchain/pull/2833\n\nThe primary goals of these abstraction are:\n\n* Decouple content loading from content parsing code.\n* Help duplicated content loading code from document loaders.\n* Make lazy loading a default for langchain.\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3603/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3603/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3602",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3602/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3602/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3602/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3602",
        "id": 1685410251,
        "node_id": "PR_kwDOIPDwls5POItq",
        "number": 3602,
        "title": "Fix encoding issue in WebBaseLoader",
        "user": {
            "login": "CoffeeKumazaki",
            "id": 25011913,
            "node_id": "MDQ6VXNlcjI1MDExOTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/25011913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CoffeeKumazaki",
            "html_url": "https://github.com/CoffeeKumazaki",
            "followers_url": "https://api.github.com/users/CoffeeKumazaki/followers",
            "following_url": "https://api.github.com/users/CoffeeKumazaki/following{/other_user}",
            "gists_url": "https://api.github.com/users/CoffeeKumazaki/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CoffeeKumazaki/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CoffeeKumazaki/subscriptions",
            "organizations_url": "https://api.github.com/users/CoffeeKumazaki/orgs",
            "repos_url": "https://api.github.com/users/CoffeeKumazaki/repos",
            "events_url": "https://api.github.com/users/CoffeeKumazaki/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CoffeeKumazaki/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-26T17:06:38Z",
        "updated_at": "2023-09-19T11:39:09Z",
        "closed_at": "2023-04-29T03:56:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3602",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3602",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3602.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3602.patch",
            "merged_at": "2023-04-29T03:56:33Z"
        },
        "body": "The character code mismatches occurred when character information was not included in the response header (In my case, a Japanese web page). \r\nI solved this issue by changing the encoding setting to apparent_encoding.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3602/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3602/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3601",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3601/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3601/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3601/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3601",
        "id": 1685351151,
        "node_id": "I_kwDOIPDwls5kdGrv",
        "number": 3601,
        "title": "The vectorstores says faiss as FAISS vector database",
        "user": {
            "login": "Vikram12301",
            "id": 62374169,
            "node_id": "MDQ6VXNlcjYyMzc0MTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/62374169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vikram12301",
            "html_url": "https://github.com/Vikram12301",
            "followers_url": "https://api.github.com/users/Vikram12301/followers",
            "following_url": "https://api.github.com/users/Vikram12301/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vikram12301/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vikram12301/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vikram12301/subscriptions",
            "organizations_url": "https://api.github.com/users/Vikram12301/orgs",
            "repos_url": "https://api.github.com/users/Vikram12301/repos",
            "events_url": "https://api.github.com/users/Vikram12301/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vikram12301/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-26T16:28:37Z",
        "updated_at": "2023-09-10T16:26:41Z",
        "closed_at": "2023-09-10T16:26:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I have a doubt if FAISS is a vector database or a search algorithm. The vectorstores.faiss mentions it as a vector database, but is it not a search algorithm?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3601/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3601/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3600",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3600/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3600/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3600/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3600",
        "id": 1685338982,
        "node_id": "PR_kwDOIPDwls5PN5aR",
        "number": 3600,
        "title": "Add SceneXplain tool",
        "user": {
            "login": "delgermurun",
            "id": 492616,
            "node_id": "MDQ6VXNlcjQ5MjYxNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/492616?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/delgermurun",
            "html_url": "https://github.com/delgermurun",
            "followers_url": "https://api.github.com/users/delgermurun/followers",
            "following_url": "https://api.github.com/users/delgermurun/following{/other_user}",
            "gists_url": "https://api.github.com/users/delgermurun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/delgermurun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/delgermurun/subscriptions",
            "organizations_url": "https://api.github.com/users/delgermurun/orgs",
            "repos_url": "https://api.github.com/users/delgermurun/repos",
            "events_url": "https://api.github.com/users/delgermurun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/delgermurun/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T16:20:28Z",
        "updated_at": "2023-06-29T11:37:09Z",
        "closed_at": "2023-04-28T23:49:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3600",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3600",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3600.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3600.patch",
            "merged_at": "2023-04-28T23:49:31Z"
        },
        "body": "Adding [SceneXplain](https://scenex.jina.ai/) integration.\r\n\r\nAn Image Captioning Tool: Use this tool to generate a detailed caption for an image.\r\nThe input can be an image file of any format, and the output will be a text description that covers every detail of the image.\r\n\r\n### Example:\r\n```python\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.agents import initialize_agent\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom langchain.tools import SceneXplainTool\r\n\r\nllm = OpenAI(temperature=0)\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\")\r\ntools = [\r\n    SceneXplainTool(),\r\n]\r\n\r\nagent = initialize_agent(\r\n    tools, llm, memory=memory, agent=\"conversational-react-description\", verbose=True\r\n)\r\noutput = agent.run(\r\n    input=(\r\n        \"What is in this image https://storage.googleapis.com/causal-diffusion.appspot.com/imagePrompts%2F0rw369i5h9t%2Foriginal.png. \"\r\n        \"Is it movie or a game? If it is a movie, what is the name of the movie?\"\r\n    )\r\n)\r\n\r\nprint(output)\r\n```\r\n<img width=\"953\" alt=\"image\" src=\"https://user-images.githubusercontent.com/492616/234641316-95835fc5-bc35-4dc8-9420-1155403aa9d8.png\">\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3600/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3600/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3599",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3599/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3599/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3599/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3599",
        "id": 1685232867,
        "node_id": "PR_kwDOIPDwls5PNi1R",
        "number": 3599,
        "title": "bump ver 150",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T15:15:31Z",
        "updated_at": "2023-04-26T15:29:11Z",
        "closed_at": "2023-04-26T15:29:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3599",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3599",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3599.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3599.patch",
            "merged_at": "2023-04-26T15:29:10Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3599/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3599/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3598",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3598/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3598/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3598/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3598",
        "id": 1685192393,
        "node_id": "PR_kwDOIPDwls5PNaFS",
        "number": 3598,
        "title": "Add-github-api-utility",
        "user": {
            "login": "SamPink",
            "id": 42603236,
            "node_id": "MDQ6VXNlcjQyNjAzMjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/42603236?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SamPink",
            "html_url": "https://github.com/SamPink",
            "followers_url": "https://api.github.com/users/SamPink/followers",
            "following_url": "https://api.github.com/users/SamPink/following{/other_user}",
            "gists_url": "https://api.github.com/users/SamPink/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SamPink/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SamPink/subscriptions",
            "organizations_url": "https://api.github.com/users/SamPink/orgs",
            "repos_url": "https://api.github.com/users/SamPink/repos",
            "events_url": "https://api.github.com/users/SamPink/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SamPink/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-26T14:53:44Z",
        "updated_at": "2023-04-30T23:17:54Z",
        "closed_at": "2023-04-30T23:17:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3598",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3598",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3598.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3598.patch",
            "merged_at": "2023-04-30T23:17:54Z"
        },
        "body": "This PR introduces a new GitHub API Wrapper using the requests library. The new GitHubAPIWrapper class allows users to fetch repository information for a specified GitHub user. The PR includes the following changes:\n\nCreate a new GitHubAPIWrapper class that provides easy access to the GitHub API\nAdd a root validator to ensure the GitHub API key is present in the environment\nImplement _format_repo_info method to format repository information into a readable string\nAdd run method to fetch and display repositories for a given user\nUpdate requirements.txt to include requests library\nWith the new GitHub API Wrapper, users can now easily retrieve repository information for any GitHub user. This functionality can be useful for a variety of purposes, such as displaying user profiles, generating reports, or analyzing repositories for various metrics.\n\nPlease let me know if you have any questions or concerns. I look forward to your feedback and merging this feature into the main branch.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3598/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3598/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3597",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3597/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3597/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3597/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3597",
        "id": 1685176035,
        "node_id": "PR_kwDOIPDwls5PNWkY",
        "number": 3597,
        "title": "Add `LMQL` llm [wip]",
        "user": {
            "login": "outday29",
            "id": 60956360,
            "node_id": "MDQ6VXNlcjYwOTU2MzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/60956360?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/outday29",
            "html_url": "https://github.com/outday29",
            "followers_url": "https://api.github.com/users/outday29/followers",
            "following_url": "https://api.github.com/users/outday29/following{/other_user}",
            "gists_url": "https://api.github.com/users/outday29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/outday29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/outday29/subscriptions",
            "organizations_url": "https://api.github.com/users/outday29/orgs",
            "repos_url": "https://api.github.com/users/outday29/repos",
            "events_url": "https://api.github.com/users/outday29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/outday29/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-26T14:44:25Z",
        "updated_at": "2023-04-27T02:43:44Z",
        "closed_at": "2023-04-27T02:43:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3597",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3597",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3597.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3597.patch",
            "merged_at": null
        },
        "body": "My attempt at integrating `LMQL` as an LLM class in `langchain`. Example usage will be like:\r\n\r\n```python\r\nfrom langchain.llms import LMQL\r\nfrom langchain.chains import LLMChain\r\nfrom langchain.prompts import PromptTemplate\r\n\r\nlmql_str = '''lmql\r\nargmax\r\n    \"\"\"\r\n    A list of things to not forget when going to sea (not travelling):\r\n    \"\"\"\r\n    backpack = []\r\n    for i in range(5):\r\n        \"-[THING]\"\r\n        backpack.append(THING.strip())\r\n    print(backpack)\r\nfrom\r\n    \"openai/text-davinci-003\"\r\nwhere\r\n    STOPS_AT(THING, \"\\\\n\")\r\n'''\r\n\r\nlmql = LMQL()\r\nresult = lmql.generate([lmql_str])\r\nprint(result)\r\n# -> generations=[[Generation(text='\\nA list of things to not forget when going to sea (not travelling):\\n- Life jackets\\n- Emergency flares\\n- First aid kit\\n- Navigation equipment\\n- Anchor and chain\\n', generation_info={'THING': ' Anchor and chain\\n'})]] llm_output=None\r\n```\r\n\r\nYou can use it in an `LLMChain`.\r\n\r\n```python\r\nprompt = PromptTemplate.from_template(lmql_str)\r\nchain = LLMChain(llm=lmql, prompt=prompt)\r\nprint(chain.run({}))\r\n# -> A list of things to not forget when going to sea (not travelling):\r\n# -> - Life jackets\r\n# -> - Emergency flares\r\n# -> - First aid kit\r\n# -> - Navigation equipment\r\n# -> - Anchor and chain\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3597/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3597/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3596",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3596/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3596/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3596/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3596",
        "id": 1685174628,
        "node_id": "PR_kwDOIPDwls5PNWRW",
        "number": 3596,
        "title": "added github api to utilities ",
        "user": {
            "login": "SamPink",
            "id": 42603236,
            "node_id": "MDQ6VXNlcjQyNjAzMjM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/42603236?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SamPink",
            "html_url": "https://github.com/SamPink",
            "followers_url": "https://api.github.com/users/SamPink/followers",
            "following_url": "https://api.github.com/users/SamPink/following{/other_user}",
            "gists_url": "https://api.github.com/users/SamPink/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SamPink/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SamPink/subscriptions",
            "organizations_url": "https://api.github.com/users/SamPink/orgs",
            "repos_url": "https://api.github.com/users/SamPink/repos",
            "events_url": "https://api.github.com/users/SamPink/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SamPink/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T14:43:39Z",
        "updated_at": "2023-04-26T14:49:37Z",
        "closed_at": "2023-04-26T14:49:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3596",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3596",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3596.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3596.patch",
            "merged_at": null
        },
        "body": "This PR introduces a new GitHub API Wrapper using the requests library. The new GitHubAPIWrapper class allows users to fetch repository information for a specified GitHub user. The PR includes the following changes:\n\nCreate a new GitHubAPIWrapper class that provides easy access to the GitHub API\nAdd a root validator to ensure the GitHub API key is present in the environment\nImplement _format_repo_info method to format repository information into a readable string\nAdd run method to fetch and display repositories for a given user\nUpdate requirements.txt to include requests library\nWith the new GitHub API Wrapper, users can now easily retrieve repository information for any GitHub user. This functionality can be useful for a variety of purposes, such as displaying user profiles, generating reports, or analyzing repositories for various metrics.\n\nPlease let me know if you have any questions or concerns. I look forward to your feedback and merging this feature into the main branch.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3596/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3596/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3595",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3595/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3595/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3595/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3595",
        "id": 1685103449,
        "node_id": "I_kwDOIPDwls5kcKNZ",
        "number": 3595,
        "title": "Unable to create opensearch index.",
        "user": {
            "login": "msinha251",
            "id": 31616939,
            "node_id": "MDQ6VXNlcjMxNjE2OTM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/31616939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/msinha251",
            "html_url": "https://github.com/msinha251",
            "followers_url": "https://api.github.com/users/msinha251/followers",
            "following_url": "https://api.github.com/users/msinha251/following{/other_user}",
            "gists_url": "https://api.github.com/users/msinha251/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/msinha251/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/msinha251/subscriptions",
            "organizations_url": "https://api.github.com/users/msinha251/orgs",
            "repos_url": "https://api.github.com/users/msinha251/repos",
            "events_url": "https://api.github.com/users/msinha251/events{/privacy}",
            "received_events_url": "https://api.github.com/users/msinha251/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-26T14:04:56Z",
        "updated_at": "2023-09-10T16:26:46Z",
        "closed_at": "2023-09-10T16:26:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi Team, I am using opensearch as my vectorstore and trying to create index for documents vectors. but unable to create index:\r\n\r\nGetting error:\r\n\r\n`ERROR - The embeddings count, 501 is more than the [bulk_size], 500. Increase the value of [bulk_size]`\r\n\r\nCan someone please advice ?\r\n\r\nThanks",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3595/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3595/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3594",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3594/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3594/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3594/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3594",
        "id": 1685102656,
        "node_id": "PR_kwDOIPDwls5PNGuT",
        "number": 3594,
        "title": "Update models used for embeddings in the weaviate example",
        "user": {
            "login": "hsm207",
            "id": 2398765,
            "node_id": "MDQ6VXNlcjIzOTg3NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2398765?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hsm207",
            "html_url": "https://github.com/hsm207",
            "followers_url": "https://api.github.com/users/hsm207/followers",
            "following_url": "https://api.github.com/users/hsm207/following{/other_user}",
            "gists_url": "https://api.github.com/users/hsm207/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hsm207/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hsm207/subscriptions",
            "organizations_url": "https://api.github.com/users/hsm207/orgs",
            "repos_url": "https://api.github.com/users/hsm207/repos",
            "events_url": "https://api.github.com/users/hsm207/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hsm207/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T14:04:30Z",
        "updated_at": "2023-04-27T06:02:21Z",
        "closed_at": "2023-04-27T04:48:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3594",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3594",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3594.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3594.patch",
            "merged_at": "2023-04-27T04:48:09Z"
        },
        "body": "Use text-embedding-ada-002 because it [outperforms all other models](https://openai.com/blog/new-and-improved-embedding-model).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3594/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3594/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3593",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3593/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3593/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3593/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3593",
        "id": 1685098021,
        "node_id": "I_kwDOIPDwls5kcI4l",
        "number": 3593,
        "title": "load_qa_chain   _   RuntimeError: Expected all tensors to be on the same device, but found at least two devices, cuda:0 and cpu!",
        "user": {
            "login": "SoroorMa",
            "id": 71624743,
            "node_id": "MDQ6VXNlcjcxNjI0NzQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/71624743?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SoroorMa",
            "html_url": "https://github.com/SoroorMa",
            "followers_url": "https://api.github.com/users/SoroorMa/followers",
            "following_url": "https://api.github.com/users/SoroorMa/following{/other_user}",
            "gists_url": "https://api.github.com/users/SoroorMa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SoroorMa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SoroorMa/subscriptions",
            "organizations_url": "https://api.github.com/users/SoroorMa/orgs",
            "repos_url": "https://api.github.com/users/SoroorMa/repos",
            "events_url": "https://api.github.com/users/SoroorMa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SoroorMa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-26T14:02:08Z",
        "updated_at": "2023-10-18T21:42:47Z",
        "closed_at": "2023-04-26T14:45:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3593/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3593/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3592",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3592/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3592/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3592/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3592",
        "id": 1685024756,
        "node_id": "I_kwDOIPDwls5kb2_0",
        "number": 3592,
        "title": "RetrievalQAWithSourcesChain sometimes does not return sources under sources key",
        "user": {
            "login": "AliasSCM",
            "id": 15645920,
            "node_id": "MDQ6VXNlcjE1NjQ1OTIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/15645920?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AliasSCM",
            "html_url": "https://github.com/AliasSCM",
            "followers_url": "https://api.github.com/users/AliasSCM/followers",
            "following_url": "https://api.github.com/users/AliasSCM/following{/other_user}",
            "gists_url": "https://api.github.com/users/AliasSCM/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AliasSCM/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AliasSCM/subscriptions",
            "organizations_url": "https://api.github.com/users/AliasSCM/orgs",
            "repos_url": "https://api.github.com/users/AliasSCM/repos",
            "events_url": "https://api.github.com/users/AliasSCM/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AliasSCM/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-04-26T13:22:28Z",
        "updated_at": "2023-09-24T16:07:12Z",
        "closed_at": "2023-09-24T16:07:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am using RetrievalQAWithSourcesChain to get answers on documents that I previously embedded using pinecone. I notice that sometimes that the sources is not populated under the sources key when I run the chain. \r\n\r\nI am using pinecone to embed the pdf documents like so:\r\n\r\n ```python\r\n documents = loader.load()\r\n text_splitter = RecursiveCharacterTextSplitter(\r\n            chunk_size=400,\r\n            chunk_overlap=20, \r\n            length_function=tiktoken_len,\r\n            separators=['\\n\\n', '\\n', ' ', '']\r\n        )\r\nsplit_documents = text_splitter.split_documents(documents=documents)\r\nPinecone.from_documents(\r\n        split_documents, \r\n        OpenAIEmbeddings(), \r\n        index_name='test_index', \r\n        namespace= 'test_namespace')\r\n```\r\n\r\n\r\nI am using RetrievalQAWithSourcesChain to ask queries like so:\r\n   \r\n```python\r\n llm =    OpenAIEmbeddings() \r\n vectorstore: Pinecone = Pinecone.from_existing_index(\r\n            index_name='test_index',\r\n            embedding=OpenAIEmbeddings(),\r\n            namespace='test_namespace'\r\n      )  \r\n        \r\n qa_chain = load_qa_with_sources_chain(llm=_llm, chain_type=\"stuff\")\r\n qa = RetrievalQAWithSourcesChain(\r\n            combine_documents_chain=qa_chain, \r\n            retriever=vectorstore.as_retriever(),\r\n            reduce_k_below_max_tokens=True,\r\n      )\r\n        \r\nanswer_response = qa({\"question\": question}, return_only_outputs=True)\r\n\r\n```\r\n\r\nExpected response\r\n\r\n`{'answer': 'some answer', 'sources': 'the_file_name.pdf'}`\r\n\r\nActual response\r\n`{'answer': 'some answer', 'sources': ''}`\r\n\r\nThis behaviour is actually not consistent. I sometimes get the sources in the answer itself and not under the sources key. And at times I get the sources under the 'sources' key and not the answer. I want the sources to ALWAYS come under the sources key and not in the answer text.\r\n\r\nIm using langchain==0.0.149. \r\n\r\nAm I missing something in the way im embedding or retrieving my documents? Or is this an issue with langchain?\r\n\r\n**Edit: Additional information on how to reproduce this issue**\r\n\r\nWhile trying to reproduce the exact issue for @jpdus I noticed that this happens consistently  when I request for the answer in a table format. When the query requests for the answer in a table format, it seems like the source is coming in with the answer and not the source key. I am attaching a test document and some examples here:\r\n\r\nSource : [UN Doc.pdf](https://github.com/hwchase17/langchain/files/11339620/UN.Doc.pdf)\r\n\r\nQuery 1  (with table): what are the goals for sustainability 2030, povide your answer in a table format?\r\n\r\nResponse :\r\n\r\n```json\r\n{'answer': 'Goals for Sustainability 2030:\\n\\nGoal 1. End poverty in all its forms everywhere\\nGoal 2. End hunger, achieve food security and improved nutrition and promote sustainable agriculture\\nGoal 3. Ensure healthy lives and promote well-being for all at all ages\\nGoal 4. Ensure inclusive and equitable quality education and promote lifelong learning opportunities for all\\nGoal 5. Achieve gender equality and empower all women and girls\\nGoal 6. Ensure availability and sustainable management of water and sanitation for all\\nGoal 7. Ensure access to affordable, reliable, sustainable and modern energy for all\\nGoal 8. Promote sustained, inclusive and sustainable economic growth, full and productive employment and decent work for all\\nGoal 9. Build resilient infrastructure, promote inclusive and sustainable industrialization and foster innovation\\nGoal 10. Reduce inequality within and among countries\\nGoal 11. Make cities and human settlements inclusive, safe, resilient and sustainable\\nGoal 12. Ensure sustainable consumption and production patterns\\nGoal 13. Take urgent action to combat climate change and its impacts\\nGoal 14. Conserve and sustainably use the oceans, seas and marine resources for sustainable development\\nGoal 15. Protect, restore and promote sustainable use of terrestrial ecosystems, sustainably manage forests, combat desertification, and halt and reverse land degradation and halt biodiversity loss\\nSource: docs/UN Doc.pdf', 'sources': ''}\r\n```\r\n\r\nQuery 2 (without table) : what are the goals for sustainability 2030?\r\n\r\n\r\nResponse:\r\n```json\r\n{'answer': \"The goals for sustainability 2030 include expanding international cooperation and capacity-building support to developing countries in water and sanitation-related activities and programs, ensuring access to affordable, reliable, sustainable and modern energy for all, promoting sustained, inclusive and sustainable economic growth, full and productive employment and decent work for all, taking urgent action to combat climate change and its impacts, strengthening efforts to protect and safeguard the world's cultural and natural heritage, providing universal access to safe, inclusive and accessible green and public spaces, ensuring sustainable consumption and production patterns, significantly increasing access to information and communications technology and striving to provide universal and affordable access to the Internet in least developed countries by 2020, and reducing inequality within and among countries. \\n\", 'sources': 'docs/UN Doc.pdf'}\r\n```\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3592/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3592/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3591",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3591/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3591/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3591/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3591",
        "id": 1684990072,
        "node_id": "I_kwDOIPDwls5kbuh4",
        "number": 3591,
        "title": "UnstructuredMarkdownLoader strips Markdown formatting from documents, rendering MarkdownTextSplitter non-functional",
        "user": {
            "login": "bluesheep",
            "id": 1271446,
            "node_id": "MDQ6VXNlcjEyNzE0NDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1271446?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bluesheep",
            "html_url": "https://github.com/bluesheep",
            "followers_url": "https://api.github.com/users/bluesheep/followers",
            "following_url": "https://api.github.com/users/bluesheep/following{/other_user}",
            "gists_url": "https://api.github.com/users/bluesheep/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bluesheep/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bluesheep/subscriptions",
            "organizations_url": "https://api.github.com/users/bluesheep/orgs",
            "repos_url": "https://api.github.com/users/bluesheep/repos",
            "events_url": "https://api.github.com/users/bluesheep/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bluesheep/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-26T13:02:27Z",
        "updated_at": "2023-11-02T16:15:34Z",
        "closed_at": "2023-11-02T16:15:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am using the DirectoryLoader, with the relevant loader class defined\r\n```\r\nDirectoryLoader('.\\\\src', glob=\"**/*.md\", loader_cls=UnstructuredMarkdownLoader)`\r\n```\r\n\r\nI couldn't understand why the following step didn't chunk text into the relevant markdown sections:\r\n\r\n```\r\nmarkdown_splitter = MarkdownTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ntexts = markdown_splitter.split_documents(docs)\r\n```\r\n\r\nAfter digging into it a bit, the UnstructuredMarkdownLoader strips the Markdown formatting from the documents. This means that the Splitter has nothing to guide it and ends up chunking into 1000 text character sizes.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3591/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3591/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3590",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3590/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3590/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3590/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3590",
        "id": 1684978281,
        "node_id": "I_kwDOIPDwls5kbrpp",
        "number": 3590,
        "title": "Did not get output keys that were expected.",
        "user": {
            "login": "Tajcore",
            "id": 45900878,
            "node_id": "MDQ6VXNlcjQ1OTAwODc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/45900878?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Tajcore",
            "html_url": "https://github.com/Tajcore",
            "followers_url": "https://api.github.com/users/Tajcore/followers",
            "following_url": "https://api.github.com/users/Tajcore/following{/other_user}",
            "gists_url": "https://api.github.com/users/Tajcore/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Tajcore/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Tajcore/subscriptions",
            "organizations_url": "https://api.github.com/users/Tajcore/orgs",
            "repos_url": "https://api.github.com/users/Tajcore/repos",
            "events_url": "https://api.github.com/users/Tajcore/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Tajcore/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-26T12:55:45Z",
        "updated_at": "2023-09-10T16:26:51Z",
        "closed_at": "2023-09-10T16:26:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "So I'm just trying to write a custom agent using `LLMSingleActionAgent` based off the example from the official docs and I ran into this error \r\n\r\n> \r\n> File \"/usr/local/lib/python3.9/site-packages/langchain/chains/base.py\", line 118, in __call__\r\n>     return self.prep_outputs(inputs, outputs, return_only_outputs)\r\n>   File \"/usr/local/lib/python3.9/site-packages/langchain/chains/base.py\", line 168, in prep_outputs\r\n>     self._validate_outputs(outputs)\r\n>   File \"/usr/local/lib/python3.9/site-packages/langchain/chains/base.py\", line 79, in _validate_outputs\r\n>     raise ValueError(\r\n> ValueError: Did not get output keys that were expected. Got: {'survey_question'}. Expected: {'output'}\r\n\r\n\r\n```python\r\n\r\nclass CustomOutputParser(AgentOutputParser):\r\n\r\n    def parse(self, llm_output: str) -> Union[AgentAction, AgentFinish]:\r\n        # Check if agent should finish\r\n        if \"Final Answer:\" in llm_output:\r\n            return AgentFinish(\r\n                # Return values is generally always a dictionary with a single `output` key\r\n                # It is not recommended to try anything else at the moment :)\r\n                return_values={\"survey_question\": llm_output.split(\r\n                    \"Final Answer:\")[-1].strip()},\r\n                log=llm_output,\r\n            )\r\n        # Parse out the action and action input\r\n        regex = r\"Action\\s*\\d*\\s*:(.*?)\\nAction\\s*\\d*\\s*Input\\s*\\d*\\s*:[\\s]*(.*)\"\r\n        match = re.search(regex, llm_output, re.DOTALL)\r\n        if not match:\r\n            raise ValueError(f\"Could not parse LLM result: `{llm_output}`\")\r\n        action = match.group(1).strip()\r\n        action_input = match.group(2)\r\n        # Return the action and action input\r\n        return AgentAction(tool=action, tool_input=action_input.strip(\" \").strip('\"'), log=llm_output)\r\n        \r\n        \r\nclass Chatbot:\r\n\r\n    async def conversational_chat(self, query, dataset_path):\r\n\r\n        prompt = CustomPromptTemplate(\r\n            template=template,\r\n            tools=tools,\r\n            # This omits the `agent_scratchpad`, `tools`, and `tool_names` variables because those are generated dynamically\r\n            # This includes the `intermediate_steps` variable because that is needed\r\n            input_variables=[\"input\", \"intermediate_steps\", \"dataset_path\"],\r\n            output_parser=CustomOutputParser(),\r\n        )\r\n        output_parser = CustomOutputParser()\r\n        llm = OpenAI(temperature=0)  # type: ignore\r\n\r\n        llm_chain = LLMChain(llm=llm, prompt=prompt)\r\n\r\n        tool_names = [tool.name for tool in tools]\r\n        survey_agent = LLMSingleActionAgent(\r\n            llm_chain=llm_chain,\r\n            output_parser=output_parser,\r\n            stop=[\"\\nObservation:\"],\r\n            allowed_tools=tool_names  # type: ignore\r\n        )\r\n\r\n        survey_agent_executor = AgentExecutor.from_agent_and_tools(\r\n            agent=survey_agent, tools=tools, verbose=True)\r\n        \r\n        \r\n        return survey_agent_executor({\"input\": query,  \"dataset_path\": dataset_path})\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3590/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3590/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3589",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3589/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3589/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3589/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3589",
        "id": 1684953438,
        "node_id": "PR_kwDOIPDwls5PMmlk",
        "number": 3589,
        "title": "add --no-sandbox for chrome in url_selenium",
        "user": {
            "login": "luoyger",
            "id": 17446110,
            "node_id": "MDQ6VXNlcjE3NDQ2MTEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/17446110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luoyger",
            "html_url": "https://github.com/luoyger",
            "followers_url": "https://api.github.com/users/luoyger/followers",
            "following_url": "https://api.github.com/users/luoyger/following{/other_user}",
            "gists_url": "https://api.github.com/users/luoyger/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luoyger/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luoyger/subscriptions",
            "organizations_url": "https://api.github.com/users/luoyger/orgs",
            "repos_url": "https://api.github.com/users/luoyger/repos",
            "events_url": "https://api.github.com/users/luoyger/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luoyger/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-26T12:40:33Z",
        "updated_at": "2023-04-27T04:48:44Z",
        "closed_at": "2023-04-27T04:48:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3589",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3589",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3589.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3589.patch",
            "merged_at": "2023-04-27T04:48:43Z"
        },
        "body": "without --no-sandbox param, load documents from url by selenium in chrome occured error below:\r\n\r\n```Traceback (most recent call last):\r\n  File \"/data//playgroud/try_langchain.py\", line 343, in <module>\r\n    langchain_doc_loader()\r\n  File \"/data//playgroud/try_langchain.py\", line 67, in langchain_doc_loader\r\n    documents = loader.load()\r\n  File \"/install/anaconda3-env/envs/python3.10/lib/python3.10/site-packages/langchain/document_loaders/url_selenium.py\", line 102, in load\r\n    driver = self._get_driver()\r\n  File \"/install/anaconda3-env/envs/python3.10/lib/python3.10/site-packages/langchain/document_loaders/url_selenium.py\", line 76, in _get_driver\r\n    return Chrome(options=chrome_options)\r\n  File \"/install/anaconda3-env/envs/python3.10/lib/python3.10/site-packages/selenium/webdriver/chrome/webdriver.py\", line 80, in __init__\r\n    super().__init__(\r\n  File \"/install/anaconda3-env/envs/python3.10/lib/python3.10/site-packages/selenium/webdriver/chromium/webdriver.py\", line 104, in __init__\r\n    super().__init__(\r\n  File \"/install/anaconda3-env/envs/python3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 286, in __init__\r\n    self.start_session(capabilities, browser_profile)\r\n  File \"/install/anaconda3-env/envs/python3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 378, in start_session\r\n    response = self.execute(Command.NEW_SESSION, parameters)\r\n  File \"/install/anaconda3-env/envs/python3.10/lib/python3.10/site-packages/selenium/webdriver/remote/webdriver.py\", line 440, in execute\r\n    self.error_handler.check_response(response)\r\n  File \"/install/anaconda3-env/envs/python3.10/lib/python3.10/site-packages/selenium/webdriver/remote/errorhandler.py\", line 245, in check_response\r\n    raise exception_class(message, screen, stacktrace)\r\nselenium.common.exceptions.WebDriverException: Message: unknown error: Chrome failed to start: exited abnormally.\r\n  (unknown error: DevToolsActivePort file doesn't exist)\r\n  (The process started from chrome location /usr/bin/google-chrome is no longer running, so ChromeDriver is assuming that Chrome has crashed.)\r\nStacktrace:\r\n#0 0x55cf8da1bfe3 <unknown>\r\n#1 0x55cf8d75ad36 <unknown>\r\n#2 0x55cf8d783b20 <unknown>\r\n#3 0x55cf8d77fa9b <unknown>\r\n#4 0x55cf8d7c1af7 <unknown>\r\n#5 0x55cf8d7c111f <unknown>\r\n#6 0x55cf8d7b8693 <unknown>\r\n#7 0x55cf8d78b03a <unknown>\r\n#8 0x55cf8d78c17e <unknown>\r\n#9 0x55cf8d9dddbd <unknown>\r\n#10 0x55cf8d9e1c6c <unknown>\r\n#11 0x55cf8d9eb4b0 <unknown>\r\n#12 0x55cf8d9e2d63 <unknown>\r\n#13 0x55cf8d9b5c35 <unknown>\r\n#14 0x55cf8da06138 <unknown>\r\n#15 0x55cf8da062c7 <unknown>\r\n#16 0x55cf8da14093 <unknown>\r\n#17 0x7f3da31a72de start_thread\r\n```\r\n\r\nadd option `chrome_options.add_argument(\"--no-sandbox\")` for chrome.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3589/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3589/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3588",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3588/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3588/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3588/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3588",
        "id": 1684928287,
        "node_id": "I_kwDOIPDwls5kbfcf",
        "number": 3588,
        "title": "OpenAPI agents did not execute tools",
        "user": {
            "login": "bjcodereview3",
            "id": 117341119,
            "node_id": "U_kgDOBv57vw",
            "avatar_url": "https://avatars.githubusercontent.com/u/117341119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bjcodereview3",
            "html_url": "https://github.com/bjcodereview3",
            "followers_url": "https://api.github.com/users/bjcodereview3/followers",
            "following_url": "https://api.github.com/users/bjcodereview3/following{/other_user}",
            "gists_url": "https://api.github.com/users/bjcodereview3/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bjcodereview3/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bjcodereview3/subscriptions",
            "organizations_url": "https://api.github.com/users/bjcodereview3/orgs",
            "repos_url": "https://api.github.com/users/bjcodereview3/repos",
            "events_url": "https://api.github.com/users/bjcodereview3/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bjcodereview3/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-26T12:24:28Z",
        "updated_at": "2023-09-13T15:59:30Z",
        "closed_at": "2023-09-10T16:26:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I'm using OpenAPI agents to access my own APIs. and the LLM I'm using is OpenAI's GPT-4.\r\n\r\nWhen I queried something, LLM just answered not only `Action` and `Action Input`, but also `Observation` and even `Final Answer` with fake data under API_ORCHESTRATOR_PROMPT. \r\nSo the agent did not work with `api_planner` and `api_controller` tools.\r\n\r\nI am wondering is `API_ORCHESTRATOR_PROMPT` or `FORMAT_INSTRUCTIONS` prompt stable? \r\nI tested the [Agent Getting Started](https://python.langchain.com/en/latest/modules/agents/getting_started.html), and got bad answer from llm directly without tools sometimes, ether.\r\n\r\nor am i missing something important?\r\n\r\nor should i rewrite the prompt?\r\n\r\nthanks\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3588/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3588/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3587",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3587/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3587/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3587/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3587",
        "id": 1684908098,
        "node_id": "PR_kwDOIPDwls5PMcuM",
        "number": 3587,
        "title": "Async Support for LLMChainExtractor",
        "user": {
            "login": "jphme",
            "id": 2862336,
            "node_id": "MDQ6VXNlcjI4NjIzMzY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2862336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jphme",
            "html_url": "https://github.com/jphme",
            "followers_url": "https://api.github.com/users/jphme/followers",
            "following_url": "https://api.github.com/users/jphme/following{/other_user}",
            "gists_url": "https://api.github.com/users/jphme/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jphme/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jphme/subscriptions",
            "organizations_url": "https://api.github.com/users/jphme/orgs",
            "repos_url": "https://api.github.com/users/jphme/repos",
            "events_url": "https://api.github.com/users/jphme/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jphme/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-26T12:12:35Z",
        "updated_at": "2023-04-29T10:00:54Z",
        "closed_at": "2023-04-29T10:00:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3587",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3587",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3587.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3587.patch",
            "merged_at": null
        },
        "body": "Implemented `acompress_documents` and changed syntax for `compress_documents` slightly to make sync/async functions consistent.\r\n\r\n` LLMChainExtractor` as implemented in #2915 for use in the `ContextualCompressionRetriever` lacked an async method. As compression of retrieved documents is a highly parallelizable task, this was a major performance bottleneck in my tests.\r\n\r\nThis implementation is consistent to the implementation in the somewhat similar `MapReduceDocumentsChain` chain, see https://github.com/hwchase17/langchain/blob/85dae78548ed0c11db06e9154c7eb4236a1ee246/langchain/chains/combine_documents/map_reduce.py#L131 .\r\n\r\nIn my own tests (standalone as well as in a compression pipeline) inputs/outputs are unchanged and the async-speedup is significant.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3587/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3587/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3586",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3586/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3586/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3586/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3586",
        "id": 1684804005,
        "node_id": "I_kwDOIPDwls5kbBGl",
        "number": 3586,
        "title": "AttributeError when calling OpenAIEmbeddings model",
        "user": {
            "login": "laveshnk-crypto",
            "id": 60281257,
            "node_id": "MDQ6VXNlcjYwMjgxMjU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/60281257?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/laveshnk-crypto",
            "html_url": "https://github.com/laveshnk-crypto",
            "followers_url": "https://api.github.com/users/laveshnk-crypto/followers",
            "following_url": "https://api.github.com/users/laveshnk-crypto/following{/other_user}",
            "gists_url": "https://api.github.com/users/laveshnk-crypto/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/laveshnk-crypto/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/laveshnk-crypto/subscriptions",
            "organizations_url": "https://api.github.com/users/laveshnk-crypto/orgs",
            "repos_url": "https://api.github.com/users/laveshnk-crypto/repos",
            "events_url": "https://api.github.com/users/laveshnk-crypto/events{/privacy}",
            "received_events_url": "https://api.github.com/users/laveshnk-crypto/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-04-26T11:07:24Z",
        "updated_at": "2023-04-27T05:26:43Z",
        "closed_at": "2023-04-27T05:26:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am facing an error when calling the OpenAIEmbeddings model. This is my code.\r\n\r\n````\r\nimport os\r\n\r\nos.environ[\"OPENAI_API_TYPE\"] = \"azure\"\r\nos.environ[\"OPENAI_API_BASE\"] = \"base-thing\"\r\nos.environ[\"OPENAI_API_KEY\"] = \"apikey\"\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\n\r\nembeddings = OpenAIEmbeddings(model=\"model-name\")\r\ntext = \"This is a test document.\"\r\nquery_result = embeddings.embed_query(text)\r\ndoc_result = embeddings.embed_documents([text])\r\n````\r\n\r\nThis is the error I am facing:\r\n**AttributeError: module 'tiktoken' has no attribute 'model'**",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3586/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3586/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3585",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3585/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3585/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3585/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3585",
        "id": 1684762823,
        "node_id": "I_kwDOIPDwls5ka3DH",
        "number": 3585,
        "title": "import error ContextualCompressionRetriever",
        "user": {
            "login": "mikelval82",
            "id": 57663701,
            "node_id": "MDQ6VXNlcjU3NjYzNzAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/57663701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikelval82",
            "html_url": "https://github.com/mikelval82",
            "followers_url": "https://api.github.com/users/mikelval82/followers",
            "following_url": "https://api.github.com/users/mikelval82/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikelval82/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikelval82/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikelval82/subscriptions",
            "organizations_url": "https://api.github.com/users/mikelval82/orgs",
            "repos_url": "https://api.github.com/users/mikelval82/repos",
            "events_url": "https://api.github.com/users/mikelval82/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikelval82/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-26T10:39:44Z",
        "updated_at": "2023-09-10T16:27:02Z",
        "closed_at": "2023-09-10T16:27:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\n\r\nI have installed langchain-0.0.149 using pip. When trying to run the folloging code I get an import error.\r\n\r\nfrom langchain.retrievers import ContextualCompressionRetriever\r\n\r\nTraceback (most recent call last):\r\nFile \".../lib/python3.10/site-packages/IPython/core/interactiveshell.py\", line 3460, in run_code\r\nexec(code_obj, self.user_global_ns, self.user_ns)\r\nFile \"\", line 1, in\r\nfrom langchain.retrievers import ContextualCompressionRetriever\r\nImportError: cannot import name 'ContextualCompressionRetriever' from 'langchain.retrievers' (.../lib/python3.10/site-packages/langchain/retrievers/init.py)\r\n\r\nThanks in advance,\r\nMikel.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3585/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3585/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3584",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3584/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3584/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3584/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3584",
        "id": 1684697763,
        "node_id": "PR_kwDOIPDwls5PLvW6",
        "number": 3584,
        "title": "Add docs for Fly.io deployment",
        "user": {
            "login": "katiayn",
            "id": 13651115,
            "node_id": "MDQ6VXNlcjEzNjUxMTE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13651115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/katiayn",
            "html_url": "https://github.com/katiayn",
            "followers_url": "https://api.github.com/users/katiayn/followers",
            "following_url": "https://api.github.com/users/katiayn/following{/other_user}",
            "gists_url": "https://api.github.com/users/katiayn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/katiayn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/katiayn/subscriptions",
            "organizations_url": "https://api.github.com/users/katiayn/orgs",
            "repos_url": "https://api.github.com/users/katiayn/repos",
            "events_url": "https://api.github.com/users/katiayn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/katiayn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T09:59:11Z",
        "updated_at": "2023-04-26T21:41:09Z",
        "closed_at": "2023-04-26T21:41:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3584",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3584",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3584.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3584.patch",
            "merged_at": "2023-04-26T21:41:08Z"
        },
        "body": "A minimal example of how to deploy LangChain to Fly.io using Flask.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3584/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3584/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3583",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3583/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3583/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3583/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3583",
        "id": 1684664076,
        "node_id": "I_kwDOIPDwls5kae8M",
        "number": 3583,
        "title": "ConversationRetrievalChain with memory",
        "user": {
            "login": "pelyhe",
            "id": 75569619,
            "node_id": "MDQ6VXNlcjc1NTY5NjE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/75569619?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pelyhe",
            "html_url": "https://github.com/pelyhe",
            "followers_url": "https://api.github.com/users/pelyhe/followers",
            "following_url": "https://api.github.com/users/pelyhe/following{/other_user}",
            "gists_url": "https://api.github.com/users/pelyhe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pelyhe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pelyhe/subscriptions",
            "organizations_url": "https://api.github.com/users/pelyhe/orgs",
            "repos_url": "https://api.github.com/users/pelyhe/repos",
            "events_url": "https://api.github.com/users/pelyhe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pelyhe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-26T09:40:35Z",
        "updated_at": "2023-09-27T16:07:31Z",
        "closed_at": "2023-09-27T16:07:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hello!\r\n\r\nI am building an ai assistant, with the help of langchain's ConversationRetrievalChain. I built a FastAPI endpoint where users can ask questions from the ai. I store the previous messages in my db. My code:\r\n\r\n```\r\n    def create_chat_agent():\r\n        llm = ChatOpenAI(temperature=0, model_name=\"gpt-3.5-turbo\")\r\n        \r\n        # Data Ingestion\r\n        word_loader = DirectoryLoader(DOCUMENTS_DIRECTORY, glob=\"*.docx\")\r\n        documents = []\r\n        documents.extend(word_loader.load())\r\n        # Chunk and Embeddings\r\n        text_splitter = CharacterTextSplitter(chunk_size=800, chunk_overlap=0)\r\n        documents = text_splitter.split_documents(documents)\r\n        embeddings = OpenAIEmbeddings()\r\n        vectorstore = FAISS.from_documents(documents, embeddings)\r\n\r\n        # Initialise Langchain - Conversation Retrieval Chain\r\n        return ConversationalRetrievalChain.from_llm(llm, vectorstore.as_retriever())\r\n\r\n\r\n    def askAI(cls, prompt: str, id: str):\r\n        qa = cls.create_chat_agent()\r\n\r\n        chat_history = []\r\n        previousMessages = UserController.get_previous_messages_by_user_id(id)\r\n        for message in previousMessages:\r\n            messageObject = (message['user'], message['ai'])\r\n            chat_history.append(messageObject)\r\n\r\n        response = qa({\"question\": prompt, \"chat_history\": chat_history})\r\n        cls.update_previous_messages(userId=id, prompt=prompt, response=response[\"answer\"])\r\n\r\n        return response\r\n``` \r\n\r\nI always get back an answer and most of the time it is very specific, however sometimes it answers the wrong question. I mean the question I asked a few prompts earlier. I don't know what is wrong in here, can somebody help me?\r\nThank you in advance!!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3583/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3583/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3582",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3582/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3582/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3582/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3582",
        "id": 1684604502,
        "node_id": "PR_kwDOIPDwls5PLa-4",
        "number": 3582,
        "title": "Update docker-compose.yaml",
        "user": {
            "login": "ilyboc",
            "id": 19239157,
            "node_id": "MDQ6VXNlcjE5MjM5MTU3",
            "avatar_url": "https://avatars.githubusercontent.com/u/19239157?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ilyboc",
            "html_url": "https://github.com/ilyboc",
            "followers_url": "https://api.github.com/users/ilyboc/followers",
            "following_url": "https://api.github.com/users/ilyboc/following{/other_user}",
            "gists_url": "https://api.github.com/users/ilyboc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ilyboc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ilyboc/subscriptions",
            "organizations_url": "https://api.github.com/users/ilyboc/orgs",
            "repos_url": "https://api.github.com/users/ilyboc/repos",
            "events_url": "https://api.github.com/users/ilyboc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ilyboc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T09:10:51Z",
        "updated_at": "2023-04-27T00:40:16Z",
        "closed_at": "2023-04-26T22:12:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3582",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3582",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3582.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3582.patch",
            "merged_at": "2023-04-26T22:12:00Z"
        },
        "body": "The following error gets returned when trying to launch langchain-server:\r\n\r\nERROR: The Compose file '/opt/homebrew/lib/python3.11/site-packages/langchain/docker-compose.yaml' is invalid because:\r\nservices.langchain-db.expose is invalid: should be of the format 'PORT[/PROTOCOL]'\r\n\r\nSolution:\r\nChange line 28 from - 5432:5432 to - 5432",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3582/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3582/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3581",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3581/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3581/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3581/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3581",
        "id": 1684535063,
        "node_id": "PR_kwDOIPDwls5PLMDh",
        "number": 3581,
        "title": "Fix type annotation for SQLDatabaseToolkit.llm",
        "user": {
            "login": "kangoo13",
            "id": 9050016,
            "node_id": "MDQ6VXNlcjkwNTAwMTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9050016?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kangoo13",
            "html_url": "https://github.com/kangoo13",
            "followers_url": "https://api.github.com/users/kangoo13/followers",
            "following_url": "https://api.github.com/users/kangoo13/following{/other_user}",
            "gists_url": "https://api.github.com/users/kangoo13/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kangoo13/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kangoo13/subscriptions",
            "organizations_url": "https://api.github.com/users/kangoo13/orgs",
            "repos_url": "https://api.github.com/users/kangoo13/repos",
            "events_url": "https://api.github.com/users/kangoo13/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kangoo13/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T08:33:08Z",
        "updated_at": "2023-04-29T04:19:02Z",
        "closed_at": "2023-04-29T04:19:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3581",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3581",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3581.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3581.patch",
            "merged_at": "2023-04-29T04:19:02Z"
        },
        "body": "Currently `langchain.agents.agent_toolkits.SQLDatabaseToolkit` has a field `llm` with type `BaseLLM`. This breaks initialization for some LLMs. For example, trying to use it with GPT4:\r\n```\r\n\r\nfrom langchain.sql_database import SQLDatabase\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.agents.agent_toolkits import SQLDatabaseToolkit\r\n\r\n\r\ndb = SQLDatabase.from_uri(\"some_db_uri\")\r\nllm = ChatOpenAI(model_name=\"gpt-4\")\r\ntoolkit = SQLDatabaseToolkit(db=db, llm=llm)\r\n\r\n# pydantic.error_wrappers.ValidationError: 1 validation error for SQLDatabaseToolkit\r\n# llm\r\n#  Can't instantiate abstract class BaseLLM with abstract methods _agenerate, _generate, _llm_type (type=type_error)\r\n```\r\nSeems like much of the rest of the codebase has switched from BaseLLM to BaseLanguageModel. This PR makes the change for SQLDatabaseToolkit as well",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3581/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3581/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3580",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3580/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3580/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3580/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3580",
        "id": 1684471856,
        "node_id": "PR_kwDOIPDwls5PK-fd",
        "number": 3580,
        "title": "Persistent Bash Shell",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T07:54:43Z",
        "updated_at": "2023-04-27T17:38:16Z",
        "closed_at": "2023-04-26T22:20:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3580",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3580",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3580.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3580.patch",
            "merged_at": "2023-04-26T22:20:29Z"
        },
        "body": "Clean up linting and make more idiomatic by using an output parser",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3580/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3580/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3579",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3579/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3579/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3579/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3579",
        "id": 1684427942,
        "node_id": "I_kwDOIPDwls5kZlSm",
        "number": 3579,
        "title": "Token usage calculation is not working for Asynchronous requests in ChatOpenA",
        "user": {
            "login": "sammichenVV",
            "id": 22388079,
            "node_id": "MDQ6VXNlcjIyMzg4MDc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/22388079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sammichenVV",
            "html_url": "https://github.com/sammichenVV",
            "followers_url": "https://api.github.com/users/sammichenVV/followers",
            "following_url": "https://api.github.com/users/sammichenVV/following{/other_user}",
            "gists_url": "https://api.github.com/users/sammichenVV/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sammichenVV/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sammichenVV/subscriptions",
            "organizations_url": "https://api.github.com/users/sammichenVV/orgs",
            "repos_url": "https://api.github.com/users/sammichenVV/repos",
            "events_url": "https://api.github.com/users/sammichenVV/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sammichenVV/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-26T07:21:28Z",
        "updated_at": "2023-09-10T16:27:08Z",
        "closed_at": "2023-09-10T16:27:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "![image](https://user-images.githubusercontent.com/22388079/234501019-6731c2ac-3012-4f7c-91dd-3506d35829a0.png)\r\nToken usage calculation is not working\uff1a\r\n![image](https://user-images.githubusercontent.com/22388079/234499985-51e5b3fd-49e7-406c-a50b-beb1458aff44.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3579/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3579/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3578",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3578/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3578/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3578/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3578",
        "id": 1684422701,
        "node_id": "PR_kwDOIPDwls5PK0K5",
        "number": 3578,
        "title": "update zilliz example",
        "user": {
            "login": "locustbaby",
            "id": 21237232,
            "node_id": "MDQ6VXNlcjIxMjM3MjMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/21237232?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/locustbaby",
            "html_url": "https://github.com/locustbaby",
            "followers_url": "https://api.github.com/users/locustbaby/followers",
            "following_url": "https://api.github.com/users/locustbaby/following{/other_user}",
            "gists_url": "https://api.github.com/users/locustbaby/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/locustbaby/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/locustbaby/subscriptions",
            "organizations_url": "https://api.github.com/users/locustbaby/orgs",
            "repos_url": "https://api.github.com/users/locustbaby/repos",
            "events_url": "https://api.github.com/users/locustbaby/events{/privacy}",
            "received_events_url": "https://api.github.com/users/locustbaby/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T07:17:21Z",
        "updated_at": "2023-05-04T01:39:32Z",
        "closed_at": "2023-04-29T05:10:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3578",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3578",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3578.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3578.patch",
            "merged_at": "2023-04-29T05:10:13Z"
        },
        "body": "1. Now the Zilliz example can't connect to Zilliz Cloud, fixed",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3578/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3578/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3577",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3577/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3577/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3577/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3577",
        "id": 1684371023,
        "node_id": "I_kwDOIPDwls5kZXZP",
        "number": 3577,
        "title": "ChatGPT Plugin sample code cannot be executed",
        "user": {
            "login": "k-nasa",
            "id": 23740172,
            "node_id": "MDQ6VXNlcjIzNzQwMTcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/23740172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/k-nasa",
            "html_url": "https://github.com/k-nasa",
            "followers_url": "https://api.github.com/users/k-nasa/followers",
            "following_url": "https://api.github.com/users/k-nasa/following{/other_user}",
            "gists_url": "https://api.github.com/users/k-nasa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/k-nasa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/k-nasa/subscriptions",
            "organizations_url": "https://api.github.com/users/k-nasa/orgs",
            "repos_url": "https://api.github.com/users/k-nasa/repos",
            "events_url": "https://api.github.com/users/k-nasa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/k-nasa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-26T06:37:33Z",
        "updated_at": "2023-04-26T06:42:31Z",
        "closed_at": "2023-04-26T06:42:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Description\r\n\r\nref: https://python.langchain.com/en/latest/modules/agents/tools/examples/chatgpt_plugins.html\r\n\r\nThanks for the great tool.\r\n\r\nI'm trying ChatGPT Plugin.\r\nI get an error when I run the sample code in the document.\r\n\r\nIt looks like it's caused by single quotes.\r\n\r\n### output\r\n\r\n```\r\n> Entering new AgentExecutor chain...\r\nI need to use the Klarna Shopping API to search for available t shirts.\r\nAction: KlarnaProducts\r\nAction Input: None\r\nObservation: Usage Guide: Assistant uses the Klarna plugin to get relevant product suggestions for any shopping or product discovery purpose. Assistant will reply with the following 3 paragraphs 1) Search Results 2) Product Comparison of the Search Results 3) Followup Questions. The first paragraph contains a list of the products with their attributes listed clearly and concisely as bullet points under the product, together with a link to the product and an explanation. Links will always be returned and should be shown to the user. The second paragraph compares the results returned in a summary sentence starting with \"In summary\". Assistant comparisons consider only the most important features of the products that will help them fit the users request, and each product mention is brief, short and concise. In the third paragraph assistant always asks helpful follow-up questions and end with a question mark. When assistant is asking a follow-up question, it uses it's product expertise to provide information pertaining to the subject of the user's request that may guide them in their search for the right product.\r\n\r\nOpenAPI Spec: {'openapi': '3.0.1', 'info': {'version': 'v0', 'title': 'Open AI Klarna product Api'}, 'servers': [{'url': 'https://www.klarna.com/us/shopping'}], 'tags': [{'name': 'open-ai-product-endpoint', 'description': 'Open AI Product Endpoint. Query for products.'}], 'paths': {'/public/openai/v0/products': {'get': {'tags': ['open-ai-product-endpoint'], 'summary': 'API for fetching Klarna product information', 'operationId': 'productsUsingGET', 'parameters': [{'name': 'q', 'in': 'query', 'description': \"A precise query that matches one very small category or product that needs to be searched for to find the products the user is looking for. If the user explicitly stated what they want, use that as a query. The query is as specific as possible to the product name or category mentioned by the user in its singular form, and don't contain any clarifiers like latest, newest, cheapest, budget, premium, expensive or similar. The query is always taken from the latest topic, if there is a new topic a new query is started.\", 'required': True, 'schema': {'type': 'string'}}, {'name': 'size', 'in': 'query', 'description': 'number of products returned', 'required': False, 'schema': {'type': 'integer'}}, {'name': 'min_price', 'in': 'query', 'description': \"(Optional) Minimum price in local currency for the product searched for. Either explicitly stated by the user or implicitly inferred from a combination of the user's request and the kind of product searched for.\", 'required': False, 'schema': {'type': 'integer'}}, {'name': 'max_price', 'in': 'query', 'description': \"(Optional) Maximum price in local currency for the product searched for. Either explicitly stated by the user or implicitly inferred from a combination of the user's request and the kind of product searched for.\", 'required': False, 'schema': {'type': 'integer'}}], 'responses': {'200': {'description': 'Products found', 'content': {'application/json': {'schema': {'$ref': '#/components/schemas/ProductResponse'}}}}, '503': {'description': 'one or more services are unavailable'}}, 'deprecated': False}}}, 'components': {'schemas': {'Product': {'type': 'object', 'properties': {'attributes': {'type': 'array', 'items': {'type': 'string'}}, 'name': {'type': 'string'}, 'price': {'type': 'string'}, 'url': {'type': 'string'}}, 'title': 'Product'}, 'ProductResponse': {'type': 'object', 'properties': {'products': {'type': 'array', 'items': {'$ref': '#/components/schemas/Product'}}}, 'title': 'ProductResponse'}}}}\r\nThought:I need to use the Klarna Shopping API to search for available t shirts.\r\nAction: requests_get\r\nAction Input: 'https://www.klarna.com/us/shopping/public/openai/v0/products?q=t%20shirts&size=10'Traceback (most recent call last):\r\n  File \"test.py\", line 11, in <module>\r\n    agent_chain.run(\"what t shirts are available in klarna?\")\r\n  File \"/Users/asan/.pyenv/versions/3.8.12/lib/python3.8/site-packages/langchain/chains/base.py\", line 213, in run\r\n    return self(args[0])[self.output_keys[0]]\r\n  File \"/Users/asan/.pyenv/versions/3.8.12/lib/python3.8/site-packages/langchain/chains/base.py\", line 116, in __call__\r\n    raise e\r\n  File \"/Users/asan/.pyenv/versions/3.8.12/lib/python3.8/site-packages/langchain/chains/base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n  File \"/Users/asan/.pyenv/versions/3.8.12/lib/python3.8/site-packages/langchain/agents/agent.py\", line 792, in _call\r\n    next_step_output = self._take_next_step(\r\n  File \"/Users/asan/.pyenv/versions/3.8.12/lib/python3.8/site-packages/langchain/agents/agent.py\", line 695, in _take_next_step\r\n    observation = tool.run(\r\n  File \"/Users/asan/.pyenv/versions/3.8.12/lib/python3.8/site-packages/langchain/tools/base.py\", line 184, in run\r\n    raise e\r\n  File \"/Users/asan/.pyenv/versions/3.8.12/lib/python3.8/site-packages/langchain/tools/base.py\", line 181, in run\r\n    observation = self._run(*tool_args, **tool_kwargs)\r\n  File \"/Users/asan/.pyenv/versions/3.8.12/lib/python3.8/site-packages/langchain/tools/requests/tool.py\", line 31, in _run\r\n    return self.requests_wrapper.get(url)\r\n  File \"/Users/asan/.pyenv/versions/3.8.12/lib/python3.8/site-packages/langchain/requests.py\", line 125, in get\r\n    return self.requests.get(url, **kwargs).text\r\n  File \"/Users/asan/.pyenv/versions/3.8.12/lib/python3.8/site-packages/langchain/requests.py\", line 28, in get\r\n    return requests.get(url, headers=self.headers, **kwargs)\r\n  File \"/Users/asan/.pyenv/versions/3.8.12/lib/python3.8/site-packages/requests/api.py\", line 73, in get\r\n    return request(\"get\", url, params=params, **kwargs)\r\n  File \"/Users/asan/.pyenv/versions/3.8.12/lib/python3.8/site-packages/requests/api.py\", line 59, in request\r\n    return session.request(method=method, url=url, **kwargs)\r\n  File \"/Users/asan/.pyenv/versions/3.8.12/lib/python3.8/site-packages/requests/sessions.py\", line 587, in request\r\n    resp = self.send(prep, **send_kwargs)\r\n  File \"/Users/asan/.pyenv/versions/3.8.12/lib/python3.8/site-packages/requests/sessions.py\", line 695, in send\r\n    adapter = self.get_adapter(url=request.url)\r\n  File \"/Users/asan/.pyenv/versions/3.8.12/lib/python3.8/site-packages/requests/sessions.py\", line 792, in get_adapter\r\n    raise InvalidSchema(f\"No connection adapters were found for {url!r}\")\r\nrequests.exceptions.InvalidSchema: No connection adapters were found for \"'https://www.klarna.com/us/shopping/public/openai/v0/products?q=t%20shirts&size=10'\"\r\n```\r\n\r\n\r\n\r\n### source code \r\n\r\n```python\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.agents import load_tools, initialize_agent\r\nfrom langchain.agents import AgentType\r\nfrom langchain.tools import AIPluginTool\r\ntool = AIPluginTool.from_plugin_url(\"https://www.klarna.com/.well-known/ai-plugin.json\")\r\nllm = ChatOpenAI(temperature=0)\r\ntools = load_tools([\"requests_all\"] )\r\ntools += [tool]\r\n\r\nagent_chain = initialize_agent(tools, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)\r\nagent_chain.run(\"what t shirts are available in klarna?\")\r\n```\r\n\r\n\r\n### versions\r\n\r\n- ptyhon: 3.8.12\r\n- langchain: '0.0.149'\r\n\r\n<details><summary>Details</summary>\r\n<p>\r\n\r\n```sh\r\n~/lab/wantedly/visit-machine-learning /langchain_plugin - \u2691 \u271a \u2026  nsmryk/add_langchain_plugin  - SIGHUP\r\n:( % python --version\r\nPython 3.8.12\r\n\r\n~/lab/wantedly/visit-machine-learning /langchain_plugin - \u2691 \u271a \u2026  nsmryk/add_langchain_plugin\r\n:) % python\r\nPython 3.8.12 (default, Mar 30 2022, 16:26:57)\r\n[Clang 13.0.0 (clang-1300.0.29.3)] on darwin\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import langchain\r\nlang>>> langchain.__version__\r\n'0.0.149'\r\n>>>\r\n```\r\n\r\n</p>\r\n</details> ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3577/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3577/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3576",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3576/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3576/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3576/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3576",
        "id": 1684368379,
        "node_id": "PR_kwDOIPDwls5PKong",
        "number": 3576,
        "title": "Confluence beautifulsoup",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T06:35:05Z",
        "updated_at": "2023-04-26T06:40:07Z",
        "closed_at": "2023-04-26T06:40:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3576",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3576",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3576.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3576.patch",
            "merged_at": "2023-04-26T06:40:06Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3576/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3576/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3575",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3575/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3575/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3575/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3575",
        "id": 1684317389,
        "node_id": "PR_kwDOIPDwls5PKd0c",
        "number": 3575,
        "title": "Add ChatModel, LLM, and Embeddings for Google's PaLM APIs",
        "user": {
            "login": "brotchie",
            "id": 987457,
            "node_id": "MDQ6VXNlcjk4NzQ1Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/987457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brotchie",
            "html_url": "https://github.com/brotchie",
            "followers_url": "https://api.github.com/users/brotchie/followers",
            "following_url": "https://api.github.com/users/brotchie/following{/other_user}",
            "gists_url": "https://api.github.com/users/brotchie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brotchie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brotchie/subscriptions",
            "organizations_url": "https://api.github.com/users/brotchie/orgs",
            "repos_url": "https://api.github.com/users/brotchie/repos",
            "events_url": "https://api.github.com/users/brotchie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brotchie/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-26T05:46:13Z",
        "updated_at": "2023-05-01T22:23:17Z",
        "closed_at": "2023-05-01T22:23:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3575",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3575",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3575.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3575.patch",
            "merged_at": "2023-05-01T22:23:17Z"
        },
        "body": " - Add langchain.llms.GooglePalm for text completion,\r\n - Add langchain.chat_models.ChatGooglePalm for chat completion,\r\n - Add langchain.embeddings.GooglePalmEmbeddings for sentence embeddings,\r\n - Add example field to HumanMessage and AIMessage so that users can feed in examples into the PaLM Chat API,\r\n - Add system and unit tests.\r\n\r\nNote async completion for the Text API is not yet supported and will be included in a future PR.\r\n\r\nHappy for feedback on any aspect of this PR, especially our choice of adding an example field to Human and AI Message objects to enable passing example messages to the API.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3575/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3575/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3574",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3574/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3574/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3574/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3574",
        "id": 1684268424,
        "node_id": "PR_kwDOIPDwls5PKTWA",
        "number": 3574,
        "title": "Fix docs error for google drive loader",
        "user": {
            "login": "epec254",
            "id": 8846092,
            "node_id": "MDQ6VXNlcjg4NDYwOTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8846092?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/epec254",
            "html_url": "https://github.com/epec254",
            "followers_url": "https://api.github.com/users/epec254/followers",
            "following_url": "https://api.github.com/users/epec254/following{/other_user}",
            "gists_url": "https://api.github.com/users/epec254/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/epec254/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/epec254/subscriptions",
            "organizations_url": "https://api.github.com/users/epec254/orgs",
            "repos_url": "https://api.github.com/users/epec254/repos",
            "events_url": "https://api.github.com/users/epec254/events{/privacy}",
            "received_events_url": "https://api.github.com/users/epec254/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T04:55:03Z",
        "updated_at": "2023-04-26T05:52:59Z",
        "closed_at": "2023-04-26T05:52:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3574",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3574",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3574.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3574.patch",
            "merged_at": "2023-04-26T05:52:59Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3574/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3574/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3573",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3573/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3573/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3573/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3573",
        "id": 1684240867,
        "node_id": "PR_kwDOIPDwls5PKNqf",
        "number": 3573,
        "title": "Harrison/plugnplai",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T04:19:44Z",
        "updated_at": "2023-04-26T15:09:35Z",
        "closed_at": "2023-04-26T15:09:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3573",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3573",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3573.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3573.patch",
            "merged_at": "2023-04-26T15:09:34Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3573/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3573/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3572",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3572/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3572/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3572/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3572",
        "id": 1684198928,
        "node_id": "PR_kwDOIPDwls5PKFKJ",
        "number": 3572,
        "title": "Structured Base Tool / Re-use Agents",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T03:19:38Z",
        "updated_at": "2023-04-26T17:37:41Z",
        "closed_at": "2023-04-26T17:37:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3572",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3572",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3572.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3572.patch",
            "merged_at": null
        },
        "body": "Overall approach:\r\n\r\n- Create new BaseStructuredTool\r\n- BaseTool now inherits from BaseStructuredTool. Wraps string input as a dict to reuse  structured tool input. Still some weird handling that's not directly related to this PR for handling json string tools in the Chat Agent\r\n\r\nBig controversial move:\r\n- Update the typing of all the Agent classes to take in a BaseStructuredTool. This technically breaks backwards compatibility  in that the function signature has been expanded. I think it's worth the tradeoff since\r\n   - New tool types are only now being introduced.\r\n   - Immediate concerns would be linting issues.\r\n   - Then there wouldn't be immediate validation checks for custom agents inheriting from the base Agent class trying to use new tools.\r\n- Added to the `validate_all_tools` for all the relevant existing agent implementations to ensure only instances of `BaseTool` are accepted.\r\n\r\nA couple obvious alternatives would be:\r\n- Create an entirely new set of agents (may end up with more copied code than desired and increases the cognitive load when building custom agents, I believe)\r\n- extract agent methods and properly refactor them (this isn't the most straightforward since there is already 4 levels of inheritance)\r\n\r\nCouple primary TODOs before this would be landed:\r\n- Update documentation\r\n- Create new agent to consume\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3572/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3572/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3571",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3571/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3571/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3571/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3571",
        "id": 1684168216,
        "node_id": "PR_kwDOIPDwls5PJ-2p",
        "number": 3571,
        "title": "Split text into complete sentences",
        "user": {
            "login": "kroggen",
            "id": 7624275,
            "node_id": "MDQ6VXNlcjc2MjQyNzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7624275?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kroggen",
            "html_url": "https://github.com/kroggen",
            "followers_url": "https://api.github.com/users/kroggen/followers",
            "following_url": "https://api.github.com/users/kroggen/following{/other_user}",
            "gists_url": "https://api.github.com/users/kroggen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kroggen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kroggen/subscriptions",
            "organizations_url": "https://api.github.com/users/kroggen/orgs",
            "repos_url": "https://api.github.com/users/kroggen/repos",
            "events_url": "https://api.github.com/users/kroggen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kroggen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-04-26T02:41:17Z",
        "updated_at": "2023-09-13T06:29:14Z",
        "closed_at": "2023-09-13T06:29:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3571",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3571",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3571.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3571.patch",
            "merged_at": null
        },
        "body": "It makes more sense to the language models to process complete sentences rather than partial ones.\r\n\r\nThis PR modified the default `separators` list on the RecursiveCharacterTextSplitter as well as in the MarkdownTextSplitter, to attempt to split the text into complete sentences before attempting with single new lines (`\\n`)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3571/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3571/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3570",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3570/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3570/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3570/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3570",
        "id": 1684160515,
        "node_id": "PR_kwDOIPDwls5PJ9Xm",
        "number": 3570,
        "title": "Fix document loader",
        "user": {
            "login": "kevinnlei",
            "id": 5331549,
            "node_id": "MDQ6VXNlcjUzMzE1NDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5331549?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kevinnlei",
            "html_url": "https://github.com/kevinnlei",
            "followers_url": "https://api.github.com/users/kevinnlei/followers",
            "following_url": "https://api.github.com/users/kevinnlei/following{/other_user}",
            "gists_url": "https://api.github.com/users/kevinnlei/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kevinnlei/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kevinnlei/subscriptions",
            "organizations_url": "https://api.github.com/users/kevinnlei/orgs",
            "repos_url": "https://api.github.com/users/kevinnlei/repos",
            "events_url": "https://api.github.com/users/kevinnlei/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kevinnlei/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T02:30:13Z",
        "updated_at": "2023-04-26T02:30:41Z",
        "closed_at": "2023-04-26T02:30:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3570",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3570",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3570.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3570.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3570/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3570/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3569",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3569/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3569/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3569/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3569",
        "id": 1684129288,
        "node_id": "I_kwDOIPDwls5kYcYI",
        "number": 3569,
        "title": "Issue with using LlamaCpp LLM in Pandas Dataframe Agent ",
        "user": {
            "login": "serena-mafinancial",
            "id": 129805157,
            "node_id": "U_kgDOB7yrZQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/129805157?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/serena-mafinancial",
            "html_url": "https://github.com/serena-mafinancial",
            "followers_url": "https://api.github.com/users/serena-mafinancial/followers",
            "following_url": "https://api.github.com/users/serena-mafinancial/following{/other_user}",
            "gists_url": "https://api.github.com/users/serena-mafinancial/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/serena-mafinancial/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/serena-mafinancial/subscriptions",
            "organizations_url": "https://api.github.com/users/serena-mafinancial/orgs",
            "repos_url": "https://api.github.com/users/serena-mafinancial/repos",
            "events_url": "https://api.github.com/users/serena-mafinancial/events{/privacy}",
            "received_events_url": "https://api.github.com/users/serena-mafinancial/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-04-26T02:00:54Z",
        "updated_at": "2023-12-13T16:10:28Z",
        "closed_at": "2023-12-13T16:10:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am trying to use the Pandas Agent create_pandas_dataframe_agent, but instead of using OpenAI I am replacing the LLM with LlamaCpp. I am running this in Python 3.9 on a SageMaker notebook, with a ml.g4dn.xlarge instance size. I am having trouble with running this agent and produces a weird error. \r\n\r\nThe code is as follows:\r\n![image](https://user-images.githubusercontent.com/129805157/234446661-a5fb5ed5-e632-4c63-b850-9e384b024f32.png)\r\n\r\nThis is the error log: \r\n![image](https://user-images.githubusercontent.com/129805157/234446223-499e2ef2-5df8-433d-ba05-9fbed08ce91c.png)\r\n![image](https://user-images.githubusercontent.com/129805157/234446269-ab7ba7e5-3b68-411d-b051-08763a95df0b.png)\r\n![image](https://user-images.githubusercontent.com/129805157/234446303-5bc807ce-747c-4b75-a2d0-7df2921ef550.png)\r\n\r\n\r\nDetailed error log below: \r\n![image](https://user-images.githubusercontent.com/129805157/234474222-fd863554-b8d6-4db5-bba6-3edfa031d94a.png)\r\n![image](https://user-images.githubusercontent.com/129805157/234474261-9ace2d31-809b-4b7e-a893-53f1edabacac.png)\r\n![image](https://user-images.githubusercontent.com/129805157/234474284-0e22d4e8-b8df-4498-b963-bb275353d88c.png)\r\n![image](https://user-images.githubusercontent.com/129805157/234474317-2297aec6-4821-45d0-8db3-6e9a81ba8eb6.png)\r\n![image](https://user-images.githubusercontent.com/129805157/234474350-9952596c-a47e-490d-87ad-e7ed418f79fe.png)\r\n![image](https://user-images.githubusercontent.com/129805157/234474376-a222688c-eca9-47f4-9701-b0926dfe4f1c.png)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3569/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3569/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3568",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3568/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3568/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3568/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3568",
        "id": 1684115240,
        "node_id": "PR_kwDOIPDwls5PJz6m",
        "number": 3568,
        "title": "Add example plugins list with plugnplai",
        "user": {
            "login": "edreisMD",
            "id": 16641288,
            "node_id": "MDQ6VXNlcjE2NjQxMjg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16641288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edreisMD",
            "html_url": "https://github.com/edreisMD",
            "followers_url": "https://api.github.com/users/edreisMD/followers",
            "following_url": "https://api.github.com/users/edreisMD/following{/other_user}",
            "gists_url": "https://api.github.com/users/edreisMD/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edreisMD/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edreisMD/subscriptions",
            "organizations_url": "https://api.github.com/users/edreisMD/orgs",
            "repos_url": "https://api.github.com/users/edreisMD/repos",
            "events_url": "https://api.github.com/users/edreisMD/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edreisMD/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T01:43:53Z",
        "updated_at": "2023-04-26T04:14:56Z",
        "closed_at": "2023-04-26T04:14:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3568",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3568",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3568.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3568.patch",
            "merged_at": "2023-04-26T04:14:56Z"
        },
        "body": "Add an example of plugins retrieval, getting list from plugnplai.com",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3568/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3568/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3567",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3567/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3567/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3567/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3567",
        "id": 1684062257,
        "node_id": "PR_kwDOIPDwls5PJo-i",
        "number": 3567,
        "title": "Callbacks Refactor[9/n]: add notebook and fixes",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T00:44:52Z",
        "updated_at": "2023-04-26T01:15:18Z",
        "closed_at": "2023-04-26T01:15:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3567",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3567",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3567.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3567.patch",
            "merged_at": "2023-04-26T01:15:17Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3567/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3567/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3566",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3566/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3566/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3566/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3566",
        "id": 1684058484,
        "node_id": "PR_kwDOIPDwls5PJoPk",
        "number": 3566,
        "title": "Add example with plugnplai ",
        "user": {
            "login": "edreisMD",
            "id": 16641288,
            "node_id": "MDQ6VXNlcjE2NjQxMjg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/16641288?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edreisMD",
            "html_url": "https://github.com/edreisMD",
            "followers_url": "https://api.github.com/users/edreisMD/followers",
            "following_url": "https://api.github.com/users/edreisMD/following{/other_user}",
            "gists_url": "https://api.github.com/users/edreisMD/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edreisMD/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edreisMD/subscriptions",
            "organizations_url": "https://api.github.com/users/edreisMD/orgs",
            "repos_url": "https://api.github.com/users/edreisMD/repos",
            "events_url": "https://api.github.com/users/edreisMD/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edreisMD/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T00:38:13Z",
        "updated_at": "2023-04-26T01:18:45Z",
        "closed_at": "2023-04-26T01:18:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3566",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3566",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3566.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3566.patch",
            "merged_at": null
        },
        "body": "Add example of plugins retrieval using plugnplai to get the plugins URL",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3566/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3566/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3565",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3565/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3565/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3565/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3565",
        "id": 1684048255,
        "node_id": "PR_kwDOIPDwls5PJmD4",
        "number": 3565,
        "title": "add feast nb",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T00:27:03Z",
        "updated_at": "2023-04-26T00:46:07Z",
        "closed_at": "2023-04-26T00:46:06Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3565",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3565",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3565.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3565.patch",
            "merged_at": "2023-04-26T00:46:06Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3565/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3565/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3564",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3564/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3564/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3564/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3564",
        "id": 1684037891,
        "node_id": "PR_kwDOIPDwls5PJjwG",
        "number": 3564,
        "title": "Harrison/streamlit handler",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-26T00:19:06Z",
        "updated_at": "2023-04-26T00:26:31Z",
        "closed_at": "2023-04-26T00:26:30Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3564",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3564",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3564.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3564.patch",
            "merged_at": "2023-04-26T00:26:30Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3564/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3564/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3563",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3563/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3563/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3563/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3563",
        "id": 1684005032,
        "node_id": "PR_kwDOIPDwls5PJc8f",
        "number": 3563,
        "title": "Strip surrounding quotes from requests tool URLs.",
        "user": {
            "login": "brotchie",
            "id": 987457,
            "node_id": "MDQ6VXNlcjk4NzQ1Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/987457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brotchie",
            "html_url": "https://github.com/brotchie",
            "followers_url": "https://api.github.com/users/brotchie/followers",
            "following_url": "https://api.github.com/users/brotchie/following{/other_user}",
            "gists_url": "https://api.github.com/users/brotchie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brotchie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brotchie/subscriptions",
            "organizations_url": "https://api.github.com/users/brotchie/orgs",
            "repos_url": "https://api.github.com/users/brotchie/repos",
            "events_url": "https://api.github.com/users/brotchie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brotchie/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-25T23:30:55Z",
        "updated_at": "2023-04-26T04:20:26Z",
        "closed_at": "2023-04-26T04:20:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3563",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3563",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3563.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3563.patch",
            "merged_at": "2023-04-26T04:20:26Z"
        },
        "body": "Often an LLM will output a requests tool input argument surrounded by single quotes. This triggers an exception in the requests library. Here, we add a simple clean url function that strips any leading and trailing single and double quotes before passing the URL to the underlying requests library.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3563/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3563/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3562",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3562/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3562/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3562/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3562",
        "id": 1683953336,
        "node_id": "PR_kwDOIPDwls5PJR-b",
        "number": 3562,
        "title": "bugfix(inference): BaseOutputParser error fix (/ workaround?)",
        "user": {
            "login": "SimonB97",
            "id": 102378134,
            "node_id": "U_kgDOBhoqlg",
            "avatar_url": "https://avatars.githubusercontent.com/u/102378134?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SimonB97",
            "html_url": "https://github.com/SimonB97",
            "followers_url": "https://api.github.com/users/SimonB97/followers",
            "following_url": "https://api.github.com/users/SimonB97/following{/other_user}",
            "gists_url": "https://api.github.com/users/SimonB97/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SimonB97/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SimonB97/subscriptions",
            "organizations_url": "https://api.github.com/users/SimonB97/orgs",
            "repos_url": "https://api.github.com/users/SimonB97/repos",
            "events_url": "https://api.github.com/users/SimonB97/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SimonB97/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-25T22:18:30Z",
        "updated_at": "2023-05-16T00:42:19Z",
        "closed_at": "2023-05-16T00:42:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3562",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3562",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3562.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3562.patch",
            "merged_at": null
        },
        "body": "Previously encountered an error \r\n`BooleanOutputParser expected output value to either be YES or NO. Received No`\r\nwhen using the new LLMChainFilter.\r\n\r\nSorry, haven't further examined the issue/ cause, might be more of a workaround than a fix.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3562/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3562/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3561",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3561/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3561/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3561/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3561",
        "id": 1683936827,
        "node_id": "I_kwDOIPDwls5kXtY7",
        "number": 3561,
        "title": "Can only load text as a text file, not as string input",
        "user": {
            "login": "FayZ676",
            "id": 94952795,
            "node_id": "U_kgDOBajdWw",
            "avatar_url": "https://avatars.githubusercontent.com/u/94952795?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FayZ676",
            "html_url": "https://github.com/FayZ676",
            "followers_url": "https://api.github.com/users/FayZ676/followers",
            "following_url": "https://api.github.com/users/FayZ676/following{/other_user}",
            "gists_url": "https://api.github.com/users/FayZ676/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FayZ676/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FayZ676/subscriptions",
            "organizations_url": "https://api.github.com/users/FayZ676/orgs",
            "repos_url": "https://api.github.com/users/FayZ676/repos",
            "events_url": "https://api.github.com/users/FayZ676/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FayZ676/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-04-25T22:01:15Z",
        "updated_at": "2023-12-01T16:11:03Z",
        "closed_at": "2023-12-01T16:11:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I want to be able to pass pure string text, not as a text file. When I attempt to do so with long documents I get the error about the file name being too long:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/uvicorn/protocols/http/httptools_impl.py\", line 436, in run_asgi\r\n    result = await app(  # type: ignore[func-returns-value]\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/uvicorn/middleware/proxy_headers.py\", line 78, in __call__\r\n    return await self.app(scope, receive, send)\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/fastapi/applications.py\", line 276, in __call__\r\n    await super().__call__(scope, receive, send)\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/starlette/applications.py\", line 122, in __call__\r\n    await self.middleware_stack(scope, receive, send)\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/starlette/middleware/errors.py\", line 184, in __call__\r\n    raise exc\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/starlette/middleware/errors.py\", line 162, in __call__\r\n    await self.app(scope, receive, _send)\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/starlette/middleware/exceptions.py\", line 79, in __call__\r\n    raise exc\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/starlette/middleware/exceptions.py\", line 68, in __call__\r\n    await self.app(scope, receive, sender)\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/fastapi/middleware/asyncexitstack.py\", line 21, in __call__\r\n    raise e\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/fastapi/middleware/asyncexitstack.py\", line 18, in __call__\r\n    await self.app(scope, receive, send)\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/starlette/routing.py\", line 718, in __call__\r\n    await route.handle(scope, receive, send)\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/starlette/routing.py\", line 276, in handle\r\n    await self.app(scope, receive, send)\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/starlette/routing.py\", line 66, in app\r\n    response = await func(request)\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/fastapi/routing.py\", line 237, in app\r\n    raw_response = await run_endpoint_function(\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/fastapi/routing.py\", line 163, in run_endpoint_function\r\n    return await dependant.call(**values)\r\n  File \"/home/faizi/Projects/docu-query/langchain/main.py\", line 50, in query\r\n    response = query_document(query, text)\r\n  File \"/home/faizi/Projects/docu-query/langchain/__langchain__.py\", line 13, in query_document\r\n    index = VectorstoreIndexCreator().from_loaders([loader])\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/langchain/indexes/vectorstore.py\", line 69, in from_loaders\r\n    docs.extend(loader.load())\r\n  File \"/home/faizi/miniconda3/envs/langchain/lib/python3.10/site-packages/langchain/document_loaders/text.py\", line 17, in load\r\n    with open(self.file_path, encoding=self.encoding) as f:\r\nOSError: [Errno 36] File name too long:\r\n```\r\nThe way I've been able to get it to work has been like so:\r\n```\r\n    # get document from supabase where userName = userName\r\n    document = supabase \\\r\n        .table('Documents') \\\r\n        .select('document') \\\r\n        .eq('userName', userName) \\\r\n        .execute()\r\n    text = document.data[0]['document']\r\n\r\n    # write text to a temporary file\\\r\n    temp = tempfile.NamedTemporaryFile(mode='w+t', encoding='utf-8')\r\n    temp.write(text)\r\n    temp.seek(0)\r\n\r\n    # query the document\r\n    loader = TextLoader(temp.name)\r\n    index = VectorstoreIndexCreator().from_loaders([loader])\r\n    response = index.query(query)\r\n\r\n    # delete the temporary file\r\n    temp.close()\r\n```\r\n\r\nThere must be a more straight forward way. Am I missing something here?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3561/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3561/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3560",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3560/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3560/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3560/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3560",
        "id": 1683927198,
        "node_id": "PR_kwDOIPDwls5PJMR5",
        "number": 3560,
        "title": "example: multi player dnd",
        "user": {
            "login": "mbchang",
            "id": 6439365,
            "node_id": "MDQ6VXNlcjY0MzkzNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6439365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbchang",
            "html_url": "https://github.com/mbchang",
            "followers_url": "https://api.github.com/users/mbchang/followers",
            "following_url": "https://api.github.com/users/mbchang/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbchang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbchang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbchang/subscriptions",
            "organizations_url": "https://api.github.com/users/mbchang/orgs",
            "repos_url": "https://api.github.com/users/mbchang/repos",
            "events_url": "https://api.github.com/users/mbchang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbchang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-25T21:52:09Z",
        "updated_at": "2023-04-26T04:20:39Z",
        "closed_at": "2023-04-26T04:20:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3560",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3560",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3560.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3560.patch",
            "merged_at": "2023-04-26T04:20:39Z"
        },
        "body": "This notebook shows how the DialogueAgent and DialogueSimulator class make it easy to extend the [Two-Player Dungeons & Dragons example](https://python.langchain.com/en/latest/use_cases/agent_simulations/two_player_dnd.html) to multiple players.\r\n\r\nThe main difference between simulating two players and multiple players is in revising the schedule for when each agent speaks\r\n\r\nTo this end, we augment DialogueSimulator to take in a custom function that determines the schedule of which agent speaks. In the example below, each character speaks in round-robin fashion, with the storyteller interleaved between each player.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3560/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3560/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3559",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3559/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3559/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3559/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3559",
        "id": 1683904032,
        "node_id": "PR_kwDOIPDwls5PJHKJ",
        "number": 3559,
        "title": "Update Alchemy Key URL",
        "user": {
            "login": "apurvsibal",
            "id": 30145118,
            "node_id": "MDQ6VXNlcjMwMTQ1MTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/30145118?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apurvsibal",
            "html_url": "https://github.com/apurvsibal",
            "followers_url": "https://api.github.com/users/apurvsibal/followers",
            "following_url": "https://api.github.com/users/apurvsibal/following{/other_user}",
            "gists_url": "https://api.github.com/users/apurvsibal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apurvsibal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apurvsibal/subscriptions",
            "organizations_url": "https://api.github.com/users/apurvsibal/orgs",
            "repos_url": "https://api.github.com/users/apurvsibal/repos",
            "events_url": "https://api.github.com/users/apurvsibal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apurvsibal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-25T21:33:48Z",
        "updated_at": "2023-04-25T23:08:42Z",
        "closed_at": "2023-04-25T23:08:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3559",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3559",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3559.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3559.patch",
            "merged_at": "2023-04-25T23:08:42Z"
        },
        "body": "Update Alchemy Key URL in Blockchain Document Loader. I want to say thank you for the incredible work the LangChain library creators have done. \r\n\r\nI am amazed at how seamlessly the Loader integrates with Ethereum Mainnet, Ethereum Testnet, Polygon Mainnet, and Polygon Testnet, and I am excited to see how this technology can be extended in the future.\r\n\r\n@hwchase17 - Please let me know if I can improve or if I have missed any community guidelines in making the edit?  Thank you again for your hard work and dedication to the open source community.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3559/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3559/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3558",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3558/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3558/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3558/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3558",
        "id": 1683896259,
        "node_id": "PR_kwDOIPDwls5PJFgy",
        "number": 3558,
        "title": "Multi player dnd",
        "user": {
            "login": "mbchang",
            "id": 6439365,
            "node_id": "MDQ6VXNlcjY0MzkzNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6439365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbchang",
            "html_url": "https://github.com/mbchang",
            "followers_url": "https://api.github.com/users/mbchang/followers",
            "following_url": "https://api.github.com/users/mbchang/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbchang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbchang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbchang/subscriptions",
            "organizations_url": "https://api.github.com/users/mbchang/orgs",
            "repos_url": "https://api.github.com/users/mbchang/repos",
            "events_url": "https://api.github.com/users/mbchang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbchang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-04-25T21:25:43Z",
        "updated_at": "2023-04-25T21:46:14Z",
        "closed_at": "2023-04-25T21:46:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3558",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3558",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3558.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3558.patch",
            "merged_at": null
        },
        "body": "This notebook shows how the `DialogueAgent` and `DialogueSimulator` class make it easy to extend the [Two-Player Dungeons & Dragons example](https://python.langchain.com/en/latest/use_cases/agent_simulations/two_player_dnd.html) to multiple players.\r\n\r\nThe main difference between simulating two players and multiple players is in revising the schedule for when each agent speaks\r\n\r\nTo this end, we augment `DialogueSimulator` to take in a custom function that determines the schedule of which agent speaks. In the example below, each character speaks in round-robin fashion, with the storyteller interleaved between each player.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3558/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3558/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3557",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3557/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3557/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3557/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3557",
        "id": 1683878134,
        "node_id": "PR_kwDOIPDwls5PJBi0",
        "number": 3557,
        "title": "Vwp/chatregtests",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-04-25T21:12:19Z",
        "updated_at": "2023-04-26T14:53:10Z",
        "closed_at": "2023-04-26T03:42:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3557",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3557",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3557.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3557.patch",
            "merged_at": null
        },
        "body": "This is a draft that starts to refactor the agents as well. I make a draft that avoids that here https://github.com/hwchase17/langchain/pull/3572\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3557/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3557/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3556",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3556/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3556/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3556/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/3556",
        "id": 1683877185,
        "node_id": "PR_kwDOIPDwls5PJBVR",
        "number": 3556,
        "title": "Support for  #3555 - Model routing support for Chaining ",
        "user": {
            "login": "keshy",
            "id": 316774,
            "node_id": "MDQ6VXNlcjMxNjc3NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/keshy",
            "html_url": "https://github.com/keshy",
            "followers_url": "https://api.github.com/users/keshy/followers",
            "following_url": "https://api.github.com/users/keshy/following{/other_user}",
            "gists_url": "https://api.github.com/users/keshy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/keshy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/keshy/subscriptions",
            "organizations_url": "https://api.github.com/users/keshy/orgs",
            "repos_url": "https://api.github.com/users/keshy/repos",
            "events_url": "https://api.github.com/users/keshy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/keshy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-04-25T21:11:39Z",
        "updated_at": "2023-04-27T22:14:41Z",
        "closed_at": "2023-04-27T22:14:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/3556",
            "html_url": "https://github.com/langchain-ai/langchain/pull/3556",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/3556.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/3556.patch",
            "merged_at": null
        },
        "body": "- Added support for model routing for Chains as a new type. \r\n- This leverages a chromadb collection to help in similarity match based on questions asked. \r\n- Supports memory management and history. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3556/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3556/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3555",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3555/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3555/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3555/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/3555",
        "id": 1683865609,
        "node_id": "I_kwDOIPDwls5kXcAJ",
        "number": 3555,
        "title": "Support for model router pattern for chains to allow for dynamic routing to right chains based on vector store semantics ",
        "user": {
            "login": "keshy",
            "id": 316774,
            "node_id": "MDQ6VXNlcjMxNjc3NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316774?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/keshy",
            "html_url": "https://github.com/keshy",
            "followers_url": "https://api.github.com/users/keshy/followers",
            "following_url": "https://api.github.com/users/keshy/following{/other_user}",
            "gists_url": "https://api.github.com/users/keshy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/keshy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/keshy/subscriptions",
            "organizations_url": "https://api.github.com/users/keshy/orgs",
            "repos_url": "https://api.github.com/users/keshy/repos",
            "events_url": "https://api.github.com/users/keshy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/keshy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-04-25T21:04:41Z",
        "updated_at": "2023-09-24T16:07:21Z",
        "closed_at": "2023-09-24T16:07:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "We need a model gateway pattern support for Chains for following reasons:\r\n\r\n- We may have external decision making elements that would help route which LLM model would need to handle a request. E.g. vector store. \r\n- Agents don't always cut it with the customization that'd be needed. We will need custom tool building etc which is overkill for a simple routing use case. \r\n- Downstream LLMs can also be any of the numerous chain types that can be supported. This allows for a scalable LLM orchestration model with chaining beyond what's supported today which is mainly Sequential chains. \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/3555/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/3555/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    }
]