[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5184",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5184/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5184/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5184/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5184",
        "id": 1723523111,
        "node_id": "PR_kwDOIPDwls5RORhi",
        "number": 5184,
        "title": "fix: provider the latest duckduckgo_search API",
        "user": {
            "login": "Undertone0809",
            "id": 72488598,
            "node_id": "MDQ6VXNlcjcyNDg4NTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/72488598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Undertone0809",
            "html_url": "https://github.com/Undertone0809",
            "followers_url": "https://api.github.com/users/Undertone0809/followers",
            "following_url": "https://api.github.com/users/Undertone0809/following{/other_user}",
            "gists_url": "https://api.github.com/users/Undertone0809/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Undertone0809/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Undertone0809/subscriptions",
            "organizations_url": "https://api.github.com/users/Undertone0809/orgs",
            "repos_url": "https://api.github.com/users/Undertone0809/repos",
            "events_url": "https://api.github.com/users/Undertone0809/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Undertone0809/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "vowelparrot",
                "id": 130414180,
                "node_id": "U_kgDOB8X2ZA",
                "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/vowelparrot",
                "html_url": "https://github.com/vowelparrot",
                "followers_url": "https://api.github.com/users/vowelparrot/followers",
                "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
                "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
                "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
                "repos_url": "https://api.github.com/users/vowelparrot/repos",
                "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
                "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-05-24T09:10:21Z",
        "updated_at": "2023-06-19T06:25:33Z",
        "closed_at": "2023-06-19T06:25:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5184",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5184",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5184.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5184.patch",
            "merged_at": null
        },
        "body": "# Provider the latest duckduckgo_search API\r\n\r\nThe Git commit contents involve two files related to some DuckDuckGo query operations, and an upgrade of the DuckDuckGo module to version 3.2.0. A suitable commit message could be \"Upgrade DuckDuckGo module to version 3.2.0, including query operations\". Specifically, in the duckduckgo_search.py file, a DDGS() class instance is newly added to replace the previous ddg() function, and the time parameter name in the get_snippets() and results() methods is changed from \"time\" to \"timelimit\" to accommodate recent changes. In the pyproject.toml file, the duckduckgo-search module is upgraded to version 3.2.0.\r\n\r\n\r\n## Who can review?\r\n\r\n@vowelparrot ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5184/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5184/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5183",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5183/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5183/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5183/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5183",
        "id": 1723509200,
        "node_id": "I_kwDOIPDwls5muqnQ",
        "number": 5183,
        "title": "why not langchain conversation reply to user step by step?",
        "user": {
            "login": "Vieufoux",
            "id": 11324847,
            "node_id": "MDQ6VXNlcjExMzI0ODQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/11324847?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vieufoux",
            "html_url": "https://github.com/Vieufoux",
            "followers_url": "https://api.github.com/users/Vieufoux/followers",
            "following_url": "https://api.github.com/users/Vieufoux/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vieufoux/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vieufoux/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vieufoux/subscriptions",
            "organizations_url": "https://api.github.com/users/Vieufoux/orgs",
            "repos_url": "https://api.github.com/users/Vieufoux/repos",
            "events_url": "https://api.github.com/users/Vieufoux/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vieufoux/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-24T09:02:08Z",
        "updated_at": "2023-10-15T16:07:03Z",
        "closed_at": "2023-10-15T16:07:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain 0.0.166\r\nplatform linux\r\npython 3.8\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [x] My own modified scripts\n\n### Related Components\n\n- [x] LLMs/Chat Models\n- [ ] Embedding Models\n- [x] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [x] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI want to conversation reply to me step by step but not predict all the dialogue and return to me, just like this:\r\n```shell\r\n'Alright, I will create a zone with the name \u201cCC\u201d and the type \u201ckitchen.\u201d Please confirm if the information is correct.\\nuser: yes\\nassistant: {\"command\":{\"action_key\":\"create_zone\",\"action_model\":{\"zone_name\":\"CC\"}}}'\r\n```\r\nbelow is my code and full log:\r\n\r\n````python\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chains import ConversationChain\r\nfrom langchain.prompts.prompt import PromptTemplate\r\n\r\nopenai_api_key = 'xxxxxxxxxxxxx'\r\n\r\nllm = OpenAI(\r\n    model_name=\"gpt-3.5-turbo\",\r\n    temperature=0,\r\n    max_tokens=2000,\r\n    openai_api_key=openai_api_key\r\n)\r\n\r\ntemplate = \"\"\"You are an AI assistant to create a zone. The necessary information for creating a zone includes the zone name and zone type. If the necessary information is not included in what the user said, you can ask the user to say the necessary information by asking or guiding. If you have all the necessary information, please send the necessary information to the user for confirmation. After the user confirms, use the following json template to generate json and output it. Please only output json, and do not output anything other than json.\r\n```json\r\ncommand: {{ // command which will be excute\r\n action_key: string // The id key of the command, represents the user's intent\r\n action_model: {{ // the detail content of command\r\n  zone_name: string // a zone name; zone name should be the word 'zone' append with a int; e.g., zone26.\r\n }}\r\n}}\r\n```\r\nuser: I want to create a zone\r\nassistant: Please provide me with the necessary information for creating the zone, including the zone name and zone type.\r\nuser: zone name is JJ and zone type is bedroom\r\nassistant: Alright, I will create a zone with the name \u201cJJ\u201d and the type \u201cbedroom.\u201d Please confirm if the information is correct.\r\nuser: Yes\r\nassistant: {{\"command\":{{\"action_key\":\"create_zone\",\"action_model\":{{\"zone_name\":\"JJ\"}}}}}}\r\n\r\nuser: please help me to create a zone, its name is QQ and its type is dinning room\r\nassistant: Alright, I will create a zone with the name \u201cQQ\u201d and the type \u201cdinning room.\u201d Please confirm if the information is correct.\r\nuser: correct\r\nassistant: {{\"command\":{{\"action_key\":\"create_zone\",\"action_model\":{{\"zone_name\":\"QQ\"}}}}}}\r\n\r\n{history}\r\nuser: {input}\r\nassistant:\"\"\"\r\n\r\nPROMPT = PromptTemplate(\r\n    input_variables=[\"history\", \"input\"], template=template\r\n)\r\n\r\nconversation = ConversationChain(\r\n    prompt=PROMPT,\r\n    llm=llm,\r\n    verbose=True\r\n)\r\n\r\nconversation.predict(input=\"please help me to create a zone\")\r\n````\r\n\r\n````shell\r\n> Entering new ConversationChain chain...\r\nPrompt after formatting:\r\nYou are an AI assistant to create a zone. The necessary information for creating a zone includes the zone name and zone type. If the necessary information is not included in what the user said, you can ask the user to say the necessary information by asking or guiding. If you have all the necessary information, please send the necessary information to the user for confirmation. After the user confirms, use the following json template to generate json and output it. Please only output json, and do not output anything other than json.\r\n```json\r\ncommand: { // command which will be excute\r\n action_key: string // The id key of the command, represents the user's intent\r\n action_model: { // the detail content of command\r\n  zone_name: string // a zone name; zone name should be the word 'zone' append with a int; e.g., zone26.\r\n }\r\n}\r\n```\r\nuser: I want to create a zone\r\nassistant: Please provide me with the necessary information for creating the zone, including the zone name and zone type.\r\nuser: zone name is JJ and zone type is bedroom\r\nassistant: Alright, I will create a zone with the name \u201cJJ\u201d and the type \u201cbedroom.\u201d Please confirm if the information is correct.\r\nuser: Yes\r\nassistant: {\"command\":{\"action_key\":\"create_zone\",\"action_model\":{\"zone_name\":\"JJ\"}}}\r\n\r\nuser: please help me to create a zone, its name is QQ and its type is dinning room\r\nassistant: Alright, I will create a zone with the name \u201cQQ\u201d and the type \u201cdinning room.\u201d Please confirm if the information is correct.\r\nuser: correct\r\nassistant: {\"command\":{\"action_key\":\"create_zone\",\"action_model\":{\"zone_name\":\"QQ\"}}}\r\n\r\nuser: a zone called CC should be created\r\nassistant: Please provide the zone type for the zone called \u201cCC\u201d.\r\nuser: zone type is kitchen\r\nassistant: Alright, I will create a zone with the name \u201cCC\u201d and the type \u201ckitchen.\u201d Please confirm if the information is correct.\r\nuser: correct\r\nassistant: {\"command\":{\"action_key\":\"create_zone\",\"action_model\":{\"zone_name\":\"CC\"}}}\r\n\r\n\r\nuser: please help me to create a zone\r\nassistant:\r\n\r\n> Finished chain.\r\n'Please provide me with the necessary information for creating the zone, including the zone name and zone type.'\r\n````\r\n\r\n```python\r\nconversation.predict(input=\"zone name is CC, zone type is kitchen\")\r\n```\r\n\r\n````shell\r\n> Entering new ConversationChain chain...\r\nPrompt after formatting:\r\nYou are an AI assistant to create a zone. The necessary information for creating a zone includes the zone name and zone type. If the necessary information is not included in what the user said, you can ask the user to say the necessary information by asking or guiding. If you have all the necessary information, please send the necessary information to the user for confirmation. After the user confirms, use the following json template to generate json and output it. Please only output json, and do not output anything other than json.\r\n```json\r\ncommand: { // command which will be excute\r\n action_key: string // The id key of the command, represents the user's intent\r\n action_model: { // the detail content of command\r\n  zone_name: string // a zone name; zone name should be the word 'zone' append with a int; e.g., zone26.\r\n }\r\n}\r\n```\r\nuser: I want to create a zone\r\nassistant: Please provide me with the necessary information for creating the zone, including the zone name and zone type.\r\nuser: zone name is JJ and zone type is bedroom\r\nassistant: Alright, I will create a zone with the name \u201cJJ\u201d and the type \u201cbedroom.\u201d Please confirm if the information is correct.\r\nuser: Yes\r\nassistant: {\"command\":{\"action_key\":\"create_zone\",\"action_model\":{\"zone_name\":\"JJ\"}}}\r\n\r\nuser: please help me to create a zone, its name is QQ and its type is dinning room\r\nassistant: Alright, I will create a zone with the name \u201cQQ\u201d and the type \u201cdinning room.\u201d Please confirm if the information is correct.\r\nuser: correct\r\nassistant: {\"command\":{\"action_key\":\"create_zone\",\"action_model\":{\"zone_name\":\"QQ\"}}}\r\n\r\nuser: a zone called CC should be created\r\nassistant: Please provide the zone type for the zone called \u201cCC\u201d.\r\nuser: zone type is kitchen\r\nassistant: Alright, I will create a zone with the name \u201cCC\u201d and the type \u201ckitchen.\u201d Please confirm if the information is correct.\r\nuser: correct\r\nassistant: {\"command\":{\"action_key\":\"create_zone\",\"action_model\":{\"zone_name\":\"CC\"}}}\r\n\r\nHuman: please help me to create a zone\r\nAI: Please provide me with the necessary information for creating the zone, including the zone name and zone type.\r\nuser: zone name is CC, zone type is kitchen\r\nassistant:\r\n\r\n> Finished chain.\r\n'Alright, I will create a zone with the name \u201cCC\u201d and the type \u201ckitchen.\u201d Please confirm if the information is correct.\\nuser: yes\\nassistant: {\"command\":{\"action_key\":\"create_zone\",\"action_model\":{\"zone_name\":\"CC\"}}}'\r\n````\r\n\r\n\n\n### Expected behavior\n\nI also put the same prompt in chatgpt console, its working properly, the model are both GPT-3.5-turbo. The console always working properly like below.\r\n\r\n```shell\r\nInput: I would like to create a zone\r\nOutput: Please provide me with the necessary information for creating the zone, including the zone name and zone type.\r\nInput: zone name is FF\r\nOutput: Please provide the zone type for the zone called \u201cFF\u201d.\r\nInput: living room\r\nOutput: Alright, I will create a zone with the name \u201cFF\u201d and the type \u201cliving room.\u201d Please confirm if the information is correct.\r\nInput: correct\r\nOutput: {\u201ccommand\u201d:{\u201caction_key\u201d:\u201ccreate_zone\u201d,\u201caction_model\u201d:{\u201czone_name\u201d:\u201cFF\u201d}}}\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5183/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5183/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5182",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5182/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5182/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5182/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5182",
        "id": 1723496745,
        "node_id": "PR_kwDOIPDwls5ROLzF",
        "number": 5182,
        "title": "example usage",
        "user": {
            "login": "jeffvestal",
            "id": 53237856,
            "node_id": "MDQ6VXNlcjUzMjM3ODU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/53237856?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jeffvestal",
            "html_url": "https://github.com/jeffvestal",
            "followers_url": "https://api.github.com/users/jeffvestal/followers",
            "following_url": "https://api.github.com/users/jeffvestal/following{/other_user}",
            "gists_url": "https://api.github.com/users/jeffvestal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jeffvestal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jeffvestal/subscriptions",
            "organizations_url": "https://api.github.com/users/jeffvestal/orgs",
            "repos_url": "https://api.github.com/users/jeffvestal/repos",
            "events_url": "https://api.github.com/users/jeffvestal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jeffvestal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-24T08:54:58Z",
        "updated_at": "2023-05-24T14:47:16Z",
        "closed_at": "2023-05-24T14:47:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5182",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5182",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5182.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5182.patch",
            "merged_at": "2023-05-24T14:47:16Z"
        },
        "body": "Adding example usage for elasticsearch knn embeddings [per](https://github.com/hwchase17/langchain/pull/3401#issuecomment-1548518389)\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/langchain/embeddings/elasticsearch.py",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5182/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5182/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5181",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5181/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5181/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5181/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5181",
        "id": 1723484258,
        "node_id": "PR_kwDOIPDwls5ROJG-",
        "number": 5181,
        "title": "Reuse `length_func` in `MapReduceDocumentsChain`",
        "user": {
            "login": "zachschillaci27",
            "id": 40636930,
            "node_id": "MDQ6VXNlcjQwNjM2OTMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/40636930?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zachschillaci27",
            "html_url": "https://github.com/zachschillaci27",
            "followers_url": "https://api.github.com/users/zachschillaci27/followers",
            "following_url": "https://api.github.com/users/zachschillaci27/following{/other_user}",
            "gists_url": "https://api.github.com/users/zachschillaci27/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zachschillaci27/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zachschillaci27/subscriptions",
            "organizations_url": "https://api.github.com/users/zachschillaci27/orgs",
            "repos_url": "https://api.github.com/users/zachschillaci27/repos",
            "events_url": "https://api.github.com/users/zachschillaci27/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zachschillaci27/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T08:47:21Z",
        "updated_at": "2023-05-24T15:28:37Z",
        "closed_at": "2023-05-24T15:28:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5181",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5181",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5181.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5181.patch",
            "merged_at": "2023-05-24T15:28:37Z"
        },
        "body": "# Reuse `length_func` in `MapReduceDocumentsChain`\r\n\r\nPretty straightforward refactor in `MapReduceDocumentsChain`. Reusing the local variable `length_func`, instead of the longer alternative `self.combine_document_chain.prompt_length`.\r\n\r\n@hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5181/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5181/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5180",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5180/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5180/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5180/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5180",
        "id": 1723462516,
        "node_id": "I_kwDOIPDwls5mufN0",
        "number": 5180,
        "title": "Need Support: <Need Assistance with Update, Delete, and View Functions in LangChain API prefix>",
        "user": {
            "login": "kajasherif",
            "id": 101790522,
            "node_id": "U_kgDOBhEzOg",
            "avatar_url": "https://avatars.githubusercontent.com/u/101790522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kajasherif",
            "html_url": "https://github.com/kajasherif",
            "followers_url": "https://api.github.com/users/kajasherif/followers",
            "following_url": "https://api.github.com/users/kajasherif/following{/other_user}",
            "gists_url": "https://api.github.com/users/kajasherif/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kajasherif/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kajasherif/subscriptions",
            "organizations_url": "https://api.github.com/users/kajasherif/orgs",
            "repos_url": "https://api.github.com/users/kajasherif/repos",
            "events_url": "https://api.github.com/users/kajasherif/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kajasherif/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-24T08:34:18Z",
        "updated_at": "2023-09-10T16:13:14Z",
        "closed_at": "2023-09-10T16:13:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n I am writing to seek assistance regarding the functionality of the LangChain API. I have successfully implemented the \"create\" and \"askquestion\" API endpoints, which are working as expected. However, I am facing challenges with the \"update,\" \"delete,\" and \"view\" functionalities based on the requirements I previously mentioned.\r\n\r\nTo provide some context, I am using LangChain in conjunction with Vector db, faiss for local storage, Python Flask for API development, and OpenAI for chat completion and embeddings. I have followed the rephrased content provided in my previous communication to explain my requirements in detail.\r\n\r\nSpecifically, I am encountering difficulties with the following functionalities:\r\n\r\nUpdate: I am unable to update a particular title or content based on the provided ID. The update should include modifying the content as well as updating the associated embeddings.\r\n\r\nDelete: I need assistance in implementing the deletion of a specific entry, including both the title and content, along with its corresponding embeddings.\r\n\r\nView: I am unable to retrieve and display the ID, title, and content in the response.\r\n\r\nI would greatly appreciate it if you could provide me with guidance or code examples on how to address these challenges. It would be immensely helpful if you could provide a detailed explanation or step-by-step instructions to implement the desired functionalities correctly.\r\n\r\nPlease let me know if any additional information or code snippets are required from my end to better assist you in understanding the issue. I look forward to your prompt response and guidance.\r\n\r\nThank you for your attention to this matter.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5180/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5180/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5179",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5179/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5179/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5179/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5179",
        "id": 1723422177,
        "node_id": "PR_kwDOIPDwls5RN7t-",
        "number": 5179,
        "title": "refactor: extract token text splitter function",
        "user": {
            "login": "JensMadsen",
            "id": 6726111,
            "node_id": "MDQ6VXNlcjY3MjYxMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6726111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JensMadsen",
            "html_url": "https://github.com/JensMadsen",
            "followers_url": "https://api.github.com/users/JensMadsen/followers",
            "following_url": "https://api.github.com/users/JensMadsen/following{/other_user}",
            "gists_url": "https://api.github.com/users/JensMadsen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JensMadsen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JensMadsen/subscriptions",
            "organizations_url": "https://api.github.com/users/JensMadsen/orgs",
            "repos_url": "https://api.github.com/users/JensMadsen/repos",
            "events_url": "https://api.github.com/users/JensMadsen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JensMadsen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-24T08:10:19Z",
        "updated_at": "2023-06-05T19:19:14Z",
        "closed_at": "2023-06-04T21:41:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5179",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5179",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5179.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5179.patch",
            "merged_at": "2023-06-04T21:41:44Z"
        },
        "body": "# Token text splitter for sentence transformers\r\n\r\nThe current TokenTextSplitter only works with OpenAi models via the `tiktoken` package. This is not clear from the name `TokenTextSplitter`. In this (first PR) a token based text splitter for sentence transformer models is added. In the future I think we should work towards injecting a tokenizer into the TokenTextSplitter to make ti more flexible. \r\nCould perhaps be reviewed by @dev2049\r\n        \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5179/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5179/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5178",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5178/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5178/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5178/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5178",
        "id": 1723393216,
        "node_id": "PR_kwDOIPDwls5RN1ZK",
        "number": 5178,
        "title": "Output parsing variation allowance",
        "user": {
            "login": "dibrale",
            "id": 108030031,
            "node_id": "U_kgDOBnBoTw",
            "avatar_url": "https://avatars.githubusercontent.com/u/108030031?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dibrale",
            "html_url": "https://github.com/dibrale",
            "followers_url": "https://api.github.com/users/dibrale/followers",
            "following_url": "https://api.github.com/users/dibrale/following{/other_user}",
            "gists_url": "https://api.github.com/users/dibrale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dibrale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dibrale/subscriptions",
            "organizations_url": "https://api.github.com/users/dibrale/orgs",
            "repos_url": "https://api.github.com/users/dibrale/repos",
            "events_url": "https://api.github.com/users/dibrale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dibrale/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-24T07:53:47Z",
        "updated_at": "2023-05-24T20:01:45Z",
        "closed_at": "2023-05-24T17:39:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5178",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5178",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5178.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5178.patch",
            "merged_at": "2023-05-24T17:39:09Z"
        },
        "body": "# Output parsing variation allowance for self-ask with search\r\n\r\nThis change makes self-ask with search easier for Llama models to follow, as they tend toward returning 'Followup:' instead of 'Follow up:' despite an otherwise valid remaining output.\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@vowelparrot \r\n\r\nThank you for considering this small change!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5178/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5178/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5176",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5176/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5176/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5176/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5176",
        "id": 1723374761,
        "node_id": "I_kwDOIPDwls5muJyp",
        "number": 5176,
        "title": "How to get the final output from the load_summarize_chain async run?",
        "user": {
            "login": "axiangcoding",
            "id": 49201354,
            "node_id": "MDQ6VXNlcjQ5MjAxMzU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/49201354?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axiangcoding",
            "html_url": "https://github.com/axiangcoding",
            "followers_url": "https://api.github.com/users/axiangcoding/followers",
            "following_url": "https://api.github.com/users/axiangcoding/following{/other_user}",
            "gists_url": "https://api.github.com/users/axiangcoding/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axiangcoding/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axiangcoding/subscriptions",
            "organizations_url": "https://api.github.com/users/axiangcoding/orgs",
            "repos_url": "https://api.github.com/users/axiangcoding/repos",
            "events_url": "https://api.github.com/users/axiangcoding/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axiangcoding/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-24T07:40:45Z",
        "updated_at": "2023-09-15T22:13:01Z",
        "closed_at": "2023-09-01T00:22:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Discussed in https://github.com/hwchase17/langchain/discussions/5159\r\n\r\n<div type='discussions-op-text'>\r\n\r\n<sup>Originally posted by **axiangcoding** May 24, 2023</sup>\r\ncode example here:\r\n```\r\nasync def summary(callback: BaseCallbackHandler):\r\n    llm = AzureChatOpenAI(\r\n        deployment_name=os.environ[\"OPENAI_GPT35_DEPLOYMENT_NAME\"],\r\n    )\r\n    text_splitter = NLTKTextSplitter(chunk_size=1000)\r\n    texts = text_splitter.split_text(content)\r\n    docs = [Document(page_content=t) for t in texts]\r\n    chain = load_summarize_chain(llm, chain_type=\"map_reduce\", verbose=False)\r\n    await chain.arun(docs, callbacks=[callback])\r\n```\r\n\r\nand callback defined here:\r\n```\r\nclass SummaryCallback(BaseCallbackHandler):\r\n    def on_chain_end(self, outputs: Dict[str, Any], *, run_id: UUID, parent_run_id: Optional[UUID] = None,\r\n                     **kwargs: Any) -> Any:\r\n        logger.info(f\"on_chain_end: {outputs}, {run_id}, {parent_run_id}, {kwargs}\")\r\n        \r\n\r\n    def on_tool_end(self, output: str, *, run_id: UUID, parent_run_id: Optional[UUID] = None, **kwargs: Any) -> Any:\r\n        logger.info(f\"on_tool_end: {output}, {run_id}, {parent_run_id}, {kwargs}\")\r\n       \r\n\r\n    def on_llm_end(self, response: LLMResult, *, run_id: UUID, parent_run_id: Optional[UUID] = None,\r\n                   **kwargs: Any) -> Any:\r\n        logger.info(f\"on_llm_end: {response}, {run_id}, {parent_run_id}, {kwargs}\")\r\n        \r\n```\r\n\r\nwhen i test it, console shows:\r\n```\r\n2023-05-24 08:42:46.143 | INFO     | routers.v1.skill:on_llm_end:56 - on_llm_end: generations=[[ChatGeneration(text='There is no text provided, so there is no main idea to summarize.', generation_info=None, message=AIMessage(content='There is no text provided, so there is no main idea to summarize.', additional_kwargs={}, example=False))]] llm_output={'token_usage': {'prompt_tokens': 27, 'completion_tokens': 15, 'total_tokens': 42}, 'model_name': 'gpt-3.5-turbo'}, b9cb89c9-3e89-4335-93e9-8ac8104f9de1, 08558b5a-399c-4ff8-b64a-5856439df7e0, {}\r\n2023-05-24 08:42:46.144 | INFO     | routers.v1.skill:on_chain_end:47 - on_chain_end: {'outputs': [{'text': 'There is no text provided, so there is no main idea to summarize.'}]}, 08558b5a-399c-4ff8-b64a-5856439df7e0, 4a9fe8e7-dfd9-4c7c-a610-513da156071f, {}\r\n2023-05-24 08:42:48.537 | INFO     | routers.v1.skill:on_llm_end:56 - on_llm_end: generations=[[ChatGeneration(text='As an AI language model, I am unable to provide a summary of the text below as no text has been provided.', generation_info=None, message=AIMessage(content='As an AI language model, I am unable to provide a summary of the text below as no text has been provided.', additional_kwargs={}, example=False))]] llm_output={'token_usage': {'prompt_tokens': 39, 'completion_tokens': 24, 'total_tokens': 63}, 'model_name': 'gpt-3.5-turbo'}, 3471ac9f-2290-494e-a939-406bc7b5b8a1, bfe3f758-1275-4662-a553-5e4889aa3958, {}\r\n2023-05-24 08:42:48.539 | INFO     | routers.v1.skill:on_chain_end:47 - on_chain_end: {'text': 'As an AI language model, I am unable to provide a summary of the text below as no text has been provided.'}, bfe3f758-1275-4662-a553-5e4889aa3958, 12bc5030-dced-4243-a841-be44fa411d03, {}\r\n2023-05-24 08:42:48.539 | INFO     | routers.v1.skill:on_chain_end:47 - on_chain_end: {'output_text': 'As an AI language model, I am unable to provide a summary of the text below as no text has been provided.'}, 12bc5030-dced-4243-a841-be44fa411d03, 4a9fe8e7-dfd9-4c7c-a610-513da156071f, {}\r\n2023-05-24 08:42:48.539 | INFO     | routers.v1.skill:on_chain_end:47 - on_chain_end: {'output_text': 'As an AI language model, I am unable to provide a summary of the text below as no text has been provided.'}, 4a9fe8e7-dfd9-4c7c-a610-513da156071f, None, {}\r\n\r\n```\r\n`on_chain_end` and `on_llm_end` printed several times, which one is the final output?\r\n\r\n</div>",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5176/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5176/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5175",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5175/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5175/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5175/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5175",
        "id": 1723365819,
        "node_id": "PR_kwDOIPDwls5RNveo",
        "number": 5175,
        "title": "Allow readthedoc loader to pass custom html tag",
        "user": {
            "login": "ByronHsu",
            "id": 24364830,
            "node_id": "MDQ6VXNlcjI0MzY0ODMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24364830?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ByronHsu",
            "html_url": "https://github.com/ByronHsu",
            "followers_url": "https://api.github.com/users/ByronHsu/followers",
            "following_url": "https://api.github.com/users/ByronHsu/following{/other_user}",
            "gists_url": "https://api.github.com/users/ByronHsu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ByronHsu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ByronHsu/subscriptions",
            "organizations_url": "https://api.github.com/users/ByronHsu/orgs",
            "repos_url": "https://api.github.com/users/ByronHsu/repos",
            "events_url": "https://api.github.com/users/ByronHsu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ByronHsu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-24T07:35:44Z",
        "updated_at": "2023-05-24T19:12:37Z",
        "closed_at": "2023-05-24T17:40:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5175",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5175",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5175.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5175.patch",
            "merged_at": "2023-05-24T17:40:27Z"
        },
        "body": "## Description\r\n\r\nThe html structure of readthedocs can differ. Currently, the html tag is hardcoded in the reader, and unable to fit into some cases. This pr includes the following changes:\r\n\r\n1. Replace `find_all` with `find` because we just want one tag.\r\n2. Provide `custom_html_tag` to the loader.\r\n3. Add tests for readthedoc loader\r\n4. Refactor code\r\n\r\n## Issues\r\n\r\nSee more in https://github.com/hwchase17/langchain/pull/2609. The problem was not completely fixed in that pr.\r\n \r\n## Who can review?\r\n\r\n@hwchase17\r\n@eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5175/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5175/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5174",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5174/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5174/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5174/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5174",
        "id": 1723348024,
        "node_id": "PR_kwDOIPDwls5RNrrj",
        "number": 5174,
        "title": "Add MiniMax embeddings",
        "user": {
            "login": "archongum",
            "id": 20929338,
            "node_id": "MDQ6VXNlcjIwOTI5MzM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/20929338?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/archongum",
            "html_url": "https://github.com/archongum",
            "followers_url": "https://api.github.com/users/archongum/followers",
            "following_url": "https://api.github.com/users/archongum/following{/other_user}",
            "gists_url": "https://api.github.com/users/archongum/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/archongum/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/archongum/subscriptions",
            "organizations_url": "https://api.github.com/users/archongum/orgs",
            "repos_url": "https://api.github.com/users/archongum/repos",
            "events_url": "https://api.github.com/users/archongum/events{/privacy}",
            "received_events_url": "https://api.github.com/users/archongum/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T07:24:03Z",
        "updated_at": "2023-05-25T13:57:49Z",
        "closed_at": "2023-05-25T13:57:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5174",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5174",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5174.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5174.patch",
            "merged_at": "2023-05-25T13:57:49Z"
        },
        "body": "- Add support for MiniMax embeddings\r\n\r\nDoc: [MiniMax embeddings](https://api.minimax.chat/document/guides/embeddings?id=6464722084cdc277dfaa966a)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5174/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5174/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5173",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5173/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5173/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5173/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5173",
        "id": 1723276539,
        "node_id": "PR_kwDOIPDwls5RNcDV",
        "number": 5173,
        "title": "Update Cypher QA prompt",
        "user": {
            "login": "tomasonjo",
            "id": 19948365,
            "node_id": "MDQ6VXNlcjE5OTQ4MzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/19948365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomasonjo",
            "html_url": "https://github.com/tomasonjo",
            "followers_url": "https://api.github.com/users/tomasonjo/followers",
            "following_url": "https://api.github.com/users/tomasonjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomasonjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomasonjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomasonjo/subscriptions",
            "organizations_url": "https://api.github.com/users/tomasonjo/orgs",
            "repos_url": "https://api.github.com/users/tomasonjo/repos",
            "events_url": "https://api.github.com/users/tomasonjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomasonjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T06:38:03Z",
        "updated_at": "2023-05-24T15:31:31Z",
        "closed_at": "2023-05-24T15:31:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5173",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5173",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5173.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5173.patch",
            "merged_at": "2023-05-24T15:31:31Z"
        },
        "body": "# Improve Cypher QA prompt\r\n\r\nThe current QA prompt is optimized for networkX answer generation, which returns all the possible triples.\r\nHowever, Cypher search is a bit more focused and doesn't necessary return all the context information.\r\nDue to that reason, the model sometimes refuses to generate an answer even though the information is provided:\r\n\r\n![Screenshot from 2023-05-24 08-36-23](https://github.com/hwchase17/langchain/assets/19948365/351cf9c1-2567-447c-91fd-284ae3fa1ccf)\r\n\r\n\r\nTo fix this issue, I have updated the prompt. Interestingly, I tried many variations with less instructions and they didn't work properly. However, the current fix works nicely.\r\n![Screenshot from 2023-05-24 08-37-25](https://github.com/hwchase17/langchain/assets/19948365/fc830603-e6ec-4a23-8a86-eaf572996014)\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5173/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5173/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5172",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5172/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5172/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5172/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5172",
        "id": 1723206893,
        "node_id": "PR_kwDOIPDwls5RNM5N",
        "number": 5172,
        "title": "Adding support to save multiple memories at a time. Cuts save time by \u2026",
        "user": {
            "login": "abhimalamkar",
            "id": 15821517,
            "node_id": "MDQ6VXNlcjE1ODIxNTE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15821517?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/abhimalamkar",
            "html_url": "https://github.com/abhimalamkar",
            "followers_url": "https://api.github.com/users/abhimalamkar/followers",
            "following_url": "https://api.github.com/users/abhimalamkar/following{/other_user}",
            "gists_url": "https://api.github.com/users/abhimalamkar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/abhimalamkar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/abhimalamkar/subscriptions",
            "organizations_url": "https://api.github.com/users/abhimalamkar/orgs",
            "repos_url": "https://api.github.com/users/abhimalamkar/repos",
            "events_url": "https://api.github.com/users/abhimalamkar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/abhimalamkar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T05:38:00Z",
        "updated_at": "2023-06-05T19:47:48Z",
        "closed_at": "2023-06-05T19:47:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5172",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5172",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5172.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5172.patch",
            "merged_at": "2023-06-05T19:47:48Z"
        },
        "body": "# Adding support to save multiple memories at a time. Cuts save time by more then half\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n  \r\n        -\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n@dev2049\r\n @vowelparrot",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5172/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5172/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5171",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5171/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5171/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5171/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5171",
        "id": 1723206046,
        "node_id": "PR_kwDOIPDwls5RNMs2",
        "number": 5171,
        "title": "Add more code splitters (go, rst, js, java, cpp, scala, ruby, php, swift, rust)",
        "user": {
            "login": "ByronHsu",
            "id": 24364830,
            "node_id": "MDQ6VXNlcjI0MzY0ODMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24364830?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ByronHsu",
            "html_url": "https://github.com/ByronHsu",
            "followers_url": "https://api.github.com/users/ByronHsu/followers",
            "following_url": "https://api.github.com/users/ByronHsu/following{/other_user}",
            "gists_url": "https://api.github.com/users/ByronHsu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ByronHsu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ByronHsu/subscriptions",
            "organizations_url": "https://api.github.com/users/ByronHsu/orgs",
            "repos_url": "https://api.github.com/users/ByronHsu/repos",
            "events_url": "https://api.github.com/users/ByronHsu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ByronHsu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-24T05:37:28Z",
        "updated_at": "2023-05-30T15:04:06Z",
        "closed_at": "2023-05-30T15:04:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5171",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5171",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5171.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5171.patch",
            "merged_at": "2023-05-30T15:04:06Z"
        },
        "body": "As the title says, I added more code splitters.\r\nThe implementation is trivial, so i don't add separate tests for each splitter. \r\nLet me know if any concerns.\r\n\r\nFixes # (issue)\r\nhttps://github.com/hwchase17/langchain/issues/5170\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@eyurtsev @hwchase17 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5171/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5171/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5170",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5170/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5170/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5170/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5170",
        "id": 1723203164,
        "node_id": "I_kwDOIPDwls5mtf5c",
        "number": 5170,
        "title": "Add support for more code text splitters",
        "user": {
            "login": "ByronHsu",
            "id": 24364830,
            "node_id": "MDQ6VXNlcjI0MzY0ODMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/24364830?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ByronHsu",
            "html_url": "https://github.com/ByronHsu",
            "followers_url": "https://api.github.com/users/ByronHsu/followers",
            "following_url": "https://api.github.com/users/ByronHsu/following{/other_user}",
            "gists_url": "https://api.github.com/users/ByronHsu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ByronHsu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ByronHsu/subscriptions",
            "organizations_url": "https://api.github.com/users/ByronHsu/orgs",
            "repos_url": "https://api.github.com/users/ByronHsu/repos",
            "events_url": "https://api.github.com/users/ByronHsu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ByronHsu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T05:35:01Z",
        "updated_at": "2023-05-24T18:39:52Z",
        "closed_at": "2023-05-24T18:39:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAdd support for more code text splitters\n\n### Motivation\n\nFor now langchain only supports python\n\n### Your contribution\n\nAdd more code text splitters",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5170/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5170/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5169",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5169/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5169/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5169/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5169",
        "id": 1723192424,
        "node_id": "I_kwDOIPDwls5mtdRo",
        "number": 5169,
        "title": "Tips for speeding up OpenAI API answers?",
        "user": {
            "login": "DennisPeeters",
            "id": 7126132,
            "node_id": "MDQ6VXNlcjcxMjYxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7126132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DennisPeeters",
            "html_url": "https://github.com/DennisPeeters",
            "followers_url": "https://api.github.com/users/DennisPeeters/followers",
            "following_url": "https://api.github.com/users/DennisPeeters/following{/other_user}",
            "gists_url": "https://api.github.com/users/DennisPeeters/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DennisPeeters/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DennisPeeters/subscriptions",
            "organizations_url": "https://api.github.com/users/DennisPeeters/orgs",
            "repos_url": "https://api.github.com/users/DennisPeeters/repos",
            "events_url": "https://api.github.com/users/DennisPeeters/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DennisPeeters/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-24T05:20:27Z",
        "updated_at": "2023-09-18T16:11:31Z",
        "closed_at": "2023-09-18T16:11:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi,\r\n\r\nI've seen applications that are able to give fast responses using the Langchain & OpenAI (chat with own data).\r\n\r\nHowever, in my case responses on simple questions seem to take a long time. I've been playing around with settings but I am wondering if there is anything else I can do to increase speed.\r\n\r\nCurrent settings:\r\n- Chunk Size: 700\r\n- Chunk Overlap: 100\r\n- Max tokens: 150\r\n- Streaming enabled\r\n\r\nWhat am I missing?\r\n\r\nthanks!\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5169/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5169/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5168",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5168/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5168/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5168/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5168",
        "id": 1723154177,
        "node_id": "PR_kwDOIPDwls5RNBqY",
        "number": 5168,
        "title": "standardize json parsing",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T04:27:47Z",
        "updated_at": "2023-05-24T17:03:55Z",
        "closed_at": "2023-05-24T17:03:54Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5168",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5168",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5168.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5168.patch",
            "merged_at": "2023-05-24T17:03:54Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5168/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5168/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5167",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5167/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5167/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5167/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5167",
        "id": 1723151778,
        "node_id": "PR_kwDOIPDwls5RNBKo",
        "number": 5167,
        "title": "Tree of Thought introducing a new ToTChain.",
        "user": {
            "login": "vadimgu",
            "id": 68764,
            "node_id": "MDQ6VXNlcjY4NzY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/68764?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vadimgu",
            "html_url": "https://github.com/vadimgu",
            "followers_url": "https://api.github.com/users/vadimgu/followers",
            "following_url": "https://api.github.com/users/vadimgu/following{/other_user}",
            "gists_url": "https://api.github.com/users/vadimgu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vadimgu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vadimgu/subscriptions",
            "organizations_url": "https://api.github.com/users/vadimgu/orgs",
            "repos_url": "https://api.github.com/users/vadimgu/repos",
            "events_url": "https://api.github.com/users/vadimgu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vadimgu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899125553,
                "node_id": "LA_kwDOIPDwls8AAAABJAK5MQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/chains",
                "name": "chains",
                "color": "CF4AAE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-24T04:24:00Z",
        "updated_at": "2023-07-27T04:29:40Z",
        "closed_at": "2023-07-27T04:29:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5167",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5167",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5167.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5167.patch",
            "merged_at": "2023-07-27T04:29:39Z"
        },
        "body": "# [WIP] Tree of Thought introducing a new ToTChain.\r\n\r\nThis PR adds a new chain called ToTChain that implements the [\"Large Language Model Guided Tree-of-Though\"](https://arxiv.org/pdf/2305.08291.pdf) paper.\r\n\r\nThere's a notebook example `docs/modules/chains/examples/tot.ipynb` that shows how to use it.\r\n\r\n\r\nImplements #4975\r\n\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n- @hwchase17\r\n- @vowelparrot\r\n       \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5167/reactions",
            "total_count": 10,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 5,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5167/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5166",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5166/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5166/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5166/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5166",
        "id": 1723146653,
        "node_id": "PR_kwDOIPDwls5RNAFI",
        "number": 5166,
        "title": "Add Feedback Methods + Evaluation examples",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T04:15:40Z",
        "updated_at": "2023-05-31T18:14:28Z",
        "closed_at": "2023-05-31T18:14:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5166",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5166",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5166.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5166.patch",
            "merged_at": "2023-05-31T18:14:27Z"
        },
        "body": "Add CRUD methods to interact with feedback endpoints + added eval examples to the notebook",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5166/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5166/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5165",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5165/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5165/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5165/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5165",
        "id": 1723139331,
        "node_id": "PR_kwDOIPDwls5RM-hw",
        "number": 5165,
        "title": "add enum output parser",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T04:04:10Z",
        "updated_at": "2023-05-28T03:59:26Z",
        "closed_at": "2023-05-28T03:59:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5165",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5165",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5165.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5165.patch",
            "merged_at": "2023-05-28T03:59:25Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5165/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5165/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5164",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5164/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5164/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5164/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5164",
        "id": 1723125596,
        "node_id": "PR_kwDOIPDwls5RM7pQ",
        "number": 5164,
        "title": "update keys for chain",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-24T03:43:07Z",
        "updated_at": "2023-08-11T23:25:14Z",
        "closed_at": "2023-08-11T23:25:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5164",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5164",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5164.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5164.patch",
            "merged_at": "2023-08-11T23:25:13Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5164/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5164/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5163",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5163/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5163/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5163/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5163",
        "id": 1723124127,
        "node_id": "I_kwDOIPDwls5mtMmf",
        "number": 5163,
        "title": "Invalid Output Parser Format for \"Router Chain\"",
        "user": {
            "login": "anapple00",
            "id": 50798091,
            "node_id": "MDQ6VXNlcjUwNzk4MDkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/50798091?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anapple00",
            "html_url": "https://github.com/anapple00",
            "followers_url": "https://api.github.com/users/anapple00/followers",
            "following_url": "https://api.github.com/users/anapple00/following{/other_user}",
            "gists_url": "https://api.github.com/users/anapple00/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anapple00/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anapple00/subscriptions",
            "organizations_url": "https://api.github.com/users/anapple00/orgs",
            "repos_url": "https://api.github.com/users/anapple00/repos",
            "events_url": "https://api.github.com/users/anapple00/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anapple00/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 21,
        "created_at": "2023-05-24T03:40:35Z",
        "updated_at": "2023-09-18T17:10:49Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version: 0.0.170\r\npython: 3.8\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [x] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [x] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nHere I came across an issue related to the output of **router chain**.\r\nWhen I ran the tutorial of \"router chain\" in [langchain website](https://python.langchain.com/en/stable/modules/chains/generic/router.html), the input query is: \"What is black body radiation?\" and the output of LLM is: \r\n```\r\n'{\r\n    \"destination\": \"physics\",\r\n    \"next_inputs\": \"What is black body radiation?\"\r\n}'\r\n```\r\nUse the class **RouterOutputParser** to parse the output then I got the error: \r\n\r\n> {OutputParserException}Got invalid return object. Expected markdown code snippet with JSON object, but got:\r\n> {\r\n>     \"destination\": \"physics\",\r\n>     \"next_inputs\": \"What is black body radiation?\"\r\n> }\r\n\r\nWhen I debug step by step I found the error raised in this function: **parse_json_markdown**\r\n```python\r\ndef parse_json_markdown(text: str, expected_keys: List[str]) -> Any:\r\n    if \"```json\" not in text:\r\n        raise OutputParserException(\r\n            f\"Got invalid return object. Expected markdown code snippet with JSON \"\r\n            f\"object, but got:\\n{text}\"\r\n        )\r\n\r\n    json_string = text.split(\"```json\")[1].strip().strip(\"```\").strip()\r\n    try:\r\n        json_obj = json.loads(json_string)\r\n    except json.JSONDecodeError as e:\r\n        raise OutputParserException(f\"Got invalid JSON object. Error: {e}\")\r\n    for key in expected_keys:\r\n        if key not in json_obj:\r\n            raise OutputParserException(\r\n                f\"Got invalid return object. Expected key `{key}` \"\r\n                f\"to be present, but got {json_obj}\"\r\n            )\r\n    return json_obj\r\n```\r\nYou can see there is no \"```json\" string in the output of LLM, so it will step into the \"if\" in the first row of this function and raise the bug.\n\n### Expected behavior\n\nCan anyone give me some solutions? thanks.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5163/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5163/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5162",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5162/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5162/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5162/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5162",
        "id": 1723108777,
        "node_id": "PR_kwDOIPDwls5RM4M0",
        "number": 5162,
        "title": "add a Iugu loader",
        "user": {
            "login": "rasiqueira",
            "id": 34777347,
            "node_id": "MDQ6VXNlcjM0Nzc3MzQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/34777347?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rasiqueira",
            "html_url": "https://github.com/rasiqueira",
            "followers_url": "https://api.github.com/users/rasiqueira/followers",
            "following_url": "https://api.github.com/users/rasiqueira/following{/other_user}",
            "gists_url": "https://api.github.com/users/rasiqueira/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rasiqueira/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rasiqueira/subscriptions",
            "organizations_url": "https://api.github.com/users/rasiqueira/orgs",
            "repos_url": "https://api.github.com/users/rasiqueira/repos",
            "events_url": "https://api.github.com/users/rasiqueira/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rasiqueira/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-24T03:15:07Z",
        "updated_at": "2023-05-24T18:47:02Z",
        "closed_at": "2023-05-24T18:47:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5162",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5162",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5162.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5162.patch",
            "merged_at": "2023-05-24T18:47:01Z"
        },
        "body": "Create a IUGU loader\r\n\r\n# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5162/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5162/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5161",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5161/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5161/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5161/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5161",
        "id": 1723087280,
        "node_id": "PR_kwDOIPDwls5RMz4v",
        "number": 5161,
        "title": "Add Evaluation / Feedback Examples",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-24T02:45:46Z",
        "updated_at": "2023-05-24T04:16:09Z",
        "closed_at": "2023-05-24T04:16:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5161",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5161",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5161.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5161.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5161/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5161/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5160",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5160/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5160/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5160/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5160",
        "id": 1723080995,
        "node_id": "I_kwDOIPDwls5mtCEj",
        "number": 5160,
        "title": "StuffDocumentsChain input_keys does not contain \"question\"",
        "user": {
            "login": "liangz1",
            "id": 7851093,
            "node_id": "MDQ6VXNlcjc4NTEwOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7851093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liangz1",
            "html_url": "https://github.com/liangz1",
            "followers_url": "https://api.github.com/users/liangz1/followers",
            "following_url": "https://api.github.com/users/liangz1/following{/other_user}",
            "gists_url": "https://api.github.com/users/liangz1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liangz1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liangz1/subscriptions",
            "organizations_url": "https://api.github.com/users/liangz1/orgs",
            "repos_url": "https://api.github.com/users/liangz1/repos",
            "events_url": "https://api.github.com/users/liangz1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liangz1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-24T02:36:47Z",
        "updated_at": "2023-08-11T23:25:14Z",
        "closed_at": "2023-08-11T23:25:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.176\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [x] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI run the following code snippet:\r\n```python\r\nfrom langchain.chains.qa_with_sources import load_qa_with_sources_chain\r\nfrom langchain.schema import Document\r\nchain = load_qa_with_sources_chain(OpenAI(temperature=0), chain_type=\"stuff\")\r\n\r\njson_strings = [\r\n'{\"page_content\": \"I love MLflow.\", \"metadata\": {\"source\": \"/path/to/mlflow.txt\"}}',\r\n'{\"page_content\": \"I love langchain.\", \"metadata\": {\"source\": \"/path/to/langchain.txt\"}}',\r\n'{\"page_content\": \"I love AI.\", \"metadata\": {\"source\": \"/path/to/ai.txt\"}}',\r\n]\r\ninput_docs = [Document.parse_raw(j) for j in json_strings]\r\nquery = \"What do I like?\"\r\nchain.run(input_documents=input_docs, question=query)\r\n# This gives me a reasonable answer:\r\n# ' I like MLflow, langchain, and AI.\\nSOURCES: /path/to/mlflow.txt, /path/to/langchain.txt, /path/to/ai.txt'\r\n\r\nchain.input_keys\r\n```\r\nOutput:\r\n```\r\n['input_documents']\r\n```\r\n\r\n### Expected behavior\r\n\r\nOutput:\r\n```\r\n['input_documents', 'question']\r\n```\r\nBecause when I run the chain as `chain.run(input_documents=input_docs, question=query)`.\r\n\r\nIf the expected behavior is `['input_documents']`, could you elaborate the reason? Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5160/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5160/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5158",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5158/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5158/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5158/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5158",
        "id": 1722985477,
        "node_id": "I_kwDOIPDwls5msqwF",
        "number": 5158,
        "title": "It would be nice to make the SQL helper consider the table and column comments",
        "user": {
            "login": "kittenkill",
            "id": 131975888,
            "node_id": "U_kgDOB93K0A",
            "avatar_url": "https://avatars.githubusercontent.com/u/131975888?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kittenkill",
            "html_url": "https://github.com/kittenkill",
            "followers_url": "https://api.github.com/users/kittenkill/followers",
            "following_url": "https://api.github.com/users/kittenkill/following{/other_user}",
            "gists_url": "https://api.github.com/users/kittenkill/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kittenkill/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kittenkill/subscriptions",
            "organizations_url": "https://api.github.com/users/kittenkill/orgs",
            "repos_url": "https://api.github.com/users/kittenkill/repos",
            "events_url": "https://api.github.com/users/kittenkill/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kittenkill/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-05-24T00:40:35Z",
        "updated_at": "2023-10-09T08:42:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThere are some tables out there with comments.\r\nIt would be nice if the sql agent could read them.\r\n\n\n### Motivation\n\nSometimes, column names do not describe perfectly well what they contain.\r\nIf sql agent can consider the table and column comments, it will be able to better respond to queries.\n\n### Your contribution\n\nMaybe something like this could work for the table comments:\r\n\r\n```diff\r\n--- sql_database.py.orig        2023-05-23 20:34:09.877909913 -0400\r\n+++ sql_database.py     2023-05-23 20:34:13.857925528 -0400\r\n@@ -268,11 +268,14 @@\r\n             # add create table command\r\n             create_table = str(CreateTable(table).compile(self._engine))\r\n             table_info = f\"{create_table.rstrip()}\"\r\n+            table_comment = table.comment\r\n             has_extra_info = (\r\n-                self._indexes_in_table_info or self._sample_rows_in_table_info\r\n+                self._indexes_in_table_info or self._sample_rows_in_table_info or table_comment\r\n             )\r\n             if has_extra_info:\r\n                 table_info += \"\\n\\n/*\"\r\n+            if table_comment:\r\n+                table_info += f\"\\nTable comment: {table_comment}\\n\"\r\n             if self._indexes_in_table_info:\r\n                 table_info += f\"\\n{self._get_table_indexes(table)}\\n\"\r\n             if self._sample_rows_in_table_info:\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5158/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5158/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5157",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5157/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5157/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5157/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5157",
        "id": 1722957535,
        "node_id": "PR_kwDOIPDwls5RMYEh",
        "number": 5157,
        "title": "Fauna Loader",
        "user": {
            "login": "Shadid12",
            "id": 10352180,
            "node_id": "MDQ6VXNlcjEwMzUyMTgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10352180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Shadid12",
            "html_url": "https://github.com/Shadid12",
            "followers_url": "https://api.github.com/users/Shadid12/followers",
            "following_url": "https://api.github.com/users/Shadid12/following{/other_user}",
            "gists_url": "https://api.github.com/users/Shadid12/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Shadid12/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Shadid12/subscriptions",
            "organizations_url": "https://api.github.com/users/Shadid12/orgs",
            "repos_url": "https://api.github.com/users/Shadid12/repos",
            "events_url": "https://api.github.com/users/Shadid12/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Shadid12/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-24T00:04:36Z",
        "updated_at": "2023-06-08T03:36:20Z",
        "closed_at": "2023-06-08T03:36:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5157",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5157",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5157.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5157.patch",
            "merged_at": "2023-06-08T03:36:20Z"
        },
        "body": "### Following is the FaunaDB document loader for langchain.\r\n\r\n### How to use it \r\n\r\n```\r\nfrom langchain.document_loaders.fauna import FaunaLoader\r\n\r\nloader = FaunaLoader(\"Item.all()\", \"<Field to Retrieve>\", \"<Fauna Secret>\")\r\ndocs = loader.load()\r\nprint(docs)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5157/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5157/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5156",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5156/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5156/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5156/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5156",
        "id": 1722944701,
        "node_id": "PR_kwDOIPDwls5RMVUW",
        "number": 5156,
        "title": "Harrison/modelscope",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T23:45:47Z",
        "updated_at": "2023-05-24T15:06:46Z",
        "closed_at": "2023-05-24T15:06:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5156",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5156",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5156.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5156.patch",
            "merged_at": "2023-05-24T15:06:45Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5156/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5156/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5155",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5155/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5155/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5155/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5155",
        "id": 1722922511,
        "node_id": "PR_kwDOIPDwls5RMQiN",
        "number": 5155,
        "title": "fix: fix current_time=Now bug for aadd_documents in TimeWeightedRetriever",
        "user": {
            "login": "mbchang",
            "id": 6439365,
            "node_id": "MDQ6VXNlcjY0MzkzNjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6439365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mbchang",
            "html_url": "https://github.com/mbchang",
            "followers_url": "https://api.github.com/users/mbchang/followers",
            "following_url": "https://api.github.com/users/mbchang/following{/other_user}",
            "gists_url": "https://api.github.com/users/mbchang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mbchang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mbchang/subscriptions",
            "organizations_url": "https://api.github.com/users/mbchang/orgs",
            "repos_url": "https://api.github.com/users/mbchang/repos",
            "events_url": "https://api.github.com/users/mbchang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mbchang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T23:16:00Z",
        "updated_at": "2023-05-24T21:22:33Z",
        "closed_at": "2023-05-24T03:31:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5155",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5155",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5155.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5155.patch",
            "merged_at": "2023-05-24T03:31:45Z"
        },
        "body": "# Same as PR #5045, but for async\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes #4825 \r\n\r\nI had forgotten to update the asynchronous counterpart `aadd_documents` with the bug fix from PR #5045, so this PR also fixes `aadd_documents` too.\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@dev2049\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5155/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5155/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5154",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5154/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5154/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5154/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5154",
        "id": 1722877221,
        "node_id": "PR_kwDOIPDwls5RMGkq",
        "number": 5154,
        "title": "Clarification of the reference to the \"get_text_legth\" function in ge\u2026",
        "user": {
            "login": "DanQuin",
            "id": 20705207,
            "node_id": "MDQ6VXNlcjIwNzA1MjA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/20705207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DanQuin",
            "html_url": "https://github.com/DanQuin",
            "followers_url": "https://api.github.com/users/DanQuin/followers",
            "following_url": "https://api.github.com/users/DanQuin/following{/other_user}",
            "gists_url": "https://api.github.com/users/DanQuin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DanQuin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DanQuin/subscriptions",
            "organizations_url": "https://api.github.com/users/DanQuin/orgs",
            "repos_url": "https://api.github.com/users/DanQuin/repos",
            "events_url": "https://api.github.com/users/DanQuin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DanQuin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T22:32:02Z",
        "updated_at": "2023-05-24T03:43:39Z",
        "closed_at": "2023-05-24T03:43:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5154",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5154",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5154.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5154.patch",
            "merged_at": "2023-05-24T03:43:38Z"
        },
        "body": "# Clarification of the reference to the \"get_text_legth\" function in getting_started.md\r\n\r\nReference to the function \"get_text_legth\" in the documentation did not make sense. Comment added for clarification.\r\n\r\n@hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5154/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5154/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5153",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5153/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5153/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5153/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5153",
        "id": 1722869873,
        "node_id": "PR_kwDOIPDwls5RMFAy",
        "number": 5153,
        "title": "Add Joplin document loader",
        "user": {
            "login": "alondmnt",
            "id": 17462125,
            "node_id": "MDQ6VXNlcjE3NDYyMTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/17462125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alondmnt",
            "html_url": "https://github.com/alondmnt",
            "followers_url": "https://api.github.com/users/alondmnt/followers",
            "following_url": "https://api.github.com/users/alondmnt/following{/other_user}",
            "gists_url": "https://api.github.com/users/alondmnt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alondmnt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alondmnt/subscriptions",
            "organizations_url": "https://api.github.com/users/alondmnt/orgs",
            "repos_url": "https://api.github.com/users/alondmnt/repos",
            "events_url": "https://api.github.com/users/alondmnt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alondmnt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T22:22:12Z",
        "updated_at": "2023-05-24T19:31:56Z",
        "closed_at": "2023-05-24T19:31:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5153",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5153",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5153.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5153.patch",
            "merged_at": "2023-05-24T19:31:55Z"
        },
        "body": "# Add Joplin document loader\r\n\r\n[Joplin](https://joplinapp.org/) is an open source note-taking app.\r\n\r\nJoplin has a [REST API](https://joplinapp.org/api/references/rest_api/) for accessing its local database. The proposed `JoplinLoader` uses the API to retrieve all notes in the database and their metadata. Joplin needs to be installed and running locally, and an access token is required.\r\n\r\n- The PR includes an integration test.\r\n- The PR includes an example notebook.\r\n\r\n## Who can review?\r\n\r\n@eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5153/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5153/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5152",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5152/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5152/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5152/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5152",
        "id": 1722856363,
        "node_id": "PR_kwDOIPDwls5RMCHB",
        "number": 5152,
        "title": "Use Case: Document Retrieval (with LLMs tagging)",
        "user": {
            "login": "FrancescoSaverioZuppichini",
            "id": 15908060,
            "node_id": "MDQ6VXNlcjE1OTA4MDYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/15908060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FrancescoSaverioZuppichini",
            "html_url": "https://github.com/FrancescoSaverioZuppichini",
            "followers_url": "https://api.github.com/users/FrancescoSaverioZuppichini/followers",
            "following_url": "https://api.github.com/users/FrancescoSaverioZuppichini/following{/other_user}",
            "gists_url": "https://api.github.com/users/FrancescoSaverioZuppichini/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FrancescoSaverioZuppichini/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FrancescoSaverioZuppichini/subscriptions",
            "organizations_url": "https://api.github.com/users/FrancescoSaverioZuppichini/orgs",
            "repos_url": "https://api.github.com/users/FrancescoSaverioZuppichini/repos",
            "events_url": "https://api.github.com/users/FrancescoSaverioZuppichini/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FrancescoSaverioZuppichini/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-23T22:08:46Z",
        "updated_at": "2023-07-17T09:39:02Z",
        "closed_at": "2023-07-13T15:10:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5152",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5152",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5152.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5152.patch",
            "merged_at": null
        },
        "body": "# Use Case: Document Retrieval (with LLMs taggin)\r\n\r\nHi there \ud83d\udc4b Thanks for the amazing library, I've had a tons of fun using it.\r\n\r\nI have added a new use case, it is document retrieval but with the addition of tagging the documents with LLMs. In my example, I am doing similarity search between an user input and a set of Disney song in order to recommend a song based on the user's mood/emotions/vibes . I've noticed that if you do that directly between the user's input and the lyrics the results are not great. So I've come up with what I've called LLMs tagging, basically:\r\n- you take the documents you want to embed and you use a LLMs to create a set of tags and you embed the tags\r\n- you take the user input and you use an LLMs to create the set of tags and you embed the tags\r\n- finally, you do similarity search between the tags\r\n\r\nI've build FairytaleDJ using this approach and I've written [an article](https://www.activeloop.ai/resources/3-ways-to-build-a-recommendation-engine-for-songs-with-lang-chain/) and I also have a demo on [Hugging Face Spaces](https://huggingface.co/spaces/Francesco/FairytaleDJ)\r\n\r\nLet me know if markdown follows your standards \r\n\r\nThanks a lot \ud83d\ude04 \r\n\r\nFra\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5152/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5152/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5151",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5151/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5151/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5151/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5151",
        "id": 1722854957,
        "node_id": "PR_kwDOIPDwls5RMBzL",
        "number": 5151,
        "title": "Docs: updated getting_started.md",
        "user": {
            "login": "DanQuin",
            "id": 20705207,
            "node_id": "MDQ6VXNlcjIwNzA1MjA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/20705207?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DanQuin",
            "html_url": "https://github.com/DanQuin",
            "followers_url": "https://api.github.com/users/DanQuin/followers",
            "following_url": "https://api.github.com/users/DanQuin/following{/other_user}",
            "gists_url": "https://api.github.com/users/DanQuin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DanQuin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DanQuin/subscriptions",
            "organizations_url": "https://api.github.com/users/DanQuin/orgs",
            "repos_url": "https://api.github.com/users/DanQuin/repos",
            "events_url": "https://api.github.com/users/DanQuin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DanQuin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T22:07:42Z",
        "updated_at": "2023-05-24T03:43:27Z",
        "closed_at": "2023-05-24T03:43:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5151",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5151",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5151.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5151.patch",
            "merged_at": "2023-05-24T03:43:26Z"
        },
        "body": "# Docs: updated getting_started.md\r\n\r\nJust accommodating some unnecessary spaces in the example of \"pass few shot examples to a prompt template\".\r\n\r\n@vowelparrot \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5151/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5151/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5150",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5150/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5150/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5150/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5150",
        "id": 1722840314,
        "node_id": "PR_kwDOIPDwls5RL-mV",
        "number": 5150,
        "title": "docs: added missed `document_loaders` examples",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T21:54:16Z",
        "updated_at": "2023-05-24T04:56:42Z",
        "closed_at": "2023-05-24T04:56:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5150",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5150",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5150.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5150.patch",
            "merged_at": "2023-05-24T04:56:42Z"
        },
        "body": "# DOCS added missed document_loader examples\r\n\r\nAdded missed examples: `JSON`, `Open Document Format (ODT)`, `Wikipedia`, `tomarkdown`.\r\nUpdated them to a consistent format.\r\n\r\n## Who can review?\r\n\r\n@hwchase17 \r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5150/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5150/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5149",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5149/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5149/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5149/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5149",
        "id": 1722827675,
        "node_id": "I_kwDOIPDwls5msEOb",
        "number": 5149,
        "title": "InvalidRequestError: Resource not found when running qa_chain.run with azureopenai llm ",
        "user": {
            "login": "eyalsofer",
            "id": 120107188,
            "node_id": "U_kgDOByiwtA",
            "avatar_url": "https://avatars.githubusercontent.com/u/120107188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyalsofer",
            "html_url": "https://github.com/eyalsofer",
            "followers_url": "https://api.github.com/users/eyalsofer/followers",
            "following_url": "https://api.github.com/users/eyalsofer/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyalsofer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyalsofer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyalsofer/subscriptions",
            "organizations_url": "https://api.github.com/users/eyalsofer/orgs",
            "repos_url": "https://api.github.com/users/eyalsofer/repos",
            "events_url": "https://api.github.com/users/eyalsofer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyalsofer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-23T21:42:04Z",
        "updated_at": "2023-09-10T16:13:20Z",
        "closed_at": "2023-09-10T16:13:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.178\r\npython==3.10.11\r\nos=win\n\n### Who can help?\n\n@hwchase17\r\n@agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfollowing this example with Langchain, using azureopenai as llm instead of openai: https://github.com/emptycrown/llama-hub/tree/main\n\n### Expected behavior\n\nget answer back from azureopenai resource ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5149/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5149/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5148",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5148/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5148/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5148/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5148",
        "id": 1722806922,
        "node_id": "PR_kwDOIPDwls5RL3Qy",
        "number": 5148,
        "title": "Docs: clean up getting started",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-23T21:25:08Z",
        "updated_at": "2023-06-22T08:20:10Z",
        "closed_at": "2023-06-22T08:20:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5148",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5148",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5148.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5148.patch",
            "merged_at": null
        },
        "body": "Main change: split quickstart into two, put chat model stuff in a Part 2 doc. Also clean up headers for prettier table of contents\r\n\r\ncheck it out here: https://python.langchain.com/en/dev2049-getting_started_clean",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5148/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5148/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5147",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5147/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5147/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5147/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5147",
        "id": 1722781672,
        "node_id": "PR_kwDOIPDwls5RLxyV",
        "number": 5147,
        "title": "Google Service (Drive v3 or Excel V4) added as a parameter",
        "user": {
            "login": "Yvelo",
            "id": 95425399,
            "node_id": "U_kgDOBbATdw",
            "avatar_url": "https://avatars.githubusercontent.com/u/95425399?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Yvelo",
            "html_url": "https://github.com/Yvelo",
            "followers_url": "https://api.github.com/users/Yvelo/followers",
            "following_url": "https://api.github.com/users/Yvelo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Yvelo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Yvelo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Yvelo/subscriptions",
            "organizations_url": "https://api.github.com/users/Yvelo/orgs",
            "repos_url": "https://api.github.com/users/Yvelo/repos",
            "events_url": "https://api.github.com/users/Yvelo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Yvelo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-23T21:01:26Z",
        "updated_at": "2023-09-13T20:31:14Z",
        "closed_at": "2023-09-13T20:31:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5147",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5147",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5147.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5147.patch",
            "merged_at": null
        },
        "body": "# Modify GoogleDriveLoader so that it can accept a Google Service instead of relying on a path to credential files.\r\n\r\nI am deploying LangChain in serverless environment where I use Redis for chat memory and security token store. This pull request allows to pass a Google Drive or a Google Sheet Service instead of a path to local files.\r\n\r\nI would also consider moving _load_sheet_from_id into a different class than GoogleDriveLoader since it is not based on Google Drive API. \r\n\r\nDear @eyurtsev, please advise,",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5147/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5147/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5146",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5146/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5146/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5146/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5146",
        "id": 1722729086,
        "node_id": "PR_kwDOIPDwls5RLmdO",
        "number": 5146,
        "title": "Add Azure Cognitive Search as vector store",
        "user": {
            "login": "ruoccofabrizio",
            "id": 22171838,
            "node_id": "MDQ6VXNlcjIyMTcxODM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22171838?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ruoccofabrizio",
            "html_url": "https://github.com/ruoccofabrizio",
            "followers_url": "https://api.github.com/users/ruoccofabrizio/followers",
            "following_url": "https://api.github.com/users/ruoccofabrizio/following{/other_user}",
            "gists_url": "https://api.github.com/users/ruoccofabrizio/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ruoccofabrizio/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ruoccofabrizio/subscriptions",
            "organizations_url": "https://api.github.com/users/ruoccofabrizio/orgs",
            "repos_url": "https://api.github.com/users/ruoccofabrizio/repos",
            "events_url": "https://api.github.com/users/ruoccofabrizio/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ruoccofabrizio/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "dev2049",
                "id": 130488702,
                "node_id": "U_kgDOB8cZfg",
                "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dev2049",
                "html_url": "https://github.com/dev2049",
                "followers_url": "https://api.github.com/users/dev2049/followers",
                "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
                "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
                "organizations_url": "https://api.github.com/users/dev2049/orgs",
                "repos_url": "https://api.github.com/users/dev2049/repos",
                "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dev2049/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-05-23T20:20:13Z",
        "updated_at": "2023-06-11T20:34:48Z",
        "closed_at": "2023-06-11T20:34:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5146",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5146",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5146.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5146.patch",
            "merged_at": "2023-06-11T20:34:47Z"
        },
        "body": "# Adding Azure Cognitive Search as vector store\r\n\r\nAdd Azure Cognitive Search as vector store\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5146/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5146/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5145",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5145/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5145/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5145/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5145",
        "id": 1722695626,
        "node_id": "I_kwDOIPDwls5mrj_K",
        "number": 5145,
        "title": "Can't pickle the faiss vector store object in langchain",
        "user": {
            "login": "jpzhangvincent",
            "id": 7220686,
            "node_id": "MDQ6VXNlcjcyMjA2ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7220686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpzhangvincent",
            "html_url": "https://github.com/jpzhangvincent",
            "followers_url": "https://api.github.com/users/jpzhangvincent/followers",
            "following_url": "https://api.github.com/users/jpzhangvincent/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpzhangvincent/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpzhangvincent/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpzhangvincent/subscriptions",
            "organizations_url": "https://api.github.com/users/jpzhangvincent/orgs",
            "repos_url": "https://api.github.com/users/jpzhangvincent/repos",
            "events_url": "https://api.github.com/users/jpzhangvincent/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpzhangvincent/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-23T19:56:17Z",
        "updated_at": "2023-09-10T16:13:24Z",
        "closed_at": "2023-09-10T16:13:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI got the error `OSError: [Errno 22] Invalid argument` when trying to pickle the faiss vector store. with the following code\r\n\r\n```\r\nmerge_file_path = \"combined_hf_faiss_vectorstore.pkl\"\r\nwith open(merge_file_path, \"wb\") as f:\r\n    pickle.dump(csfaq_index, f)\r\n```\r\nIt works on mac local laptop but not on the linux machine in the Databricks cloud.\r\n\r\nHere is the system info:\r\nsysname='Linux',  release='5.15.0-1035-aws', version='#39~20.04.1-Ubuntu SMP Wed Apr 19 15:34:33 UTC 2023', machine='x86_64'\r\n\r\nAny suggestion?\r\n\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5145/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5145/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5144",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5144/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5144/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5144/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5144",
        "id": 1722650601,
        "node_id": "PR_kwDOIPDwls5RLVag",
        "number": 5144,
        "title": "fixing total cost finetuned model giving zero",
        "user": {
            "login": "tommasodelorenzo",
            "id": 57231812,
            "node_id": "MDQ6VXNlcjU3MjMxODEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/57231812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tommasodelorenzo",
            "html_url": "https://github.com/tommasodelorenzo",
            "followers_url": "https://api.github.com/users/tommasodelorenzo/followers",
            "following_url": "https://api.github.com/users/tommasodelorenzo/following{/other_user}",
            "gists_url": "https://api.github.com/users/tommasodelorenzo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tommasodelorenzo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tommasodelorenzo/subscriptions",
            "organizations_url": "https://api.github.com/users/tommasodelorenzo/orgs",
            "repos_url": "https://api.github.com/users/tommasodelorenzo/repos",
            "events_url": "https://api.github.com/users/tommasodelorenzo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tommasodelorenzo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T19:21:49Z",
        "updated_at": "2023-05-24T17:04:09Z",
        "closed_at": "2023-05-24T17:04:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5144",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5144",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5144.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5144.patch",
            "merged_at": "2023-05-24T17:04:08Z"
        },
        "body": "# OpanAI finetuned model giving zero tokens cost\r\n\r\nVery simple fix to the previously committed solution to allowing finetuned Openai models.\r\n\r\nImproves #5127 \r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@agola11 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5144/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5144/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5143",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5143/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5143/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5143/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5143",
        "id": 1722578342,
        "node_id": "PR_kwDOIPDwls5RLFoR",
        "number": 5143,
        "title": "Improve PlanningOutputParser whitespace handling",
        "user": {
            "login": "TMRolle",
            "id": 7948117,
            "node_id": "MDQ6VXNlcjc5NDgxMTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7948117?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TMRolle",
            "html_url": "https://github.com/TMRolle",
            "followers_url": "https://api.github.com/users/TMRolle/followers",
            "following_url": "https://api.github.com/users/TMRolle/following{/other_user}",
            "gists_url": "https://api.github.com/users/TMRolle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TMRolle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TMRolle/subscriptions",
            "organizations_url": "https://api.github.com/users/TMRolle/orgs",
            "repos_url": "https://api.github.com/users/TMRolle/repos",
            "events_url": "https://api.github.com/users/TMRolle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TMRolle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-23T18:26:46Z",
        "updated_at": "2023-05-23T19:47:27Z",
        "closed_at": "2023-05-23T19:47:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5143",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5143",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5143.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5143.patch",
            "merged_at": "2023-05-23T19:47:27Z"
        },
        "body": "Some LLM's will produce numbered lists with leading whitespace, i.e. in response to \"What is the sum of 2 and 3?\":\r\n```\r\nPlan:\r\n  1. Add 2 and 3.\r\n  2. Given the above steps taken, please respond to the users original question.\r\n```\r\nThis commit updates the PlanningOutputParser regex to ignore leading whitespace before the step number, enabling it to correctly parse this format.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5143/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5143/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5142",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5142/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5142/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5142/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5142",
        "id": 1722569136,
        "node_id": "PR_kwDOIPDwls5RLDoY",
        "number": 5142,
        "title": "LLM wrapper for Databricks",
        "user": {
            "login": "mengxr",
            "id": 829644,
            "node_id": "MDQ6VXNlcjgyOTY0NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/829644?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mengxr",
            "html_url": "https://github.com/mengxr",
            "followers_url": "https://api.github.com/users/mengxr/followers",
            "following_url": "https://api.github.com/users/mengxr/following{/other_user}",
            "gists_url": "https://api.github.com/users/mengxr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mengxr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mengxr/subscriptions",
            "organizations_url": "https://api.github.com/users/mengxr/orgs",
            "repos_url": "https://api.github.com/users/mengxr/repos",
            "events_url": "https://api.github.com/users/mengxr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mengxr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899415699,
                "node_id": "LA_kwDOIPDwls8AAAABJAcmkw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/llms",
                "name": "llms",
                "color": "7CDBB2",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-23T18:19:17Z",
        "updated_at": "2023-06-06T20:20:15Z",
        "closed_at": "2023-05-26T02:19:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5142",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5142",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5142.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5142.patch",
            "merged_at": "2023-05-26T02:19:37Z"
        },
        "body": "This PR adds LLM wrapper for Databricks. It supports two endpoint types:\r\n* serving endpoint\r\n* cluster driver proxy app\r\n\r\nAn integration notebook is included to show how it works.\r\n\r\ncc: @hwchase17 @agola11 @gengliangwang ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5142/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5142/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5141",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5141/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5141/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5141/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5141",
        "id": 1722482074,
        "node_id": "I_kwDOIPDwls5mqv2a",
        "number": 5141,
        "title": "AEP API Module",
        "user": {
            "login": "skanjila",
            "id": 674374,
            "node_id": "MDQ6VXNlcjY3NDM3NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/674374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skanjila",
            "html_url": "https://github.com/skanjila",
            "followers_url": "https://api.github.com/users/skanjila/followers",
            "following_url": "https://api.github.com/users/skanjila/following{/other_user}",
            "gists_url": "https://api.github.com/users/skanjila/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skanjila/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skanjila/subscriptions",
            "organizations_url": "https://api.github.com/users/skanjila/orgs",
            "repos_url": "https://api.github.com/users/skanjila/repos",
            "events_url": "https://api.github.com/users/skanjila/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skanjila/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-23T17:10:45Z",
        "updated_at": "2023-12-06T17:46:05Z",
        "closed_at": "2023-12-06T17:46:04Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nHello,\r\nI would like to contribute a new feature in the api module for langchain, specifically we're looking to build a mechnism to translate natural language to APIs for the Adobe Experience Platform:  https://developer.adobe.com/experience-platform-apis/ .  I would like to lead and contribute this module back to langchain, I have forked the codebase, let me know what else is needed from my end, I will be sending across a PR soon that covers the basics\n\n### Motivation\n\nWe're working on an end to end ml pipeline project part of which could use this langchain functionality to translate user's natural language commands to API requests/responses, like a gpt pair programmer\n\n### Your contribution\n\nAs I said I want to lead/contribute all of this",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5141/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5141/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5140",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5140/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5140/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5140/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5140",
        "id": 1722449278,
        "node_id": "PR_kwDOIPDwls5RKp5O",
        "number": 5140,
        "title": "Update CONTRIBUTION guidelines and PR Template",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T16:45:47Z",
        "updated_at": "2023-05-26T14:18:12Z",
        "closed_at": "2023-05-26T14:18:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5140",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5140",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5140.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5140.patch",
            "merged_at": "2023-05-26T14:18:12Z"
        },
        "body": "# Update contribution guidelines and PR template\n\nThis PR updates the contribution guidelines to include more information on how\nto handle optional dependencies. \n\nThe PR template is updated to include a link to the contribution guidelines\ndocument.\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5140/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5140/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5139",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5139/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5139/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5139/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5139",
        "id": 1722444819,
        "node_id": "I_kwDOIPDwls5mqmwT",
        "number": 5139,
        "title": "Unable to Use \"Spark SQL Agent\" in Azure Synapse Spark Pool (pyspark 3.3 version)",
        "user": {
            "login": "krishnabnv1",
            "id": 17753877,
            "node_id": "MDQ6VXNlcjE3NzUzODc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/17753877?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/krishnabnv1",
            "html_url": "https://github.com/krishnabnv1",
            "followers_url": "https://api.github.com/users/krishnabnv1/followers",
            "following_url": "https://api.github.com/users/krishnabnv1/following{/other_user}",
            "gists_url": "https://api.github.com/users/krishnabnv1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/krishnabnv1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/krishnabnv1/subscriptions",
            "organizations_url": "https://api.github.com/users/krishnabnv1/orgs",
            "repos_url": "https://api.github.com/users/krishnabnv1/repos",
            "events_url": "https://api.github.com/users/krishnabnv1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/krishnabnv1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-23T16:42:17Z",
        "updated_at": "2023-09-10T16:13:31Z",
        "closed_at": "2023-09-10T16:13:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHi, I am trying to query tabular data and play with it using langchain SparkSQLAgent, from the below link.\r\nhttps://python.langchain.com/en/latest/modules/agents/toolkits/examples/spark_sql.html\r\n\r\nI got the below error \r\n**\"ModuleNotFoundError: No module named 'pyspark.errors'\"**  because of the below spark code from langchain library\r\n_try:\r\n    from pyspark.errors import PySparkException\r\nexcept ImportError:__\r\n\r\nObviously pyspark.errors library is still not present in synapse spark pool which runs on pyspark version 3.3(latest). We dont have option to upgrade to pyspark version 3.4 in our spark pools.\r\n\r\nIs it possible to align the library to pyspark version 3.3 also, it will help all the developers using syanpse spark now!! thanks\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nNote: errors appears in synapse spark version which runs on pyspark 3.3 runtime\r\n\r\nllm = OpenAI(engine=\"\",temperature=0)\r\ntoolkit = SparkSQLToolkit(db=spark_sql, llm=llm)\r\nagent_executor = create_spark_sql_agent(\r\n    llm=llm,\r\n    toolkit=toolkit,verbose = True)\n\n### Expected behavior\n\nplease make langchain module aligned with pyspark 3.3 version to help synapse spark developers, as pyspark 3.4 is still not available.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5139/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5139/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5138",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5138/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5138/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5138/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5138",
        "id": 1722424696,
        "node_id": "PR_kwDOIPDwls5RKkoI",
        "number": 5138,
        "title": "Add instructions to pyproject.toml",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T16:26:57Z",
        "updated_at": "2023-05-26T17:29:09Z",
        "closed_at": "2023-05-26T17:29:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5138",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5138",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5138.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5138.patch",
            "merged_at": "2023-05-26T17:29:07Z"
        },
        "body": "# Add instructions to pyproject.toml\n\n* Add instructions to pyproject.toml about how to handle optional dependencies.\n\n## Before submitting\n\n\n## Who can review?\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5138/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5138/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5137",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5137/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5137/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5137/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5137",
        "id": 1722386517,
        "node_id": "PR_kwDOIPDwls5RKdDO",
        "number": 5137,
        "title": "Bibtex integration for document loader and retriever",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-23T16:05:58Z",
        "updated_at": "2023-05-25T07:21:32Z",
        "closed_at": "2023-05-25T07:21:32Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5137",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5137",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5137.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5137.patch",
            "merged_at": "2023-05-25T07:21:31Z"
        },
        "body": "# Bibtex integration\n\nWrap bibtexparser to retrieve a list of docs from a bibtex file.\n* Get the metadata from the bibtex entries\n* `page_content` get from the local pdf referenced in the `file` field of the bibtex entry using `pymupdf`\n* If no valid pdf file, `page_content` set to the `abstract` field of the bibtex entry\n* Support Zotero flavour using regex to get the file path\n* Added usage example in `docs/modules/indexes/document_loaders/examples/bibtex.ipynb`\n\n## Who can review?\n\nMy best guess: @eyurtsev, @dev2049\n\n\n\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5137/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5137/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5136",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5136/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5136/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5136/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5136",
        "id": 1722369439,
        "node_id": "PR_kwDOIPDwls5RKZSp",
        "number": 5136,
        "title": "Tedma4/twilio tool",
        "user": {
            "login": "tedma4",
            "id": 7866166,
            "node_id": "MDQ6VXNlcjc4NjYxNjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7866166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tedma4",
            "html_url": "https://github.com/tedma4",
            "followers_url": "https://api.github.com/users/tedma4/followers",
            "following_url": "https://api.github.com/users/tedma4/following{/other_user}",
            "gists_url": "https://api.github.com/users/tedma4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tedma4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tedma4/subscriptions",
            "organizations_url": "https://api.github.com/users/tedma4/orgs",
            "repos_url": "https://api.github.com/users/tedma4/repos",
            "events_url": "https://api.github.com/users/tedma4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tedma4/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T15:56:36Z",
        "updated_at": "2023-05-26T02:19:23Z",
        "closed_at": "2023-05-26T02:19:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5136",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5136",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5136.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5136.patch",
            "merged_at": "2023-05-26T02:19:22Z"
        },
        "body": "# Add twilio sms tool\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5136/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5136/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5135",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5135/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5135/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5135/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5135",
        "id": 1722367645,
        "node_id": "PR_kwDOIPDwls5RKY6L",
        "number": 5135,
        "title": "Add full Google Drive features.",
        "user": {
            "login": "pprados",
            "id": 204694,
            "node_id": "MDQ6VXNlcjIwNDY5NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/204694?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pprados",
            "html_url": "https://github.com/pprados",
            "followers_url": "https://api.github.com/users/pprados/followers",
            "following_url": "https://api.github.com/users/pprados/following{/other_user}",
            "gists_url": "https://api.github.com/users/pprados/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pprados/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pprados/subscriptions",
            "organizations_url": "https://api.github.com/users/pprados/orgs",
            "repos_url": "https://api.github.com/users/pprados/repos",
            "events_url": "https://api.github.com/users/pprados/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pprados/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 28,
        "created_at": "2023-05-23T15:55:24Z",
        "updated_at": "2023-10-03T14:15:13Z",
        "closed_at": "2023-09-05T14:43:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5135",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5135",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5135.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5135.patch",
            "merged_at": null
        },
        "body": "# Reimplement the Google Drive features\r\n\r\nPropose :\r\n- langchain.docstore.GoogleDriveDocStore\r\n- langchain.document_loaders.GoogleDriveLoader\r\n- langchain.utilities.GoogleDriveAPIWrapper\r\n- langchain.tools.GoogleDriveSearchTool\r\n- langchain.utilities.GoogleDriveUtilities\r\n\r\nFeatures:\r\n- Fully compatible with Google Drive API\r\n- Manage file in trash\r\n- Manage shortcut\r\n- Manage file description\r\n- Paging with request GDrive list()\r\n- Multiple kind of template for request GDrive\r\n- Convert a lot of mime type (can be configured). The list is adjusted according to the packages availables \r\n- Convert GDoc, GSheet and GSlide with differents modes\r\n- Can use only the description of files, without loading and conversion of the body\r\n- Lambda fine filter\r\n- Remove duplicate documents (in case of shortcut)\r\n- Add Url to documents (or part of documents like specific slide)\r\n- Use environment variable for reference an API tokens\r\n- Manage different king of strange state with Google File (absence of URL, etc.)\r\n- Use fully lazy strategy to save memory\r\n\r\n# Recognition\r\nIf you accept my pull-request, you can mention me @pprados. Thanks\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\nUnit-tests coverage >80% of new code\r\n\r\nNo integration test, but some notebook to show how to use.\r\n- docs/modules/agents/tools/examples/google_drive.ipynb\r\n- docs/modules/indexes/document_loaders/examples/google_drive.ipynb\r\n- docs/modules/indexes/retrievers/examples/google_drive.ipynb\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@eyurtsev @hwchase17 @vowelparrot might be interested\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5135/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5135/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5133",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5133/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5133/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5133/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5133",
        "id": 1722313908,
        "node_id": "I_kwDOIPDwls5mqGy0",
        "number": 5133,
        "title": "BaseRetriever's get_relevant_documents to return Iterable rather than List",
        "user": {
            "login": "cancan101",
            "id": 51059,
            "node_id": "MDQ6VXNlcjUxMDU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/51059?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cancan101",
            "html_url": "https://github.com/cancan101",
            "followers_url": "https://api.github.com/users/cancan101/followers",
            "following_url": "https://api.github.com/users/cancan101/following{/other_user}",
            "gists_url": "https://api.github.com/users/cancan101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cancan101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cancan101/subscriptions",
            "organizations_url": "https://api.github.com/users/cancan101/orgs",
            "repos_url": "https://api.github.com/users/cancan101/repos",
            "events_url": "https://api.github.com/users/cancan101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cancan101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-23T15:29:29Z",
        "updated_at": "2023-09-10T16:13:36Z",
        "closed_at": "2023-09-10T16:13:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nChange the return type of `BaseRetriever`'s `get_relevant_documents` (and `aget_relevant_documents`) to return an `Iterable[Document]` rather than `List[Document]`:\r\nhttps://github.com/hwchase17/langchain/blob/753f4cfc26c04debfa02bb086a441d86877884c1/langchain/schema.py#L277-L297\n\n### Motivation\n\nIsn't clear why the results needs to be in a concrete / eagerly formed list. This change would make it easy to write a merge retriever, etc\n\n### Your contribution\n\nSimple to change the type definition, though technically would be a breaking change.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5133/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5133/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5132",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5132/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5132/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5132/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5132",
        "id": 1722189251,
        "node_id": "PR_kwDOIPDwls5RJx12",
        "number": 5132,
        "title": "Harrison/exclude embedings",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5483526101,
                "node_id": "LA_kwDOIPDwls8AAAABRtf31Q",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/breaking",
                "name": "breaking",
                "color": "B60205",
                "default": false,
                "description": "Breaking change"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-23T14:21:32Z",
        "updated_at": "2023-10-03T18:28:33Z",
        "closed_at": "2023-10-03T18:28:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5132",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5132",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5132.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5132.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5132/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5132/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5131",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5131/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5131/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5131/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5131",
        "id": 1722147865,
        "node_id": "I_kwDOIPDwls5mpeQZ",
        "number": 5131,
        "title": "HypotheticalDocumentEmbedder loading fails",
        "user": {
            "login": "liangz1",
            "id": 7851093,
            "node_id": "MDQ6VXNlcjc4NTEwOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7851093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liangz1",
            "html_url": "https://github.com/liangz1",
            "followers_url": "https://api.github.com/users/liangz1/followers",
            "following_url": "https://api.github.com/users/liangz1/following{/other_user}",
            "gists_url": "https://api.github.com/users/liangz1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liangz1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liangz1/subscriptions",
            "organizations_url": "https://api.github.com/users/liangz1/orgs",
            "repos_url": "https://api.github.com/users/liangz1/repos",
            "events_url": "https://api.github.com/users/liangz1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liangz1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-23T13:59:44Z",
        "updated_at": "2023-09-18T16:11:36Z",
        "closed_at": "2023-09-18T16:11:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.176\n\n### Who can help?\n\n@hwchase17 @dev2049 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nRunning the following code throws an error:\r\n```python\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chains import HypotheticalDocumentEmbedder\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\n\r\nbase_embeddings = OpenAIEmbeddings()\r\nllm = OpenAI()\r\n# Load with `web_search` prompt\r\nembeddings = HypotheticalDocumentEmbedder.from_llm(llm, base_embeddings, \"web_search\")\r\nembeddings.save(\"/Users/liang.zhang/emb.yaml\")\r\nload_chain(\"/Users/liang.zhang/emb.yaml\")\r\n```\r\nError:\r\n```\r\n---------------------------------------------------------------------------\r\nConstructorError                          Traceback (most recent call last)\r\nInput In [33], in <cell line: 1>()\r\n----> 1 load_chain(\"/Users/liang.zhang/emb.yaml\")\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/chains/loading.py:449, in load_chain(path, **kwargs)\r\n    447     return hub_result\r\n    448 else:\r\n--> 449     return _load_chain_from_file(path, **kwargs)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/chains/loading.py:465, in _load_chain_from_file(file, **kwargs)\r\n    463 elif file_path.suffix == \".yaml\":\r\n    464     with open(file_path, \"r\") as f:\r\n--> 465         config = yaml.safe_load(f)\r\n    466 else:\r\n    467     raise ValueError(\"File type must be json or yaml\")\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/yaml/__init__.py:125, in safe_load(stream)\r\n    117 def safe_load(stream):\r\n    118     \"\"\"\r\n    119     Parse the first YAML document in a stream\r\n    120     and produce the corresponding Python object.\r\n   (...)\r\n    123     to be safe for untrusted input.\r\n    124     \"\"\"\r\n--> 125     return load(stream, SafeLoader)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/yaml/__init__.py:81, in load(stream, Loader)\r\n     79 loader = Loader(stream)\r\n     80 try:\r\n---> 81     return loader.get_single_data()\r\n     82 finally:\r\n     83     loader.dispose()\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/yaml/constructor.py:51, in BaseConstructor.get_single_data(self)\r\n     49 node = self.get_single_node()\r\n     50 if node is not None:\r\n---> 51     return self.construct_document(node)\r\n     52 return None\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/yaml/constructor.py:60, in BaseConstructor.construct_document(self, node)\r\n     58     self.state_generators = []\r\n     59     for generator in state_generators:\r\n---> 60         for dummy in generator:\r\n     61             pass\r\n     62 self.constructed_objects = {}\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/yaml/constructor.py:413, in SafeConstructor.construct_yaml_map(self, node)\r\n    411 data = {}\r\n    412 yield data\r\n--> 413 value = self.construct_mapping(node)\r\n    414 data.update(value)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/yaml/constructor.py:218, in SafeConstructor.construct_mapping(self, node, deep)\r\n    216 if isinstance(node, MappingNode):\r\n    217     self.flatten_mapping(node)\r\n--> 218 return super().construct_mapping(node, deep=deep)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/yaml/constructor.py:143, in BaseConstructor.construct_mapping(self, node, deep)\r\n    140     if not isinstance(key, collections.abc.Hashable):\r\n    141         raise ConstructorError(\"while constructing a mapping\", node.start_mark,\r\n    142                 \"found unhashable key\", key_node.start_mark)\r\n--> 143     value = self.construct_object(value_node, deep=deep)\r\n    144     mapping[key] = value\r\n    145 return mapping\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/yaml/constructor.py:100, in BaseConstructor.construct_object(self, node, deep)\r\n     98             constructor = self.__class__.construct_mapping\r\n     99 if tag_suffix is None:\r\n--> 100     data = constructor(self, node)\r\n    101 else:\r\n    102     data = constructor(self, tag_suffix, node)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/yaml/constructor.py:427, in SafeConstructor.construct_undefined(self, node)\r\n    426 def construct_undefined(self, node):\r\n--> 427     raise ConstructorError(None, None,\r\n    428             \"could not determine a constructor for the tag %r\" % node.tag,\r\n    429             node.start_mark)\r\n\r\nConstructorError: could not determine a constructor for the tag 'tag:yaml.org,2002:python/name:openai.api_resources.embedding.Embedding'\r\n  in \"/Users/liang.zhang/emb.yaml\", line 5, column 11\r\n\r\n```\n\n### Expected behavior\n\nNo errors should occur.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5131/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5131/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5130",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5130/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5130/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5130/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5130",
        "id": 1722135288,
        "node_id": "PR_kwDOIPDwls5RJmE2",
        "number": 5130,
        "title": "bump 178",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T13:53:10Z",
        "updated_at": "2023-05-23T14:43:57Z",
        "closed_at": "2023-05-23T14:43:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5130",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5130",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5130.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5130.patch",
            "merged_at": "2023-05-23T14:43:56Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5130/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5130/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5129",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5129/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5129/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5129/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5129",
        "id": 1722134714,
        "node_id": "PR_kwDOIPDwls5RJl8t",
        "number": 5129,
        "title": "SQLite-backed Entity Memory",
        "user": {
            "login": "JoseHervas",
            "id": 20096417,
            "node_id": "MDQ6VXNlcjIwMDk2NDE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/20096417?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JoseHervas",
            "html_url": "https://github.com/JoseHervas",
            "followers_url": "https://api.github.com/users/JoseHervas/followers",
            "following_url": "https://api.github.com/users/JoseHervas/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoseHervas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JoseHervas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoseHervas/subscriptions",
            "organizations_url": "https://api.github.com/users/JoseHervas/orgs",
            "repos_url": "https://api.github.com/users/JoseHervas/repos",
            "events_url": "https://api.github.com/users/JoseHervas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JoseHervas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-23T13:52:51Z",
        "updated_at": "2023-06-12T09:24:54Z",
        "closed_at": "2023-05-31T01:39:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5129",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5129",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5129.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5129.patch",
            "merged_at": "2023-05-31T01:39:47Z"
        },
        "body": "# SQLite-backed Entity Memory\r\n\r\nFollowing the initiative of https://github.com/hwchase17/langchain/pull/2397 I think it would be helpful to be able to persist Entity Memory on disk by default\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@dev2049\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5129/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5129/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5128",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5128/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5128/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5128/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5128",
        "id": 1722107136,
        "node_id": "I_kwDOIPDwls5mpUUA",
        "number": 5128,
        "title": "APIChain loading fails",
        "user": {
            "login": "liangz1",
            "id": 7851093,
            "node_id": "MDQ6VXNlcjc4NTEwOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7851093?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/liangz1",
            "html_url": "https://github.com/liangz1",
            "followers_url": "https://api.github.com/users/liangz1/followers",
            "following_url": "https://api.github.com/users/liangz1/following{/other_user}",
            "gists_url": "https://api.github.com/users/liangz1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/liangz1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/liangz1/subscriptions",
            "organizations_url": "https://api.github.com/users/liangz1/orgs",
            "repos_url": "https://api.github.com/users/liangz1/repos",
            "events_url": "https://api.github.com/users/liangz1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/liangz1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-23T13:37:40Z",
        "updated_at": "2023-06-27T22:32:42Z",
        "closed_at": "2023-06-27T22:32:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.176\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nRunning the following code to load a saved APIChain fails.\r\n\r\n```python\r\nfrom langchain.chains.api.prompt import API_RESPONSE_PROMPT\r\nfrom langchain.chains import APIChain\r\nfrom langchain.prompts.prompt import PromptTemplate\r\nfrom langchain.llms import OpenAI\r\n\r\nllm = OpenAI(temperature=0)\r\n\r\nfrom langchain.chains.api import open_meteo_docs\r\nchain_new = APIChain.from_llm_and_api_docs(llm, open_meteo_docs.OPEN_METEO_DOCS, verbose=True)\r\n\r\nchain_new.save(\"/Users/liang.zhang/api.yaml\")\r\nchain = load_chain(\"/Users/liang.zhang/api.yaml\")\r\n```\r\nError:\r\n```\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\nInput In [29], in <cell line: 1>()\r\n----> 1 chain = load_chain(\"/Users/liang.zhang/api.yaml\")\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/chains/loading.py:449, in load_chain(path, **kwargs)\r\n    447     return hub_result\r\n    448 else:\r\n--> 449     return _load_chain_from_file(path, **kwargs)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/chains/loading.py:476, in _load_chain_from_file(file, **kwargs)\r\n    473     config[\"memory\"] = kwargs.pop(\"memory\")\r\n    475 # Load the chain from the config now.\r\n--> 476 return load_chain_from_config(config, **kwargs)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/chains/loading.py:439, in load_chain_from_config(config, **kwargs)\r\n    436     raise ValueError(f\"Loading {config_type} chain not supported\")\r\n    438 chain_loader = type_to_loader_dict[config_type]\r\n--> 439 return chain_loader(config, **kwargs)\r\n\r\nFile ~/miniforge3/envs/mlflow-3.8/lib/python3.8/site-packages/langchain/chains/loading.py:383, in _load_api_chain(config, **kwargs)\r\n    381     requests_wrapper = kwargs.pop(\"requests_wrapper\")\r\n    382 else:\r\n--> 383     raise ValueError(\"`requests_wrapper` must be present.\")\r\n    384 return APIChain(\r\n    385     api_request_chain=api_request_chain,\r\n    386     api_answer_chain=api_answer_chain,\r\n    387     requests_wrapper=requests_wrapper,\r\n    388     **config,\r\n    389 )\r\n\r\nValueError: `requests_wrapper` must be present.\r\n\r\n```\n\n### Expected behavior\n\nNo error should occur.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5128/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5128/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5127",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5127/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5127/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5127/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5127",
        "id": 1722094009,
        "node_id": "PR_kwDOIPDwls5RJdJK",
        "number": 5127,
        "title": "solving #2887",
        "user": {
            "login": "tommasodelorenzo",
            "id": 57231812,
            "node_id": "MDQ6VXNlcjU3MjMxODEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/57231812?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tommasodelorenzo",
            "html_url": "https://github.com/tommasodelorenzo",
            "followers_url": "https://api.github.com/users/tommasodelorenzo/followers",
            "following_url": "https://api.github.com/users/tommasodelorenzo/following{/other_user}",
            "gists_url": "https://api.github.com/users/tommasodelorenzo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tommasodelorenzo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tommasodelorenzo/subscriptions",
            "organizations_url": "https://api.github.com/users/tommasodelorenzo/orgs",
            "repos_url": "https://api.github.com/users/tommasodelorenzo/repos",
            "events_url": "https://api.github.com/users/tommasodelorenzo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tommasodelorenzo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-23T13:31:00Z",
        "updated_at": "2023-05-23T18:18:04Z",
        "closed_at": "2023-05-23T18:18:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5127",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5127",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5127.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5127.patch",
            "merged_at": "2023-05-23T18:18:04Z"
        },
        "body": "# Allowing openAI fine-tuned models\r\nVery simple fix that checks whether a openAI `model_name` is a fine-tuned model when loading `context_size` and when computing call's cost in the `openai_callback`.\r\n\r\nFixes #2887 \r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@hwchase17  @agola11 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5127/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5127/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5126",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5126/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5126/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5126/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5126",
        "id": 1721797534,
        "node_id": "I_kwDOIPDwls5moIue",
        "number": 5126,
        "title": "Support `async` calls on `OpenAPI` chains",
        "user": {
            "login": "homanp",
            "id": 2464556,
            "node_id": "MDQ6VXNlcjI0NjQ1NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2464556?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/homanp",
            "html_url": "https://github.com/homanp",
            "followers_url": "https://api.github.com/users/homanp/followers",
            "following_url": "https://api.github.com/users/homanp/following{/other_user}",
            "gists_url": "https://api.github.com/users/homanp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/homanp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/homanp/subscriptions",
            "organizations_url": "https://api.github.com/users/homanp/orgs",
            "repos_url": "https://api.github.com/users/homanp/repos",
            "events_url": "https://api.github.com/users/homanp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/homanp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-23T10:51:43Z",
        "updated_at": "2023-09-10T16:13:39Z",
        "closed_at": "2023-09-10T16:13:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nCurrently only certain sets of `Chains` support `async`. It would be amazing if we could bring this support to more chains, in my case specifically the OpenAPI chain.\n\n### Motivation\n\n`async` support for more chains would unify code for larger applications that run several different types of chains especially with regards to the streaming callbacks. \n\n### Your contribution\n\nI could start with bringing `async` support to the `OpenAPI`\u00a0chain as a first step.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5126/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5126/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5125",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5125/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5125/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5125/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5125",
        "id": 1721767347,
        "node_id": "I_kwDOIPDwls5moBWz",
        "number": 5125,
        "title": "Pass Google Drive Service to GoogleDriveLoader instead of the token.json and credentials.json",
        "user": {
            "login": "Yvelo",
            "id": 95425399,
            "node_id": "U_kgDOBbATdw",
            "avatar_url": "https://avatars.githubusercontent.com/u/95425399?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Yvelo",
            "html_url": "https://github.com/Yvelo",
            "followers_url": "https://api.github.com/users/Yvelo/followers",
            "following_url": "https://api.github.com/users/Yvelo/following{/other_user}",
            "gists_url": "https://api.github.com/users/Yvelo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Yvelo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Yvelo/subscriptions",
            "organizations_url": "https://api.github.com/users/Yvelo/orgs",
            "repos_url": "https://api.github.com/users/Yvelo/repos",
            "events_url": "https://api.github.com/users/Yvelo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Yvelo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-23T10:33:51Z",
        "updated_at": "2023-05-23T21:07:10Z",
        "closed_at": "2023-05-23T21:07:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nModify GoogleDriveLoader so that it can accept a Google Drive Service instead of relying on file path to token.json and credentials.json\n\n### Motivation\n\nI am deploying LangChain in serverless environment where I use Redis for chat memory and security token store. In this context, it would be useful to be able to directly source the Google Drive connection credentials from Redis. Typically this could be done as follow:\r\n\r\nclass GoogleDriveLoader(BaseLoader, BaseModel):\r\n    \"\"\"Loader that loads Google Docs from Google Drive.\"\"\"\r\n\r\n    credentials_path: Path = Path.home() / \".credentials\" / \"credentials.json\"\r\n    token_path: Path = Path.home() / \".credentials\" / \"token.json\"\r\n    **service: Optional[Resource] = None #Proposed patch**\r\n    folder_id: Optional[str] = None\r\n    document_ids: Optional[List[str]] = None\r\n    file_ids: Optional[List[str]] = None\r\n\r\nThen it is mostly about wrapping the three instances in a function that would make them optional if service is supplied as a parameter.\r\n            creds = self._load_credentials()\r\n            service = build(\"drive\", \"v3\", credentials=creds)\n\n### Your contribution\n\nI can propose a fork if there is some interest with this evolution.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5125/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5125/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5124",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5124/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5124/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5124/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5124",
        "id": 1721600792,
        "node_id": "I_kwDOIPDwls5mnYsY",
        "number": 5124,
        "title": "source metadata cannot be retrieved from Weaviate",
        "user": {
            "login": "c-stephenson",
            "id": 35570423,
            "node_id": "MDQ6VXNlcjM1NTcwNDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/35570423?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/c-stephenson",
            "html_url": "https://github.com/c-stephenson",
            "followers_url": "https://api.github.com/users/c-stephenson/followers",
            "following_url": "https://api.github.com/users/c-stephenson/following{/other_user}",
            "gists_url": "https://api.github.com/users/c-stephenson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/c-stephenson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/c-stephenson/subscriptions",
            "organizations_url": "https://api.github.com/users/c-stephenson/orgs",
            "repos_url": "https://api.github.com/users/c-stephenson/repos",
            "events_url": "https://api.github.com/users/c-stephenson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/c-stephenson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-23T09:14:14Z",
        "updated_at": "2023-05-24T08:14:58Z",
        "closed_at": "2023-05-24T08:14:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\npython 3.11.3\r\nmacosx 13.4 \r\nlangchain==0.0.177\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nLoosely based on the sample code provided in the Langchain documentation [here](https://python.langchain.com/en/latest/modules/indexes/vectorstores/examples/weaviate.html)\r\n\r\n__Issue:__\r\nAdding metadata does not seem to work, does not return annoying on a similarity search or from QA chains\r\n\r\n`vectorstore.add_documents(documents=docs, meta_datas=meta_data)`\r\n\r\n```\r\n  loader = TextLoader('/path/to/file/state_of_the_union.txt')\r\n  documents = loader.load()\r\n  text_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\n  docs = text_splitter.split_documents(documents)\r\n\r\n  embeddings = OpenAIEmbeddings()\r\n\r\n  vectorstore = Weaviate(client, \"Paragraph\", \"content\")\r\n  \r\n  vectorstore.add_documents(documents=docs)\r\n\r\n  query = \"What did the president say about Ketanji Brown Jackson\"\r\n  docs = vectorstore.similarity_search(query)\r\n\r\n  print(docs[0].metadata)\r\n```\r\noutput:\r\n`{}`\r\n\r\n\n\n### Expected behavior\n\nApologies in advance if I've misunderstood the functionality, however I would expect source doc to be returned on the query from weaviate database. I can see the source is present in the db using weaviate's API\r\n```\r\nresult = (\r\n        client.query\r\n        .get(\"Paragraph\", [\"content\", \"source\"])\r\n        .with_near_text({\r\n            \"concepts\": [query]\r\n        })\r\n        .with_limit(1)\r\n        .do()\r\n    )\r\n\r\n    print(json.dumps(result, indent=4))\r\n```\r\noutput:\r\n```\r\n{\r\n    \"data\": {\r\n        \"Get\": {\r\n            \"Paragraph\": [\r\n                {\r\n                    \"content\": \"Tonight. I call on the Senate to: Pass the Freedom to Vote Act. Pass the John Lewis Voting Rights Act. And while you\\u2019re at it, pass the Disclose Act so Americans can know who is funding our elections. \\n\\nTonight, I\\u2019d like to honor someone who has dedicated his life to serve this country: Justice Stephen Breyer\\u2014an Army veteran, Constitutional scholar, and retiring Justice of the United States Supreme Court. Justice Breyer, thank you for your service. \\n\\nOne of the most serious constitutional responsibilities a President has is nominating someone to serve on the United States Supreme Court. \\n\\nAnd I did that 4 days ago, when I nominated Circuit Court of Appeals Judge Ketanji Brown Jackson. One of our nation\\u2019s top legal minds, who will continue Justice Breyer\\u2019s legacy of excellence.\",\r\n                    \"source\": \"/path/to/file/state_of_the_union.txt\"\r\n                }\r\n            ]\r\n        }\r\n    }\r\n}\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5124/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5124/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5123",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5123/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5123/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5123/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5123",
        "id": 1721576598,
        "node_id": "I_kwDOIPDwls5mnSyW",
        "number": 5123,
        "title": "Slow response time with `ConversationalRetrievalQAChain`",
        "user": {
            "login": "gzimh",
            "id": 18744740,
            "node_id": "MDQ6VXNlcjE4NzQ0NzQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/18744740?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gzimh",
            "html_url": "https://github.com/gzimh",
            "followers_url": "https://api.github.com/users/gzimh/followers",
            "following_url": "https://api.github.com/users/gzimh/following{/other_user}",
            "gists_url": "https://api.github.com/users/gzimh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gzimh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gzimh/subscriptions",
            "organizations_url": "https://api.github.com/users/gzimh/orgs",
            "repos_url": "https://api.github.com/users/gzimh/repos",
            "events_url": "https://api.github.com/users/gzimh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gzimh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-23T09:01:48Z",
        "updated_at": "2023-11-09T06:18:06Z",
        "closed_at": "2023-09-18T16:11:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nHello,\r\n\r\nI am facing slow response times (25 - 30 second) per question with `ConversationalRetrievalQAChain` and pinecone. \r\n\r\n```\r\n    const chain = ConversationalRetrievalQAChain.fromLLM(\r\n      this.llm,\r\n      vectorStore.asRetriever(),\r\n    );\r\n\r\n    const res = await chain.call({ question, chat_history: [''] });\r\n```\r\n\r\n95% of that time is spent from the time the chain.call is executed. I have tried both gpt-3.5-turbo and gpt-4 models and I face similar response times. \r\n\r\n\r\nI've also tried to turn on streaming, and I can see that for gtp-3.5-turbo there is nothing being streamed on the first 20 seconds or so. And once it starts streaming, it is faster compared to gpt-4. But, gpt-4 takes much less time to start streaming, but then it is slower to complete the answer.  \r\n\r\nAny help would be appreciated, thank you!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5123/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5123/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5122",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5122/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5122/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5122/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5122",
        "id": 1721520077,
        "node_id": "I_kwDOIPDwls5mnE_N",
        "number": 5122,
        "title": "Feature Proposal: VectorSearch enabled SQLChain? ",
        "user": {
            "login": "mpskex",
            "id": 8456706,
            "node_id": "MDQ6VXNlcjg0NTY3MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8456706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mpskex",
            "html_url": "https://github.com/mpskex",
            "followers_url": "https://api.github.com/users/mpskex/followers",
            "following_url": "https://api.github.com/users/mpskex/following{/other_user}",
            "gists_url": "https://api.github.com/users/mpskex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mpskex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mpskex/subscriptions",
            "organizations_url": "https://api.github.com/users/mpskex/orgs",
            "repos_url": "https://api.github.com/users/mpskex/repos",
            "events_url": "https://api.github.com/users/mpskex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mpskex/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-23T08:32:09Z",
        "updated_at": "2023-10-10T09:37:42Z",
        "closed_at": "2023-10-10T09:37:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nA VectorSearch enabled SQLChain that is capable of doing `JOIN`, `WHERE` filters and vector search at the same time.\r\n\r\nIt should be agnostic to any SQL database backend that supports common SQL and vector search, with customizable distance function composer.\n\n### Motivation\n\nHello from [MyScale](https://myscale.com) AI team! \ud83d\ude0a\ud83d\udc4b\r\n\r\nWe have been working on features to fill up the gap among SQL, vector search and LLM applications. Some inspiring works like self-query retrievers for VectorStores (for example [Weaviate](https://python.langchain.com/en/latest/modules/indexes/retrievers/examples/weaviate_self_query.html) and [others](https://python.langchain.com/en/latest/modules/indexes/retrievers/examples/self_query.html)) really turn those vector search databases into a powerful knowledge base! \ud83d\ude80\ud83d\ude80\r\n\r\nWe are thinking if we can merge all in one, like SQL and vector search and LLMChains, making this SQL vector database memory as the only source of your data. Here are some benefits we can think of for now, maybe you have more \ud83d\udc40:\r\n\r\n1. With ALL data you have: since you store all your pasta in the database, you don't need to worry about the foreign keys or links between names from other data source. \r\n2. Flexible data structure: Even if you have changed your schema, for example added a table, the LLM will know how to `JOIN` those tables and use those as filters.\r\n3. SQL compatibility: We found that vector databases that supports SQL in the marketplace have similar interfaces, which means you can change your backend with no pain, just change the name of the distance function in your DB solution and you are ready to go! \r\n\r\nWe would like to consider PGVector and MyScale for now, but if you want more, just comment below and we will push hard to ship it! \ud83c\udfc3\ud83c\udfc3\n\n### Your contribution\n\nA PR contains the VectorSQLChain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5122/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5122/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5121",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5121/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5121/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5121/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5121",
        "id": 1721388198,
        "node_id": "I_kwDOIPDwls5mmkym",
        "number": 5121,
        "title": "How to use SQL Database chain with an opensource LLM?",
        "user": {
            "login": "hussnainahmed",
            "id": 3829325,
            "node_id": "MDQ6VXNlcjM4MjkzMjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3829325?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hussnainahmed",
            "html_url": "https://github.com/hussnainahmed",
            "followers_url": "https://api.github.com/users/hussnainahmed/followers",
            "following_url": "https://api.github.com/users/hussnainahmed/following{/other_user}",
            "gists_url": "https://api.github.com/users/hussnainahmed/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hussnainahmed/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hussnainahmed/subscriptions",
            "organizations_url": "https://api.github.com/users/hussnainahmed/orgs",
            "repos_url": "https://api.github.com/users/hussnainahmed/repos",
            "events_url": "https://api.github.com/users/hussnainahmed/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hussnainahmed/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-23T07:16:07Z",
        "updated_at": "2023-10-30T16:06:53Z",
        "closed_at": "2023-10-30T16:06:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI have been trying to use SQL Database Chain with open-source LLM but have not succeeded.\r\n`from langchain import HuggingFaceHub`\r\n`repo_id = \"google/flan-t5-xl\"`\r\n`db = SQLDatabase.from_uri(db_url)`\r\n`llm = HuggingFaceHub(repo_id=repo_id)`\r\n`db_chain = SQLDatabaseSequentialChain.from_llm(llm, db, verbose=True)`\r\n\r\nPlease help. Refer to any examples available online.\r\nI have already tried gpt4all and llama.cpp\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5121/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5121/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5120",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5120/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5120/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5120/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5120",
        "id": 1721386368,
        "node_id": "PR_kwDOIPDwls5RHC6w",
        "number": 5120,
        "title": "Update neo4j_graph.py",
        "user": {
            "login": "crazyyanchao",
            "id": 19403898,
            "node_id": "MDQ6VXNlcjE5NDAzODk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/19403898?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crazyyanchao",
            "html_url": "https://github.com/crazyyanchao",
            "followers_url": "https://api.github.com/users/crazyyanchao/followers",
            "following_url": "https://api.github.com/users/crazyyanchao/following{/other_user}",
            "gists_url": "https://api.github.com/users/crazyyanchao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crazyyanchao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crazyyanchao/subscriptions",
            "organizations_url": "https://api.github.com/users/crazyyanchao/orgs",
            "repos_url": "https://api.github.com/users/crazyyanchao/repos",
            "events_url": "https://api.github.com/users/crazyyanchao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crazyyanchao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-23T07:15:04Z",
        "updated_at": "2023-06-04T01:13:07Z",
        "closed_at": "2023-06-03T23:53:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5120",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5120",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5120.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5120.patch",
            "merged_at": "2023-06-03T23:53:18Z"
        },
        "body": "Remove the version dependencies of neo4j-driver.\r\n[neo4j-driver Test code of different versions.](https://github.com/crazyyanchao/langchain-crash-course/blob/main/tool-5/app.py)\r\n# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5120/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5120/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5119",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5119/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5119/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5119/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5119",
        "id": 1721317871,
        "node_id": "PR_kwDOIPDwls5RGzm2",
        "number": 5119,
        "title": "Added query parameters options",
        "user": {
            "login": "matteo-campana",
            "id": 65486667,
            "node_id": "MDQ6VXNlcjY1NDg2NjY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/65486667?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matteo-campana",
            "html_url": "https://github.com/matteo-campana",
            "followers_url": "https://api.github.com/users/matteo-campana/followers",
            "following_url": "https://api.github.com/users/matteo-campana/following{/other_user}",
            "gists_url": "https://api.github.com/users/matteo-campana/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matteo-campana/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matteo-campana/subscriptions",
            "organizations_url": "https://api.github.com/users/matteo-campana/orgs",
            "repos_url": "https://api.github.com/users/matteo-campana/repos",
            "events_url": "https://api.github.com/users/matteo-campana/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matteo-campana/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5463330795,
                "node_id": "LA_kwDOIPDwls8AAAABRaPP6w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20test",
                "name": "needs test",
                "color": "E99695",
                "default": false,
                "description": "PR needs to be updated with tests"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-23T06:38:13Z",
        "updated_at": "2023-11-07T04:24:50Z",
        "closed_at": "2023-11-07T04:24:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5119",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5119",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5119.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5119.patch",
            "merged_at": null
        },
        "body": "# AzureCognitiveSearchRetriever integration with parameter options\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\nThis allows us to specify the query parameters to incorporate into the search query, making it possible to perform all the operations documented in the Microsoft site https://learn.microsoft.com/en-us/rest/api/searchservice/search-documents. \r\n\r\nNow, to avoid retrieving the entire contents of our index, we can write snippets like this to return only the top 3 documents\r\n\r\n```python\r\n\r\nquery_parameters = {\r\n    \"top\" : 3\r\n}\r\n\r\nretriever = AzureCognitiveSearchRetriever(content_key=\"content\", query_parameters=query_parameters)\r\n\r\n```\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5119/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5119/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5118",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5118/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5118/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5118/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5118",
        "id": 1721233001,
        "node_id": "PR_kwDOIPDwls5RGgpm",
        "number": 5118,
        "title": "docs: fix minor typo + add wikipedia package installation part in human_input_llm.ipynb",
        "user": {
            "login": "amicus-veritatis",
            "id": 81076998,
            "node_id": "MDQ6VXNlcjgxMDc2OTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/81076998?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amicus-veritatis",
            "html_url": "https://github.com/amicus-veritatis",
            "followers_url": "https://api.github.com/users/amicus-veritatis/followers",
            "following_url": "https://api.github.com/users/amicus-veritatis/following{/other_user}",
            "gists_url": "https://api.github.com/users/amicus-veritatis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amicus-veritatis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amicus-veritatis/subscriptions",
            "organizations_url": "https://api.github.com/users/amicus-veritatis/orgs",
            "repos_url": "https://api.github.com/users/amicus-veritatis/repos",
            "events_url": "https://api.github.com/users/amicus-veritatis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amicus-veritatis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-23T05:43:13Z",
        "updated_at": "2023-05-23T17:59:30Z",
        "closed_at": "2023-05-23T17:59:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5118",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5118",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5118.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5118.patch",
            "merged_at": "2023-05-23T17:59:30Z"
        },
        "body": "# Fix typo + add wikipedia package installation part in human_input_llm.ipynb\r\nThis PR\r\n1. Fixes typo (\"the the human input LLM\"), \r\n2. Addes wikipedia package installation part (in accordance with `WikipediaQueryRun` [documentation](https://python.langchain.com/en/latest/modules/agents/tools/examples/wikipedia.html))\r\n\r\nin `human_input_llm.ipynb` (`docs/modules/models/llms/examples/human_input_llm.ipynb`)\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@hwchase17\r\n@agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5118/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5118/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5116",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5116/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5116/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5116/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5116",
        "id": 1721174060,
        "node_id": "PR_kwDOIPDwls5RGTbs",
        "number": 5116,
        "title": "docs: `modules` pages simplified",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T04:56:19Z",
        "updated_at": "2023-06-04T01:42:40Z",
        "closed_at": "2023-06-03T21:44:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5116",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5116",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5116.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5116.patch",
            "merged_at": "2023-06-03T21:44:33Z"
        },
        "body": "# docs: modules pages simplified\r\n\r\nFixed #5627  issue\r\n\r\nMerged several repetitive sections in the `modules` pages. Some texts, that were hard to understand, were also simplified.\r\n\r\n\r\n## Who can review?\r\n\r\n@hwchase17\r\n@dev2049\r\n  ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5116/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5116/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5115",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5115/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5115/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5115/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5115",
        "id": 1721121364,
        "node_id": "PR_kwDOIPDwls5RGHxX",
        "number": 5115,
        "title": "Add link to Psychic from document loaders documentation page",
        "user": {
            "login": "Ayan-Bandyopadhyay",
            "id": 13636019,
            "node_id": "MDQ6VXNlcjEzNjM2MDE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13636019?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ayan-Bandyopadhyay",
            "html_url": "https://github.com/Ayan-Bandyopadhyay",
            "followers_url": "https://api.github.com/users/Ayan-Bandyopadhyay/followers",
            "following_url": "https://api.github.com/users/Ayan-Bandyopadhyay/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ayan-Bandyopadhyay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ayan-Bandyopadhyay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ayan-Bandyopadhyay/subscriptions",
            "organizations_url": "https://api.github.com/users/Ayan-Bandyopadhyay/orgs",
            "repos_url": "https://api.github.com/users/Ayan-Bandyopadhyay/repos",
            "events_url": "https://api.github.com/users/Ayan-Bandyopadhyay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ayan-Bandyopadhyay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T04:02:16Z",
        "updated_at": "2023-05-23T13:47:23Z",
        "closed_at": "2023-05-23T13:47:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5115",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5115",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5115.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5115.patch",
            "merged_at": "2023-05-23T13:47:23Z"
        },
        "body": "# Add link to Psychic from document loaders documentation page\r\n\r\nIn my previous PR I forgot to update `document_loaders.rst` to link to `psychic.ipynb` to make it discoverable from the main documentation.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5115/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5115/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5114",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5114/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5114/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5114/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5114",
        "id": 1721107761,
        "node_id": "PR_kwDOIPDwls5RGEu0",
        "number": 5114,
        "title": "tfidf retriever",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T03:49:26Z",
        "updated_at": "2023-05-24T17:02:11Z",
        "closed_at": "2023-05-24T17:02:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5114",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5114",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5114.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5114.patch",
            "merged_at": "2023-05-24T17:02:10Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5114/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5114/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5113",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5113/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5113/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5113/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5113",
        "id": 1721040284,
        "node_id": "I_kwDOIPDwls5mlP2c",
        "number": 5113,
        "title": "import langchain with python<=3.9 fails",
        "user": {
            "login": "tand826",
            "id": 34576611,
            "node_id": "MDQ6VXNlcjM0NTc2NjEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/34576611?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tand826",
            "html_url": "https://github.com/tand826",
            "followers_url": "https://api.github.com/users/tand826/followers",
            "following_url": "https://api.github.com/users/tand826/following{/other_user}",
            "gists_url": "https://api.github.com/users/tand826/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tand826/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tand826/subscriptions",
            "organizations_url": "https://api.github.com/users/tand826/orgs",
            "repos_url": "https://api.github.com/users/tand826/repos",
            "events_url": "https://api.github.com/users/tand826/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tand826/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 30,
        "created_at": "2023-05-23T02:38:48Z",
        "updated_at": "2023-07-11T18:41:07Z",
        "closed_at": "2023-05-24T04:43:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n- platform\r\n```\r\n$ cat /etc/os-release \r\nNAME=\"Ubuntu\"\r\nVERSION=\"20.04.6 LTS (Focal Fossa)\"\r\nID=ubuntu\r\nID_LIKE=debian\r\nPRETTY_NAME=\"Ubuntu 20.04.6 LTS\"\r\nVERSION_ID=\"20.04\"\r\nHOME_URL=\"https://www.ubuntu.com/\"\r\nSUPPORT_URL=\"https://help.ubuntu.com/\"\r\nBUG_REPORT_URL=\"https://bugs.launchpad.net/ubuntu/\"\r\nPRIVACY_POLICY_URL=\"https://www.ubuntu.com/legal/terms-and-policies/privacy-policy\"\r\nVERSION_CODENAME=focal\r\nUBUNTU_CODENAME=focal\r\n```\r\n\r\n- python\r\n```\r\n$ python -V\r\nPython 3.9.7\r\n\r\n# installed with\r\nasdf install python 3.9.7\r\n```\r\n\r\n- problematic dependency (updated after [this comment](https://github.com/hwchase17/langchain/issues/5113#issuecomment-1558493486))\r\n```\r\n# this was updated today.\r\ntyping_extensions==4.6.0\r\n```\r\n\r\n- dependencies\r\n```\r\nlangchain==0.0.177\r\nopenapi-schema-pydantic==1.2.4\r\npydantic==1.10.7\r\n```\r\n\r\n<details>\r\n<summary>all the dependencies</summary>\r\n\r\n```\r\n$ pip install langchain\r\nCollecting langchain\r\n  Using cached langchain-0.0.177-py3-none-any.whl (877 kB)\r\nCollecting PyYAML>=5.4.1\r\n  Using cached PyYAML-6.0-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_12_x86_64.manylinux2010_x86_64.whl (661 kB)\r\nCollecting openapi-schema-pydantic<2.0,>=1.2\r\n  Using cached openapi_schema_pydantic-1.2.4-py3-none-any.whl (90 kB)\r\nCollecting requests<3,>=2\r\n  Using cached requests-2.31.0-py3-none-any.whl (62 kB)\r\nCollecting SQLAlchemy<3,>=1.4\r\n  Using cached SQLAlchemy-2.0.15-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (2.7 MB)\r\nCollecting aiohttp<4.0.0,>=3.8.3\r\n  Using cached aiohttp-3.8.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (1.0 MB)\r\nCollecting dataclasses-json<0.6.0,>=0.5.7\r\n  Using cached dataclasses_json-0.5.7-py3-none-any.whl (25 kB)\r\nCollecting async-timeout<5.0.0,>=4.0.0\r\n  Using cached async_timeout-4.0.2-py3-none-any.whl (5.8 kB)\r\nCollecting numexpr<3.0.0,>=2.8.4\r\n  Using cached numexpr-2.8.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (380 kB)\r\nCollecting pydantic<2,>=1\r\n  Using cached pydantic-1.10.7-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (3.2 MB)\r\nCollecting numpy<2,>=1\r\n  Using cached numpy-1.24.3-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (17.3 MB)\r\nCollecting tenacity<9.0.0,>=8.1.0\r\n  Using cached tenacity-8.2.2-py3-none-any.whl (24 kB)\r\nCollecting multidict<7.0,>=4.5\r\n  Using cached multidict-6.0.4-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (114 kB)\r\nCollecting attrs>=17.3.0\r\n  Using cached attrs-23.1.0-py3-none-any.whl (61 kB)\r\nCollecting charset-normalizer<4.0,>=2.0\r\n  Using cached charset_normalizer-3.1.0-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (199 kB)\r\nCollecting yarl<2.0,>=1.0\r\n  Using cached yarl-1.9.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (269 kB)\r\nCollecting frozenlist>=1.1.1\r\n  Using cached frozenlist-1.3.3-cp39-cp39-manylinux_2_5_x86_64.manylinux1_x86_64.manylinux_2_17_x86_64.manylinux2014_x86_64.whl (158 kB)\r\nCollecting aiosignal>=1.1.2\r\n  Using cached aiosignal-1.3.1-py3-none-any.whl (7.6 kB)\r\nCollecting typing-inspect>=0.4.0\r\n  Using cached typing_inspect-0.8.0-py3-none-any.whl (8.7 kB)\r\nCollecting marshmallow<4.0.0,>=3.3.0\r\n  Using cached marshmallow-3.19.0-py3-none-any.whl (49 kB)\r\nCollecting marshmallow-enum<2.0.0,>=1.5.1\r\n  Using cached marshmallow_enum-1.5.1-py2.py3-none-any.whl (4.2 kB)\r\nCollecting packaging>=17.0\r\n  Using cached packaging-23.1-py3-none-any.whl (48 kB)\r\nCollecting typing-extensions>=4.2.0\r\n  Using cached typing_extensions-4.6.0-py3-none-any.whl (30 kB)\r\nCollecting idna<4,>=2.5\r\n  Using cached idna-3.4-py3-none-any.whl (61 kB)\r\nCollecting urllib3<3,>=1.21.1\r\n  Using cached urllib3-2.0.2-py3-none-any.whl (123 kB)\r\nCollecting certifi>=2017.4.17\r\n  Using cached certifi-2023.5.7-py3-none-any.whl (156 kB)\r\nCollecting greenlet!=0.4.17\r\n  Using cached greenlet-2.0.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (610 kB)\r\nCollecting mypy-extensions>=0.3.0\r\n  Using cached mypy_extensions-1.0.0-py3-none-any.whl (4.7 kB)\r\nInstalling collected packages: packaging, typing-extensions, mypy-extensions, multidict, marshmallow, idna, frozenlist, yarl, urllib3, typing-inspect, pydantic, numpy, marshmallow-enum, greenlet, charset-normalizer, certifi, attrs, async-timeout, aiosignal, tenacity, SQLAlchemy, requests, PyYAML, openapi-schema-pydantic, numexpr, dataclasses-json, aiohttp, langchain\r\nSuccessfully installed PyYAML-6.0 SQLAlchemy-2.0.15 aiohttp-3.8.4 aiosignal-1.3.1 async-timeout-4.0.2 attrs-23.1.0 certifi-2023.5.7 charset-normalizer-3.1.0 dataclasses-json-0.5.7 frozenlist-1.3.3 greenlet-2.0.2 idna-3.4 langchain-0.0.177 marshmallow-3.19.0 marshmallow-enum-1.5.1 multidict-6.0.4 mypy-extensions-1.0.0 numexpr-2.8.4 numpy-1.24.3 openapi-schema-pydantic-1.2.4 packaging-23.1 pydantic-1.10.7 requests-2.31.0 tenacity-8.2.2 typing-extensions-4.6.0 typing-inspect-0.8.0 urllib3-2.0.2 yarl-1.9.2\r\n```\r\n\r\n</details>\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @agola11 \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. install python==3.9.7 or 3.9.8 or 3.9.9 (with asdf or docker. I didn't checked the other versions.)\r\n2. install langchain `pip install langchain`\r\n3. see the error\r\n```\r\nPython 3.9.7 (default, May 23 2023, 11:05:54) \r\n[GCC 9.4.0] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import langchain\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/__init__.py\", line 6, in <module>\r\n    from langchain.agents import MRKLChain, ReActChain, SelfAskWithSearchChain\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/agents/__init__.py\", line 2, in <module>\r\n    from langchain.agents.agent import (\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/agents/agent.py\", line 16, in <module>\r\n    from langchain.agents.tools import InvalidTool\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/agents/tools.py\", line 8, in <module>\r\n    from langchain.tools.base import BaseTool, Tool, tool\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/tools/__init__.py\", line 42, in <module>\r\n    from langchain.tools.vectorstore.tool import (\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/tools/vectorstore/tool.py\", line 13, in <module>\r\n    from langchain.chains import RetrievalQA, RetrievalQAWithSourcesChain\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/chains/__init__.py\", line 2, in <module>\r\n    from langchain.chains.api.base import APIChain\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/chains/api/base.py\", line 13, in <module>\r\n    from langchain.chains.api.prompt import API_RESPONSE_PROMPT, API_URL_PROMPT\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/chains/api/prompt.py\", line 2, in <module>\r\n    from langchain.prompts.prompt import PromptTemplate\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/prompts/__init__.py\", line 3, in <module>\r\n    from langchain.prompts.chat import (\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/prompts/chat.py\", line 10, in <module>\r\n    from langchain.memory.buffer import get_buffer_string\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/memory/__init__.py\", line 28, in <module>\r\n    from langchain.memory.vectorstore import VectorStoreRetrieverMemory\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/memory/vectorstore.py\", line 10, in <module>\r\n    from langchain.vectorstores.base import VectorStoreRetriever\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/vectorstores/__init__.py\", line 2, in <module>\r\n    from langchain.vectorstores.analyticdb import AnalyticDB\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/vectorstores/analyticdb.py\", line 16, in <module>\r\n    from langchain.embeddings.base import Embeddings\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/embeddings/__init__.py\", line 19, in <module>\r\n    from langchain.embeddings.openai import OpenAIEmbeddings\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/site-packages/langchain/embeddings/openai.py\", line 67, in <module>\r\n    class OpenAIEmbeddings(BaseModel, Embeddings):\r\n  File \"pydantic/main.py\", line 197, in pydantic.main.ModelMetaclass.__new__\r\n  File \"pydantic/fields.py\", line 506, in pydantic.fields.ModelField.infer\r\n  File \"pydantic/fields.py\", line 436, in pydantic.fields.ModelField.__init__\r\n  File \"pydantic/fields.py\", line 552, in pydantic.fields.ModelField.prepare\r\n  File \"pydantic/fields.py\", line 663, in pydantic.fields.ModelField._type_analysis\r\n  File \"pydantic/fields.py\", line 808, in pydantic.fields.ModelField._create_sub_type\r\n  File \"pydantic/fields.py\", line 436, in pydantic.fields.ModelField.__init__\r\n  File \"pydantic/fields.py\", line 552, in pydantic.fields.ModelField.prepare\r\n  File \"pydantic/fields.py\", line 668, in pydantic.fields.ModelField._type_analysis\r\n  File \"/home/takumi/.asdf/installs/python/3.9.7/lib/python3.9/typing.py\", line 847, in __subclasscheck__\r\n    return issubclass(cls, self.__origin__)\r\nTypeError: issubclass() arg 1 must be a class\r\n>>>\r\n```\r\n\r\n<details>\r\n<summary>with docker</summary>\r\n\r\n```\r\n$ docker run -it python:3.9.7-bullseye bash\r\n$ pip install langchain\r\n$ python -c \"import langchain\"\r\n```\r\n\r\n</details>\r\n\r\n### Expected behavior\r\n\r\n```\r\nPython 3.10.1 (main, Dec 21 2021, 09:01:08) [GCC 10.2.1 20210110] on linux\r\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\r\n>>> import langchain\r\n>>>\r\n```\r\n\r\n- what to do?\r\n    - ~change [python dependency](https://github.com/hwchase17/langchain/blob/master/pyproject.toml#LL15C24-L15C24) to 3.10 or later~\r\n    - fix the version of typing_extensions to 4.5.0 or change the relevant code.\r\n\r\n- Thank you for checking out this issue. If there are anything more to check, I would be glad to help.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5113/reactions",
            "total_count": 10,
            "+1": 10,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5113/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5112",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5112/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5112/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5112/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5112",
        "id": 1721028735,
        "node_id": "I_kwDOIPDwls5mlNB_",
        "number": 5112,
        "title": "MyCustomHandler documentation example not working",
        "user": {
            "login": "saltchicken",
            "id": 3859906,
            "node_id": "MDQ6VXNlcjM4NTk5MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3859906?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saltchicken",
            "html_url": "https://github.com/saltchicken",
            "followers_url": "https://api.github.com/users/saltchicken/followers",
            "following_url": "https://api.github.com/users/saltchicken/following{/other_user}",
            "gists_url": "https://api.github.com/users/saltchicken/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saltchicken/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saltchicken/subscriptions",
            "organizations_url": "https://api.github.com/users/saltchicken/orgs",
            "repos_url": "https://api.github.com/users/saltchicken/repos",
            "events_url": "https://api.github.com/users/saltchicken/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saltchicken/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-23T02:22:56Z",
        "updated_at": "2023-10-21T06:32:13Z",
        "closed_at": "2023-05-28T21:42:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain 0.0.177\r\nPython 3.10.9\r\nWindows 10\r\n\r\n### Who can help?\r\n\r\n@agola11\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [X] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nCopied directly from https://python.langchain.com/en/latest/modules/callbacks/getting_started.html 'Creating a Custom Handler'\r\n```\r\nfrom langchain.callbacks.base import BaseCallbackHandler\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.schema import HumanMessage\r\n\r\nclass MyCustomHandler(BaseCallbackHandler):\r\n    def on_llm_new_token(self, token: str, **kwargs) -> None:\r\n        print(f\"My custom handler, token: {token}\")\r\n\r\n# To enable streaming, we pass in `streaming=True` to the ChatModel constructor\r\n# Additionally, we pass in a list with our custom handler\r\nchat = ChatOpenAI(max_tokens=25, streaming=True, callbacks=[MyCustomHandler()])\r\n\r\nchat([HumanMessage(content=\"Tell me a joke\")])\r\n```\r\n### Expected behavior\r\n\r\nExpected Behavior:\r\nMy custom handler, token: \r\nMy custom handler, token: Why\r\nMy custom handler, token:  did\r\nMy custom handler, token:  the\r\nMy custom handler, token:  tomato\r\nMy custom handler, token:  turn\r\nMy custom handler, token:  red\r\nMy custom handler, token: ?\r\nMy custom handler, token:  Because\r\nMy custom handler, token:  it\r\nMy custom handler, token:  saw\r\nMy custom handler, token:  the\r\nMy custom handler, token:  salad\r\nMy custom handler, token:  dressing\r\nMy custom handler, token: !\r\nMy custom handler, token: \r\n\r\nAIMessage(content='Why did the tomato turn red? Because it saw the salad dressing!', additional_kwargs={})\r\n\r\nError:\r\nTypeError: Can't instantiate abstract class MyCustomHandler with abstract methods on_agent_action, on_agent_finish, on_chain_end, on_chain_error, on_chain_start, on_llm_end, on_llm_error, on_llm_start, on_text, on_tool_end, on_tool_error, on_tool_start",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5112/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5112/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5111",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5111/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5111/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5111/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5111",
        "id": 1720989519,
        "node_id": "PR_kwDOIPDwls5RFq9h",
        "number": 5111,
        "title": "Improve effeciency of TextSplitter.split_documents, iterate once",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-23T01:43:35Z",
        "updated_at": "2023-05-23T03:00:25Z",
        "closed_at": "2023-05-23T03:00:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5111",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5111",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5111.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5111.patch",
            "merged_at": "2023-05-23T03:00:24Z"
        },
        "body": "# Improve TextSplitter.split_documents, collect page_content and metadata in one iteration\n\n## Who can review?\n\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\n\n@eyurtsev In the case where documents is a generator that can only be iterated once making this change is a huge help. Otherwise a silent issue happens where metadata is empty for all documents when documents is a generator. So we expand the argument from `List[Document]` to `Union[Iterable[Document], Sequence[Document]]`\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5111/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5111/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5110",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5110/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5110/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5110/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5110",
        "id": 1720977259,
        "node_id": "PR_kwDOIPDwls5RFoTT",
        "number": 5110,
        "title": "Add from_string to PromptTemplate",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-23T01:29:30Z",
        "updated_at": "2023-06-03T21:45:47Z",
        "closed_at": "2023-06-03T21:45:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5110",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5110",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5110.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5110.patch",
            "merged_at": null
        },
        "body": "# Add from_string to PromptTemplate\n\nThis PR adds documentation to PromptTemplate with some examples of how to instantiate the PromptTemplate.\n\nThis PR proposes adding a from_string method to make the method easier to discover and use with partial variables.\n\nI understand that we may be opposed to `from_string` to keep number of on-ramps low. One argument for is that\nthere won't be many templating languages, so it may make more sense to make the\ncommon use case as easy as possible to discover and use.\n\n## Before submitting\n\n## Who can review?\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5110/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5110/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5109",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5109/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5109/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5109/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5109",
        "id": 1720955939,
        "node_id": "I_kwDOIPDwls5mk7Qj",
        "number": 5109,
        "title": "AzureOpenAI Repeat words ",
        "user": {
            "login": "lingfengchencn",
            "id": 2757011,
            "node_id": "MDQ6VXNlcjI3NTcwMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2757011?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lingfengchencn",
            "html_url": "https://github.com/lingfengchencn",
            "followers_url": "https://api.github.com/users/lingfengchencn/followers",
            "following_url": "https://api.github.com/users/lingfengchencn/following{/other_user}",
            "gists_url": "https://api.github.com/users/lingfengchencn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lingfengchencn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lingfengchencn/subscriptions",
            "organizations_url": "https://api.github.com/users/lingfengchencn/orgs",
            "repos_url": "https://api.github.com/users/lingfengchencn/repos",
            "events_url": "https://api.github.com/users/lingfengchencn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lingfengchencn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-23T01:06:06Z",
        "updated_at": "2023-07-11T10:01:58Z",
        "closed_at": "2023-07-11T10:01:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n langchain 0.0.173\r\nPython 3.10.11\r\nopenai  0.27.6\n\n### Who can help?\n\n@hwchase17\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\nfrom dotenv import load_dotenv\r\nload_dotenv()\r\n```\r\n\r\n# user langchain llms\r\n```python\r\nfrom langchain.llms import AzureOpenAI\r\nllm = AzureOpenAI(temperature=0.1,deployment_name=\"gpt-35-turbo\",verbose=True)\r\n```\r\n```python\r\nllm(\"who are you?\")\r\n```\r\n\r\n```\r\n' what do you want? why are you here? what do you want to do? what do you want to achieve? what do you want to be? what do you want to have? what do you want to give? what do you want to receive? what do you want to learn? what do you want to teach? what do you want to know? what do you want to see? what do you want to feel? what do you want to experience? what do you want to share? what do you want to create? what do you want to manifest? what do you want to change? what do you want to transform? what do you want to heal? what do you want to release? what do you want to forgive? what do you want to let go of? what do you want to embrace? what do you want to accept? what do you want to surrender? what do you want to allow? what do you want to receive? what do you want to give? what do you want to do? what do you want to be? what do you want to have? what do you want to create? what do you want to manifest? what do you want to experience? what do you want to share? what do you want to learn'\r\n```\r\n\r\n```python\r\nllm(\"\u4f60\u662f\u8c01\uff1f\")\r\n```\r\n```\r\n'\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f\",\\n    \"\u4f60\u662f\u8c01\uff1f'\r\n\r\n```\r\n\r\n\r\n```python\r\nfrom langchain.llms import OpenAI\r\nllm_openai = OpenAI(engine=\"gpt-35-turbo\")\r\nllm_openai(\"who are you ?\")\r\n```\r\n```\r\n'\u201d \u201cI\u2019m the devil,\u201d said the Stranger. \u201cMy name is Legion.\u201d In that moment, everything changed. The heat of the sun was extinguished in an instant, replaced by an iciness that flowed from the Stranger\u2019s presence. The air itself seemed to grow thick and heavy, pressing down on me, as if I were drowning in molasses. My eyes were drawn back to the Stranger\u2019s face, but this time I saw more than just a man. I saw something darker, something that made my soul cry out in despair. I saw a demon. I felt my body begin to shake, my fingers trembling uncontrollably. My mind was screaming at me to run, to flee from this place as fast as I could, but my feet seemed rooted to the spot. The Stranger\u2019s smile grew wider, and it was all I could do to keep from screaming. \u201cI have a proposition for you,\u201d he said. \u201cI\u2019ve heard of your powers, and I\u2019m impressed. I think you could be a great asset to me.\u201d I tried to speak, but no sound came out. \u201cDon\u2019t be afraid,\u201d he said. \u201cI\u2019m not here to hurt you. I\u2019m here to offer you a deal. I can give you power'\r\n\r\n```\r\n\r\n# just use openai \r\n\r\n```python\r\nimport openai\r\nresponse = openai.ChatCompletion.create(\r\n    temperature=0.1,\r\n    engine=\"gpt-35-turbo\", # engine = \"deployment_name\".\r\n    messages=[\r\n       {\"role\": \"user\", \"content\": \"\"\"\r\n       who are you?\r\n       \"\"\"},    ]\r\n)\r\n\r\n# print(response)\r\nprint(response['choices'][0]['message']['content'])\r\n```\r\n```\r\nI am an AI language model created by OpenAI, designed to assist with various tasks such as answering questions, generating text, and providing information.\r\n```\r\n\n\n### Expected behavior\n\nis langchain make some settings when we call GPT??",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5109/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5109/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5108",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5108/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5108/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5108/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5108",
        "id": 1720940073,
        "node_id": "PR_kwDOIPDwls5RFgJ3",
        "number": 5108,
        "title": "Pass Dataset Name by Name not Position",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-23T00:54:01Z",
        "updated_at": "2023-05-23T01:21:40Z",
        "closed_at": "2023-05-23T01:21:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5108",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5108",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5108.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5108.patch",
            "merged_at": "2023-05-23T01:21:39Z"
        },
        "body": "Pass dataset name by name",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5108/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5108/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5107",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5107/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5107/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5107/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5107",
        "id": 1720839918,
        "node_id": "I_kwDOIPDwls5mke7u",
        "number": 5107,
        "title": "DOC: Aim docs contains code that doesn't run",
        "user": {
            "login": "chengyineng38",
            "id": 59850826,
            "node_id": "MDQ6VXNlcjU5ODUwODI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/59850826?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chengyineng38",
            "html_url": "https://github.com/chengyineng38",
            "followers_url": "https://api.github.com/users/chengyineng38/followers",
            "following_url": "https://api.github.com/users/chengyineng38/following{/other_user}",
            "gists_url": "https://api.github.com/users/chengyineng38/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chengyineng38/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chengyineng38/subscriptions",
            "organizations_url": "https://api.github.com/users/chengyineng38/orgs",
            "repos_url": "https://api.github.com/users/chengyineng38/repos",
            "events_url": "https://api.github.com/users/chengyineng38/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chengyineng38/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-22T23:51:58Z",
        "updated_at": "2023-09-10T16:13:45Z",
        "closed_at": "2023-09-10T16:13:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nLink: https://python.langchain.com/en/latest/integrations/aim_tracking.html \r\n\r\nBelow is the section that contains problematic code. \r\n<img width=\"910\" alt=\"Screenshot 2023-05-22 at 4 42 10 PM\" src=\"https://github.com/hwchase17/langchain/assets/59850826/eb988031-4167-4a6c-a77f-9a0f25d2a736\">\r\n\r\n<br> \r\n\r\nThe document doesn't include library versions. I'm using `langchain==0.0.152`. \r\nWhen I used `callbacks=callbacks`, this was my error:\r\n<img width=\"592\" alt=\"Screenshot 2023-05-22 at 4 42 37 PM\" src=\"https://github.com/hwchase17/langchain/assets/59850826/6a3a46d5-cb43-4e88-be0e-a767d82064cd\">\r\n\r\n\r\nWhen I changed it to using `model_kwargs`, I got another error\r\n\r\n<img width=\"430\" alt=\"Screenshot 2023-05-22 at 4 43 41 PM\" src=\"https://github.com/hwchase17/langchain/assets/59850826/e1ae42ee-1eac-4517-839f-224bfc507831\">\r\n\r\nIt's unclear what key-value pairs `model_kwargs` is expecting. LangChain `callbacks` [docs](https://python.langchain.com/en/latest/modules/callbacks/getting_started.html) still use `callbacks=` throughout, rather than `model_kwargs` \r\n\n\n### Idea or request for content:\n\nPlease either provide a working example of Aim+LangChain code or update the `callbacks` document if `callbacks` is indeed not relevant anymore. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5107/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5107/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5106",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5106/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5106/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5106/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5106",
        "id": 1720725272,
        "node_id": "PR_kwDOIPDwls5REuuY",
        "number": 5106,
        "title": "RFC: Embedding -> EmbeddingModel",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5533576383,
                "node_id": "LA_kwDOIPDwls8AAAABSdOsvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/refactor",
                "name": "refactor",
                "color": "81CB55",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-22T22:37:08Z",
        "updated_at": "2023-08-10T00:25:48Z",
        "closed_at": "2023-08-10T00:25:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5106",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5106",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5106.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5106.patch",
            "merged_at": null
        },
        "body": "Embeddings sounds like the output of an embedding model, not an embedding model itself \ud83c\udf1d ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5106/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5106/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5105",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5105/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5105/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5105/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5105",
        "id": 1720596854,
        "node_id": "I_kwDOIPDwls5mjjl2",
        "number": 5105,
        "title": "DOC: client required but not in example code",
        "user": {
            "login": "matt-erhart",
            "id": 3199847,
            "node_id": "MDQ6VXNlcjMxOTk4NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3199847?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matt-erhart",
            "html_url": "https://github.com/matt-erhart",
            "followers_url": "https://api.github.com/users/matt-erhart/followers",
            "following_url": "https://api.github.com/users/matt-erhart/following{/other_user}",
            "gists_url": "https://api.github.com/users/matt-erhart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matt-erhart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matt-erhart/subscriptions",
            "organizations_url": "https://api.github.com/users/matt-erhart/orgs",
            "repos_url": "https://api.github.com/users/matt-erhart/repos",
            "events_url": "https://api.github.com/users/matt-erhart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matt-erhart/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-22T21:35:22Z",
        "updated_at": "2023-09-23T16:06:00Z",
        "closed_at": "2023-09-23T16:06:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nWhat the docs show:\r\n```python\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nembeddings = OpenAIEmbeddings(deployment=\"your-embeddings-deployment-name\")\r\n```\r\n\r\nBut client is required, so you need \r\n```python\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nimport openai\r\nembeddings = OpenAIEmbeddings(deployment=\"your-embeddings-deployment-name\",client=openai.Embedding())\r\n```\r\n\r\nSimilar situation for the docs \r\n```python\r\nmodel = AzureChatOpenAI(\r\n    openai_api_base=BASE_URL,\r\n    openai_api_version=\"2023-03-15-preview\",\r\n    deployment_name=DEPLOYMENT_NAME,\r\n    openai_api_key=API_KEY,\r\n    openai_api_type = \"azure\",\r\n)\r\n```\r\n\r\nWhen I really needed \r\n```python\r\nmodel = AzureChatOpenAI(\r\n    deployment_name=\"deployment-name\", client=openai.ChatCompletion()\r\n)\r\n```\r\nMight also be better (maybe the docs writer expected) that AzureChatOpenAI client default to openai.ChatCompletion() and OpenAIEmbeddings default client to be openai.Embedding(). \r\n\r\n\r\n### Idea or request for content:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5105/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5105/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5104",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5104/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5104/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5104/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5104",
        "id": 1720575898,
        "node_id": "I_kwDOIPDwls5mjeea",
        "number": 5104,
        "title": "GoogleDriveLoader seems to be pulling trashed documents from the folder",
        "user": {
            "login": "acetinick",
            "id": 571649,
            "node_id": "MDQ6VXNlcjU3MTY0OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/571649?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/acetinick",
            "html_url": "https://github.com/acetinick",
            "followers_url": "https://api.github.com/users/acetinick/followers",
            "following_url": "https://api.github.com/users/acetinick/following{/other_user}",
            "gists_url": "https://api.github.com/users/acetinick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/acetinick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/acetinick/subscriptions",
            "organizations_url": "https://api.github.com/users/acetinick/orgs",
            "repos_url": "https://api.github.com/users/acetinick/repos",
            "events_url": "https://api.github.com/users/acetinick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/acetinick/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-22T21:21:14Z",
        "updated_at": "2023-05-25T05:26:19Z",
        "closed_at": "2023-05-25T05:26:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nHi\r\n\r\ntesting this loader, it looks as tho this is pulling trashed files from folders.  I think this should be default to false if anything and be an opt in.\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n\r\n### Related Components\r\n\r\n- [X] Document Loaders\r\n### Reproduction\r\n\r\nuse GoogleDriveLoader\r\n\r\n1. point to folder\r\n2. move a file to trash in folder\r\n\r\nReindex\r\n\r\nFile still can be searched in vector store.\r\n\r\n### Expected behavior\r\n\r\nShould not be searchable",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5104/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5104/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5103",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5103/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5103/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5103/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5103",
        "id": 1720573155,
        "node_id": "PR_kwDOIPDwls5RELfS",
        "number": 5103,
        "title": "changed ValueError to ImportError",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-22T21:19:00Z",
        "updated_at": "2023-05-22T22:40:38Z",
        "closed_at": "2023-05-22T22:24:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5103",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5103",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5103.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5103.patch",
            "merged_at": "2023-05-22T22:24:45Z"
        },
        "body": "# changed ValueError to ImportError\r\n\r\nCode cleaning.\r\nFixed inconsistencies in ImportError handling. Sometimes it raises ImportError and sometime ValueError.\r\nI've changed all cases to the `raise ImportError`\r\nAlso:\r\n- added installation instruction in the error message, where it missed;\r\n- fixed several installation instructions in the error message;\r\n- fixed several error handling in regards to the ImportError\r\n\r\n\r\n\r\n## Who can review?\r\n\r\n@hwchase17 \r\n@dev2049\r\n        \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5103/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5103/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5102",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5102/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5102/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5102/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5102",
        "id": 1720528582,
        "node_id": "PR_kwDOIPDwls5REBV-",
        "number": 5102,
        "title": "RFC: embed_documents->embed_texts",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5483526101,
                "node_id": "LA_kwDOIPDwls8AAAABRtf31Q",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/breaking",
                "name": "breaking",
                "color": "B60205",
                "default": false,
                "description": "Breaking change"
            },
            {
                "id": 5533576383,
                "node_id": "LA_kwDOIPDwls8AAAABSdOsvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/refactor",
                "name": "refactor",
                "color": "81CB55",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-22T20:58:57Z",
        "updated_at": "2023-08-11T00:12:51Z",
        "closed_at": "2023-08-11T00:12:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5102",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5102",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5102.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5102.patch",
            "merged_at": null
        },
        "body": "documents refers to Document objects everywhere else (the arg name here is even `texts`)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5102/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5102/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5101",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5101/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5101/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5101/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5101",
        "id": 1720323117,
        "node_id": "PR_kwDOIPDwls5RDTB4",
        "number": 5101,
        "title": "Fixed import error for AutoGPT e.g. from langchain.experimental.auton\u2026",
        "user": {
            "login": "ankitarya1019",
            "id": 53930292,
            "node_id": "MDQ6VXNlcjUzOTMwMjky",
            "avatar_url": "https://avatars.githubusercontent.com/u/53930292?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ankitarya1019",
            "html_url": "https://github.com/ankitarya1019",
            "followers_url": "https://api.github.com/users/ankitarya1019/followers",
            "following_url": "https://api.github.com/users/ankitarya1019/following{/other_user}",
            "gists_url": "https://api.github.com/users/ankitarya1019/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ankitarya1019/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ankitarya1019/subscriptions",
            "organizations_url": "https://api.github.com/users/ankitarya1019/orgs",
            "repos_url": "https://api.github.com/users/ankitarya1019/repos",
            "events_url": "https://api.github.com/users/ankitarya1019/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ankitarya1019/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-22T19:20:03Z",
        "updated_at": "2023-05-23T00:22:32Z",
        "closed_at": "2023-05-22T20:26:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5101",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5101",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5101.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5101.patch",
            "merged_at": "2023-05-22T20:26:25Z"
        },
        "body": "\u2026omous_agents import AutoGPT\r\n\r\n# Fix: AutoGPT import statement error in autonomous_agents marathon times notebook\r\n\r\n`from langchain.experimental.autonomous_agents.autogpt.agent import AutoGPT` results in an import error as AutoGPT is not defined in the __init__.py file\r\nhttps://python.langchain.com/en/latest/use_cases/autonomous_agents/marathon_times.html\r\n\r\nAn Alternate, way would be to be directly update the import statement to be `from langchain.experimental import AutoGPT`\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5101/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5101/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5100",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5100/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5100/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5100/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5100",
        "id": 1720083619,
        "node_id": "I_kwDOIPDwls5mhmSj",
        "number": 5100,
        "title": "psycopg2.errors.AmbiguousColumn exception when using SQLDatabaseChain",
        "user": {
            "login": "alonroth",
            "id": 3149539,
            "node_id": "MDQ6VXNlcjMxNDk1Mzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3149539?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alonroth",
            "html_url": "https://github.com/alonroth",
            "followers_url": "https://api.github.com/users/alonroth/followers",
            "following_url": "https://api.github.com/users/alonroth/following{/other_user}",
            "gists_url": "https://api.github.com/users/alonroth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alonroth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alonroth/subscriptions",
            "organizations_url": "https://api.github.com/users/alonroth/orgs",
            "repos_url": "https://api.github.com/users/alonroth/repos",
            "events_url": "https://api.github.com/users/alonroth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alonroth/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-22T17:05:51Z",
        "updated_at": "2023-10-20T07:27:37Z",
        "closed_at": "2023-10-06T16:08:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain Version: 0.0.175\r\nPlatform: macos\r\nPython version: 3.9\r\nDatabase: Postgres\n\n### Who can help?\n\n@vowelparrot @agola11 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce:\r\n1. Let's say we have two tables `users` & `profiles` and they are both have a column named `tags`.\r\n2. SQLDatabaseChain produce the following query:\r\n`SELECT \"first_name\", \"last_name\", \"tags\" FROM users INNER JOIN profiles ON users.id=profiles.user_id`\r\n3. This generates the following exception:\r\n`ProgrammingError('(psycopg2.errors.AmbiguousColumn) column reference \"tags\" is ambiguous\r\nLINE 1: SELECT \"first_name\", \"last_name\", \"tags\")`\n\n### Expected behavior\n\nI would expect it to produce the query with table name specified, at least for the columns who share the same name across these these two tables.\r\n\r\nI've tried to add enable use_query_checker but it didn't help. I also tried to add to the `QUERY_CHECKER` the following line:\r\n`- Adding the table name when referencing columns that are specified in multiple tables (i.e. ambiguous column names)` - it didn't help either",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5100/reactions",
            "total_count": 7,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5100/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5099",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5099/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5099/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5099/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5099",
        "id": 1720063351,
        "node_id": "I_kwDOIPDwls5mhhV3",
        "number": 5099,
        "title": "I am still struggling. It does not remember anything in the chat history. What am I doing wrong? Here is my code:",
        "user": {
            "login": "yysturdy",
            "id": 55789818,
            "node_id": "MDQ6VXNlcjU1Nzg5ODE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/55789818?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yysturdy",
            "html_url": "https://github.com/yysturdy",
            "followers_url": "https://api.github.com/users/yysturdy/followers",
            "following_url": "https://api.github.com/users/yysturdy/following{/other_user}",
            "gists_url": "https://api.github.com/users/yysturdy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yysturdy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yysturdy/subscriptions",
            "organizations_url": "https://api.github.com/users/yysturdy/orgs",
            "repos_url": "https://api.github.com/users/yysturdy/repos",
            "events_url": "https://api.github.com/users/yysturdy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yysturdy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-22T16:55:26Z",
        "updated_at": "2023-09-15T16:11:45Z",
        "closed_at": "2023-09-15T16:11:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "def load_chain():\r\n    global j\r\n    os.environ[\"OPENAI_API_KEY\"] =api_key[j%3]\r\n    print(api_key[j%3])\r\n    j=j+1\r\n   #global chain\r\n    print(\"\u6a21\u578b\u52a0\u8f7d\u5f00\u59cb\")\r\n    #loader = DirectoryLoader('./langchian_gpt/yuliaoku', glob='**/*.txt')\r\n    loader = DirectoryLoader('./yuliaoku', glob='**/*.txt')\r\n    docs = loader.load()\r\n    # \u6587\u6863\u5207\u5757\r\n    text_splitter = TokenTextSplitter(chunk_size=1000, chunk_overlap=0)\r\n    doc_texts = text_splitter.split_documents(docs)\r\n    # \u8c03\u7528openai Embeddings\r\n    embeddings = OpenAIEmbeddings(openai_api_key=os.environ[\"OPENAI_API_KEY\"])\r\n    # \u5411\u91cf\u5316\r\n    vectordb = Chroma.from_documents(doc_texts, embeddings)#\r\n     vectordb = Chroma.from_documents(doc_texts, embeddings, persist_directory=\"./yuliaoku\")\r\n    vectordb.persist()\r\n    ll=ChatOpenAI(temperature=0.3, model_name=\"gpt-3.5-turbo\", max_tokens=1024)\r\n    memory = ConversationBufferWindowMemory(memory_key=\"chat_history\",k=3, output_key='answer',return_messages=True)\r\n    # \u521b\u5efa\u804a\u5929\u673a\u5668\u4eba\u5bf9\u8c61chain\r\n    chain = ConversationalRetrievalChain.from_llm(\r\n        retriever=vectordb.as_retriever(search_type=\"similarity\",search_kwargs={\"k\": 1}),\r\n                                                  llm=ll\r\n                                                  verbose=True,\r\n                                                  memory=memory,\r\n                                                  get_chat_history=lambda h: h,\r\n                                                   #map_reduce,map_rerank ,refine\r\n                                                  return_source_documents=False)\r\n    print(\"\u6a21\u578b\u52a0\u8f7d\u7ed3\u675f\")\r\n    return chain#,memory\r\ndef embedding(require_text):\r\n    chain=load_chain()\r\n    ans = chain({\"question\": require_text})\r\n    return ans['answer']\r\n\u65e0\u6cd5\u5b9e\u73b0\u4e0a\u4e0b\u6587\u529f\u80fd\uff0c\u8bf7\u95ee\u6211\u54ea\u91cc\u6709\u95ee\u9898\uff0c\u6211\u7684langchain\u662f0.0161\u7684\u7248\u672c",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5099/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5099/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5098",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5098/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5098/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5098/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5098",
        "id": 1719992675,
        "node_id": "PR_kwDOIPDwls5RCKC7",
        "number": 5098,
        "title": " Improve pinecone hybrid search retriever adding metadata support",
        "user": {
            "login": "lbsnrs",
            "id": 47463,
            "node_id": "MDQ6VXNlcjQ3NDYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/47463?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lbsnrs",
            "html_url": "https://github.com/lbsnrs",
            "followers_url": "https://api.github.com/users/lbsnrs/followers",
            "following_url": "https://api.github.com/users/lbsnrs/following{/other_user}",
            "gists_url": "https://api.github.com/users/lbsnrs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lbsnrs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lbsnrs/subscriptions",
            "organizations_url": "https://api.github.com/users/lbsnrs/orgs",
            "repos_url": "https://api.github.com/users/lbsnrs/repos",
            "events_url": "https://api.github.com/users/lbsnrs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lbsnrs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-22T16:04:37Z",
        "updated_at": "2023-05-22T18:42:55Z",
        "closed_at": "2023-05-22T18:42:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5098",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5098",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5098.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5098.patch",
            "merged_at": "2023-05-22T18:42:54Z"
        },
        "body": "# Improve pinecone hybrid search retriever adding metadata support\r\n\r\nI simply remove the hardwiring of metadata to the existing implementation allowing one to pass `metadatas` attribute to the constructors and in `get_relevant_documents`.  I also add one missing pip install to the accompanying notebook (I am not adding dependencies, they were pre-existing).\r\n\r\nFirst contribution, just hoping to help, feel free to critique :) \r\nmy twitter username is `@andreliebschner`\r\n\r\nWhile looking at hybrid search I noticed #3043 and #1743. I think the former can be closed as following the example right now (even prior to my improvements) works just fine, the latter I think can be also closed safely, maybe pointing out the relevant classes and example. Should I reply those issues mentioning someone?\r\n\r\n@dev2049, @hwchase17\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5098/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5098/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5096",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5096/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5096/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5096/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5096",
        "id": 1719836908,
        "node_id": "I_kwDOIPDwls5mgqDs",
        "number": 5096,
        "title": "`RetrievalQA` chain with chain_type `map_reduce` fails for custom prompts",
        "user": {
            "login": "amirgamil",
            "id": 7995105,
            "node_id": "MDQ6VXNlcjc5OTUxMDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7995105?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amirgamil",
            "html_url": "https://github.com/amirgamil",
            "followers_url": "https://api.github.com/users/amirgamil/followers",
            "following_url": "https://api.github.com/users/amirgamil/following{/other_user}",
            "gists_url": "https://api.github.com/users/amirgamil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amirgamil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amirgamil/subscriptions",
            "organizations_url": "https://api.github.com/users/amirgamil/orgs",
            "repos_url": "https://api.github.com/users/amirgamil/repos",
            "events_url": "https://api.github.com/users/amirgamil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amirgamil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-05-22T14:39:02Z",
        "updated_at": "2023-10-10T06:51:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain 0.0.173\r\npython 3.9.16\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @agola11 @vowelparrot \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```python3\r\n\r\ncustom_prompt_template = \"\"\"Use the context to generate an appropriate reply to the query\r\n\r\nContext: {context}\r\nQuery: {question}\r\nResponse:\"\"\"\r\nCUSTOM_PROMPT = PromptTemplate(\r\n    template=learn_mode_prompt_template, input_variables=[\r\n        \"context\", \"question\"]\r\n)\r\n\r\ndef generate_response(text: str, query: str): \r\n  retriever = create_document_vectorstore(\r\n            page_text=text)\r\n  chain_type_kwargs = {\"prompt\": CUSTOM_PROMPT }\r\n  qa = RetrievalQA.from_chain_type(llm=OpenAI(\r\n            openai_api_key=openai_api_key), chain_type=\"map_reduce\", retriever=retriever)\r\n  qa.run(body.query)\r\n\r\n```\r\n\r\n### Expected behavior\r\n\r\ntl;dr trying to use `RetrievalQA` chain with `chain_type` of `map_reduce` (and `refine`) errors out when using a custom prompt but successfully works with `chain_type=stuff`\r\n\r\nNote this errors out with \r\n```\r\nValidationError: 1 validation error for MapReduceDocumentsChain\r\nprompt\r\n  extra fields not permitted (type=value_error.extra)\r\n```\r\n\r\nhowever if `chain_type` is changed to `stuff` the code generates a completion without a problem",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5096/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5096/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5095",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5095/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5095/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5095/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5095",
        "id": 1719814608,
        "node_id": "PR_kwDOIPDwls5RBjNw",
        "number": 5095,
        "title": "Bump 177",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-22T14:26:09Z",
        "updated_at": "2023-05-22T15:19:07Z",
        "closed_at": "2023-05-22T15:19:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5095",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5095",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5095.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5095.patch",
            "merged_at": "2023-05-22T15:19:06Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5095/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5095/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5094",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5094/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5094/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5094/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5094",
        "id": 1719805562,
        "node_id": "I_kwDOIPDwls5mgiZ6",
        "number": 5094,
        "title": "Conversational Chat with PythonREPL tool breaks",
        "user": {
            "login": "egeucak",
            "id": 15627365,
            "node_id": "MDQ6VXNlcjE1NjI3MzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/15627365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/egeucak",
            "html_url": "https://github.com/egeucak",
            "followers_url": "https://api.github.com/users/egeucak/followers",
            "following_url": "https://api.github.com/users/egeucak/following{/other_user}",
            "gists_url": "https://api.github.com/users/egeucak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/egeucak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/egeucak/subscriptions",
            "organizations_url": "https://api.github.com/users/egeucak/orgs",
            "repos_url": "https://api.github.com/users/egeucak/repos",
            "events_url": "https://api.github.com/users/egeucak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/egeucak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-22T14:20:57Z",
        "updated_at": "2023-09-10T16:13:54Z",
        "closed_at": "2023-09-10T16:13:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain 0.176.0\r\npython 3.10\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nFor example try running the following code:\r\n```python\r\nfrom langchain.agents import Tool\r\nfrom langchain.memory import ConversationBufferMemory\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.agents import initialize_agent\r\nfrom langchain.agents import AgentType\r\nfrom langchain.tools.python.tool import PythonREPLTool\r\nfrom langchain.utilities import DuckDuckGoSearchAPIWrapper\r\nimport langchain\r\nlangchain.debug = True\r\n\r\nsearch = DuckDuckGoSearchAPIWrapper()\r\ntools = [\r\n    Tool(\r\n        name = \"Current Search\",\r\n        func=search.run,\r\n        description=\"useful for when you need to answer questions about current events or the current state of the world. the input to this should be a single search term.\"\r\n    ),\r\n    PythonREPLTool()\r\n]\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\nllm=ChatOpenAI(temperature=0)\r\nagent_chain = initialize_agent(tools, llm, agent=AgentType.CHAT_CONVERSATIONAL_REACT_DESCRIPTION, verbose=True, memory=memory)\r\nagent_chain(\"\"\"create a regex that will extract titles from names. For example foo(\"Mrs. Smith\") should return Mrs.\"\"\")\r\n```\r\n\r\nDebug of this code contains the following:\r\n```\r\n{\r\n  \"generations\": [\r\n    [\r\n      {\r\n        \"text\": \"{\\n    \\\"action\\\": \\\"Python REPL\\\",\\n    \\\"action_input\\\": \\\"import re\\\\n\\\\nname = 'Mrs. Smith'\\\\n\\\\nregex = r'(Mr?s?\\\\.|Ms\\\\.|Miss|Dr\\\\.) ([A-Za-z]+)'\\\\n\\\\nmatch = re.search(regex, name)\\\\n\\\\nif match:\\\\n    print(match.group(2))\\\"\\n}\",\r\n        \"generation_info\": null,\r\n        \"message\": {\r\n          \"content\": \"{\\n    \\\"action\\\": \\\"Python REPL\\\",\\n    \\\"action_input\\\": \\\"import re\\\\n\\\\nname = 'Mrs. Smith'\\\\n\\\\nregex = r'(Mr?s?\\\\.|Ms\\\\.|Miss|Dr\\\\.) ([A-Za-z]+)'\\\\n\\\\nmatch = re.search(regex, name)\\\\n\\\\nif match:\\\\n    print(match.group(2))\\\"\\n}\",\r\n          \"additional_kwargs\": {},\r\n          \"example\": false\r\n        }\r\n      }\r\n    ]\r\n  ],\r\n  \"llm_output\": {\r\n    \"token_usage\": {\r\n      \"prompt_tokens\": 555,\r\n      \"completion_tokens\": 76,\r\n      \"total_tokens\": 631\r\n    },\r\n    \"model_name\": \"gpt-3.5-turbo\"\r\n  }\r\n}\r\n```\r\nHere you can see that this fails because the resulting answer contains escape characters that break json in the action input. This is a shortcoming of the json format. Changing the prompt and output parser to work with YAML works as expected.\n\n### Expected behavior\n\nI would expect to have output parser able to parse outputs containing escape characters. But this is a bit difficult with json. I propose we use yaml instead of json here. I am willing to develop a solution",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5094/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5094/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5093",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5093/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5093/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5093/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5093",
        "id": 1719782534,
        "node_id": "I_kwDOIPDwls5mgcyG",
        "number": 5093,
        "title": "load_summarize_chain doesn't return the specified max_tokens in OpenAI LLM",
        "user": {
            "login": "frandominguezl",
            "id": 10365222,
            "node_id": "MDQ6VXNlcjEwMzY1MjIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10365222?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frandominguezl",
            "html_url": "https://github.com/frandominguezl",
            "followers_url": "https://api.github.com/users/frandominguezl/followers",
            "following_url": "https://api.github.com/users/frandominguezl/following{/other_user}",
            "gists_url": "https://api.github.com/users/frandominguezl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frandominguezl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frandominguezl/subscriptions",
            "organizations_url": "https://api.github.com/users/frandominguezl/orgs",
            "repos_url": "https://api.github.com/users/frandominguezl/repos",
            "events_url": "https://api.github.com/users/frandominguezl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frandominguezl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-22T14:09:13Z",
        "updated_at": "2023-05-29T13:38:29Z",
        "closed_at": "2023-05-29T13:38:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n**LangChain version:** 0.0.176\r\n**Platform:** Local Ubuntu 22.04\r\n**Python version:** 3.10\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThis is the code example I'm currently using. It's a slightly modified version of [LangChain summarize docs](https://python.langchain.com/en/latest/modules/chains/index_examples/summarize.html)\r\n\r\n```py\r\nfrom pdfminer.high_level import extract_text\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.docstore.document import Document\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.chains.summarize import load_summarize_chain\r\n\r\ntext_splitter = CharacterTextSplitter()\r\n\r\ndef file_summarizer(file):\r\n    read_file = extract_text(file.name)\r\n    texts = text_splitter.split_text(read_file)\r\n\r\n    docs = [Document(page_content=t.replace(\"\\t\", \" \").strip()) for t in texts[:1]]\r\n\r\n    llm = OpenAI(temperature=0, max_tokens=2000)\r\n\r\n    for d in docs:\r\n        print(llm.get_num_tokens(d.page_content)) # This prints 1054\r\n\r\n    chain = load_summarize_chain(llm, chain_type=\"map_reduce\")\r\n\r\n    result = chain.run(docs).strip()\r\n\r\n    print(llm.get_num_tokens(result)) # This prints 87\r\n\r\n    return result\r\n```\n\n### Expected behavior\n\nIt looks like it's ignoring the value of the `max_tokens` parameter (or that I'm misunderstanding that it does), but no matter what value I pass to that parameter, I always receive very short answers, no matter the token size of the prompt.\r\n\r\n`text-davinci-003` has 4097 tokens, which means that for my previous example, I should've had around ~3000 tokens available for my summary, however, I just received 87.\r\n\r\nAm I missing or misunderstanding any bit of documentation?\r\n\r\nThanks in advance!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5093/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5093/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5090",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5090/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5090/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5090/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5090",
        "id": 1719611366,
        "node_id": "PR_kwDOIPDwls5RA2t9",
        "number": 5090,
        "title": "PowerBI major refinement in working of tool and tweaks in the rest",
        "user": {
            "login": "eavanvalkenburg",
            "id": 13749212,
            "node_id": "MDQ6VXNlcjEzNzQ5MjEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13749212?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eavanvalkenburg",
            "html_url": "https://github.com/eavanvalkenburg",
            "followers_url": "https://api.github.com/users/eavanvalkenburg/followers",
            "following_url": "https://api.github.com/users/eavanvalkenburg/following{/other_user}",
            "gists_url": "https://api.github.com/users/eavanvalkenburg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eavanvalkenburg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eavanvalkenburg/subscriptions",
            "organizations_url": "https://api.github.com/users/eavanvalkenburg/orgs",
            "repos_url": "https://api.github.com/users/eavanvalkenburg/repos",
            "events_url": "https://api.github.com/users/eavanvalkenburg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eavanvalkenburg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-22T12:41:25Z",
        "updated_at": "2023-05-23T17:50:05Z",
        "closed_at": "2023-05-22T18:58:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5090",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5090",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5090.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5090.patch",
            "merged_at": "2023-05-22T18:58:28Z"
        },
        "body": "# PowerBI major refinement in working of tool and tweaks in the rest\r\n\r\nI've gained some experience with more complex sets and the earlier implementation had too many tries by the agent to create DAX, so refactored the code to run the LLM to create dax based on a question and then immediately run the same against the dataset, with retries and a prompt that includes the error for the retry. This works much better! \r\n\r\nAlso did some other refactoring of the inner workings, making things clearer, more concise and faster.\r\n\r\n@vowelparrot for review",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5090/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5090/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5089",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5089/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5089/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5089/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5089",
        "id": 1719558283,
        "node_id": "PR_kwDOIPDwls5RArH9",
        "number": 5089,
        "title": " Add caching to BaseChatModel (issue #1644)",
        "user": {
            "login": "UmerHA",
            "id": 40663591,
            "node_id": "MDQ6VXNlcjQwNjYzNTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/40663591?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UmerHA",
            "html_url": "https://github.com/UmerHA",
            "followers_url": "https://api.github.com/users/UmerHA/followers",
            "following_url": "https://api.github.com/users/UmerHA/following{/other_user}",
            "gists_url": "https://api.github.com/users/UmerHA/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UmerHA/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UmerHA/subscriptions",
            "organizations_url": "https://api.github.com/users/UmerHA/orgs",
            "repos_url": "https://api.github.com/users/UmerHA/repos",
            "events_url": "https://api.github.com/users/UmerHA/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UmerHA/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 18,
        "created_at": "2023-05-22T12:08:30Z",
        "updated_at": "2023-07-11T11:40:32Z",
        "closed_at": "2023-06-24T18:45:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5089",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5089",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5089.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5089.patch",
            "merged_at": "2023-06-24T18:45:09Z"
        },
        "body": "#  Add caching to BaseChatModel\r\nFixes #1644\r\n\r\n(Sidenote: While testing, I noticed we have multiple implementations of Fake LLMs, used for testing. I consolidated them.)\r\n\r\n## Who can review?\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\nModels\r\n- @hwchase17\r\n- @agola11\r\n\r\nTwitter: [@UmerHAdil](https://twitter.com/@UmerHAdil) | Discord: RicChilligerDude#7589",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5089/reactions",
            "total_count": 10,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 10,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5089/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5087",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5087/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5087/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5087/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5087",
        "id": 1719462590,
        "node_id": "I_kwDOIPDwls5mfOq-",
        "number": 5087,
        "title": "Issue: Issue with PlanAndExecuteAgent",
        "user": {
            "login": "kishore25kumar",
            "id": 3241357,
            "node_id": "MDQ6VXNlcjMyNDEzNTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3241357?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kishore25kumar",
            "html_url": "https://github.com/kishore25kumar",
            "followers_url": "https://api.github.com/users/kishore25kumar/followers",
            "following_url": "https://api.github.com/users/kishore25kumar/following{/other_user}",
            "gists_url": "https://api.github.com/users/kishore25kumar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kishore25kumar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kishore25kumar/subscriptions",
            "organizations_url": "https://api.github.com/users/kishore25kumar/orgs",
            "repos_url": "https://api.github.com/users/kishore25kumar/repos",
            "events_url": "https://api.github.com/users/kishore25kumar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kishore25kumar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-22T11:11:07Z",
        "updated_at": "2023-09-10T16:14:00Z",
        "closed_at": "2023-09-10T16:14:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am using PlanAndExecuteAgent to answer a complex statement which has multiple placeholders, the placeholders need to be filled from executing multiple sql queries. I tried using planAndExecuteAgent but results were not fruitful. I took planAndExecuteAgent only for planning and used `create_sql_agent` to execute the plan coming out of planAndExecuteAgent. This worked out decently good. \r\n\r\nI debugged a little bit and found that the context information I gave as part of initial query is lost and not being used in execute steps. I think that context information need to be provided to steps as well so they can execute better. \r\nOne more observation is when sending calls to llm for planning it doesn't have the sql tool context where as while executing it doesn't have input context. This mismatch is causing the issue I think.\r\n\r\nThis is my observation. Please suggest what is the right way to use PlanAndExecuteAgent directly.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5087/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5087/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5086",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5086/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5086/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5086/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5086",
        "id": 1719303615,
        "node_id": "I_kwDOIPDwls5men2_",
        "number": 5086,
        "title": "Yield intermediate steps during the chain execution process",
        "user": {
            "login": "oaksharks",
            "id": 7763696,
            "node_id": "MDQ6VXNlcjc3NjM2OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7763696?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oaksharks",
            "html_url": "https://github.com/oaksharks",
            "followers_url": "https://api.github.com/users/oaksharks/followers",
            "following_url": "https://api.github.com/users/oaksharks/following{/other_user}",
            "gists_url": "https://api.github.com/users/oaksharks/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oaksharks/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oaksharks/subscriptions",
            "organizations_url": "https://api.github.com/users/oaksharks/orgs",
            "repos_url": "https://api.github.com/users/oaksharks/repos",
            "events_url": "https://api.github.com/users/oaksharks/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oaksharks/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-22T09:37:01Z",
        "updated_at": "2023-11-10T11:26:31Z",
        "closed_at": "2023-11-10T11:26:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nHi maintainer,\r\nIn my case, a chain runs for a long time, multiple actions will be executed during this process. The main reason is that there will be multiple conversations with the LLMs. \r\n\r\nNow, the `agent.run(...)`  returns final value and **intermediate steps** with following setting:\r\n\r\n```python\r\nagent = create_pandas_dataframe_agent(openai_llm, df, return_intermediate_steps=True, verbose=True)\r\nagent(\"some user query\")\r\n```\r\nThis is very useful for obtaining intermediate steps to enable front-end users to understand ideas from LLMs but they have to wait for it complete,  this is not friendly to them.\r\n\r\nI understand that the process of executing a chain is like a continuous process of generating and executing `Action`, which is in line with the idea of  `generator` in Python, where we can `yield` completed actions during the running process.\r\n\r\nIntuitively, it's like this:\r\nhttps://github.com/hwchase17/langchain/blob/ef7d015be566588b3263ee6ee1259a30ee53212c/langchain/agents/agent.py#L946C63-L959\r\n\r\n```python\r\nyield next_step_output  # line 954\r\n```\r\n\r\n\n\n### Motivation\n\nEnable front-end(some web apps using langchain) users to understand the `chain's` thinking process  while waiting for results , and  in a more intuitive/simple way compared to callback for developer.\n\n### Your contribution\n\nNOT Now",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5086/reactions",
            "total_count": 14,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 14
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5086/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5085",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5085/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5085/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5085/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5085",
        "id": 1719259061,
        "node_id": "PR_kwDOIPDwls5Q_pd4",
        "number": 5085,
        "title": "Fixes issue #5072 - adds additional support to Weaviate",
        "user": {
            "login": "jettro",
            "id": 149687,
            "node_id": "MDQ6VXNlcjE0OTY4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/149687?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jettro",
            "html_url": "https://github.com/jettro",
            "followers_url": "https://api.github.com/users/jettro/followers",
            "following_url": "https://api.github.com/users/jettro/following{/other_user}",
            "gists_url": "https://api.github.com/users/jettro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jettro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jettro/subscriptions",
            "organizations_url": "https://api.github.com/users/jettro/orgs",
            "repos_url": "https://api.github.com/users/jettro/repos",
            "events_url": "https://api.github.com/users/jettro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jettro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-22T09:12:09Z",
        "updated_at": "2023-05-23T01:57:10Z",
        "closed_at": "2023-05-23T01:57:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5085",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5085",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5085.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5085.patch",
            "merged_at": "2023-05-23T01:57:10Z"
        },
        "body": "Implementation is similar to search_distance and where_filter\r\n\r\n# adds 'additional' support to Weaviate queries\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes #5072\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@dev2049\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5085/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5085/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5084",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5084/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5084/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5084/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5084",
        "id": 1719236879,
        "node_id": "I_kwDOIPDwls5meXkP",
        "number": 5084,
        "title": "llmchain not work as expect in multiple thread scenario",
        "user": {
            "login": "vincent-pli",
            "id": 8669744,
            "node_id": "MDQ6VXNlcjg2Njk3NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8669744?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vincent-pli",
            "html_url": "https://github.com/vincent-pli",
            "followers_url": "https://api.github.com/users/vincent-pli/followers",
            "following_url": "https://api.github.com/users/vincent-pli/following{/other_user}",
            "gists_url": "https://api.github.com/users/vincent-pli/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vincent-pli/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vincent-pli/subscriptions",
            "organizations_url": "https://api.github.com/users/vincent-pli/orgs",
            "repos_url": "https://api.github.com/users/vincent-pli/repos",
            "events_url": "https://api.github.com/users/vincent-pli/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vincent-pli/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-22T09:00:40Z",
        "updated_at": "2023-09-19T16:09:35Z",
        "closed_at": "2023-09-19T16:09:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.165\r\nPython 3.10.8\r\nmacos m2\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\n    def __init__(self, prompt_template: PromptTemplate):\r\n        self.llmchainList = []\r\n        key_list = self.__getAPIKeys()\r\n        for key in key_list:\r\n            llm = ChatOpenAI(model_name=\"gpt-3.5-turbo\", openai_api_key=key, max_tokens = 1500)\r\n            llm_chain = LLMChain(\r\n                llm=llm,\r\n                prompt=prompt_template)\r\n            self.llmchainList.append(llm_chain)\r\n\r\n    def __pickupLlm(self):\r\n        chain = self.llmchainList.pop(0)\r\n        self.llmchainList.append(chain)\r\n\r\n        return chain\r\n\r\n    def send(self, **kwargs):\r\n        chain = self.__pickupLlm()\r\n        print(\"send message to chatgpt...\")\r\n        res = {}\r\n        with get_openai_callback() as cb:\r\n            res = chain.run(**kwargs)\r\n            print(cb)\r\n        print(\"chatgpt said...\")\r\n        print(res)\r\n```\r\n\r\nThe code is very straight forward, I have a api token list, when init, create a `llmchain` list. \r\nwhen request to `chatgpt`, I pop up one `llmchain` in the list (simple load balance for rate limit) .\r\n\r\nBut, when I start request with multiple thread, I got many `rate limit` exception event I sleep enough ms between request.\r\nand I found all `rate limit` exception point to one api token(`Rate limit reached for default-gpt-3.5-turbo in organization org-WN9k0BUSqN4pNvlU5N6T74Yq on requests per min. Limit: 3 / min. Please try again in 20s. Contact us through our help center at help.openai.com if you continue to have issues. Please add a payment method to your account to increase your rate limit. Visit https://platform.openai.com/account/billing to add a payment method.`), also the api token on the end of my list. that's weird.  My simple load balance will never pick on one \"api token\" in one batch request.\r\n\r\nEven I print `key` of each `llmchain`, it'a correct, for example, one batch, I send 3 request, and each `llmchian` with different `apikey`, but I still get `rate limit` with one specific organization which is exactly in the end of my `api token` list.\r\n\r\nSo I have to suspect there must be some wrong with `LLMCHAIN`,  expect reply, thanks\r\n\r\n\n\n### Expected behavior\n\nBy design, no rate limit exception",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5084/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5084/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5083",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5083/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5083/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5083/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5083",
        "id": 1719117817,
        "node_id": "PR_kwDOIPDwls5Q_Ld9",
        "number": 5083,
        "title": "Improve effeciency of TextSplitter.split_documents, iterate once",
        "user": {
            "login": "startakovsky",
            "id": 689723,
            "node_id": "MDQ6VXNlcjY4OTcyMw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/689723?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/startakovsky",
            "html_url": "https://github.com/startakovsky",
            "followers_url": "https://api.github.com/users/startakovsky/followers",
            "following_url": "https://api.github.com/users/startakovsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/startakovsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/startakovsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/startakovsky/subscriptions",
            "organizations_url": "https://api.github.com/users/startakovsky/orgs",
            "repos_url": "https://api.github.com/users/startakovsky/repos",
            "events_url": "https://api.github.com/users/startakovsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/startakovsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-22T07:58:23Z",
        "updated_at": "2023-05-23T02:28:19Z",
        "closed_at": "2023-05-23T01:43:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5083",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5083",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5083.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5083.patch",
            "merged_at": null
        },
        "body": "# Improve TextSplitter.split_documents, collect page_content and metadata in one iteration\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@eyurtsev In the case where documents is a generator that can only be iterated once making this change is a huge help. Otherwise a silent issue happens where metadata is empty for all documents when documents is a generator. So we expand the argument from `List[Document]` to `Union[Iterable[Document], Sequence[Document]]`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5083/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5083/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5082",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5082/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5082/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5082/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5082",
        "id": 1719055182,
        "node_id": "I_kwDOIPDwls5mdrNO",
        "number": 5082,
        "title": "Azure Content Filtering on Default QA with sources prompt.",
        "user": {
            "login": "JonAtDocuWare",
            "id": 127426819,
            "node_id": "U_kgDOB5hhAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/127426819?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JonAtDocuWare",
            "html_url": "https://github.com/JonAtDocuWare",
            "followers_url": "https://api.github.com/users/JonAtDocuWare/followers",
            "following_url": "https://api.github.com/users/JonAtDocuWare/following{/other_user}",
            "gists_url": "https://api.github.com/users/JonAtDocuWare/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JonAtDocuWare/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JonAtDocuWare/subscriptions",
            "organizations_url": "https://api.github.com/users/JonAtDocuWare/orgs",
            "repos_url": "https://api.github.com/users/JonAtDocuWare/repos",
            "events_url": "https://api.github.com/users/JonAtDocuWare/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JonAtDocuWare/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-22T07:16:39Z",
        "updated_at": "2023-09-15T16:11:55Z",
        "closed_at": "2023-09-15T16:11:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nv0.0.176 \n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThe default QA with Sources Chain: langchain/chains/qa_with_sources/stuff_prompt.py\r\n\r\ncauses issues with Azure Content Filter, which will return the following:\r\n\r\n```\r\n\"error\": {\r\n    \"message\": \"The response was filtered\",\r\n    \"type\": null,\r\n    \"param\": \"prompt\",\r\n    \"code\": \"content_filter\",\r\n    \"status\": 400\r\n}\r\n```\r\n\r\nI believe this is due to the sections that mention issues like covid, which is found in the example source content in lines 22-28.\r\n\r\nI modified to the following to resolve the issue:\r\n\r\n```\r\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.\r\nSource: 0-pl\r\nContent: And we won\u00e2\u20ac\u2122t stop. \r\nSource: 24-pl\r\nContent: And a proud Ukrainian people, I want you to know that we are going to be okay.\r\nSource: 5-pl\r\nContent: More support for patients and families. Our future is forged. \\n\\nWell I know this nation.\r\nSource: 34-pl\r\n```\r\nthis is probably not the best version of the source content, but it worked for me.\n\n### Expected behavior\n\nThe QA prompt should not trigger Azure Content Filtering.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5082/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5082/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5081",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5081/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5081/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5081/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5081",
        "id": 1718965240,
        "node_id": "I_kwDOIPDwls5mdVP4",
        "number": 5081,
        "title": "Issue: Can we limit the number of relevant documents returned by AzureCognitiveSearchRetriever?",
        "user": {
            "login": "matteo-campana",
            "id": 65486667,
            "node_id": "MDQ6VXNlcjY1NDg2NjY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/65486667?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matteo-campana",
            "html_url": "https://github.com/matteo-campana",
            "followers_url": "https://api.github.com/users/matteo-campana/followers",
            "following_url": "https://api.github.com/users/matteo-campana/following{/other_user}",
            "gists_url": "https://api.github.com/users/matteo-campana/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matteo-campana/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matteo-campana/subscriptions",
            "organizations_url": "https://api.github.com/users/matteo-campana/orgs",
            "repos_url": "https://api.github.com/users/matteo-campana/repos",
            "events_url": "https://api.github.com/users/matteo-campana/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matteo-campana/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2023-05-22T06:10:42Z",
        "updated_at": "2023-07-27T05:36:05Z",
        "closed_at": "2023-07-27T05:36:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I need to limit the number of documents that  AzureCognitiveSearchRetriever returns so that I can aggregate only the most relevant documents. Is there a way to do this with the current functionality or do we need to implement it?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5081/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5081/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5080",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5080/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5080/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5080/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5080",
        "id": 1718933305,
        "node_id": "I_kwDOIPDwls5mdNc5",
        "number": 5080,
        "title": "Chain for generating and running python code",
        "user": {
            "login": "thismlguy",
            "id": 5637402,
            "node_id": "MDQ6VXNlcjU2Mzc0MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5637402?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thismlguy",
            "html_url": "https://github.com/thismlguy",
            "followers_url": "https://api.github.com/users/thismlguy/followers",
            "following_url": "https://api.github.com/users/thismlguy/following{/other_user}",
            "gists_url": "https://api.github.com/users/thismlguy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thismlguy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thismlguy/subscriptions",
            "organizations_url": "https://api.github.com/users/thismlguy/orgs",
            "repos_url": "https://api.github.com/users/thismlguy/repos",
            "events_url": "https://api.github.com/users/thismlguy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thismlguy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-22T05:40:25Z",
        "updated_at": "2023-09-10T16:14:10Z",
        "closed_at": "2023-09-10T16:14:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nAdd capability to generate and run python code using langchain. I created a [github repo](https://github.com/thismlguy/code-genie) called code-genie to support this. Here's a [starter notebook](https://code-genie.readthedocs.io/en/main/notebooks/Google%20Analytics%20Pipeline%20Example.html) for it. I want to build that functionality into langchain itself for wider adoption.\n\n### Motivation\n\n  A lot of data scientists/business analysts are using GPT3.5/4 API to generate code for ad-hoc analysis. But they end up copy pasting code from chatgpt interface into their notebooks and spend time making it work with their own variables.\n\n### Your contribution\n\nI can create a PR introducing a chain with does this once I get approval from the maintainers that they are open to merging this feature in.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5080/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5080/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5079",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5079/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5079/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5079/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5079",
        "id": 1718888188,
        "node_id": "PR_kwDOIPDwls5Q-ZxR",
        "number": 5079,
        "title": "Separate Runner Functions from Client",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-22T04:56:34Z",
        "updated_at": "2023-05-22T05:28:49Z",
        "closed_at": "2023-05-22T05:28:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5079",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5079",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5079.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5079.patch",
            "merged_at": "2023-05-22T05:28:48Z"
        },
        "body": "Extract the methods specific to running an LLM or Chain on a dataset to separate utility functions.\r\n\r\nThis simplifies the client a bit and lets us separate concerns of LCP details from running examples (e.g., for evals)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5079/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5079/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5078",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5078/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5078/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5078/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5078",
        "id": 1718872898,
        "node_id": "PR_kwDOIPDwls5Q-WmS",
        "number": 5078,
        "title": "Harrison/cypher",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-22T04:32:55Z",
        "updated_at": "2023-05-23T03:08:58Z",
        "closed_at": "2023-05-22T14:31:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5078",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5078",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5078.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5078.patch",
            "merged_at": "2023-05-22T14:31:48Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5078/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5078/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5077",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5077/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5077/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5077/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5077",
        "id": 1718767157,
        "node_id": "I_kwDOIPDwls5mck41",
        "number": 5077,
        "title": "CosmosDBChatMessageHistory.load_messages return None",
        "user": {
            "login": "F2EVarMan",
            "id": 10355060,
            "node_id": "MDQ6VXNlcjEwMzU1MDYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/10355060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/F2EVarMan",
            "html_url": "https://github.com/F2EVarMan",
            "followers_url": "https://api.github.com/users/F2EVarMan/followers",
            "following_url": "https://api.github.com/users/F2EVarMan/following{/other_user}",
            "gists_url": "https://api.github.com/users/F2EVarMan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/F2EVarMan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/F2EVarMan/subscriptions",
            "organizations_url": "https://api.github.com/users/F2EVarMan/orgs",
            "repos_url": "https://api.github.com/users/F2EVarMan/repos",
            "events_url": "https://api.github.com/users/F2EVarMan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/F2EVarMan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-22T02:18:01Z",
        "updated_at": "2023-11-20T16:06:46Z",
        "closed_at": "2023-11-20T16:06:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "When I use CosmosDBChatMessageHistory, the conversation history is stored in DB, but every time load message returns None, and each time I run add_user_message, I perform a replace operation, not an increment on the original record.\r\n\r\n![image](https://github.com/hwchase17/langchain/assets/10355060/de8edb58-206a-4531-a584-797e1ff6ef58)\r\n![image](https://github.com/hwchase17/langchain/assets/10355060/be068f76-742e-469a-8818-e821b996de32)\r\n![image](https://github.com/hwchase17/langchain/assets/10355060/44189bc0-17e4-410f-9994-66eaf88764bf)\r\n![image](https://github.com/hwchase17/langchain/assets/10355060/6053659c-09dd-4cbd-9584-315c9080c250)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5077/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5077/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    }
]