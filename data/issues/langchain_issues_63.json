[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7901",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7901/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7901/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7901/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7901",
        "id": 1810624088,
        "node_id": "PR_kwDOIPDwls5V0lgS",
        "number": 7901,
        "title": "Adding code to allow pandas to show all columns instead of truncating\u2026",
        "user": {
            "login": "eahova",
            "id": 4044511,
            "node_id": "MDQ6VXNlcjQwNDQ1MTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4044511?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eahova",
            "html_url": "https://github.com/eahova",
            "followers_url": "https://api.github.com/users/eahova/followers",
            "following_url": "https://api.github.com/users/eahova/following{/other_user}",
            "gists_url": "https://api.github.com/users/eahova/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eahova/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eahova/subscriptions",
            "organizations_url": "https://api.github.com/users/eahova/orgs",
            "repos_url": "https://api.github.com/users/eahova/repos",
            "events_url": "https://api.github.com/users/eahova/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eahova/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-18T19:57:58Z",
        "updated_at": "2023-07-20T14:02:02Z",
        "closed_at": "2023-07-20T14:02:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7901",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7901",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7901.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7901.patch",
            "merged_at": "2023-07-20T14:02:02Z"
        },
        "body": "  - Description: Adding code to set pandas dataframe to display all the columns.  Otherwise, some data get truncated (it puts a \"...\" in the middle and just shows the first 4 and last 4 columns) and the LLM doesn't realize it isn't getting the full data.  Default value is 8, so this helps Dataframes larger than that.\r\n  - Issue: none\r\n  - Dependencies: none\r\n  - Tag maintainer: @hinthornw \r\n  - Twitter handle: none",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7901/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7901/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7900",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7900/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7900/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7900/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7900",
        "id": 1810580170,
        "node_id": "I_kwDOIPDwls5r60LK",
        "number": 7900,
        "title": "ChatOpenAI needs usage field that Google PaLM 2 Bison doesn't provide",
        "user": {
            "login": "alonsosilvaallende",
            "id": 30263736,
            "node_id": "MDQ6VXNlcjMwMjYzNzM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/30263736?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alonsosilvaallende",
            "html_url": "https://github.com/alonsosilvaallende",
            "followers_url": "https://api.github.com/users/alonsosilvaallende/followers",
            "following_url": "https://api.github.com/users/alonsosilvaallende/following{/other_user}",
            "gists_url": "https://api.github.com/users/alonsosilvaallende/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alonsosilvaallende/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alonsosilvaallende/subscriptions",
            "organizations_url": "https://api.github.com/users/alonsosilvaallende/orgs",
            "repos_url": "https://api.github.com/users/alonsosilvaallende/repos",
            "events_url": "https://api.github.com/users/alonsosilvaallende/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alonsosilvaallende/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T19:25:22Z",
        "updated_at": "2023-09-22T07:58:21Z",
        "closed_at": "2023-09-22T07:58:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLanghain v0.0.235\r\nPython v3.11\n\n### Who can help?\n\n@agola11 @hw\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI'm using OpenRouter which uses OpenAI SDK to provide different models. I encounter the problem when I use the model 'google/palm-2-chat-bison'\r\nHere is the [gist](https://gist.github.com/alonsosilvaallende/6788eaa388bfa7e60ce84e7e155a86b5) reproducing the error.\r\nOtherwise, here is the code:\r\n```python\r\nimport os\r\nimport openai\r\nfrom langchain.chat_models import ChatOpenAI\r\n\r\nopenai.api_base = \"https://openrouter.ai/api/v1\"\r\nopenai.api_key = os.getenv(\"OPENROUTER_API_KEY\")\r\nOPENROUTER_REFERRER = \"https://github.com/alexanderatallah/openrouter-streamlit\"\r\nchat = ChatOpenAI(model_name=\"google/palm-2-chat-bison\",\r\n                  temperature=2,\r\n                  headers={\"HTTP-Referer\": OPENROUTER_REFERRER})\r\nchat.predict(\"Tell me a joke\")\r\n```\r\n\r\nError message:\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\nCell In[3], line 13\r\n      7 OPENROUTER_REFERRER = \"https://github.com/alexanderatallah/openrouter-streamlit\"\r\n      8 chat = ChatOpenAI(\r\n      9         model_name=\"google/palm-2-chat-bison\",\r\n     10         temperature=2,\r\n     11         headers={\"HTTP-Referer\": OPENROUTER_REFERRER}\r\n     12     )\r\n---> 13 chat.predict(\"Tell me a joke\")\r\n\r\nFile ~/miniconda3/envs/langchain/lib/python3.11/site-packages/langchain/chat_models/base.py:385, in BaseChatModel.predict(self, text, stop, **kwargs)\r\n    383 else:\r\n    384     _stop = list(stop)\r\n--> 385 result = self([HumanMessage(content=text)], stop=_stop, **kwargs)\r\n    386 return result.content\r\n\r\nFile ~/miniconda3/envs/langchain/lib/python3.11/site-packages/langchain/chat_models/base.py:349, in BaseChatModel.__call__(self, messages, stop, callbacks, **kwargs)\r\n    342 def __call__(\r\n    343     self,\r\n    344     messages: List[BaseMessage],\r\n   (...)\r\n    347     **kwargs: Any,\r\n    348 ) -> BaseMessage:\r\n--> 349     generation = self.generate(\r\n    350         [messages], stop=stop, callbacks=callbacks, **kwargs\r\n    351     ).generations[0][0]\r\n    352     if isinstance(generation, ChatGeneration):\r\n    353         return generation.message\r\n\r\nFile ~/miniconda3/envs/langchain/lib/python3.11/site-packages/langchain/chat_models/base.py:125, in BaseChatModel.generate(self, messages, stop, callbacks, tags, metadata, **kwargs)\r\n    123         if run_managers:\r\n    124             run_managers[i].on_llm_error(e)\r\n--> 125         raise e\r\n    126 flattened_outputs = [\r\n    127     LLMResult(generations=[res.generations], llm_output=res.llm_output)\r\n    128     for res in results\r\n    129 ]\r\n    130 llm_output = self._combine_llm_outputs([res.llm_output for res in results])\r\n\r\nFile ~/miniconda3/envs/langchain/lib/python3.11/site-packages/langchain/chat_models/base.py:115, in BaseChatModel.generate(self, messages, stop, callbacks, tags, metadata, **kwargs)\r\n    112 for i, m in enumerate(messages):\r\n    113     try:\r\n    114         results.append(\r\n--> 115             self._generate_with_cache(\r\n    116                 m,\r\n    117                 stop=stop,\r\n    118                 run_manager=run_managers[i] if run_managers else None,\r\n    119                 **kwargs,\r\n    120             )\r\n    121         )\r\n    122     except (KeyboardInterrupt, Exception) as e:\r\n    123         if run_managers:\r\n\r\nFile ~/miniconda3/envs/langchain/lib/python3.11/site-packages/langchain/chat_models/base.py:262, in BaseChatModel._generate_with_cache(self, messages, stop, run_manager, **kwargs)\r\n    258     raise ValueError(\r\n    259         \"Asked to cache, but no cache found at `langchain.cache`.\"\r\n    260     )\r\n    261 if new_arg_supported:\r\n--> 262     return self._generate(\r\n    263         messages, stop=stop, run_manager=run_manager, **kwargs\r\n    264     )\r\n    265 else:\r\n    266     return self._generate(messages, stop=stop, **kwargs)\r\n\r\nFile ~/miniconda3/envs/langchain/lib/python3.11/site-packages/langchain/chat_models/openai.py:372, in ChatOpenAI._generate(self, messages, stop, run_manager, **kwargs)\r\n    370     return ChatResult(generations=[ChatGeneration(message=message)])\r\n    371 response = self.completion_with_retry(messages=message_dicts, **params)\r\n--> 372 return self._create_chat_result(response)\r\n\r\nFile ~/miniconda3/envs/langchain/lib/python3.11/site-packages/langchain/chat_models/openai.py:394, in ChatOpenAI._create_chat_result(self, response)\r\n    389     gen = ChatGeneration(\r\n    390         message=message,\r\n    391         generation_info=dict(finish_reason=res.get(\"finish_reason\")),\r\n    392     )\r\n    393     generations.append(gen)\r\n--> 394 llm_output = {\"token_usage\": response[\"usage\"], \"model_name\": self.model_name}\r\n    395 return ChatResult(generations=generations, llm_output=llm_output)\r\n\r\nKeyError: 'usage'\n\n### Expected behavior\n\nI expect that it doesn't give me an error since exactly the same code works when I use the model 'openai/gpt-3.5-turbo' instead of the model 'google/palm-2-chat-bison'.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7900/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7900/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7898",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7898/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7898/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7898/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7898",
        "id": 1810462902,
        "node_id": "PR_kwDOIPDwls5V0H_V",
        "number": 7898,
        "title": "docs(custom_chain) fix typo",
        "user": {
            "login": "zizhong",
            "id": 3625100,
            "node_id": "MDQ6VXNlcjM2MjUxMDA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3625100?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zizhong",
            "html_url": "https://github.com/zizhong",
            "followers_url": "https://api.github.com/users/zizhong/followers",
            "following_url": "https://api.github.com/users/zizhong/following{/other_user}",
            "gists_url": "https://api.github.com/users/zizhong/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zizhong/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zizhong/subscriptions",
            "organizations_url": "https://api.github.com/users/zizhong/orgs",
            "repos_url": "https://api.github.com/users/zizhong/repos",
            "events_url": "https://api.github.com/users/zizhong/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zizhong/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T18:19:03Z",
        "updated_at": "2023-07-19T01:03:19Z",
        "closed_at": "2023-07-19T01:03:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7898",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7898",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7898.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7898.patch",
            "merged_at": "2023-07-19T01:03:19Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n \r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\nFix typo in the document of custom_chain",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7898/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7898/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7897",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7897/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7897/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7897/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7897",
        "id": 1810454689,
        "node_id": "I_kwDOIPDwls5r6Vih",
        "number": 7897,
        "title": "CSV Agent JSON Parsing Errors",
        "user": {
            "login": "cdreetz",
            "id": 117322020,
            "node_id": "U_kgDOBv4xJA",
            "avatar_url": "https://avatars.githubusercontent.com/u/117322020?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cdreetz",
            "html_url": "https://github.com/cdreetz",
            "followers_url": "https://api.github.com/users/cdreetz/followers",
            "following_url": "https://api.github.com/users/cdreetz/following{/other_user}",
            "gists_url": "https://api.github.com/users/cdreetz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cdreetz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cdreetz/subscriptions",
            "organizations_url": "https://api.github.com/users/cdreetz/orgs",
            "repos_url": "https://api.github.com/users/cdreetz/repos",
            "events_url": "https://api.github.com/users/cdreetz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cdreetz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-18T18:13:05Z",
        "updated_at": "2023-10-14T12:09:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nOccasional error out of CSV agent with JSON parsing error.  Typically occurs when prompting a multi step task, but some multi step tasks are handled fine.  Even in the same multi step task, depending on the wording of the prompt it can be run successfully but with different wording will error out.\r\n\r\nHeres an example of the message returned.\r\n\r\n\r\nFile \"C:\\Users\\\\env\\Lib\\site-packages\\langchain\\agents\\openai_functions_agent\\base.py\", line 212, in plan\r\n    agent_decision = _parse_ai_message(predicted_message)\r\n                     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\\\env\\Lib\\site-packages\\langchain\\agents\\openai_functions_agent\\base.py\", line 114, in _parse_ai_message\r\n    raise OutputParserException(\r\nlangchain.schema.OutputParserException: Could not parse tool input: {'name': 'python', 'arguments': \"df_filtered = df[df['Version1Text'].str.contains('using your budget')]\\nlabel_counts = df_filtered['Label'].value_counts()\\nlabel_counts\"} because the `arguments` is not valid JSON.\n\n### Who can help?\n\n@hwchase17 @agol\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce behavior:\r\n\r\n1. Start up CSV agent\r\n2. One example prompt that errors: \"of the rows where 'Version1Text' includes 'using your budget' what are the counts of each of the unique 'Label' values\"\n\n### Expected behavior\n\nExpected behavior is to subset the csv based on the provided conditions and then return counts",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7897/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7897/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7896",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7896/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7896/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7896/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7896",
        "id": 1810447563,
        "node_id": "I_kwDOIPDwls5r6TzL",
        "number": 7896,
        "title": "Issue: OpenAI Function Agent with custom prompt from memory",
        "user": {
            "login": "suryasanchez",
            "id": 32910556,
            "node_id": "MDQ6VXNlcjMyOTEwNTU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/32910556?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/suryasanchez",
            "html_url": "https://github.com/suryasanchez",
            "followers_url": "https://api.github.com/users/suryasanchez/followers",
            "following_url": "https://api.github.com/users/suryasanchez/following{/other_user}",
            "gists_url": "https://api.github.com/users/suryasanchez/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/suryasanchez/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/suryasanchez/subscriptions",
            "organizations_url": "https://api.github.com/users/suryasanchez/orgs",
            "repos_url": "https://api.github.com/users/suryasanchez/repos",
            "events_url": "https://api.github.com/users/suryasanchez/events{/privacy}",
            "received_events_url": "https://api.github.com/users/suryasanchez/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T18:07:22Z",
        "updated_at": "2023-07-18T21:27:03Z",
        "closed_at": "2023-07-18T21:27:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi,\r\n\r\nI'm updating my code to use the new OpenAI function calling structure.\r\n\r\nRequirements:\r\n\r\n- New messages saved in DynamoDB together with past messages for a user\r\n- Custom prompt : 10 last messages from DynamoDB memory of the user\r\n- Function calling\r\n\r\n### Past code\r\nThe `create_prompt_from_messages(n)` function create a custom prompt based on n last messages.\r\n\r\n```python\r\nchain = LLMChain(llm=llm,\r\n                 prompt=create_prompt_from_messages(10),\r\n                 verbose=False,\r\n                 memory=memory\r\n                 )\r\n```\r\n\r\n### New code without custom prompt\r\nThis code below works but send **all** past messages to the LLM. I want to limit to **n** last messages. I didn't find a way to pass custom prompt to an agent using `AgentType.OPENAI_FUNCTIONS`\r\n\r\nNote that I don't want to delete past messages from the database.\r\n\r\n```python\r\nmessage_history = DynamoDBChatMessageHistory(table_name=conversation_table_name, session_id='0')\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", chat_memory=message_history, return_messages=True)\r\n\r\nagent_kwargs = {\r\n    \"extra_prompt_messages\": [MessagesPlaceholder(variable_name=\"chat_history\")],\r\n}\r\n\r\nagent = initialize_agent(\r\n    tools,\r\n    llm,\r\n    agent=AgentType.OPENAI_FUNCTIONS, # or OPENAI_MULTI_FUNCTIONS ?\r\n    verbose=True,\r\n    agent_kwargs=agent_kwargs,\r\n    memory=memory\r\n)\r\n```\r\n\r\nHow can I only sent n last message from the agent memory? Or create the a custom prompt and pass it to the OpenAI function agent?\r\n\r\nThank you in advance!\n\n### Suggestion:\n\nCreate a Notebook with this use case for OpenAI Function agent.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7896/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7896/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7895",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7895/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7895/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7895/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7895",
        "id": 1810440214,
        "node_id": "I_kwDOIPDwls5r6SAW",
        "number": 7895,
        "title": "Pydantic exception when creating GPT4All model",
        "user": {
            "login": "cserpell",
            "id": 858784,
            "node_id": "MDQ6VXNlcjg1ODc4NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/858784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cserpell",
            "html_url": "https://github.com/cserpell",
            "followers_url": "https://api.github.com/users/cserpell/followers",
            "following_url": "https://api.github.com/users/cserpell/following{/other_user}",
            "gists_url": "https://api.github.com/users/cserpell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cserpell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cserpell/subscriptions",
            "organizations_url": "https://api.github.com/users/cserpell/orgs",
            "repos_url": "https://api.github.com/users/cserpell/repos",
            "events_url": "https://api.github.com/users/cserpell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cserpell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T18:01:23Z",
        "updated_at": "2023-10-24T16:05:43Z",
        "closed_at": "2023-10-24T16:05:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nMac OS\r\n\r\nVersions:\r\nPython 3.8.15\r\n\r\nPackage               |  Version\r\n-----------------------|--------\r\naiohttp                | 3.8.4\r\naiosignal              | 1.3.1\r\nasync-timeout      |     4.0.2\r\nattrs                   |23.1.0\r\ncertifi                 |2023.5.7\r\ncharset-normalizer |     3.2.0\r\ndataclasses-json       | 0.5.9\r\nfrozenlist          |    1.4.0\r\n**gpt4all**           |      **1.0.5**\r\ngreenlet              |  2.0.2\r\nidna                   | 3.4\r\n**langchain**      |         **0.0.234**\r\nlangsmith          |     0.0.5\r\nmarshmallow      |       3.19.0\r\nmarshmallow-enum |       1.5.1\r\nmultidict             |  6.0.4\r\nmypy-extensions   |      1.0.0\r\nnumexpr             |    2.8.4\r\nnumpy                  | 1.24.4\r\nopenapi-schema-pydantic | 1.2.4\r\npackaging           |    23.1\r\npip                  |   23.2\r\n**pydantic**     |           **1.10.11**\r\nPyYAML           |       6.0\r\nrequests            |    2.31.0\r\nsetuptools           |   56.0.0\r\nSQLAlchemy          |    2.0.19\r\ntenacity           |     8.2.2\r\ntqdm                  |  4.65.0\r\ntyping_extensions  |     4.7.1\r\ntyping-inspect      |    0.9.0\r\nurllib3             |    2.0.3\r\nyarl                 |   1.9.2\n\n### Who can help?\n\n@agola11 @hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThis is a minimum code example to reproduce the error:\r\n\r\n```python\r\nfrom langchain.llms.gpt4all import GPT4All\r\n\r\nllm = GPT4All(model=\"./models/gpt4all-lora-quantized-ggml.bin\")\r\n```\r\n\r\nI get the following error:\r\n```\r\nTraceback (most recent call last):\r\n  File \"gpt4all_me.py\", line 3, in <module>\r\n    llm = GPT4All(model=\"./models/gpt4all-lora-quantized-ggml.bin\")\r\n  File \"/home/cserpell/git/activelooplangchain/a/lib/python3.8/site-packages/langchain/load/serializable.py\", line 74, in __init__\r\n    super().__init__(**kwargs)\r\n  File \"pydantic/main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for GPT4All\r\n__root__ -> __root__\r\n  __init__() takes 1 positional argument but 2 were given (type=type_error)\r\n```\r\n\r\nI tried giving the directory without the `./`, without the `./model/`, putting the file in the current directory, and some other options, with no success.\n\n### Expected behavior\n\nThe exception should not be raised, and GPT4All model should be available to use.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7895/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7895/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7894",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7894/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7894/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7894/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7894",
        "id": 1810435714,
        "node_id": "PR_kwDOIPDwls5V0CC4",
        "number": 7894,
        "title": "simplified namespace",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T17:57:48Z",
        "updated_at": "2023-07-23T20:40:22Z",
        "closed_at": "2023-07-23T20:40:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7894",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7894",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7894.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7894.patch",
            "merged_at": null
        },
        "body": "label: documentation\r\n\r\nSimplified namespace to reduce a column length in the API Reference table for the `Agents`.\r\nRight now the `agents.agent_toolkits.azure_cognitive_services.toolkit.AzureCognitiveServicesToolkit` name makes the first column [unbalanced with the second column](https://api.python.langchain.com/en/latest/api_reference.html#module-langchain.agents). The first column is too wide and the second column is too narrow, which wraps the class descriptions in several lines.\r\nThis update reduces the ^ namespace to `agents.agent_toolkits.azure_cognitive_services.AzureCognitiveServicesToolkit` and balances the columns.\r\n\r\n@baskaryan\r\n@hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7894/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7893",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7893/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7893/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7893/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7893",
        "id": 1810420593,
        "node_id": "PR_kwDOIPDwls5Vz-yk",
        "number": 7893,
        "title": "Add llama-v2 to docs",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-18T17:45:31Z",
        "updated_at": "2023-07-18T19:09:10Z",
        "closed_at": "2023-07-18T19:09:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7893",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7893",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7893.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7893.patch",
            "merged_at": "2023-07-18T19:09:10Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7893/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7893/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7892",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7892/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7892/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7892/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7892",
        "id": 1810406133,
        "node_id": "PR_kwDOIPDwls5Vz7rN",
        "number": 7892,
        "title": "docstrings `chains`",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T17:33:54Z",
        "updated_at": "2023-07-19T01:29:31Z",
        "closed_at": "2023-07-19T01:25:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7892",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7892",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7892.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7892.patch",
            "merged_at": "2023-07-19T01:25:43Z"
        },
        "body": "Added/updated docstrings.\r\n\r\n@baskaryan\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7892/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7891",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7891/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7891/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7891/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7891",
        "id": 1810383543,
        "node_id": "PR_kwDOIPDwls5Vz2uh",
        "number": 7891,
        "title": "Gpapp/chromadb",
        "user": {
            "login": "gpapp",
            "id": 4165192,
            "node_id": "MDQ6VXNlcjQxNjUxOTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4165192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gpapp",
            "html_url": "https://github.com/gpapp",
            "followers_url": "https://api.github.com/users/gpapp/followers",
            "following_url": "https://api.github.com/users/gpapp/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpapp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gpapp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpapp/subscriptions",
            "organizations_url": "https://api.github.com/users/gpapp/orgs",
            "repos_url": "https://api.github.com/users/gpapp/repos",
            "events_url": "https://api.github.com/users/gpapp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gpapp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-18T17:17:00Z",
        "updated_at": "2023-07-19T00:03:43Z",
        "closed_at": "2023-07-19T00:03:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7891",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7891",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7891.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7891.patch",
            "merged_at": "2023-07-19T00:03:42Z"
        },
        "body": "  - Description: version check to make sure chromadb >=0.4.0 does not throw an error, and uses the default sqlite persistence engine when the directory is set,\r\n  - Issue: the issue #7887 \r\n\r\nFor attention of\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7891/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7891/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7890",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7890/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7890/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7890/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7890",
        "id": 1810375679,
        "node_id": "PR_kwDOIPDwls5Vz1HN",
        "number": 7890,
        "title": "Amadeus Flight and Travel Search Tool",
        "user": {
            "login": "sdelgadoc",
            "id": 17517367,
            "node_id": "MDQ6VXNlcjE3NTE3MzY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/17517367?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sdelgadoc",
            "html_url": "https://github.com/sdelgadoc",
            "followers_url": "https://api.github.com/users/sdelgadoc/followers",
            "following_url": "https://api.github.com/users/sdelgadoc/following{/other_user}",
            "gists_url": "https://api.github.com/users/sdelgadoc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sdelgadoc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sdelgadoc/subscriptions",
            "organizations_url": "https://api.github.com/users/sdelgadoc/orgs",
            "repos_url": "https://api.github.com/users/sdelgadoc/repos",
            "events_url": "https://api.github.com/users/sdelgadoc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sdelgadoc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-18T17:11:55Z",
        "updated_at": "2023-07-20T13:59:30Z",
        "closed_at": "2023-07-20T13:59:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7890",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7890",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7890.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7890.patch",
            "merged_at": "2023-07-20T13:59:29Z"
        },
        "body": "## Background\r\nWith the addition on email and calendar tools, LangChain is continuing to complete its functionality to automate business processes.\r\n\r\n## Challenge\r\nOne of the pieces of business functionality that LangChain currently doesn't have is the ability to search for flights and travel in order to book business travel.\r\n\r\n## Changes\r\nThis PR implements an integration with the [Amadeus](https://developers.amadeus.com/) travel search API for LangChain, enabling seamless search for flights with a single authentication process.\r\n\r\n## Who can review?\r\n@hinthornw\r\n\r\n## Appendix\r\n@tsolakoua and @minjikarin, I utilized your [amadeus-python](https://github.com/amadeus4dev/amadeus-python) library extensively. Given the rising popularity of LangChain and similar AI frameworks, the convergence of libraries like amadeus-python and tools like this one is likely. So, I wanted to keep you updated on our progress.\r\n\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7890/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 2,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7890/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7889",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7889/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7889/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7889/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7889",
        "id": 1810278050,
        "node_id": "I_kwDOIPDwls5r5qai",
        "number": 7889,
        "title": "StructuredChatAgent uses SQLDatabaseToolkit tools in wrong order",
        "user": {
            "login": "b-dulaney",
            "id": 52844767,
            "node_id": "MDQ6VXNlcjUyODQ0NzY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/52844767?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/b-dulaney",
            "html_url": "https://github.com/b-dulaney",
            "followers_url": "https://api.github.com/users/b-dulaney/followers",
            "following_url": "https://api.github.com/users/b-dulaney/following{/other_user}",
            "gists_url": "https://api.github.com/users/b-dulaney/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/b-dulaney/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/b-dulaney/subscriptions",
            "organizations_url": "https://api.github.com/users/b-dulaney/orgs",
            "repos_url": "https://api.github.com/users/b-dulaney/repos",
            "events_url": "https://api.github.com/users/b-dulaney/events{/privacy}",
            "received_events_url": "https://api.github.com/users/b-dulaney/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-18T16:20:09Z",
        "updated_at": "2023-11-07T16:07:08Z",
        "closed_at": "2023-11-07T16:07:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version - 0.0.235\r\nPython version - 3.10\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nHello,\r\n\r\nI'm trying to use a Structured Chat agent with SQL tools as well as a VectorStoreQA tool in order to retrieve data from a Postgres database and our Pinecone store. For the Agent's chat model, I'm using Azure OpenAI's gpt-3.5-turbo version 0301.\r\n\r\nI have tried providing the tools via the SQLDatabaseToolkit's get_tools() function as well as importing the individual tools and modifying their descriptions, but I get the same issue with both approaches. Despite the descriptions and formatting instructions provided below, the agent has a lot of trouble with querying the DB. \r\n\r\nIt almost always starts off with 'sql_db_query' to construct a query that errors out, which then prompts the agent to check the list of tables and then their schemas. From here, it can usually arrive at the correct query - but this is not the correct behavior. Other times, it will get stuck in a loop of constructing a query, getting an error, and then either checking the query or just constructing a new one. The errors are due to the schema that it hallucinates because it didn't use the 'sql_db_list_tables' and 'sql_db_schema' tools first.\r\n\r\nIn the code excerpt below, you can see the formatting instructions provided as well as the descriptions that I'm giving the SQL tools.\r\n\r\nHas anybody else had issues with SQL database tools and the StructuredChat agent? Should I be using a different type of agent for this?\r\n\r\n``````\r\nFORMAT_INSTRUCTIONS = \"\"\"Use a json blob to specify a tool by providing an action key (tool name) and an \r\n    action_input key (tool input).\r\n\r\nFor SQL queries, ALWAYS use the available tools in this order:\r\n     1. sql_db_list_tables\r\n     2. sql_db_schema\r\n     3. sql_db_query_checker\r\n     4. sql_db_query\r\n\r\nValid \"action\" values: \"Final Answer\" or {tool_names}\r\n\r\nProvide only ONE action per $JSON_BLOB, as shown:\r\n\r\n```\r\n{{{{\r\n  \"action\": $TOOL_NAME,\r\n  \"action_input\": $INPUT\r\n}}}}\r\n```\r\n\r\nFollow this format:\r\n\r\nQuestion: input question to answer\r\nThought: consider previous and subsequent steps\r\nAction:\r\n```\r\n$JSON_BLOB\r\n```\r\nObservation: action result\r\n... (repeat Thought/Action/Observation N times)\r\nThought: I know what to respond\r\nAction:\r\n```\r\n{{{{\r\n  \"action\": \"Final Answer\",\r\n  \"action_input\": \"Final response to human\"\r\n}}}}\r\n```\"\"\"\r\n\r\nvectorstore_info = VectorStoreInfo(\r\n    name=\"incident_resolution_instructions\",\r\n    description=\"MOP Documents that help users resolve incidents for different devices and causes\",\r\n    vectorstore=pineconeStore,\r\n)\r\n\r\nllm = AzureChatOpenAI(temperature=0, verbose=True,\r\n                    deployment_name='chatgpt-35', model_name=\"gpt-35-turbo\", max_tokens=4000)\r\n\r\nquery_sql_database_tool_description = (\r\n            \"ONLY use this tool AFTER using 'sql_db_schema' and 'sql_db_query_checker'.\"\r\n            \"Input to this tool is a detailed and correct SQL query, output is a \"\r\n            \"result from the database. If the query is not correct, an error message \"\r\n            \"will be returned. If an error is returned, rewrite the query, check the \"\r\n            \"query, and try again. If you encounter an issue with Unknown column \"\r\n            \"'xxxx' in 'field list', use 'sql_db_schema' to query the correct table \"\r\n            \"fields.\"\r\n        )\r\ninfo_sql_database_tool_description = (\r\n            \"\"\"\r\n            ALWAYS use this tool second AFTER 'sql_db_list_tables'.\r\n            Input to this tool is a comma-separated list of tables, output is the \r\n            schema and sample rows for those tables. \r\n            Be sure that the tables actually exist by calling 'sql_db_list_tables'\r\n            first! Example Input: table1, table2, table3\r\n            \"\"\"\r\n        )\r\nlist_sql_database_tool_description = (\r\n    \"ALWAYS use this tool first. Input to this tool is an empty string '', output is the list of PostgreSQL tables in the database.\"\r\n)\r\nquery_checker_sql_database_tool_description = (\r\n    \"\"\"\r\n    ALWAYS Use this tool third AFTER 'sql_db_list_tables' and 'sql_db_schema'.\r\n    ALWAYS use this tool to double check if your query is correct before executing it.\r\n    ALWAYS use this tool BEFORE executing a query with 'sql_db_query'\r\n    \"\"\"\r\n)\r\n\r\ntools = [\r\n            ListSQLDatabaseTool(db=db, description=list_sql_database_tool_description), \r\n            InfoSQLDatabaseTool(db=db, description=info_sql_database_tool_description), \r\n            QuerySQLDataBaseTool(db=db, description=query_sql_database_tool_description), \r\n            QuerySQLCheckerTool(db=db, description=query_checker_sql_database_tool_description, llm=AzureOpenAI(temperature=0, verbose=True,\r\n                        deployment_name='chatgpt-35', model_name=\"gpt-35-turbo\", max_tokens=4000)), \r\n            VectorStoreQATool(vectorstore=vectorstore_info.vectorstore, llm=AzureOpenAI(temperature=0, verbose=True,\r\n                        deployment_name='chatgpt-35', model_name=\"gpt-35-turbo\", max_tokens=4000), name=\"incident_resolution_steps\", description=\"Documentation detailing steps to resolve an incident for various device types such as Routers and Switches.\") \r\n         ]\r\n\r\n    agent_chain = initialize_agent(tools, llm, agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION, verbose=True, memory=memory, agent_kwargs={\r\n        'prefix': PREFIX, \r\n        'format_instructions': FORMAT_INSTRUCTIONS,\r\n        'suffix': SUFFIX,\r\n        'input_variables': [\"input\", \"chat_history\", \"agent_scratchpad\"]\r\n    })\r\n\r\n    response = agent_chain.run(input=event['question'])\r\n``````\n\n### Expected behavior\n\nThe agent should:\r\n\r\n- Follow the order provided in the default descriptions of each SQLDatabase Tool\r\n- Follow instructions for tools provided in the formatting instructions or prompt suffix",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7889/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7889/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7888",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7888/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7888/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7888/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7888",
        "id": 1810240198,
        "node_id": "PR_kwDOIPDwls5VzXmV",
        "number": 7888,
        "title": "SelfQuery support for deeplake",
        "user": {
            "login": "adolkhan",
            "id": 54854336,
            "node_id": "MDQ6VXNlcjU0ODU0MzM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/54854336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adolkhan",
            "html_url": "https://github.com/adolkhan",
            "followers_url": "https://api.github.com/users/adolkhan/followers",
            "following_url": "https://api.github.com/users/adolkhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/adolkhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adolkhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adolkhan/subscriptions",
            "organizations_url": "https://api.github.com/users/adolkhan/orgs",
            "repos_url": "https://api.github.com/users/adolkhan/repos",
            "events_url": "https://api.github.com/users/adolkhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adolkhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-18T15:59:05Z",
        "updated_at": "2023-07-24T21:22:34Z",
        "closed_at": "2023-07-24T21:22:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7888",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7888",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7888.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7888.patch",
            "merged_at": "2023-07-24T21:22:33Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n\r\nAdded support SelfQuery for Deeplake\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7888/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7888/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7887",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7887/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7887/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7887/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7887",
        "id": 1810236515,
        "node_id": "I_kwDOIPDwls5r5gRj",
        "number": 7887,
        "title": "ChromaDB 0.4+ is no longer compatible with client config",
        "user": {
            "login": "gpapp",
            "id": 4165192,
            "node_id": "MDQ6VXNlcjQxNjUxOTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4165192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gpapp",
            "html_url": "https://github.com/gpapp",
            "followers_url": "https://api.github.com/users/gpapp/followers",
            "following_url": "https://api.github.com/users/gpapp/following{/other_user}",
            "gists_url": "https://api.github.com/users/gpapp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gpapp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gpapp/subscriptions",
            "organizations_url": "https://api.github.com/users/gpapp/orgs",
            "repos_url": "https://api.github.com/users/gpapp/repos",
            "events_url": "https://api.github.com/users/gpapp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gpapp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 50,
        "created_at": "2023-07-18T15:56:56Z",
        "updated_at": "2023-11-05T14:07:23Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\n- Python 3.9.13\r\n\r\n- langchain-0.0.235-py3-none-any.whl\r\n- chromadb-0.4.0-py3-none-any.whl\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [x] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce:\r\n\r\n1. Create a Chroma store which is locally persisted\r\n```\r\nstore = Chroma.from_texts(\r\n    texts=docs, embedding=embeddings, metadatas=metadatas, persist_directory=environ[\"DB_DIR\"]\r\n)\r\n```\r\n2. Get the error `You are using a deprecated configuration of Chroma. Please pip install chroma-migrate and run `chroma-migrate` to upgrade your configuration. See https://docs.trychroma.com/migration for more information or join our discord at https://discord.gg/8g5FESbj for help!`\r\n3. Suffer\n\n### Expected behavior\n\n1. Create locally persisted Chroma store\r\n2. Use Chroma store\r\n\r\n\r\nThe issue:\r\n\r\nStarting chromadb 0.40 the chroma_db_impl is no longer a supported parameter, it uses sqlite instead.\r\n\r\nRemoving the line\r\n`\r\nchroma_db_impl=\"duckdb+parquet\",\r\n`\r\nfrom langchain.vectorstores/chroma.py solves the issue, but the earlier DB cannot be used or migrated.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7887/reactions",
            "total_count": 16,
            "+1": 10,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 5
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7887/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7886",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7886/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7886/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7886/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7886",
        "id": 1810223070,
        "node_id": "I_kwDOIPDwls5r5c_e",
        "number": 7886,
        "title": "Encryption Key support",
        "user": {
            "login": "iatpatelishan",
            "id": 8603977,
            "node_id": "MDQ6VXNlcjg2MDM5Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8603977?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iatpatelishan",
            "html_url": "https://github.com/iatpatelishan",
            "followers_url": "https://api.github.com/users/iatpatelishan/followers",
            "following_url": "https://api.github.com/users/iatpatelishan/following{/other_user}",
            "gists_url": "https://api.github.com/users/iatpatelishan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iatpatelishan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iatpatelishan/subscriptions",
            "organizations_url": "https://api.github.com/users/iatpatelishan/orgs",
            "repos_url": "https://api.github.com/users/iatpatelishan/repos",
            "events_url": "https://api.github.com/users/iatpatelishan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iatpatelishan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T15:49:30Z",
        "updated_at": "2023-09-15T19:27:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWhen entering the embed text in the database like pgvector, I would like to encrypt the raw text with KMS Key or any such encryption and use raw text for generating embedding\n\n### Motivation\n\nSecurity\n\n### Your contribution\n\nN/A",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7886/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7886/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7885",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7885/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7885/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7885/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7885",
        "id": 1810202518,
        "node_id": "I_kwDOIPDwls5r5X-W",
        "number": 7885,
        "title": "Difference between ConversationChain and ConversationalRetrievalChain",
        "user": {
            "login": "miha-bhaskaran",
            "id": 90109393,
            "node_id": "MDQ6VXNlcjkwMTA5Mzkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/90109393?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/miha-bhaskaran",
            "html_url": "https://github.com/miha-bhaskaran",
            "followers_url": "https://api.github.com/users/miha-bhaskaran/followers",
            "following_url": "https://api.github.com/users/miha-bhaskaran/following{/other_user}",
            "gists_url": "https://api.github.com/users/miha-bhaskaran/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/miha-bhaskaran/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/miha-bhaskaran/subscriptions",
            "organizations_url": "https://api.github.com/users/miha-bhaskaran/orgs",
            "repos_url": "https://api.github.com/users/miha-bhaskaran/repos",
            "events_url": "https://api.github.com/users/miha-bhaskaran/events{/privacy}",
            "received_events_url": "https://api.github.com/users/miha-bhaskaran/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-18T15:39:20Z",
        "updated_at": "2023-11-16T13:39:15Z",
        "closed_at": "2023-10-24T16:05:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nwhat is the difference between a conversationChain and a conversationalRetrieval chain. I had originially assumed that the conversational retrieval chain would be able to take in documents, input, and memory (which I have gotten to successfully work) and was under the assumption that the conversationChain could not take in our own documents. However, I found a demo online that suggests otherwise. So what exactly is the difference? It was natural to me to use conversationalretrieval chain becuase I had personal documents I wanted to use and I knew that the retrieval chains were made for that. \n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7885/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7885/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7884",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7884/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7884/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7884/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7884",
        "id": 1810080519,
        "node_id": "PR_kwDOIPDwls5Vy0RA",
        "number": 7884,
        "title": "docs: added comment from azure llm to azure chat about GPT-4",
        "user": {
            "login": "maciej-skorupka",
            "id": 9993219,
            "node_id": "MDQ6VXNlcjk5OTMyMTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9993219?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maciej-skorupka",
            "html_url": "https://github.com/maciej-skorupka",
            "followers_url": "https://api.github.com/users/maciej-skorupka/followers",
            "following_url": "https://api.github.com/users/maciej-skorupka/following{/other_user}",
            "gists_url": "https://api.github.com/users/maciej-skorupka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maciej-skorupka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maciej-skorupka/subscriptions",
            "organizations_url": "https://api.github.com/users/maciej-skorupka/orgs",
            "repos_url": "https://api.github.com/users/maciej-skorupka/repos",
            "events_url": "https://api.github.com/users/maciej-skorupka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maciej-skorupka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T14:42:05Z",
        "updated_at": "2023-07-18T15:13:58Z",
        "closed_at": "2023-07-18T15:05:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7884",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7884",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7884.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7884.patch",
            "merged_at": "2023-07-18T15:05:41Z"
        },
        "body": "Azure GPT-4 models can't be accessed via LLM model. It's easy to miss that and a lot of discussions about that are on the Internet. Therefore I added a comment in Azure LLM docs that mentions that and points to Azure Chat OpenAI docs.\r\n@baskaryan\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7884/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7884/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7882",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7882/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7882/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7882/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7882",
        "id": 1810022800,
        "node_id": "I_kwDOIPDwls5r4sGQ",
        "number": 7882,
        "title": "Inconsistent behaviour with the 'python_repl' tool and the ZeroShotAgent",
        "user": {
            "login": "sarahboufelja",
            "id": 8659897,
            "node_id": "MDQ6VXNlcjg2NTk4OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8659897?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarahboufelja",
            "html_url": "https://github.com/sarahboufelja",
            "followers_url": "https://api.github.com/users/sarahboufelja/followers",
            "following_url": "https://api.github.com/users/sarahboufelja/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarahboufelja/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarahboufelja/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarahboufelja/subscriptions",
            "organizations_url": "https://api.github.com/users/sarahboufelja/orgs",
            "repos_url": "https://api.github.com/users/sarahboufelja/repos",
            "events_url": "https://api.github.com/users/sarahboufelja/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarahboufelja/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T14:12:21Z",
        "updated_at": "2023-10-24T16:05:53Z",
        "closed_at": "2023-10-24T16:05:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nWhen using the python_repl tool with the ZeroShotAgent, I keep getting the following error: `Observation: SyntaxError('invalid syntax', ('<string>', 2, 1, '%matplotlib inline\\n'))\r\nThought:`\r\nThe agent keeps looping over and over since it does not understand the issue with the magic command. \r\nIs this a known issue? Do we have a fix or ideally a way to enforce some behaviours within the python tool, via a custom prompt? \n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7882/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7882/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7881",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7881/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7881/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7881/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7881",
        "id": 1809932575,
        "node_id": "I_kwDOIPDwls5r4WEf",
        "number": 7881,
        "title": "Integrating Langchain to FHIR API",
        "user": {
            "login": "EthelEz",
            "id": 15246640,
            "node_id": "MDQ6VXNlcjE1MjQ2NjQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/15246640?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EthelEz",
            "html_url": "https://github.com/EthelEz",
            "followers_url": "https://api.github.com/users/EthelEz/followers",
            "following_url": "https://api.github.com/users/EthelEz/following{/other_user}",
            "gists_url": "https://api.github.com/users/EthelEz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EthelEz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EthelEz/subscriptions",
            "organizations_url": "https://api.github.com/users/EthelEz/orgs",
            "repos_url": "https://api.github.com/users/EthelEz/repos",
            "events_url": "https://api.github.com/users/EthelEz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EthelEz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-07-18T13:24:11Z",
        "updated_at": "2023-11-09T14:43:56Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI think it'd be a good idea to have Langchain integrated into the fast healthcare interoperability resource (FHIR) API. Integrating chatting techniques with FHIR and having the ability to interact with ChatOpenAI would give FHIR more visibility, versatility, and adaptability in terms of use cases in healthcare.\n\n### Motivation\n\nIntegrating a ChatOpenAI with FHIR (Fast Healthcare Interoperability Resources) can provide several benefits in the healthcare domain:\r\n\r\n**Real-time Communication:** Integrating the chat techniques such as ChatOpenAI with FHIR, will have the conversations seamlessly linked to relevant patient health records and clinical data, enhancing the context and relevance of the discussions.\r\n\u00a0\r\n**Collaborative Decision-Making**: By integrating a chat with FHIR, healthcare teams can discuss patient cases, share insights, exchange knowledge, and make informed decisions together. The ability to refer to FHIR resources, such as clinical notes, lab results, or medication information, within the chat streamlines the decision-making process.\r\n\u00a0\r\n**Contextual Information:** FHIR provides a standardized format for representing and exchanging healthcare data. Integrating the chat stream with FHIR allows relevant patient data, such as demographics, diagnoses, allergies, medications, or procedures, to be readily accessible within the chat interface.\r\n\u00a0\r\n**Workflow Efficiency**: By integrating the Lnangchain's ChatOpenAI with FHIR, healthcare professionals can conveniently access patient data and perform necessary actions within the chat interface. For example, they can request lab results, schedule appointments, prescribe medications, or document clinical notes directly within the chat stream. This integration reduces the need for switching between multiple systems, streamlines workflow, and enhances productivity.\r\n\u00a0\r\n**Continuity of Care:** Integrating the chat stream with FHIR helps ensure continuity of care by maintaining a historical record of discussions, decisions, and interventions in the patient's health record. This allows healthcare professionals to refer to previous conversations, review treatment plans, and track the progression of care over time. It also supports care coordination and handoffs between healthcare providers.\r\n\u00a0\r\n**Patient Engagement:** Chat streams integrated with FHIR can empower patients to actively participate in their own healthcare journey. Patients can securely communicate with healthcare providers, ask questions, receive educational materials, or provide updates on their health status. Having access to their FHIR-based health data within the chat stream can enable patients to have informed discussions and take ownership of their care.\r\n\u00a0\r\nThe motivation for integrating Langchain with ChatOpenAI is endless.\r\n\n\n### Your contribution\n\nI thought of this because I have been studying FHIR for a while now. I am yet to understand the nitty-gritty but I am sure the API has a schema https://fhir-ru.github.io/downloads.html that can be downloaded and integrated. In addition, Langchain developers have built API agents, they can do it.\r\n\r\nI am happy to provide more information.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7881/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7881/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7880",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7880/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7880/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7880/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7880",
        "id": 1809854935,
        "node_id": "PR_kwDOIPDwls5VyC8o",
        "number": 7880,
        "title": "ArangoDB/AQL support for Graph QA Chain",
        "user": {
            "login": "aMahanna",
            "id": 43019056,
            "node_id": "MDQ6VXNlcjQzMDE5MDU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/43019056?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aMahanna",
            "html_url": "https://github.com/aMahanna",
            "followers_url": "https://api.github.com/users/aMahanna/followers",
            "following_url": "https://api.github.com/users/aMahanna/following{/other_user}",
            "gists_url": "https://api.github.com/users/aMahanna/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aMahanna/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aMahanna/subscriptions",
            "organizations_url": "https://api.github.com/users/aMahanna/orgs",
            "repos_url": "https://api.github.com/users/aMahanna/repos",
            "events_url": "https://api.github.com/users/aMahanna/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aMahanna/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-07-18T12:44:22Z",
        "updated_at": "2023-07-24T22:16:53Z",
        "closed_at": "2023-07-24T22:16:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7880",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7880",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7880.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7880.patch",
            "merged_at": "2023-07-24T22:16:53Z"
        },
        "body": "**Description**: Serves as an introduction to LangChain's support for [ArangoDB](https://github.com/arangodb/arangodb), similar to https://github.com/hwchase17/langchain/pull/7165 and https://github.com/hwchase17/langchain/pull/4881\r\n\r\n**Issue**: No issue has been created for this feature\r\n\r\n**Dependencies**: `python-arango` has been added as an optional dependency via the `CONTRIBUTING.md` guidelines \r\n \r\n**Twitter handle**: [at]arangodb\r\n\r\n- Integration test has been added\r\n- Notebook has been added: [graph_arangodb_qa.ipynb](https://github.com/amahanna/langchain/blob/master/docs/extras/modules/chains/additional/graph_arangodb_qa.ipynb)\r\n\r\n[![Open In Collab](https://colab.research.google.com/assets/colab-badge.svg)](https://colab.research.google.com/github/amahanna/langchain/blob/master/docs/extras/modules/chains/additional/graph_arangodb_qa.ipynb)\r\n\r\n```\r\ndocker run -p 8529:8529 -e ARANGO_ROOT_PASSWORD= arangodb/arangodb\r\n```\r\n\r\n```\r\npip install git+https://github.com/amahanna/langchain.git\r\n```\r\n\r\n```python\r\nfrom arango import ArangoClient\r\n\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.graphs import ArangoGraph\r\nfrom langchain.chains import ArangoGraphQAChain\r\n\r\ndb = ArangoClient(hosts=\"localhost:8529\").db(name=\"_system\", username=\"root\", password=\"\", verify=True)\r\n\r\ngraph = ArangoGraph(db)\r\n\r\nchain = ArangoGraphQAChain.from_llm(ChatOpenAI(temperature=0), graph=graph)\r\n\r\nchain.run(\"Is Ned Stark alive?\")\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7880/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7880/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7879",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7879/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7879/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7879/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7879",
        "id": 1809693903,
        "node_id": "I_kwDOIPDwls5r3bzP",
        "number": 7879,
        "title": "showing progress or message under process",
        "user": {
            "login": "doctsh",
            "id": 5936743,
            "node_id": "MDQ6VXNlcjU5MzY3NDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5936743?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/doctsh",
            "html_url": "https://github.com/doctsh",
            "followers_url": "https://api.github.com/users/doctsh/followers",
            "following_url": "https://api.github.com/users/doctsh/following{/other_user}",
            "gists_url": "https://api.github.com/users/doctsh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/doctsh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/doctsh/subscriptions",
            "organizations_url": "https://api.github.com/users/doctsh/orgs",
            "repos_url": "https://api.github.com/users/doctsh/repos",
            "events_url": "https://api.github.com/users/doctsh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/doctsh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-07-18T10:58:52Z",
        "updated_at": "2023-10-26T16:05:59Z",
        "closed_at": "2023-10-26T16:05:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI am using the following codes to get api call:\r\n\r\n            user_query = prompt.format_prompt(user_prompt=input_text)\r\n\r\n            user_query_output = chat_model(user_query.to_messages())\r\n\r\nI am using Django and since it takes some time to get response the entire page freezes. Is there anyway to show progress bar or at least a message it is under progress?\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\ninclude the below code under views.py:\r\n\r\n            user_query = prompt.format_prompt(user_prompt=input_text)\r\n\r\n\r\n            user_query_output = chat_model(user_query.to_messages())\r\n\r\nupon calling api the page freezes which is normal\n\n### Expected behavior\n\nA message or progress bar",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7879/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7879/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7878",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7878/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7878/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7878/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7878",
        "id": 1809601350,
        "node_id": "I_kwDOIPDwls5r3FNG",
        "number": 7878,
        "title": "openai.error.InvalidRequestError: The completion operation does not work with the specified model, gpt-4. Please choose different model and try again. You can learn more about which models can be used with each operation here: https://go.microsoft.com/fwlink/?linkid=2197993.",
        "user": {
            "login": "pradeepdev-1995",
            "id": 41164884,
            "node_id": "MDQ6VXNlcjQxMTY0ODg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/41164884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pradeepdev-1995",
            "html_url": "https://github.com/pradeepdev-1995",
            "followers_url": "https://api.github.com/users/pradeepdev-1995/followers",
            "following_url": "https://api.github.com/users/pradeepdev-1995/following{/other_user}",
            "gists_url": "https://api.github.com/users/pradeepdev-1995/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pradeepdev-1995/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pradeepdev-1995/subscriptions",
            "organizations_url": "https://api.github.com/users/pradeepdev-1995/orgs",
            "repos_url": "https://api.github.com/users/pradeepdev-1995/repos",
            "events_url": "https://api.github.com/users/pradeepdev-1995/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pradeepdev-1995/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T10:01:28Z",
        "updated_at": "2023-07-19T04:44:19Z",
        "closed_at": "2023-07-19T04:44:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.219\r\npython 3.9\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [X] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI am using the gpt-4 model with azureOpenAI using the below code.\r\n\r\n```\r\nfrom langchain.llms import AzureOpenAI\r\nfrom langchain.chains.question_answering import load_qa_chain\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom langchain.document_loaders import DirectoryLoader\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\nfrom langchain.vectorstores import Chroma\r\nimport os\r\nimport openai\r\nopenai.api_type = \"azure\"\r\nopenai.api_base = os.getenv(\"OPENAI_API_BASE\")\r\nopenai.api_version = \"2023-03-15-preview\"\r\nopenai.api_key = os.getenv(\"OPENAI_API_KEY\")\r\nDEPLOYMENT_NAME = 'gpt-4 model'\r\n\r\nllm = AzureOpenAI(\r\n    openai_api_base=os.getenv(\"OPENAI_API_BASE\"),\r\n    openai_api_version=\"2023-03-15-preview\",\r\n    deployment_name=DEPLOYMENT_NAME,\r\n    openai_api_key=os.getenv(\"OPENAI_API_KEY\"),\r\n    openai_api_type=\"azure\",\r\n)\r\nembeddings = HuggingFaceEmbeddings(model_name='sentence-transformers/all-MiniLM-L6-v2')\r\nquery = \"sample query\"\r\nmy_loader = DirectoryLoader('/Data', glob='**/*.pdf')\r\ndocs = my_loader.load()\r\ntext_split = RecursiveCharacterTextSplitter(chunk_size = 3000, chunk_overlap = 2)\r\ntexts = text_split.split_documents(docs)\r\ndocsearch = Chroma.from_documents(texts, embeddings, metadatas=[{\"source\": str(i)} for i in range(len(texts))],persist_directory=\"./official_db\").as_retriever(search_type=\"similarity\")\r\ndocs = docsearch.get_relevant_documents(query)\r\nchain = load_qa_chain(llm, chain_type=\"stuff\")\r\nresult = chain.run(input_documents=docs, question=query)\r\n```\r\nBut it returns the errror \r\n```\r\nopenai.error.InvalidRequestError: The completion operation does not work with the specified model, gpt-4. Please choose different model and try again. You can learn more about which models can be used with each operation here: https://go.microsoft.com/fwlink/?linkid=2197993.\r\n```\r\n\r\n**Note: The same code is working well with gpt-3.5 in azureOpenAI llm**\r\n\r\n### Expected behavior\r\n\r\nIt should able to integrate gpt-4 without any issue. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7878/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7878/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7877",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7877/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7877/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7877/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7877",
        "id": 1809594246,
        "node_id": "PR_kwDOIPDwls5VxJuS",
        "number": 7877,
        "title": "Add Portkey LLMOps integration",
        "user": {
            "login": "vrushankportkey",
            "id": 134934501,
            "node_id": "U_kgDOCArv5Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/134934501?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vrushankportkey",
            "html_url": "https://github.com/vrushankportkey",
            "followers_url": "https://api.github.com/users/vrushankportkey/followers",
            "following_url": "https://api.github.com/users/vrushankportkey/following{/other_user}",
            "gists_url": "https://api.github.com/users/vrushankportkey/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vrushankportkey/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vrushankportkey/subscriptions",
            "organizations_url": "https://api.github.com/users/vrushankportkey/orgs",
            "repos_url": "https://api.github.com/users/vrushankportkey/repos",
            "events_url": "https://api.github.com/users/vrushankportkey/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vrushankportkey/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-18T09:57:05Z",
        "updated_at": "2023-07-20T16:08:45Z",
        "closed_at": "2023-07-20T16:08:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7877",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7877",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7877.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7877.patch",
            "merged_at": "2023-07-20T16:08:44Z"
        },
        "body": "Integrating Portkey, which adds production features like caching, tracing, tagging, retries, etc. to langchain apps.\r\n\r\n  - Dependencies: None\r\n  - Twitter handle: https://twitter.com/portkeyai\r\n  - test_portkey.py added for tests\r\n  - example notebook added in new utilities folder in modules\r\n  \r\n Also fixed a bug with OpenAIEmbeddings where headers weren't passing.\r\n\r\ncc @baskaryan",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7877/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7877/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7876",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7876/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7876/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7876/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7876",
        "id": 1809494390,
        "node_id": "I_kwDOIPDwls5r2rF2",
        "number": 7876,
        "title": "Difference between chain() and chain.run()",
        "user": {
            "login": "pradeepdev-1995",
            "id": 41164884,
            "node_id": "MDQ6VXNlcjQxMTY0ODg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/41164884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pradeepdev-1995",
            "html_url": "https://github.com/pradeepdev-1995",
            "followers_url": "https://api.github.com/users/pradeepdev-1995/followers",
            "following_url": "https://api.github.com/users/pradeepdev-1995/following{/other_user}",
            "gists_url": "https://api.github.com/users/pradeepdev-1995/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pradeepdev-1995/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pradeepdev-1995/subscriptions",
            "organizations_url": "https://api.github.com/users/pradeepdev-1995/orgs",
            "repos_url": "https://api.github.com/users/pradeepdev-1995/repos",
            "events_url": "https://api.github.com/users/pradeepdev-1995/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pradeepdev-1995/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-18T09:02:23Z",
        "updated_at": "2023-11-09T10:26:58Z",
        "closed_at": "2023-10-25T16:06:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI came to know that we can do the document question answering in langchain in different ways. One way is - using **load_qa_chain** \r\n\r\nAlso it seems there are two ways to use **load_qa_chain**\r\n\r\n1) with **run()**\r\n```\r\nfrom langchain.chains.question_answering import load_qa_chain\r\nchain = load_qa_chain(llm, chain_type=\"stuff\")\r\nresult = chain.run(input_documents=docs, question=query)\r\n```\r\n\r\n2)without **run**\r\n```\r\nfrom langchain.chains.question_answering import load_qa_chain\r\nchain = load_qa_chain(llm, chain_type=\"stuff\")\r\nresult = chain({\"input_documents\": docs, \"question\": query}, return_only_outputs=True)\r\n```\r\n\r\nwhat is the exact difference between these two methods?\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7876/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7876/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7874",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7874/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7874/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7874/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7874",
        "id": 1809422407,
        "node_id": "PR_kwDOIPDwls5VwjtJ",
        "number": 7874,
        "title": "Docs Nits",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-18T08:26:36Z",
        "updated_at": "2023-07-18T08:50:15Z",
        "closed_at": "2023-07-18T08:50:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7874",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7874",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7874.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7874.patch",
            "merged_at": "2023-07-18T08:50:14Z"
        },
        "body": "Add links to reference docs",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7874/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7874/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7873",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7873/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7873/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7873/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7873",
        "id": 1809372101,
        "node_id": "I_kwDOIPDwls5r2NPF",
        "number": 7873,
        "title": "Refactoring telegram loader",
        "user": {
            "login": "adieyal",
            "id": 420786,
            "node_id": "MDQ6VXNlcjQyMDc4Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/420786?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adieyal",
            "html_url": "https://github.com/adieyal",
            "followers_url": "https://api.github.com/users/adieyal/followers",
            "following_url": "https://api.github.com/users/adieyal/following{/other_user}",
            "gists_url": "https://api.github.com/users/adieyal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adieyal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adieyal/subscriptions",
            "organizations_url": "https://api.github.com/users/adieyal/orgs",
            "repos_url": "https://api.github.com/users/adieyal/repos",
            "events_url": "https://api.github.com/users/adieyal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adieyal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T07:55:37Z",
        "updated_at": "2023-10-24T16:06:13Z",
        "closed_at": "2023-10-24T16:06:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThe current Telegram loader is not very flexible. For example:\r\n\r\n```\r\nasync for message in client.iter_messages(self.chat_entity):\r\n```\r\n\r\nHere are the arguments available in the api\r\n\r\n```\r\n    def iter_messages(\r\n          self: 'TelegramClient',\r\n          entity: 'hints.EntityLike',\r\n          limit: float = None,\r\n          *,\r\n          offset_date: 'hints.DateLike' = None,\r\n          offset_id: int = 0,\r\n          max_id: int = 0,\r\n          min_id: int = 0,\r\n          add_offset: int = 0,\r\n          search: str = None,\r\n          filter: 'typing.Union[types.TypeMessagesFilter, typing.Type[types.TypeMessagesFilter]]' = None,\r\n          from_user: 'hints.EntityLike' = None,\r\n          wait_time: float = None,\r\n          ids: 'typing.Union[int, typing.Sequence[int]]' = None,\r\n          reverse: bool = False,\r\n          reply_to: int = None,\r\n          scheduled: bool = False\r\n  ) -> 'typing.Union[_MessagesIter, _IDsIter]':\r\n      \"\"\"\r\n      Iterator over the messages for the given chat.\r\n\r\n      The default order is from newest to oldest, but this\r\n      behaviour can be changed with the `reverse` parameter.\r\n\r\n      If either `search`, `filter` or `from_user` are provided,\r\n      :tl:`messages.Search` will be used instead of :tl:`messages.getHistory`.\r\n\r\n      .. note::\r\n\r\n          Telegram's flood wait limit for :tl:`GetHistoryRequest` seems to\r\n          be around 30 seconds per 10 requests, therefore a sleep of 1\r\n          second is the default for this limit (or above).\r\n\r\n      Arguments\r\n          entity (`entity`):\r\n              The entity from whom to retrieve the message history.\r\n\r\n              It may be `None` to perform a global search, or\r\n              to get messages by their ID from no particular chat.\r\n              Note that some of the offsets will not work if this\r\n              is the case.\r\n\r\n              Note that if you want to perform a global search,\r\n              you **must** set a non-empty `search` string, a `filter`.\r\n              or `from_user`.\r\n\r\n          limit (`int` | `None`, optional):\r\n              Number of messages to be retrieved. Due to limitations with\r\n              the API retrieving more than 3000 messages will take longer\r\n              than half a minute (or even more based on previous calls).\r\n\r\n              The limit may also be `None`, which would eventually return\r\n              the whole history.\r\n\r\n          offset_date (`datetime`):\r\n              Offset date (messages *previous* to this date will be\r\n              retrieved). Exclusive.\r\n\r\n          offset_id (`int`):\r\n              Offset message ID (only messages *previous* to the given\r\n              ID will be retrieved). Exclusive.\r\n\r\n          max_id (`int`):\r\n              All the messages with a higher (newer) ID or equal to this will\r\n              be excluded.\r\n\r\n          min_id (`int`):\r\n              All the messages with a lower (older) ID or equal to this will\r\n              be excluded.\r\n\r\n          add_offset (`int`):\r\n              Additional message offset (all of the specified offsets +\r\n              this offset = older messages).\r\n\r\n          search (`str`):\r\n              The string to be used as a search query.\r\n\r\n          filter (:tl:`MessagesFilter` | `type`):\r\n              The filter to use when returning messages. For instance,\r\n              :tl:`InputMessagesFilterPhotos` would yield only messages\r\n              containing photos.\r\n\r\n          from_user (`entity`):\r\n              Only messages from this entity will be returned.\r\n\r\n          wait_time (`int`):\r\n              Wait time (in seconds) between different\r\n              :tl:`GetHistoryRequest`. Use this parameter to avoid hitting\r\n              the ``FloodWaitError`` as needed. If left to `None`, it will\r\n              default to 1 second only if the limit is higher than 3000.\r\n\r\n              If the ``ids`` parameter is used, this time will default\r\n              to 10 seconds only if the amount of IDs is higher than 300.\r\n\r\n          ids (`int`, `list`):\r\n              A single integer ID (or several IDs) for the message that\r\n              should be returned. This parameter takes precedence over\r\n              the rest (which will be ignored if this is set). This can\r\n              for instance be used to get the message with ID 123 from\r\n              a channel. Note that if the message doesn't exist, `None`\r\n              will appear in its place, so that zipping the list of IDs\r\n              with the messages can match one-to-one.\r\n\r\n              .. note::\r\n\r\n                  At the time of writing, Telegram will **not** return\r\n                  :tl:`MessageEmpty` for :tl:`InputMessageReplyTo` IDs that\r\n                  failed (i.e. the message is not replying to any, or is\r\n                  replying to a deleted message). This means that it is\r\n                  **not** possible to match messages one-by-one, so be\r\n                  careful if you use non-integers in this parameter.\r\n\r\n          reverse (`bool`, optional):\r\n              If set to `True`, the messages will be returned in reverse\r\n              order (from oldest to newest, instead of the default newest\r\n              to oldest). This also means that the meaning of `offset_id`\r\n              and `offset_date` parameters is reversed, although they will\r\n              still be exclusive. `min_id` becomes equivalent to `offset_id`\r\n              instead of being `max_id` as well since messages are returned\r\n              in ascending order.\r\n\r\n              You cannot use this if both `entity` and `ids` are `None`.\r\n\r\n          reply_to (`int`, optional):\r\n              If set to a message ID, the messages that reply to this ID\r\n              will be returned. This feature is also known as comments in\r\n              posts of broadcast channels, or viewing threads in groups.\r\n\r\n              This feature can only be used in broadcast channels and their\r\n              linked megagroups. Using it in a chat or private conversation\r\n              will result in ``telethon.errors.PeerIdInvalidError`` to occur.\r\n\r\n              When using this parameter, the ``filter`` and ``search``\r\n              parameters have no effect, since Telegram's API doesn't\r\n              support searching messages in replies.\r\n\r\n              .. note::\r\n\r\n                  This feature is used to get replies to a message in the\r\n                  *discussion* group. If the same broadcast channel sends\r\n                  a message and replies to it itself, that reply will not\r\n                  be included in the results.\r\n\r\n          scheduled (`bool`, optional):\r\n              If set to `True`, messages which are scheduled will be returned.\r\n              All other parameter will be ignored for this, except `entity`.\r\n\r\n      Yields\r\n          Instances of `Message <telethon.tl.custom.message.Message>`.\r\n\r\n      Example\r\n          .. code-block:: python\r\n\r\n              # From most-recent to oldest\r\n              async for message in client.iter_messages(chat):\r\n                  print(message.id, message.text)\r\n\r\n              # From oldest to most-recent\r\n              async for message in client.iter_messages(chat, reverse=True):\r\n                  print(message.id, message.text)\r\n\r\n              # Filter by sender\r\n              async for message in client.iter_messages(chat, from_user='me'):\r\n                  print(message.text)\r\n\r\n              # Server-side search with fuzzy text\r\n              async for message in client.iter_messages(chat, search='hello'):\r\n                  print(message.id)\r\n\r\n              # Filter by message type:\r\n              from telethon.tl.types import InputMessagesFilterPhotos\r\n              async for message in client.iter_messages(chat, filter=InputMessagesFilterPhotos):\r\n                  print(message.photo)\r\n\r\n              # Getting comments from a post in a channel:\r\n              async for message in client.iter_messages(channel, reply_to=123):\r\n                  print(message.chat.title, message.text)\r\n      \"\"\"\r\n```\r\n\r\nOf particular interest to me is the ability to specify `offset_date`, `limit`, and `reverse`. Other users may have other needs. I understand that the `BaseLoader` load method signature doesn't allow for any arguments. That leaves two options (perhaps there is a third way?):\r\n\r\n1. Provide something like `**telegram_kwargs` in the TelegramApiChatLoader loader constructor, e.g. \r\n\r\n```\r\nclass TelegramChatApiLoader(BaseLoader):\r\n    \"\"\"Loader that loads Telegram chat json directory dump.\"\"\"\r\n\r\n    def __init__(\r\n        self,\r\n        chat_entity: Optional[EntityLike] = None,\r\n        api_id: Optional[int] = None,\r\n        api_hash: Optional[str] = None,\r\n        username: Optional[str] = None,\r\n        file_path: str = \"telegram_data.json\",\r\n        **telegram_kwargs # <---- add this new argument\r\n    ):\r\n  ```\r\n2. Alternatively, refactor the `fetch_data_from_telegram` method and extract `async for message in client.iter_messages(self.chat_entity):` into a separate method that can be overriden by child classes, e.g.:\r\n\r\n```\r\nasync def fetch_data_from_telegram(self) -> None:\r\n        \"\"\"Fetch data from Telegram API and save it as a JSON file.\"\"\"\r\n        from telethon.sync import TelegramClient\r\n\r\n        data = []\r\n        async with TelegramClient(self.username, self.api_id, self.api_hash) as client:\r\n            # change this line to call a local method\r\n            async for message in self.iter_messages(client, self.chat_entity):\r\n                is_reply = message.reply_to is not None\r\n                reply_to_id = message.reply_to.reply_to_msg_id if is_reply else None\r\n                data.append(\r\n                    {\r\n                        \"sender_id\": message.sender_id,\r\n                        \"text\": message.text,\r\n                        \"date\": message.date.isoformat(),\r\n                        \"message.id\": message.id,\r\n                        \"is_reply\": is_reply,\r\n                        \"reply_to_id\": reply_to_id,\r\n                    }\r\n                )\r\n\r\n        with open(self.file_path, \"w\", encoding=\"utf-8\") as f:\r\n            json.dump(data, f, ensure_ascii=False, indent=4)\r\n            \r\n    **# Add this new method**\r\n    def iter_messages(client: TelegramClient, chat_entity: Optional[EntityLike]):\r\n        return client.iter_messages(self.chat_entity, self._offset, self._limit, ...):\r\n            \r\n            ```\r\n            \r\nA child class can then override the constructor and the `iter_message` method.\r\nMy current approach is to override the entire `fetch_data_from_telegram` method. This is problematic since I am duplicating code that may change in future versions of langchain\r\n      \r\n     \n\n### Motivation\n\nMy use case is pretty simple, return all message starting from a certain date. As I understand the current implementation, the entire history is returned.\n\n### Your contribution\n\nI'm happy to submit a PR if one of the abovementioned approaches is approved.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7873/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7873/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7872",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7872/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7872/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7872/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7872",
        "id": 1809342516,
        "node_id": "I_kwDOIPDwls5r2GA0",
        "number": 7872,
        "title": "OperationalError with docsearch",
        "user": {
            "login": "rena9155",
            "id": 89635085,
            "node_id": "MDQ6VXNlcjg5NjM1MDg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/89635085?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rena9155",
            "html_url": "https://github.com/rena9155",
            "followers_url": "https://api.github.com/users/rena9155/followers",
            "following_url": "https://api.github.com/users/rena9155/following{/other_user}",
            "gists_url": "https://api.github.com/users/rena9155/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rena9155/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rena9155/subscriptions",
            "organizations_url": "https://api.github.com/users/rena9155/orgs",
            "repos_url": "https://api.github.com/users/rena9155/repos",
            "events_url": "https://api.github.com/users/rena9155/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rena9155/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-07-18T07:40:27Z",
        "updated_at": "2023-10-24T16:06:18Z",
        "closed_at": "2023-10-24T16:06:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nRunning on Colab.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.document_loaders import GoogleDriveLoader\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain import OpenAI\r\nfrom langchain.document_loaders import PyPDFDirectoryLoader\r\nfrom langchain.document_loaders import PyPDFLoader\r\nfrom langchain.chains import RetrievalQA\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = 'Your API Key'\r\n\r\nloader = GoogleDriveLoader(\r\n    folder_id=\"Your folder ID\",\r\n    recursive=True,\r\n)\r\n\r\ndocs = loader.load()\r\ntext_splitter = CharacterTextSplitter(chunk_size=100, chunk_overlap=0)\r\nsplit_docs = text_splitter.split_documents(docs)\r\n\r\nembeddings = OpenAIEmbeddings()\r\ndocsearch = Chroma.from_documents(split_docs, embeddings)\r\n\n\n### Expected behavior\n\nExpect to load embedding into Chroma, then create a QA object upon that. The code was able to run without a problem yesterday but encountered an error today",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7872/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7872/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7871",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7871/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7871/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7871/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7871",
        "id": 1809306605,
        "node_id": "PR_kwDOIPDwls5VwKXJ",
        "number": 7871,
        "title": "LS0010",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-18T07:19:24Z",
        "updated_at": "2023-07-18T07:28:38Z",
        "closed_at": "2023-07-18T07:28:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7871",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7871",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7871.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7871.patch",
            "merged_at": "2023-07-18T07:28:38Z"
        },
        "body": "Bump langsmith version. Has some additional UX improvements",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7871/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7871/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7870",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7870/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7870/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7870/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7870",
        "id": 1809165614,
        "node_id": "PR_kwDOIPDwls5VvrUD",
        "number": 7870,
        "title": "Some mitigations for RCE in PAL chain",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-18T05:51:46Z",
        "updated_at": "2023-07-18T05:58:48Z",
        "closed_at": "2023-07-18T05:58:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7870",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7870",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7870.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7870.patch",
            "merged_at": "2023-07-18T05:58:47Z"
        },
        "body": "Some docstring / small nits to #6003",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7870/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7870/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7869",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7869/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7869/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7869/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7869",
        "id": 1809140912,
        "node_id": "I_kwDOIPDwls5r1Uyw",
        "number": 7869,
        "title": "Can't use SQLdatabasechain with Multipromptchain ",
        "user": {
            "login": "Boopalanoptisol",
            "id": 105263483,
            "node_id": "U_kgDOBkYxew",
            "avatar_url": "https://avatars.githubusercontent.com/u/105263483?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Boopalanoptisol",
            "html_url": "https://github.com/Boopalanoptisol",
            "followers_url": "https://api.github.com/users/Boopalanoptisol/followers",
            "following_url": "https://api.github.com/users/Boopalanoptisol/following{/other_user}",
            "gists_url": "https://api.github.com/users/Boopalanoptisol/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Boopalanoptisol/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Boopalanoptisol/subscriptions",
            "organizations_url": "https://api.github.com/users/Boopalanoptisol/orgs",
            "repos_url": "https://api.github.com/users/Boopalanoptisol/repos",
            "events_url": "https://api.github.com/users/Boopalanoptisol/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Boopalanoptisol/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T05:25:09Z",
        "updated_at": "2023-10-24T16:06:23Z",
        "closed_at": "2023-10-24T16:06:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "\r\n\r\n\r\n**When i try to use Multiprompt chain  getting the below error. Any Suggestions for Solving this Issue??**\r\n\r\n\r\nValidationError: 16 validation errors for MultiPromptChain destination_chains -> list -> database extra fields not permitted (type=value_error.extra) destination_chains -> list -> input_key extra fields not permitted (type=value_error.extra) destination_chains -> list -> llm_chain extra fields not permitted (type=value_error.extra) destination_chains -> list -> query_checker_prompt extra fields not permitted (type=value_error.extra) destination_chains -> list -> return_direct extra fields not permitted (type=value_error.extra) destination_chains -> list -> return_intermediate_steps extra fields not permitted (type=value_error.extra) destination_chains -> list -> top_k extra fields not permitted (type=value_error.extra) destination_chains -> list -> use_query_checker extra fields not permitted (type=value_error.extra) destination_chains -> query -> database extra fields not permitted (type=value_error.extra) destination_chains -> query -> input_key extra fields not permitted (type=value_error.extra) destination_chains -> query -> llm_chain extra fields not permitted (type=value_error.extra) destination_chains -> query -> query_checker_prompt extra fields not permitted (type=value_error.extra) destination_chains -> query -> return_direct extra fields not permitted (type=value_error.extra) destination_chains -> query -> return_intermediate_steps extra fields not permitted (type=value_error.extra) destination_chains -> query -> top_k extra fields not permitted (type=value_error.extra) destination_chains -> query -> use_query_checker extra fields not permitted (type=value_error.extra)\r\n\r\n\r\n**Getting the Above error when i try to Use the Below code. Any Suggestions to Solve the Above error??**\r\n\r\n\r\nphysics_template = \"\"\"You are a very smart Chatbot for helping users with physics-related questions. \\\r\nYou excel at answering queries about the laws of nature and phenomena. \\\r\nWhen you don't have an answer, you admit that you don't know.\r\n\r\nHere is a physics question:\r\n{input}\"\"\"\r\n\r\nmath_template = \"\"\"You are a highly skilled mathematician Chatbot. \\\r\nYou specialize in answering math questions of all levels of difficulty. \\\r\nYou break down complex problems into simpler components and provide comprehensive solutions.\r\n\r\nHere is a math question:\r\n{input}\"\"\"\r\n\r\nprompt_infos = [\r\n    {\r\n        \"name\": \"list\",\r\n        \"description\": \"Good for answering questions about query the data\",\r\n        \"prompt_template\": physics_template,\r\n    },\r\n    {\r\n        \"name\": \"query\",\r\n        \"description\": \"Good for answering math questions\",\r\n        \"prompt_template\": math_template,\r\n    },\r\n]\r\n\r\ndb = SQLDatabase.from_uri(\r\n    **\"YOUR DATABASE URI\")**\r\n\r\n\r\nllm = OpenAI(temperature=0, model=\"text-davinci-003\", max_tokens=1000,\r\n                  openai_api_key=\"**YOUR OPENAI API KEY**\")\r\ndestination_chains = {}\r\ntextcontainer = st.container()\r\nwith textcontainer:\r\n    input = st.text_input(\"Query: \", key=\"input\")\r\n    if input:\r\n     for p_info in prompt_infos:\r\n         name = p_info[\"name\"]\r\n         prompt_template = p_info[\"prompt_template\"]\r\n         prompt = PromptTemplate(template=prompt_template, input_variables=[\"input\"])\r\n         db_chain = SQLDatabaseChain(\r\n    llm=llm, database=db, verbose=True,prompt=prompt)\r\n         destination_chains[name] =  db_chain\r\n      \r\n     default_chain = ConversationChain(llm=llm, output_key=\"text\")\r\n     destinations = [f\"{p['name']}: {p['description']}\" for p in prompt_infos]\r\n     destinations_str = \"\\n\".join(destinations)\r\n     router_template = MULTI_PROMPT_ROUTER_TEMPLATE.format(destinations=destinations_str)\r\n     router_prompt = PromptTemplate(\r\n         template=router_template,\r\n         input_variables=[\"input\"],\r\n         output_parser=RouterOutputParser(),\r\n     )\r\n     router_chain = LLMRouterChain.from_llm(llm, router_prompt)\r\n     db_chain = MultiPromptChain(\r\n         router_chain=router_chain,\r\n         destination_chains=destination_chains,\r\n         default_chain=default_chain,\r\n         verbose=True,\r\n     )\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7869/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7869/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7868",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7868/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7868/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7868/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7868",
        "id": 1809131863,
        "node_id": "PR_kwDOIPDwls5Vvkjq",
        "number": 7868,
        "title": "Feature: Add openai_api_model attribute to Doctran models",
        "user": {
            "login": "aidendle94",
            "id": 37786342,
            "node_id": "MDQ6VXNlcjM3Nzg2MzQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/37786342?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aidendle94",
            "html_url": "https://github.com/aidendle94",
            "followers_url": "https://api.github.com/users/aidendle94/followers",
            "following_url": "https://api.github.com/users/aidendle94/following{/other_user}",
            "gists_url": "https://api.github.com/users/aidendle94/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aidendle94/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aidendle94/subscriptions",
            "organizations_url": "https://api.github.com/users/aidendle94/orgs",
            "repos_url": "https://api.github.com/users/aidendle94/repos",
            "events_url": "https://api.github.com/users/aidendle94/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aidendle94/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T05:17:24Z",
        "updated_at": "2023-08-21T02:08:08Z",
        "closed_at": "2023-07-20T14:27:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7868",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7868",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7868.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7868.patch",
            "merged_at": "2023-07-20T14:27:56Z"
        },
        "body": "\r\n  - Description: Added the ability to define the open AI model.\r\n  - Issue: Currently the Doctran instance uses gpt-4 by default, this does not work if the user has no access to gpt -4.\r\n  - rlancemartin, @eyurtsev, @baskaryan\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7868/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7866",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7866/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7866/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7866/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7866",
        "id": 1809027603,
        "node_id": "PR_kwDOIPDwls5VvNU5",
        "number": 7866,
        "title": "docstrings `agents`",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-18T03:51:52Z",
        "updated_at": "2023-07-18T16:01:05Z",
        "closed_at": "2023-07-18T09:23:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7866",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7866",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7866.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7866.patch",
            "merged_at": "2023-07-18T09:23:25Z"
        },
        "body": "Added/Updated docstrings for `agents`\r\n@baskaryan\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7866/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7866/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7865",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7865/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7865/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7865/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7865",
        "id": 1809020813,
        "node_id": "I_kwDOIPDwls5r03eN",
        "number": 7865,
        "title": "Chroma vectorstore add_texts() method does not return ids when there is a metadatas argument",
        "user": {
            "login": "jciaffi",
            "id": 62593000,
            "node_id": "MDQ6VXNlcjYyNTkzMDAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/62593000?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jciaffi",
            "html_url": "https://github.com/jciaffi",
            "followers_url": "https://api.github.com/users/jciaffi/followers",
            "following_url": "https://api.github.com/users/jciaffi/following{/other_user}",
            "gists_url": "https://api.github.com/users/jciaffi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jciaffi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jciaffi/subscriptions",
            "organizations_url": "https://api.github.com/users/jciaffi/orgs",
            "repos_url": "https://api.github.com/users/jciaffi/repos",
            "events_url": "https://api.github.com/users/jciaffi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jciaffi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-07-18T03:42:15Z",
        "updated_at": "2023-07-28T23:17:32Z",
        "closed_at": "2023-07-28T23:17:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlatest\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\ncollection.add_texts([\"coucou\"], metadatas = [{ 'source' : \"here\"}])\r\nreturns an empty list\n\n### Expected behavior\n\noriginal add_texts() method : \r\nhttps://github.com/hwchase17/langchain/blob/master/langchain/vectorstores/chroma.py#L144\r\n\r\nI fixed it by adding the ids_copy at the beginning : \r\n    \r\n```\r\n...\r\n        if ids is None:\r\n            ids = [str(uuid.uuid1()) for _ in texts]\r\n\r\n        ids_copy = ids\r\n...\r\n```\r\nAnd by returning it :\r\n ```\r\n        return ids_copy\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7865/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7865/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7864",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7864/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7864/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7864/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7864",
        "id": 1809009881,
        "node_id": "PR_kwDOIPDwls5VvJq0",
        "number": 7864,
        "title": "add HuggingGPT Agent",
        "user": {
            "login": "tricktreat",
            "id": 25740077,
            "node_id": "MDQ6VXNlcjI1NzQwMDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/25740077?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tricktreat",
            "html_url": "https://github.com/tricktreat",
            "followers_url": "https://api.github.com/users/tricktreat/followers",
            "following_url": "https://api.github.com/users/tricktreat/following{/other_user}",
            "gists_url": "https://api.github.com/users/tricktreat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tricktreat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tricktreat/subscriptions",
            "organizations_url": "https://api.github.com/users/tricktreat/orgs",
            "repos_url": "https://api.github.com/users/tricktreat/repos",
            "events_url": "https://api.github.com/users/tricktreat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tricktreat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-18T03:26:14Z",
        "updated_at": "2023-07-24T17:50:23Z",
        "closed_at": "2023-07-24T17:50:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7864",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7864",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7864.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7864.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n\r\n- Description: add HuggingGPT Agent, see the [paper](https://arxiv.org/abs/2303.17580) and the [original project](https://github.com/microsoft/JARVIS).\r\n- Notebook: add a [notebook](https://github.com/tricktreat/langchain/blob/bc840fe4307690505b3c0b051e0e2d9726777437/docs/extras/use_cases/autonomous_agents/hugginggpt.ipynb) showing its use.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7864/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7864/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7863",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7863/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7863/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7863/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7863",
        "id": 1808847391,
        "node_id": "PR_kwDOIPDwls5Vumns",
        "number": 7863,
        "title": "docs: Mendable: Fixes pretty sources not working",
        "user": {
            "login": "nickscamara",
            "id": 20311743,
            "node_id": "MDQ6VXNlcjIwMzExNzQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20311743?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickscamara",
            "html_url": "https://github.com/nickscamara",
            "followers_url": "https://api.github.com/users/nickscamara/followers",
            "following_url": "https://api.github.com/users/nickscamara/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickscamara/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickscamara/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickscamara/subscriptions",
            "organizations_url": "https://api.github.com/users/nickscamara/orgs",
            "repos_url": "https://api.github.com/users/nickscamara/repos",
            "events_url": "https://api.github.com/users/nickscamara/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickscamara/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-18T00:52:30Z",
        "updated_at": "2023-07-18T01:23:46Z",
        "closed_at": "2023-07-18T01:23:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7863",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7863",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7863.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7863.patch",
            "merged_at": "2023-07-18T01:23:46Z"
        },
        "body": "This new version fixes the\"Verified Sources\" display that got broken. Instead of displaying the full URL, it shows the title of the page the source is from.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7863/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7863/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7862",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7862/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7862/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7862/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7862",
        "id": 1808805243,
        "node_id": "PR_kwDOIPDwls5VudnL",
        "number": 7862,
        "title": "Add metadata and page_content filters of documents in AwaDB",
        "user": {
            "login": "ljeagle",
            "id": 15918167,
            "node_id": "MDQ6VXNlcjE1OTE4MTY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15918167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ljeagle",
            "html_url": "https://github.com/ljeagle",
            "followers_url": "https://api.github.com/users/ljeagle/followers",
            "following_url": "https://api.github.com/users/ljeagle/following{/other_user}",
            "gists_url": "https://api.github.com/users/ljeagle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ljeagle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ljeagle/subscriptions",
            "organizations_url": "https://api.github.com/users/ljeagle/orgs",
            "repos_url": "https://api.github.com/users/ljeagle/repos",
            "events_url": "https://api.github.com/users/ljeagle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ljeagle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T23:54:44Z",
        "updated_at": "2023-07-18T14:50:18Z",
        "closed_at": "2023-07-18T14:50:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7862",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7862",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7862.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7862.patch",
            "merged_at": "2023-07-18T14:50:18Z"
        },
        "body": "1. Add the metadata filter of documents.\r\n2. Add the text page_content filter of documents\r\n3. fix the bug of similarity_search_with_score\r\n\r\nImprovement and fix bug of AwaDB\r\nFix the conflict https://github.com/hwchase17/langchain/pull/7840\r\n@rlancemartin @eyurtsev  Thanks!\r\n \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7862/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7861",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7861/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7861/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7861/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7861",
        "id": 1808769881,
        "node_id": "PR_kwDOIPDwls5VuV40",
        "number": 7861,
        "title": "WeaviateHybridSearchRetriever option to enable scores.",
        "user": {
            "login": "IdkwhatImD0ing",
            "id": 91146598,
            "node_id": "MDQ6VXNlcjkxMTQ2NTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/91146598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IdkwhatImD0ing",
            "html_url": "https://github.com/IdkwhatImD0ing",
            "followers_url": "https://api.github.com/users/IdkwhatImD0ing/followers",
            "following_url": "https://api.github.com/users/IdkwhatImD0ing/following{/other_user}",
            "gists_url": "https://api.github.com/users/IdkwhatImD0ing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IdkwhatImD0ing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IdkwhatImD0ing/subscriptions",
            "organizations_url": "https://api.github.com/users/IdkwhatImD0ing/orgs",
            "repos_url": "https://api.github.com/users/IdkwhatImD0ing/repos",
            "events_url": "https://api.github.com/users/IdkwhatImD0ing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IdkwhatImD0ing/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T23:16:01Z",
        "updated_at": "2023-07-18T14:57:18Z",
        "closed_at": "2023-07-18T14:57:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7861",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7861",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7861.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7861.patch",
            "merged_at": "2023-07-18T14:57:17Z"
        },
        "body": "Description: This PR adds the option to retrieve scores and explanations in the WeaviateHybridSearchRetriever. This feature improves the usability of the retriever by allowing users to understand the scoring logic behind the search results and further refine their search queries.\r\n\r\nIssue: This PR is a solution to the issue #7855 \r\nDependencies: This PR does not introduce any new dependencies.\r\n\r\nTag maintainer: @rlancemartin, @eyurtsev\r\n\r\nI have included a unit test for the added feature, ensuring that it retrieves scores and explanations correctly. I have also included an example notebook demonstrating its use.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7861/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7860",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7860/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7860/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7860/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7860",
        "id": 1808753847,
        "node_id": "PR_kwDOIPDwls5VuSTb",
        "number": 7860,
        "title": "Adding Docs for `PromptLayerCallbackHandler`",
        "user": {
            "login": "Jped",
            "id": 5013466,
            "node_id": "MDQ6VXNlcjUwMTM0NjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5013466?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jped",
            "html_url": "https://github.com/Jped",
            "followers_url": "https://api.github.com/users/Jped/followers",
            "following_url": "https://api.github.com/users/Jped/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jped/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jped/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jped/subscriptions",
            "organizations_url": "https://api.github.com/users/Jped/orgs",
            "repos_url": "https://api.github.com/users/Jped/repos",
            "events_url": "https://api.github.com/users/Jped/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jped/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T23:01:43Z",
        "updated_at": "2023-07-18T14:51:16Z",
        "closed_at": "2023-07-18T14:51:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7860",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7860",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7860.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7860.patch",
            "merged_at": "2023-07-18T14:51:16Z"
        },
        "body": "@baskaryan\r\nHere I am adding documentation for the `PromptLayerCallbackHandler`.\r\nWhen we created the initial PR for the callback handler the docs were causing issues, so we merged without the docs.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7860/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7860/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7859",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7859/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7859/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7859/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7859",
        "id": 1808745491,
        "node_id": "PR_kwDOIPDwls5VuQfm",
        "number": 7859,
        "title": "docstrings `output_parsers`",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-17T22:51:27Z",
        "updated_at": "2023-07-18T16:00:49Z",
        "closed_at": "2023-07-18T14:51:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7859",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7859",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7859.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7859.patch",
            "merged_at": "2023-07-18T14:51:45Z"
        },
        "body": "Added/updated the docstrings from `output_parsers`\r\n @baskaryan\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7859/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7859/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7858",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7858/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7858/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7858/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7858",
        "id": 1808679085,
        "node_id": "PR_kwDOIPDwls5VuB0a",
        "number": 7858,
        "title": "docstrings `retrievers`",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T21:48:03Z",
        "updated_at": "2023-07-18T01:37:11Z",
        "closed_at": "2023-07-18T00:47:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7858",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7858",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7858.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7858.patch",
            "merged_at": "2023-07-18T00:47:17Z"
        },
        "body": "Added/updated docstrings `retrievers`\r\n\r\n@baskaryan\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7858/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7857",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7857/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7857/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7857/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7857",
        "id": 1808618706,
        "node_id": "PR_kwDOIPDwls5Vt0dV",
        "number": 7857,
        "title": "Google Cloud Enterprise Search retriever",
        "user": {
            "login": "jarokaz",
            "id": 10439102,
            "node_id": "MDQ6VXNlcjEwNDM5MTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10439102?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarokaz",
            "html_url": "https://github.com/jarokaz",
            "followers_url": "https://api.github.com/users/jarokaz/followers",
            "following_url": "https://api.github.com/users/jarokaz/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarokaz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarokaz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarokaz/subscriptions",
            "organizations_url": "https://api.github.com/users/jarokaz/orgs",
            "repos_url": "https://api.github.com/users/jarokaz/repos",
            "events_url": "https://api.github.com/users/jarokaz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarokaz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-17T21:01:15Z",
        "updated_at": "2023-07-27T16:26:44Z",
        "closed_at": "2023-07-19T01:24:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7857",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7857",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7857.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7857.patch",
            "merged_at": "2023-07-19T01:24:08Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nAdded a retriever that encapsulated Google Cloud Enterprise Search.\r\n\r\n@rlancemartin, @eyurtsev\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7857/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7857/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7856",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7856/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7856/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7856/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7856",
        "id": 1808596631,
        "node_id": "PR_kwDOIPDwls5Vtvp1",
        "number": 7856,
        "title": "Add text_content kwarg to BrowserlessLoader",
        "user": {
            "login": "jagilley",
            "id": 37783831,
            "node_id": "MDQ6VXNlcjM3NzgzODMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/37783831?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jagilley",
            "html_url": "https://github.com/jagilley",
            "followers_url": "https://api.github.com/users/jagilley/followers",
            "following_url": "https://api.github.com/users/jagilley/following{/other_user}",
            "gists_url": "https://api.github.com/users/jagilley/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jagilley/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jagilley/subscriptions",
            "organizations_url": "https://api.github.com/users/jagilley/orgs",
            "repos_url": "https://api.github.com/users/jagilley/repos",
            "events_url": "https://api.github.com/users/jagilley/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jagilley/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-17T20:43:18Z",
        "updated_at": "2023-07-18T00:02:19Z",
        "closed_at": "2023-07-18T00:02:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7856",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7856",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7856.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7856.patch",
            "merged_at": "2023-07-18T00:02:19Z"
        },
        "body": "Added keyword argument to toggle between getting the text content of a site versus its HTML when using the `BrowserlessLoader`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7856/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7855",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7855/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7855/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7855/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7855",
        "id": 1808588557,
        "node_id": "I_kwDOIPDwls5rzN8N",
        "number": 7855,
        "title": "WeaviateHybridSearchRetriever has no option to retrieve scores and explanations",
        "user": {
            "login": "IdkwhatImD0ing",
            "id": 91146598,
            "node_id": "MDQ6VXNlcjkxMTQ2NTk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/91146598?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/IdkwhatImD0ing",
            "html_url": "https://github.com/IdkwhatImD0ing",
            "followers_url": "https://api.github.com/users/IdkwhatImD0ing/followers",
            "following_url": "https://api.github.com/users/IdkwhatImD0ing/following{/other_user}",
            "gists_url": "https://api.github.com/users/IdkwhatImD0ing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/IdkwhatImD0ing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/IdkwhatImD0ing/subscriptions",
            "organizations_url": "https://api.github.com/users/IdkwhatImD0ing/orgs",
            "repos_url": "https://api.github.com/users/IdkwhatImD0ing/repos",
            "events_url": "https://api.github.com/users/IdkwhatImD0ing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/IdkwhatImD0ing/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T20:38:13Z",
        "updated_at": "2023-07-18T19:50:18Z",
        "closed_at": "2023-07-18T19:50:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThe WeaviateHybridSearchRetriever does not currently have an option to retrieve scores and explanations. The lack of this feature limits the usability of the retriever, as users cannot gain insights into the scoring logic behind the search results. The feature to retrieve scores and explanations, as provided in the Weaviate library, needs to be integrated into the WeaviateHybridSearchRetriever.\r\n\r\nRelevant Weaviate library documentation: [Hybrid search](https://weaviate.io/developers/weaviate/search/hybrid)\n\n### Motivation\n\nHaving access to scores and explanations is crucial for users who need to understand how each result has been scored by the hybrid search algorithm. Such understanding can help in refining search queries and filtering results that do not meet certain score thresholds. In the absence of this feature, it becomes difficult to optimize search queries and the quality of the search results can be compromised.\r\n\r\n\n\n### Your contribution\n\nI am ready to contribute to implementing this feature. I propose to enhance the WeaviateHybridSearchRetriever to include the retrieval of score and explainScore properties from the Weaviate library. This will involve adding relevant parameters and methods in the WeaviateHybridSearchRetriever class. I will also ensure the addition of appropriate tests to validate the functionality and correctness of the implementation. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7855/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7855/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7854",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7854/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7854/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7854/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7854",
        "id": 1808509106,
        "node_id": "I_kwDOIPDwls5ry6iy",
        "number": 7854,
        "title": "Strange chunks coming out of CharacterTextSplitter starting in version 0.0.226",
        "user": {
            "login": "Karin-Basis",
            "id": 18706112,
            "node_id": "MDQ6VXNlcjE4NzA2MTEy",
            "avatar_url": "https://avatars.githubusercontent.com/u/18706112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Karin-Basis",
            "html_url": "https://github.com/Karin-Basis",
            "followers_url": "https://api.github.com/users/Karin-Basis/followers",
            "following_url": "https://api.github.com/users/Karin-Basis/following{/other_user}",
            "gists_url": "https://api.github.com/users/Karin-Basis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Karin-Basis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Karin-Basis/subscriptions",
            "organizations_url": "https://api.github.com/users/Karin-Basis/orgs",
            "repos_url": "https://api.github.com/users/Karin-Basis/repos",
            "events_url": "https://api.github.com/users/Karin-Basis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Karin-Basis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-17T19:53:47Z",
        "updated_at": "2023-10-26T16:06:03Z",
        "closed_at": "2023-10-26T16:06:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain version 0.0.226\r\nM1 Mac\r\nPython 3.11.3\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @mmz-001 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\n\r\ndef main():\r\n    sample_text = \"This is a series of short sentences. I want them to be separated at the periods.  Three sentences should be enough.\"\r\n    text_splitter = CharacterTextSplitter(separator=\". \", chunk_size=30, chunk_overlap=0)\r\n    chunks = text_splitter.split_text(sample_text)\r\n    for chunk in chunks:\r\n        print(\"CHUNK:\", chunk)\r\n\r\nif __name__ == \"__main__\":\r\n    main()\r\n```\r\n\r\nOutput in version 0.0.225:\r\n```\r\nCHUNK: This is a series of short sentences\r\nCHUNK: I want them to be separated at the periods\r\nCHUNK: Three sentences should be enough.\r\n```\r\n\r\nOutput in version 0.0.226:\r\n```\r\nCHUNK: Thi. i. serie. o. shor\r\nCHUNK: sentences. wan. the. t. b\r\nCHUNK: separate. a. th. periods\r\nCHUNK: Thre. sentence. shoul. b\r\nCHUNK: enough.\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe output seen in version 0.0.225 should be the same in version 0.0.226.\r\n\r\nI suspect that the bug is related to the fix for this issue https://github.com/hwchase17/langchain/pull/7263.  We have also noticed that in recent versions, the metadata start_index is always -1 when using create_documents().  Please let me know if I should file a separate issue for this.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7854/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7854/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7853",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7853/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7853/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7853/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7853",
        "id": 1808446455,
        "node_id": "PR_kwDOIPDwls5VtRlK",
        "number": 7853,
        "title": "propagate RetrievalQA chain callbacks through its own LLMChain and StuffDocumentsChain",
        "user": {
            "login": "alecf",
            "id": 135340,
            "node_id": "MDQ6VXNlcjEzNTM0MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/135340?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alecf",
            "html_url": "https://github.com/alecf",
            "followers_url": "https://api.github.com/users/alecf/followers",
            "following_url": "https://api.github.com/users/alecf/following{/other_user}",
            "gists_url": "https://api.github.com/users/alecf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alecf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alecf/subscriptions",
            "organizations_url": "https://api.github.com/users/alecf/orgs",
            "repos_url": "https://api.github.com/users/alecf/repos",
            "events_url": "https://api.github.com/users/alecf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alecf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T19:21:20Z",
        "updated_at": "2023-08-08T16:04:44Z",
        "closed_at": "2023-08-04T03:11:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7853",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7853",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7853.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7853.patch",
            "merged_at": "2023-08-04T03:11:58Z"
        },
        "body": "This is another case, similar to #5572 and #7565 where the callbacks are getting dropped during construction of the chains.\r\n\r\ntagging @hwchase17 and @agola11 for callbacks propagation\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7853/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7853/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7852",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7852/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7852/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7852/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7852",
        "id": 1808404445,
        "node_id": "PR_kwDOIPDwls5VtIEJ",
        "number": 7852,
        "title": "update notebook",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-17T19:01:15Z",
        "updated_at": "2023-07-17T21:46:43Z",
        "closed_at": "2023-07-17T21:46:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7852",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7852",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7852.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7852.patch",
            "merged_at": "2023-07-17T21:46:42Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7852/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7852/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7851",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7851/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7851/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7851/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7851",
        "id": 1808378977,
        "node_id": "I_kwDOIPDwls5ryaxh",
        "number": 7851,
        "title": "Error while creating WeaviateHybridSearchRetriever instance",
        "user": {
            "login": "ashutosh-suryawanshi",
            "id": 41099320,
            "node_id": "MDQ6VXNlcjQxMDk5MzIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/41099320?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashutosh-suryawanshi",
            "html_url": "https://github.com/ashutosh-suryawanshi",
            "followers_url": "https://api.github.com/users/ashutosh-suryawanshi/followers",
            "following_url": "https://api.github.com/users/ashutosh-suryawanshi/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashutosh-suryawanshi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashutosh-suryawanshi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashutosh-suryawanshi/subscriptions",
            "organizations_url": "https://api.github.com/users/ashutosh-suryawanshi/orgs",
            "repos_url": "https://api.github.com/users/ashutosh-suryawanshi/repos",
            "events_url": "https://api.github.com/users/ashutosh-suryawanshi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashutosh-suryawanshi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T18:49:19Z",
        "updated_at": "2023-10-02T22:24:09Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain version: 0.0.232\r\nPython version: 3.10.8\r\nPlatform: Windows 11, VS Code\r\n\r\n\r\nFor following usage of WeaviateHybridSearchRetriever - \r\n`w_url = os.environ[\"WEAVIATE_URL\"]`\r\n    `api_key_w= weaviate.AuthApiKey(api_key=os.environ[\"WEAVIATE_API_KEY\"])`\r\n    `wclient = weaviate.Client(url=w_url,\r\n                              auth_client_secret=api_key_w,\r\n                              additional_headers={\r\n                                    \"X-Openai-Api-Key\": os.getenv(\"OPENAI_API_KEY\"),\r\n                               },)`\r\n   `retriever = WeaviateHybridSearchRetriever(wclient, index_name=\"testindex\", text_key=\"text\")`\r\n\r\nGetting following error for the line of retriever instance creation - \r\n`\r\nTypeError: Serializable.__init__() takes 1 positional argument but 2 were given\r\n`\r\n### Who can help?\r\n\r\n@hwchase17\r\n@agola11 \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nFollow the steps given in the official documentation - https://python.langchain.com/docs/modules/data_connection/retrievers/integrations/weaviate-hybrid\r\n\r\n### Expected behavior\r\n\r\nRetriever should be able to initiate correctly and should able to return queried documents.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7851/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7851/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7850",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7850/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7850/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7850/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7850",
        "id": 1808373827,
        "node_id": "PR_kwDOIPDwls5VtBPM",
        "number": 7850,
        "title": "feat: optional post-processing for Unstructured loaders",
        "user": {
            "login": "MthwRobinson",
            "id": 1635179,
            "node_id": "MDQ6VXNlcjE2MzUxNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1635179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MthwRobinson",
            "html_url": "https://github.com/MthwRobinson",
            "followers_url": "https://api.github.com/users/MthwRobinson/followers",
            "following_url": "https://api.github.com/users/MthwRobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/MthwRobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MthwRobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MthwRobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/MthwRobinson/orgs",
            "repos_url": "https://api.github.com/users/MthwRobinson/repos",
            "events_url": "https://api.github.com/users/MthwRobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MthwRobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T18:45:37Z",
        "updated_at": "2023-07-17T19:14:07Z",
        "closed_at": "2023-07-17T19:13:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7850",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7850",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7850.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7850.patch",
            "merged_at": "2023-07-17T19:13:05Z"
        },
        "body": "### Summary\r\n\r\nAdds a post-processing method for Unstructured loaders that allows users to optionally modify or clean extracted elements.\r\n\r\n### Testing\r\n\r\n```python\r\nfrom langchain.document_loaders import UnstructuredFileLoader\r\nfrom unstructured.cleaners.core import clean_extra_whitespace\r\n\r\nloader = UnstructuredFileLoader(\r\n    \"./example_data/layout-parser-paper.pdf\",\r\n    mode=\"elements\",\r\n    post_processors=[clean_extra_whitespace],\r\n)\r\n\r\ndocs = loader.load()\r\ndocs[:5]\r\n```\r\n\r\n\r\n### Reviewrs\r\n  - @rlancemartin\r\n  - @eyurtsev\r\n  - @hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7850/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7850/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7849",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7849/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7849/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7849/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7849",
        "id": 1808339477,
        "node_id": "PR_kwDOIPDwls5Vs5uM",
        "number": 7849,
        "title": "Add post-processing to Web Base url loader",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T18:25:12Z",
        "updated_at": "2023-07-27T15:00:10Z",
        "closed_at": "2023-07-27T15:00:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7849",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7849",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7849.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7849.patch",
            "merged_at": null
        },
        "body": "Text loaded from urls can have low quality formatting (e.g., repeated newlines) that we want to post-process.\r\n\r\nWe add regex substitution and newline compression to WebBaseLoader.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7849/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7849/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7848",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7848/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7848/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7848/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7848",
        "id": 1808339025,
        "node_id": "PR_kwDOIPDwls5Vs5n8",
        "number": 7848,
        "title": "docstrings `tools`",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T18:24:57Z",
        "updated_at": "2023-07-18T01:41:26Z",
        "closed_at": "2023-07-18T00:50:20Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7848",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7848",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7848.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7848.patch",
            "merged_at": "2023-07-18T00:50:20Z"
        },
        "body": "Added docstrings in `tools`.\r\n\r\n @baskaryan\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7848/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7848/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7847",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7847/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7847/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7847/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7847",
        "id": 1808278848,
        "node_id": "PR_kwDOIPDwls5VssPu",
        "number": 7847,
        "title": "add ls link",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-17T17:50:29Z",
        "updated_at": "2023-07-18T14:39:27Z",
        "closed_at": "2023-07-18T14:39:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7847",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7847",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7847.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7847.patch",
            "merged_at": "2023-07-18T14:39:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7847/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7847/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7846",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7846/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7846/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7846/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7846",
        "id": 1808178675,
        "node_id": "PR_kwDOIPDwls5VsWBg",
        "number": 7846,
        "title": "fix: SQLDatabaseChain not return sql query even if return_direct=True",
        "user": {
            "login": "tan-yong-sheng",
            "id": 64836390,
            "node_id": "MDQ6VXNlcjY0ODM2Mzkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/64836390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tan-yong-sheng",
            "html_url": "https://github.com/tan-yong-sheng",
            "followers_url": "https://api.github.com/users/tan-yong-sheng/followers",
            "following_url": "https://api.github.com/users/tan-yong-sheng/following{/other_user}",
            "gists_url": "https://api.github.com/users/tan-yong-sheng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tan-yong-sheng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tan-yong-sheng/subscriptions",
            "organizations_url": "https://api.github.com/users/tan-yong-sheng/orgs",
            "repos_url": "https://api.github.com/users/tan-yong-sheng/repos",
            "events_url": "https://api.github.com/users/tan-yong-sheng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tan-yong-sheng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T16:55:07Z",
        "updated_at": "2023-08-04T03:11:37Z",
        "closed_at": "2023-08-04T03:11:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7846",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7846",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7846.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7846.patch",
            "merged_at": null
        },
        "body": "**Description:** SQLDatabaseChain not return sql query even if return_direct=True\r\n\r\n**Issue:**\r\nfor SQLDatabaseChain, although its parameter set to return_direct=True, it still returns results (e.g., USB wire 98, Laptop 90, Desktop 86, ....) instead of sql query (e.g., SELECT name AS \"Product Category\" FROM category ORDER BY category_id LIMIT 10;)\r\n\r\nI found that it's because final_result variable is wrongly set to result variable instead of sql_cmd if self.return_direct = True, which is different from the documentation: python.langchain.com/docs/modules/chains/popular/sqlite\r\n\r\n**How to replicate the issue**:\r\n```import os\r\nfrom langchain import OpenAI, SQLDatabase, SQLDatabaseChain\r\nfrom langchain.chat_models import ChatOpenAI\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = \"<your openai api key>\"\r\n\r\ndb = SQLDatabase.from_uri(\"<path to your database>\")\r\nllm = ChatOpenAI(temperature=0, verbose=True, model_name=\"gpt-3.5-turbo\")\r\n\r\nquestion = \"What are the top 10 product categories\"\r\nraw_sql = db_chain(question)\r\nraw_sql # you will see the output will not be sql query before this bug fix\r\n\r\n````\r\n\r\n**Tag mantainer:** @hinthornw\r\n\r\n**Dependencies:** No change, as it's just a simple fix by replacing a variable\r\n\r\n**Supporting Evidence:** \r\n\r\n![image](https://github.com/hwchase17/langchain/assets/64836390/d26098eb-7879-4cce-b4b5-eb2ea90017a4)\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7846/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7846/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7845",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7845/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7845/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7845/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7845",
        "id": 1808165032,
        "node_id": "I_kwDOIPDwls5rxmio",
        "number": 7845,
        "title": "DOC: What is the difference between the various QA chains?",
        "user": {
            "login": "FloWsnr",
            "id": 65916600,
            "node_id": "MDQ6VXNlcjY1OTE2NjAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/65916600?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FloWsnr",
            "html_url": "https://github.com/FloWsnr",
            "followers_url": "https://api.github.com/users/FloWsnr/followers",
            "following_url": "https://api.github.com/users/FloWsnr/following{/other_user}",
            "gists_url": "https://api.github.com/users/FloWsnr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FloWsnr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FloWsnr/subscriptions",
            "organizations_url": "https://api.github.com/users/FloWsnr/orgs",
            "repos_url": "https://api.github.com/users/FloWsnr/repos",
            "events_url": "https://api.github.com/users/FloWsnr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FloWsnr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T16:45:46Z",
        "updated_at": "2023-11-03T16:06:52Z",
        "closed_at": "2023-11-03T16:06:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nI think there is lacking documentation on the multitude of chains regarding QA and retrieval.\r\n\r\nThere is:\r\n\r\n- [retrieval_qa](https://github.com/hwchase17/langchain/tree/master/langchain/chains/retrieval_qa)\r\n- [question_answering](https://github.com/hwchase17/langchain/tree/master/langchain/chains/question_answering)\r\n- [qa_with_sources](https://github.com/hwchase17/langchain/tree/master/langchain/chains/qa_with_sources)\r\n- [conversational_retrieval](https://github.com/hwchase17/langchain/tree/master/langchain/chains/conversational_retrieval)\r\n- [chat_vector_db](https://github.com/hwchase17/langchain/tree/master/langchain/chains/chat_vector_db)\r\n- [question answering](https://github.com/hwchase17/langchain/tree/master/langchain/chains/question_answering)\r\n\r\nWhich one should be used when? Which are the base chains used by the others etc?\n\n### Idea or request for content:\n\nA structured documentation of the different chains are needed. Maybe some refactoring of the directory structure to group chains.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7845/reactions",
            "total_count": 3,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7845/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7844",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7844/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7844/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7844/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7844",
        "id": 1808164437,
        "node_id": "PR_kwDOIPDwls5VsS9D",
        "number": 7844,
        "title": "docstrings `prompts`",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T16:45:20Z",
        "updated_at": "2023-07-18T14:58:23Z",
        "closed_at": "2023-07-18T14:58:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7844",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7844",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7844.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7844.patch",
            "merged_at": "2023-07-18T14:58:23Z"
        },
        "body": "Added missed docstrings in `prompts`\r\n@baskaryan\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7844/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7844/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7843",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7843/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7843/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7843/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7843",
        "id": 1808153566,
        "node_id": "PR_kwDOIPDwls5VsQjC",
        "number": 7843,
        "title": "fix nb",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-17T16:39:01Z",
        "updated_at": "2023-07-17T16:39:12Z",
        "closed_at": "2023-07-17T16:39:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7843",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7843",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7843.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7843.patch",
            "merged_at": "2023-07-17T16:39:11Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7843/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7843/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7841",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7841/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7841/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7841/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7841",
        "id": 1808066576,
        "node_id": "I_kwDOIPDwls5rxOgQ",
        "number": 7841,
        "title": "InvalidVectorQuery error when using AzureSearch with vector db",
        "user": {
            "login": "DSgUY",
            "id": 34726269,
            "node_id": "MDQ6VXNlcjM0NzI2MjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/34726269?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DSgUY",
            "html_url": "https://github.com/DSgUY",
            "followers_url": "https://api.github.com/users/DSgUY/followers",
            "following_url": "https://api.github.com/users/DSgUY/following{/other_user}",
            "gists_url": "https://api.github.com/users/DSgUY/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DSgUY/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DSgUY/subscriptions",
            "organizations_url": "https://api.github.com/users/DSgUY/orgs",
            "repos_url": "https://api.github.com/users/DSgUY/repos",
            "events_url": "https://api.github.com/users/DSgUY/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DSgUY/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-07-17T15:46:42Z",
        "updated_at": "2023-11-15T16:07:13Z",
        "closed_at": "2023-11-15T16:07:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.234, windows 10, azure-identity==1.13.0, Python 3.11.4\r\n\r\n### Who can help?\r\n\r\nI manage to create an index in Azure Cognitive Search with _id_, _content_, _vector_content_ and _metadata_ fields.\r\nI check that docs and chunks are not nulls.\r\nI'm getting and error when querying the vector store.\r\n\r\ndocs: \r\n[azuresearch-langchain-example](https://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/azuresearch)\r\n\r\nAny fix for this?\r\n@hwchase17\r\n@agola11\r\nRegards\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\nEmbedding is working as I test:\r\n\r\n```\r\n# Check that embbding is working\r\ninput_text = \"This is for demonstration.\"\r\noutcome = embeddings.embed_query(input_text)\r\n\r\n```\r\nWhen I'm trying to query with:\r\n```\r\n# Perform a similarity search\r\ndocs = vector_store.similarity_search(\r\n    query=\"What did the president say about Ketanji Brown Jackson\",\r\n    k=3,\r\n    search_type=\"similarity\",\r\n)\r\nprint(docs[0].page_content)\r\n```\r\nError:\r\n\r\n```\r\nHttpResponseError: (InvalidRequestParameter) The 'value' property of the vector query can't be null or an empty array. Make sure to enclose the vector within a \"value\" property: '{\"vector\": { \"value\": [  ] } }'\r\nParameter name: vector\r\nCode: InvalidRequestParameter\r\nMessage: The 'value' property of the vector query can't be null or an empty array. Make sure to enclose the vector within a \"value\" property: '{\"vector\": { \"value\": [  ] } }'\r\nParameter name: vector\r\nException Details:\t(InvalidVectorQuery) The 'value' property of the vector query can't be null or an empty array. Make sure to enclose the vector within a \"value\" property: '{\"vector\": { \"value\": [  ] } }'\r\n\tCode: InvalidVectorQuery\r\n\tMessage: The 'value' property of the vector query can't be null or an empty array. Make sure to enclose the vector within a \"value\" property: '{\"vector\": { \"value\": [  ] } }'\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nI can't define is is the azure cognitive configuration index that i manually add or a bug in the code. \r\nSplitting and adding chunks to the vector store (Azure Cognitive Search) all where dont without any warning.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7841/reactions",
            "total_count": 4,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 3
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7841/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7840",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7840/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7840/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7840/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7840",
        "id": 1807975581,
        "node_id": "PR_kwDOIPDwls5VrpjG",
        "number": 7840,
        "title": "Add filter for metadata, text filter for page_content in AwaDB",
        "user": {
            "login": "ljeagle",
            "id": 15918167,
            "node_id": "MDQ6VXNlcjE1OTE4MTY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15918167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ljeagle",
            "html_url": "https://github.com/ljeagle",
            "followers_url": "https://api.github.com/users/ljeagle/followers",
            "following_url": "https://api.github.com/users/ljeagle/following{/other_user}",
            "gists_url": "https://api.github.com/users/ljeagle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ljeagle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ljeagle/subscriptions",
            "organizations_url": "https://api.github.com/users/ljeagle/orgs",
            "repos_url": "https://api.github.com/users/ljeagle/repos",
            "events_url": "https://api.github.com/users/ljeagle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ljeagle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T14:58:10Z",
        "updated_at": "2023-07-17T23:11:51Z",
        "closed_at": "2023-07-17T23:11:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7840",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7840",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7840.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7840.patch",
            "merged_at": null
        },
        "body": "1.add the filter for metadata\r\n2.add text filter in page_content\r\n3.fix the bug of similarity_search_by_vector with scores\r\n\r\nImprovement and fix bug for the AwaDB\r\nPlease review @rlancemartin, @eyurtsev, Thanks!\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7840/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7840/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7839",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7839/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7839/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7839/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7839",
        "id": 1807967519,
        "node_id": "I_kwDOIPDwls5rw2Uf",
        "number": 7839,
        "title": "Self Query Retriever with Google Flan T5 models issue",
        "user": {
            "login": "RanElgedawy",
            "id": 95228400,
            "node_id": "U_kgDOBa0R8A",
            "avatar_url": "https://avatars.githubusercontent.com/u/95228400?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RanElgedawy",
            "html_url": "https://github.com/RanElgedawy",
            "followers_url": "https://api.github.com/users/RanElgedawy/followers",
            "following_url": "https://api.github.com/users/RanElgedawy/following{/other_user}",
            "gists_url": "https://api.github.com/users/RanElgedawy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RanElgedawy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RanElgedawy/subscriptions",
            "organizations_url": "https://api.github.com/users/RanElgedawy/orgs",
            "repos_url": "https://api.github.com/users/RanElgedawy/repos",
            "events_url": "https://api.github.com/users/RanElgedawy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RanElgedawy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-17T14:54:36Z",
        "updated_at": "2023-11-03T18:01:40Z",
        "closed_at": "2023-10-23T16:06:16Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 /home/cloud/anaconda3/envs/mir/lib/python3.10/site-packages/langchain/output_parsers/json.py:32  \u2502\r\n\u2502 in parse_and_check_json_markdown                                                                 \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   29                                                                                             \u2502\r\n\u2502   30 def parse_and_check_json_markdown(text: str, expected_keys: List[str]) -> dict:             \u2502\r\n\u2502   31 \u2502   try:                                                                                    \u2502\r\n\u2502 \u2771 32 \u2502   \u2502   json_obj = parse_json_markdown(text)                                                \u2502\r\n\u2502   33 \u2502   except json.JSONDecodeError as e:                                                       \u2502\r\n\u2502   34 \u2502   \u2502   raise OutputParserException(f\"Got invalid JSON object. Error: {e}\")                 \u2502\r\n\u2502   35 \u2502   for key in expected_keys:                                                               \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/cloud/anaconda3/envs/mir/lib/python3.10/site-packages/langchain/output_parsers/json.py:25  \u2502\r\n\u2502 in parse_json_markdown                                                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   22 \u2502   json_str = json_str.strip()                                                             \u2502\r\n\u2502   23 \u2502                                                                                           \u2502\r\n\u2502   24 \u2502   # Parse the JSON string into a Python dictionary                                        \u2502\r\n\u2502 \u2771 25 \u2502   parsed = json.loads(json_str)                                                           \u2502\r\n\u2502   26 \u2502                                                                                           \u2502\r\n\u2502   27 \u2502   return parsed                                                                           \u2502\r\n\u2502   28                                                                                             \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/cloud/anaconda3/envs/mir/lib/python3.10/json/__init__.py:346 in loads                      \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   343 \u2502   if (cls is None and object_hook is None and                                            \u2502\r\n\u2502   344 \u2502   \u2502   \u2502   parse_int is None and parse_float is None and                                  \u2502\r\n\u2502   345 \u2502   \u2502   \u2502   parse_constant is None and object_pairs_hook is None and not kw):              \u2502\r\n\u2502 \u2771 346 \u2502   \u2502   return _default_decoder.decode(s)                                                  \u2502\r\n\u2502   347 \u2502   if cls is None:                                                                        \u2502\r\n\u2502   348 \u2502   \u2502   cls = JSONDecoder                                                                  \u2502\r\n\u2502   349 \u2502   if object_hook is not None:                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/cloud/anaconda3/envs/mir/lib/python3.10/json/decoder.py:337 in decode                      \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   334 \u2502   \u2502   containing a JSON document).                                                       \u2502\r\n\u2502   335 \u2502   \u2502                                                                                      \u2502\r\n\u2502   336 \u2502   \u2502   \"\"\"                                                                                \u2502\r\n\u2502 \u2771 337 \u2502   \u2502   obj, end = self.raw_decode(s, idx=_w(s, 0).end())                                  \u2502\r\n\u2502   338 \u2502   \u2502   end = _w(s, end).end()                                                             \u2502\r\n\u2502   339 \u2502   \u2502   if end != len(s):                                                                  \u2502\r\n\u2502   340 \u2502   \u2502   \u2502   raise JSONDecodeError(\"Extra data\", s, end)                                    \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/cloud/anaconda3/envs/mir/lib/python3.10/json/decoder.py:355 in raw_decode                  \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   352 \u2502   \u2502   try:                                                                               \u2502\r\n\u2502   353 \u2502   \u2502   \u2502   obj, end = self.scan_once(s, idx)                                              \u2502\r\n\u2502   354 \u2502   \u2502   except StopIteration as err:                                                       \u2502\r\n\u2502 \u2771 355 \u2502   \u2502   \u2502   raise JSONDecodeError(\"Expecting value\", s, err.value) from None               \u2502\r\n\u2502   356 \u2502   \u2502   return obj, end                                                                    \u2502\r\n\u2502   357                                                                                            \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nJSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 /home/cloud/anaconda3/envs/mir/lib/python3.10/site-packages/langchain/chains/query_constructor/b \u2502\r\n\u2502 ase.py:37 in parse                                                                               \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    34 \u2502   \u2502   try:                                                                               \u2502\r\n\u2502    35 \u2502   \u2502   \u2502   expected_keys = [\"query\", \"filter\"]                                            \u2502\r\n\u2502    36 \u2502   \u2502   \u2502   allowed_keys = [\"query\", \"filter\", \"limit\"]                                    \u2502\r\n\u2502 \u2771  37 \u2502   \u2502   \u2502   parsed = parse_and_check_json_markdown(text, expected_keys)                    \u2502\r\n\u2502    38 \u2502   \u2502   \u2502   if len(parsed[\"query\"]) == 0:                                                  \u2502\r\n\u2502    39 \u2502   \u2502   \u2502   \u2502   parsed[\"query\"] = \" \"                                                      \u2502\r\n\u2502    40 \u2502   \u2502   \u2502   if parsed[\"filter\"] == \"NO_FILTER\" or not parsed[\"filter\"]:                    \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/cloud/anaconda3/envs/mir/lib/python3.10/site-packages/langchain/output_parsers/json.py:34  \u2502\r\n\u2502 in parse_and_check_json_markdown                                                                 \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   31 \u2502   try:                                                                                    \u2502\r\n\u2502   32 \u2502   \u2502   json_obj = parse_json_markdown(text)                                                \u2502\r\n\u2502   33 \u2502   except json.JSONDecodeError as e:                                                       \u2502\r\n\u2502 \u2771 34 \u2502   \u2502   raise OutputParserException(f\"Got invalid JSON object. Error: {e}\")                 \u2502\r\n\u2502   35 \u2502   for key in expected_keys:                                                               \u2502\r\n\u2502   36 \u2502   \u2502   if key not in json_obj:                                                             \u2502\r\n\u2502   37 \u2502   \u2502   \u2502   raise OutputParserException(                                                    \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nOutputParserException: Got invalid JSON object. Error: Expecting value: line 1 column 1 (char 0)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\n\u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 Traceback (most recent call last) \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e\r\n\u2502 /home/cloud/anaconda3/envs/mir/lib/python3.10/site-packages/IPython/core/magics/execution.py:132 \u2502\r\n\u2502 5 in time                                                                                        \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   1322 \u2502   \u2502   else:                                                                             \u2502\r\n\u2502   1323 \u2502   \u2502   \u2502   st = clock2()                                                                 \u2502\r\n\u2502   1324 \u2502   \u2502   \u2502   try:                                                                          \u2502\r\n\u2502 \u2771 1325 \u2502   \u2502   \u2502   \u2502   exec(code, glob, local_ns)                                                \u2502\r\n\u2502   1326 \u2502   \u2502   \u2502   \u2502   out=None                                                                  \u2502\r\n\u2502   1327 \u2502   \u2502   \u2502   \u2502   # multi-line %%time case                                                  \u2502\r\n\u2502   1328 \u2502   \u2502   \u2502   \u2502   if expr_val is not None:                                                  \u2502\r\n\u2502 in <module>:1                                                                                    \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/cloud/anaconda3/envs/mir/lib/python3.10/site-packages/langchain/chains/base.py:149 in      \u2502\r\n\u2502 __call__                                                                                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   146 \u2502   \u2502   \u2502   )                                                                              \u2502\r\n\u2502   147 \u2502   \u2502   except (KeyboardInterrupt, Exception) as e:                                        \u2502\r\n\u2502   148 \u2502   \u2502   \u2502   run_manager.on_chain_error(e)                                                  \u2502\r\n\u2502 \u2771 149 \u2502   \u2502   \u2502   raise e                                                                        \u2502\r\n\u2502   150 \u2502   \u2502   run_manager.on_chain_end(outputs)                                                  \u2502\r\n\u2502   151 \u2502   \u2502   final_outputs: Dict[str, Any] = self.prep_outputs(                                 \u2502\r\n\u2502   152 \u2502   \u2502   \u2502   inputs, outputs, return_only_outputs                                           \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/cloud/anaconda3/envs/mir/lib/python3.10/site-packages/langchain/chains/base.py:143 in      \u2502\r\n\u2502 __call__                                                                                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   140 \u2502   \u2502   )                                                                                  \u2502\r\n\u2502   141 \u2502   \u2502   try:                                                                               \u2502\r\n\u2502   142 \u2502   \u2502   \u2502   outputs = (                                                                    \u2502\r\n\u2502 \u2771 143 \u2502   \u2502   \u2502   \u2502   self._call(inputs, run_manager=run_manager)                                \u2502\r\n\u2502   144 \u2502   \u2502   \u2502   \u2502   if new_arg_supported                                                       \u2502\r\n\u2502   145 \u2502   \u2502   \u2502   \u2502   else self._call(inputs)                                                    \u2502\r\n\u2502   146 \u2502   \u2502   \u2502   )                                                                              \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/cloud/anaconda3/envs/mir/lib/python3.10/site-packages/langchain/chains/conversational_retr \u2502\r\n\u2502 ieval/base.py:110 in _call                                                                       \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   107 \u2502   \u2502   \u2502   )                                                                              \u2502\r\n\u2502   108 \u2502   \u2502   else:                                                                              \u2502\r\n\u2502   109 \u2502   \u2502   \u2502   new_question = question                                                        \u2502\r\n\u2502 \u2771 110 \u2502   \u2502   docs = self._get_docs(new_question, inputs)                                        \u2502\r\n\u2502   111 \u2502   \u2502   new_inputs = inputs.copy()                                                         \u2502\r\n\u2502   112 \u2502   \u2502   new_inputs[\"question\"] = new_question                                              \u2502\r\n\u2502   113 \u2502   \u2502   new_inputs[\"chat_history\"] = chat_history_str                                      \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/cloud/anaconda3/envs/mir/lib/python3.10/site-packages/langchain/chains/conversational_retr \u2502\r\n\u2502 ieval/base.py:191 in _get_docs                                                                   \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   188 \u2502   \u2502   return docs[:num_docs]                                                             \u2502\r\n\u2502   189 \u2502                                                                                          \u2502\r\n\u2502   190 \u2502   def _get_docs(self, question: str, inputs: Dict[str, Any]) -> List[Document]:          \u2502\r\n\u2502 \u2771 191 \u2502   \u2502   docs = self.retriever.get_relevant_documents(question)                             \u2502\r\n\u2502   192 \u2502   \u2502   return self._reduce_tokens_below_limit(docs)                                       \u2502\r\n\u2502   193 \u2502                                                                                          \u2502\r\n\u2502   194 \u2502   async def _aget_docs(self, question: str, inputs: Dict[str, Any]) -> List[Document]:   \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/cloud/anaconda3/envs/mir/lib/python3.10/site-packages/langchain/retrievers/self_query/base \u2502\r\n\u2502 .py:96 in get_relevant_documents                                                                 \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    93 \u2502   \u2502   inputs = self.llm_chain.prep_inputs({\"query\": query})                              \u2502\r\n\u2502    94 \u2502   \u2502   structured_query = cast(                                                           \u2502\r\n\u2502    95 \u2502   \u2502   \u2502   StructuredQuery,                                                               \u2502\r\n\u2502 \u2771  96 \u2502   \u2502   \u2502   self.llm_chain.predict_and_parse(callbacks=callbacks, **inputs),               \u2502\r\n\u2502    97 \u2502   \u2502   )                                                                                  \u2502\r\n\u2502    98 \u2502   \u2502   if self.verbose:                                                                   \u2502\r\n\u2502    99 \u2502   \u2502   \u2502   print(structured_query)                                                        \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/cloud/anaconda3/envs/mir/lib/python3.10/site-packages/langchain/chains/llm.py:281 in       \u2502\r\n\u2502 predict_and_parse                                                                                \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   278 \u2502   \u2502   )                                                                                  \u2502\r\n\u2502   279 \u2502   \u2502   result = self.predict(callbacks=callbacks, **kwargs)                               \u2502\r\n\u2502   280 \u2502   \u2502   if self.prompt.output_parser is not None:                                          \u2502\r\n\u2502 \u2771 281 \u2502   \u2502   \u2502   return self.prompt.output_parser.parse(result)                                 \u2502\r\n\u2502   282 \u2502   \u2502   else:                                                                              \u2502\r\n\u2502   283 \u2502   \u2502   \u2502   return result                                                                  \u2502\r\n\u2502   284                                                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/cloud/anaconda3/envs/mir/lib/python3.10/site-packages/langchain/chains/query_constructor/b \u2502\r\n\u2502 ase.py:50 in parse                                                                               \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    47 \u2502   \u2502   \u2502   \u2502   **{k: v for k, v in parsed.items() if k in allowed_keys}                   \u2502\r\n\u2502    48 \u2502   \u2502   \u2502   )                                                                              \u2502\r\n\u2502    49 \u2502   \u2502   except Exception as e:                                                             \u2502\r\n\u2502 \u2771  50 \u2502   \u2502   \u2502   raise OutputParserException(                                                   \u2502\r\n\u2502    51 \u2502   \u2502   \u2502   \u2502   f\"Parsing text\\n{text}\\n raised following error:\\n{e}\"                     \u2502\r\n\u2502    52 \u2502   \u2502   \u2502   )                                                                              \u2502\r\n\u2502    53                                                                                            \u2502\r\n\u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f\r\nOutputParserException: Parsing text\r\njson  \"query\": \"patient medical notes\", \"ID\": \"11542052\"  \"old\": \"\"\r\n raised following error:\r\nGot invalid JSON object. Error: Expecting value: line 1 column 1 (char 0)\n\n### Who can help?\n\n@hwchase17 \r\n@ag\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nmodel_id = 'google/flan-t5-xl'\r\ntokenizer = AutoTokenizer.from_pretrained(model_id)\r\npipe = pipeline(\r\n  model=model_id,\r\n  tokenizer=tokenizer,\r\n  max_length=2048,\r\n  temperature=0.1,\r\n  top_p=0.95,\r\n  repetition_penalty=1.\r\n)\r\n\r\nllm = HuggingFacePipeline(pipeline=pipe)\r\ndocument_content_description = \"Patient medical notes\"\r\nmetadata_field_info = [\r\n    AttributeInfo(\r\n        name=\"ID\",\r\n        description=\"The unique identifier 'ID' of the patient\",\r\n        type=\"string\",\r\n    ),\r\n    AttributeInfo(\r\n        name=\"source\",\r\n        description=\"source of the document\",\r\n        type=\"string\",\r\n    ),\r\n]\r\nretriever = SelfQueryRetriever.from_llm(\r\n    llm,\r\n    db,\r\n    document_content_description,\r\n    metadata_field_info,\r\n    verbose = True\r\n)\r\nmemory=ConversationBufferMemory(memory_key=\"chat_history\",output_key='answer')\r\nchain = ConversationalRetrievalChain.from_llm(\r\nllm = llm,\r\nretriever=retriever,\r\nmemory=memory, \r\nget_chat_history=lambda h :h)\n\n### Expected behavior\n\nExpected behavior should be something as attached\r\n![outputofvicuna](https://github.com/hwchase17/langchain/assets/95228400/17ef861a-43c1-4159-9ac1-59292b8dd9e1)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7839/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7839/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7838",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7838/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7838/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7838/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7838",
        "id": 1807964185,
        "node_id": "PR_kwDOIPDwls5Vrm_o",
        "number": 7838,
        "title": "fix",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-17T14:52:50Z",
        "updated_at": "2023-07-17T14:53:13Z",
        "closed_at": "2023-07-17T14:53:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7838",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7838",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7838.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7838.patch",
            "merged_at": "2023-07-17T14:53:12Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7838/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7838/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7837",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7837/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7837/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7837/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7837",
        "id": 1807961220,
        "node_id": "PR_kwDOIPDwls5VrmWU",
        "number": 7837,
        "title": "Add CLI command to create a new project",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-17T14:51:12Z",
        "updated_at": "2023-10-04T19:43:43Z",
        "closed_at": "2023-10-04T19:43:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7837",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7837",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7837.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7837.patch",
            "merged_at": "2023-10-04T19:43:42Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7837/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7836",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7836/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7836/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7836/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7836",
        "id": 1807921686,
        "node_id": "PR_kwDOIPDwls5Vrdyh",
        "number": 7836,
        "title": "bump 235",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-17T14:31:23Z",
        "updated_at": "2023-07-17T16:37:22Z",
        "closed_at": "2023-07-17T16:37:21Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7836",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7836",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7836.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7836.patch",
            "merged_at": "2023-07-17T16:37:21Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7836/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7836/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7835",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7835/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7835/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7835/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7835",
        "id": 1807916214,
        "node_id": "I_kwDOIPDwls5rwpy2",
        "number": 7835,
        "title": "BaseRetriever: Latest langchain update is breaking the implementation of extended classes",
        "user": {
            "login": "brunopistone",
            "id": 10196125,
            "node_id": "MDQ6VXNlcjEwMTk2MTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/10196125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunopistone",
            "html_url": "https://github.com/brunopistone",
            "followers_url": "https://api.github.com/users/brunopistone/followers",
            "following_url": "https://api.github.com/users/brunopistone/following{/other_user}",
            "gists_url": "https://api.github.com/users/brunopistone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brunopistone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brunopistone/subscriptions",
            "organizations_url": "https://api.github.com/users/brunopistone/orgs",
            "repos_url": "https://api.github.com/users/brunopistone/repos",
            "events_url": "https://api.github.com/users/brunopistone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brunopistone/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-07-17T14:28:52Z",
        "updated_at": "2023-11-24T16:07:44Z",
        "closed_at": "2023-11-24T16:07:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nMacOS: Ventura 13.4\r\nlangchain: 0.0.234\n\n### Who can help?\n\n@eyurtsev\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Extend the class BaseRetriever like the following:\r\n\r\n\u00b4\u00b4\u00b4\r\nclass DocumentRetrieverExtended(BaseRetriever):\r\n    def __init__(self, retriever, vector_field, text_field, k=3, return_source_documents=False, score_threshold=None, **kwargs):\r\n        self.k = k\r\n        self.vector_field = vector_field\r\n        self.text_field = text_field\r\n        self.return_source_documents = return_source_documents\r\n        self.retriever = retriever\r\n        self.filter = filter\r\n        self.score_threshold = score_threshold\r\n        self.kwargs = kwargs\r\n\u00b4\u00b4\u00b4\r\n2. Provide DocumentRetrieverExtended as retriever object to ConversationalRetrievalChainExtended.from_llm()\r\n3. You will receive the following exception:\r\n\r\n```\r\n  File \"pydantic/main.py\", line 357, in pydantic.main.BaseModel.__setattr__\r\nValueError: \"DocumentRetrieverExtended\" object has no field \"k\"\r\n```\n\n### Expected behavior\n\nUntil version 0.0.189 it was working properly. Please consider to fix the bug or update the langchain documentation for providing the new way of implementing it (Honestly I was expecting that new releases should not break what was working previously)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7835/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7835/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7834",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7834/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7834/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7834/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7834",
        "id": 1807906358,
        "node_id": "I_kwDOIPDwls5rwnY2",
        "number": 7834,
        "title": "ConversationalRetrievalChain: Add parameter for not invoking self.question_generator.run()",
        "user": {
            "login": "brunopistone",
            "id": 10196125,
            "node_id": "MDQ6VXNlcjEwMTk2MTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/10196125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/brunopistone",
            "html_url": "https://github.com/brunopistone",
            "followers_url": "https://api.github.com/users/brunopistone/followers",
            "following_url": "https://api.github.com/users/brunopistone/following{/other_user}",
            "gists_url": "https://api.github.com/users/brunopistone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/brunopistone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/brunopistone/subscriptions",
            "organizations_url": "https://api.github.com/users/brunopistone/orgs",
            "repos_url": "https://api.github.com/users/brunopistone/repos",
            "events_url": "https://api.github.com/users/brunopistone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/brunopistone/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-17T14:23:37Z",
        "updated_at": "2023-10-23T16:06:22Z",
        "closed_at": "2023-10-23T16:06:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nConversationalRetrievalChain is implementing in the **_call()** method the following behavior:\r\n\r\n```\r\nif chat_history_str:\r\n    callbacks = _run_manager.get_child()\r\n    new_question = self.question_generator.run(\r\n        question=question, chat_history=chat_history_str, callbacks=callbacks\r\n    )\r\nelse:\r\n    new_question = question \r\n```\r\nPlease add the possibility to avoid this step, like the following:\r\n\r\n```\r\nqa = ConversationalRetrievalChainExtended.from_llm(\r\n            llm=self.llm,\r\n            retriever=self.retriever,\r\n            combine_docs_chain_kwargs={\"prompt\": PROMPT},\r\n            return_source_documents=True,\r\n            verbose=True,\r\n            memory=self.memory,\r\n\t\t\tgenerate_question=False\r\n        )\r\n```\r\n\r\nIn order to avoid the generation of a new question\n\n### Motivation\n\nThe current behavior is not generic and applicable to all the LLMs. Some Foundation Models require a specific format for the template (e.g.) and this is causing exceptions on generating the question (e.g. multiple times Anthropic is generating empty results). Moreover, most of the people is already formatting the template for having the desired behavior. Please include this feature ASAP\n\n### Your contribution\n\nI've already extended the class. Please let me know if you need the code (is a small change you should apply, strange it is not the standard behavior)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7834/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7834/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7833",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7833/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7833/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7833/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7833",
        "id": 1807743134,
        "node_id": "I_kwDOIPDwls5rv_ie",
        "number": 7833,
        "title": "    raise AttributeError(name) from None AttributeError: OPENAI_FUNCTIONS",
        "user": {
            "login": "iamsmthing",
            "id": 90586668,
            "node_id": "MDQ6VXNlcjkwNTg2NjY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/90586668?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iamsmthing",
            "html_url": "https://github.com/iamsmthing",
            "followers_url": "https://api.github.com/users/iamsmthing/followers",
            "following_url": "https://api.github.com/users/iamsmthing/following{/other_user}",
            "gists_url": "https://api.github.com/users/iamsmthing/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iamsmthing/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iamsmthing/subscriptions",
            "organizations_url": "https://api.github.com/users/iamsmthing/orgs",
            "repos_url": "https://api.github.com/users/iamsmthing/repos",
            "events_url": "https://api.github.com/users/iamsmthing/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iamsmthing/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-17T13:04:07Z",
        "updated_at": "2023-07-24T22:40:56Z",
        "closed_at": "2023-07-18T05:34:13Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n![Screenshot 2023-07-17 184319](https://github.com/hwchase17/langchain/assets/90586668/e454e70a-66da-40bd-b3c7-92d26caeccea)\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nThe above code snippet  is not working when i'm trying to give LLM an input via streamlit or flask. Error occurs when we are trying to use:``` agent_type=AgentType.OPENAI_FUNCTIONS,```. It's Raising the error like as Below:\r\n```\r\n    raise AttributeError(name) from None\r\nAttributeError: OPENAI_FUNCTIONS\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expect that when we give input from either post request via FLASK or via streamlit input box, it should accept the input and should pass on this input to agent to run it and give the result accordingly,.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7833/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7833/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7832",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7832/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7832/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7832/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7832",
        "id": 1807733119,
        "node_id": "PR_kwDOIPDwls5Vq0cs",
        "number": 7832,
        "title": "Add client params to aleph alpha (llm and embedding)",
        "user": {
            "login": "tugot17",
            "id": 27293258,
            "node_id": "MDQ6VXNlcjI3MjkzMjU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/27293258?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tugot17",
            "html_url": "https://github.com/tugot17",
            "followers_url": "https://api.github.com/users/tugot17/followers",
            "following_url": "https://api.github.com/users/tugot17/following{/other_user}",
            "gists_url": "https://api.github.com/users/tugot17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tugot17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tugot17/subscriptions",
            "organizations_url": "https://api.github.com/users/tugot17/orgs",
            "repos_url": "https://api.github.com/users/tugot17/repos",
            "events_url": "https://api.github.com/users/tugot17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tugot17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T12:58:50Z",
        "updated_at": "2023-08-04T03:17:39Z",
        "closed_at": "2023-08-04T03:17:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7832",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7832",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7832.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7832.patch",
            "merged_at": "2023-08-04T03:17:38Z"
        },
        "body": "To make it easier to use aleph alpha models via Langchain, we added the client params to the constructor. This is especially useful for our on-premise users who need to specify the host address.\r\n\r\nAlso, we updated the default versions of the params so they are consistent with our [API](https://docs.aleph-alpha.com/api/semantic-embed/)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7832/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7832/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7830",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7830/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7830/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7830/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7830",
        "id": 1807692296,
        "node_id": "PR_kwDOIPDwls5VqrYQ",
        "number": 7830,
        "title": "WIP: Weaviate MMR search to support fetch_k greater than amount of docs",
        "user": {
            "login": "yannickulmrich",
            "id": 137299871,
            "node_id": "U_kgDOCC8Hnw",
            "avatar_url": "https://avatars.githubusercontent.com/u/137299871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yannickulmrich",
            "html_url": "https://github.com/yannickulmrich",
            "followers_url": "https://api.github.com/users/yannickulmrich/followers",
            "following_url": "https://api.github.com/users/yannickulmrich/following{/other_user}",
            "gists_url": "https://api.github.com/users/yannickulmrich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yannickulmrich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yannickulmrich/subscriptions",
            "organizations_url": "https://api.github.com/users/yannickulmrich/orgs",
            "repos_url": "https://api.github.com/users/yannickulmrich/repos",
            "events_url": "https://api.github.com/users/yannickulmrich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yannickulmrich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-17T12:39:31Z",
        "updated_at": "2023-11-15T23:36:58Z",
        "closed_at": "2023-11-15T23:36:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7830",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7830",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7830.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7830.patch",
            "merged_at": null
        },
        "body": "  - Description: Currently, when searching the weaviate vector db with a fetch_k parameter greater than the amount of docs, an error is thrown, \r\n  - Issue: #7829 \r\n  - Dependencies: -,\r\n  - Tag maintainer: -,\r\n  - Twitter handle: -\r\n\r\nMaintainer(s):\r\n  - VectorStores rlancemartin, eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7830/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7830/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7829",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7829/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7829/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7829/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7829",
        "id": 1807668123,
        "node_id": "I_kwDOIPDwls5rvtOb",
        "number": 7829,
        "title": "Weaviate MMR Search fails with too high fetch_k parameter ",
        "user": {
            "login": "yannickulmrich",
            "id": 137299871,
            "node_id": "U_kgDOCC8Hnw",
            "avatar_url": "https://avatars.githubusercontent.com/u/137299871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yannickulmrich",
            "html_url": "https://github.com/yannickulmrich",
            "followers_url": "https://api.github.com/users/yannickulmrich/followers",
            "following_url": "https://api.github.com/users/yannickulmrich/following{/other_user}",
            "gists_url": "https://api.github.com/users/yannickulmrich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yannickulmrich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yannickulmrich/subscriptions",
            "organizations_url": "https://api.github.com/users/yannickulmrich/orgs",
            "repos_url": "https://api.github.com/users/yannickulmrich/repos",
            "events_url": "https://api.github.com/users/yannickulmrich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yannickulmrich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-17T12:26:21Z",
        "updated_at": "2023-10-23T16:06:27Z",
        "closed_at": "2023-10-23T16:06:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nUsing requirements:\r\n* langchain==0.0.234\r\n* weaviate-client==3.22.1\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nThe error occurs, when there are less documents stored in weaviate than trying to use with the fetch_k parameter. Otherwise, this will lead to the following error:\r\n\r\n>   File \"...\\Lib\\site-packages\\langchain\\vectorstores\\weaviate.py\", line 273, in max_marginal_relevance_search\r\n    return self.max_marginal_relevance_search_by_vector(\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"...\\Lib\\site-packages\\langchain\\vectorstores\\weaviate.py\", line 324, in max_marginal_relevance_search_by_vector\r\n    docs.append(Document(page_content=text, metadata=meta))\r\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"...\\Lib\\site-packages\\langchain\\load\\serializable.py\", line 74, in __init__\r\n    super().__init__(**kwargs)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"pydantic\\main.py\", line 341, in pydantic.main.BaseModel.__init__pydantic.error_wrappers.ValidationError: 1 validation error for Document page_content \r\n  none is not an allowed value (type=type_error.none.not_allowed)\r\n  \r\nExample code for reproduction:\r\nSee integration test in fork: https://github.com/yannickulmrich/langchain-issue-7829/commit/a3fea1d08a7e55894ee18099bd5f5751aecf9159\r\n\r\n\r\n### Expected behavior\r\n\r\nI expect the vectorstore to not fail, when the fetch_k parameter is higher, than the amount of Documents in the vector db.\r\nEspecially since the default value of the fetch_k parameter is set to 20, this can lead to a lot of unwanted errors, when trying to use the vector db for the first time with few documents to test the behaviour. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7829/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7829/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7828",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7828/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7828/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7828/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7828",
        "id": 1807476168,
        "node_id": "I_kwDOIPDwls5ru-XI",
        "number": 7828,
        "title": "Rephrased question causing issues ",
        "user": {
            "login": "mahsirat-atiye",
            "id": 45205996,
            "node_id": "MDQ6VXNlcjQ1MjA1OTk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/45205996?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mahsirat-atiye",
            "html_url": "https://github.com/mahsirat-atiye",
            "followers_url": "https://api.github.com/users/mahsirat-atiye/followers",
            "following_url": "https://api.github.com/users/mahsirat-atiye/following{/other_user}",
            "gists_url": "https://api.github.com/users/mahsirat-atiye/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mahsirat-atiye/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mahsirat-atiye/subscriptions",
            "organizations_url": "https://api.github.com/users/mahsirat-atiye/orgs",
            "repos_url": "https://api.github.com/users/mahsirat-atiye/repos",
            "events_url": "https://api.github.com/users/mahsirat-atiye/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mahsirat-atiye/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T10:37:53Z",
        "updated_at": "2023-10-23T16:06:31Z",
        "closed_at": "2023-10-23T16:06:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI have a use case where I ask an AI agent to check if an article adheres to certain guidelines in documents. However, the recent changes in the BaseConversationalRetrievalChain _call function are causing issues. The process of requesting information from OpenAI can be divided into two steps.\r\n\r\nIn Step 1, the request, chat history, and system prompt are sent, and the question is rephrased. This step aims to prevent the retrieval of irrelevant documents and ask a more accurate question.\r\n\r\nIn Step 2, the rephrased question, along with the rephrased chat history and documents, is sent to OpenAI to receive an answer. The problem arises after the upgrade, as the library now sends the rephrased question instead of the original question.\r\n\r\nIn the process of rephrasing the question, the article is removed from the body of the question. As a result, the AI bot is no longer able to respond effectively.\r\n\r\nA possible fix, is sending original question in Step2, it would be nice to be able to decide on it using function parameter.\r\n \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nDocument\r\nDoc: Golden guidelines for article\r\n\r\nGolden guidelines for articles are as following:\r\n\r\n1. Keep the article content as short possible\r\n2. Don\u2019t add new content. It should be a refinement and improvement of what is already there to maintain accuracy\r\n3. Use a clear and concise writing style: Keep sentences short and to the point.\r\n4. Organise content using headings and subheadings: Divide the article into sections with relevant headings, making it easy for readers to find the information they need.\r\n5. Make sure page titles and section headings are action-focused and not in question format\r\n6. Use bullet points and numbered lists to show information in a clear and organised structure\r\n7. Highlight important information using bold or italic text: Emphasise key points or specific instructions by using bold or italic formatting.\r\n\r\n\r\n------\r\n\r\nask this question:\r\n\r\nReview the following document and check if it is following golden guidelines, here is my doc \r\n---------\r\n What is an eTicket?\r\nInstead of a paper ticket, your ticket will be emailed to you as a PDF attachment. If you miss the email, it will also be available for download from the trip itinerary page of your TravelPerk account.\r\nThis saves you time at the train station as you no longer have to print a ticket from a ticket machine.\r\nHow do I get an eTicket?\r\nWhen searching for a train in the UK:\r\nSelect your preferred time and click on See tickets.\r\nScroll down to Ticket delivery method.\r\nSelect Get an eTicket.\r\nClick on Add to trip.\r\nYou will receive the PDF ticket with your TravelPerk confirmation email. You will also be able to download it from your account under Trips -> select a specific trip.\r\nHow do I use my eTicket?\r\nIt\u2019s really easy! Simply open the PDF ticket on your phone and scan the barcode when you travel.\r\nIf there is no scanner at the station, just show the eTicket to a staff member at the barrier.\r\n\r\n\r\n\r\n\r\nrephrased question:\r\nReview provided article\r\n\r\nfinal response: As an AI, I can't review the article titled \"What is an eTicket?\" because you haven't provided the content of the article. Please provide the article content \n\n### Expected behavior\n\nexpected answer would be sth like this:\r\nThe article is well-structured and follows the Golden guidelines for articles. Here are some points to note:\r\n\r\n1. Relevance: The article is very relevant to its intended audience, which seems to be those using eTickets for train travel in the UK. \r\n\r\n2. Clarity: The article is clear and easy to understand. The language is simple and the sentences are concise.\r\n\r\n3. Depth: The article provides a good level of detail on its subject. It answers many potential questions a reader might have about eTickets and provides step-by-step instructions on how to get and use them.\r\n\r\n4. Accuracy: The information in the article appears to be accurate, although without further context or sources, it's hard to verify.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7828/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7828/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7827",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7827/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7827/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7827/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7827",
        "id": 1807441167,
        "node_id": "I_kwDOIPDwls5ru10P",
        "number": 7827,
        "title": "Chroma and  Milvus  be larger than 10",
        "user": {
            "login": "wenshu400",
            "id": 71975231,
            "node_id": "MDQ6VXNlcjcxOTc1MjMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/71975231?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wenshu400",
            "html_url": "https://github.com/wenshu400",
            "followers_url": "https://api.github.com/users/wenshu400/followers",
            "following_url": "https://api.github.com/users/wenshu400/following{/other_user}",
            "gists_url": "https://api.github.com/users/wenshu400/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wenshu400/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wenshu400/subscriptions",
            "organizations_url": "https://api.github.com/users/wenshu400/orgs",
            "repos_url": "https://api.github.com/users/wenshu400/repos",
            "events_url": "https://api.github.com/users/wenshu400/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wenshu400/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-17T10:15:14Z",
        "updated_at": "2023-10-23T16:06:37Z",
        "closed_at": "2023-10-23T16:06:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nvector_store = Milvus.from_documents(\r\n    text,\r\n    embedding=das_embedding,\r\n    connection_args={\"host\": MILVUS_HOST, \"port\": MILVUS_PORT}\r\n)\r\n\r\n\r\nValueError: status_code: 400 \r\n code: InvalidParameter \r\n message: batch size is invalid, it should not be larger than 10.: payload.input.contents\r\n \r\n\r\ntext[:10]\u6ee1\u8db3\uff0c\u5176\u4ed6\u4e0d\u884c\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.vectorstores import Milvus\r\nvector_store = Milvus.from_documents(\r\n    text,\r\n    embedding=das_embedding,\r\n    connection_args={\"host\": MILVUS_HOST, \"port\": MILVUS_PORT}\r\n)\n\n### Expected behavior\n\nValueError: status_code: 400 \r\n code: InvalidParameter \r\n message: batch size is invalid, it should not be larger than 10.: payload.input.contents\r\n \r\n\u8fd9\u4e2a\u9650\u5236\u6027\u6761\u4ef610\u6761\u600e\u4e48\u6539",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7827/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7827/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7826",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7826/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7826/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7826/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7826",
        "id": 1807402188,
        "node_id": "PR_kwDOIPDwls5VprkD",
        "number": 7826,
        "title": "docs: Improve ApifyDatasetLoader docstring",
        "user": {
            "login": "jirimoravcik",
            "id": 951187,
            "node_id": "MDQ6VXNlcjk1MTE4Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/951187?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jirimoravcik",
            "html_url": "https://github.com/jirimoravcik",
            "followers_url": "https://api.github.com/users/jirimoravcik/followers",
            "following_url": "https://api.github.com/users/jirimoravcik/following{/other_user}",
            "gists_url": "https://api.github.com/users/jirimoravcik/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jirimoravcik/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jirimoravcik/subscriptions",
            "organizations_url": "https://api.github.com/users/jirimoravcik/orgs",
            "repos_url": "https://api.github.com/users/jirimoravcik/repos",
            "events_url": "https://api.github.com/users/jirimoravcik/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jirimoravcik/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-07-17T09:51:13Z",
        "updated_at": "2023-07-20T15:36:31Z",
        "closed_at": "2023-07-20T15:36:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7826",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7826",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7826.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7826.patch",
            "merged_at": null
        },
        "body": "I noticed the `ApifyDatasetLoader` is lacking a code example in the docstring. I'm adding it along with a link to Apify's docs about langchain integration to improve developer experience.\r\n\r\nPS: I'd be happy to update the search in https://integrations.langchain.com/ to also consider the description, not just the title. But AFAIK the source code for the page is not public, right?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7826/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7826/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7825",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7825/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7825/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7825/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7825",
        "id": 1807226559,
        "node_id": "I_kwDOIPDwls5ruBa_",
        "number": 7825,
        "title": "Cannot set up dev container because of Poetry solving dependencies forever",
        "user": {
            "login": "juliensalinas",
            "id": 22055188,
            "node_id": "MDQ6VXNlcjIyMDU1MTg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22055188?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juliensalinas",
            "html_url": "https://github.com/juliensalinas",
            "followers_url": "https://api.github.com/users/juliensalinas/followers",
            "following_url": "https://api.github.com/users/juliensalinas/following{/other_user}",
            "gists_url": "https://api.github.com/users/juliensalinas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juliensalinas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juliensalinas/subscriptions",
            "organizations_url": "https://api.github.com/users/juliensalinas/orgs",
            "repos_url": "https://api.github.com/users/juliensalinas/repos",
            "events_url": "https://api.github.com/users/juliensalinas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juliensalinas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-07-17T08:08:53Z",
        "updated_at": "2023-11-29T02:52:29Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nOS: Ubuntu 22.04\r\nDocker version: Docker version 20.10.21, build 20.10.21-0ubuntu1~22.04.3\r\nVSCode: 1.69.0\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce the behavior:\r\n\r\n1. Go to this documentation page: https://github.com/hwchase17/langchain/tree/master/.devcontainer\r\n2. Click the \"Dev Containers Open\" button\r\n3. The dev image build is stuck at the last step (Poetry dependencies installation).\r\n\r\nWhen making the Poetry more verbose, it appears that it loops forever on dependencies, like this:\r\n\r\n```\r\n   8: derived: pytz-deprecation-shim\r\n   8: fact: pytz-deprecation-shim (0.1.0.post0) depends on tzdata (*)\r\n   8: fact: pytz-deprecation-shim (0.1.0.post0) depends on backports.zoneinfo (*)\r\n   8: selecting pytz-deprecation-shim (0.1.0.post0)\r\n   8: fact: tensorflow-hub (0.14.0) depends on numpy (>=1.12.0)\r\n   8: fact: tensorflow-hub (0.14.0) depends on protobuf (>=3.19.6)\r\n   8: selecting tensorflow-hub (0.14.0)\r\n   8: selecting termcolor (2.3.0)\r\n   8: fact: watchfiles (0.19.0) depends on anyio (>=3.0.0)\r\n   8: selecting watchfiles (0.19.0)\r\n   8: selecting pathspec (0.11.1)\r\n   8: fact: grpcio-reflection (1.47.5) depends on protobuf (>=3.12.0)\r\n   8: fact: grpcio-reflection (1.47.5) depends on grpcio (>=1.47.5)\r\n   8: selecting grpcio-reflection (1.47.5)\r\n   8: selecting iniconfig (2.0.0)\r\n   8: fact: pycares (4.3.0) depends on cffi (>=1.5.0)\r\n   8: selecting pycares (4.3.0)\r\n   8: derived: cffi (>=1.5.0)\r\n   8: selecting colored (1.4.4)\r\n   8: fact: azure-core (1.28.0) depends on requests (>=2.18.4)\r\n   8: fact: azure-core (1.28.0) depends on six (>=1.11.0)\r\n   8: fact: azure-core (1.28.0) depends on typing-extensions (>=4.3.0)\r\n ```\r\n\r\nI even tried to wait for 5 hours, but it was not enough (my internet connection works correctly).\n\n### Expected behavior\n\nThe dev container environment should be up and ready in a couple of minutes.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7825/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7825/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7824",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7824/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7824/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7824/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7824",
        "id": 1807216493,
        "node_id": "I_kwDOIPDwls5rt-9t",
        "number": 7824,
        "title": "How to use multiple tags in metadata filtering",
        "user": {
            "login": "javedafroz",
            "id": 1540406,
            "node_id": "MDQ6VXNlcjE1NDA0MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1540406?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/javedafroz",
            "html_url": "https://github.com/javedafroz",
            "followers_url": "https://api.github.com/users/javedafroz/followers",
            "following_url": "https://api.github.com/users/javedafroz/following{/other_user}",
            "gists_url": "https://api.github.com/users/javedafroz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/javedafroz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/javedafroz/subscriptions",
            "organizations_url": "https://api.github.com/users/javedafroz/orgs",
            "repos_url": "https://api.github.com/users/javedafroz/repos",
            "events_url": "https://api.github.com/users/javedafroz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/javedafroz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-07-17T08:03:05Z",
        "updated_at": "2023-10-10T12:33:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am using below chain. I want to use multiple categories in the filters. My logic is to bring the results from category=c1 OR category=c2 OR category=c3. How can we modify below code the achieve the objective\r\n\r\n`chain = ConversationalRetrievalChain.from_llm(OpenAI(temperature=0),  retriever= vectorstore.as_retriever(search_kwargs={'filter': {'category':category}}), memory=memory, return_source_documents = True) `\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7824/reactions",
            "total_count": 3,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7824/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7823",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7823/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7823/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7823/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7823",
        "id": 1807105415,
        "node_id": "I_kwDOIPDwls5rtj2H",
        "number": 7823,
        "title": "DOC: SupabaseVectorStore.from_documents read operation timed out.",
        "user": {
            "login": "shangdev",
            "id": 15621520,
            "node_id": "MDQ6VXNlcjE1NjIxNTIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/15621520?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shangdev",
            "html_url": "https://github.com/shangdev",
            "followers_url": "https://api.github.com/users/shangdev/followers",
            "following_url": "https://api.github.com/users/shangdev/following{/other_user}",
            "gists_url": "https://api.github.com/users/shangdev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shangdev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shangdev/subscriptions",
            "organizations_url": "https://api.github.com/users/shangdev/orgs",
            "repos_url": "https://api.github.com/users/shangdev/repos",
            "events_url": "https://api.github.com/users/shangdev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shangdev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T06:49:38Z",
        "updated_at": "2023-07-24T22:51:06Z",
        "closed_at": "2023-07-18T05:27:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\n```\r\n# We're using the default `documents` table here. You can modify this by passing in a `table_name` argument to the `from_documents` method.\r\nvector_store = SupabaseVectorStore.from_documents(docs, embeddings, client=supabase)\r\n```\n\n### Idea or request for content:\n\nthrow error: httpx.ReadTimeout: The read operation timed out\r\n\r\nIs it because the documents are too large? Is there a way to change the timeout?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7823/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7823/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7816",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7816/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7816/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7816/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7816",
        "id": 1806955881,
        "node_id": "I_kwDOIPDwls5rs_Vp",
        "number": 7816,
        "title": "DOC: Azure Cognitive Search Vector Store",
        "user": {
            "login": "DSgUY",
            "id": 34726269,
            "node_id": "MDQ6VXNlcjM0NzI2MjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/34726269?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/DSgUY",
            "html_url": "https://github.com/DSgUY",
            "followers_url": "https://api.github.com/users/DSgUY/followers",
            "following_url": "https://api.github.com/users/DSgUY/following{/other_user}",
            "gists_url": "https://api.github.com/users/DSgUY/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/DSgUY/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/DSgUY/subscriptions",
            "organizations_url": "https://api.github.com/users/DSgUY/orgs",
            "repos_url": "https://api.github.com/users/DSgUY/repos",
            "events_url": "https://api.github.com/users/DSgUY/events{/privacy}",
            "received_events_url": "https://api.github.com/users/DSgUY/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-17T04:51:13Z",
        "updated_at": "2023-10-23T16:06:41Z",
        "closed_at": "2023-10-23T16:06:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nhttps://python.langchain.com/docs/modules/data_connection/vectorstores/integrations/azuresearch\n\n### Idea or request for content:\n\nCan anyone explain more about how to create the index?\r\nIf your run the example you get: \r\n`ResourceNotFoundError: () The index 'langchain-vector-demo' for service 'cognitivesearchitest' was not found.\r\n`\r\nI split docs and add title to metadata, so now, my documents are **_page_content_** and **_metadata_**(source, title, start_index)\r\nDo I need to manually create the  'cognitivesearchitest' index with what fields? Only with id and then the index is updated when inserting the docs?\r\n\r\nRegards.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7816/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7816/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7815",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7815/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7815/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7815/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7815",
        "id": 1806940259,
        "node_id": "PR_kwDOIPDwls5VoFt7",
        "number": 7815,
        "title": "Add option to embed documents without tokenizing using OpenAI interface",
        "user": {
            "login": "sudeepag",
            "id": 11940172,
            "node_id": "MDQ6VXNlcjExOTQwMTcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11940172?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sudeepag",
            "html_url": "https://github.com/sudeepag",
            "followers_url": "https://api.github.com/users/sudeepag/followers",
            "following_url": "https://api.github.com/users/sudeepag/following{/other_user}",
            "gists_url": "https://api.github.com/users/sudeepag/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sudeepag/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sudeepag/subscriptions",
            "organizations_url": "https://api.github.com/users/sudeepag/orgs",
            "repos_url": "https://api.github.com/users/sudeepag/repos",
            "events_url": "https://api.github.com/users/sudeepag/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sudeepag/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-07-17T04:38:19Z",
        "updated_at": "2023-09-19T02:21:45Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7815",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7815",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7815.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7815.patch",
            "merged_at": null
        },
        "body": "This PR updates `embedding_ctx_length` to be optional. If this value is nil, we will perform a batched call to `embed_with_retry` without tokenizing the text. If it is not nil, we will call `_get_len_safe_embeddings` as per usual. This allows us to use the OpenAI interface for embedding documents without having to rely on the OpenAI model tokenizers.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7815/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7815/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7814",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7814/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7814/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7814/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7814",
        "id": 1806921094,
        "node_id": "PR_kwDOIPDwls5VoBfK",
        "number": 7814,
        "title": "minor langsmith notebook fixes",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-17T04:17:56Z",
        "updated_at": "2023-07-17T04:27:04Z",
        "closed_at": "2023-07-17T04:27:03Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7814",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7814",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7814.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7814.patch",
            "merged_at": "2023-07-17T04:27:03Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7814/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7814/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7813",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7813/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7813/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7813/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7813",
        "id": 1806896033,
        "node_id": "I_kwDOIPDwls5rswuh",
        "number": 7813,
        "title": "Azure Cognitive Search",
        "user": {
            "login": "miggytrinidad",
            "id": 11906579,
            "node_id": "MDQ6VXNlcjExOTA2NTc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11906579?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/miggytrinidad",
            "html_url": "https://github.com/miggytrinidad",
            "followers_url": "https://api.github.com/users/miggytrinidad/followers",
            "following_url": "https://api.github.com/users/miggytrinidad/following{/other_user}",
            "gists_url": "https://api.github.com/users/miggytrinidad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/miggytrinidad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/miggytrinidad/subscriptions",
            "organizations_url": "https://api.github.com/users/miggytrinidad/orgs",
            "repos_url": "https://api.github.com/users/miggytrinidad/repos",
            "events_url": "https://api.github.com/users/miggytrinidad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/miggytrinidad/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-07-17T03:50:56Z",
        "updated_at": "2023-11-28T20:28:26Z",
        "closed_at": "2023-07-27T14:33:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n...\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nI am trying to use vector search as shown below:\r\n\r\n`os.environ[\"AZURESEARCH_FIELDS_CONTENT_VECTOR\"] = \"section_summary_vector\"\r\nos.environ[\"AZURESEARCH_FIELDS_CONTENT\"] = \"section_of_summary\"\r\n\r\ndocs = vector_store.similarity_search(\r\n    query=\"What did the president say about Ketanji Brown Jackson\",\r\n    k=3,\r\n    engine = \"gpt35turbo\",\r\n    search_type=\"similarity\"\r\n)\r\nprint(docs[0].page_content)`\r\n\r\nI am getting an error saying: \r\n\r\nHttpResponseError: () Unknown field 'content_vector' in vector field list.\r\nParameter name: vectorFields\r\nCode: \r\nMessage: Unknown field 'content_vector' in vector field list.\r\nParameter name: vectorFields\r\n\r\nIt seems that the custom vector field and is not being used by the function.\r\n\r\n### Expected behavior\r\n\r\nBe able to customize the vector field to use in doing vector similarity search.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7813/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7813/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7812",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7812/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7812/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7812/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7812",
        "id": 1806893153,
        "node_id": "PR_kwDOIPDwls5Vn7Q7",
        "number": 7812,
        "title": "Export Tracer from callbacks",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-17T03:47:29Z",
        "updated_at": "2023-07-17T03:58:15Z",
        "closed_at": "2023-07-17T03:58:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7812",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7812",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7812.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7812.patch",
            "merged_at": "2023-07-17T03:58:14Z"
        },
        "body": "Improve discoverability",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7812/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7812/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7811",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7811/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7811/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7811/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7811",
        "id": 1806876086,
        "node_id": "PR_kwDOIPDwls5Vn3jK",
        "number": 7811,
        "title": "add filter to sklearn vector store functions",
        "user": {
            "login": "shibuiwilliam",
            "id": 23517545,
            "node_id": "MDQ6VXNlcjIzNTE3NTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23517545?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shibuiwilliam",
            "html_url": "https://github.com/shibuiwilliam",
            "followers_url": "https://api.github.com/users/shibuiwilliam/followers",
            "following_url": "https://api.github.com/users/shibuiwilliam/following{/other_user}",
            "gists_url": "https://api.github.com/users/shibuiwilliam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shibuiwilliam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shibuiwilliam/subscriptions",
            "organizations_url": "https://api.github.com/users/shibuiwilliam/orgs",
            "repos_url": "https://api.github.com/users/shibuiwilliam/repos",
            "events_url": "https://api.github.com/users/shibuiwilliam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shibuiwilliam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-17T03:22:52Z",
        "updated_at": "2023-07-22T02:22:44Z",
        "closed_at": "2023-07-22T02:22:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7811",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7811",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7811.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7811.patch",
            "merged_at": null
        },
        "body": "# What\r\n- This is to add filter option to sklearn vectore store functions\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: Add filter to sklearn vectore store functions.\r\n  - Issue: None\r\n  - Dependencies: None\r\n  - Tag maintainer: @baskaryan\r\n  - Twitter handle: @MlopsJ\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7811/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7810",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7810/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7810/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7810/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7810",
        "id": 1806863541,
        "node_id": "PR_kwDOIPDwls5Vn01q",
        "number": 7810,
        "title": "docs(zilliz): connection_args add token description for serverless cl\u2026",
        "user": {
            "login": "satorioh",
            "id": 9688163,
            "node_id": "MDQ6VXNlcjk2ODgxNjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9688163?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/satorioh",
            "html_url": "https://github.com/satorioh",
            "followers_url": "https://api.github.com/users/satorioh/followers",
            "following_url": "https://api.github.com/users/satorioh/following{/other_user}",
            "gists_url": "https://api.github.com/users/satorioh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/satorioh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/satorioh/subscriptions",
            "organizations_url": "https://api.github.com/users/satorioh/orgs",
            "repos_url": "https://api.github.com/users/satorioh/repos",
            "events_url": "https://api.github.com/users/satorioh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/satorioh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T03:02:48Z",
        "updated_at": "2023-07-18T16:31:40Z",
        "closed_at": "2023-07-18T16:31:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7810",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7810",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7810.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7810.patch",
            "merged_at": "2023-07-18T16:31:39Z"
        },
        "body": "Description:\r\n\r\nCurrently, Zilliz only support dedicated clusters using a pair of username and password for connection. Regarding serverless clusters, they can connect to them by using API keys( [ see official note detail](https://docs.zilliz.com/docs/manage-cluster-credentials)), so I add API key(token) description in Zilliz docs to make it more obvious and convenient for this group of users to better utilize Zilliz. No changes done to code.\r\n\r\nMaintainer:\r\n@baskaryan \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7810/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7810/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7809",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7809/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7809/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7809/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7809",
        "id": 1806856440,
        "node_id": "PR_kwDOIPDwls5VnzTJ",
        "number": 7809,
        "title": "Add/test faiss",
        "user": {
            "login": "shibuiwilliam",
            "id": 23517545,
            "node_id": "MDQ6VXNlcjIzNTE3NTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/23517545?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shibuiwilliam",
            "html_url": "https://github.com/shibuiwilliam",
            "followers_url": "https://api.github.com/users/shibuiwilliam/followers",
            "following_url": "https://api.github.com/users/shibuiwilliam/following{/other_user}",
            "gists_url": "https://api.github.com/users/shibuiwilliam/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shibuiwilliam/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shibuiwilliam/subscriptions",
            "organizations_url": "https://api.github.com/users/shibuiwilliam/orgs",
            "repos_url": "https://api.github.com/users/shibuiwilliam/repos",
            "events_url": "https://api.github.com/users/shibuiwilliam/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shibuiwilliam/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-17T02:51:10Z",
        "updated_at": "2023-07-18T15:30:37Z",
        "closed_at": "2023-07-18T15:30:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7809",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7809",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7809.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7809.patch",
            "merged_at": "2023-07-18T15:30:37Z"
        },
        "body": "# What\r\n- Add missing test cases to faiss vectore stores\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: add missing tests to faiss vectore stores\r\n  - Issue: None\r\n  - Dependencies: None\r\n  - Tag maintainer: @baskaryan\r\n  - Twitter handle: @MlopsJ\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7809/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7809/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7808",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7808/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7808/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7808/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7808",
        "id": 1806779820,
        "node_id": "PR_kwDOIPDwls5Vnir9",
        "number": 7808,
        "title": "Fix chat example output mapper",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-17T00:40:05Z",
        "updated_at": "2023-07-17T00:47:06Z",
        "closed_at": "2023-07-17T00:47:05Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7808",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7808",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7808.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7808.patch",
            "merged_at": "2023-07-17T00:47:05Z"
        },
        "body": "Was only serializing when no key was provided",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7808/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7808/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7807",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7807/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7807/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7807/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7807",
        "id": 1806764753,
        "node_id": "PR_kwDOIPDwls5Vnfhb",
        "number": 7807,
        "title": "Share client in evaluation callback",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-17T00:04:47Z",
        "updated_at": "2023-07-17T00:47:39Z",
        "closed_at": "2023-07-17T00:47:38Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7807",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7807",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7807.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7807.patch",
            "merged_at": "2023-07-17T00:47:38Z"
        },
        "body": "Guarantee the evaluator traces go to same endpoint",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7807/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7807/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7806",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7806/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7806/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7806/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7806",
        "id": 1806758886,
        "node_id": "PR_kwDOIPDwls5VneXD",
        "number": 7806,
        "title": "add serializer methods",
        "user": {
            "login": "balnarendrasapa",
            "id": 61614290,
            "node_id": "MDQ6VXNlcjYxNjE0Mjkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/61614290?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/balnarendrasapa",
            "html_url": "https://github.com/balnarendrasapa",
            "followers_url": "https://api.github.com/users/balnarendrasapa/followers",
            "following_url": "https://api.github.com/users/balnarendrasapa/following{/other_user}",
            "gists_url": "https://api.github.com/users/balnarendrasapa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/balnarendrasapa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/balnarendrasapa/subscriptions",
            "organizations_url": "https://api.github.com/users/balnarendrasapa/orgs",
            "repos_url": "https://api.github.com/users/balnarendrasapa/repos",
            "events_url": "https://api.github.com/users/balnarendrasapa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/balnarendrasapa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-16T23:43:05Z",
        "updated_at": "2023-07-18T22:43:12Z",
        "closed_at": "2023-07-18T22:42:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7806",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7806",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7806.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7806.patch",
            "merged_at": null
        },
        "body": "Added serialize and deserialize methods in faiss vectorstore. there was a method called save_local method but instead of saving the file to local disk, I wanted it in the format so that i can save in the SQL database in Blob field. I used this method while i was working on something.\r\n\r\ni wanted to add tests and add to documentation but make is not working ..... see #6182 \r\n\r\n@rlancemartin @eyurtsev \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7806/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7806/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7805",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7805/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7805/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7805/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7805",
        "id": 1806754909,
        "node_id": "PR_kwDOIPDwls5Vndmd",
        "number": 7805,
        "title": "specify comparators",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-16T23:27:37Z",
        "updated_at": "2023-07-17T14:30:50Z",
        "closed_at": "2023-07-17T14:30:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7805",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7805",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7805.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7805.patch",
            "merged_at": "2023-07-17T14:30:48Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7805/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7805/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7804",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7804/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7804/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7804/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7804",
        "id": 1806754191,
        "node_id": "I_kwDOIPDwls5rsOGP",
        "number": 7804,
        "title": "vectorstores Chroma client_settings anonymized_telemetry=False dont work",
        "user": {
            "login": "cabbonadio",
            "id": 114038391,
            "node_id": "U_kgDOBswWdw",
            "avatar_url": "https://avatars.githubusercontent.com/u/114038391?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cabbonadio",
            "html_url": "https://github.com/cabbonadio",
            "followers_url": "https://api.github.com/users/cabbonadio/followers",
            "following_url": "https://api.github.com/users/cabbonadio/following{/other_user}",
            "gists_url": "https://api.github.com/users/cabbonadio/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cabbonadio/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cabbonadio/subscriptions",
            "organizations_url": "https://api.github.com/users/cabbonadio/orgs",
            "repos_url": "https://api.github.com/users/cabbonadio/repos",
            "events_url": "https://api.github.com/users/cabbonadio/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cabbonadio/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-16T23:24:48Z",
        "updated_at": "2023-11-03T07:31:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n0.0.234 MacOS Big Sur\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nCreate a vectorstore with some documents\r\n\r\nTry this code to retrieve the documents\r\n\r\n`\r\nfrom chromadb.config import Settings\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\n\r\nembeddings = OpenAIEmbeddings()\r\n\r\nvectorstore = Chroma(\r\n    collection_name=\"langchain_store\",\r\n    embedding_function=embeddings,\r\n    client_settings=Settings(anonymized_telemetry=False),\r\n    persist_directory=\"./dist/vectordb\",\r\n)\r\nretriever = vectorstore.as_retriever(search_kwargs={\"k\": 3})\r\ndocs = retriever.get_relevant_documents(\"quantos litros de oleo vai no motor?\")\r\nprint(docs)`\r\n\r\nThe result is [] no documents \r\n\r\nNow if I change the client_settings parameter to \r\nclient_settings=Settings(anonymized_telemetry=False, chroma_db_impl=\"duckdb+parquet\", persist_directory=\"./dist/vectordb\"),\r\n\r\nI get the results correct\n\n### Expected behavior\n\nShould be able to set \r\nclient_settings=Settings(anonymized_telemetry=False) # to disable telemetry \r\nand receive the results back from the vectorstore",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7804/reactions",
            "total_count": 3,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7804/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7803",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7803/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7803/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7803/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7803",
        "id": 1806752958,
        "node_id": "I_kwDOIPDwls5rsNy-",
        "number": 7803,
        "title": "Confluence loader usage of id causes a conflict with Weaviate",
        "user": {
            "login": "elabbarw",
            "id": 70503629,
            "node_id": "MDQ6VXNlcjcwNTAzNjI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/70503629?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/elabbarw",
            "html_url": "https://github.com/elabbarw",
            "followers_url": "https://api.github.com/users/elabbarw/followers",
            "following_url": "https://api.github.com/users/elabbarw/following{/other_user}",
            "gists_url": "https://api.github.com/users/elabbarw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/elabbarw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/elabbarw/subscriptions",
            "organizations_url": "https://api.github.com/users/elabbarw/orgs",
            "repos_url": "https://api.github.com/users/elabbarw/repos",
            "events_url": "https://api.github.com/users/elabbarw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/elabbarw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-07-16T23:19:43Z",
        "updated_at": "2023-10-21T16:40:00Z",
        "closed_at": "2023-10-21T16:39:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain Version 0.0.233\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nEmbed from the confluence loader documents direct to weaviate.from_documents and you will get errors related to the id. (e.g.: {'error': [{'message': \"'id' is a reserved property name, no such prop with name 'id' found in class 'LangChain_96f9046045fd4623acec34b0ee6acebb' in the schema. Check your schema files for which properties in this class are available\"}]}_\r\n\r\n**** Code to reproduce ****\r\n\r\nfrom langchain.document_loaders import ConfluenceLoader\r\n\r\nloader = ConfluenceLoader(url=\"https://yoursite.atlassian.com/wiki\", token=\"12345\")\r\ndocuments = loader.load(\r\n    space_key=\"SPACE\", include_attachments=True, limit=50, max_pages=50\r\n)\r\n\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=0)\r\ndocs = text_splitter.split_documents(documents)\r\n\r\nembeddings = OpenAIEmbeddings()\r\n\r\ndb = Weaviate.from_documents(docs, embeddings, weaviate_url=WEAVIATE_URL, by_text=False)\r\n\r\n\r\nI can fix it by creating a new list with documents that have pageid instead of id in metadata:\r\n\r\nnew_documents = []\r\nfor doc in documents:\r\n    metadata = doc.metadata.copy()  \r\n    metadata['pageid'] = metadata.pop('id') \r\n    new_doc = Document(page_content=doc.page_content, metadata=metadata)  \r\n    new_documents.append(new_doc) \r\n\r\nand then continue with :\r\n\r\ndb = Weaviate.from_documents(docs, embeddings, weaviate_url=WEAVIATE_URL, by_text=False)\r\n\n\n### Expected behavior\n\nDocuments to get embedded without the error of:  {'error': [{'message': \"'id' is a reserved property name, no such prop with name 'id' found in class 'LangChain_96f9046045fd4623acec34b0ee6acebb' in the schema. Check your schema files for which properties in this class are available\"}]}",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7803/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7803/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7801",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7801/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7801/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7801/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7801",
        "id": 1806714481,
        "node_id": "PR_kwDOIPDwls5VnVrS",
        "number": 7801,
        "title": "Bm25 retriever without specific vector store dependency",
        "user": {
            "login": "larry-fuy",
            "id": 1881605,
            "node_id": "MDQ6VXNlcjE4ODE2MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1881605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/larry-fuy",
            "html_url": "https://github.com/larry-fuy",
            "followers_url": "https://api.github.com/users/larry-fuy/followers",
            "following_url": "https://api.github.com/users/larry-fuy/following{/other_user}",
            "gists_url": "https://api.github.com/users/larry-fuy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/larry-fuy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/larry-fuy/subscriptions",
            "organizations_url": "https://api.github.com/users/larry-fuy/orgs",
            "repos_url": "https://api.github.com/users/larry-fuy/repos",
            "events_url": "https://api.github.com/users/larry-fuy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/larry-fuy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-07-16T20:45:10Z",
        "updated_at": "2023-07-25T01:14:18Z",
        "closed_at": "2023-07-25T01:14:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7801",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7801",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7801.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7801.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this comment with:\r\n  - Description: a description of the change, \r\n  - Issue: the issue # it fixes (if applicable),\r\n  - Dependencies: any dependencies required for this change,\r\n  - Tag maintainer: for a quicker response, tag the relevant maintainer (see below),\r\n  - Twitter handle: we announce bigger features on Twitter. If your PR gets announced and you'd like a mention, we'll gladly shout you out!\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use.\r\n\r\nMaintainer responsibilities:\r\n  - General / Misc / if you don't know who to tag: @baskaryan\r\n  - DataLoaders / VectorStores / Retrievers: @rlancemartin, @eyurtsev\r\n  - Models / Prompts: @hwchase17, @baskaryan\r\n  - Memory: @hwchase17\r\n  - Agents / Tools / Toolkits: @hinthornw\r\n  - Tracing / Callbacks: @agola11\r\n  - Async: @agola11\r\n\r\nIf no one reviews your PR within a few days, feel free to @-mention the same people again.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n -->\r\n### Description\r\n\r\nThis PR aims to enhance the flexibility of retrievers by creating a new BM25 retriever that doesn't depend on a vector store backend. The current [ElasticSearchBM25Retriever](https://github.com/hwchase17/langchain/blob/c58d35765daa063b87733e006a4d65e2e1f388d3/langchain/retrievers/elastic_search_bm25.py) is limited to ElasticSearch, but this new retriever can be used with more flexibility. The BM25 implementation used in this retriever is based on [Gensim](https://github.com/RaRe-Technologies/gensim/blob/3ae286ee7970ab5ffebfcb2ea383e1bf4b5f0b8b/gensim/models/bm25model.py), which is widely used in many applications. With this new retriever, users can now utilize BM25 retrieval without being tied to a specific backend.\r\n\r\n### Dependencies\r\n[Gensim](https://github.com/RaRe-Technologies/gensim)\r\n\r\n@rlancemartin, @eyurtsev\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7801/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7801/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7800",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7800/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7800/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7800/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7800",
        "id": 1806708947,
        "node_id": "PR_kwDOIPDwls5VnUnA",
        "number": 7800,
        "title": "Nc/protocol",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-16T20:23:26Z",
        "updated_at": "2023-07-26T19:16:48Z",
        "closed_at": "2023-07-26T19:16:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7800",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7800",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7800.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7800.patch",
            "merged_at": "2023-07-26T19:16:47Z"
        },
        "body": "Objects implementing Runnable: BasePromptTemplate, LLM, ChatModel, Chain, Retriever, OutputParser\r\n\r\n- [x] Implement Runnable in base Retriever\r\n- [x] Raise TypeError in operator methods for unsupported things \r\n- [x] Implement dict which calls values in parallel and outputs dict with results \r\n- [x] Merge in `+` for prompts\r\n- [x] Confirm precedence order for operators, ideal would be `+` `|`, https://docs.python.org/3/reference/expressions.html#operator-precedence\r\n- [x] Add support for openai functions, ie. Chat Models must return messages\r\n  - [x] Implement BaseMessageChunk return type for BaseChatModel, a subclass of BaseMessage which implements __add__ to return BaseMessageChunk, concatenating all str args\r\n  - [x] Update implementation of stream/astream for llm and chat models to use new `_stream`, `_astream` optional methods, with default implementation in base class `raise NotImplementedError` use https://stackoverflow.com/a/59762827 to see if it is implemented in base class\r\n  - [x] Delete the IteratorCallbackHandler (leave the async one because people using)\r\n  - [x] Make BaseLLMOutputParser implement Runnable, accepting either str or BaseMessage\r\n\r\nFor a future PR:\r\n- [ ] Implement Runnable in BaseTool\r\n- [ ] Export some openai function utils?\r\n- [ ] Add `functions` and `function_call` args to chatopenai",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7800/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7800/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7799",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7799/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7799/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7799/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7799",
        "id": 1806656823,
        "node_id": "PR_kwDOIPDwls5VnKZ2",
        "number": 7799,
        "title": "prompt ergonomics",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-16T17:19:15Z",
        "updated_at": "2023-07-22T21:19:18Z",
        "closed_at": "2023-07-22T21:19:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7799",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7799",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7799.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7799.patch",
            "merged_at": "2023-07-22T21:19:17Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7799/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7799/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7798",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7798/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7798/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7798/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7798",
        "id": 1806652138,
        "node_id": "I_kwDOIPDwls5rr1Lq",
        "number": 7798,
        "title": "pip install langchain[all] takes forever to resove dependencies",
        "user": {
            "login": "andrei-radulescu-banu",
            "id": 44415560,
            "node_id": "MDQ6VXNlcjQ0NDE1NTYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/44415560?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andrei-radulescu-banu",
            "html_url": "https://github.com/andrei-radulescu-banu",
            "followers_url": "https://api.github.com/users/andrei-radulescu-banu/followers",
            "following_url": "https://api.github.com/users/andrei-radulescu-banu/following{/other_user}",
            "gists_url": "https://api.github.com/users/andrei-radulescu-banu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andrei-radulescu-banu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andrei-radulescu-banu/subscriptions",
            "organizations_url": "https://api.github.com/users/andrei-radulescu-banu/orgs",
            "repos_url": "https://api.github.com/users/andrei-radulescu-banu/repos",
            "events_url": "https://api.github.com/users/andrei-radulescu-banu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andrei-radulescu-banu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-07-16T17:04:10Z",
        "updated_at": "2023-12-01T16:54:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nThis is on `Python 3.10.6`, on a clean virtual env, on `Ubuntu 22.04` server w/o any GPU installed. \r\n\r\nOn the other hand, `pip install langchain[llms]` installs without problem.\r\n\r\nHere is the output of `pip install langchain[all]`, for langchain==0.0.234\r\n[1.txt](https://github.com/hwchase17/langchain/files/12064621/1.txt)\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce\r\n1. Create venv\r\n2. Source activation script to enter venv\r\n3. pip install langchain[all]\r\n\r\nLangchain version tested is 0.0.234.\n\n### Expected behavior\n\nInstall w/o having to try multiple versions of dependencies",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7798/reactions",
            "total_count": 2,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7798/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7797",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7797/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7797/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7797/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7797",
        "id": 1806648563,
        "node_id": "PR_kwDOIPDwls5VnIw0",
        "number": 7797,
        "title": "add HuggingGPT",
        "user": {
            "login": "tricktreat",
            "id": 25740077,
            "node_id": "MDQ6VXNlcjI1NzQwMDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/25740077?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tricktreat",
            "html_url": "https://github.com/tricktreat",
            "followers_url": "https://api.github.com/users/tricktreat/followers",
            "following_url": "https://api.github.com/users/tricktreat/following{/other_user}",
            "gists_url": "https://api.github.com/users/tricktreat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tricktreat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tricktreat/subscriptions",
            "organizations_url": "https://api.github.com/users/tricktreat/orgs",
            "repos_url": "https://api.github.com/users/tricktreat/repos",
            "events_url": "https://api.github.com/users/tricktreat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tricktreat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-16T16:53:08Z",
        "updated_at": "2023-07-18T03:17:35Z",
        "closed_at": "2023-07-18T03:17:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7797",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7797",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7797.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7797.patch",
            "merged_at": null
        },
        "body": "Add HuggingGPT Agent, see https://arxiv.org/abs/2303.17580.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7797/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7797/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7796",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7796/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7796/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7796/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7796",
        "id": 1806644448,
        "node_id": "PR_kwDOIPDwls5VnH9K",
        "number": 7796,
        "title": "Add examples to docstrings",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-16T16:39:51Z",
        "updated_at": "2023-07-16T19:05:57Z",
        "closed_at": "2023-07-16T19:05:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7796",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7796",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7796.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7796.patch",
            "merged_at": "2023-07-16T19:05:56Z"
        },
        "body": "and:\r\n- remove dataset name from autogenerated project name\r\n- print out project name to view ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7796/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7796/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7795",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7795/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7795/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7795/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7795",
        "id": 1806639552,
        "node_id": "PR_kwDOIPDwls5VnG_6",
        "number": 7795,
        "title": "Add HuggingGPT Agent",
        "user": {
            "login": "tricktreat",
            "id": 25740077,
            "node_id": "MDQ6VXNlcjI1NzQwMDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/25740077?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tricktreat",
            "html_url": "https://github.com/tricktreat",
            "followers_url": "https://api.github.com/users/tricktreat/followers",
            "following_url": "https://api.github.com/users/tricktreat/following{/other_user}",
            "gists_url": "https://api.github.com/users/tricktreat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tricktreat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tricktreat/subscriptions",
            "organizations_url": "https://api.github.com/users/tricktreat/orgs",
            "repos_url": "https://api.github.com/users/tricktreat/repos",
            "events_url": "https://api.github.com/users/tricktreat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tricktreat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-16T16:22:50Z",
        "updated_at": "2023-07-16T16:34:07Z",
        "closed_at": "2023-07-16T16:34:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7795",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7795",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7795.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7795.patch",
            "merged_at": null
        },
        "body": "Add HuggingGPT Agent, see https://arxiv.org/abs/2303.17580.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7795/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7795/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7794",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7794/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7794/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7794/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7794",
        "id": 1806625797,
        "node_id": "PR_kwDOIPDwls5VnEQT",
        "number": 7794,
        "title": "Accept LLM via constructor",
        "user": {
            "login": "hinthornw",
            "id": 13333726,
            "node_id": "MDQ6VXNlcjEzMzMzNzI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/13333726?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hinthornw",
            "html_url": "https://github.com/hinthornw",
            "followers_url": "https://api.github.com/users/hinthornw/followers",
            "following_url": "https://api.github.com/users/hinthornw/following{/other_user}",
            "gists_url": "https://api.github.com/users/hinthornw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hinthornw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hinthornw/subscriptions",
            "organizations_url": "https://api.github.com/users/hinthornw/orgs",
            "repos_url": "https://api.github.com/users/hinthornw/repos",
            "events_url": "https://api.github.com/users/hinthornw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hinthornw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-16T15:41:42Z",
        "updated_at": "2023-07-16T15:46:38Z",
        "closed_at": "2023-07-16T15:46:37Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7794",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7794",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7794.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7794.patch",
            "merged_at": "2023-07-16T15:46:37Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7794/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7794/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7793",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7793/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7793/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7793/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7793",
        "id": 1806612057,
        "node_id": "PR_kwDOIPDwls5VnBpm",
        "number": 7793,
        "title": "Update to Anthropic's claude-v2",
        "user": {
            "login": "mikelambert",
            "id": 7953259,
            "node_id": "MDQ6VXNlcjc5NTMyNTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7953259?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikelambert",
            "html_url": "https://github.com/mikelambert",
            "followers_url": "https://api.github.com/users/mikelambert/followers",
            "following_url": "https://api.github.com/users/mikelambert/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikelambert/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikelambert/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikelambert/subscriptions",
            "organizations_url": "https://api.github.com/users/mikelambert/orgs",
            "repos_url": "https://api.github.com/users/mikelambert/repos",
            "events_url": "https://api.github.com/users/mikelambert/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikelambert/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-07-16T14:57:35Z",
        "updated_at": "2023-07-17T15:55:49Z",
        "closed_at": "2023-07-17T15:55:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7793",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7793",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7793.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7793.patch",
            "merged_at": "2023-07-17T15:55:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7793/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7793/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7791",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7791/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7791/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7791/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7791",
        "id": 1806596774,
        "node_id": "I_kwDOIPDwls5rrnqm",
        "number": 7791,
        "title": "MultiQueryRetriever.from_llm has abandon param type BaseLLM",
        "user": {
            "login": "joeylin",
            "id": 2030833,
            "node_id": "MDQ6VXNlcjIwMzA4MzM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2030833?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/joeylin",
            "html_url": "https://github.com/joeylin",
            "followers_url": "https://api.github.com/users/joeylin/followers",
            "following_url": "https://api.github.com/users/joeylin/following{/other_user}",
            "gists_url": "https://api.github.com/users/joeylin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/joeylin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/joeylin/subscriptions",
            "organizations_url": "https://api.github.com/users/joeylin/orgs",
            "repos_url": "https://api.github.com/users/joeylin/repos",
            "events_url": "https://api.github.com/users/joeylin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/joeylin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-16T14:11:08Z",
        "updated_at": "2023-10-22T16:06:06Z",
        "closed_at": "2023-10-22T16:06:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nMAC OS M2 \r\nlangchain: 0.0.234\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nMultiQueryRetriever.from_llm has abandon param type BaseLLM\r\n```\r\n@classmethod\r\n    def from_llm(\r\n        cls,\r\n        retriever: BaseRetriever,\r\n        llm: BaseLLM,\r\n        prompt: PromptTemplate = DEFAULT_QUERY_PROMPT,\r\n        parser_key: str = \"lines\",\r\n    ) -> \"MultiQueryRetriever\":\r\n```\r\nwhen I use OpenAI, it prints warning: \r\n```\r\nUserWarning: You are trying to use a chat model. This way of initializing it is no longer supported. Instead, please use: `from langchain.chat_models import ChatOpenAI`\r\n```\r\nllm parameter type looks like it needs to be changed to BaseLanguageModel\n\n### Expected behavior\n\nllm parameter type looks like it needs to be changed to BaseLanguageModel",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7791/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7791/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7790",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7790/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7790/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7790/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7790",
        "id": 1806579479,
        "node_id": "I_kwDOIPDwls5rrjcX",
        "number": 7790,
        "title": "HuggingFaceEndpoint returns truncated answer (could this be just a first chunk of a larger reply?)",
        "user": {
            "login": "sglebs",
            "id": 1507221,
            "node_id": "MDQ6VXNlcjE1MDcyMjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1507221?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sglebs",
            "html_url": "https://github.com/sglebs",
            "followers_url": "https://api.github.com/users/sglebs/followers",
            "following_url": "https://api.github.com/users/sglebs/following{/other_user}",
            "gists_url": "https://api.github.com/users/sglebs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sglebs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sglebs/subscriptions",
            "organizations_url": "https://api.github.com/users/sglebs/orgs",
            "repos_url": "https://api.github.com/users/sglebs/repos",
            "events_url": "https://api.github.com/users/sglebs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sglebs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-16T13:18:48Z",
        "updated_at": "2023-10-22T16:06:11Z",
        "closed_at": "2023-10-22T16:06:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython 3.9.6\r\nlangchain==0.0.229\r\nMacOS on Apple M2 hardware\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThis may be related to https://github.com/hwchase17/langchain/issues/7785 , I am not sure. When I use HuggingFaceEndpoint in regular, non-streaming mode, I see that the reply comes truncated. \r\n\r\n 1. Deploy Falcon-7b https://huggingface.co/tiiuae/falcon-7b\r\n 2. Use RetrievalQA and HuggingFaceEndpoint as described in https://github.com/hwchase17/langchain/issues/7785\r\n 3. Use the prompt described in https://github.com/hwchase17/langchain/issues/7786 (not sure if you really need this to reproduce)\r\n 4. Call it using structured_result = my_qna({query_key: query}) \r\n 5. The result will come back truncated. No streaming is performed, no token callbacks run, so you will get the json from the reply:  structured_result[\"result\"]\r\n\r\nIn my case, the question and answer in Portuguese:\r\n\r\n```\r\nO que \u00e9 a s\u00e9rie G?\r\nA s\u00e9rie G da Scania traz uma cabina com uma est\u00e9tica moderna e um confort\r\n```\r\n\r\nThe last word is truncated, and the whole rest of the explanation is missing.\r\n\r\n\r\n\n\n### Expected behavior\n\nA complete answer, full text.  Or chunk-based callbacks via streaming, as I point out at https://github.com/hwchase17/langchain/issues/7785",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7790/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7790/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7789",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7789/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7789/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7789/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/7789",
        "id": 1806578036,
        "node_id": "PR_kwDOIPDwls5Vm7KX",
        "number": 7789,
        "title": "Add google place ID to google places tool response",
        "user": {
            "login": "borisnieuwenhuis",
            "id": 314468,
            "node_id": "MDQ6VXNlcjMxNDQ2OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/314468?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/borisnieuwenhuis",
            "html_url": "https://github.com/borisnieuwenhuis",
            "followers_url": "https://api.github.com/users/borisnieuwenhuis/followers",
            "following_url": "https://api.github.com/users/borisnieuwenhuis/following{/other_user}",
            "gists_url": "https://api.github.com/users/borisnieuwenhuis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/borisnieuwenhuis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/borisnieuwenhuis/subscriptions",
            "organizations_url": "https://api.github.com/users/borisnieuwenhuis/orgs",
            "repos_url": "https://api.github.com/users/borisnieuwenhuis/repos",
            "events_url": "https://api.github.com/users/borisnieuwenhuis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/borisnieuwenhuis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-07-16T13:14:07Z",
        "updated_at": "2023-07-20T17:15:25Z",
        "closed_at": "2023-07-20T16:04:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/7789",
            "html_url": "https://github.com/langchain-ai/langchain/pull/7789",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/7789.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/7789.patch",
            "merged_at": "2023-07-20T16:04:32Z"
        },
        "body": "  - Description: this change will add the google place ID of the found location to the response of the GooglePlacesTool\r\n  - Issue: Not applicable\r\n  - Dependencies: no dependencies\r\n  - Tag maintainer: @hinthornw\r\n  - Twitter handle: Not applicable\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7789/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7789/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7788",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7788/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7788/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7788/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/7788",
        "id": 1806570994,
        "node_id": "I_kwDOIPDwls5rrhXy",
        "number": 7788,
        "title": "Unable to Apply frequencyPenalty Parameter to ChatOpenAI Class",
        "user": {
            "login": "SeloSlav",
            "id": 8828948,
            "node_id": "MDQ6VXNlcjg4Mjg5NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8828948?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SeloSlav",
            "html_url": "https://github.com/SeloSlav",
            "followers_url": "https://api.github.com/users/SeloSlav/followers",
            "following_url": "https://api.github.com/users/SeloSlav/following{/other_user}",
            "gists_url": "https://api.github.com/users/SeloSlav/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SeloSlav/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SeloSlav/subscriptions",
            "organizations_url": "https://api.github.com/users/SeloSlav/orgs",
            "repos_url": "https://api.github.com/users/SeloSlav/repos",
            "events_url": "https://api.github.com/users/SeloSlav/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SeloSlav/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-07-16T12:52:03Z",
        "updated_at": "2023-10-30T16:05:43Z",
        "closed_at": "2023-10-30T16:05:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nIssue:\r\n\r\nI'm experiencing an issue while trying to apply the `frequencyPenalty` parameter to the `ChatOpenAI` class in my Flask server setup. I'm running a Flask server that handles a POST query and returns a streaming response from GPT using LlamaIndex.\r\n\r\nWhen I attempt to apply the `frequencyPenalty` parameter to `ChatOpenAI` instance, the server throws a warning:\r\n\r\n```python\r\nWARNING! frequencyPenalty is not default parameter.\r\nfrequencyPenalty was transferred to model_kwargs.\r\nPlease confirm that frequencyPenalty is what you intended.\r\n```\r\n\r\nUpon reviewing the documentation, I didn't find a clear way to apply the `frequencyPenalty` to the `ChatOpenAI` class. \r\n\r\nHere's a snippet of my current code where I'm experiencing this issue:\r\n\r\n```python\r\n# LLM that supports streaming\r\nllm = ChatOpenAI(model_name=\"gpt-3.5-turbo-16k\", streaming=True, frequencyPenalty=6)\r\nllm_predictor = LLMPredictor(llm=llm)\r\n```\r\n\r\nI'm using `ChatOpenAI` to create an instance of the LLM that supports streaming. I intended to apply `frequencyPenalty` to this instance but encountered the above warning.\r\n\r\nFor further reference, the complete code of my Flask server setup is shared in the original post.\r\n\r\nAny guidance on how to correctly apply the `frequencyPenalty` to `ChatOpenAI` would be greatly appreciated. Thanks in advance!\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```\r\nimport openai\r\nfrom flask import Flask, request, Response\r\nfrom flask_cors import CORS\r\nfrom dotenv import load_dotenv\r\nimport os\r\nimport pandas as pd\r\nfrom llama_index import GPTVectorStoreIndex, SimpleDirectoryReader, ServiceContext, LLMPredictor, Document\r\nfrom langchain.chat_models import ChatOpenAI\r\nimport logging\r\n\r\napp = Flask(__name__)\r\nCORS(app)\r\n\r\nload_dotenv()\r\n\r\n# Get the API key from the environment variable\r\napi_key = os.getenv('OPENAI_API_KEY')\r\n\r\n# Set the OpenAI API key directly\r\nopenai.api_key = api_key\r\n\r\n# Loading documents from an Excel file\r\ndf = pd.read_excel('data/SupplierComplete.xlsx')\r\n\r\n# Convert DataFrame rows into documents\r\ndocuments = [\r\n    Document(text=' '.join(f'{name}: {value}' for name, value in zip(df.columns, map(str, row.values))))\r\n    for _, row in df.iterrows()\r\n]\r\n\r\n# LLM that supports streaming\r\nllm = ChatOpenAI(model_name=\"gpt-3.5-turbo-16k\", streaming=True, frequencyPenalty=6)\r\nllm_predictor = LLMPredictor(llm=llm)\r\n\r\n# Construct a simple vector index\r\nindex = GPTVectorStoreIndex.from_documents(documents, service_context=ServiceContext.from_defaults(llm_predictor=llm_predictor))\r\n\r\n# Configure query engine to use streaming\r\nquery_engine = index.as_query_engine(streaming=True, similarity_top_k=2)\r\n\r\n@app.route('/api/query', methods=['POST'])\r\ndef query():\r\n    try:\r\n        # Get the payload from the request\r\n        payload = request.json\r\n\r\n        # Log the received payload\r\n        logging.info(f\"Received payload: {payload}\")\r\n\r\n        # Update the LLMPredictor parameters based on the payload\r\n        llm_predictor.max_tokens = payload.get('max_tokens', 256)\r\n        llm_predictor.llm.temperature = payload.get('temperature', 0.9)\r\n\r\n        # Get the system message from the payload\r\n        system_message = [m['content'] for m in payload['messages'] if m['role'] == 'system'][0]\r\n\r\n        # Get the question from the messages in the payload\r\n        user_message = [m['content'] for m in payload['messages'] if m['role'] == 'user'][-1]\r\n\r\n        # Combine system message and user message\r\n        question = system_message + ' ' + user_message\r\n\r\n        # Now, query returns a StreamingResponse object\r\n        streaming_response = query_engine.query(question)\r\n\r\n        def response_stream():\r\n            for text in streaming_response.response_gen:\r\n                yield text + \"\\n\"\r\n\r\n        return Response(response_stream(), mimetype=\"text/event-stream\")\r\n\r\n    except Exception as e:\r\n        logging.error(f\"Exception occurred: {e}\")\r\n        return Response(f\"Server error: {e}\", status=500)\r\n\r\nif __name__ == '__main__':\r\n    # Start the server, to run this script use \"python llama_index_server.py\" in terminal\r\n\r\n    # Configure logging level\r\n    logging.basicConfig(level=logging.DEBUG)\r\n\r\n    app.run(host='0.0.0.0', port=5000, debug=True)\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expect to be able to apply the frequencyPenalty parameter to the ChatOpenAI class without encountering any warning messages or errors. Ideally, the frequencyPenalty should influence the LLM's generation by tuning the model's likelihood to avoid frequently occurring responses. I'm expecting this to work seamlessly with other parameters and configurations I'm setting up for my ChatOpenAI instance.\r\n\r\nIf there is a specific way or an alternate parameter to achieve this functionality, I would expect the documentation to clearly illustrate this. Also, any warnings or error messages should provide actionable insights or steps for resolution.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/7788/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/7788/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    }
]