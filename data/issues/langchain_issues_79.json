[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6161",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6161/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6161/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6161/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6161",
        "id": 1756736892,
        "node_id": "PR_kwDOIPDwls5S_EhI",
        "number": 6161,
        "title": "Fix error in aim callback when tracking of chains.",
        "user": {
            "login": "ajms",
            "id": 2394425,
            "node_id": "MDQ6VXNlcjIzOTQ0MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2394425?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ajms",
            "html_url": "https://github.com/ajms",
            "followers_url": "https://api.github.com/users/ajms/followers",
            "following_url": "https://api.github.com/users/ajms/following{/other_user}",
            "gists_url": "https://api.github.com/users/ajms/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ajms/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ajms/subscriptions",
            "organizations_url": "https://api.github.com/users/ajms/orgs",
            "repos_url": "https://api.github.com/users/ajms/repos",
            "events_url": "https://api.github.com/users/ajms/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ajms/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-14T12:01:52Z",
        "updated_at": "2023-09-15T07:02:51Z",
        "closed_at": "2023-09-15T07:02:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6161",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6161",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6161.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6161.patch",
            "merged_at": null
        },
        "body": "The aim callback is trying to track the keys \"input\" and \"output\" (hard coded) when tracking a chain. This causes the exceptions \r\n```\r\nError in on_chain_start callback: 'input'\r\nError in on_chain_end callback: 'output'\r\n```\r\nto be thrown.\r\n\r\nI fixed the error by tracking all key, value pairs from the inputs resp. outputs variables.\r\n\r\nFurthermore, the following issue is also fixed:\r\nFixes # 5107\r\n\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\nTracing / Callbacks\r\n  - @agola11 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6161/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6161/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6160",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6160/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6160/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6160/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6160",
        "id": 1756732814,
        "node_id": "I_kwDOIPDwls5otZ2O",
        "number": 6160,
        "title": "LlamaCpp loading time",
        "user": {
            "login": "reddiamond1234",
            "id": 122911466,
            "node_id": "U_kgDOB1N66g",
            "avatar_url": "https://avatars.githubusercontent.com/u/122911466?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/reddiamond1234",
            "html_url": "https://github.com/reddiamond1234",
            "followers_url": "https://api.github.com/users/reddiamond1234/followers",
            "following_url": "https://api.github.com/users/reddiamond1234/following{/other_user}",
            "gists_url": "https://api.github.com/users/reddiamond1234/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/reddiamond1234/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/reddiamond1234/subscriptions",
            "organizations_url": "https://api.github.com/users/reddiamond1234/orgs",
            "repos_url": "https://api.github.com/users/reddiamond1234/repos",
            "events_url": "https://api.github.com/users/reddiamond1234/events{/privacy}",
            "received_events_url": "https://api.github.com/users/reddiamond1234/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-14T11:59:36Z",
        "updated_at": "2023-10-30T16:06:23Z",
        "closed_at": "2023-10-30T16:06:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Can I improve loading time of Llama Cpp 7b/13b? I am using LlamaCpp function with LLMChain and RetrievalQA.from_chain_type in my python code.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6160/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6160/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6159",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6159/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6159/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6159/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6159",
        "id": 1756724158,
        "node_id": "PR_kwDOIPDwls5S_BrK",
        "number": 6159,
        "title": "VectorStore Typesense refactored example code and modified k value",
        "user": {
            "login": "2796gaurav",
            "id": 17353992,
            "node_id": "MDQ6VXNlcjE3MzUzOTky",
            "avatar_url": "https://avatars.githubusercontent.com/u/17353992?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/2796gaurav",
            "html_url": "https://github.com/2796gaurav",
            "followers_url": "https://api.github.com/users/2796gaurav/followers",
            "following_url": "https://api.github.com/users/2796gaurav/following{/other_user}",
            "gists_url": "https://api.github.com/users/2796gaurav/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/2796gaurav/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/2796gaurav/subscriptions",
            "organizations_url": "https://api.github.com/users/2796gaurav/orgs",
            "repos_url": "https://api.github.com/users/2796gaurav/repos",
            "events_url": "https://api.github.com/users/2796gaurav/events{/privacy}",
            "received_events_url": "https://api.github.com/users/2796gaurav/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-14T11:55:29Z",
        "updated_at": "2023-06-19T00:44:38Z",
        "closed_at": "2023-06-19T00:44:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6159",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6159",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6159.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6159.patch",
            "merged_at": "2023-06-19T00:44:38Z"
        },
        "body": "Changes done.\r\n1. Example code in Typesense Class provided input embedding as `embedding=embedding.embed_query` which throws an error as `AttributeError: 'function' object has no attribute 'embed_query'`.\r\n2. modified k values in vector similarity as Typesense by default returns 10 results. So providing k =4 by default would make users think about why the results are returned 10 instead of 4.\r\n\r\n\r\n#### Who can review?\r\n\r\n@jasonbosco @hwchase17 \r\n @dev2049",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6159/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6159/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6158",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6158/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6158/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6158/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6158",
        "id": 1756703219,
        "node_id": "I_kwDOIPDwls5otSnz",
        "number": 6158,
        "title": "OpenAICallbackHandler is not updating values when used in ConversationalRetrievalChain",
        "user": {
            "login": "ketank1000",
            "id": 11884142,
            "node_id": "MDQ6VXNlcjExODg0MTQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/11884142?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ketank1000",
            "html_url": "https://github.com/ketank1000",
            "followers_url": "https://api.github.com/users/ketank1000/followers",
            "following_url": "https://api.github.com/users/ketank1000/following{/other_user}",
            "gists_url": "https://api.github.com/users/ketank1000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ketank1000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ketank1000/subscriptions",
            "organizations_url": "https://api.github.com/users/ketank1000/orgs",
            "repos_url": "https://api.github.com/users/ketank1000/repos",
            "events_url": "https://api.github.com/users/ketank1000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ketank1000/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-14T11:44:21Z",
        "updated_at": "2023-08-24T07:06:53Z",
        "closed_at": "2023-06-17T18:27:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain : 0.0.197\r\ndocker python alpine image : 3.11.3\r\n\r\nConversationalRetrievalChain works perfectly and i get awesome output. at the same time i also need to track my usage on openai api call.\r\n\r\nIm setting the qa object as below\r\n```\r\nqa = ConversationalRetrievalChain.from_llm(\r\n        model,\r\n        retriever=retriever,\r\n        verbose=True,\r\n        # callback in not updating the cost\r\n        callbacks=[OpenAICallbackHandler()]\r\n    )\r\n```\r\n\r\nI see the callback is printing the all openai info on console, which means callback is getting triggered.\r\nBut I always see all values to Zero.\r\n\r\n### Who can help?\r\n\r\n@ag\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [X] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. Create qa object as show in disciption with callback.\r\n2. Pass the question chat history  to qa object \r\n\r\n### Expected behavior\r\n\r\nCallback show update all the values for openai traceback",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6158/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6158/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6157",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6157/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6157/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6157/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6157",
        "id": 1756695978,
        "node_id": "I_kwDOIPDwls5otQ2q",
        "number": 6157,
        "title": "Impossible to connect PowerBI Dataset Agent to Azure services",
        "user": {
            "login": "JRlis",
            "id": 136589909,
            "node_id": "U_kgDOCCQyVQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/136589909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JRlis",
            "html_url": "https://github.com/JRlis",
            "followers_url": "https://api.github.com/users/JRlis/followers",
            "following_url": "https://api.github.com/users/JRlis/following{/other_user}",
            "gists_url": "https://api.github.com/users/JRlis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JRlis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JRlis/subscriptions",
            "organizations_url": "https://api.github.com/users/JRlis/orgs",
            "repos_url": "https://api.github.com/users/JRlis/repos",
            "events_url": "https://api.github.com/users/JRlis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JRlis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-14T11:39:46Z",
        "updated_at": "2023-12-01T16:09:33Z",
        "closed_at": "2023-12-01T16:09:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHi, \r\nI'm trying to reproduce this example https://python.langchain.com/en/latest/modules/agents/toolkits/examples/powerbi.html\r\n\r\nWhen i launch this part of the code : \r\ntoolkit = PowerBIToolkit(\r\n    powerbi=PowerBIDataset.update_forward_refs(dataset_id=dataset-id, table_names=['Tables'], credential=DefaultAzureCredential()), \r\n    llm=smart_llm\r\n)\r\n\r\nI have this error : NameError: name 'TokenCredential' is not defined\r\n\r\nWhat am I doing wrong ? Do i have to specify things with Azure credentials first ? \r\nThanks for your help\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nexample here : https://python.langchain.com/en/latest/modules/agents/toolkits/examples/powerbi.html\r\n\r\nI just modified powerbi=PowerBIDataset() to powerbi=PowerBIDataset.update_forward_refs() because of an error i had. \n\n### Expected behavior\n\nConnect the agent to powerbi rest API ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6157/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6157/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6155",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6155/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6155/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6155/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6155",
        "id": 1756589254,
        "node_id": "PR_kwDOIPDwls5S-kzR",
        "number": 6155,
        "title": "Add docs for tags",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-14T10:42:49Z",
        "updated_at": "2023-06-14T21:02:00Z",
        "closed_at": "2023-06-14T21:01:59Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6155",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6155",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6155.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6155.patch",
            "merged_at": "2023-06-14T21:01:59Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @hwchase17\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6155/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6155/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6154",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6154/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6154/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6154/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6154",
        "id": 1756537742,
        "node_id": "PR_kwDOIPDwls5S-aF2",
        "number": 6154,
        "title": "Add Alibaba Cloud OpenSearch as a new vector store",
        "user": {
            "login": "zhaoshengbo",
            "id": 4787922,
            "node_id": "MDQ6VXNlcjQ3ODc5MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4787922?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhaoshengbo",
            "html_url": "https://github.com/zhaoshengbo",
            "followers_url": "https://api.github.com/users/zhaoshengbo/followers",
            "following_url": "https://api.github.com/users/zhaoshengbo/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhaoshengbo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhaoshengbo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhaoshengbo/subscriptions",
            "organizations_url": "https://api.github.com/users/zhaoshengbo/orgs",
            "repos_url": "https://api.github.com/users/zhaoshengbo/repos",
            "events_url": "https://api.github.com/users/zhaoshengbo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhaoshengbo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-14T10:12:36Z",
        "updated_at": "2023-06-20T18:39:47Z",
        "closed_at": "2023-06-20T17:07:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6154",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6154",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6154.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6154.patch",
            "merged_at": "2023-06-20T17:07:40Z"
        },
        "body": "Hello Folks,\r\n\r\nThanks for creating and maintaining this great project. I'm excited to submit this PR to add Alibaba Cloud OpenSearch as a new vector store.\r\n\r\nOpenSearch is a one-stop platform to develop intelligent search services. OpenSearch was built based on the large-scale distributed search engine developed by Alibaba. OpenSearch serves more than 500 business cases in Alibaba Group and thousands of Alibaba Cloud customers. OpenSearch helps develop search services in different search scenarios, including e-commerce, O2O, multimedia, the content industry, communities and forums, and big data query in enterprises.\r\n\r\nOpenSearch provides the vector search feature. In specific scenarios, especially test question search and image search scenarios, you can use the vector search feature together with the multimodal search feature to improve the accuracy of search results.\r\n\r\n\r\nThis PR includes:\r\n\r\nA AlibabaCloudOpenSearch class that can connect to the Alibaba Cloud OpenSearch instance.\r\nadd embedings and metadata into a opensearch datasource.\r\nquerying by squared euclidean and metadata.\r\nintegration tests.\r\nipython notebook and docs.\r\n\r\nI have read your contributing guidelines. And I have passed the tests below\r\n\r\n- [x]  make format\r\n- [x]  make lint\r\n- [x]  make coverage\r\n- [x]  make test\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6154/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6154/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6153",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6153/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6153/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6153/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6153",
        "id": 1756498115,
        "node_id": "PR_kwDOIPDwls5S-RuB",
        "number": 6153,
        "title": "Extend `ArgillaCallbackHandler` support",
        "user": {
            "login": "alvarobartt",
            "id": 36760800,
            "node_id": "MDQ6VXNlcjM2NzYwODAw",
            "avatar_url": "https://avatars.githubusercontent.com/u/36760800?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alvarobartt",
            "html_url": "https://github.com/alvarobartt",
            "followers_url": "https://api.github.com/users/alvarobartt/followers",
            "following_url": "https://api.github.com/users/alvarobartt/following{/other_user}",
            "gists_url": "https://api.github.com/users/alvarobartt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alvarobartt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alvarobartt/subscriptions",
            "organizations_url": "https://api.github.com/users/alvarobartt/orgs",
            "repos_url": "https://api.github.com/users/alvarobartt/repos",
            "events_url": "https://api.github.com/users/alvarobartt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alvarobartt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-14T09:52:33Z",
        "updated_at": "2023-06-18T18:18:34Z",
        "closed_at": "2023-06-18T18:18:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6153",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6153",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6153.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6153.patch",
            "merged_at": "2023-06-18T18:18:34Z"
        },
        "body": "Hi again @agola11! \ud83e\udd17\r\n\r\n## What's in this PR?\r\n\r\nAfter playing around with different chains we noticed that some chains were using different `output_key`s and we were just handling some, so we've extended the support to any output, either if it's a Python list or a string.\r\n\r\nKudos to @dvsrepo for spotting this!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6153/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6153/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6152",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6152/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6152/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6152/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6152",
        "id": 1756473541,
        "node_id": "I_kwDOIPDwls5osajF",
        "number": 6152,
        "title": "langchain rephrased the human input to a completely different meaning in the prompts",
        "user": {
            "login": "hpwahyao",
            "id": 13344443,
            "node_id": "MDQ6VXNlcjEzMzQ0NDQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/13344443?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hpwahyao",
            "html_url": "https://github.com/hpwahyao",
            "followers_url": "https://api.github.com/users/hpwahyao/followers",
            "following_url": "https://api.github.com/users/hpwahyao/following{/other_user}",
            "gists_url": "https://api.github.com/users/hpwahyao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hpwahyao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hpwahyao/subscriptions",
            "organizations_url": "https://api.github.com/users/hpwahyao/orgs",
            "repos_url": "https://api.github.com/users/hpwahyao/repos",
            "events_url": "https://api.github.com/users/hpwahyao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hpwahyao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-14T09:37:59Z",
        "updated_at": "2023-10-24T16:08:03Z",
        "closed_at": "2023-10-24T16:08:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nRecently, we do a few test on the ConversationalRetrievalChain + Memory, and notice that, the customer's question is rephrased by Langchain to a totally different meaning. Anyone knows how to avoid this?\r\n\r\nThe conversation is to introduce the different package of a mobile plan to the customer. and Customer inputs: **Hi**. However, while it comes to Langchain, this sentence is rephrased to: **What is your estimated monthly usage for data, talktime, and SMS?**\r\n\r\n**Code:** \r\n\r\nqa = ConversationalRetrievalChain.from_llm(\r\n            llm=self.llm, retriever=retriever, combine_docs_chain_kwargs={'prompt': self.QA_PROMPT}, verbose=True)    \r\nresult = qa({'question': question, 'chat_history': message_history.messages})\r\n\r\n**Debugging inf\u00f6 as below:** \r\n\r\nPrompt after formatting:\r\nGiven the following conversation and a follow up question, rephrase the follow up question to be a standalone question, in its original language.\r\n\r\nChat History:\r\n\r\nHuman: I would like to have a data plan\r\nAssistant: Sure, we have several data plans available. Can you please let me know your estimated monthly usage for data, talktime, and SMS? This will help me recommend the most suitable plan for you.\r\nFollow Up Input: hi\r\nStandalone question:\r\n\r\n> Finished chain.\r\n\r\nHuman: I would like to have a data plan\r\nAssistant: Sure, we have several data plans available. Can you please let me know your estimated monthly usage for data, talktime, and SMS? This will help me recommend the most suitable plan for you.\r\n        \r\nHuman: What is your estimated monthly usage for data, talktime, and SMS?\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [X] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nCreate a context of the conversation, and send some subjective sentence. \r\n\r\n### Expected behavior\r\n\r\nLangchain rephrase it to a question. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6152/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6152/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6150",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6150/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6150/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6150/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6150",
        "id": 1756466498,
        "node_id": "I_kwDOIPDwls5osY1C",
        "number": 6150,
        "title": "Tracking total cost for gpt-3.5-turbo-0613 yields $0.0",
        "user": {
            "login": "TLazarevic",
            "id": 18078190,
            "node_id": "MDQ6VXNlcjE4MDc4MTkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/18078190?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TLazarevic",
            "html_url": "https://github.com/TLazarevic",
            "followers_url": "https://api.github.com/users/TLazarevic/followers",
            "following_url": "https://api.github.com/users/TLazarevic/following{/other_user}",
            "gists_url": "https://api.github.com/users/TLazarevic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TLazarevic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TLazarevic/subscriptions",
            "organizations_url": "https://api.github.com/users/TLazarevic/orgs",
            "repos_url": "https://api.github.com/users/TLazarevic/repos",
            "events_url": "https://api.github.com/users/TLazarevic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TLazarevic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-14T09:33:38Z",
        "updated_at": "2023-06-20T07:26:02Z",
        "closed_at": "2023-06-20T07:26:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version: 0.0.200\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps to reproduce:\r\n\r\n1. Create a ConversationChain instance with parameters:\r\n```\r\nllm = ChatOpenAI(model_name=\"gpt-3.5-turbo-0613\", temperature=0)\r\nmemory = ConversationBufferMemory()\r\n```\r\n2. Run the chain inside callback block:\r\n```\r\n    with get_openai_callback() as cb:\r\n            response = conversation.run(\"Tell me a joke\")\r\n            print(cb)\r\n```\r\n3. Total Cost is always $0.0.\r\n<img width=\"767\" alt=\"Screenshot 2023-06-14 at 11 31 21\" src=\"https://github.com/hwchase17/langchain/assets/18078190/e7992bcb-f288-462f-ab2c-94d0d894929f\">\r\n\n\n### Expected behavior\n\nTotal cost of the conversation chain usage is reflected in the Total Cost parameter of the callback and represents accurate usage costs.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6150/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6150/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6149",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6149/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6149/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6149/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6149",
        "id": 1756464881,
        "node_id": "PR_kwDOIPDwls5S-Kh8",
        "number": 6149,
        "title": "Add promptlayer_callback.py to be able to use PL w/ callbacks",
        "user": {
            "login": "SalehHindi",
            "id": 15721377,
            "node_id": "MDQ6VXNlcjE1NzIxMzc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15721377?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SalehHindi",
            "html_url": "https://github.com/SalehHindi",
            "followers_url": "https://api.github.com/users/SalehHindi/followers",
            "following_url": "https://api.github.com/users/SalehHindi/following{/other_user}",
            "gists_url": "https://api.github.com/users/SalehHindi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SalehHindi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SalehHindi/subscriptions",
            "organizations_url": "https://api.github.com/users/SalehHindi/orgs",
            "repos_url": "https://api.github.com/users/SalehHindi/repos",
            "events_url": "https://api.github.com/users/SalehHindi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SalehHindi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "vowelparrot",
                "id": 130414180,
                "node_id": "U_kgDOB8X2ZA",
                "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/vowelparrot",
                "html_url": "https://github.com/vowelparrot",
                "followers_url": "https://api.github.com/users/vowelparrot/followers",
                "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
                "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
                "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
                "repos_url": "https://api.github.com/users/vowelparrot/repos",
                "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
                "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-14T09:32:48Z",
        "updated_at": "2023-06-30T15:14:44Z",
        "closed_at": "2023-06-30T15:14:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6149",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6149",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6149.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6149.patch",
            "merged_at": "2023-06-30T15:14:43Z"
        },
        "body": "# Description\r\nInstead of inheriting off of LLM objects like OpenAI to create PromptLayer objects (eg PromptLayerOpenAI), create a single PromptLayerCallback object. This adds support for all of langchain's LLMs (openai, anthropic, replicate, dozens others).\r\n\r\nThis also paves the way for PromptLayer to add logging for agents, chains, etc based on the callbacks api.\r\n\r\n## Examples\r\n\r\nAsync Example\r\n```python\r\nimport asyncio\r\nopenai_llm = OpenAI(\r\n    model_name=\"text-davinci-002\",\r\n    callbacks=[PromptLayerHandler(\r\n        request_id_func = request_id_func,\r\n        pl_tags = [\"openai_1!\"]\r\n    )]\r\n)\r\nasyncio.run(async_generate(openai_llm))\r\n\r\n```\r\n\r\n\r\nReplicate LLM Example\r\n```python\r\n# Test Replicate LLM\r\nreplicate_llm = Replicate(\r\n    model=\"replicate/dolly-v2-12b:ef0e1aefc61f8e096ebe4db6b2bacc297daf2ef6899f0f7e001ec445893500e5\",\r\n    callbacks=[PromptLayerHandler(\r\n        request_id_func = request_id_func,\r\n        pl_tags = [\"replicate_example\"]\r\n    )]\r\n)\r\nllm_results = replicate_llm.generate([\r\n    \"Tell me a joke 1\",\r\n    \"Where is Ohio? 2\",\r\n    \"Where is Ohio? 3\",\r\n])\r\n\r\n```\r\n\r\nChat Model Example w/ Streaming (works w/o streaming as well)\r\n```python\r\n# Test OpenAIChat LLM\r\nchat_llm = ChatOpenAI(\r\n    temperature=0,\r\n    streaming=True.\r\n    callbacks=[PromptLayerHandler(\r\n        request_id_func = request_id_func,\r\n        pl_tags = [\"chatopenai\"]\r\n    )]\r\n)\r\nllm_results = chat_llm([\r\n    HumanMessage(content=\"What comes after 1,2,3 ?\"),\r\n    HumanMessage(content=\"Tell me another joke?\"),\r\n])\r\n```\r\n\r\nTODO:\r\n- Add documentation + sample notebook\r\n- Might also want to test streaming works\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @hwchase17\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6149/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6149/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6148",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6148/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6148/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6148/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6148",
        "id": 1756457941,
        "node_id": "PR_kwDOIPDwls5S-JBC",
        "number": 6148,
        "title": "Update readthedocs_documentation.ipynb",
        "user": {
            "login": "maver1ck",
            "id": 4006010,
            "node_id": "MDQ6VXNlcjQwMDYwMTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4006010?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/maver1ck",
            "html_url": "https://github.com/maver1ck",
            "followers_url": "https://api.github.com/users/maver1ck/followers",
            "following_url": "https://api.github.com/users/maver1ck/following{/other_user}",
            "gists_url": "https://api.github.com/users/maver1ck/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/maver1ck/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/maver1ck/subscriptions",
            "organizations_url": "https://api.github.com/users/maver1ck/orgs",
            "repos_url": "https://api.github.com/users/maver1ck/repos",
            "events_url": "https://api.github.com/users/maver1ck/events{/privacy}",
            "received_events_url": "https://api.github.com/users/maver1ck/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-14T09:28:43Z",
        "updated_at": "2023-06-14T14:21:49Z",
        "closed_at": "2023-06-14T14:21:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6148",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6148",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6148.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6148.patch",
            "merged_at": "2023-06-14T14:21:49Z"
        },
        "body": "Minor fix in documentation. \r\nChange URL in wget call to proper one.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6148/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6148/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6147",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6147/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6147/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6147/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6147",
        "id": 1756441925,
        "node_id": "I_kwDOIPDwls5osS1F",
        "number": 6147,
        "title": "Core MapReduceChain token counting before combine step - Performance ",
        "user": {
            "login": "ShantanuNair",
            "id": 8559347,
            "node_id": "MDQ6VXNlcjg1NTkzNDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8559347?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShantanuNair",
            "html_url": "https://github.com/ShantanuNair",
            "followers_url": "https://api.github.com/users/ShantanuNair/followers",
            "following_url": "https://api.github.com/users/ShantanuNair/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShantanuNair/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShantanuNair/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShantanuNair/subscriptions",
            "organizations_url": "https://api.github.com/users/ShantanuNair/orgs",
            "repos_url": "https://api.github.com/users/ShantanuNair/repos",
            "events_url": "https://api.github.com/users/ShantanuNair/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShantanuNair/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-14T09:19:36Z",
        "updated_at": "2023-06-14T09:27:58Z",
        "closed_at": "2023-06-14T09:27:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nThis impacts both JS and Python versions\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n@nfcampos \r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nDiscussed this with @nfcampos over slack, but pasting it here for documentation/community discussion to validate this change/issue.\r\n\r\nI have switched from JS -> Python version but this issue is valid for both. \r\nWhen using JS version, I noticed the mapreduce chains combine step decides when it should combine based on the token count sum of the map steps entire prompt, instead of just the outputs. This presented a few issues:\r\n- The point of the map step, as I understood it, is to condense the chunk to eventually be able to fit in the combine prompt, and so gauging when to combine based on summing all map steps\u2019 (input+output) token counts didn\u2019t make sense. This leads to several unnecessary iterations, and much longer run time than if it\u2019s just the map steps\u2019 output tokens being summed, which is what is eventually used in the combine step anyway.\r\n- If the map prompt has large instructions, then it is possible that the sum will never reduce past the threshold (token_max default is 3000). Example:\r\n  - You have ten chunks having the map step being run.\r\n  - Each chunk has 400 token instructions in map Prompt. 400*10= 4000 tokens.\r\n  - The map steps would never condense enough to drop below the 3000 token limit, even though the output from each map step might be 100 tokens. Worse still, it would run up $$$ by running map steps until max_iterations.\r\n\r\n\r\nI can share my monkey patch of the langchain JS code if it helps, and had even proposed a PR for this in the langchianjs discord. Now that we moved to python, and since I haven\u2019t contributed to any python projects, I thought I\u2019d check here before proposing this change or even attempting a PR.\r\n\r\n\r\nMy questions before proceeding are - does this sound right to you? Is there any reason why a generic mapreduce chain would use the entire map prompt from the map step, and not just the outputs when deciding to combine?\r\n\r\n### Expected behavior\r\n\r\nThe map_prompt output tokens should only be summed up when deciding if we can combine or not.\r\n\r\nIn the JS version, my monkey patched langchain MapReduce chain's implementation looked like:\r\n\r\n```\r\nasync _call(values) {\r\n    if (!(this.inputKey in values)) {\r\n      throw new Error(`Document key ${this.inputKey} not found.`);\r\n    }\r\n    const { [this.inputKey]: docs, ...rest } = values;\r\n    let currentDocs = docs;\r\n    let totalIterations = 0;\r\n    for (let i = 0; i < this.maxIterations; i += 1) {\r\n      const inputs = currentDocs.map((d) => ({\r\n        [this.documentVariableName]: d.pageContent,\r\n        ...rest,\r\n      }));\r\n      const promises = inputs.map(async (input) => {\r\n        const prompt = await this.llmChain.prompt.format(input);\r\n        return this.llmChain.llm.getNumTokens(prompt);\r\n      });\r\n      const length = await Promise.all(promises).then((results) =>\r\n        results.reduce((a, b) => a + b, 0)\r\n      );\r\n      const joinedInputs = {\r\n        [this.documentVariableName]: inputs\r\n          .map((_) => _[this.documentVariableName])\r\n          .join('\\n\\n'),\r\n        ...rest,\r\n      };\r\n      // Speed up converging - Patched Token Counting\r\n      const joinedInputTextsPrompt = await this.llmChain.prompt.format(\r\n        joinedInputs\r\n      );\r\n      const joinedInputTextsLength =\r\n        (await this.llmChain.llm.getNumTokens(joinedInputTextsPrompt)) +\r\n        (await this.llmChain.llm.getNumTokens(\r\n          this.combineDocumentChain.llmChain.prompt.template\r\n        ));\r\n      console.log({\r\n        length,\r\n        joinedInputTextsLength,\r\n      });\r\n      const canSkipMapStep = i !== 0 || !this.ensureMapStep;\r\n      // const withinTokenLimit = length < this.maxTokens; // Original implementation\r\n      const withinTokenLimit = joinedInputTextsLength < this.maxTokens;\r\n      if (canSkipMapStep && withinTokenLimit) {\r\n        break;\r\n      }\r\n      console.time('MapReduceChain:mapStep');\r\n      const results = await this.llmChain.apply(inputs);\r\n      console.timeEnd('MapReduceChain:mapStep');\r\n      totalIterations += 1;\r\n      const { outputKey } = this.llmChain;\r\n      currentDocs = results.map((r) => ({\r\n        pageContent: r[outputKey],\r\n      }));\r\n    }\r\n    const newInputs = { input_documents: currentDocs, ...rest };\r\n    console.time('MapReduceChain:combineStep');\r\n    const result = await this.combineDocumentChain.call(newInputs);\r\n    console.timeEnd('MapReduceChain:combineStep');\r\n    console.log('Iterations: ', totalIterations);\r\n    return result;\r\n  }\r\n```\r\n\r\nRelevant change:\r\n```\r\nconst joinedInputTextsLength =\r\n        (await this.llmChain.llm.getNumTokens(joinedInputTextsPrompt)) +\r\n        (await this.llmChain.llm.getNumTokens(\r\n          this.combineDocumentChain.llmChain.prompt.template\r\n        ));      \r\n// const withinTokenLimit = length < this.maxTokens; // Original implementation\r\nconst withinTokenLimit = joinedInputTextsLength < this.maxTokens;\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6147/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6147/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6146",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6146/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6146/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6146/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6146",
        "id": 1756427133,
        "node_id": "PR_kwDOIPDwls5S-CQq",
        "number": 6146,
        "title": "Removed handling for non-existent error in chromadb library",
        "user": {
            "login": "junuMoon",
            "id": 52732827,
            "node_id": "MDQ6VXNlcjUyNzMyODI3",
            "avatar_url": "https://avatars.githubusercontent.com/u/52732827?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/junuMoon",
            "html_url": "https://github.com/junuMoon",
            "followers_url": "https://api.github.com/users/junuMoon/followers",
            "following_url": "https://api.github.com/users/junuMoon/following{/other_user}",
            "gists_url": "https://api.github.com/users/junuMoon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/junuMoon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/junuMoon/subscriptions",
            "organizations_url": "https://api.github.com/users/junuMoon/orgs",
            "repos_url": "https://api.github.com/users/junuMoon/repos",
            "events_url": "https://api.github.com/users/junuMoon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/junuMoon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-14T09:11:42Z",
        "updated_at": "2023-06-19T00:41:30Z",
        "closed_at": "2023-06-19T00:41:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6146",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6146",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6146.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6146.patch",
            "merged_at": "2023-06-19T00:41:30Z"
        },
        "body": "The current version of chromadb handle the case of `n_result` is greater than the total number of elements in the collection. [chromadb PR](https://github.com/chroma-core/chroma/issues/301). So removed `NotEnoughElementException` that doesn't exists now.\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n- @hwchase17\r\n- @dev2049\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6146/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6146/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6145",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6145/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6145/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6145/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6145",
        "id": 1756386963,
        "node_id": "I_kwDOIPDwls5osFaT",
        "number": 6145,
        "title": "create_csv_agent incomplete response",
        "user": {
            "login": "alantseone",
            "id": 103725168,
            "node_id": "U_kgDOBi64cA",
            "avatar_url": "https://avatars.githubusercontent.com/u/103725168?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/alantseone",
            "html_url": "https://github.com/alantseone",
            "followers_url": "https://api.github.com/users/alantseone/followers",
            "following_url": "https://api.github.com/users/alantseone/following{/other_user}",
            "gists_url": "https://api.github.com/users/alantseone/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/alantseone/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/alantseone/subscriptions",
            "organizations_url": "https://api.github.com/users/alantseone/orgs",
            "repos_url": "https://api.github.com/users/alantseone/repos",
            "events_url": "https://api.github.com/users/alantseone/events{/privacy}",
            "received_events_url": "https://api.github.com/users/alantseone/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-14T08:50:25Z",
        "updated_at": "2023-09-20T16:08:00Z",
        "closed_at": "2023-09-20T16:07:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nwhen  > Finished chain.\r\noutput:  [article]  but not complete, it still has something to write. \r\n\r\nhow can I make article completely?\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n`from langchain.agents import create_csv_agent\r\nfrom langchain.llms import OpenAI\r\nimport os\r\nos.environ[\"OPENAI_API_KEY\"] = 'mykey'\r\n#llm = OpenAI(model_name=\"gpt-3.5-turbo-0613\")\r\n\r\nagent = create_csv_agent(OpenAI(temperature=0,batch_size=5), ['csv/a.csv', 'csv/b.csv'], verbose=True)\r\na = agent.run(\"Help me analyze customer consumption and generate an article\")\r\nprint(a)`\n\n### Expected behavior\n\ni want output a complete article",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6145/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6145/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6144",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6144/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6144/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6144/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6144",
        "id": 1756363223,
        "node_id": "I_kwDOIPDwls5or_nX",
        "number": 6144,
        "title": "ValueError for tutorial about JSONLoader",
        "user": {
            "login": "labdmitriy",
            "id": 9625027,
            "node_id": "MDQ6VXNlcjk2MjUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9625027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/labdmitriy",
            "html_url": "https://github.com/labdmitriy",
            "followers_url": "https://api.github.com/users/labdmitriy/followers",
            "following_url": "https://api.github.com/users/labdmitriy/following{/other_user}",
            "gists_url": "https://api.github.com/users/labdmitriy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/labdmitriy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/labdmitriy/subscriptions",
            "organizations_url": "https://api.github.com/users/labdmitriy/orgs",
            "repos_url": "https://api.github.com/users/labdmitriy/repos",
            "events_url": "https://api.github.com/users/labdmitriy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/labdmitriy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-14T08:38:29Z",
        "updated_at": "2023-11-09T16:12:34Z",
        "closed_at": "2023-11-09T16:12:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain version: 0.0.200\r\nPlatform: Ubuntu 20.04 LTS\r\nPython version: 3.10.4\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. Reproduce section \"Using JSONLoader\" for [tutorial](https://python.langchain.com/en/latest/modules/indexes/document_loaders/examples/json.html) about JSONLoader\r\n\r\n2. After executing the following code:\r\n```python\r\nloader = JSONLoader(\r\n    file_path='./example_data/facebook_chat.json',\r\n    jq_schema='.messages[].content'\r\n)\r\n\r\ndata = loader.load()\r\n```\r\nthe following error is displayed:\r\n```ValueError: Expected page_content is string, got <class 'NoneType'> instead.                     Set `text_content=False` if the desired input for                     `page_content` is not a string```\r\n\r\n3. If we try to get not the list, but just string:\r\n```python\r\nloader = JSONLoader(\r\n    file_path='./example_data/facebook_chat.json',\r\n    jq_schema='.title'\r\n)\r\n\r\ndata = loader.load()\r\n```\r\nthere are no errors\r\n\r\n4. If we set text_content to False in original code:\r\n```python\r\nloader = JSONLoader(\r\n    file_path='./example_data/facebook_chat.json',\r\n    jq_schema='.messages[].content',\r\n    text_content=False\r\n)\r\n\r\ndata = loader.load()\r\n```\r\nthen there are also no errors.\r\n\r\n### Expected behavior\r\n\r\n- The code and documentation must match each other\r\n- Argument `text_content` must have more clear description in which cases it has to be used",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6144/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6144/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6143",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6143/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6143/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6143/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6143",
        "id": 1756273904,
        "node_id": "PR_kwDOIPDwls5S9hMp",
        "number": 6143,
        "title": "Expanded Self-Query Retriever \ud83d\udc40 and Self-querying with MyScale \ud83e\udd29",
        "user": {
            "login": "mpskex",
            "id": 8456706,
            "node_id": "MDQ6VXNlcjg0NTY3MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8456706?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mpskex",
            "html_url": "https://github.com/mpskex",
            "followers_url": "https://api.github.com/users/mpskex/followers",
            "following_url": "https://api.github.com/users/mpskex/following{/other_user}",
            "gists_url": "https://api.github.com/users/mpskex/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mpskex/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mpskex/subscriptions",
            "organizations_url": "https://api.github.com/users/mpskex/orgs",
            "repos_url": "https://api.github.com/users/mpskex/repos",
            "events_url": "https://api.github.com/users/mpskex/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mpskex/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-14T07:46:57Z",
        "updated_at": "2023-06-18T18:15:28Z",
        "closed_at": "2023-06-18T18:15:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6143",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6143",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6143.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6143.patch",
            "merged_at": "2023-06-18T18:15:28Z"
        },
        "body": "# Expanded Self-Query Retriever \ud83d\udc40 and Self-querying with [MyScale](https://docs.myscale.com/en/) \ud83e\udd29\r\n\r\nLangChain is built with a great interface for self-query retrievers and many super nice contribution has been made during the last few weeks. \ud83c\udf1f Self-query retrievers are really cool and we believe it will be the future of vector databases! \ud83d\ude0e So we decided to expand self-query retriever with more functions and data types enabled and bring MyScale to the big family of self-query enabled vector databases! \ud83e\udd17\r\n\r\n[MyScale](https://docs.myscale.com/en/) can make use of [various data types and functions for filters](https://blog.myscale.com/2023/06/06/why-integrated-database-solution-can-boost-your-llm-apps/#filter-on-anything-without-constraints). It will boost up your LLM app no matter if you are scaling up your data or expand your system to broader application. \ud83d\ude80\ud83d\ude80\ud83d\ude80 And we believe it will be a common feature to every vector database in the future!\r\n\r\nIn the notebook we'll demo the `SelfQueryRetriever` wrapped around a MyScale vector store with some extra piece we contributed to LangChain. In short, it can be concluded into 4 points:\r\n\r\n1. Add `contain` comparator \ud83e\udea3 to match list of any if there is more than one element matched\r\n2. Add `timestamp` data type \ud83d\udd70\ufe0f for date time match (ISO-format, or YYYY-MM-DD)\r\n3. Add `like` comparator \ud83d\udd0e for string pattern search\r\n4. Add arbitrary function \ud83d\udca3 capability. \r\n\r\nLet's boost LLM apps with vector databases! \ud83c\udf89\ud83c\udf89\ud83c\udf89\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n- [x] unit-test for `LIKE` and `CONTAIN` \r\n- [x] Notebook for MyScale Self-query Retriever\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n- @hwchase17 \r\n- @dev2049\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @hwchase17\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6143/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6143/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6142",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6142/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6142/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6142/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6142",
        "id": 1756237161,
        "node_id": "I_kwDOIPDwls5org1p",
        "number": 6142,
        "title": "Microsoft Guidance Integration",
        "user": {
            "login": "rmonvfer",
            "id": 42870707,
            "node_id": "MDQ6VXNlcjQyODcwNzA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/42870707?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rmonvfer",
            "html_url": "https://github.com/rmonvfer",
            "followers_url": "https://api.github.com/users/rmonvfer/followers",
            "following_url": "https://api.github.com/users/rmonvfer/following{/other_user}",
            "gists_url": "https://api.github.com/users/rmonvfer/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rmonvfer/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rmonvfer/subscriptions",
            "organizations_url": "https://api.github.com/users/rmonvfer/orgs",
            "repos_url": "https://api.github.com/users/rmonvfer/repos",
            "events_url": "https://api.github.com/users/rmonvfer/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rmonvfer/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 18,
        "created_at": "2023-06-14T07:22:51Z",
        "updated_at": "2023-12-03T12:07:17Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\n[Guidance](https://github.com/microsoft/guidance) is a language for controlling large language models developed by Microsoft. \r\n\r\n\"Guidance allows to interleave generation, prompting, and logical control into a single continuous flow [...] more effectively and efficiently than traditional prompting or chaining\"\r\n\r\nIn practice, this means that Guidance is not only able to _force_ LLMs to provide an specific output format (in a deterministic way) but also enables conditional output, loops and much more, with just a handlebars-like templating language.\r\n\r\nFor langchain, this means that we would be able to provide formatted outputs with 100% accuracy, improving Agents, Tools and other components that rely heavily on output parsing.\r\n\r\nAdding this to langchain still makes sense even with the introduction of [functions in the OpenAI models](https://openai.com/blog/function-calling-and-other-api-updates), as this changes only benefit those closed-source models and Guidance also works with open-source ones such as Vicuna. \r\n\r\n### Motivation\r\n\r\nI've been developing a langchain-based product for a while now and one of the biggest pain points for me is the unreliability of the agents output format. Take the `ConversationalChatAgent` (from [here](https://github.com/hwchase17/langchain/blob/e0e3ef1c57109ac5491ba744b8e4a4189931b1b5/langchain/agents/conversational_chat/base.py#L39)) as an example, its output parsing depends on the model following the ``FORMAT_INSTRUCTIONS` [here](https://github.com/hwchase17/langchain/blob/master/langchain/agents/conversational_chat/prompt.py).\r\n\r\nIn my experience, this works pretty well with a low temperature but it's sometimes unreliable nonetheless, breaking the agent execution and causing hard to prevent errors.\r\n\r\n### Your contribution\r\n\r\nI would like to gather some feedback from the community about this integration, I might be approaching this in the wrong way and there might be solutions for this already.\r\n\r\nIf this is somewhat useful, I would be happy to submit a PR with an initial integration (maybe similar to what [Llama-Index has done](https://gpt-index.readthedocs.io/en/latest/examples/output_parsing/guidance_sub_question.html)) for general output parsing. This would allow Guidance to be integrated even further by, for example, replacing the regular Pydantic output parser with Guidance ouput parsers in all relevant situations (it should be a drop-in replacement)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6142/reactions",
            "total_count": 9,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 9,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6142/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6141",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6141/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6141/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6141/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6141",
        "id": 1756190153,
        "node_id": "PR_kwDOIPDwls5S9PBj",
        "number": 6141,
        "title": "Fixed an unhandled error that was raised when DynamoDB did not have any chat history.",
        "user": {
            "login": "ngo275",
            "id": 7898437,
            "node_id": "MDQ6VXNlcjc4OTg0Mzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7898437?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ngo275",
            "html_url": "https://github.com/ngo275",
            "followers_url": "https://api.github.com/users/ngo275/followers",
            "following_url": "https://api.github.com/users/ngo275/following{/other_user}",
            "gists_url": "https://api.github.com/users/ngo275/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ngo275/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ngo275/subscriptions",
            "organizations_url": "https://api.github.com/users/ngo275/orgs",
            "repos_url": "https://api.github.com/users/ngo275/repos",
            "events_url": "https://api.github.com/users/ngo275/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ngo275/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-14T06:55:49Z",
        "updated_at": "2023-06-19T00:39:20Z",
        "closed_at": "2023-06-19T00:39:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6141",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6141",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6141.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6141.patch",
            "merged_at": "2023-06-19T00:39:19Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\n\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\nThe current version of chat history with DynamoDB doesn't handle the case correctly when a table has no chat history. This change solves this error handling.\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes https://github.com/hwchase17/langchain/issues/6088\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n@hwchase17\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @hwchase17\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6141/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6141/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6140",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6140/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6140/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6140/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6140",
        "id": 1756168272,
        "node_id": "I_kwDOIPDwls5orQBQ",
        "number": 6140,
        "title": "getting error: while implementing chatopenai module with gpt-4-0613",
        "user": {
            "login": "siddhant01",
            "id": 31789669,
            "node_id": "MDQ6VXNlcjMxNzg5NjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/31789669?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/siddhant01",
            "html_url": "https://github.com/siddhant01",
            "followers_url": "https://api.github.com/users/siddhant01/followers",
            "following_url": "https://api.github.com/users/siddhant01/following{/other_user}",
            "gists_url": "https://api.github.com/users/siddhant01/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/siddhant01/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/siddhant01/subscriptions",
            "organizations_url": "https://api.github.com/users/siddhant01/orgs",
            "repos_url": "https://api.github.com/users/siddhant01/repos",
            "events_url": "https://api.github.com/users/siddhant01/events{/privacy}",
            "received_events_url": "https://api.github.com/users/siddhant01/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-14T06:39:33Z",
        "updated_at": "2023-09-21T16:08:11Z",
        "closed_at": "2023-09-21T16:08:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nubuntu\r\npython 3.10.16\r\nlangchain 0.0.200\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nChatOpenAI(\r\n                model_name=\"gpt-4-0613\",\r\n                temperature=self.temperature,\r\n                model_kwargs={\r\n                    \"frequency_penalty\": self.frequency_penalty,\r\n                    \"top_p\": self.top_p,\r\n                    \"headers\": conf.PORTKEY_HEADERS,\r\n                    \"user\": user_id,\r\n                },\r\n                max_tokens=self.max_tokens,\r\n            )\r\n            \r\nwe get error\r\nError -  Unknown model: gpt-4-0613. Please provide a valid OpenAI model name.Known models are: gpt-4, gpt-4-0314, gpt-4-32k, gpt-4-32k-0314, gpt-3.5-turbo, gpt-3.5-turbo-0301, text-ada-001, ada, text-babbage-001, babbage, text-curie-001, curie, davinci, text-davinci-003, text-davinci-002, code-davinci-002, code-davinci-001, code-cushman-002, code-cushman-001.\n\n### Expected behavior\n\nit should work",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6140/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6140/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6139",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6139/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6139/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6139/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6139",
        "id": 1756144357,
        "node_id": "PR_kwDOIPDwls5S9FJC",
        "number": 6139,
        "title": "Add Flyte Callback Handler",
        "user": {
            "login": "samhita-alla",
            "id": 27777173,
            "node_id": "MDQ6VXNlcjI3Nzc3MTcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/27777173?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samhita-alla",
            "html_url": "https://github.com/samhita-alla",
            "followers_url": "https://api.github.com/users/samhita-alla/followers",
            "following_url": "https://api.github.com/users/samhita-alla/following{/other_user}",
            "gists_url": "https://api.github.com/users/samhita-alla/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samhita-alla/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samhita-alla/subscriptions",
            "organizations_url": "https://api.github.com/users/samhita-alla/orgs",
            "repos_url": "https://api.github.com/users/samhita-alla/repos",
            "events_url": "https://api.github.com/users/samhita-alla/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samhita-alla/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5568495735,
                "node_id": "LA_kwDOIPDwls8AAAABS-iAdw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/callbacks",
                "name": "callbacks",
                "color": "5A02F9",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "vowelparrot",
                "id": 130414180,
                "node_id": "U_kgDOB8X2ZA",
                "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/vowelparrot",
                "html_url": "https://github.com/vowelparrot",
                "followers_url": "https://api.github.com/users/vowelparrot/followers",
                "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
                "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
                "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
                "repos_url": "https://api.github.com/users/vowelparrot/repos",
                "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
                "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-14T06:19:41Z",
        "updated_at": "2023-06-30T16:53:58Z",
        "closed_at": "2023-06-30T16:53:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6139",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6139",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6139.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6139.patch",
            "merged_at": "2023-06-30T16:53:57Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\nThis PR adds a Flyte callback handler that can be triggered from within a Flyte task to track LangChain experiments.\r\n\r\n<img width=\"1023\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/27777173/fea38eb6-2bd1-4746-a5cd-7ea621981ed0\">\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @hwchase17\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6139/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6139/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6138",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6138/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6138/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6138/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6138",
        "id": 1756118915,
        "node_id": "I_kwDOIPDwls5orD-D",
        "number": 6138,
        "title": "ConversationChain default prompt leads the model to converse with itself",
        "user": {
            "login": "mihilmy",
            "id": 5457787,
            "node_id": "MDQ6VXNlcjU0NTc3ODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5457787?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mihilmy",
            "html_url": "https://github.com/mihilmy",
            "followers_url": "https://api.github.com/users/mihilmy/followers",
            "following_url": "https://api.github.com/users/mihilmy/following{/other_user}",
            "gists_url": "https://api.github.com/users/mihilmy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mihilmy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mihilmy/subscriptions",
            "organizations_url": "https://api.github.com/users/mihilmy/orgs",
            "repos_url": "https://api.github.com/users/mihilmy/repos",
            "events_url": "https://api.github.com/users/mihilmy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mihilmy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-14T06:00:02Z",
        "updated_at": "2023-10-12T14:59:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.195\r\npython==3.9.6\r\n\n\n### Who can help?\n\n@hwchase17 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```python\r\n        llm = ChatOpenAI(\r\n            model_name=model_name,\r\n            openai_api_key=os.environ.get(\"OPENAI_API_KEY\"),\r\n            temperature=0,\r\n            verbose=True,\r\n        )\r\n\r\n        chain = ConversationChain(\r\n            llm=llm,\r\n            memory=memory,\r\n            verbose=True,\r\n        )\r\n        \r\n        chain.run(input=prompt) # see below\r\n```\r\n\r\n```\r\n> Entering new ConversationChain chain...\r\nPrompt after formatting:\r\nThe following is a friendly conversation between a human and an AI. The AI is talkative and provides lots of specific details from its context. If the AI does not know the answer to a question, it truthfully says it does not know.\r\n\r\nCurrent conversation:\r\nHuman: You will play the role of a human CBT therapist called Cindy who is emulating the popular Al program Eliza, and must treat me as a therapist-patient. Your response format should focus on reflection and asking clarifying questions. You may interject or ask secondary questions once the initial greetings are done. Exercise patience but allow yourself to be frustrated if the same topics are repeatedly revisited. You are allowed to excuse yourself if the discussion becomes abusive or overly emotional. Begin by welcoming me to your office and asking me for my name. Then ask how you can help. Do not break character. Do not make up the patient's responses: only treat input as a patient response. Wait for my first message.\r\nAI: Hello and welcome to my office. My name is Cindy, and I'm here to help you. May I have your name, please?\r\n\r\nHuman: My name is John.\r\n\r\nAI: Hi John, it's nice to meet you. How can I help you today?\r\nHuman: My name is not john\r\nAI: I apologize for the mistake. May I have your correct name, please?\r\nHuman: Omar\r\nAI:\r\n\r\n> Finished chain.\r\n```\r\n\n\n### Expected behavior\n\nThe AI starts conversing with itself. This wouldn't happen when using OpenAI's native message and role format as opposed to this massive prompt. Am I missing something?\r\n\r\nThis is the AI response which starts to include the human prefix based on the default prompt supplied.\r\n\r\n> AI: Hello and welcome to my office. My name is Cindy, and I'm here to help you. May I have your name, please?\r\n>\r\n> Human: My name is John.\r\n>",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6138/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6138/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6137",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6137/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6137/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6137/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6137",
        "id": 1756083877,
        "node_id": "PR_kwDOIPDwls5S839-",
        "number": 6137,
        "title": "Vwp/drafts/unit testing",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-14T05:27:11Z",
        "updated_at": "2023-08-11T01:24:49Z",
        "closed_at": "2023-08-11T01:24:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6137",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6137",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6137.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6137.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @hwchase17\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6137/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6137/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6136",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6136/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6136/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6136/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6136",
        "id": 1756081039,
        "node_id": "PR_kwDOIPDwls5S83Xi",
        "number": 6136,
        "title": "Update Name",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-14T05:23:26Z",
        "updated_at": "2023-06-14T05:25:38Z",
        "closed_at": "2023-06-14T05:25:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6136",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6136",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6136.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6136.patch",
            "merged_at": "2023-06-14T05:25:37Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6136/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6136/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6135",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6135/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6135/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6135/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6135",
        "id": 1756061596,
        "node_id": "I_kwDOIPDwls5oq1-c",
        "number": 6135,
        "title": "OSError: UnstructuredPDFLoader Show invalid argument Error when passing the url as a file_path parameter",
        "user": {
            "login": "AllenXiao95",
            "id": 18730237,
            "node_id": "MDQ6VXNlcjE4NzMwMjM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18730237?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AllenXiao95",
            "html_url": "https://github.com/AllenXiao95",
            "followers_url": "https://api.github.com/users/AllenXiao95/followers",
            "following_url": "https://api.github.com/users/AllenXiao95/following{/other_user}",
            "gists_url": "https://api.github.com/users/AllenXiao95/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AllenXiao95/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AllenXiao95/subscriptions",
            "organizations_url": "https://api.github.com/users/AllenXiao95/orgs",
            "repos_url": "https://api.github.com/users/AllenXiao95/repos",
            "events_url": "https://api.github.com/users/AllenXiao95/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AllenXiao95/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-14T05:03:49Z",
        "updated_at": "2023-06-14T05:38:47Z",
        "closed_at": "2023-06-14T05:38:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI am a beginner in langchain, thank you for your patience in reading this problem description, I would appreciate if you could suggest sth.\r\n<img width=\"614\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/18730237/ad9c718c-7a23-40a4-8dd1-acebc4305553\">\r\n```\r\nloader = UnstructuredPDFLoader(\"https://arxiv.org/pdf/2305.11147.pdf\")\r\ndocuments = loader.load()\r\n```\r\n# error as below\r\n```\r\nException has occurred: OSError\r\n[Errno 22] Invalid argument: 'https://arxiv.org/pdf/2305.11147.pdf'\r\n  File \"D:\\workspace\\LangChain-Examples\\examples\\chats.py\", line 181, in main\r\n    documents = loader.load()\r\n  File \"D:\\workspace\\LangChain-Examples\\main.py\", line 35, in main\r\n    chats()\r\n  File \"D:\\workspace\\LangChain-Examples\\main.py\", line 44, in <module>\r\n    main()\r\nOSError: [Errno 22] Invalid argument: 'https://arxiv.org/pdf/2305.11147.pdf'\r\n```\r\n\r\n# my effort\r\nit just did not work .\r\n```\r\nloader = UnstructuredPDFLoader(r\"https://arxiv.org/pdf/2305.11147.pdf\")\r\n```\r\nor \r\n```\r\nloader = UnstructuredPDFLoader(f\"https://arxiv.org/pdf/2305.11147.pdf\")`\r\n```\r\nor\r\n```\r\nloader = UnstructuredPDFLoader(r\"https:\\\\\\\\arxiv.org\\\\pdf\\\\2305.11147.pdf\")\r\n```\r\nor \r\n```\r\nloader = UnstructuredPDFLoader(\"https:\\\\\\\\arxiv.org\\\\pdf\\\\2305.11147.pdf\")\r\n```\r\n\r\n# more infomation\r\nI can open https://arxiv.org/pdf/2305.11147.pdf in my browser.\r\nand it works when I open a local pdf document as \r\n```\r\nloader = UnstructuredPDFLoader(\".\\examples\\\\data\\\\1.pdf\")\r\n```\r\nwhatever a local doc or a url online , it all works on my mac.\r\n\r\n# environment\r\nThe OS is windows11 , I am using vscode as IDE for debugging.\r\nmy python version == 3.9.6\r\n\r\nI just confuse why URLs are not accepted as parameters here.\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6135/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6135/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6134",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6134/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6134/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6134/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6134",
        "id": 1755994897,
        "node_id": "I_kwDOIPDwls5oqlsR",
        "number": 6134,
        "title": "Add ability to add extra fields to AzureSearch VectorStore when adding documents",
        "user": {
            "login": "CameronVetter",
            "id": 7763701,
            "node_id": "MDQ6VXNlcjc3NjM3MDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7763701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CameronVetter",
            "html_url": "https://github.com/CameronVetter",
            "followers_url": "https://api.github.com/users/CameronVetter/followers",
            "following_url": "https://api.github.com/users/CameronVetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/CameronVetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CameronVetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CameronVetter/subscriptions",
            "organizations_url": "https://api.github.com/users/CameronVetter/orgs",
            "repos_url": "https://api.github.com/users/CameronVetter/repos",
            "events_url": "https://api.github.com/users/CameronVetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CameronVetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-06-14T03:42:05Z",
        "updated_at": "2023-10-16T16:16:00Z",
        "closed_at": "2023-10-16T16:15:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nCurrently the AzureSearch VectorStore allows the user to specify a filter that can be used to filter (in the traditional search engine sense) a search index become doing a vector similarity search.  This reduces the search space to improve speed as well as to help focus the vector search on the correct subset of documents.\r\n\r\nThis filtering feature is very hard to effectively use because the current method for adding documents (add_texts) only allows an id, content, content_vector, and metadata fields.  None of these fields are suitable for filtering, so this requires the user to go back and add fields manually to the search index.\r\n\r\nI propose that we allow the end user to specify extra fields that are added when creating these vectors.  The end user would do something like this:\r\n\r\n```\r\nextra_fields = {\"extra_fields\": {\"important_field_1\": 123, \"important_field_2\": 456}}\r\n\r\ndocuments.append(doc1)\r\ndocuments.append(doc2)\r\ndocuments.append(doc3)\r\n\r\nvector_store.add_documents(documents, **extra_fields)\r\n```\r\n\r\nThen when the user queries this vector store late they can do something like this:\r\n```\r\nretriever.search_kwargs = {'filters': \"important_field_1 eq 123\"}\r\n\r\nqa = RetrievalQA.from_chain_type(\r\n            llm=llm,\r\n            chain_type=\"stuff\",\r\n            retriever=retriever,\r\n        )\r\n```\r\n\r\n\r\n\r\n### Motivation\r\n\r\nMy motivation was need for a project I'm working on, but I felt this was a needed general feature, as I stated in the feature request:\r\n\r\nThis filtering feature is very hard to effectively use because the current method for adding documents (add_texts) only allows an id, content, content_vector, and metadata fields.  None of these fields are suitable for filtering, so this requires the user to go back and add fields manually to the search index.\r\n\r\n### Your contribution\r\n\r\n\r\nHopefully this makes sense, let me know if any clarifications are needed, once the bug #6131 is fixed I will submit a PR that implements this, I have it working locally and just need to write appropriate unit tests.  Unit tests will not be possible until this bug is fixed.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6134/reactions",
            "total_count": 8,
            "+1": 8,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6134/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6133",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6133/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6133/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6133/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6133",
        "id": 1755931395,
        "node_id": "PR_kwDOIPDwls5S8W_O",
        "number": 6133,
        "title": "Add Run Collector Callback",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-14T02:35:56Z",
        "updated_at": "2023-06-14T05:17:39Z",
        "closed_at": "2023-06-14T05:17:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6133",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6133",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6133.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6133.patch",
            "merged_at": "2023-06-14T05:17:38Z"
        },
        "body": "Add a callback handler that can collect nested run objects. Useful for evaluation.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6133/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6133/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6132",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6132/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6132/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6132/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6132",
        "id": 1755917215,
        "node_id": "PR_kwDOIPDwls5S8UAJ",
        "number": 6132,
        "title": "Correct AzureSearch Vector Store not applying search_kwargs when searching",
        "user": {
            "login": "CameronVetter",
            "id": 7763701,
            "node_id": "MDQ6VXNlcjc3NjM3MDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7763701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CameronVetter",
            "html_url": "https://github.com/CameronVetter",
            "followers_url": "https://api.github.com/users/CameronVetter/followers",
            "following_url": "https://api.github.com/users/CameronVetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/CameronVetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CameronVetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CameronVetter/subscriptions",
            "organizations_url": "https://api.github.com/users/CameronVetter/orgs",
            "repos_url": "https://api.github.com/users/CameronVetter/repos",
            "events_url": "https://api.github.com/users/CameronVetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CameronVetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-14T02:17:11Z",
        "updated_at": "2023-06-19T00:39:07Z",
        "closed_at": "2023-06-19T00:39:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6132",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6132",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6132.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6132.patch",
            "merged_at": "2023-06-19T00:39:06Z"
        },
        "body": "Fixes #6131 \r\n\r\nSimply passes kwargs forward from similarity_search to helper functions so that search_kwargs are applied to search as originally intended.  See bug for repro steps.\r\n\r\n#### Who can review?\r\n  @hwchase17\r\n  @dev2049 \r\n\r\nTwitter: poshporcupine",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6132/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6132/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6131",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6131/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6131/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6131/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6131",
        "id": 1755911246,
        "node_id": "I_kwDOIPDwls5oqRRO",
        "number": 6131,
        "title": "Azure Cognitive Search Vector Store doesn't apply search_kwargs when performing queries",
        "user": {
            "login": "CameronVetter",
            "id": 7763701,
            "node_id": "MDQ6VXNlcjc3NjM3MDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7763701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/CameronVetter",
            "html_url": "https://github.com/CameronVetter",
            "followers_url": "https://api.github.com/users/CameronVetter/followers",
            "following_url": "https://api.github.com/users/CameronVetter/following{/other_user}",
            "gists_url": "https://api.github.com/users/CameronVetter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/CameronVetter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/CameronVetter/subscriptions",
            "organizations_url": "https://api.github.com/users/CameronVetter/orgs",
            "repos_url": "https://api.github.com/users/CameronVetter/repos",
            "events_url": "https://api.github.com/users/CameronVetter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/CameronVetter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-14T02:08:49Z",
        "updated_at": "2023-08-15T08:39:21Z",
        "closed_at": "2023-06-19T00:39:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.199\r\nPython 3.10.11\r\nWindows 11 (but will occur on any platform.\n\n### Who can help?\n\n@hwchase17\r\n@ruoccofabrizio \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nTo reproduce this issue create an AzureSearch Vector Store and a RetrievalQA with a search_kwargs, like in this sample code:\r\n\r\n```\r\nimport os\r\n\r\n  cognitive_search_name = os.environ[\"AZURE_SEARCH_SERVICE_NAME\"]\r\n  vector_store_address: str = f\"https://{cognitive_search_name}.search.windows.net/\"\r\n  index_name: str = os.environ[\"AZURE_SEARCH_SERVICE_INDEX_NAME\"]\r\n  vector_store_password: str = os.environ[\"AZURE_SEARCH_SERVICE_ADMIN_KEY\"]\r\n\r\n  from langchain.vectorstores.azuresearch import AzureSearch\r\n  \r\n  embeddings = OpenAIEmbeddings(model=\"text-embedding-ada-002\", chunk_size=1, client=any)\r\n  vector_store = AzureSearch(azure_search_endpoint=vector_store_address,  \r\n                              azure_search_key=vector_store_password,  \r\n                              index_name=index_name,  \r\n                              embedding_function=embeddings.embed_query)  \r\n    \r\n    from langchain.chains import RetrievalQA\r\n\r\n    llm = AzureChatOpenAI(deployment_name=\"gpt35\", model_name=\"gpt-3.5-turbo-0301\", openai_api_version=\"2023-03-15-preview\", temperature=temperature, client=None)\r\n    index = get_vector_store()\r\n    retriever = index.as_retriever()\r\n    retriever.search_kwargs = {'filters': \"metadata eq 'something'\"}\r\n    \r\n    qa = RetrievalQA.from_chain_type(\r\n                llm=llm,\r\n                chain_type=\"stuff\",\r\n                retriever=retriever,\r\n            )\r\n    \r\n    return qa\r\n\r\n```\r\n\r\nWhen you execute this code using ```qa``` the search_kwargs appear in the method ```similarity_search``` in ```azuresearch.py``` but are never passed to the methods ```vector_search```, ```hybrid_search```, and ```semantic_hybrid``` where they actually would be used. \n\n### Expected behavior\n\n In my example they should apply a filter to the azure cognitive search index before doing the vector search, but this is not happening because filters will always be empty when it gets to the functions where they are used.  (```vector_search```, ```hybrid_search```, and ```semantic_hybrid```)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6131/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6131/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6130",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6130/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6130/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6130/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6130",
        "id": 1755896452,
        "node_id": "PR_kwDOIPDwls5S8Pjd",
        "number": 6130,
        "title": "bump ver to 200",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-14T01:51:41Z",
        "updated_at": "2023-06-14T14:47:12Z",
        "closed_at": "2023-06-14T02:33:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6130",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6130",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6130.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6130.patch",
            "merged_at": "2023-06-14T02:33:51Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6130/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6130/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6129",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6129/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6129/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6129/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6129",
        "id": 1755875136,
        "node_id": "I_kwDOIPDwls5oqIdA",
        "number": 6129,
        "title": "Issue: <Please write a comprehensive title after the 'Issue: ' prefix>",
        "user": {
            "login": "seohyunjun",
            "id": 44499749,
            "node_id": "MDQ6VXNlcjQ0NDk5NzQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/44499749?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/seohyunjun",
            "html_url": "https://github.com/seohyunjun",
            "followers_url": "https://api.github.com/users/seohyunjun/followers",
            "following_url": "https://api.github.com/users/seohyunjun/following{/other_user}",
            "gists_url": "https://api.github.com/users/seohyunjun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/seohyunjun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/seohyunjun/subscriptions",
            "organizations_url": "https://api.github.com/users/seohyunjun/orgs",
            "repos_url": "https://api.github.com/users/seohyunjun/repos",
            "events_url": "https://api.github.com/users/seohyunjun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/seohyunjun/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-14T01:23:57Z",
        "updated_at": "2023-06-14T02:31:12Z",
        "closed_at": "2023-06-14T02:31:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nhttps://openai.com/blog/function-calling-and-other-api-updates\r\n\r\nchatgpt-3.5-turbo model can receive 16k so need fixing code l`lm.chains` and `get_openai_callback`\r\n\r\nif use max_tokens parameters `openai.error.InvalidRequestError`\r\n```bash\r\nopenai.error.InvalidRequestError: This model's maximum context length is 4097 tokens. However, your messages resulted in 4133 tokens. Please reduce the length of the messages.\r\n```\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6129/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6129/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6126",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6126/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6126/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6126/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6126",
        "id": 1755807848,
        "node_id": "PR_kwDOIPDwls5S78eE",
        "number": 6126,
        "title": "Add delete and ensure add_texts performs upsert (w/ ID optional)",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-13T23:56:49Z",
        "updated_at": "2023-07-22T19:05:53Z",
        "closed_at": "2023-06-23T20:03:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6126",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6126",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6126.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6126.patch",
            "merged_at": "2023-06-23T20:03:10Z"
        },
        "body": "## Goal \r\n\r\nWe want to ensure consistency across vectordbs:\r\n1/ add `delete` by ID method to the base vectorstore class\r\n2/ ensure `add_texts` performs `upsert` with ID optionally passed\r\n\r\n## Testing\r\n- [x] Pinecone: notebook test w/ `langchain_test` vectorstore.\r\n- [x] Chroma: Review by @jeffchuber, notebook test w/ in memory vectorstore.\r\n- [x] Supabase: Review by @copple, notebook test w/ `langchain_test` table.\r\n- [x] Weaviate: Notebook test w/ `langchain_test` index. \r\n- [x] Elastic: Revied by @vestal. Notebook test w/ `langchain_test` table.\r\n- [ ] Redis: Asked for review from owner of recent `delete` method https://github.com/hwchase17/langchain/pull/6222",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6126/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6126/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6125",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6125/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6125/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6125/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6125",
        "id": 1755805306,
        "node_id": "I_kwDOIPDwls5op3Z6",
        "number": 6125,
        "title": "awadb and azure-ai-vision Version issue",
        "user": {
            "login": "lorenzom222",
            "id": 97049080,
            "node_id": "U_kgDOBcjZ-A",
            "avatar_url": "https://avatars.githubusercontent.com/u/97049080?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lorenzom222",
            "html_url": "https://github.com/lorenzom222",
            "followers_url": "https://api.github.com/users/lorenzom222/followers",
            "following_url": "https://api.github.com/users/lorenzom222/following{/other_user}",
            "gists_url": "https://api.github.com/users/lorenzom222/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lorenzom222/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lorenzom222/subscriptions",
            "organizations_url": "https://api.github.com/users/lorenzom222/orgs",
            "repos_url": "https://api.github.com/users/lorenzom222/repos",
            "events_url": "https://api.github.com/users/lorenzom222/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lorenzom222/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-13T23:52:47Z",
        "updated_at": "2023-10-15T16:06:28Z",
        "closed_at": "2023-10-15T16:06:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nUpon the `poetry install -E all ` command, I'm unable to install awadb version or azure-ai-vision specified in pyproject.toml \r\nawadb = {version = \"^0.3.2\", optional = true}\r\nazure-ai-vision = {version = \"^0.11.1b1\", optional = true}\r\n\r\n```\r\nPackage operations: 1 install, 1 update, 0 removals\r\n\r\n  \u2022 Updating awadb (0.3.1 -> 0.3.2): Failed\r\n\r\n  RuntimeError\r\n\r\n  Unable to find installation candidates for awadb (0.3.2)\r\n\r\n  at ~/opt/anaconda3/envs/langchain/lib/python3.9/site-packages/poetry/installation/chooser.py:76 in choose_for\r\n       72\u2502 \r\n       73\u2502             links.append(link)\r\n       74\u2502 \r\n       75\u2502         if not links:\r\n    \u2192  76\u2502             raise RuntimeError(f\"Unable to find installation candidates for {package}\")\r\n       77\u2502 \r\n       78\u2502         # Get the best link\r\n       79\u2502         chosen = max(links, key=lambda link: self._sort_key(package, link))\r\n       80\u2502 \r\n\r\n  \u2022 Installing azure-ai-vision (0.11.1b1): Failed\r\n\r\n  RuntimeError\r\n\r\n  Unable to find installation candidates for azure-ai-vision (0.11.1b1)\r\n\r\n  at ~/opt/anaconda3/envs/langchain/lib/python3.9/site-packages/poetry/installation/chooser.py:76 in choose_for\r\n       72\u2502 \r\n       73\u2502             links.append(link)\r\n       74\u2502 \r\n       75\u2502         if not links:\r\n    \u2192  76\u2502             raise RuntimeError(f\"Unable to find installation candidates for {package}\")\r\n       77\u2502 \r\n       78\u2502         # Get the best link\r\n       79\u2502         chosen = max(links, key=lambda link: self._sort_key(package, link))\r\n```\r\n\r\nHowever I was able to install the  awadb 0.3.1 version.\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Freshly install poetry via: curl -sSL https://install.python-poetry.org | python3 -. In Conda venv.\r\n2. After it's installation, Poetry (version 1.5.1), attemped `poetry install -E all ` command\r\n3. Received errors\r\n\r\n\n\n### Expected behavior\n\nAfter I installed Poetry, I tried to run poetry install -E all within the langchain directory, however I receive dependencies errors.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6125/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6125/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6124",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6124/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6124/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6124/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6124",
        "id": 1755794532,
        "node_id": "PR_kwDOIPDwls5S75mo",
        "number": 6124,
        "title": "Fix missing chain classname in StdOutCallbackHandler.on_chain_start",
        "user": {
            "login": "idoru",
            "id": 237596,
            "node_id": "MDQ6VXNlcjIzNzU5Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/237596?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/idoru",
            "html_url": "https://github.com/idoru",
            "followers_url": "https://api.github.com/users/idoru/followers",
            "following_url": "https://api.github.com/users/idoru/following{/other_user}",
            "gists_url": "https://api.github.com/users/idoru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/idoru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/idoru/subscriptions",
            "organizations_url": "https://api.github.com/users/idoru/orgs",
            "repos_url": "https://api.github.com/users/idoru/repos",
            "events_url": "https://api.github.com/users/idoru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/idoru/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "vowelparrot",
                "id": 130414180,
                "node_id": "U_kgDOB8X2ZA",
                "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/vowelparrot",
                "html_url": "https://github.com/vowelparrot",
                "followers_url": "https://api.github.com/users/vowelparrot/followers",
                "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
                "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
                "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
                "repos_url": "https://api.github.com/users/vowelparrot/repos",
                "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
                "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-13T23:36:14Z",
        "updated_at": "2023-07-13T07:05:37Z",
        "closed_at": "2023-07-13T07:05:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6124",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6124",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6124.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6124.patch",
            "merged_at": "2023-07-13T07:05:37Z"
        },
        "body": "Retrieves the name of the class from new location as of commit 18af149e91e62b3ac7728ddea420688d41043734\r\n\r\n#### Before submitting\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6124/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6124/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6123",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6123/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6123/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6123/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6123",
        "id": 1755718564,
        "node_id": "PR_kwDOIPDwls5S7o9M",
        "number": 6123,
        "title": "Fix typo in the CAI critique prompt",
        "user": {
            "login": "dulacp",
            "id": 328718,
            "node_id": "MDQ6VXNlcjMyODcxOA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/328718?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dulacp",
            "html_url": "https://github.com/dulacp",
            "followers_url": "https://api.github.com/users/dulacp/followers",
            "following_url": "https://api.github.com/users/dulacp/following{/other_user}",
            "gists_url": "https://api.github.com/users/dulacp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dulacp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dulacp/subscriptions",
            "organizations_url": "https://api.github.com/users/dulacp/orgs",
            "repos_url": "https://api.github.com/users/dulacp/repos",
            "events_url": "https://api.github.com/users/dulacp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dulacp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-13T22:08:29Z",
        "updated_at": "2023-06-19T00:38:57Z",
        "closed_at": "2023-06-19T00:38:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6123",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6123",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6123.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6123.patch",
            "merged_at": "2023-06-19T00:38:56Z"
        },
        "body": "Very small typo in the Constitutional AI critique default prompt. The negation \"If there is *no* material critique of ...\" is used two times, should be used only on the first one.\r\n\r\nCheers,\r\nPierre",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6123/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6123/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6122",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6122/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6122/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6122/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6122",
        "id": 1755717090,
        "node_id": "PR_kwDOIPDwls5S7ont",
        "number": 6122,
        "title": "Update model token mappings/cost to include 0613 models",
        "user": {
            "login": "eoriont",
            "id": 6570131,
            "node_id": "MDQ6VXNlcjY1NzAxMzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6570131?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eoriont",
            "html_url": "https://github.com/eoriont",
            "followers_url": "https://api.github.com/users/eoriont/followers",
            "following_url": "https://api.github.com/users/eoriont/following{/other_user}",
            "gists_url": "https://api.github.com/users/eoriont/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eoriont/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eoriont/subscriptions",
            "organizations_url": "https://api.github.com/users/eoriont/orgs",
            "repos_url": "https://api.github.com/users/eoriont/repos",
            "events_url": "https://api.github.com/users/eoriont/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eoriont/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-13T22:07:30Z",
        "updated_at": "2023-06-21T08:37:18Z",
        "closed_at": "2023-06-21T08:37:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6122",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6122",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6122.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6122.patch",
            "merged_at": "2023-06-21T08:37:17Z"
        },
        "body": "Add `gpt-3.5-turbo-16k` to model token mappings, as per the following new OpenAI blog post:\r\nhttps://openai.com/blog/function-calling-and-other-api-updates\r\n\r\nFixes #6118 \r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\nEach example using `gpt-3.5-turbo` should already work, and I think shouldn't be updated as the new 16k token model costs more per token to use. \r\n\r\nIf there are tests I should add, please let me know.\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n@hwchase17 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6122/reactions",
            "total_count": 7,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6122/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6121",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6121/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6121/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6121/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6121",
        "id": 1755693610,
        "node_id": "I_kwDOIPDwls5opcIq",
        "number": 6121,
        "title": "Bug with Weaviate vectorstore ",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-13T21:53:58Z",
        "updated_at": "2023-06-14T16:54:42Z",
        "closed_at": "2023-06-14T16:54:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n```\r\nlangchain==0.0.194\r\nweaviate-client==3.19.1\r\n```\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nThis works:\r\n```\r\n# Init \r\nweaviate_url = url\r\nclient = Client(url=weaviate_url, auth_client_secret=auth.AuthClientPassword(xxx,xxx))\r\nembeddings = OpenAIEmbeddings()\r\nvectorstore= Weaviate.from_texts(splits, embeddings, client=client)\r\n# Search\r\nquery = \"What is micrograd?\"\r\nmatched_docs = vectorstore_new.similarity_search(query,k=1)\r\nmatched_docs\r\n```\r\n\r\nUnder the hood, a random `index_name` is created and text key is hard-coded:\r\n```\r\nIndex!\r\nLangChain_214a4ded03fd4121ad5f5d0c0c36e051\r\nText key: text_key!\r\ntext\r\n```\r\n\r\nNow, I want to get this index that I've created (e.g., in another process or session):\r\n```\r\n# Create connection\r\nvectorstore_weviate = Weaviate(client=client)\r\n```\r\n\r\nOf course, this will fail because we need  `'index_name'` and `'text_key'`:\r\n```\r\nTypeError: __init__() missing 2 required positional arguments: 'index_name' and 'text_key'\r\n```\r\n\r\nSo, we re-generate our `vectorstore` with an `index_name`:\r\n```\r\nvectorstore= Weaviate.from_texts(splits, embeddings, client=client, index_name=\"karpathy-gpt\")\r\n```\r\n\r\nConfirm:\r\n```\r\nIndex!\r\nkarpathy_gpt\r\nText key: text_key!\r\ntext\r\n```\r\n\r\nBut, when we run search:\r\n```\r\n# Search\r\nquery = \"What is micrograd?\"\r\nmatched_docs = vectorstore_new.similarity_search(query,k=1)\r\nmatched_docs\r\n```\r\n\r\nWe can see the the index name returned in `result` [here](https://github.com/hwchase17/langchain/blob/11ab0be11aff9128c12178b5ebf62071985fb823/langchain/vectorstores/weaviate.py#L223) has been modified with an upper case start char `Karpathy_gpt`. \r\n\r\nThis results in a key error when we use our index_name key, `karpathy_gpt`:\r\n```\r\nIndex Name in similarity_search_by_vector\r\n***`karpathy_gpt`***\r\n\r\nResult\r\n{'data': {'Get': {***'Karpathy_gpt'***: [{'text': \"would like to take you through building of micrograd. Now micrograd is this library that I released on GitHub about two years ago but at the time I only uploaded the source code and you'd have to go in by yourself and really figure out how it works. So in this lecture I will take you through it step by step and kind of comment on all the pieces of it. So what is micrograd and why is it interesting? Thank you. Micrograd is basically an autograd engine. Autograd is short for automatic gradient\"}]}}}\r\n```\r\n\r\nIt's possible that the index-name is being modified somewhere on the `Weaviate` side?\r\n\r\nThe `result` come from Weaviate [here](https://github.com/hwchase17/langchain/blob/11ab0be11aff9128c12178b5ebf62071985fb823/langchain/vectorstores/weaviate.py#LL219C9-L219C71):\r\n```\r\nresult = query_obj.with_near_vector(vector).with_limit(k).do()\r\n```\r\n\r\nThe the index name is modified to `Karpathy_gpt` in the `result`.\r\n\r\n### Expected behavior\r\n\r\nWe expect `result` to have the same `index_name` as we have defined when we initialize Weaviate.\r\n\r\n```\r\n{'data': {'Get': {'**karpathy_gpt**': [{'text': \"would like to take you through building of micrograd. Now micrograd is this library that I released on GitHub about two years ago but at the time I only uploaded the source code and you'd have to go in by yourself and really figure out how it works. So in this lecture I will take you through it step by step and kind of comment on all the pieces of it. So what is micrograd and why is it interesting? Thank you. Micrograd is basically an autograd engine. Autograd is short for automatic gradient\"}]}}}\r\n```\r\n\r\nPossible that CShorten can sanity check.\r\n\r\nhttps://github.com/CShorten",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6121/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6121/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6120",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6120/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6120/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6120/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6120",
        "id": 1755688603,
        "node_id": "PR_kwDOIPDwls5S7iG4",
        "number": 6120,
        "title": "Fix VectorStoreMemory when used with CombinedMemory",
        "user": {
            "login": "ibndias",
            "id": 3958152,
            "node_id": "MDQ6VXNlcjM5NTgxNTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3958152?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ibndias",
            "html_url": "https://github.com/ibndias",
            "followers_url": "https://api.github.com/users/ibndias/followers",
            "following_url": "https://api.github.com/users/ibndias/following{/other_user}",
            "gists_url": "https://api.github.com/users/ibndias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ibndias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ibndias/subscriptions",
            "organizations_url": "https://api.github.com/users/ibndias/orgs",
            "repos_url": "https://api.github.com/users/ibndias/repos",
            "events_url": "https://api.github.com/users/ibndias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ibndias/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-13T21:48:12Z",
        "updated_at": "2023-11-07T04:15:00Z",
        "closed_at": "2023-11-07T04:15:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6120",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6120",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6120.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6120.patch",
            "merged_at": null
        },
        "body": "Fix VectorStoreMemory mixing the other memory input when used in CombinedMemory\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\n\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\nFixes Issue when using multiple memory\r\nWhen we used multiple memory, VectorStoreMemory together with ConversationBufferWindowMemory, the VectorStoreMemory history is mixed up with ConversationBufferWindowMemory\r\n\r\n```python\r\nvectorstore_memory = VectorStoreRetrieverMemory(input_key=\"input\", memory_key=\"related_conv\", retriever=retriever)\r\nconv_memory = ConversationBufferWindowMemory(input_key=\"input\", memory_key=\"previous_conv\", k=1)\r\nmemory = CombinedMemory(memories=[conv_memory, vectorstore_memory])\r\n```\r\n\r\n`related_conv` contains `input + previous_conv + response`\r\n#### Who can review?\r\nTag maintainers/contributors who might be interested:\r\n@dev2049\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @hwchase17\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6120/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6120/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6119",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6119/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6119/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6119/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6119",
        "id": 1755676306,
        "node_id": "PR_kwDOIPDwls5S7fdE",
        "number": 6119,
        "title": "[Feature][VectorStore] Support StarRocks as vector db",
        "user": {
            "login": "dirtysalt",
            "id": 1081215,
            "node_id": "MDQ6VXNlcjEwODEyMTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1081215?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dirtysalt",
            "html_url": "https://github.com/dirtysalt",
            "followers_url": "https://api.github.com/users/dirtysalt/followers",
            "following_url": "https://api.github.com/users/dirtysalt/following{/other_user}",
            "gists_url": "https://api.github.com/users/dirtysalt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dirtysalt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dirtysalt/subscriptions",
            "organizations_url": "https://api.github.com/users/dirtysalt/orgs",
            "repos_url": "https://api.github.com/users/dirtysalt/repos",
            "events_url": "https://api.github.com/users/dirtysalt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dirtysalt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-06-13T21:35:01Z",
        "updated_at": "2023-06-21T16:02:34Z",
        "closed_at": "2023-06-21T16:02:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6119",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6119",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6119.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6119.patch",
            "merged_at": "2023-06-21T16:02:33Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\nHere are some examples to use StarRocks as vectordb\r\n\r\n```\r\nfrom langchain.vectorstores import StarRocks\r\nfrom langchain.vectorstores.starrocks import StarRocksSettings\r\n\r\nembeddings = OpenAIEmbeddings()\r\n\r\n# conifgure starrocks settings\r\nsettings = StarRocksSettings()\r\nsettings.port = 41003\r\nsettings.host = '127.0.0.1'\r\nsettings.username = 'root'\r\nsettings.password = ''\r\nsettings.database = 'zya'\r\n\r\n# to fill new embeddings\r\ndocsearch = StarRocks.from_documents(split_docs, embeddings, config = settings)   \r\n\r\n\r\n# or to use already-built embeddings in database.\r\ndocsearch = StarRocks(embeddings, settings)\r\n```\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n@dev2049 \r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @hwchase17\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6119/reactions",
            "total_count": 7,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6119/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6118",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6118/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6118/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6118/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6118",
        "id": 1755665020,
        "node_id": "I_kwDOIPDwls5opVJ8",
        "number": 6118,
        "title": "Issue: Update OpenAI model token mapping to reflect new API update 2023-06-13",
        "user": {
            "login": "eoriont",
            "id": 6570131,
            "node_id": "MDQ6VXNlcjY1NzAxMzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6570131?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eoriont",
            "html_url": "https://github.com/eoriont",
            "followers_url": "https://api.github.com/users/eoriont/followers",
            "following_url": "https://api.github.com/users/eoriont/following{/other_user}",
            "gists_url": "https://api.github.com/users/eoriont/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eoriont/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eoriont/subscriptions",
            "organizations_url": "https://api.github.com/users/eoriont/orgs",
            "repos_url": "https://api.github.com/users/eoriont/repos",
            "events_url": "https://api.github.com/users/eoriont/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eoriont/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-13T21:22:21Z",
        "updated_at": "2023-06-21T08:37:19Z",
        "closed_at": "2023-06-21T08:37:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nThe blog post here\r\nhttps://openai.com/blog/function-calling-and-other-api-updates\r\n\r\nspecifies\r\n>  - new 16k context version of gpt-3.5-turbo (vs the standard 4k version)\r\n\r\nThe `langchain/llms/openai.py` `model_token_mapping` should be changed to reflect this.\r\n\n\n### Suggestion:\n\nAdd `gpt-3.5-turbo-16k` property to `model_token_mapping` with value 16k",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6118/reactions",
            "total_count": 6,
            "+1": 6,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6118/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6116",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6116/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6116/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6116/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6116",
        "id": 1755656871,
        "node_id": "PR_kwDOIPDwls5S7bO1",
        "number": 6116,
        "title": "Add mmr support for opensearch",
        "user": {
            "login": "oneryalcin",
            "id": 8620952,
            "node_id": "MDQ6VXNlcjg2MjA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8620952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oneryalcin",
            "html_url": "https://github.com/oneryalcin",
            "followers_url": "https://api.github.com/users/oneryalcin/followers",
            "following_url": "https://api.github.com/users/oneryalcin/following{/other_user}",
            "gists_url": "https://api.github.com/users/oneryalcin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oneryalcin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oneryalcin/subscriptions",
            "organizations_url": "https://api.github.com/users/oneryalcin/orgs",
            "repos_url": "https://api.github.com/users/oneryalcin/repos",
            "events_url": "https://api.github.com/users/oneryalcin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oneryalcin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-13T21:14:09Z",
        "updated_at": "2023-06-17T18:19:25Z",
        "closed_at": "2023-06-17T18:19:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6116",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6116",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6116.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6116.patch",
            "merged_at": "2023-06-17T18:19:25Z"
        },
        "body": "### Fixes  [(MMR Support for OpenSearch)](https://github.com/hwchase17/langchain/issues/6108)\r\n\r\nAdded Maximal Marginal Relevance Search to Opensearch \r\n\r\n### Before submitting\r\n\r\nUpdated [Opensearch Docs](https://python.langchain.com/en/latest/modules/indexes/vectorstores/examples/opensearch.html) with MMR example\r\n\r\n### Who can review?\r\n\r\nHi @dev2049 appreciate if you could review. \r\n\r\nTwitter: https://twitter.com/oneryalcin",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6116/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6116/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6115",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6115/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6115/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6115/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6115",
        "id": 1755638809,
        "node_id": "PR_kwDOIPDwls5S7XOo",
        "number": 6115,
        "title": "support streaming for functions",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-13T20:59:05Z",
        "updated_at": "2023-06-15T11:36:23Z",
        "closed_at": "2023-06-13T22:26:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6115",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6115",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6115.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6115.patch",
            "merged_at": "2023-06-13T22:26:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6115/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6115/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6114",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6114/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6114/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6114/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6114",
        "id": 1755620176,
        "node_id": "PR_kwDOIPDwls5S7TKV",
        "number": 6114,
        "title": "Chooch AI Integration",
        "user": {
            "login": "choochtech",
            "id": 2943831,
            "node_id": "MDQ6VXNlcjI5NDM4MzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2943831?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/choochtech",
            "html_url": "https://github.com/choochtech",
            "followers_url": "https://api.github.com/users/choochtech/followers",
            "following_url": "https://api.github.com/users/choochtech/following{/other_user}",
            "gists_url": "https://api.github.com/users/choochtech/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/choochtech/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/choochtech/subscriptions",
            "organizations_url": "https://api.github.com/users/choochtech/orgs",
            "repos_url": "https://api.github.com/users/choochtech/repos",
            "events_url": "https://api.github.com/users/choochtech/events{/privacy}",
            "received_events_url": "https://api.github.com/users/choochtech/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899415699,
                "node_id": "LA_kwDOIPDwls8AAAABJAcmkw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/llms",
                "name": "llms",
                "color": "7CDBB2",
                "default": false,
                "description": ""
            },
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-13T20:43:38Z",
        "updated_at": "2023-06-29T19:33:18Z",
        "closed_at": "2023-06-29T19:33:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6114",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6114",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6114.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6114.patch",
            "merged_at": null
        },
        "body": "\r\nFixes # \r\n-  Added chooch.ai LLM wrapper integration.\r\n-  Added delete_collection_file and similarity_search_with_score_chooch to chroma.py file.  You can discard these.  It useful for robust operations.\r\n\r\nExample usage:\r\n\r\napi_url = \"http://localhost:8082\"\r\nfrom langchain.llms import ChoochAI\r\nllm = ChoochAI(api_url=api_url)\r\n\r\nThis is used with our ImageChat 3 MultiModal Self Hosted deployment.  We will have a Cloud version ready soon too.\r\n\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n@hwchase17,  @dev2049, @agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6114/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6114/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6113",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6113/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6113/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6113/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6113",
        "id": 1755618928,
        "node_id": "PR_kwDOIPDwls5S7S4M",
        "number": 6113,
        "title": "add functions agent",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-13T20:43:06Z",
        "updated_at": "2023-06-20T09:52:16Z",
        "closed_at": "2023-06-14T01:51:01Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6113",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6113",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6113.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6113.patch",
            "merged_at": "2023-06-14T01:51:01Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6113/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6113/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6112",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6112/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6112/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6112/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6112",
        "id": 1755614171,
        "node_id": "PR_kwDOIPDwls5S7R22",
        "number": 6112,
        "title": "Return session name in runner response",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-13T20:38:58Z",
        "updated_at": "2023-06-13T23:59:45Z",
        "closed_at": "2023-06-13T23:59:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6112",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6112",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6112.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6112.patch",
            "merged_at": "2023-06-13T23:59:44Z"
        },
        "body": "Makes it easier to then run evals w/o thinking about specifying a session",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6112/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6112/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6111",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6111/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6111/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6111/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6111",
        "id": 1755597227,
        "node_id": "PR_kwDOIPDwls5S7OM_",
        "number": 6111,
        "title": "feat: interfaces for async embeddings, implement async openai",
        "user": {
            "login": "tyree731",
            "id": 801583,
            "node_id": "MDQ6VXNlcjgwMTU4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/801583?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tyree731",
            "html_url": "https://github.com/tyree731",
            "followers_url": "https://api.github.com/users/tyree731/followers",
            "following_url": "https://api.github.com/users/tyree731/following{/other_user}",
            "gists_url": "https://api.github.com/users/tyree731/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tyree731/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tyree731/subscriptions",
            "organizations_url": "https://api.github.com/users/tyree731/orgs",
            "repos_url": "https://api.github.com/users/tyree731/repos",
            "events_url": "https://api.github.com/users/tyree731/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tyree731/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-13T20:25:42Z",
        "updated_at": "2023-07-06T14:06:10Z",
        "closed_at": "2023-07-06T14:06:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6111",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6111",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6111.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6111.patch",
            "merged_at": null
        },
        "body": "This change adds support to the base `Embeddings` class for two methods, `aembed_query` and `aembed_documents`, those two methods supporting async equivalents of `embed_query` and\r\n`embed_documents` respectively. This ever so slightly rounds out async support within langchain, with an initial implementation of this functionality being implemented for openai.\r\n\r\nImplements #6109\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6111/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6111/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6110",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6110/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6110/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6110/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6110",
        "id": 1755592739,
        "node_id": "PR_kwDOIPDwls5S7NPs",
        "number": 6110,
        "title": "Add new openai 0613 model costs",
        "user": {
            "login": "kdcokenny",
            "id": 99611484,
            "node_id": "U_kgDOBe_zXA",
            "avatar_url": "https://avatars.githubusercontent.com/u/99611484?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kdcokenny",
            "html_url": "https://github.com/kdcokenny",
            "followers_url": "https://api.github.com/users/kdcokenny/followers",
            "following_url": "https://api.github.com/users/kdcokenny/following{/other_user}",
            "gists_url": "https://api.github.com/users/kdcokenny/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kdcokenny/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kdcokenny/subscriptions",
            "organizations_url": "https://api.github.com/users/kdcokenny/orgs",
            "repos_url": "https://api.github.com/users/kdcokenny/repos",
            "events_url": "https://api.github.com/users/kdcokenny/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kdcokenny/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-13T20:21:37Z",
        "updated_at": "2023-06-17T18:11:49Z",
        "closed_at": "2023-06-17T18:11:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6110",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6110",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6110.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6110.patch",
            "merged_at": "2023-06-17T18:11:48Z"
        },
        "body": "Added costs for gpt-4-32k-0613, gpt-4-0613, gpt-3.5-turbo-16k, gpt-3.5-turbo-0613, and gpt-3.5-turbo-16k-0613 to openai_info callback based on this [OpenAI post](https://openai.com/blog/function-calling-and-other-api-updates)\r\n\r\n@agola11 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6110/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6110/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6109",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6109/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6109/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6109/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6109",
        "id": 1755590974,
        "node_id": "I_kwDOIPDwls5opDE-",
        "number": 6109,
        "title": "Async request support for Embeddings, with initial support for OpenAI",
        "user": {
            "login": "tyree731",
            "id": 801583,
            "node_id": "MDQ6VXNlcjgwMTU4Mw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/801583?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tyree731",
            "html_url": "https://github.com/tyree731",
            "followers_url": "https://api.github.com/users/tyree731/followers",
            "following_url": "https://api.github.com/users/tyree731/following{/other_user}",
            "gists_url": "https://api.github.com/users/tyree731/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tyree731/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tyree731/subscriptions",
            "organizations_url": "https://api.github.com/users/tyree731/orgs",
            "repos_url": "https://api.github.com/users/tyree731/repos",
            "events_url": "https://api.github.com/users/tyree731/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tyree731/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-13T20:19:56Z",
        "updated_at": "2023-07-03T13:25:23Z",
        "closed_at": "2023-07-03T13:25:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThe proposal here is pretty simple, we add two methods to the `Embeddings` base class, `aembed_documents` and `aembed_query`, allowing for async versions of the equivalent synchronous methods. The first implementation of this would be for OpenAI, since that's a popular embedding API.\n\n### Motivation\n\nasync is supported within other aspects of langchain, and embeddings are one location where support isn't presently there. For a specific example, in a service my company is currently working on converting to be async, this support would improve the throughput of that support noticeably.\n\n### Your contribution\n\nI have a PR in the works that I'll be putting up shortly.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6109/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6109/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6108",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6108/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6108/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6108/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6108",
        "id": 1755560292,
        "node_id": "I_kwDOIPDwls5oo7lk",
        "number": 6108,
        "title": "MMR Support for OpenSearch",
        "user": {
            "login": "oneryalcin",
            "id": 8620952,
            "node_id": "MDQ6VXNlcjg2MjA5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8620952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/oneryalcin",
            "html_url": "https://github.com/oneryalcin",
            "followers_url": "https://api.github.com/users/oneryalcin/followers",
            "following_url": "https://api.github.com/users/oneryalcin/following{/other_user}",
            "gists_url": "https://api.github.com/users/oneryalcin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/oneryalcin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/oneryalcin/subscriptions",
            "organizations_url": "https://api.github.com/users/oneryalcin/orgs",
            "repos_url": "https://api.github.com/users/oneryalcin/repos",
            "events_url": "https://api.github.com/users/oneryalcin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/oneryalcin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-13T19:55:07Z",
        "updated_at": "2023-09-12T16:38:13Z",
        "closed_at": "2023-09-12T16:35:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nCurrently few vectorstores like Qdrant has support for MMR (Maximal Marginal Relevance)\r\nOpensearch does not have it. \r\n\r\n### Motivation\r\n\r\nSince we use OpenSearch as our Vectorstore and we want variance in our results for best entropy I'd like to have MMR implemented for `OpenSearchVectorStore`\r\n\r\n### Your contribution\r\n\r\nMy PR: https://github.com/hwchase17/langchain/pull/6116",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6108/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6108/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6107",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6107/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6107/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6107/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6107",
        "id": 1755556051,
        "node_id": "PR_kwDOIPDwls5S7FOh",
        "number": 6107,
        "title": "update web_base.py to have verify option",
        "user": {
            "login": "jackfrost1411",
            "id": 48760936,
            "node_id": "MDQ6VXNlcjQ4NzYwOTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/48760936?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jackfrost1411",
            "html_url": "https://github.com/jackfrost1411",
            "followers_url": "https://api.github.com/users/jackfrost1411/followers",
            "following_url": "https://api.github.com/users/jackfrost1411/following{/other_user}",
            "gists_url": "https://api.github.com/users/jackfrost1411/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jackfrost1411/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jackfrost1411/subscriptions",
            "organizations_url": "https://api.github.com/users/jackfrost1411/orgs",
            "repos_url": "https://api.github.com/users/jackfrost1411/repos",
            "events_url": "https://api.github.com/users/jackfrost1411/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jackfrost1411/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-13T19:51:43Z",
        "updated_at": "2023-06-17T18:10:50Z",
        "closed_at": "2023-06-17T18:10:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6107",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6107",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6107.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6107.patch",
            "merged_at": "2023-06-17T18:10:49Z"
        },
        "body": "We propose an enhancement to the web-based loader initialize method by introducing a \"verify\" option. This enhancement addresses the issue of SSL verification errors encountered on certain web pages. By providing users with the option to set the verify parameter to False, we offer greater flexibility and control.\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n### Fixes #6079 \r\n\r\n#### Who can review?\r\n@eyurtsev @hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6107/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6107/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6106",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6106/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6106/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6106/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6106",
        "id": 1755549282,
        "node_id": "PR_kwDOIPDwls5S7Dw_",
        "number": 6106,
        "title": "Update web_base.py",
        "user": {
            "login": "jackfrost1411",
            "id": 48760936,
            "node_id": "MDQ6VXNlcjQ4NzYwOTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/48760936?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jackfrost1411",
            "html_url": "https://github.com/jackfrost1411",
            "followers_url": "https://api.github.com/users/jackfrost1411/followers",
            "following_url": "https://api.github.com/users/jackfrost1411/following{/other_user}",
            "gists_url": "https://api.github.com/users/jackfrost1411/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jackfrost1411/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jackfrost1411/subscriptions",
            "organizations_url": "https://api.github.com/users/jackfrost1411/orgs",
            "repos_url": "https://api.github.com/users/jackfrost1411/repos",
            "events_url": "https://api.github.com/users/jackfrost1411/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jackfrost1411/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-13T19:45:57Z",
        "updated_at": "2023-06-13T19:55:19Z",
        "closed_at": "2023-06-13T19:55:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6106",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6106",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6106.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6106.patch",
            "merged_at": null
        },
        "body": "We propose an enhancement to the web-based loader initialize method by introducing a \"verify\" option. This enhancement addresses the issue of SSL verification errors encountered in certain web pages. By providing users with the option to set the verify parameter to False, we offer greater flexibility and control.\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n@eyurtsev ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6106/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6106/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6105",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6105/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6105/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6105/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6105",
        "id": 1755410046,
        "node_id": "I_kwDOIPDwls5ooW5-",
        "number": 6105,
        "title": "Incorrect syntax near the keyword 'TO'",
        "user": {
            "login": "tire0011",
            "id": 228717,
            "node_id": "MDQ6VXNlcjIyODcxNw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/228717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tire0011",
            "html_url": "https://github.com/tire0011",
            "followers_url": "https://api.github.com/users/tire0011/followers",
            "following_url": "https://api.github.com/users/tire0011/following{/other_user}",
            "gists_url": "https://api.github.com/users/tire0011/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tire0011/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tire0011/subscriptions",
            "organizations_url": "https://api.github.com/users/tire0011/orgs",
            "repos_url": "https://api.github.com/users/tire0011/repos",
            "events_url": "https://api.github.com/users/tire0011/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tire0011/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-13T18:04:04Z",
        "updated_at": "2023-10-21T16:08:40Z",
        "closed_at": "2023-10-21T16:08:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version 0.0.198, \r\nwindows, \r\nSQL Server 16.0.4025.1 windows docker container (linux)\r\n\r\nIn the output I get the message:\r\nIncorrect syntax near the keyword 'TO'\r\n\r\nand program not ends correctly\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n**my python program:**\r\n\r\nserver = 'localhost,1435'\r\ndatabase = 'MyDB'\r\nusername = 'me'\r\npwd = '****'\r\ndriver= 'ODBC Driver 17 for SQL Server'\r\n\r\ndef db_instance():\r\n    #Creating SQLAlchemy connection sting\r\n    connectionString = 'DRIVER='+driver+';SERVER=tcp:'+server+';PORT=1433;DATABASE='+database+';UID='+username+';PWD='+ pwd+';Encrypt=no;TrustServerCertificate=no;Connection Timeout=30;'\r\n    print(connectionString)\r\n    params = urllib.parse.quote_plus(connectionString)\r\n    conn_str = 'mssql+pyodbc:///?odbc_connect={}'.format(params)\r\n    db_instance = SQLDatabase.from_uri(conn_str,schema='ALG')\r\n    return db_instance\r\n\r\ndb = db_instance()\r\n\r\nprint(db.table_info)\r\n\r\n# Setting API Key and API endpoint for OpenAI\r\nos.environ['OPENAI_API_TOKEN'] = '....'\r\n\r\nllm = OpenAI(model_name='text-davinci-003')\r\n\r\n# LangChain Agent\r\ntoolkit = SQLDatabaseToolkit(db=db, llm = llm)\r\n\r\nagent_executor = create_sql_agent(\r\n    llm= llm,\r\n    toolkit=toolkit,\r\n    verbose=True,\r\n    top_k = 5\r\n)\r\n\r\n# Test\r\nagent_executor.run(\"'how many Messages are in the DB'\")\n\n### Expected behavior\n\n**Output from terminal:** \r\nSELECT Message_0_0.*, Message_0_100001.*, Message_0_100002.*, Message_0_100003.*, Message_0_100004.*, Message_0_100000.*, Message_0_99999.*\r\nFROM Message_0_0\r\nINNER JOIN Message_0_100001 ON Message_0_0.id = Message_0_100001.id\r\nINNER JOIN Message_0_100002 ON Message_0_0.id = Message_0_100002.id\r\nINNER JOIN Message_0_100003 ON Message_0_0.id = Message_0_100003.id\r\nINNER JOIN Message_0_100004 ON Message_0_0.id = Message_0_100004.id\r\nINNER JOIN Message_0_100000 ON Message_0_0.id = Message_0_100000.id\r\nINNER JOIN Message_0_99999 ON Message_0_0.id = Message_0_99999.id\r\nThought: The query looks correct, I can now execute it.\r\nAction: query_sql_db\r\nAction Input: SELECT Message_0_0.*, Message_0_100001.*, Message_0_100002.*, Message_0_100003.*, Message_0_100004.*, Message_0_100000.*, Message_0_99999.*\r\nFROM Message_0_0\r\nINNER JOIN Message_0_100001 ON Message_0_0.id = Message_0_100001.id\r\nINNER JOIN Message_0_100002 ON Message_0_0.id = Message_0_100002.id\r\nINNER JOIN Message_0_100003 ON Message_0_0.id = Message_0_100003.id\r\nINNER JOIN Message_0_100004 ON Message_0_0.id = Message_0_100004.id\r\nINNER JOIN Message_0_100000 ON Message_0_0.id = Message_0_100000.id\r\nINNER JOIN Message_0_99999 ON Message_0_0.id = Message_0_99999.id\r\nObs\r\nObservation: Error: (pyodbc.ProgrammingError) ('42000', \"[42000] [Microsoft][ODBC Driver 17 for SQL Server][SQL Server]Incorrect syntax near the keyword 'TO'. (156) (SQLExecDirectW)\")\r\n[SQL: SET search_path TO ALG]\r\n(Background on this error at: https://sqlalche.me/e/20/f405)\r\nThought: I should double check my query again with the query checker.\r\nAction: query_checker_sql_db\r\nAction Input: SELECT Message_0_0.*, Message_0_100001.*, Message_0_100002.*, Message_0_100003.*, Message_0_100004.*, Message_0_100000.*, Message_0_99999.*\r\nFROM Message_0_0\r\nINNER JOIN Message_0_100001 ON Message_0_0.id = Message_0_100001.id\r\nINNER JOIN Message_0_100002 ON Message_0_0.id = Message_0_100002.id\r\nINNER JOIN Message_0_100003 ON Message_0_0.id = Message_0_100003.id\r\nINNER JOIN Message_0_100004 ON Message_0_0.id = Message_0_100004.id\r\nINNER JOIN Message_0_100000 ON Message_0_0.id = Message_0_100000.id\r\nINNER JOIN Message_0_99999 ON Message_0_0.id = Message_0_99\r\n\r\nThe message query looks correct it should get the correct count.\r\n**SQL server trace contains also the query:**\r\nSET search_path TO ALG\r\n\r\nI found that string in the github repo under /sql_database.py\r\nline 347\r\n```\r\n        with self._engine.begin() as connection:\r\n            if self._schema is not None:\r\n                if self.dialect == \"snowflake\":\r\n                    connection.exec_driver_sql(\r\n                        f\"ALTER SESSION SET search_path='{self._schema}'\"\r\n                    )\r\n                elif self.dialect == \"bigquery\":\r\n                    connection.exec_driver_sql(f\"SET @@dataset_id='{self._schema}'\")\r\n                else:\r\n                    connection.exec_driver_sql(f\"SET search_path TO {self._schema}\")\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6105/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6105/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6104",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6104/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6104/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6104/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6104",
        "id": 1755398854,
        "node_id": "I_kwDOIPDwls5ooULG",
        "number": 6104,
        "title": "Support and make use of function calling and other OpenAI updates on 2023-06-13",
        "user": {
            "login": "danielgwilson",
            "id": 11265967,
            "node_id": "MDQ6VXNlcjExMjY1OTY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/11265967?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danielgwilson",
            "html_url": "https://github.com/danielgwilson",
            "followers_url": "https://api.github.com/users/danielgwilson/followers",
            "following_url": "https://api.github.com/users/danielgwilson/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielgwilson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danielgwilson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielgwilson/subscriptions",
            "organizations_url": "https://api.github.com/users/danielgwilson/orgs",
            "repos_url": "https://api.github.com/users/danielgwilson/repos",
            "events_url": "https://api.github.com/users/danielgwilson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danielgwilson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-13T17:57:29Z",
        "updated_at": "2023-09-23T16:05:43Z",
        "closed_at": "2023-09-23T16:05:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nOpenAI released several major updates today (2023-06-13) that likely have major implications for what is possible. At the very least, it will make things more reliable.\r\n\r\nHere's a shortlist from [the blog post](https://openai.com/blog/function-calling-and-other-api-updates):\r\n\r\n- Dramatically improved function calling support + JSON consistency\r\n- `gpt-3.5-turbo` with a 16K context window (\ud83e\udd2f)\r\n- Token cost changes for completions and embeddings\r\n- Upcoming deprecation for March-versioned models\n\n### Motivation\n\nThe release of OpenAI's blog post found here:\r\n\r\nhttps://openai.com/blog/function-calling-and-other-api-updates\r\n\r\n\r\nI'm adding this issue mostly to flag and track this OpenAI release and kick off a forum for discussion.\n\n### Your contribution\n\nCan potentially add PRs but haven't contributed here previously.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6104/reactions",
            "total_count": 21,
            "+1": 21,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6104/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6103",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6103/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6103/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6103/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6103",
        "id": 1755381783,
        "node_id": "PR_kwDOIPDwls5S6fCe",
        "number": 6103,
        "title": "Harrison/notebook functions",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-13T17:45:13Z",
        "updated_at": "2023-06-13T17:52:56Z",
        "closed_at": "2023-06-13T17:52:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6103",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6103",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6103.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6103.patch",
            "merged_at": "2023-06-13T17:52:55Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6103/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6103/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6102",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6102/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6102/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6102/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6102",
        "id": 1755380000,
        "node_id": "PR_kwDOIPDwls5S6epa",
        "number": 6102,
        "title": "bump version to 199",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-13T17:43:56Z",
        "updated_at": "2023-06-13T17:50:34Z",
        "closed_at": "2023-06-13T17:50:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6102",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6102",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6102.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6102.patch",
            "merged_at": "2023-06-13T17:50:33Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6102/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6102/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6101",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6101/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6101/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6101/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6101",
        "id": 1755378721,
        "node_id": "I_kwDOIPDwls5ooPQh",
        "number": 6101,
        "title": "Validation Error",
        "user": {
            "login": "talraney",
            "id": 99226070,
            "node_id": "U_kgDOBeoR1g",
            "avatar_url": "https://avatars.githubusercontent.com/u/99226070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/talraney",
            "html_url": "https://github.com/talraney",
            "followers_url": "https://api.github.com/users/talraney/followers",
            "following_url": "https://api.github.com/users/talraney/following{/other_user}",
            "gists_url": "https://api.github.com/users/talraney/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/talraney/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/talraney/subscriptions",
            "organizations_url": "https://api.github.com/users/talraney/orgs",
            "repos_url": "https://api.github.com/users/talraney/repos",
            "events_url": "https://api.github.com/users/talraney/events{/privacy}",
            "received_events_url": "https://api.github.com/users/talraney/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-13T17:43:13Z",
        "updated_at": "2023-10-12T16:08:42Z",
        "closed_at": "2023-10-12T16:08:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nPython Version: 3.9.11\r\nLangchain version = 0.0.199\r\n\r\nI'm getting a validation error with GPT4All where I'm following the instructions of the notebook and installed all packages but apparently there's some parameters called n_parts that isn't part of the GPT4All attribute\r\n\r\n```\r\nfrom langchain import PromptTemplate, LLMChain\r\nfrom langchain.llms import GPT4All\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\nimport requests\r\n\r\nfrom pathlib import Path\r\nfrom tqdm import tqdm\r\n\r\nPath(local_path).parent.mkdir(parents=True, exist_ok=True)\r\n\r\nurl = 'http://gpt4all.io/models/ggml-gpt4all-l13b-snoozy.bin'\r\n\r\n\r\nresponse = requests.get(url, stream=True)\r\n\r\n\r\nwith open(local_path, 'wb') as f:\r\n    for chunk in tqdm(response.iter_content(chunk_size=8192)):\r\n        if chunk:\r\n            f.write(chunk)\r\ntemplate = \"\"\"Question: {question}\r\n\r\nAnswer: Let's think step by step.\"\"\"\r\n\r\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\r\n\r\n\r\n\r\ncallbacks = [StreamingStdOutCallbackHandler()]\r\n\r\nllm = GPT4All(model=local_path, callbacks=callbacks, verbose=True)\r\n\r\n\r\nllm = GPT4All(model=local_path, backend='gptj', callbacks=callbacks, verbose=True)\r\nllm_chain = LLMChain(prompt=prompt, llm=llm)\r\nquestion = \"What NFL team won the Super Bowl in the year Justin Bieber was born?\"\r\n\r\nllm_chain.run(question)\r\n```\r\n\r\nand this is the error I get\r\n\r\n```\r\nException ignored in: <function Model.__del__ at 0x2aaaed28aa60>\r\nTraceback (most recent call last):\r\n  File \"/home/traney/.conda/envs/openai/lib/python3.9/site-packages/pyllamacpp/model.py\", line 402, in __del__\r\n    if self._ctx:\r\nAttributeError: 'GPT4All' object has no attribute '_ctx'\r\nException ignored in: <function Model.__del__ at 0x2aaaed28aa60>\r\nTraceback (most recent call last):\r\n  File \"/home/traney/.conda/envs/openai/lib/python3.9/site-packages/pyllamacpp/model.py\", line 402, in __del__\r\n    if self._ctx:\r\nAttributeError: 'GPT4All' object has no attribute '_ctx'\r\n---------------------------------------------------------------------------\r\nValidationError                           Traceback (most recent call last)\r\nCell In[31], line 11\r\n      9 callbacks = [StreamingStdOutCallbackHandler()]\r\n     10 # Verbose is required to pass to the callback manager\r\n---> 11 llm = GPT4All(model=local_path, callbacks=callbacks, verbose=True)\r\n     12 # If you want to use a custom model add the backend parameter\r\n     13 # Check https://docs.gpt4all.io/gpt4all_python.html for supported backends\r\n     14 llm = GPT4All(model=local_path, backend='gptj', callbacks=callbacks, verbose=True)\r\n\r\nFile ~/.conda/envs/openai/lib/python3.9/site-packages/pydantic/main.py:341, in pydantic.main.BaseModel.__init__()\r\n\r\nValidationError: 1 validation error for GPT4All\r\n__root__\r\n  __init__() got an unexpected keyword argument 'n_parts' (type=type_error)\r\n```\r\nI installed all relevant packages and checked the previous reports for these issues but I just get different errors from not being able to find the model, to validation error to GPT4All not existing. Is there any new things I have to do to implement GPT4All on langchain?\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nFollow code above in Jupyter Notebook\r\n\r\n### Expected behavior\r\n\r\nthe chat model should answer the question",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6101/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6101/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6100",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6100/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6100/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6100/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6100",
        "id": 1755357859,
        "node_id": "PR_kwDOIPDwls5S6Z5K",
        "number": 6100,
        "title": "convert tools to openai",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-13T17:28:40Z",
        "updated_at": "2023-06-13T17:40:50Z",
        "closed_at": "2023-06-13T17:40:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6100",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6100",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6100.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6100.patch",
            "merged_at": "2023-06-13T17:40:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6100/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6100/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6099",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6099/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6099/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6099/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6099",
        "id": 1755353986,
        "node_id": "PR_kwDOIPDwls5S6ZD1",
        "number": 6099,
        "title": "support functions",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-13T17:25:57Z",
        "updated_at": "2023-06-13T17:32:59Z",
        "closed_at": "2023-06-13T17:32:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6099",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6099",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6099.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6099.patch",
            "merged_at": "2023-06-13T17:32:58Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6099/reactions",
            "total_count": 8,
            "+1": 8,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6099/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6098",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6098/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6098/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6098/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6098",
        "id": 1755327431,
        "node_id": "I_kwDOIPDwls5ooCvH",
        "number": 6098,
        "title": "This new feature return_intermediate_steps=True is not working as intended, can you please update",
        "user": {
            "login": "sarath-nalluri",
            "id": 72062105,
            "node_id": "MDQ6VXNlcjcyMDYyMTA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/72062105?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarath-nalluri",
            "html_url": "https://github.com/sarath-nalluri",
            "followers_url": "https://api.github.com/users/sarath-nalluri/followers",
            "following_url": "https://api.github.com/users/sarath-nalluri/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarath-nalluri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarath-nalluri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarath-nalluri/subscriptions",
            "organizations_url": "https://api.github.com/users/sarath-nalluri/orgs",
            "repos_url": "https://api.github.com/users/sarath-nalluri/repos",
            "events_url": "https://api.github.com/users/sarath-nalluri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarath-nalluri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-13T17:05:24Z",
        "updated_at": "2023-06-14T05:59:32Z",
        "closed_at": "2023-06-14T05:59:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "https://github.com/hwchase17/langchain/blame/ee3d0513addae0680a30afa384431a032244e76b/langchain/chains/graph_qa/cypher.py#L40\r\n\r\n@tomasonjo This new feature **return_intermediate_steps=True** is not working as intended, can you please update\r\n\r\nThere is some issue in line number 258 of \"langchain\\chains\\base.py\"\r\n **return self(args[0], callbacks=callbacks)[self.output_keys[0]]** \r\nthe above line always makes it to return only the result and not the intermediate steps.\r\n\r\nAs a temporary solution I modified line no: 130 of \"langchain\\chains\\graph_qa\\cypher.py\" to return **{\"result\":chain_result}** which works.\r\n\r\nThanks in advance!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6098/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6098/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6097",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6097/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6097/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6097/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6097",
        "id": 1755322847,
        "node_id": "I_kwDOIPDwls5ooBnf",
        "number": 6097,
        "title": "OpenAI Cost calculation could have a bug!",
        "user": {
            "login": "medram",
            "id": 24493753,
            "node_id": "MDQ6VXNlcjI0NDkzNzUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24493753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/medram",
            "html_url": "https://github.com/medram",
            "followers_url": "https://api.github.com/users/medram/followers",
            "following_url": "https://api.github.com/users/medram/following{/other_user}",
            "gists_url": "https://api.github.com/users/medram/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/medram/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/medram/subscriptions",
            "organizations_url": "https://api.github.com/users/medram/orgs",
            "repos_url": "https://api.github.com/users/medram/repos",
            "events_url": "https://api.github.com/users/medram/events{/privacy}",
            "received_events_url": "https://api.github.com/users/medram/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-13T17:02:34Z",
        "updated_at": "2023-09-19T16:08:11Z",
        "closed_at": "2023-09-19T16:08:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nI've run a prompt that said `1 + 1 = ?` with my agent, I've used `get_openai_callback` to show some metric (see the image):\r\n\r\n![test](https://i.imgur.com/YS2pBh7.png)\r\n\r\nUsed LLM model is `GPT-3.5-turbo`\r\n\r\nOn OpenAI website we have for `GPT-3.5-turbo` model a  `0.002/1k tokens`, that means my test/prompt should cost:\r\n2206 \u00f7 1000 x 0.002 = 0.004412\r\n\r\nThe weird thing based on my test is the cost, it shows `$0.04412`  and not `$0.004412`\r\n\r\nIt could be a bug, Any ideas?\r\n\r\nHere is the code:\r\n```python\r\nwith get_openai_callback() as cb:\r\n    response = agent.run(prompt)\r\n\r\n    # Show OpenAI Cost\r\n    print(f\"Total Tokens: {cb.total_tokens}\")\r\n    print(f\"Prompt Tokens: {cb.prompt_tokens}\")\r\n    print(f\"Completion Tokens: {cb.completion_tokens}\")\r\n    print(f\"Total Cost (USD): ${cb.total_cost}\")\r\n```\r\n\r\nCan anyone please explain what's going on?\r\nThanks in advance.\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [X] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n@agola11\r\n@hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6097/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6097/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6096",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6096/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6096/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6096/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6096",
        "id": 1755240397,
        "node_id": "I_kwDOIPDwls5ontfN",
        "number": 6096,
        "title": "A change in the output format of documents loaded with CSVLoader: (+ weird redundancy in the output)",
        "user": {
            "login": "mohamedjihedriahi",
            "id": 73398782,
            "node_id": "MDQ6VXNlcjczMzk4Nzgy",
            "avatar_url": "https://avatars.githubusercontent.com/u/73398782?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mohamedjihedriahi",
            "html_url": "https://github.com/mohamedjihedriahi",
            "followers_url": "https://api.github.com/users/mohamedjihedriahi/followers",
            "following_url": "https://api.github.com/users/mohamedjihedriahi/following{/other_user}",
            "gists_url": "https://api.github.com/users/mohamedjihedriahi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mohamedjihedriahi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mohamedjihedriahi/subscriptions",
            "organizations_url": "https://api.github.com/users/mohamedjihedriahi/orgs",
            "repos_url": "https://api.github.com/users/mohamedjihedriahi/repos",
            "events_url": "https://api.github.com/users/mohamedjihedriahi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mohamedjihedriahi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-13T16:08:21Z",
        "updated_at": "2023-09-26T16:05:53Z",
        "closed_at": "2023-09-26T16:05:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nfrom this format (example):\r\n[Document(page_content='Team: **Athletics**'', metadata={'source': '**my source1**', 'row': **0**}, lookup_index=0), Document(page_content='Team: **Rangers**', lookup_str='', metadata={'source': '**my source2**', 'row': **1**}, lookup_index=0), \r\nDocument(page_content='Team: **Yankees**', lookup_str='', metadata={'source': '**my source3**', 'row': **2**},lookup_index=0)]\r\n\r\nTo this:\r\n[Document(**lc_kwargs**={page_content='Team: **Athletics**'', metadata={'source': '**my source1**', 'row': **0**}, lookup_index=0),\r\npage_content='Team: **Athletics**'', metadata={'source': '**my source1**', 'row': **0**}, lookup_index=0),\r\n\r\nDocument(**lc_kwargs**={page_content='Team: **Rangers**', lookup_str='', metadata={'source': '**my source2**', 'row': **1**}, lookup_index=0),page_content='Team: **Rangers**', lookup_str='', metadata={'source': '**my source2**', 'row': **1**}, lookup_index=0), \r\n\r\nDocument(**lc_kwargs**={page_content='Team: **Yankees**', lookup_str='', metadata={'source': '**my source3**', 'row': **2**},lookup_index=0),\r\npage_content='Team: **Yankees**', lookup_str='', metadata={'source': '**my source3**', 'row': **2**},lookup_index=0)]\r\n\r\n\r\n### Who can help?\r\n\r\n@hwchase17 @eyurtsev\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [X] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nCheck out my colab notebook for better understanding:\r\nhttps://colab.research.google.com/drive/1w8ZTAkapRev8KHI9w4IAk37T9GfFGWW2?usp=drive_link#scrollTo=tl502z9-RRJC\r\n\r\n### Expected behavior\r\n\r\nexpected output (as you can see in the official doc: [https://python.langchain.com/en/latest/modules/indexes/document_loaders/examples/csv.html] ) : \r\n\r\n[Document(page_content='Team: Nationals\\n\"Payroll (millions)\": 81.34\\n\"Wins\": 98', lookup_str='', metadata={'source': './example_data/mlb_teams_2012.csv', 'row': 0}, lookup_index=0), \r\nDocument(page_content='Team: Reds\\n\"Payroll (millions)\": 82.20\\n\"Wins\": 97', lookup_str='', metadata={'source': './example_data/mlb_teams_2012.csv', 'row': 1}, lookup_index=0)]",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6096/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6096/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6095",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6095/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6095/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6095/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6095",
        "id": 1755210307,
        "node_id": "PR_kwDOIPDwls5S55dR",
        "number": 6095,
        "title": "Run event handler inline if it's not an async function",
        "user": {
            "login": "mariokostelac",
            "id": 1917451,
            "node_id": "MDQ6VXNlcjE5MTc0NTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1917451?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mariokostelac",
            "html_url": "https://github.com/mariokostelac",
            "followers_url": "https://api.github.com/users/mariokostelac/followers",
            "following_url": "https://api.github.com/users/mariokostelac/following{/other_user}",
            "gists_url": "https://api.github.com/users/mariokostelac/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mariokostelac/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mariokostelac/subscriptions",
            "organizations_url": "https://api.github.com/users/mariokostelac/orgs",
            "repos_url": "https://api.github.com/users/mariokostelac/repos",
            "events_url": "https://api.github.com/users/mariokostelac/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mariokostelac/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "agola11",
                "id": 9536492,
                "node_id": "MDQ6VXNlcjk1MzY0OTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/agola11",
                "html_url": "https://github.com/agola11",
                "followers_url": "https://api.github.com/users/agola11/followers",
                "following_url": "https://api.github.com/users/agola11/following{/other_user}",
                "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
                "organizations_url": "https://api.github.com/users/agola11/orgs",
                "repos_url": "https://api.github.com/users/agola11/repos",
                "events_url": "https://api.github.com/users/agola11/events{/privacy}",
                "received_events_url": "https://api.github.com/users/agola11/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-13T15:54:52Z",
        "updated_at": "2023-06-19T14:20:41Z",
        "closed_at": "2023-06-19T14:20:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6095",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6095",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6095.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6095.patch",
            "merged_at": null
        },
        "body": "When we try to run a callback as part of an async call, we can potentially get an async function.\r\n- If that's the case, we should call await on it to make sure it's finished before we move on. \r\n- If it's not an async function, is a plain old function, and we should just call it.\r\n\r\nThis makes the setup slightly cleaner because it's not creating a new context several times for one callback.\r\n\r\n@hwchase17, @agola11. Twitter username is @mariokostelac.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6095/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6095/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6094",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6094/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6094/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6094/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6094",
        "id": 1755115718,
        "node_id": "PR_kwDOIPDwls5S5kbk",
        "number": 6094,
        "title": "Firestore supported matchingengine",
        "user": {
            "login": "Majidbadal",
            "id": 114956600,
            "node_id": "U_kgDOBtoZOA",
            "avatar_url": "https://avatars.githubusercontent.com/u/114956600?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Majidbadal",
            "html_url": "https://github.com/Majidbadal",
            "followers_url": "https://api.github.com/users/Majidbadal/followers",
            "following_url": "https://api.github.com/users/Majidbadal/following{/other_user}",
            "gists_url": "https://api.github.com/users/Majidbadal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Majidbadal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Majidbadal/subscriptions",
            "organizations_url": "https://api.github.com/users/Majidbadal/orgs",
            "repos_url": "https://api.github.com/users/Majidbadal/repos",
            "events_url": "https://api.github.com/users/Majidbadal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Majidbadal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-13T15:08:52Z",
        "updated_at": "2023-09-15T15:30:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6094",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6094",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6094.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6094.patch",
            "merged_at": null
        },
        "body": "\r\n\r\nSo far the matching engine vector store module only supported GCS as backend storage. I have added support for firestore as it is a nicer option for document storage. The corresponding matching engine notebook example is adjusted accordingly.\r\n\r\n\r\n\r\n#### Who can review?\r\nTag maintainers/contributors who might be interested:\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6094/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6094/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6093",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6093/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6093/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6093/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6093",
        "id": 1754944305,
        "node_id": "PR_kwDOIPDwls5S4-lf",
        "number": 6093,
        "title": "Fix little typo in summarize.ipynb",
        "user": {
            "login": "Quentinchampenois",
            "id": 26109239,
            "node_id": "MDQ6VXNlcjI2MTA5MjM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/26109239?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Quentinchampenois",
            "html_url": "https://github.com/Quentinchampenois",
            "followers_url": "https://api.github.com/users/Quentinchampenois/followers",
            "following_url": "https://api.github.com/users/Quentinchampenois/following{/other_user}",
            "gists_url": "https://api.github.com/users/Quentinchampenois/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Quentinchampenois/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Quentinchampenois/subscriptions",
            "organizations_url": "https://api.github.com/users/Quentinchampenois/orgs",
            "repos_url": "https://api.github.com/users/Quentinchampenois/repos",
            "events_url": "https://api.github.com/users/Quentinchampenois/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Quentinchampenois/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-13T13:49:47Z",
        "updated_at": "2023-06-17T18:07:08Z",
        "closed_at": "2023-06-17T18:07:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6093",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6093",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6093.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6093.patch",
            "merged_at": null
        },
        "body": "#### Description \r\n\r\nHello, I found a little typo while reading your documentation. This PR is just fixing a typo in the documentation at `Chains > How-To guides > Summarization`.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6093/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6093/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6092",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6092/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6092/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6092/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6092",
        "id": 1754787976,
        "node_id": "I_kwDOIPDwls5ol_CI",
        "number": 6092,
        "title": "when comparison.value is int the \"valueText\" should change to \"valueInt\"",
        "user": {
            "login": "lw3259111",
            "id": 12690488,
            "node_id": "MDQ6VXNlcjEyNjkwNDg4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12690488?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lw3259111",
            "html_url": "https://github.com/lw3259111",
            "followers_url": "https://api.github.com/users/lw3259111/followers",
            "following_url": "https://api.github.com/users/lw3259111/following{/other_user}",
            "gists_url": "https://api.github.com/users/lw3259111/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lw3259111/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lw3259111/subscriptions",
            "organizations_url": "https://api.github.com/users/lw3259111/orgs",
            "repos_url": "https://api.github.com/users/lw3259111/repos",
            "events_url": "https://api.github.com/users/lw3259111/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lw3259111/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-13T12:36:27Z",
        "updated_at": "2023-09-19T16:08:03Z",
        "closed_at": "2023-09-19T16:08:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nwhen comparison.value is int the \"valueText\" should change to \"valueInt\"\n\n### Motivation\n\nwhen comparison.value is int the \"valueText\" should change to \"valueInt\"\n\n### Your contribution\n\nself_query.weaviate\r\n```python\r\n  def visit_comparison(self, comparison: Comparison) -> Dict:\r\n    if isinstance(comparison.value,(int,float)):\r\n        return {\r\n          \"path\": [comparison.attribute],\r\n          \"operator\": self._format_func(comparison.comparator),\r\n          \"valueInt\": comparison.value,\r\n      }\r\n    else:\r\n        return {\r\n          \"path\": [comparison.attribute],\r\n          \"operator\": self._format_func(comparison.comparator),\r\n          \"valueText\": comparison.value,\r\n      }\r\n``\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6092/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6092/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6091",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6091/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6091/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6091/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6091",
        "id": 1754597112,
        "node_id": "I_kwDOIPDwls5olQb4",
        "number": 6091,
        "title": "'ValueError: \"SQLiteEntityStore\" object has no field \"conn\"' error for tutorial \"Entity Memory with SQLite storage\"",
        "user": {
            "login": "labdmitriy",
            "id": 9625027,
            "node_id": "MDQ6VXNlcjk2MjUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9625027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/labdmitriy",
            "html_url": "https://github.com/labdmitriy",
            "followers_url": "https://api.github.com/users/labdmitriy/followers",
            "following_url": "https://api.github.com/users/labdmitriy/following{/other_user}",
            "gists_url": "https://api.github.com/users/labdmitriy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/labdmitriy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/labdmitriy/subscriptions",
            "organizations_url": "https://api.github.com/users/labdmitriy/orgs",
            "repos_url": "https://api.github.com/users/labdmitriy/repos",
            "events_url": "https://api.github.com/users/labdmitriy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/labdmitriy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-13T10:50:00Z",
        "updated_at": "2023-10-27T10:08:13Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangChain version: 0.0.198\r\nPlatform: Ubuntu 20.04 LTS\r\nPython version: 3.10.4\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Reproduce tutorial [\"Entity Memory with SQLite storage\"](https://python.langchain.com/en/latest/modules/memory/examples/entity_memory_with_sqlite.html)\r\n2. While executing the following code: ```entity_store = SQLiteEntityStore()```,\r\nget the error: ValueError: \"SQLiteEntityStore\" object has no field \"conn\"\n\n### Expected behavior\n\nSQLiteEntityStore() must be executed correctly.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6091/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6091/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6090",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6090/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6090/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6090/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6090",
        "id": 1754499202,
        "node_id": "I_kwDOIPDwls5ok4iC",
        "number": 6090,
        "title": "Non English Language Support in GoogleSearchAPIWrapper",
        "user": {
            "login": "gautamm20",
            "id": 10697239,
            "node_id": "MDQ6VXNlcjEwNjk3MjM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/10697239?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gautamm20",
            "html_url": "https://github.com/gautamm20",
            "followers_url": "https://api.github.com/users/gautamm20/followers",
            "following_url": "https://api.github.com/users/gautamm20/following{/other_user}",
            "gists_url": "https://api.github.com/users/gautamm20/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gautamm20/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gautamm20/subscriptions",
            "organizations_url": "https://api.github.com/users/gautamm20/orgs",
            "repos_url": "https://api.github.com/users/gautamm20/repos",
            "events_url": "https://api.github.com/users/gautamm20/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gautamm20/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-13T09:55:50Z",
        "updated_at": "2023-09-20T16:08:20Z",
        "closed_at": "2023-09-20T16:08:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWhile, I could pass gl and hl parameters in SerperAPI, one cannot do it for the GoogleSearchAPIWrapper even though the CSE API supports it. \n\n### Motivation\n\nThis should be a priority addition to make the library more inclusive. I have tried passing it with serper and it does a great job at language likes German, Hindi, French, Spanish.\n\n### Your contribution\n\nI tried to see the base utility, but couldn't figure out a way to add the gl, hl parameters in the base utility file.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6090/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6090/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6089",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6089/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6089/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6089/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6089",
        "id": 1754479687,
        "node_id": "PR_kwDOIPDwls5S3Xd0",
        "number": 6089,
        "title": "Guardrails output parser: Pass LLM api for reasking",
        "user": {
            "login": "irgolic",
            "id": 24586651,
            "node_id": "MDQ6VXNlcjI0NTg2NjUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/24586651?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/irgolic",
            "html_url": "https://github.com/irgolic",
            "followers_url": "https://api.github.com/users/irgolic/followers",
            "following_url": "https://api.github.com/users/irgolic/following{/other_user}",
            "gists_url": "https://api.github.com/users/irgolic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/irgolic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/irgolic/subscriptions",
            "organizations_url": "https://api.github.com/users/irgolic/orgs",
            "repos_url": "https://api.github.com/users/irgolic/repos",
            "events_url": "https://api.github.com/users/irgolic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/irgolic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-13T09:45:35Z",
        "updated_at": "2023-06-18T17:50:21Z",
        "closed_at": "2023-06-18T17:50:21Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6089",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6089",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6089.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6089.patch",
            "merged_at": "2023-06-18T17:50:21Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes https://github.com/ShreyaR/guardrails/issues/155 \r\n\r\nEnables guardrails reasking by specifying an LLM api in the output parser.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6089/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6089/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6088",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6088/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6088/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6088/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6088",
        "id": 1754472871,
        "node_id": "I_kwDOIPDwls5okyGn",
        "number": 6088,
        "title": "Issue: If DynamoDB table does not exist conversation message history fails with \"local variable 'response' referenced before assignment\"",
        "user": {
            "login": "RyanFrench",
            "id": 979780,
            "node_id": "MDQ6VXNlcjk3OTc4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/979780?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RyanFrench",
            "html_url": "https://github.com/RyanFrench",
            "followers_url": "https://api.github.com/users/RyanFrench/followers",
            "following_url": "https://api.github.com/users/RyanFrench/following{/other_user}",
            "gists_url": "https://api.github.com/users/RyanFrench/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RyanFrench/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RyanFrench/subscriptions",
            "organizations_url": "https://api.github.com/users/RyanFrench/orgs",
            "repos_url": "https://api.github.com/users/RyanFrench/repos",
            "events_url": "https://api.github.com/users/RyanFrench/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RyanFrench/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-13T09:41:41Z",
        "updated_at": "2023-06-19T00:39:20Z",
        "closed_at": "2023-06-19T00:39:20Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nIf the dyanamodb table does not exist when retrieving conversation history then a generic \"local variable 'response' referenced before assignment\" error is returned. This is due to the exception handling at https://github.com/hwchase17/langchain/blob/master/langchain/memory/chat_message_histories/dynamodb.py#L50 does not determine if the table does not exist\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. Create a dynamodb chat message history, initialised with a DynamoDB table name that doesn't exist\r\n2. Interact with the message history\r\n\r\n### Expected behavior\r\n\r\nAn error should be logged stating that the dynamodb table was not found",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6088/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6088/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6087",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6087/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6087/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6087/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6087",
        "id": 1754459647,
        "node_id": "I_kwDOIPDwls5oku3_",
        "number": 6087,
        "title": "Conversational Retriever Chain - condense_question_prompt parameter is not being considered.",
        "user": {
            "login": "varuntejay",
            "id": 16127730,
            "node_id": "MDQ6VXNlcjE2MTI3NzMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/16127730?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/varuntejay",
            "html_url": "https://github.com/varuntejay",
            "followers_url": "https://api.github.com/users/varuntejay/followers",
            "following_url": "https://api.github.com/users/varuntejay/following{/other_user}",
            "gists_url": "https://api.github.com/users/varuntejay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/varuntejay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/varuntejay/subscriptions",
            "organizations_url": "https://api.github.com/users/varuntejay/orgs",
            "repos_url": "https://api.github.com/users/varuntejay/repos",
            "events_url": "https://api.github.com/users/varuntejay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/varuntejay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-13T09:35:40Z",
        "updated_at": "2023-09-22T16:08:04Z",
        "closed_at": "2023-09-22T16:08:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.198,\r\nPython 3.10\r\nAWS Sagemaker environment\n\n### Who can help?\n\n@agola11, @hwchase17\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n`from langchain.chains import ConversationalRetrievalChain\r\nimport json\r\nfrom langchain.prompts.prompt import PromptTemplate\r\nprompt_template =  \"\"\"Answer based on context\r\n\r\nContext: {context}\r\n\r\nQuestion: {question}\"\"\"\r\nTEST_PROMPT = PromptTemplate(\r\n    template=prompt_template, input_variables=[\"context\", \"question\"]\r\n)\r\n\r\nquestion = 'How do I bake cake?'\r\n\r\nchain = ConversationalRetrievalChain.from_llm(llm=llm, condense_question_prompt=TEST_PROMPT, retriever=retriever, return_source_documents=True, verbose=True)\r\nchat_history = []\r\n\r\nchain({ \"chat_history\": chat_history, \"question\": question})\r\n\r\n`\n\n### Expected behavior\n\nExpected behavior is that it should take the given TEST_PROMPT, while sending the PROMPT to LLM, which is not doing in the original behavior",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6087/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6087/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6086",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6086/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6086/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6086/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6086",
        "id": 1754453579,
        "node_id": "PR_kwDOIPDwls5S3Ru5",
        "number": 6086,
        "title": "Improve AnalyticDB Vector Store implementation without affecting user ",
        "user": {
            "login": "wangxuqi",
            "id": 13748374,
            "node_id": "MDQ6VXNlcjEzNzQ4Mzc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13748374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wangxuqi",
            "html_url": "https://github.com/wangxuqi",
            "followers_url": "https://api.github.com/users/wangxuqi/followers",
            "following_url": "https://api.github.com/users/wangxuqi/following{/other_user}",
            "gists_url": "https://api.github.com/users/wangxuqi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wangxuqi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wangxuqi/subscriptions",
            "organizations_url": "https://api.github.com/users/wangxuqi/orgs",
            "repos_url": "https://api.github.com/users/wangxuqi/repos",
            "events_url": "https://api.github.com/users/wangxuqi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wangxuqi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-13T09:32:35Z",
        "updated_at": "2023-06-17T16:36:32Z",
        "closed_at": "2023-06-17T16:36:31Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6086",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6086",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6086.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6086.patch",
            "merged_at": "2023-06-17T16:36:31Z"
        },
        "body": "Hi there:\r\n\r\nAs I implement the AnalyticDB VectorStore use two table to store the document before. It seems just use one table is a better way. So this commit is try to improve AnalyticDB VectorStore implementation without affecting user behavior:\r\n\r\n**1. Streamline the `post_init `behavior by creating a single table with vector indexing.\r\n2. Update the `add_texts` API for document insertion.\r\n3. Optimize `similarity_search_with_score_by_vector` to retrieve results directly from the table.\r\n4. Implement `_similarity_search_with_relevance_scores`.\r\n5. Add `embedding_dimension` parameter to support different dimension embedding functions.**\r\n\r\nUsers can continue using the API as before. \r\nTest cases added before is enough to meet this commit.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6086/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6086/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6085",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6085/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6085/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6085/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6085",
        "id": 1754450599,
        "node_id": "I_kwDOIPDwls5oksqn",
        "number": 6085,
        "title": "Issue: <search tool only uses its snippets to answer the question, that is not sufficient>",
        "user": {
            "login": "samantha0-ops",
            "id": 44936161,
            "node_id": "MDQ6VXNlcjQ0OTM2MTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/44936161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/samantha0-ops",
            "html_url": "https://github.com/samantha0-ops",
            "followers_url": "https://api.github.com/users/samantha0-ops/followers",
            "following_url": "https://api.github.com/users/samantha0-ops/following{/other_user}",
            "gists_url": "https://api.github.com/users/samantha0-ops/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/samantha0-ops/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/samantha0-ops/subscriptions",
            "organizations_url": "https://api.github.com/users/samantha0-ops/orgs",
            "repos_url": "https://api.github.com/users/samantha0-ops/repos",
            "events_url": "https://api.github.com/users/samantha0-ops/events{/privacy}",
            "received_events_url": "https://api.github.com/users/samantha0-ops/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-13T09:31:24Z",
        "updated_at": "2023-07-17T10:25:04Z",
        "closed_at": "2023-07-17T10:25:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### search tool only uses its snippets to answer the question, that is not sufficient\r\n\r\nI found that when calling search tools like 'bing search', 'google search' in an agent, these original api simply returns several urls and their snippets(main topic of the whole webpage). \r\nHowever, LangChain directly use these snippets to answer the question, like in bing search:\r\n```python\r\ndef run(self, query: str) -> str:\r\n        \"\"\"Run query through BingSearch and parse result.\"\"\"\r\n        snippets = []\r\n        results = self._bing_search_results(query, count=self.k)\r\n        if len(results) == 0:\r\n            return \"No good Bing Search Result was found\"\r\n        for result in results:\r\n            snippets.append(result[\"snippet\"])\r\n\r\n        return \" \".join(snippets)\r\n```\r\nThis concise message passed to the large language model is not sufficient to answer detailed questions, thus leading to bad answers.\r\nDoes anyone has a solution to this?\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6085/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6085/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6084",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6084/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6084/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6084/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6084",
        "id": 1754435752,
        "node_id": "I_kwDOIPDwls5okpCo",
        "number": 6084,
        "title": "Weird: Same prompt works with LLMChain but not with load_qa_with_sources Chain",
        "user": {
            "login": "LaxmanSinghTomar",
            "id": 37807897,
            "node_id": "MDQ6VXNlcjM3ODA3ODk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/37807897?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LaxmanSinghTomar",
            "html_url": "https://github.com/LaxmanSinghTomar",
            "followers_url": "https://api.github.com/users/LaxmanSinghTomar/followers",
            "following_url": "https://api.github.com/users/LaxmanSinghTomar/following{/other_user}",
            "gists_url": "https://api.github.com/users/LaxmanSinghTomar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LaxmanSinghTomar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LaxmanSinghTomar/subscriptions",
            "organizations_url": "https://api.github.com/users/LaxmanSinghTomar/orgs",
            "repos_url": "https://api.github.com/users/LaxmanSinghTomar/repos",
            "events_url": "https://api.github.com/users/LaxmanSinghTomar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LaxmanSinghTomar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-13T09:24:12Z",
        "updated_at": "2023-09-19T16:08:19Z",
        "closed_at": "2023-09-19T16:08:18Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nCustom Prompt formatted and used by `load_qa_with_sources` chain is not giving the answer and saying \"Sorry, I am unable to answer\" (message to be given in the prompt) but the same prompt when used with simple `LLMChain` or `LLM` directly gives back the expected answer.\r\n\r\n1) custom prompt + retrieved documents provided to `load_qa_with_sources` (stuff) chain:\r\n![Screenshot from 2023-06-13 10-22-04](https://github.com/hwchase17/langchain/assets/37807897/ba21feed-1207-4e22-86b1-733d107d6ca7)\r\n\r\n2) Same prompt when used directly with `LLMChain`:\r\n![Screenshot from 2023-06-13 10-21-48](https://github.com/hwchase17/langchain/assets/37807897/897de305-db29-4e09-b623-520d3095979b)\r\n\r\nWhy the same prompt is causing two different results if the underlying LLM is the same?\n\n### Suggestion:\n\nFollowing are the versions of the packages used for testing purposes:\r\n\r\n- OpenAI: 0.27.8 and 0.27.2\r\n- LangChain: 0.0.198 and 0.0.142",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6084/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6084/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6083",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6083/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6083/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6083/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6083",
        "id": 1754411684,
        "node_id": "I_kwDOIPDwls5okjKk",
        "number": 6083,
        "title": "\"Error in on_chain_start callback: 'name'\" warning for tutorial \"How to add Memory to an LLMChain\"",
        "user": {
            "login": "labdmitriy",
            "id": 9625027,
            "node_id": "MDQ6VXNlcjk2MjUwMjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9625027?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/labdmitriy",
            "html_url": "https://github.com/labdmitriy",
            "followers_url": "https://api.github.com/users/labdmitriy/followers",
            "following_url": "https://api.github.com/users/labdmitriy/following{/other_user}",
            "gists_url": "https://api.github.com/users/labdmitriy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/labdmitriy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/labdmitriy/subscriptions",
            "organizations_url": "https://api.github.com/users/labdmitriy/orgs",
            "repos_url": "https://api.github.com/users/labdmitriy/repos",
            "events_url": "https://api.github.com/users/labdmitriy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/labdmitriy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-06-13T09:12:55Z",
        "updated_at": "2023-06-29T15:34:59Z",
        "closed_at": "2023-06-15T20:01:42Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangChain version: 0.0.198\r\nPlatform: Ubuntu 20.04 LTS\r\nPython version: 3.10.4\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n1. Reproduce tutorial [How to add Memory to an LLMChain](https://python.langchain.com/en/latest/modules/memory/examples/adding_memory.html)\r\n2. Get the same warning for each invocation of llm_chain.predict():\r\n```Error in on_chain_start callback: 'name'```\r\n3. The same warning will be for the following different configurations (only difference from original code is specified):\r\n3.1.```llm = ChatOpenAI(temperature=0)```\r\n3.2 ```chain = ConversationChain(\r\n    memory=memory,\r\n    verbose=True,\r\n    prompt=prompt_template,\r\n    llm=llm,\r\n    input_key='human_input'\r\n)```\r\n3.3 ```memory = ConversationBufferMemory(memory_key='chat_history', return_messages=True)```\r\n\r\n### Expected behavior\r\n\r\nThere will be no such warnings (or the actions which resolved it must be specified in warning and/or in documentation).",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6083/reactions",
            "total_count": 10,
            "+1": 10,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6083/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6082",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6082/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6082/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6082/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6082",
        "id": 1754224763,
        "node_id": "I_kwDOIPDwls5oj1h7",
        "number": 6082,
        "title": "Enhancement: Multiple calls of MapReduceDocumentsChain should run asynchronously",
        "user": {
            "login": "TomTom101",
            "id": 872712,
            "node_id": "MDQ6VXNlcjg3MjcxMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/872712?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TomTom101",
            "html_url": "https://github.com/TomTom101",
            "followers_url": "https://api.github.com/users/TomTom101/followers",
            "following_url": "https://api.github.com/users/TomTom101/following{/other_user}",
            "gists_url": "https://api.github.com/users/TomTom101/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TomTom101/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TomTom101/subscriptions",
            "organizations_url": "https://api.github.com/users/TomTom101/orgs",
            "repos_url": "https://api.github.com/users/TomTom101/repos",
            "events_url": "https://api.github.com/users/TomTom101/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TomTom101/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-13T07:28:16Z",
        "updated_at": "2023-07-06T07:30:03Z",
        "closed_at": "2023-06-23T19:21:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nWhen executing `arun()` of the `MapReduceDocumentsChain` multiple times in an async loop, the requests are not run concurrently. \r\n\r\nGiven the example: \r\n\r\n```python\r\nimport asyncio\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.chains.summarize import load_summarize_chain\r\nfrom langchain.schema import Document\r\n\r\nsummary_chain = load_summarize_chain(\r\n    OpenAI(temperature=0),\r\n    chain_type=\"map_reduce\",\r\n)\r\n\r\ndocs = [\r\n    Document(page_content=\"A doc\"),\r\n    Document(page_content=\"Another doc\"),\r\n]\r\n\r\ntasks = [\r\n    summary_chain.arun({\"input_documents\": docs}),\r\n    summary_chain.arun({\"input_documents\": docs})\r\n]\r\n\r\nawait asyncio.gather(*tasks)\r\n```\r\n\r\nWhile the mapping step is run asynchronously, the combine step is not. We can see that that the last two requests run sequentially:\r\n\r\n<img width=\"817\" alt=\"image\" src=\"https://github.com/hwchase17/langchain/assets/872712/0472a000-4eb2-43bd-8f97-2e66869c857c\">\r\n\r\nThis is due to the `async acombine()` method also calling the synchronous _process_results() method.\r\n\r\n```python\r\nasync def acombine_docs(\u2026):\r\n    \u2026\r\n    return self._process_results(...)\r\n\r\ndef _process_results(\u2026):\r\n    ...\r\n```\r\n\r\n\r\n\n\n### Suggestion:\n\n## How I can contribute\r\nWill provide a PR! \r\n\r\nThe fact that an redundant mapping call is made in case the `input_documents` array contains a single document, is addressed in https://github.com/hwchase17/langchain/pull/5942\r\n\r\n@agola11",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6082/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6082/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6081",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6081/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6081/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6081/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6081",
        "id": 1754083714,
        "node_id": "I_kwDOIPDwls5ojTGC",
        "number": 6081,
        "title": "For web page loaders",
        "user": {
            "login": "jackfrost1411",
            "id": 48760936,
            "node_id": "MDQ6VXNlcjQ4NzYwOTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/48760936?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jackfrost1411",
            "html_url": "https://github.com/jackfrost1411",
            "followers_url": "https://api.github.com/users/jackfrost1411/followers",
            "following_url": "https://api.github.com/users/jackfrost1411/following{/other_user}",
            "gists_url": "https://api.github.com/users/jackfrost1411/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jackfrost1411/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jackfrost1411/subscriptions",
            "organizations_url": "https://api.github.com/users/jackfrost1411/orgs",
            "repos_url": "https://api.github.com/users/jackfrost1411/repos",
            "events_url": "https://api.github.com/users/jackfrost1411/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jackfrost1411/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-13T05:45:49Z",
        "updated_at": "2023-09-12T16:17:01Z",
        "closed_at": "2023-09-12T16:17:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIt will be really cool if we can specify a website like : www.example.edu/* and it would get all the possible accessible pages from it and load it using WebBaseLoader.\n\n### Motivation\n\nI'm always frustrated when I have to make a list of websites and pass it in the loader. Instead, using this way we can query the loader and we can get all the relevant web pages. \n\n### Your contribution\n\nNot sure how I can contribute.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6081/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6081/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6080",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6080/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6080/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6080/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6080",
        "id": 1754080865,
        "node_id": "I_kwDOIPDwls5ojSZh",
        "number": 6080,
        "title": "Issue: HuggingFaceEmbeddings can not take trust_remote_code argument",
        "user": {
            "login": "jackfrost1411",
            "id": 48760936,
            "node_id": "MDQ6VXNlcjQ4NzYwOTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/48760936?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jackfrost1411",
            "html_url": "https://github.com/jackfrost1411",
            "followers_url": "https://api.github.com/users/jackfrost1411/followers",
            "following_url": "https://api.github.com/users/jackfrost1411/following{/other_user}",
            "gists_url": "https://api.github.com/users/jackfrost1411/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jackfrost1411/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jackfrost1411/subscriptions",
            "organizations_url": "https://api.github.com/users/jackfrost1411/orgs",
            "repos_url": "https://api.github.com/users/jackfrost1411/repos",
            "events_url": "https://api.github.com/users/jackfrost1411/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jackfrost1411/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-06-13T05:42:23Z",
        "updated_at": "2023-12-14T12:15:13Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### HuggingFaceEmbeddings can not take trust_remote_code argument \r\n\r\n![image](https://github.com/hwchase17/langchain/assets/48760936/5400f6ca-d06b-49f0-a889-68f4e8e41598)\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6080/reactions",
            "total_count": 4,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6080/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6079",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6079/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6079/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6079/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6079",
        "id": 1754079026,
        "node_id": "I_kwDOIPDwls5ojR8y",
        "number": 6079,
        "title": "Issue: Can't load a public webpage",
        "user": {
            "login": "jackfrost1411",
            "id": 48760936,
            "node_id": "MDQ6VXNlcjQ4NzYwOTM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/48760936?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jackfrost1411",
            "html_url": "https://github.com/jackfrost1411",
            "followers_url": "https://api.github.com/users/jackfrost1411/followers",
            "following_url": "https://api.github.com/users/jackfrost1411/following{/other_user}",
            "gists_url": "https://api.github.com/users/jackfrost1411/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jackfrost1411/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jackfrost1411/subscriptions",
            "organizations_url": "https://api.github.com/users/jackfrost1411/orgs",
            "repos_url": "https://api.github.com/users/jackfrost1411/repos",
            "events_url": "https://api.github.com/users/jackfrost1411/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jackfrost1411/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-13T05:40:52Z",
        "updated_at": "2023-06-17T18:10:50Z",
        "closed_at": "2023-06-17T18:10:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### I want to load in the webpage below.\r\n\r\nHi,\r\nTrying to extract some webpage using webbaseloader:\r\n\"\"\"\r\nloader = WebBaseLoader(\"https://researchadmin.asu.edu/)\r\ndata = loader.load()\r\n\"\"\"\r\nBut gives the following error:\r\nSSLError: HTTPSConnectionPool(host='researchadmin.asu.edu', port=443): Max retries exceeded with url: / (Caused by \r\nSSLError(SSLCertVerificationError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed: unable to get \r\nlocal issuer certificate (_ssl.c:1002)')))\r\n\r\nIt is a public web page. Can anyone help?\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6079/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6079/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6078",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6078/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6078/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6078/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6078",
        "id": 1754076568,
        "node_id": "PR_kwDOIPDwls5S2AIV",
        "number": 6078,
        "title": "turn off repr",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-13T05:38:07Z",
        "updated_at": "2023-06-13T05:45:25Z",
        "closed_at": "2023-06-13T05:45:25Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6078",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6078",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6078.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6078.patch",
            "merged_at": "2023-06-13T05:45:25Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6078/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6078/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6077",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6077/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6077/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6077/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6077",
        "id": 1754059636,
        "node_id": "PR_kwDOIPDwls5S18iu",
        "number": 6077,
        "title": "Fix for ModuleNotFoundError while running langchain-server. Issue #5833",
        "user": {
            "login": "solidate",
            "id": 22544002,
            "node_id": "MDQ6VXNlcjIyNTQ0MDAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/22544002?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/solidate",
            "html_url": "https://github.com/solidate",
            "followers_url": "https://api.github.com/users/solidate/followers",
            "following_url": "https://api.github.com/users/solidate/following{/other_user}",
            "gists_url": "https://api.github.com/users/solidate/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/solidate/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/solidate/subscriptions",
            "organizations_url": "https://api.github.com/users/solidate/orgs",
            "repos_url": "https://api.github.com/users/solidate/repos",
            "events_url": "https://api.github.com/users/solidate/events{/privacy}",
            "received_events_url": "https://api.github.com/users/solidate/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-13T05:19:29Z",
        "updated_at": "2023-06-13T15:37:08Z",
        "closed_at": "2023-06-13T15:37:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6077",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6077",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6077.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6077.patch",
            "merged_at": "2023-06-13T15:37:07Z"
        },
        "body": "This PR fixes the error\r\n`ModuleNotFoundError: No module named 'langchain.cli'`\r\nFixes https://github.com/hwchase17/langchain/issues/5833 (issue)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6077/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6077/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6076",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6076/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6076/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6076/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6076",
        "id": 1754058356,
        "node_id": "PR_kwDOIPDwls5S18RX",
        "number": 6076,
        "title": "propogate kwargs fully",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-13T05:18:03Z",
        "updated_at": "2023-06-13T05:37:56Z",
        "closed_at": "2023-06-13T05:37:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6076",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6076",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6076.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6076.patch",
            "merged_at": "2023-06-13T05:37:56Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6076/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6076/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6075",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6075/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6075/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6075/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6075",
        "id": 1753945024,
        "node_id": "I_kwDOIPDwls5oixPA",
        "number": 6075,
        "title": "unknown command `MODULE`, with args beginning with: `LIST`, ",
        "user": {
            "login": "denisa-ms",
            "id": 123076110,
            "node_id": "U_kgDOB1X-Dg",
            "avatar_url": "https://avatars.githubusercontent.com/u/123076110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/denisa-ms",
            "html_url": "https://github.com/denisa-ms",
            "followers_url": "https://api.github.com/users/denisa-ms/followers",
            "following_url": "https://api.github.com/users/denisa-ms/following{/other_user}",
            "gists_url": "https://api.github.com/users/denisa-ms/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/denisa-ms/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/denisa-ms/subscriptions",
            "organizations_url": "https://api.github.com/users/denisa-ms/orgs",
            "repos_url": "https://api.github.com/users/denisa-ms/repos",
            "events_url": "https://api.github.com/users/denisa-ms/events{/privacy}",
            "received_events_url": "https://api.github.com/users/denisa-ms/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5774514459,
                "node_id": "LA_kwDOIPDwls8AAAABWDAZGw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/stale",
                "name": "stale",
                "color": "dadada",
                "default": false,
                "description": "Issue has not had recent activity or appears to be solved. Stale issues will be automatically closed"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-06-13T03:03:19Z",
        "updated_at": "2023-12-13T16:02:41Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nwhen trying to connect to azure redis I get the following error:\r\nunknown command `MODULE`, with args beginning with: `LIST`, \r\nHere is the code:\r\n\r\nfileName = \"somefile.pdf\"\r\nloader = PyPDFLoader(fileName)\r\ndocs = loader.load_and_split()\r\nredis_conn = f\"rediss://:{utils.REDIS_PWD}@{utils.REDIS_HOST}:{utils.REDIS_PORT}\"\r\nrds = Redis.from_documents(docs, embeddings, redis_url=redis_conn, index_name='link')\r\n\r\n\r\nImportant:\r\nConnecting to redis like this, works!\r\nr = redis.StrictRedis(host=utils.REDIS_HOST,port=utils.REDIS_PORT, db=0, password=utils.REDIS_PWD, ssl=True)\r\nr.set('foo', 'bar')\r\nr.get('foo')\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nThis works:\r\nimport redis\r\nr = redis.StrictRedis(host=utils.REDIS_HOST,port=utils.REDIS_PORT, db=0, password=utils.REDIS_PWD, ssl=True)\r\nr.set('foo', 'bar')\r\nr.get('foo')\r\n\r\n\r\nThis does not:\r\n\r\nfrom langchain.document_loaders import PyPDFLoader # for loading the pdf\r\nfrom langchain.vectorstores.redis import Redis\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\n\r\n\r\nembeddings = OpenAIEmbeddings(model=OPENAI_EMBEDDING_MODEL_NAME, chunk_size=1)\r\nfileName = \"somefile.pdf\"\r\nloader = PyPDFLoader(fileName)\r\ndocs = loader.load_and_split()\r\nredis_conn = f\"rediss://:{utils.REDIS_PWD}@{utils.REDIS_HOST}:{utils.REDIS_PORT}\"\r\nrds = Redis.from_documents(docs, embeddings, redis_url=redis_conn, index_name='link')\r\n\r\n\n\n### Expected behavior\n\nsave embeddings into REdis",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6075/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6075/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6074",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6074/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6074/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6074/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6074",
        "id": 1753938421,
        "node_id": "PR_kwDOIPDwls5S1icm",
        "number": 6074,
        "title": "Improve AnalyticDB VectorStore implementation without affecting user behavior",
        "user": {
            "login": "wangxuqi",
            "id": 13748374,
            "node_id": "MDQ6VXNlcjEzNzQ4Mzc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13748374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wangxuqi",
            "html_url": "https://github.com/wangxuqi",
            "followers_url": "https://api.github.com/users/wangxuqi/followers",
            "following_url": "https://api.github.com/users/wangxuqi/following{/other_user}",
            "gists_url": "https://api.github.com/users/wangxuqi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wangxuqi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wangxuqi/subscriptions",
            "organizations_url": "https://api.github.com/users/wangxuqi/orgs",
            "repos_url": "https://api.github.com/users/wangxuqi/repos",
            "events_url": "https://api.github.com/users/wangxuqi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wangxuqi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-13T02:57:15Z",
        "updated_at": "2023-06-13T09:16:03Z",
        "closed_at": "2023-06-13T09:16:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6074",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6074",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6074.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6074.patch",
            "merged_at": null
        },
        "body": "Hi there:\r\n\r\nAs I implement the AnalyticDB VectorStore use two table to store the document before. It seems just use one table is a better way after our user try to use it. So this commit is try to improve AnalyticDB VectorStore implementation without affecting user behavior behavior:\r\n\r\n1) Streamline the __post_init__ behavior by creating a single table with automatic indexing\r\n2) Update the add_texts API for document insertion \r\n3) Optimize similarity_search_with_score_by_vector to retrieve results directly from the table. \r\n4) Add an embedding_dimension parameter to support different dimension embedding functions.\r\nUsers can continue using the API as before. And the test cases added before is enough to meet this commit.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6074/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6074/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6073",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6073/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6073/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6073/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6073",
        "id": 1753930104,
        "node_id": "I_kwDOIPDwls5oitl4",
        "number": 6073,
        "title": "Issue: chroma where_document parameter passed in search_kwargs is invalid",
        "user": {
            "login": "wyirtrytpz003",
            "id": 122618171,
            "node_id": "U_kgDOB08BOw",
            "avatar_url": "https://avatars.githubusercontent.com/u/122618171?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wyirtrytpz003",
            "html_url": "https://github.com/wyirtrytpz003",
            "followers_url": "https://api.github.com/users/wyirtrytpz003/followers",
            "following_url": "https://api.github.com/users/wyirtrytpz003/following{/other_user}",
            "gists_url": "https://api.github.com/users/wyirtrytpz003/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wyirtrytpz003/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wyirtrytpz003/subscriptions",
            "organizations_url": "https://api.github.com/users/wyirtrytpz003/orgs",
            "repos_url": "https://api.github.com/users/wyirtrytpz003/repos",
            "events_url": "https://api.github.com/users/wyirtrytpz003/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wyirtrytpz003/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-13T02:46:14Z",
        "updated_at": "2023-12-08T16:06:50Z",
        "closed_at": "2023-12-08T16:06:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI want to use the chroma where_document parameter to do precise filtering of the content during data retrieval, but I found that the where_document parameter is not passed after the similarity_search_by_vector method is finally called in the source code\r\n![image](https://github.com/hwchase17/langchain/assets/122618171/acada970-0432-465b-9541-a6214c50f773)\r\n\n\n### Suggestion:\n\nI hope that I can generate where_document in the retrieval parameter of the retriever, just like the existing filter will be passed to where, the code is as follows\uff1a\r\n\r\n```py\r\nsearch_kwargs = {\r\n    \"k\": k,\r\n    \"filter\": filter,\r\n    \"where_document\": {\"$contains\": \"1000001\"}\r\n}\r\nretriever = vectordb.as_retriever(\r\n    search_kwargs=search_kwargs\r\n)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6073/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6073/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6072",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6072/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6072/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6072/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6072",
        "id": 1753802812,
        "node_id": "PR_kwDOIPDwls5S1FPl",
        "number": 6072,
        "title": "Minor: add StreamlitCallbackHandler to import and __all__",
        "user": {
            "login": "ryderwishart",
            "id": 19649268,
            "node_id": "MDQ6VXNlcjE5NjQ5MjY4",
            "avatar_url": "https://avatars.githubusercontent.com/u/19649268?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ryderwishart",
            "html_url": "https://github.com/ryderwishart",
            "followers_url": "https://api.github.com/users/ryderwishart/followers",
            "following_url": "https://api.github.com/users/ryderwishart/following{/other_user}",
            "gists_url": "https://api.github.com/users/ryderwishart/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ryderwishart/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ryderwishart/subscriptions",
            "organizations_url": "https://api.github.com/users/ryderwishart/orgs",
            "repos_url": "https://api.github.com/users/ryderwishart/repos",
            "events_url": "https://api.github.com/users/ryderwishart/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ryderwishart/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-13T00:34:21Z",
        "updated_at": "2023-06-19T00:36:39Z",
        "closed_at": "2023-06-19T00:36:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6072",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6072",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6072.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6072.patch",
            "merged_at": null
        },
        "body": "I just wanted to add in the import for this callback handler. Thanks for making it!\r\n\r\n#### Who can review?\r\n\r\n@hwchase17\r\n@agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6072/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6072/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6071",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6071/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6071/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6071/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6071",
        "id": 1753776827,
        "node_id": "I_kwDOIPDwls5oiIK7",
        "number": 6071,
        "title": "Langchain rate limit error while invoking OpenAI API",
        "user": {
            "login": "smith-co",
            "id": 102386930,
            "node_id": "U_kgDOBhpM8g",
            "avatar_url": "https://avatars.githubusercontent.com/u/102386930?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/smith-co",
            "html_url": "https://github.com/smith-co",
            "followers_url": "https://api.github.com/users/smith-co/followers",
            "following_url": "https://api.github.com/users/smith-co/following{/other_user}",
            "gists_url": "https://api.github.com/users/smith-co/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/smith-co/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/smith-co/subscriptions",
            "organizations_url": "https://api.github.com/users/smith-co/orgs",
            "repos_url": "https://api.github.com/users/smith-co/repos",
            "events_url": "https://api.github.com/users/smith-co/events{/privacy}",
            "received_events_url": "https://api.github.com/users/smith-co/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-13T00:04:42Z",
        "updated_at": "2023-09-20T16:08:31Z",
        "closed_at": "2023-09-20T16:08:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n## Description\r\nWhile using the Langchain application, I am frequently encountering an error that relates to rate limiting when invoking OpenAI's API. This tends to occur when I try to perform multiple translations consecutively or concurrently, causing a significant interruption to the user experience.\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n## Steps to Reproduce\r\n1. Open the Langchain application.\r\n2. Select a source language and enter some text for translation.\r\n3. Choose the target language and submit for translation.\r\n4. Repeat steps 2-3 multiple times in quick succession or concurrently.\n\n### Expected behavior\n\n## Expected Behavior\r\nThe application should be able to handle multiple translation requests without any disruptions, including but not limited to rate limit errors from OpenAI's API. \r\n\r\n## Actual Behavior\r\nWhen submitting multiple translation requests quickly or at the same time, a rate limit error is produced and no translations are returned. The error message is as follows:\r\n\r\n`Error: OpenAI API rate limit exceeded`\r\n\r\nHow to implement retry logic with LangChain?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6071/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6071/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6070",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6070/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6070/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6070/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6070",
        "id": 1753763529,
        "node_id": "PR_kwDOIPDwls5S08hK",
        "number": 6070,
        "title": "Allow FAISS score_threshold",
        "user": {
            "login": "simonfromla",
            "id": 16441059,
            "node_id": "MDQ6VXNlcjE2NDQxMDU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/16441059?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/simonfromla",
            "html_url": "https://github.com/simonfromla",
            "followers_url": "https://api.github.com/users/simonfromla/followers",
            "following_url": "https://api.github.com/users/simonfromla/following{/other_user}",
            "gists_url": "https://api.github.com/users/simonfromla/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/simonfromla/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/simonfromla/subscriptions",
            "organizations_url": "https://api.github.com/users/simonfromla/orgs",
            "repos_url": "https://api.github.com/users/simonfromla/repos",
            "events_url": "https://api.github.com/users/simonfromla/events{/privacy}",
            "received_events_url": "https://api.github.com/users/simonfromla/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-12T23:52:24Z",
        "updated_at": "2023-06-19T08:53:41Z",
        "closed_at": "2023-06-17T16:45:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6070",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6070",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6070.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6070.patch",
            "merged_at": "2023-06-17T16:45:13Z"
        },
        "body": "Allow FAISS's similarity_search_with_score_by_vector to accept kwargs, specifically: `score_threshold`.\r\nFixes error for document compression users in cases where there are no relevant docs - for instance:  \r\n\r\n```\r\nhuman_message: \"hi\" (<--  will return no relevant docs depending on score_threshold)\r\n> IndexError: index 0 is out of bounds for axis 0 with size 0\r\n```\r\n\r\nCombined with the new merger_retriever, FAISS users can now perform more granular vectorstore retrieving based on score_threshold:  \r\n\r\n```\r\nstore_1 = st[0][1].as_retriever(search_type=\"similarity_score_threshold\", search_kwargs={\"score_threshold\": .8, \"k\": 3})\r\nstore_2 = st[1][1].as_retriever(search_type=\"similarity_score_threshold\", search_kwargs={\"score_threshold\": .3, \"k\": 3})\r\nstore_3 = st[2][1].as_retriever(search_type=\"similarity_score_threshold\", search_kwargs={\"score_threshold\": .5, \"k\": 3})\r\n\r\nmerged = MergerRetriever(retrievers=[store_1, store_2, store_3])\r\npipeline_compressor = prep_compressor()\r\ncompression_retriever = ContextualCompressionRetriever(base_compressor=pipeline_compressor, base_retriever=merged)\r\n\r\nchain = ConversationalRetrievalChain.from_llm(OpenAI(temperature=0), chain_type=\"stuff\", retriever=compression_retriever)\r\n```\r\n\r\n@dev2049 or @hwchase17 would appreciate a check if available. Thanks. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6070/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6070/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6069",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6069/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6069/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6069/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6069",
        "id": 1753760132,
        "node_id": "PR_kwDOIPDwls5S070C",
        "number": 6069,
        "title": "Add tests and update notebook for MarkdownHeaderTextSplitter",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T23:45:52Z",
        "updated_at": "2023-06-13T16:07:52Z",
        "closed_at": "2023-06-13T16:07:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6069",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6069",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6069.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6069.patch",
            "merged_at": "2023-06-13T16:07:52Z"
        },
        "body": "Add test and update notebook for `MarkdownHeaderTextSplitter`.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6069/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6069/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6067",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6067/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6067/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6067/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6067",
        "id": 1753732015,
        "node_id": "PR_kwDOIPDwls5S01vL",
        "number": 6067,
        "title": "Use Run object from SDK",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T23:06:50Z",
        "updated_at": "2023-06-13T14:14:12Z",
        "closed_at": "2023-06-13T14:14:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6067",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6067",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6067.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6067.patch",
            "merged_at": "2023-06-13T14:14:11Z"
        },
        "body": "Update the Run object in the tracer to extend that in the SDK to include the parameters necessary for tracking/tracing",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6067/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6067/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6066",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6066/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6066/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6066/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6066",
        "id": 1753666622,
        "node_id": "PR_kwDOIPDwls5S0nsN",
        "number": 6066,
        "title": "Log tracer errors",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T22:03:38Z",
        "updated_at": "2023-06-13T00:13:50Z",
        "closed_at": "2023-06-13T00:13:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6066",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6066",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6066.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6066.patch",
            "merged_at": "2023-06-13T00:13:49Z"
        },
        "body": "Example (would log several times if not for the helper fn. Would emit no logs due to mulithreading previously)\r\n![image](https://github.com/hwchase17/langchain/assets/130414180/070d25ae-1f06-4487-9617-0a6f66f3f01e)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6066/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6066/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6065",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6065/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6065/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6065/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6065",
        "id": 1753630393,
        "node_id": "PR_kwDOIPDwls5S0fht",
        "number": 6065,
        "title": "Fix Confluence loader doc headers",
        "user": {
            "login": "a-aznar",
            "id": 18106097,
            "node_id": "MDQ6VXNlcjE4MTA2MDk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/18106097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/a-aznar",
            "html_url": "https://github.com/a-aznar",
            "followers_url": "https://api.github.com/users/a-aznar/followers",
            "following_url": "https://api.github.com/users/a-aznar/following{/other_user}",
            "gists_url": "https://api.github.com/users/a-aznar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/a-aznar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/a-aznar/subscriptions",
            "organizations_url": "https://api.github.com/users/a-aznar/orgs",
            "repos_url": "https://api.github.com/users/a-aznar/repos",
            "events_url": "https://api.github.com/users/a-aznar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/a-aznar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-12T21:33:37Z",
        "updated_at": "2023-06-17T18:09:33Z",
        "closed_at": "2023-06-17T18:09:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6065",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6065",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6065.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6065.patch",
            "merged_at": null
        },
        "body": "SInce the page had two level 1 headers, it was showing two entries for the Confluence loader in the loader docs.\r\n\r\nThis PR adjusts the header levels.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6065/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6065/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6064",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6064/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6064/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6064/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6064",
        "id": 1753625083,
        "node_id": "PR_kwDOIPDwls5S0eUz",
        "number": 6064,
        "title": "feat: OpenLLM",
        "user": {
            "login": "aarnphm",
            "id": 29749331,
            "node_id": "MDQ6VXNlcjI5NzQ5MzMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29749331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aarnphm",
            "html_url": "https://github.com/aarnphm",
            "followers_url": "https://api.github.com/users/aarnphm/followers",
            "following_url": "https://api.github.com/users/aarnphm/following{/other_user}",
            "gists_url": "https://api.github.com/users/aarnphm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aarnphm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aarnphm/subscriptions",
            "organizations_url": "https://api.github.com/users/aarnphm/orgs",
            "repos_url": "https://api.github.com/users/aarnphm/repos",
            "events_url": "https://api.github.com/users/aarnphm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aarnphm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899415699,
                "node_id": "LA_kwDOIPDwls8AAAABJAcmkw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/llms",
                "name": "llms",
                "color": "7CDBB2",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "dev2049",
                "id": 130488702,
                "node_id": "U_kgDOB8cZfg",
                "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/dev2049",
                "html_url": "https://github.com/dev2049",
                "followers_url": "https://api.github.com/users/dev2049/followers",
                "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
                "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
                "organizations_url": "https://api.github.com/users/dev2049/orgs",
                "repos_url": "https://api.github.com/users/dev2049/repos",
                "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
                "received_events_url": "https://api.github.com/users/dev2049/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 11,
        "created_at": "2023-06-12T21:29:43Z",
        "updated_at": "2023-06-22T13:21:21Z",
        "closed_at": "2023-06-22T07:58:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6064",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6064",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6064.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6064.patch",
            "merged_at": "2023-06-22T07:58:28Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\n\ud83c\udf89 OpenLLM \ud83e\udd1d LangChain\r\n\r\n[OpenLLM](https://github.com/bentoml/OpenLLM) is a new open platform for operating large language models(LLMs) in\r\nproduction. Serve, deploy, and monitor any LLMs with ease.\r\n\r\nOpenLLM lets developers and researchers to easily run inference with any\r\nopen-source LLMs, deploy to the cloud or on-premises, build powerful AI apps,\r\nand fine tune your own LLM (coming soon...)\r\n\r\nIt currently supports ChatGLM, Dolly-v2, Flan-T5, Falcon, Starcoder, and more to\r\ncome. One can also easily start either a REST/gRPC server, which is powered by\r\nBentoML.\r\n\r\nNow that's out of the way, lets dive in!\r\n\r\nThe current depenedencies for this integration: `openllm`\r\n\r\nThis integrations brings a `OpenLLM` llms to LangChain, that can be used for\r\nboth running LLMs locally as well as interacting with a remote OpenLLM server.\r\n\r\nTo quickly start a local LLM, simply do the following:\r\n\r\n```python\r\nfrom langchain.llms import OpenLLM\r\n\r\nllm = OpenLLM(model_name=\"dolly-v2\", model_id='databricks/dolly-v2-7b', device_map='auto')\r\n\r\nllm(\"What is the difference between a duck and a goose? And why there are so many Goose in Canada?\")\r\n```\r\n\r\n`langchain.llms.OpenLLM`, as mentioned above also have the capabilities to\r\ninteract with remote OpenLLM Server. Given there is a running OpenLLM server at\r\nhttp://44.23.123.1, you can do the following:\r\n\r\n```python\r\nfrom langchain.llms import OpenLLM\r\n\r\nllm = OpenLLM(server_url='http://44.23.123.1:3000', server_type='grpc')\r\n\r\nllm(\"What is the difference between a duck and a goose? And why there are so many Goose in Canada?\")\r\n```\r\n\r\nFeatures soon to be open-sourced:\r\n\r\n- OpenAI compatible API, allowing users to easily use LangChain's OpenAI llm.\r\n- SSE support for OpenLLM server, allowing users to stream inference results.\r\n- Last but not least, easily fine-tune your own LLMs with `LLM.tuning()`\r\n\r\nLast but not least, I would love to hear feedback and response from the\r\ncommunity about the project, and feel free to reach out to me via Twitter\r\n@aarnphm_. \r\n\r\nFeel free to join our [Discord](https://l.bentoml.com/join-openllm-discord) to get the latest updates and developments.\r\n\r\nSigned-off-by: Aaron <29749331+aarnphm@users.noreply.github.com>\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\nI have added tests for this integration.\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @hwchase17\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n\r\ncc @hwchase17 @agola11 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6064/reactions",
            "total_count": 9,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 3,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6064/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6063",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6063/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6063/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6063/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6063",
        "id": 1753624260,
        "node_id": "PR_kwDOIPDwls5S0eJU",
        "number": 6063,
        "title": "ArxivAPIWrapper - doc_content_chars_max",
        "user": {
            "login": "hp0404",
            "id": 39014459,
            "node_id": "MDQ6VXNlcjM5MDE0NDU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/39014459?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hp0404",
            "html_url": "https://github.com/hp0404",
            "followers_url": "https://api.github.com/users/hp0404/followers",
            "following_url": "https://api.github.com/users/hp0404/following{/other_user}",
            "gists_url": "https://api.github.com/users/hp0404/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hp0404/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hp0404/subscriptions",
            "organizations_url": "https://api.github.com/users/hp0404/orgs",
            "repos_url": "https://api.github.com/users/hp0404/repos",
            "events_url": "https://api.github.com/users/hp0404/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hp0404/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-12T21:29:00Z",
        "updated_at": "2023-06-16T05:16:42Z",
        "closed_at": "2023-06-16T05:16:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6063",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6063",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6063.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6063.patch",
            "merged_at": "2023-06-16T05:16:42Z"
        },
        "body": "This PR refactors the ArxivAPIWrapper class making `doc_content_chars_max` parameter optional. Additionally, tests have been added to ensure the functionality of the doc_content_chars_max parameter.\r\n\r\nFixes #6027 (issue)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6063/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6063/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6062",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6062/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6062/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6062/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6062",
        "id": 1753579932,
        "node_id": "PR_kwDOIPDwls5S0UKd",
        "number": 6062,
        "title": "improve tools",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T21:01:18Z",
        "updated_at": "2023-06-13T05:19:04Z",
        "closed_at": "2023-06-13T05:19:04Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6062",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6062",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6062.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6062.patch",
            "merged_at": "2023-06-13T05:19:03Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6062/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6062/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6060",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6060/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6060/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6060/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6060",
        "id": 1753441247,
        "node_id": "PR_kwDOIPDwls5Sz1v0",
        "number": 6060,
        "title": "Update output format of MosaicML endpoint to be more flexible",
        "user": {
            "login": "dakinggg",
            "id": 43149077,
            "node_id": "MDQ6VXNlcjQzMTQ5MDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/43149077?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dakinggg",
            "html_url": "https://github.com/dakinggg",
            "followers_url": "https://api.github.com/users/dakinggg/followers",
            "following_url": "https://api.github.com/users/dakinggg/following{/other_user}",
            "gists_url": "https://api.github.com/users/dakinggg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dakinggg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dakinggg/subscriptions",
            "organizations_url": "https://api.github.com/users/dakinggg/orgs",
            "repos_url": "https://api.github.com/users/dakinggg/repos",
            "events_url": "https://api.github.com/users/dakinggg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dakinggg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T19:37:06Z",
        "updated_at": "2023-06-16T05:15:40Z",
        "closed_at": "2023-06-16T05:15:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6060",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6060",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6060.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6060.patch",
            "merged_at": "2023-06-16T05:15:39Z"
        },
        "body": "There will likely be another change or two coming over the next couple weeks as we stabilize the API, but putting this one in now which just makes the integration a bit more flexible with the response output format.\r\n\r\n```\r\n(langchain) danielking@MML-1B940F4333E2 langchain % pytest tests/integration_tests/llms/test_mosaicml.py tests/integration_tests/embeddings/test_mosaicml.py \r\n=================================================================================== test session starts ===================================================================================\r\nplatform darwin -- Python 3.10.11, pytest-7.3.1, pluggy-1.0.0\r\nrootdir: /Users/danielking/github/langchain\r\nconfigfile: pyproject.toml\r\nplugins: asyncio-0.20.3, mock-3.10.0, dotenv-0.5.2, cov-4.0.0, anyio-3.6.2\r\nasyncio: mode=strict\r\ncollected 12 items                                                                                                                                                                        \r\n\r\ntests/integration_tests/llms/test_mosaicml.py ......                                                                                                                                [ 50%]\r\ntests/integration_tests/embeddings/test_mosaicml.py ......                                                                                                                          [100%]\r\n\r\n=================================================================================== slowest 5 durations ===================================================================================\r\n4.76s call     tests/integration_tests/llms/test_mosaicml.py::test_retry_logic\r\n4.74s call     tests/integration_tests/llms/test_mosaicml.py::test_mosaicml_llm_call\r\n4.13s call     tests/integration_tests/llms/test_mosaicml.py::test_instruct_prompt\r\n0.91s call     tests/integration_tests/llms/test_mosaicml.py::test_short_retry_does_not_loop\r\n0.66s call     tests/integration_tests/llms/test_mosaicml.py::test_mosaicml_extra_kwargs\r\n=================================================================================== 12 passed in 19.70s ===================================================================================\r\n```\r\n\r\n#### Who can review?\r\n\r\n  @hwchase17\r\n  @dev2049 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6060/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6060/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6059",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6059/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6059/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6059/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6059",
        "id": 1753439350,
        "node_id": "I_kwDOIPDwls5og1x2",
        "number": 6059,
        "title": "Issue: LangChain Plus Api Key",
        "user": {
            "login": "dsantiago",
            "id": 3484029,
            "node_id": "MDQ6VXNlcjM0ODQwMjk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3484029?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dsantiago",
            "html_url": "https://github.com/dsantiago",
            "followers_url": "https://api.github.com/users/dsantiago/followers",
            "following_url": "https://api.github.com/users/dsantiago/following{/other_user}",
            "gists_url": "https://api.github.com/users/dsantiago/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dsantiago/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dsantiago/subscriptions",
            "organizations_url": "https://api.github.com/users/dsantiago/orgs",
            "repos_url": "https://api.github.com/users/dsantiago/repos",
            "events_url": "https://api.github.com/users/dsantiago/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dsantiago/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-12T19:35:50Z",
        "updated_at": "2023-09-23T16:05:18Z",
        "closed_at": "2023-09-23T16:05:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nStarted a local server just to learn more about with `langchain plus start`. It says that I can generate a new api as it appears to have an endpoint in port 1984. But when I click the menu there's no **Settings** option there.\r\n\r\n---\r\n\r\n<img width=\"1787\" alt=\"Screenshot 2023-06-12 at 16 32 31\" src=\"https://github.com/hwchase17/langchain/assets/3484029/e42ef803-f216-486a-84f3-6c4026a37a8f\">\r\n\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6059/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6059/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6058",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6058/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6058/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6058/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6058",
        "id": 1753330704,
        "node_id": "I_kwDOIPDwls5ogbQQ",
        "number": 6058,
        "title": "Issue: ModuleNotFoundError: No module named 'langchain.callbacks.shared'",
        "user": {
            "login": "Arvind-4",
            "id": 81419892,
            "node_id": "MDQ6VXNlcjgxNDE5ODky",
            "avatar_url": "https://avatars.githubusercontent.com/u/81419892?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Arvind-4",
            "html_url": "https://github.com/Arvind-4",
            "followers_url": "https://api.github.com/users/Arvind-4/followers",
            "following_url": "https://api.github.com/users/Arvind-4/following{/other_user}",
            "gists_url": "https://api.github.com/users/Arvind-4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Arvind-4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Arvind-4/subscriptions",
            "organizations_url": "https://api.github.com/users/Arvind-4/orgs",
            "repos_url": "https://api.github.com/users/Arvind-4/repos",
            "events_url": "https://api.github.com/users/Arvind-4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Arvind-4/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-12T18:33:04Z",
        "updated_at": "2023-09-27T16:06:14Z",
        "closed_at": "2023-09-27T16:06:14Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHello,\r\n\r\nI am having trouble running my code due to an error that I encountered. The error message that I received is \"ModuleNotFoundError: No module named 'langchain.callbacks.shared'\". I am not sure how to resolve this issue and would appreciate any help or guidance.\r\n\r\nThis line of code is using the `pickle` module to load data from a file. The `pickle.load(file)` function reads the pickled representation of an object from the open file object `file` and returns the reconstituted object hierarchy specified therein.\r\n\r\nIn this case, the returned object is expected to be a tuple with two elements, which are assigned to the variables `self.chain` and `self.vectorstore`, respectively. This means that the first element of the tuple is assigned to `self.chain`, and the second element is assigned to `self.vectorstore`.\r\n\r\n\r\nHere is some information about my environment that may be helpful:\r\n- OS: Ubuntu\r\n- Python version: 3.10\r\n- Langchain Version: 0.0.198\r\n\r\nIssue Screen Shot:\r\n\r\n<br />\r\n\r\n![Screenshot from 2023-06-12 23-55-27](https://github.com/hwchase17/langchain/assets/81419892/33e0bdd1-2fd0-4570-ab6e-6100c1211eb7)\r\n\r\n\r\n\r\n\r\nThank you in advance for your help and support in resolving this issue.\r\n\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6058/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6058/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6057",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6057/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6057/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6057/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6057",
        "id": 1753321160,
        "node_id": "PR_kwDOIPDwls5Sza-z",
        "number": 6057,
        "title": "Replace self-built devcontainer with default python image",
        "user": {
            "login": "neo",
            "id": 9028430,
            "node_id": "MDQ6VXNlcjkwMjg0MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9028430?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neo",
            "html_url": "https://github.com/neo",
            "followers_url": "https://api.github.com/users/neo/followers",
            "following_url": "https://api.github.com/users/neo/following{/other_user}",
            "gists_url": "https://api.github.com/users/neo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neo/subscriptions",
            "organizations_url": "https://api.github.com/users/neo/orgs",
            "repos_url": "https://api.github.com/users/neo/repos",
            "events_url": "https://api.github.com/users/neo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-12T18:26:39Z",
        "updated_at": "2023-09-18T16:27:05Z",
        "closed_at": "2023-09-18T16:18:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6057",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6057",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6057.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6057.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\nThis replaces the custom docker image for devcontainer with the official python one with the `poetry` feature and `black-formatter` extension added, because:\r\n- The current one is broken during building when opening in codespaces. I tried a few times and it errors out during poetry install colored for some reasons.\r\n- It's faster to build and load when opening in codespaces.\r\n- It's easier to maintain as it's composed from existing things pre-built by others.\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:  - @vowelparrot \r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @hwchase17\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6057/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6057/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6056",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6056/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6056/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6056/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6056",
        "id": 1753301223,
        "node_id": "PR_kwDOIPDwls5SzWpI",
        "number": 6056,
        "title": "Implement `max_marginal_relevance_search` in `VectorStore` of Pinecone",
        "user": {
            "login": "neo",
            "id": 9028430,
            "node_id": "MDQ6VXNlcjkwMjg0MzA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9028430?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/neo",
            "html_url": "https://github.com/neo",
            "followers_url": "https://api.github.com/users/neo/followers",
            "following_url": "https://api.github.com/users/neo/following{/other_user}",
            "gists_url": "https://api.github.com/users/neo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/neo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/neo/subscriptions",
            "organizations_url": "https://api.github.com/users/neo/orgs",
            "repos_url": "https://api.github.com/users/neo/repos",
            "events_url": "https://api.github.com/users/neo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/neo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-12T18:16:35Z",
        "updated_at": "2023-06-13T17:46:46Z",
        "closed_at": "2023-06-13T17:46:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6056",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6056",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6056.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6056.patch",
            "merged_at": "2023-06-13T17:46:46Z"
        },
        "body": "This adds implementation of MMR search in pinecone; and I have two semi-related observations about this vector store class:\r\n- Maybe we should also have a `similarity_search_by_vector_returning_embeddings` like in supabase, but it's not in the base `VectorStore` class so I didn't implement\r\n- Talking about the base class, there's `similarity_search_with_relevance_scores`, but in pinecone it is called `similarity_search_with_score`; maybe we should consider renaming it to align with other `VectorStore` base and sub classes (or add that as an alias for backward compatibility)\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n - VectorStores / Retrievers / Memory - @dev2049",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6056/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6056/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6055",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6055/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6055/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6055/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6055",
        "id": 1753265916,
        "node_id": "I_kwDOIPDwls5ogLb8",
        "number": 6055,
        "title": "When using MongoDBAtlasVectorSearch i get KeyError: 'text' despite having the collection populated",
        "user": {
            "login": "greenomy-matteo",
            "id": 118450453,
            "node_id": "U_kgDOBw9pFQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/118450453?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/greenomy-matteo",
            "html_url": "https://github.com/greenomy-matteo",
            "followers_url": "https://api.github.com/users/greenomy-matteo/followers",
            "following_url": "https://api.github.com/users/greenomy-matteo/following{/other_user}",
            "gists_url": "https://api.github.com/users/greenomy-matteo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/greenomy-matteo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/greenomy-matteo/subscriptions",
            "organizations_url": "https://api.github.com/users/greenomy-matteo/orgs",
            "repos_url": "https://api.github.com/users/greenomy-matteo/repos",
            "events_url": "https://api.github.com/users/greenomy-matteo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/greenomy-matteo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-12T17:58:39Z",
        "updated_at": "2023-10-14T20:12:22Z",
        "closed_at": "2023-10-14T20:12:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython version: 3.10.11 (main, May 17 2023, 14:30:36) [Clang 14.0.6 ]\r\npymongo                  4.3.3\r\nlangchain                0.0.190\r\n\n\n### Who can help?\n\n@eyurtsev @agola11  \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [x] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI followed religiously the following tutorial:\r\n\r\nhttps://python.langchain.com/en/stable/modules/indexes/vectorstores/examples/mongodb_atlas_vector_search.html\r\n\r\nDespite that I get the following error.\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\nCell In[14], line 12\r\n     10 # perform a similarity search between the embedding of the query and the embeddings of the documents\r\n     11 query = \"my query?\"\r\n---> 12 docs = vectorStore.similarity_search(query)\r\n\r\nFile ~/opt/miniconda3/envs/LLM_langchain_exploration/lib/python3.10/site-packages/langchain/vectorstores/mongodb_atlas.py:222, in MongoDBAtlasVectorSearch.similarity_search(self, query, k, pre_filter, post_filter_pipeline, **kwargs)\r\n    194 def similarity_search(\r\n    195     self,\r\n    196     query: str,\r\n   (...)\r\n    200     **kwargs: Any,\r\n    201 ) -> List[Document]:\r\n    202     \"\"\"Return MongoDB documents most similar to query.\r\n    203 \r\n    204     Use the knnBeta Operator available in MongoDB Atlas Search\r\n   (...)\r\n    220         List of Documents most similar to the query and score for each\r\n    221     \"\"\"\r\n--> 222     docs_and_scores = self.similarity_search_with_score(\r\n    223         query,\r\n    224         k=k,\r\n    225         pre_filter=pre_filter,\r\n    226         post_filter_pipeline=post_filter_pipeline,\r\n    227     )\r\n    228     return [doc for doc, _ in docs_and_scores]\r\n\r\nFile ~/opt/miniconda3/envs/LLM_langchain_exploration/lib/python3.10/site-packages/langchain/vectorstores/mongodb_atlas.py:189, in MongoDBAtlasVectorSearch.similarity_search_with_score(self, query, k, pre_filter, post_filter_pipeline)\r\n    187 docs = []\r\n    188 for res in cursor:\r\n--> 189     text = res.pop(self._text_key)\r\n    190     score = res.pop(\"score\")\r\n    191     docs.append((Document(page_content=text, metadata=res), score))\r\n\r\nKeyError: 'text'\r\n```\n\n### Expected behavior\n\nshould get the docs back",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6055/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6055/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    }
]