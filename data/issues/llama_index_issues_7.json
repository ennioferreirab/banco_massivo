[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8908",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8908/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8908/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8908/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8908",
        "id": 1992244481,
        "node_id": "I_kwDOIWuq5852vz0B",
        "number": 8908,
        "title": "[Question]: Question generation yields part of the prompt?",
        "user": {
            "login": "ram510",
            "id": 2175155,
            "node_id": "MDQ6VXNlcjIxNzUxNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2175155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ram510",
            "html_url": "https://github.com/ram510",
            "followers_url": "https://api.github.com/users/ram510/followers",
            "following_url": "https://api.github.com/users/ram510/following{/other_user}",
            "gists_url": "https://api.github.com/users/ram510/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ram510/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ram510/subscriptions",
            "organizations_url": "https://api.github.com/users/ram510/orgs",
            "repos_url": "https://api.github.com/users/ram510/repos",
            "events_url": "https://api.github.com/users/ram510/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ram510/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-14T08:37:19Z",
        "updated_at": "2023-11-14T15:52:06Z",
        "closed_at": "2023-11-14T15:52:05Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHere is the code I am using to generate questions. Oftentimes I see \"Avoid asking questions that require prior knowledge or assumptions.\" as one of the questions generated. Is there a more elegant way of controlling the behaviour.\r\nCode\r\n`import asyncio\r\nfrom typing import Dict, List\r\n\r\nimport pandas as pd\r\nimport torch.nn.functional as F\r\nfrom llama_index.evaluation.dataset_generation import DatasetGenerator\r\nfrom sentence_transformers import SentenceTransformer\r\n\r\nfrom llama_index import Document\r\n\r\n\r\nclass RelatedQuestionGenerator:\r\n    def __init__(\r\n        self, response, service_context, num: int = None, user_query: str = None\r\n    ):\r\n        self.response = response\r\n        self.service_context = service_context\r\n        self.num = num\r\n        self.user_query = user_query\r\n\r\n    async def generate_related_questions(self) -> Dict[str, List[str]]:\r\n        question_gen_query = f\"\"\"You are a very helpful assistant that can create only questions based on the context.\r\n                                Your task is to ask {self.num} simple and easy questions for an upcoming research protocol.\r\n                                Do not ask questions related to the title of the protocol.\r\n                                The questions should be relevant and succint.\r\n                                Restrict the questions to the context information provided.\"\"\"\r\n        doc_questions = {}\r\n        for i in range(len(self.response.source_nodes)):\r\n            response_text = self.response.source_nodes[i].get_text()\r\n            response_metadata = self.response.source_nodes[i].metadata\r\n\r\n            documents = [\r\n                Document(\r\n                    text=response_text,\r\n                    metadata=response_metadata,\r\n                )\r\n            ]\r\n            dataset_generator = DatasetGenerator.from_documents(\r\n                documents, self.service_context, question_gen_query=question_gen_query\r\n            )\r\n            questions = await dataset_generator.agenerate_questions_from_nodes(\r\n                num=self.num\r\n            )\r\n\r\n            doc_questions[response_metadata[\"file_name\"]] = questions\r\n        return doc_questions\r\n\r\n    async def calculate_cosine_similarity(self, dictionary, input_string) -> List[str]:\r\n        emb_model = SentenceTransformer(\"BAAI/bge-small-en-v1.5\")\r\n        input_embeddings = emb_model.encode(input_string, convert_to_tensor=True)\r\n        filenames = []\r\n        questions = []\r\n        input_strings = []\r\n        scores = []\r\n        f_questions = []\r\n\r\n        for filename, question_list in dictionary.items():\r\n            for question in question_list:\r\n                question_embedding = emb_model.encode(question, convert_to_tensor=True)\r\n                similarity = F.cosine_similarity(\r\n                    input_embeddings, question_embedding, dim=0\r\n                )\r\n                filenames.append(filename)\r\n                questions.append(question)\r\n                input_strings.append(input_string)\r\n                scores.append(similarity.item())\r\n\r\n        data = {\r\n            \"filename\": filenames,\r\n            \"questions\": questions,\r\n            \"input_string\": input_strings,\r\n            \"score\": scores,\r\n        }\r\n        result_df = pd.DataFrame(data)\r\n        result_df = result_df.sort_values(by=\"score\", ascending=False)\r\n        questions_series = result_df[\"questions\"]\r\n        if questions_series.__len__() > self.num:\r\n            f_questions.extend(questions_series.head(2).tolist())\r\n            f_questions.extend(questions_series.tail(2).tolist())\r\n        else:\r\n            f_questions.extend(questions_series.tolist())\r\n\r\n        return f_questions\r\n\r\n    async def get_related_questions(self):\r\n        questions_dict = await self.generate_related_questions()\r\n        related_questions = await self.calculate_cosine_similarity(\r\n            questions_dict, self.user_query\r\n        )\r\n        return related_questions\r\n`\r\noutput:\r\n\"suggestedPrompts\": [\r\n    \"What is the primary objective of the study mentioned in the context?\",\r\n    \"How will protected health information (PHI) be used in this study, and who will have access to it?\",\r\n    \"Where will the data be stored during the research project, and how will it be destroyed when the project is complete?\",\r\n    **\"Avoid asking questions that require prior knowledge or assumptions.\"**\r\n  ]",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8908/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8908/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8907",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8907/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8907/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8907/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8907",
        "id": 1992244477,
        "node_id": "I_kwDOIWuq5852vzz9",
        "number": 8907,
        "title": "[Bug]: TextNode object has no attribute __fields_set__",
        "user": {
            "login": "stdweird",
            "id": 1517606,
            "node_id": "MDQ6VXNlcjE1MTc2MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1517606?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stdweird",
            "html_url": "https://github.com/stdweird",
            "followers_url": "https://api.github.com/users/stdweird/followers",
            "following_url": "https://api.github.com/users/stdweird/following{/other_user}",
            "gists_url": "https://api.github.com/users/stdweird/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stdweird/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stdweird/subscriptions",
            "organizations_url": "https://api.github.com/users/stdweird/orgs",
            "repos_url": "https://api.github.com/users/stdweird/repos",
            "events_url": "https://api.github.com/users/stdweird/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stdweird/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-14T08:37:18Z",
        "updated_at": "2023-11-15T09:37:08Z",
        "closed_at": "2023-11-14T16:11:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\n`QuestionsAnsweredExtractor` triggers following error during `MetadataExtractor.process_nodes` when processing TextNode using `in_place=False`\r\n\r\n```\r\n\r\n  File \"/home/me/.local/lib/python3.11/site-packages/llama_index/node_parser/extractors/metadata_extractors.py\", line 118, in process_nodes                      \r\n    cur_metadata_list = extractor.extract(new_nodes)\r\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/me/.local/lib/python3.11/site-packages/llama_index/node_parser/extractors/metadata_extractors.py\", line 386, in extract                            \r\n    node.excluded_llm_metadata_keys = [\"questions_this_excerpt_can_answer\"]\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"pydantic/main.py\", line 405, in pydantic.main.BaseModel.__setattr__\r\nAttributeError: 'TextNode' object has no attribute '__fields_set__'\r\n\r\n```\r\n\r\n(fyi TitleExtractor and KeywordExtractor work fine)\r\n\r\n### Version\r\n\r\n0.8.69\r\n\r\n### Steps to Reproduce\r\n\r\nwhen `in_place=False` is not provided, the error does not occur\r\n\r\n```\r\n\r\n>>> metadata_extractor = MetadataExtractor(extractors=[QuestionsAnsweredExtractor(questions=3, llm=service_context.llm)],in_place=False)\r\n>>> metadata_extractor.process_nodes([TextNode(text='abc')])\r\nExtracting questions:   0%|                                                                                                                       | 0/1 [00:00<?, ?it/s]DEBUG:urllib3.connectionpool:Starting new HTTP connection (1): localhost:9997\r\nStarting new HTTP connection (1): localhost:9997\r\nDEBUG:urllib3.connectionpool:http://localhost:9997 \"POST /v1/chat/completions HTTP/1.1\" 200 1411\r\nhttp://localhost:9997 \"POST /v1/chat/completions HTTP/1.1\" 200 1411\r\nDEBUG:llama_index.llm_predictor.base:  Certainly! Based on the context \"abc\", here are three questions that this context can provide specific answers to which are unlikely to be found elsewhere:\r\n\r\n1. What is the significance of the letter combination \"ab\" in the context of abc?\r\n\r\nHigher-level summary: The context \"abc\" suggests a sequence of letters, and the letter combination \"ab\" may have a specific meaning or purpose within that sequence.\r\n\r\n2. How does the letter \"c\" contribute to the overall meaning of the context \"abc\"?\r\n\r\nHigher-level summary: The presence of the letter \"c\" in the context \"abc\" may indicate a connection to a particular theme, concept, or idea.\r\n\r\n3. What is the relationship between the letters \"a\" and \"b\" in the context of abc?\r\n\r\nHigher-level summary: The proximity of the letters \"a\" and \"b\" in the context \"abc\" may suggest a connection or relationship between them, such as a cause-and-effect relationship or a pattern.\r\n\r\nI hope these questions are helpful! Let me know if you have any further requests or clarifications.\r\n  Certainly! Based on the context \"abc\", here are three questions that this context can provide specific answers to which are unlikely to be found elsewhere:\r\n\r\n1. What is the significance of the letter combination \"ab\" in the context of abc?\r\n\r\nHigher-level summary: The context \"abc\" suggests a sequence of letters, and the letter combination \"ab\" may have a specific meaning or purpose within that sequence.\r\n\r\n2. How does the letter \"c\" contribute to the overall meaning of the context \"abc\"?\r\n\r\nHigher-level summary: The presence of the letter \"c\" in the context \"abc\" may indicate a connection to a particular theme, concept, or idea.\r\n\r\n3. What is the relationship between the letters \"a\" and \"b\" in the context of abc?\r\n\r\nHigher-level summary: The proximity of the letters \"a\" and \"b\" in the context \"abc\" may suggest a connection or relationship between them, such as a cause-and-effect relationship or a pattern.\r\n\r\nI hope these questions are helpful! Let me know if you have any further requests or clarifications.\r\nExtracting questions:   0%|                                                                                                                       | 0/1 [00:35<?, ?it/s]\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/me/.local/lib/python3.11/site-packages/llama_index/node_parser/extractors/metadata_extractors.py\", line 118, in process_nodes\r\n    cur_metadata_list = extractor.extract(new_nodes)\r\n                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/me/.local/lib/python3.11/site-packages/llama_index/node_parser/extractors/metadata_extractors.py\", line 386, in extract\r\n    node.excluded_llm_metadata_keys = [\"questions_this_excerpt_can_answer\"]\r\n    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"pydantic/main.py\", line 405, in pydantic.main.BaseModel.__setattr__\r\nAttributeError: 'TextNode' object has no attribute '__fields_set__'\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8907/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8907/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8906",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8906/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8906/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8906/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8906",
        "id": 1992241969,
        "node_id": "I_kwDOIWuq5852vzMx",
        "number": 8906,
        "title": "[Bug] AttributeError in LiteLLM class with litellm==1.0.0",
        "user": {
            "login": "SeeknnDestroy",
            "id": 44926076,
            "node_id": "MDQ6VXNlcjQ0OTI2MDc2",
            "avatar_url": "https://avatars.githubusercontent.com/u/44926076?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SeeknnDestroy",
            "html_url": "https://github.com/SeeknnDestroy",
            "followers_url": "https://api.github.com/users/SeeknnDestroy/followers",
            "following_url": "https://api.github.com/users/SeeknnDestroy/following{/other_user}",
            "gists_url": "https://api.github.com/users/SeeknnDestroy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SeeknnDestroy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SeeknnDestroy/subscriptions",
            "organizations_url": "https://api.github.com/users/SeeknnDestroy/orgs",
            "repos_url": "https://api.github.com/users/SeeknnDestroy/repos",
            "events_url": "https://api.github.com/users/SeeknnDestroy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SeeknnDestroy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-14T08:35:43Z",
        "updated_at": "2023-11-19T18:47:28Z",
        "closed_at": "2023-11-19T18:47:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI am encountering an error when trying to use litellm through llama-index, following the example provided in the [llama-index documentation](https://docs.llamaindex.ai/en/stable/examples/llm/litellm.html#call-complete-with-a-prompt). This issue arose after the release of litellm version 1.0.0, which supports OpenAI v1.0.0+. \r\n\r\nThis seems to be a compatibility issue with the new versions of litellm and llama-index, especially after the recent updates to support OpenAI v1.0.0+. Any insights or fixes for this issue would be greatly appreciated.\r\n\r\nWhen running the provided example code, I receive an `AttributeError` related to the `pop` method on a `Message` object.\n\n### Version\n\n- llama-index: 0.8.68 - litellm: 1.0.0\n\n### Steps to Reproduce\n\n1. Set up the environment with the latest versions of llama-index and litellm.\r\n2. Run the following code from the [llama-index documentation](https://docs.llamaindex.ai/en/stable/examples/llm/litellm.html#call-complete-with-a-prompt):\r\n\r\n   ```python\r\n   import os\r\n   from llama_index.llms import LiteLLM, ChatMessage\r\n   from dotenv import load_dotenv\r\n\r\n   load_dotenv()\r\n\r\n   message = ChatMessage(role=\"user\", content=\"Hey! how's it going?\")\r\n\r\n   # llm params\r\n   model = \"gpt-3.5-turbo\"\r\n   temperature = 0.9\r\n   max_tokens = 512\r\n   # openai call\r\n   llm = LiteLLM(model=model, temperature=temperature, max_tokens=max_tokens)\r\n   chat_response = llm.chat([message])\r\n\r\n   print(chat_response)\r\n   ```\n\n### Relevant Logs/Tracbacks\n\n```shell\n/home/seekndestroy/mambaforge/envs/autollm/lib/python3.10/site-packages/pydantic/main.py:308: UserWarning: Pydantic serializer warnings:\r\n  Expected `Usage` but got `dict` - serialized value may not be as expected\r\n  return self.__pydantic_serializer__.to_python(\r\nmessage_dict: Message(content=\"Hello! I'm an AI language model, so I don't have feelings, but I'm here to help you. How can I assist you today?\", role='assistant')\r\nadditional_kwargs: Message(content=\"Hello! I'm an AI language model, so I don't have feelings, but I'm here to help you. How can I assist you today?\", role='assistant')\r\nTraceback (most recent call last):\r\n  File \"/home/seekndestroy/mambaforge/envs/autollm/lib/python3.10/site-packages/pydantic/main.py\", line 751, in __getattr__\r\n    return pydantic_extra[item]\r\nKeyError: 'pop'\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nTraceback (most recent call last):\r\n  File \"/home/seekndestroy/safeVideo/github/autollm/testing.py\", line 15, in <module>\r\n    chat_response = llm.chat([message])\r\n  File \"/home/seekndestroy/mambaforge/envs/autollm/lib/python3.10/site-packages/llama_index/llms/base.py\", line 187, in wrapped_llm_chat\r\n    f_return_val = f(_self, messages, **kwargs)\r\n  File \"/home/seekndestroy/mambaforge/envs/autollm/lib/python3.10/site-packages/llama_index/llms/litellm.py\", line 123, in chat\r\n    return chat_fn(messages, **kwargs)\r\n  File \"/home/seekndestroy/mambaforge/envs/autollm/lib/python3.10/site-packages/llama_index/llms/litellm.py\", line 195, in _chat\r\n    message = from_openai_message_dict(message_dict)\r\n  File \"/home/seekndestroy/mambaforge/envs/autollm/lib/python3.10/site-packages/llama_index/llms/litellm_utils.py\", line 169, in from_openai_message_dict\r\n    additional_kwargs.pop(\"role\")\r\n  File \"/home/seekndestroy/mambaforge/envs/autollm/lib/python3.10/site-packages/pydantic/main.py\", line 753, in __getattr__\r\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}') from exc\r\nAttributeError: 'Message' object has no attribute 'pop'\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8906/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8906/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8905",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8905/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8905/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8905/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8905",
        "id": 1992235783,
        "node_id": "I_kwDOIWuq5852vxsH",
        "number": 8905,
        "title": "[Feature Request]: Support JSONB for metadata in PostgresVectorStore",
        "user": {
            "login": "spreeni",
            "id": 35889034,
            "node_id": "MDQ6VXNlcjM1ODg5MDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35889034?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/spreeni",
            "html_url": "https://github.com/spreeni",
            "followers_url": "https://api.github.com/users/spreeni/followers",
            "following_url": "https://api.github.com/users/spreeni/following{/other_user}",
            "gists_url": "https://api.github.com/users/spreeni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/spreeni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/spreeni/subscriptions",
            "organizations_url": "https://api.github.com/users/spreeni/orgs",
            "repos_url": "https://api.github.com/users/spreeni/repos",
            "events_url": "https://api.github.com/users/spreeni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/spreeni/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T08:31:36Z",
        "updated_at": "2023-11-14T22:33:23Z",
        "closed_at": "2023-11-14T22:33:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\nCurrently PostgresVectorStore uses `json` as the datatype for metadata. It would be nice to be able to use `jsonb` \r\ninstead, without having to modify the source files directly.\r\n\r\nFrom the [PostgreSQL documentation](https://www.postgresql.org/docs/current/datatype-json.html):\r\n> The json data type stores an exact copy of the input text, which processing functions must reparse on each execution; while jsonb data is stored in a decomposed binary format that makes it slightly slower to input due to added conversion overhead, but significantly faster to process, since no reparsing is needed. jsonb also supports indexing, which can be a significant advantage.\r\n\r\nI think `jsonb` would be the preferable data type here, but in order to keep backwards compatibility, it could be a constructor flag for the vector store.\r\n\r\nPossibly I can submit a PR in the coming days for this. :)\r\n\r\n\r\n### Reason\r\n\r\nI think a datatype was just chosen on implementation and this might've not been considered as a relevant issue. But also to integrate into other libraries, I think this can be worthy to implement.\r\n\r\n### Value of Feature\r\n\r\nThis would make the metadata easier to handle and to search through. For me the problem occured when connecting the Llamaindex documents with Django, which only supports `jsonb` out of the box.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8905/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8905/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8904",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8904/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8904/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8904/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8904",
        "id": 1992033783,
        "node_id": "I_kwDOIWuq5852vAX3",
        "number": 8904,
        "title": "[Question]: Why doesn't response metadata capture the information always?",
        "user": {
            "login": "ram510",
            "id": 2175155,
            "node_id": "MDQ6VXNlcjIxNzUxNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2175155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ram510",
            "html_url": "https://github.com/ram510",
            "followers_url": "https://api.github.com/users/ram510/followers",
            "following_url": "https://api.github.com/users/ram510/following{/other_user}",
            "gists_url": "https://api.github.com/users/ram510/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ram510/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ram510/subscriptions",
            "organizations_url": "https://api.github.com/users/ram510/orgs",
            "repos_url": "https://api.github.com/users/ram510/repos",
            "events_url": "https://api.github.com/users/ram510/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ram510/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-14T05:47:34Z",
        "updated_at": "2023-11-14T16:48:37Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nI have used the basic chunking and loading the data to Postgres database with the code from the example - https://gpt-index.readthedocs.io/en/v0.8.47/examples/low_level/oss_ingestion_retrieval.html\r\n\r\nHere is the the code\r\n```\r\nfrom llama_index.schema import TextNode\r\n\r\nnodes = []\r\nfor idx, text_chunk in enumerate(text_chunks):\r\n    node = TextNode(\r\n        text=text_chunk,\r\n    )\r\n    src_doc = documents[doc_idxs[idx]]\r\n    node.metadata = src_doc.metadata\r\n    nodes.append(node)\r\n```\r\n```\r\ntext_chunks = []\r\n# maintain relationship with source doc index, to help inject doc metadata in (3)\r\ndoc_idxs = []\r\nfor doc_idx, doc in enumerate(documents):\r\n    cur_text_chunks = text_splitter.split_text(doc.text)\r\n    text_chunks.extend(cur_text_chunks)\r\n    doc_idxs.extend([doc_idx] * len(cur_text_chunks))\r\n```\r\n`for node in nodes:\r\n    node_embedding = embed_model.get_text_embedding(\r\n        node.get_content(metadata_mode=\"all\")\r\n    )\r\n    node.embedding = node_embedding\r\nvector_store.add(nodes)`\r\nHere the issue I am facing, after the retrieval of the context from the database, it is not returning the metadata or the documents name it extracted the information from \r\nresponse_1.sourcenode[0].metadata =\r\n[NodeWithScore(node=TextNode(id_='0fb55059-e6cf-403e-89f0-3a5560437afb', embedding=None, metadata={'file_name': 'covid census and mortality protocol v2.docx'},....] // has document name\r\n\r\nresponse_2.sourcenode[0].metadata = [NodeWithScore(node=TextNode(id_='be4ac130-a4eb-47b6-8cac-e9c652b109ba', embedding=None, metadata={},] // no document name\r\n\r\nboth the response_1 and response_2 - contexts are chunked and stored in Postgres in with same logic\r\nhoverever metadata is being populated for smaller datasets and it is not happening for larger datasets\r\nis there anything I am missing?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8904/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8904/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8903",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8903/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8903/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8903/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8903",
        "id": 1991954321,
        "node_id": "PR_kwDOIWuq585fXoUu",
        "number": 8903,
        "title": "[version] bump to 0.8.69.post1",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-14T04:11:52Z",
        "updated_at": "2023-11-14T04:19:11Z",
        "closed_at": "2023-11-14T04:19:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8903",
            "html_url": "https://github.com/run-llama/llama_index/pull/8903",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8903.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8903.patch",
            "merged_at": "2023-11-14T04:19:10Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8903/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8903/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8902",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8902/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8902/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8902/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8902",
        "id": 1991943777,
        "node_id": "PR_kwDOIWuq585fXmBF",
        "number": 8902,
        "title": "Remove remnant of Pydantic's state in getstate",
        "user": {
            "login": "trducng",
            "id": 35283585,
            "node_id": "MDQ6VXNlcjM1MjgzNTg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/35283585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trducng",
            "html_url": "https://github.com/trducng",
            "followers_url": "https://api.github.com/users/trducng/followers",
            "following_url": "https://api.github.com/users/trducng/following{/other_user}",
            "gists_url": "https://api.github.com/users/trducng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trducng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trducng/subscriptions",
            "organizations_url": "https://api.github.com/users/trducng/orgs",
            "repos_url": "https://api.github.com/users/trducng/repos",
            "events_url": "https://api.github.com/users/trducng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trducng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T04:01:39Z",
        "updated_at": "2023-11-14T04:06:08Z",
        "closed_at": "2023-11-14T04:06:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8902",
            "html_url": "https://github.com/run-llama/llama_index/pull/8902",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8902.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8902.patch",
            "merged_at": "2023-11-14T04:06:08Z"
        },
        "body": "# Description\r\n\r\nSince we don't subclass Pydantic's `__getstate__`, we will remove the `__dict__` in our `__getstate__` operation as well.\r\nFixes #8895\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8902/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8902/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8901",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8901/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8901/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8901/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8901",
        "id": 1991885370,
        "node_id": "I_kwDOIWuq5852ucI6",
        "number": 8901,
        "title": "[Question]: How to retrieve only?",
        "user": {
            "login": "SCUT-ChenBD",
            "id": 49072146,
            "node_id": "MDQ6VXNlcjQ5MDcyMTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/49072146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SCUT-ChenBD",
            "html_url": "https://github.com/SCUT-ChenBD",
            "followers_url": "https://api.github.com/users/SCUT-ChenBD/followers",
            "following_url": "https://api.github.com/users/SCUT-ChenBD/following{/other_user}",
            "gists_url": "https://api.github.com/users/SCUT-ChenBD/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SCUT-ChenBD/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SCUT-ChenBD/subscriptions",
            "organizations_url": "https://api.github.com/users/SCUT-ChenBD/orgs",
            "repos_url": "https://api.github.com/users/SCUT-ChenBD/repos",
            "events_url": "https://api.github.com/users/SCUT-ChenBD/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SCUT-ChenBD/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-14T02:50:00Z",
        "updated_at": "2023-11-14T03:02:31Z",
        "closed_at": "2023-11-14T02:52:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nIn a Graph Index with a tree index at the bottom and a list index at the top, how can I only return the search results without conducting LLM questions and answers?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8901/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8901/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8900",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8900/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8900/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8900/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8900",
        "id": 1991866848,
        "node_id": "PR_kwDOIWuq585fXV0-",
        "number": 8900,
        "title": "Init Image and Multi Modal Retriever Abstraction",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-14T02:30:59Z",
        "updated_at": "2023-11-17T02:09:07Z",
        "closed_at": "2023-11-17T02:09:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8900",
            "html_url": "https://github.com/run-llama/llama_index/pull/8900",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8900.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8900.patch",
            "merged_at": "2023-11-17T02:09:06Z"
        },
        "body": "# Description\r\n\r\n1. have basic image retriever\r\n2.  have basic multi modal retriever\r\n3. Current MM vector store retriever based on MM retriever\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8900/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8900/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8899",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8899/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8899/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8899/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8899",
        "id": 1991690802,
        "node_id": "PR_kwDOIWuq585fWuzu",
        "number": 8899,
        "title": "[version] bump to v0.8.69",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-14T00:11:19Z",
        "updated_at": "2023-11-14T00:15:24Z",
        "closed_at": "2023-11-14T00:15:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8899",
            "html_url": "https://github.com/run-llama/llama_index/pull/8899",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8899.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8899.patch",
            "merged_at": "2023-11-14T00:15:23Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8899/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8899/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8898",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8898/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8898/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8898/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8898",
        "id": 1991648608,
        "node_id": "PR_kwDOIWuq585fWltB",
        "number": 8898,
        "title": "update docs",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T23:23:13Z",
        "updated_at": "2023-11-15T06:34:56Z",
        "closed_at": "2023-11-15T06:34:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8898",
            "html_url": "https://github.com/run-llama/llama_index/pull/8898",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8898.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8898.patch",
            "merged_at": "2023-11-15T06:34:55Z"
        },
        "body": "This PR adds ingestion pipeline to the docs, and cleans up various other aspects of the docs in relation to the changes in v0.9\r\n\r\nOne particularly thorny issue was\r\n\r\n```\r\ntext_splitter = SentenceSplitter(chunk_size=512, chunk_overlap=10)\r\nservice_context = ServiceContext.from_defaults(node_parser=text_splitter)\r\n```\r\n\r\nso I added `text_splitter` as a kwarg to the service context, just to make the syntax less confusing (even though under the hood, the text splitter extends the node parser class)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8898/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8898/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8897",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8897/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8897/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8897/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8897",
        "id": 1991626811,
        "node_id": "PR_kwDOIWuq585fWg7i",
        "number": 8897,
        "title": "Init Chroma and LLamaIndex Multi-Modal Demo",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-13T23:01:17Z",
        "updated_at": "2023-11-14T00:01:31Z",
        "closed_at": "2023-11-14T00:01:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8897",
            "html_url": "https://github.com/run-llama/llama_index/pull/8897",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8897.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8897.patch",
            "merged_at": "2023-11-14T00:01:30Z"
        },
        "body": "# Description\r\n\r\nSimple demo using Chroma MM vector store for MM retrieval\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8897/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8897/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8895",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8895/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8895/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8895/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8895",
        "id": 1991381330,
        "node_id": "I_kwDOIWuq5852shFS",
        "number": 8895,
        "title": "[Bug]: cannot deepcopy TextNode",
        "user": {
            "login": "stdweird",
            "id": 1517606,
            "node_id": "MDQ6VXNlcjE1MTc2MDY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1517606?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/stdweird",
            "html_url": "https://github.com/stdweird",
            "followers_url": "https://api.github.com/users/stdweird/followers",
            "following_url": "https://api.github.com/users/stdweird/following{/other_user}",
            "gists_url": "https://api.github.com/users/stdweird/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/stdweird/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/stdweird/subscriptions",
            "organizations_url": "https://api.github.com/users/stdweird/orgs",
            "repos_url": "https://api.github.com/users/stdweird/repos",
            "events_url": "https://api.github.com/users/stdweird/events{/privacy}",
            "received_events_url": "https://api.github.com/users/stdweird/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-13T19:58:58Z",
        "updated_at": "2023-11-14T00:16:21Z",
        "closed_at": "2023-11-14T00:16:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nwhen trying to use the metadataextractor, it fails with deepcopy a TextNode. this can be reproduced with\r\n\r\n```\r\n>>> t=TextNode(text='abc')\r\n>>> deepcopy(t)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/usr/lib64/python3.11/copy.py\", line 161, in deepcopy\r\n    rv = reductor(4)\r\n         ^^^^^^^^^^^\r\n  File \"/home/me/.local/lib/python3.11/site-packages/llama_index/schema.py\", line 48, in __getstate__\r\n    state[\"__dict__\"].pop(\"tokenizer\", None)\r\n    ~~~~~^^^^^^^^^^^^\r\nKeyError: '__dict__'\r\n```\r\n\r\nThis is with #8889 in place, using the original code of latest release i get \r\n\r\n```  File \"/home/me/.local/lib/python3.11/site-packages/llama_index/node_parser/extractors/metadata_extractors.py\", line 116, in process_nodes\r\n    new_nodes = [deepcopy(node) for node in nodes]\r\n                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/me/.local/lib/python3.11/site-packages/llama_index/node_parser/extractors/metadata_extractors.py\", line 116, in <listcomp>\r\n    new_nodes = [deepcopy(node) for node in nodes]\r\n                 ^^^^^^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/copy.py\", line 172, in deepcopy\r\n    y = _reconstruct(x, memo, *rv)\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/usr/lib64/python3.11/copy.py\", line 273, in _reconstruct\r\n    y.__setstate__(state)\r\n  File \"pydantic/main.py\", line 416, in pydantic.main.BaseModel.__setstate__\r\nKeyError: '__dict__'\r\n\r\n```\r\n\r\n\r\n\r\n### Version\r\n\r\nlatest 0.8.68, and with #8889 as well\r\n\r\n### Steps to Reproduce\r\n\r\n>>> t=TextNode(text='abc')\r\n>>> deepcopy(t)\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8895/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8895/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8894",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8894/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8894/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8894/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8894",
        "id": 1991298845,
        "node_id": "I_kwDOIWuq5852sM8d",
        "number": 8894,
        "title": "[Bug]: LlamaCPP on CPU n_threads not working",
        "user": {
            "login": "pabl-o-ce",
            "id": 4999086,
            "node_id": "MDQ6VXNlcjQ5OTkwODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4999086?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pabl-o-ce",
            "html_url": "https://github.com/pabl-o-ce",
            "followers_url": "https://api.github.com/users/pabl-o-ce/followers",
            "following_url": "https://api.github.com/users/pabl-o-ce/following{/other_user}",
            "gists_url": "https://api.github.com/users/pabl-o-ce/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pabl-o-ce/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pabl-o-ce/subscriptions",
            "organizations_url": "https://api.github.com/users/pabl-o-ce/orgs",
            "repos_url": "https://api.github.com/users/pabl-o-ce/repos",
            "events_url": "https://api.github.com/users/pabl-o-ce/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pabl-o-ce/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-13T19:12:01Z",
        "updated_at": "2023-11-14T15:21:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nI'm trying to use CPU LlamaCPP\r\n\r\nbut whenever I add n_threads to use on limited number of threads it  wont work keep using all threads.\r\n\r\nhow can this been supported better or maybe I'm doing something wrong\r\n\r\n### Version\r\n\r\n^0.8.55\r\n\r\n### Steps to Reproduce\r\n\r\n```python\r\nllm = LlamaCPP(\r\n      model_path=f\"/mnt/v1/ai-models/{model}\",\r\n      temperature=temperature,\r\n      max_new_tokens=max_new_tokens,\r\n      context_window=context_window,\r\n      generate_kwargs={\r\n        \"top_k\": top_k,\r\n        \"top_p\": top_p,\r\n        \"repeat_penalty\": repeat_penalty\r\n      },\r\n      model_kwargs={\r\n        \"n_threads\": 4\r\n      },\r\n      messages_to_prompt=messages_to_prompt,\r\n      completion_to_prompt=completion_to_prompt,\r\n      verbose=True,\r\n    )\r\n```\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8894/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8893",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8893/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8893/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8893/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8893",
        "id": 1991269635,
        "node_id": "I_kwDOIWuq5852sF0D",
        "number": 8893,
        "title": "[Bug]: SimpleDirectoryReader excludes input_dir if hidden",
        "user": {
            "login": "janaka",
            "id": 51779,
            "node_id": "MDQ6VXNlcjUxNzc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/51779?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/janaka",
            "html_url": "https://github.com/janaka",
            "followers_url": "https://api.github.com/users/janaka/followers",
            "following_url": "https://api.github.com/users/janaka/following{/other_user}",
            "gists_url": "https://api.github.com/users/janaka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/janaka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/janaka/subscriptions",
            "organizations_url": "https://api.github.com/users/janaka/orgs",
            "repos_url": "https://api.github.com/users/janaka/repos",
            "events_url": "https://api.github.com/users/janaka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/janaka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-13T18:56:47Z",
        "updated_at": "2023-12-07T08:51:42Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nCalling `SimplyDirectoryReader()` with `input_dir` as a hidden folder fails to read files because the exclude hidden folder logging is ignoring the input folder itself. I believe isn't the intended behaviour. Rather only hidden folders within the `input_dir` should be excluded when `exclude_hidden=True`\r\n\r\n`docs = SimpleDirectoryReader(\"./.mydata_folder/subfolder/\", file_metadata=lambda_metadata, exclude_hidden=True).load_data()`\r\n\r\nThe above should read files within the input folder even though the input folder.\r\n\r\nI think v0.8.57 is when this issue was introduced. \r\n\r\n\r\n### Version\r\n\r\n0.8.68\r\n\r\n### Steps to Reproduce\r\n\r\n`docs = SimpleDirectoryReader(\"./.mydata_folder/subfolder/\", file_metadata=lambda_metadata, exclude_hidden=True).load_data()`\r\n\r\n`docs = SimpleDirectoryReader(\"./.mydata_folder/subfolder/\", file_metadata=lambda_metadata, exclude_hidden=False).load_data()`\r\n\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nI believe this is the relevant line of code\r\n\r\nhttps://github.com/run-llama/llama_index/blob/ed596e02601348e082ba50ba4c176cf7a69ee744/llama_index/readers/file/base.py#L150\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8893/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8893/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8892",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8892/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8892/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8892/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8892",
        "id": 1991234522,
        "node_id": "PR_kwDOIWuq585fVKpj",
        "number": 8892,
        "title": "fix: Qdrant class_name property",
        "user": {
            "login": "Anush008",
            "id": 46051506,
            "node_id": "MDQ6VXNlcjQ2MDUxNTA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/46051506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Anush008",
            "html_url": "https://github.com/Anush008",
            "followers_url": "https://api.github.com/users/Anush008/followers",
            "following_url": "https://api.github.com/users/Anush008/following{/other_user}",
            "gists_url": "https://api.github.com/users/Anush008/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Anush008/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Anush008/subscriptions",
            "organizations_url": "https://api.github.com/users/Anush008/orgs",
            "repos_url": "https://api.github.com/users/Anush008/repos",
            "events_url": "https://api.github.com/users/Anush008/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Anush008/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-13T18:37:44Z",
        "updated_at": "2023-11-13T19:44:07Z",
        "closed_at": "2023-11-13T19:31:05Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8892",
            "html_url": "https://github.com/run-llama/llama_index/pull/8892",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8892.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8892.patch",
            "merged_at": "2023-11-13T19:31:05Z"
        },
        "body": "# Description\r\n\r\nResolves a typo in the Qdrant vectorstore implementation.\r\n\r\n## Type of Change\r\n\r\n- [x] Fix (non-breaking change which fixes an issue)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8892/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8892/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8891",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8891/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8891/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8891/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8891",
        "id": 1991175062,
        "node_id": "PR_kwDOIWuq585fU9oF",
        "number": 8891,
        "title": "remove stray print",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-13T17:59:35Z",
        "updated_at": "2023-11-13T18:12:46Z",
        "closed_at": "2023-11-13T18:12:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8891",
            "html_url": "https://github.com/run-llama/llama_index/pull/8891",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8891.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8891.patch",
            "merged_at": "2023-11-13T18:12:45Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8891/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8891/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8890",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8890/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8890/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8890/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8890",
        "id": 1991140433,
        "node_id": "PR_kwDOIWuq585fU13m",
        "number": 8890,
        "title": "Remediate RCE vulnerability CVE-2023-39662",
        "user": {
            "login": "rostrovsky",
            "id": 13874614,
            "node_id": "MDQ6VXNlcjEzODc0NjE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13874614?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rostrovsky",
            "html_url": "https://github.com/rostrovsky",
            "followers_url": "https://api.github.com/users/rostrovsky/followers",
            "following_url": "https://api.github.com/users/rostrovsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/rostrovsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rostrovsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rostrovsky/subscriptions",
            "organizations_url": "https://api.github.com/users/rostrovsky/orgs",
            "repos_url": "https://api.github.com/users/rostrovsky/repos",
            "events_url": "https://api.github.com/users/rostrovsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rostrovsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-13T17:40:55Z",
        "updated_at": "2023-12-10T20:05:29Z",
        "closed_at": "2023-11-20T16:18:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8890",
            "html_url": "https://github.com/run-llama/llama_index/pull/8890",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8890.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8890.patch",
            "merged_at": "2023-11-20T16:18:25Z"
        },
        "body": "# Description\r\n\r\nIntroduced `exec_utlis` which allow to `exec` and `eval` within safe interpreter context in order to prevent RCE vulnerabilities.\r\n\r\nFixes #7054\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8890/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8890/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8889",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8889/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8889/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8889/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8889",
        "id": 1990988421,
        "node_id": "PR_kwDOIWuq585fUUpq",
        "number": 8889,
        "title": "fix pickling again",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-13T16:15:46Z",
        "updated_at": "2023-11-14T04:03:02Z",
        "closed_at": "2023-11-13T16:33:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8889",
            "html_url": "https://github.com/run-llama/llama_index/pull/8889",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8889.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8889.patch",
            "merged_at": "2023-11-13T16:33:46Z"
        },
        "body": "Another [PR](https://github.com/run-llama/llama_index/pull/8880) pointed out that the original pickling support change was causing pickled data to be un-loadable.\r\n\r\nWhile their change fixed some immediate issues, the larger pickling issue remains. \r\n\r\nIn order to support pickling indexes, chat engines, and query engines, I introduce this improved fix",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8889/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8889/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8888",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8888/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8888/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8888/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8888",
        "id": 1990977186,
        "node_id": "I_kwDOIWuq5852q-ai",
        "number": 8888,
        "title": "[Question]: Two Questions, One Answer",
        "user": {
            "login": "jamessdixon",
            "id": 1394644,
            "node_id": "MDQ6VXNlcjEzOTQ2NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1394644?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamessdixon",
            "html_url": "https://github.com/jamessdixon",
            "followers_url": "https://api.github.com/users/jamessdixon/followers",
            "following_url": "https://api.github.com/users/jamessdixon/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamessdixon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamessdixon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamessdixon/subscriptions",
            "organizations_url": "https://api.github.com/users/jamessdixon/orgs",
            "repos_url": "https://api.github.com/users/jamessdixon/repos",
            "events_url": "https://api.github.com/users/jamessdixon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamessdixon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-13T16:09:59Z",
        "updated_at": "2023-11-15T19:43:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI asked the same question on discord here:  https://discord.com/channels/1059199217496772688/1173654034641584249\r\n\r\nHere is my base code:\r\n\r\nmodel_url = \"https://huggingface.co/TheBloke/Llama-2-13B-chat-GGUF/resolve/main/llama-2-13b-chat.Q4_0.gguf\"\r\nllm = LlamaCPP(model_url=model_url,temperature=0.1,max_new_tokens=256,context_window=3900,generate_kwargs={},model_kwargs={\"n_gpu_layers\": 1},verbose=True,)\r\nPyMuPDFReader = download_loader(\"PyMuPDFReader\")\r\nloader = PyMuPDFReader()\r\npdfs = loader.load_data(file_path=Path('test_invoice.pdf'), metadata=False)\r\npdf = pdfs[0]\r\npdf_text = pdf.text\r\ndocuments = [Document(text=pdf_text)]\r\n\r\nembed_model = HuggingFaceEmbedding(model_name=\"BAAI/bge-small-en-v1.5\")\r\nservice_context = ServiceContext.from_defaults(llm=llm,embed_model=embed_model,)\r\nindex = VectorStoreIndex.from_documents(documents, service_context=service_context)\r\nquery_engine = index.as_query_engine()\r\n\r\nWhen I run this I get the correct answer:\r\nresponse = query_engine.query(\"Does it have an Invoice #?\")\r\n\r\nWhen I run this I get the correct answer:\r\nresponse = query_engine.query(\"Does it have an Invoice Amount?\")\r\n\r\nWhen I run this, the first answer is correct and the second is always \"Empty Response\"\r\nresponse = query_engine.query(\"Does it have an Invoice #?\")\r\nresponse = query_engine.query(\"Does it have an Invoice Amount?\")\r\n\r\nWhat am I doing wrong?\r\nThanks in advance\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8888/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8888/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8887",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8887/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8887/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8887/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8887",
        "id": 1990522144,
        "node_id": "PR_kwDOIWuq585fSuxC",
        "number": 8887,
        "title": "Updated limit for deleting weaviate objects",
        "user": {
            "login": "omkargadute",
            "id": 55269811,
            "node_id": "MDQ6VXNlcjU1MjY5ODEx",
            "avatar_url": "https://avatars.githubusercontent.com/u/55269811?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/omkargadute",
            "html_url": "https://github.com/omkargadute",
            "followers_url": "https://api.github.com/users/omkargadute/followers",
            "following_url": "https://api.github.com/users/omkargadute/following{/other_user}",
            "gists_url": "https://api.github.com/users/omkargadute/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/omkargadute/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/omkargadute/subscriptions",
            "organizations_url": "https://api.github.com/users/omkargadute/orgs",
            "repos_url": "https://api.github.com/users/omkargadute/repos",
            "events_url": "https://api.github.com/users/omkargadute/events{/privacy}",
            "received_events_url": "https://api.github.com/users/omkargadute/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T12:08:01Z",
        "updated_at": "2023-11-14T11:45:35Z",
        "closed_at": "2023-11-14T03:30:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8887",
            "html_url": "https://github.com/run-llama/llama_index/pull/8887",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8887.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8887.patch",
            "merged_at": "2023-11-14T03:30:43Z"
        },
        "body": "While using weaviate via the vector store, we found out that we can delete only 100 objects at once using the delete functions, so we searched through the weaviate class in the llama index library to find out that the delete function first calls the get function for fetching the required objects based on the parameters user has passed. By default the get query returns 100 objects only thus resulting in deletion of only 100 objects. We have modified the get query and added a \"with_limit\" attribute to mention the limit of objects it can return. We have set it to 10000, as weaviate supports only retrieval of 10000 objects at once.  ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8887/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8887/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8886",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8886/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8886/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8886/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8886",
        "id": 1990458368,
        "node_id": "I_kwDOIWuq5852o_wA",
        "number": 8886,
        "title": "[Question]: Chat Engines don't support kwargs for chat methods?",
        "user": {
            "login": "OliverFarren",
            "id": 5064282,
            "node_id": "MDQ6VXNlcjUwNjQyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5064282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/OliverFarren",
            "html_url": "https://github.com/OliverFarren",
            "followers_url": "https://api.github.com/users/OliverFarren/followers",
            "following_url": "https://api.github.com/users/OliverFarren/following{/other_user}",
            "gists_url": "https://api.github.com/users/OliverFarren/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/OliverFarren/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/OliverFarren/subscriptions",
            "organizations_url": "https://api.github.com/users/OliverFarren/orgs",
            "repos_url": "https://api.github.com/users/OliverFarren/repos",
            "events_url": "https://api.github.com/users/OliverFarren/events{/privacy}",
            "received_events_url": "https://api.github.com/users/OliverFarren/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-13T11:29:41Z",
        "updated_at": "2023-11-13T18:13:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nWith the recent OpenAI update i'd like to be able use JSON output and based on the one [notebook](https://github.com/run-llama/llama_index/blob/29ef306ae0536de44840ca5acfdf93d84b9a560c/docs/examples/llm/openai_json_vs_function_calling.ipynb#L317) for this it seems like I can pass to my LLM `response_format={\"type\": \"json_object\"}`. \r\n\r\nBut, i'm not using my LLM directly, instead i'm using one of the abstractions: The ContextChatEngine. Looking at the method signature for `chat` and `achat` neither seem to support **kwargs which means If I want to use this feature, I either need to make a custom chat engine and essentially copy and maintain the chat method, or no longer use this abstraction. \r\n\r\nMy question is, is there a design reason that **kwargs are not passed in to these methods and subsequently propagated down into the llm's chat method? The [documentation](https://gpt-index.readthedocs.io/en/latest/module_guides/deploying/chat_engines/usage_pattern.html) is a little terse in this area\r\n\r\nIdeally what I want is a change to the `achat` and `chat` methods from what is there currently:\r\n``` python\r\n    @trace_method(\"chat\")\r\n    def chat(\r\n        self, message: str, chat_history: Optional[List[ChatMessage]] = None\r\n    ) -> AgentChatResponse:\r\n    ...\r\n    chat_response = self._llm.chat(all_messages)\r\n    ...\r\n```\r\n\r\nTo:\r\n``` python\r\n    @trace_method(\"chat\")\r\n    def chat(\r\n        self, message: str, chat_history: Optional[List[ChatMessage]] = None, **kwargs\r\n    ) -> AgentChatResponse:\r\n    ...\r\n    chat_response = self._llm.chat(all_messages, **kwargs)\r\n    ...\r\n```\r\n\r\nIs there a reason this wouldn't be a good idea? Happy to open a PR if not but seems like there'd have been a reason. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8886/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8886/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8885",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8885/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8885/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8885/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8885",
        "id": 1990099838,
        "node_id": "I_kwDOIWuq5852noN-",
        "number": 8885,
        "title": "[Question]: Merge storage_context",
        "user": {
            "login": "SCUT-ChenBD",
            "id": 49072146,
            "node_id": "MDQ6VXNlcjQ5MDcyMTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/49072146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SCUT-ChenBD",
            "html_url": "https://github.com/SCUT-ChenBD",
            "followers_url": "https://api.github.com/users/SCUT-ChenBD/followers",
            "following_url": "https://api.github.com/users/SCUT-ChenBD/following{/other_user}",
            "gists_url": "https://api.github.com/users/SCUT-ChenBD/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SCUT-ChenBD/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SCUT-ChenBD/subscriptions",
            "organizations_url": "https://api.github.com/users/SCUT-ChenBD/orgs",
            "repos_url": "https://api.github.com/users/SCUT-ChenBD/repos",
            "events_url": "https://api.github.com/users/SCUT-ChenBD/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SCUT-ChenBD/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-13T08:15:30Z",
        "updated_at": "2023-11-14T18:53:51Z",
        "closed_at": "2023-11-14T18:53:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nIf I build the index from the documents, then I can store all the 'data' in the storage_context. But if I use storage_context = StorageContext.from_defaults(persist_dir=save_index_dir), then I can only get the storage_context for each document individually.\r\nIn this case, how to merge the storage_context loaded from multiple documents into the same one?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8885/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8885/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8884",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8884/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8884/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8884/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8884",
        "id": 1990015348,
        "node_id": "I_kwDOIWuq5852nTl0",
        "number": 8884,
        "title": "[Feature Request]: Fusion_RAG + Semi_Structured_RAG?",
        "user": {
            "login": "Lauorie",
            "id": 95747416,
            "node_id": "U_kgDOBbT9WA",
            "avatar_url": "https://avatars.githubusercontent.com/u/95747416?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Lauorie",
            "html_url": "https://github.com/Lauorie",
            "followers_url": "https://api.github.com/users/Lauorie/followers",
            "following_url": "https://api.github.com/users/Lauorie/following{/other_user}",
            "gists_url": "https://api.github.com/users/Lauorie/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Lauorie/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Lauorie/subscriptions",
            "organizations_url": "https://api.github.com/users/Lauorie/orgs",
            "repos_url": "https://api.github.com/users/Lauorie/repos",
            "events_url": "https://api.github.com/users/Lauorie/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Lauorie/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-13T07:10:39Z",
        "updated_at": "2023-11-23T04:52:00Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nThere are a lot of tables and text in my data. First of all, I have tried Fusion_RAG, which is much better than the baseline, but it is limited to the text, and the table can not be processed, so I wondered if there a way could combine [Semi_Structured_RAG](https://github.com/langchain-ai/langchain/blob/master/cookbook/Semi_Structured_RAG.ipynb) and [Fusion_RAG](https://github.com/run-llama/llama_index/blob/main/docs/examples/low_level/fusion_retriever.ipynb) so that I could deal with both text and table at the same time. ^-^\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8884/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8884/timeline",
        "performed_via_github_app": null,
        "state_reason": "reopened"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8883",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8883/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8883/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8883/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8883",
        "id": 1989995242,
        "node_id": "I_kwDOIWuq5852nOrq",
        "number": 8883,
        "title": "[Question]: Merge vectore index",
        "user": {
            "login": "SCUT-ChenBD",
            "id": 49072146,
            "node_id": "MDQ6VXNlcjQ5MDcyMTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/49072146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SCUT-ChenBD",
            "html_url": "https://github.com/SCUT-ChenBD",
            "followers_url": "https://api.github.com/users/SCUT-ChenBD/followers",
            "following_url": "https://api.github.com/users/SCUT-ChenBD/following{/other_user}",
            "gists_url": "https://api.github.com/users/SCUT-ChenBD/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SCUT-ChenBD/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SCUT-ChenBD/subscriptions",
            "organizations_url": "https://api.github.com/users/SCUT-ChenBD/orgs",
            "repos_url": "https://api.github.com/users/SCUT-ChenBD/repos",
            "events_url": "https://api.github.com/users/SCUT-ChenBD/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SCUT-ChenBD/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-13T06:51:25Z",
        "updated_at": "2023-11-13T15:44:20Z",
        "closed_at": "2023-11-13T15:44:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nIf I have two documents, and each document has a vector index built, how can I merge the two vector indexes together?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8883/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8883/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8882",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8882/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8882/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8882/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8882",
        "id": 1989982611,
        "node_id": "PR_kwDOIWuq585fQ5IP",
        "number": 8882,
        "title": "[Docs] Fixed broken links in the Customization tutorial docs",
        "user": {
            "login": "anupj",
            "id": 177374,
            "node_id": "MDQ6VXNlcjE3NzM3NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/177374?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anupj",
            "html_url": "https://github.com/anupj",
            "followers_url": "https://api.github.com/users/anupj/followers",
            "following_url": "https://api.github.com/users/anupj/following{/other_user}",
            "gists_url": "https://api.github.com/users/anupj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anupj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anupj/subscriptions",
            "organizations_url": "https://api.github.com/users/anupj/orgs",
            "repos_url": "https://api.github.com/users/anupj/repos",
            "events_url": "https://api.github.com/users/anupj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anupj/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-13T06:38:54Z",
        "updated_at": "2023-11-13T15:55:48Z",
        "closed_at": "2023-11-13T15:55:48Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8882",
            "html_url": "https://github.com/run-llama/llama_index/pull/8882",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8882.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8882.patch",
            "merged_at": "2023-11-13T15:55:48Z"
        },
        "body": "# Description\r\n\r\nThe [customization tutorial docs](https://docs.llamaindex.ai/en/stable/getting_started/customization.html) had a bunch of broken links for the following:\r\n1. retrievers\r\n2. query engines\r\n3. response modes\r\n4. streaming responses\r\n5. chat engine\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n\r\n- [ x ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- I ran the tests as per the repo instructions\r\n- I didn't write any additional test because this is a docs change\r\n\r\n# Suggested Checklist:\r\n\r\n- [ x ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ x ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8882/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8882/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8881",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8881/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8881/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8881/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8881",
        "id": 1989962606,
        "node_id": "I_kwDOIWuq5852nGtu",
        "number": 8881,
        "title": "[Bug]: Warning raising \"llama_index.llms.openai_utils:Retrying llama_index.embeddings.openai.get_embeddings\" ",
        "user": {
            "login": "amindadgar",
            "id": 48308230,
            "node_id": "MDQ6VXNlcjQ4MzA4MjMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/48308230?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amindadgar",
            "html_url": "https://github.com/amindadgar",
            "followers_url": "https://api.github.com/users/amindadgar/followers",
            "following_url": "https://api.github.com/users/amindadgar/following{/other_user}",
            "gists_url": "https://api.github.com/users/amindadgar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amindadgar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amindadgar/subscriptions",
            "organizations_url": "https://api.github.com/users/amindadgar/orgs",
            "repos_url": "https://api.github.com/users/amindadgar/repos",
            "events_url": "https://api.github.com/users/amindadgar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amindadgar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-13T06:18:19Z",
        "updated_at": "2023-11-13T16:51:57Z",
        "closed_at": "2023-11-13T16:51:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nWhen I'm trying to generate embedding using `VectorStoreIndex.from_documents` I'm getting the following error\r\n```RateLimitError: Rate limit reached for text-embedding-ada-002 in organization org-********** on requests per min (RPM): Limit 3, Used 3, Requested 1. Please try again in 20s. Visit https://platform.openai.com/account/rate-limits to learn more. You can increase your rate limit by adding a payment method to your account at https://platform.openai.com/account/billing.```\r\n\r\nI know this is related to the openai limits but the problem with the llama_index is it does have min waiting time for 4 seconds and max for 10. Why this was configured as 4 to 10 seconds? (while the openai limits are per minute which means the minimum could be 60 and maximum can be something like 120 seconds or even a day)\r\n\r\nIf it does sounds right to update the parameters, I'm happy to open a PR and update these parameters within the library.\r\n\r\n### Version\r\n\r\n0.8.61\r\n\r\n### Steps to Reproduce\r\n\r\n1. Load some long documents (with long texts maybe)\r\n2. Using the free openai API tier, call the `PGVectorIndex.from_documents` passing the documents to the method.\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nWARNING:llama_index.llms.openai_utils:Retrying llama_index.embeddings.openai.get_embeddings in 0.1008994285848912 seconds as it raised RateLimitError: Rate limit reached for text-embedding-ada-002 in organization org-************ on requests per min (RPM): Limit 3, Used 3, Requested 1. Please try again in 20s. Visit https://platform.openai.com/account/rate-limits to learn more. You can increase your rate limit by adding a payment method to your account at https://platform.openai.com/account/billing..\r\nWARNING:llama_index.llms.openai_utils:Retrying llama_index.embeddings.openai.get_embeddings in 1.190891930285499 seconds as it raised RateLimitError: Rate limit reached for text-embedding-ada-002 in organization org-************ on requests per min (RPM): Limit 3, Used 3, Requested 1. Please try again in 20s. Visit https://platform.openai.com/account/rate-limits to learn more. You can increase your rate limit by adding a payment method to your account at https://platform.openai.com/account/billing..\r\nWARNING:llama_index.llms.openai_utils:Retrying llama_index.embeddings.openai.get_embeddings in 2.7535836731643997 seconds as it raised RateLimitError: Rate limit reached for text-embedding-ada-002 in organization org-************ on requests per min (RPM): Limit 3, Used 3, Requested 1. Please try again in 20s. Visit https://platform.openai.com/account/rate-limits to learn more. You can increase your rate limit by adding a payment method to your account at https://platform.openai.com/account/billing..\r\nWARNING:llama_index.llms.openai_utils:Retrying llama_index.embeddings.openai.get_embeddings in 3.5981531505702584 seconds as it raised RateLimitError: Rate limit reached for text-embedding-ada-002 in organization org-************ on requests per min (RPM): Limit 3, Used 3, Requested 1. Please try again in 20s. Visit https://platform.openai.com/account/rate-limits to learn more. You can increase your rate limit by adding a payment method to your account at https://platform.openai.com/account/billing..\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8881/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8881/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8880",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8880/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8880/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8880/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8880",
        "id": 1989893223,
        "node_id": "PR_kwDOIWuq585fQlr_",
        "number": 8880,
        "title": "Subclass getstate from pydantic's BaseModel to fix cannot pickle and unpickle TextNode",
        "user": {
            "login": "trducng",
            "id": 35283585,
            "node_id": "MDQ6VXNlcjM1MjgzNTg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/35283585?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/trducng",
            "html_url": "https://github.com/trducng",
            "followers_url": "https://api.github.com/users/trducng/followers",
            "following_url": "https://api.github.com/users/trducng/following{/other_user}",
            "gists_url": "https://api.github.com/users/trducng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/trducng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/trducng/subscriptions",
            "organizations_url": "https://api.github.com/users/trducng/orgs",
            "repos_url": "https://api.github.com/users/trducng/repos",
            "events_url": "https://api.github.com/users/trducng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/trducng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-13T04:57:55Z",
        "updated_at": "2023-11-13T16:04:20Z",
        "closed_at": "2023-11-13T16:04:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8880",
            "html_url": "https://github.com/run-llama/llama_index/pull/8880",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8880.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8880.patch",
            "merged_at": "2023-11-13T16:04:20Z"
        },
        "body": "# Description\r\n\r\nCannot pickle and then unpickle TextNode object. This is due to `BaseComponent`'s `__getstate__` completely overwrites `pydantic.BaseModels`'s `__getstate__`. Example:\r\n\r\n```python\r\nimport pickle\r\nfrom llama_index.schema import TextNode\r\n\r\nabc = TextNode(text=\"abc\")\r\n\r\n# save ok\r\nwith open(\"abc.pkl\", \"wb\") as fo:\r\n    pickle.dump(abc, fo)\r\n\r\n# error when load\r\nwith open(\"abc.pkl\", \"rb\") as fi:\r\n    data = pickle.load(fi)\r\n```\r\n\r\nStack trace:\r\n```\r\nFile ~/.cache/pypoetry/virtualenvs/llama-index-Jalitqr9-py3.9/lib/python3.9/site-packages/pydantic/main.py:416, in pydantic.main.BaseModel.__setstate__()\r\n\r\nKeyError: '__dict__'\r\n```\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n- [x] Test with the snippet above\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8880/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8880/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8879",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8879/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8879/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8879/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8879",
        "id": 1989838999,
        "node_id": "I_kwDOIWuq5852moiX",
        "number": 8879,
        "title": "[Question]: callback_manager can not get message for `StreamingAgentChatResponse` on `event.on_end`",
        "user": {
            "login": "azurewtl",
            "id": 5175672,
            "node_id": "MDQ6VXNlcjUxNzU2NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5175672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/azurewtl",
            "html_url": "https://github.com/azurewtl",
            "followers_url": "https://api.github.com/users/azurewtl/followers",
            "following_url": "https://api.github.com/users/azurewtl/following{/other_user}",
            "gists_url": "https://api.github.com/users/azurewtl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/azurewtl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/azurewtl/subscriptions",
            "organizations_url": "https://api.github.com/users/azurewtl/orgs",
            "repos_url": "https://api.github.com/users/azurewtl/repos",
            "events_url": "https://api.github.com/users/azurewtl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/azurewtl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-13T03:51:55Z",
        "updated_at": "2023-11-14T12:31:13Z",
        "closed_at": "2023-11-14T12:31:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nCurrent callback for `ReAct` agent will produce multiple `LLM` event/span at the same level.\r\nA more elegant way is to wrap all event in a `parent event`, so that one conversation(`agent.chat(xx)`) will shown in one line. \r\n`chat` or `achat` entry point works fine, the problem is in `stream_chat`.\r\n### following show the traditional way of wrapping one conversation in a event/span\r\n```python\r\n@trace_method(\"chat\")\r\ndef stream_chat(self, message, chat_history) -> StreamingAgentChatResponse:\r\n    with self.callback_manager.event(CBEventType.CHAT) as event:\r\n      ```lots of agent logic```\r\n      chat_stream_response = StreamingAgentChatResponse(chat_stream=response_stream)\r\n      event.on_end(payload={EventPayload.MESSAGE: \u203c\ufe0f how_can_I_get_message\u203c\ufe0f })\r\n    return chat_stream_response\r\n```\r\nThe issue is in the second last line, when the event ends, how am I suppose to get `chat_response.context`, with return `chat_stream_response`.`response_gen` is a generator.\r\n\r\nIn `llama_index/llms/base.py`, there is a decorator `llm_chat_callback()`. However our return value`chat_stream_response` has generator in it's attribute, so we can not `yield` by decorator\r\n```python\r\ndef wrapped_gen() -> ChatResponseGen:\r\n      last_response = None\r\n      for x in f_return_val:\r\n          yield cast(ChatResponse, x)\r\n          last_response = x\r\n\r\n      callback_manager.on_event_end(\r\n          CBEventType.LLM,\r\n          payload={\r\n              EventPayload.MESSAGES: messages,\r\n              EventPayload.RESPONSE: last_response,\r\n          },\r\n          event_id=event_id,\r\n      )\r\n  return wrapped_gen()\r\n```\r\n\r\nscreen shot shows before and after in phoenix \r\n![scs](https://github.com/run-llama/llama_index/assets/5175672/10fad734-b276-4d62-8df6-bbdb0f1e7632)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8879/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8879/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8877",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8877/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8877/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8877/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8877",
        "id": 1989737077,
        "node_id": "PR_kwDOIWuq585fQD83",
        "number": 8877,
        "title": "fix grammar in SQLIndexDemo.ipynb",
        "user": {
            "login": "ziliangpeng",
            "id": 551900,
            "node_id": "MDQ6VXNlcjU1MTkwMA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/551900?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ziliangpeng",
            "html_url": "https://github.com/ziliangpeng",
            "followers_url": "https://api.github.com/users/ziliangpeng/followers",
            "following_url": "https://api.github.com/users/ziliangpeng/following{/other_user}",
            "gists_url": "https://api.github.com/users/ziliangpeng/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ziliangpeng/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ziliangpeng/subscriptions",
            "organizations_url": "https://api.github.com/users/ziliangpeng/orgs",
            "repos_url": "https://api.github.com/users/ziliangpeng/repos",
            "events_url": "https://api.github.com/users/ziliangpeng/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ziliangpeng/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-13T01:48:05Z",
        "updated_at": "2023-11-13T16:18:07Z",
        "closed_at": "2023-11-13T16:18:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8877",
            "html_url": "https://github.com/run-llama/llama_index/pull/8877",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8877.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8877.patch",
            "merged_at": "2023-11-13T16:18:07Z"
        },
        "body": "# Description\r\n\r\nFix a simple grammar error\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8877/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8877/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8876",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8876/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8876/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8876/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8876",
        "id": 1989634330,
        "node_id": "PR_kwDOIWuq585fPtiK",
        "number": 8876,
        "title": "Add Sparse Embedding to BaseNode Class",
        "user": {
            "login": "big-nico",
            "id": 46461502,
            "node_id": "MDQ6VXNlcjQ2NDYxNTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/46461502?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/big-nico",
            "html_url": "https://github.com/big-nico",
            "followers_url": "https://api.github.com/users/big-nico/followers",
            "following_url": "https://api.github.com/users/big-nico/following{/other_user}",
            "gists_url": "https://api.github.com/users/big-nico/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/big-nico/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/big-nico/subscriptions",
            "organizations_url": "https://api.github.com/users/big-nico/orgs",
            "repos_url": "https://api.github.com/users/big-nico/repos",
            "events_url": "https://api.github.com/users/big-nico/events{/privacy}",
            "received_events_url": "https://api.github.com/users/big-nico/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-12T23:32:10Z",
        "updated_at": "2023-11-23T18:21:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8876",
            "html_url": "https://github.com/run-llama/llama_index/pull/8876",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8876.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8876.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nThis PR adds an optional parameter to the BaseNode class `sparse_embedding`. This is made to support by default the growing number of RAG systems that include traditional sparse-vector search methods (ex. Okapi BM25). \r\n\r\nTo provide extended functionality for this change, I edited the PineconeVectorStore class to support adding nodes with existing sparse vectors in the `add` class method. \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [X] I have performed a self-review of my own code\r\n- [X] My changes generate no new warnings\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8876/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8876/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8875",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8875/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8875/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8875/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8875",
        "id": 1989619109,
        "node_id": "I_kwDOIWuq5852ly2l",
        "number": 8875,
        "title": "[Feature Request]: Support for Custom httpx Client Configuration in AzureOpenAI",
        "user": {
            "login": "MarceloNG",
            "id": 15959772,
            "node_id": "MDQ6VXNlcjE1OTU5Nzcy",
            "avatar_url": "https://avatars.githubusercontent.com/u/15959772?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarceloNG",
            "html_url": "https://github.com/MarceloNG",
            "followers_url": "https://api.github.com/users/MarceloNG/followers",
            "following_url": "https://api.github.com/users/MarceloNG/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarceloNG/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarceloNG/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarceloNG/subscriptions",
            "organizations_url": "https://api.github.com/users/MarceloNG/orgs",
            "repos_url": "https://api.github.com/users/MarceloNG/repos",
            "events_url": "https://api.github.com/users/MarceloNG/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarceloNG/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-12T22:48:21Z",
        "updated_at": "2023-11-15T16:21:10Z",
        "closed_at": "2023-11-15T16:21:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\r\n\r\n**Description:**\r\nI am proposing an enhancement to the AzureOpenAI class within the llama_index library to support custom httpx client configurations. This feature would allow users to specify their own httpx.Client instance when creating an AzureOpenAI object. This is particularly useful for scenarios where specific client configurations are required, such as custom timeouts, SSL certificates, or other HTTP client settings.\r\n\r\n**Suggested Implementation:**\r\nThe enhancement could be implemented by adding an optional parameter to the AzureOpenAI constructor (and possibly other relevant methods) that accepts an httpx.Client instance. This client would then be used internally for all HTTP requests made by the AzureOpenAI instance.\r\n\r\nExample:\r\n```\r\nimport httpx\r\nfrom llama_index.llms import AzureOpenAI\r\n\r\ncustom_httpx_client = httpx.Client(...)  # Custom configuration\r\nazure_ai = AzureOpenAI(http_client=custom_httpx_client, ...)\r\n```\r\n\r\n### Reason\r\n\r\nCurrently, LlamaIndex's AzureOpenAI class does not expose a way to inject or modify the underlying httpx.Client used for HTTP requests. This limitation prevents users from configuring custom client settings such as SSL certificates, timeouts, or other specific HTTP client behaviors. Existing approaches, like directly modifying the private _client attribute (monkey patching), are not ideal as they rely on altering internal, private components of the class, leading to potential maintenance and compatibility issues with future updates of the library. A formal mechanism to set a custom httpx.Client would provide a more robust and maintainable solution.\r\n\r\n### Value of Feature\r\n\r\nThis feature adds significant value by enhancing flexibility, allowing users to tailor the HTTP client to specific needs, such as security configurations and network requirements. It promotes better integration with diverse environments and ensures that the library can be more widely adopted in various secure and customized network setups.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8875/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8875/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8874",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8874/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8874/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8874/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8874",
        "id": 1989581029,
        "node_id": "PR_kwDOIWuq585fPim1",
        "number": 8874,
        "title": "[DRAFT]: Multi-Modal ReAct Agent",
        "user": {
            "login": "EmanuelCampos",
            "id": 16262455,
            "node_id": "MDQ6VXNlcjE2MjYyNDU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/16262455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EmanuelCampos",
            "html_url": "https://github.com/EmanuelCampos",
            "followers_url": "https://api.github.com/users/EmanuelCampos/followers",
            "following_url": "https://api.github.com/users/EmanuelCampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/EmanuelCampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EmanuelCampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EmanuelCampos/subscriptions",
            "organizations_url": "https://api.github.com/users/EmanuelCampos/orgs",
            "repos_url": "https://api.github.com/users/EmanuelCampos/repos",
            "events_url": "https://api.github.com/users/EmanuelCampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EmanuelCampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-12T21:20:52Z",
        "updated_at": "2023-11-13T19:31:22Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8874",
            "html_url": "https://github.com/run-llama/llama_index/pull/8874",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8874.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8874.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\n**PS: Test is broken yet, the first part of this PR was to make the implementation work and understand better the codebase, if we follow with next steps fixes will be made for what breaks.**\r\n\r\nMulti modality capabilities for react agent through image_documents + GPT-4V, this first commit was mainly for tests purposes, has improvements to do, and maybe it would be better abstracted?\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8874/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8874/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8873",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8873/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8873/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8873/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8873",
        "id": 1989554723,
        "node_id": "I_kwDOIWuq5852ljIj",
        "number": 8873,
        "title": "[Bug]: OpenAI Assistant Agent Error Code 400",
        "user": {
            "login": "carterrees-entrata",
            "id": 119977166,
            "node_id": "U_kgDOBya0zg",
            "avatar_url": "https://avatars.githubusercontent.com/u/119977166?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/carterrees-entrata",
            "html_url": "https://github.com/carterrees-entrata",
            "followers_url": "https://api.github.com/users/carterrees-entrata/followers",
            "following_url": "https://api.github.com/users/carterrees-entrata/following{/other_user}",
            "gists_url": "https://api.github.com/users/carterrees-entrata/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/carterrees-entrata/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/carterrees-entrata/subscriptions",
            "organizations_url": "https://api.github.com/users/carterrees-entrata/orgs",
            "repos_url": "https://api.github.com/users/carterrees-entrata/repos",
            "events_url": "https://api.github.com/users/carterrees-entrata/events{/privacy}",
            "received_events_url": "https://api.github.com/users/carterrees-entrata/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-12T20:18:46Z",
        "updated_at": "2023-11-12T20:39:36Z",
        "closed_at": "2023-11-12T20:39:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI have been running the OpenAI Assistant agents from this page on [docs page](https://docs.llamaindex.ai/en/stable/examples/agent/openai_assistant_agent.html#assistant-with-query-engine-tools). Simple Agent (no external tools) and Assistant with Built-in Retrieval work fine. However, when I run Assistant with Query Engine tools I get the error shown below. \n\n### Version\n\n0.8.86\n\n### Steps to Reproduce\n\nI run each cell as shown in the docs page [here](https://docs.llamaindex.ai/en/stable/examples/agent/openai_assistant_agent.html#assistant-with-query-engine-tools).\n\n### Relevant Logs/Tracbacks\n\n```shell\n---------------------------------------------------------------------------\r\nBadRequestError                           Traceback (most recent call last)\r\nCell In[59], line 1\r\n----> 1 agent = OpenAIAssistantAgent.from_new(\r\n      2     name=\"SEC Analyst\",\r\n      3     instructions=\"You are a QA assistant designed to analyze sec filings.\",\r\n      4     tools=query_engine_tools,\r\n      5     instructions_prefix=\"Please address the user as Jerry.\",\r\n      6     verbose=True,\r\n      7     run_retrieve_sleep_time=1.0,\r\n      8 )\r\n      9 response = agent.chat(\"What was Lyft's revenue growth in 2021?\")\r\n\r\nFile ~/opt/miniconda3/envs/llm/lib/python3.9/site-packages/llama_index/agent/openai_assistant_agent.py:190, in OpenAIAssistantAgent.from_new(cls, name, instructions, tools, openai_tools, thread_id, model, instructions_prefix, run_retrieve_sleep_time, files, callback_manager, verbose)\r\n    188 # TODO: openai's typing is a bit sus\r\n    189 all_openai_tools = cast(List[Any], all_openai_tools)\r\n--> 190 assistant = client.beta.assistants.create(\r\n    191     name=name,\r\n    192     instructions=instructions,\r\n    193     tools=cast(List[Any], all_openai_tools),\r\n    194     model=model,\r\n    195     file_ids=list(file_dict.keys()),\r\n    196 )\r\n    197 return cls(\r\n    198     client,\r\n    199     assistant,\r\n   (...)\r\n    204     verbose=verbose,\r\n    205 )\r\n\r\nFile ~/opt/miniconda3/envs/llm/lib/python3.9/site-packages/openai/resources/beta/assistants/assistants.py:95, in Assistants.create(self, model, description, file_ids, instructions, metadata, name, tools, extra_headers, extra_query, extra_body, timeout)\r\n     57 \"\"\"\r\n     58 Create an assistant with a model and instructions.\r\n     59 \r\n   (...)\r\n     92   timeout: Override the client-level default timeout for this request, in seconds\r\n     93 \"\"\"\r\n     94 extra_headers = {\"OpenAI-Beta\": \"assistants=v1\", **(extra_headers or {})}\r\n---> 95 return self._post(\r\n     96     \"/assistants\",\r\n     97     body=maybe_transform(\r\n     98         {\r\n     99             \"model\": model,\r\n    100             \"description\": description,\r\n    101             \"file_ids\": file_ids,\r\n    102             \"instructions\": instructions,\r\n    103             \"metadata\": metadata,\r\n    104             \"name\": name,\r\n    105             \"tools\": tools,\r\n    106         },\r\n    107         assistant_create_params.AssistantCreateParams,\r\n    108     ),\r\n    109     options=make_request_options(\r\n    110         extra_headers=extra_headers, extra_query=extra_query, extra_body=extra_body, timeout=timeout\r\n    111     ),\r\n    112     cast_to=Assistant,\r\n    113 )\r\n\r\nFile ~/opt/miniconda3/envs/llm/lib/python3.9/site-packages/openai/_base_client.py:1055, in SyncAPIClient.post(self, path, cast_to, body, options, files, stream, stream_cls)\r\n   1041 def post(\r\n   1042     self,\r\n   1043     path: str,\r\n   (...)\r\n   1050     stream_cls: type[_StreamT] | None = None,\r\n   1051 ) -> ResponseT | _StreamT:\r\n   1052     opts = FinalRequestOptions.construct(\r\n   1053         method=\"post\", url=path, json_data=body, files=to_httpx_files(files), **options\r\n   1054     )\r\n-> 1055     return cast(ResponseT, self.request(cast_to, opts, stream=stream, stream_cls=stream_cls))\r\n\r\nFile ~/opt/miniconda3/envs/llm/lib/python3.9/site-packages/openai/_base_client.py:834, in SyncAPIClient.request(self, cast_to, options, remaining_retries, stream, stream_cls)\r\n    825 def request(\r\n    826     self,\r\n    827     cast_to: Type[ResponseT],\r\n   (...)\r\n    832     stream_cls: type[_StreamT] | None = None,\r\n    833 ) -> ResponseT | _StreamT:\r\n--> 834     return self._request(\r\n    835         cast_to=cast_to,\r\n    836         options=options,\r\n    837         stream=stream,\r\n    838         stream_cls=stream_cls,\r\n    839         remaining_retries=remaining_retries,\r\n    840     )\r\n\r\nFile ~/opt/miniconda3/envs/llm/lib/python3.9/site-packages/openai/_base_client.py:877, in SyncAPIClient._request(self, cast_to, options, remaining_retries, stream, stream_cls)\r\n    874     # If the response is streamed then we need to explicitly read the response\r\n    875     # to completion before attempting to access the response text.\r\n    876     err.response.read()\r\n--> 877     raise self._make_status_error_from_response(err.response) from None\r\n    878 except httpx.TimeoutException as err:\r\n    879     if retries > 0:\r\n\r\nBadRequestError: Error code: 400 - {'error': {'message': \"8 validation errors for Request\\nbody -> tools -> 0 -> type\\n  unexpected value; permitted: <ToolTypeParam.CODE_INTERPRETER: 'code_interpreter'> (type=value_error.const; given=function; permitted=(<ToolTypeParam.CODE_INTERPRETER: 'code_interpreter'>,))\\nbody -> tools -> 0 -> type\\n  unexpected value; permitted: <ToolTypeParam.RETRIEVAL: 'retrieval'> (type=value_error.const; given=function; permitted=(<ToolTypeParam.RETRIEVAL: 'retrieval'>,))\\nbody -> tools -> 0 -> function -> name\\n  field required (type=value_error.missing)\\nbody -> tools -> 0 -> function -> parameters\\n  field required (type=value_error.missing)\\nbody -> tools -> 1 -> type\\n  unexpected value; permitted: <ToolTypeParam.CODE_INTERPRETER: 'code_interpreter'> (type=value_error.const; given=function; permitted=(<ToolTypeParam.CODE_INTERPRETER: 'code_interpreter'>,))\\nbody -> tools -> 1 -> type\\n  unexpected value; permitted: <ToolTypeParam.RETRIEVAL: 'retrieval'> (type=value_error.const; given=function; permitted=(<ToolTypeParam.RETRIEVAL: 'retrieval'>,))\\nbody -> tools -> 1 -> function -> name\\n  field required (type=value_error.missing)\\nbody -> tools -> 1 -> function -> parameters\\n  field required (type=value_error.missing)\", 'type': 'invalid_request_error', 'param': None, 'code': None}}\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8873/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8872",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8872/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8872/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8872/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8872",
        "id": 1989378645,
        "node_id": "PR_kwDOIWuq585fO55W",
        "number": 8872,
        "title": "Added retry policy for LLMRails Embeddings",
        "user": {
            "login": "anar2706",
            "id": 51159628,
            "node_id": "MDQ6VXNlcjUxMTU5NjI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/51159628?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anar2706",
            "html_url": "https://github.com/anar2706",
            "followers_url": "https://api.github.com/users/anar2706/followers",
            "following_url": "https://api.github.com/users/anar2706/following{/other_user}",
            "gists_url": "https://api.github.com/users/anar2706/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anar2706/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anar2706/subscriptions",
            "organizations_url": "https://api.github.com/users/anar2706/orgs",
            "repos_url": "https://api.github.com/users/anar2706/repos",
            "events_url": "https://api.github.com/users/anar2706/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anar2706/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-12T12:20:05Z",
        "updated_at": "2023-11-13T16:41:53Z",
        "closed_at": "2023-11-13T16:41:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8872",
            "html_url": "https://github.com/run-llama/llama_index/pull/8872",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8872.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8872.patch",
            "merged_at": "2023-11-13T16:41:52Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8872/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8872/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8871",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8871/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8871/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8871/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8871",
        "id": 1989355103,
        "node_id": "PR_kwDOIWuq585fO1G3",
        "number": 8871,
        "title": "Refactor `callback_manager` for `VectorIndexRetriever`",
        "user": {
            "login": "azurewtl",
            "id": 5175672,
            "node_id": "MDQ6VXNlcjUxNzU2NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5175672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/azurewtl",
            "html_url": "https://github.com/azurewtl",
            "followers_url": "https://api.github.com/users/azurewtl/followers",
            "following_url": "https://api.github.com/users/azurewtl/following{/other_user}",
            "gists_url": "https://api.github.com/users/azurewtl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/azurewtl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/azurewtl/subscriptions",
            "organizations_url": "https://api.github.com/users/azurewtl/orgs",
            "repos_url": "https://api.github.com/users/azurewtl/repos",
            "events_url": "https://api.github.com/users/azurewtl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/azurewtl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 6225900672,
                "node_id": "LA_kwDOIWuq588AAAABcxe0gA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/lgtm",
                "name": "lgtm",
                "color": "238636",
                "default": false,
                "description": "This PR has been approved by a maintainer"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-12T11:10:42Z",
        "updated_at": "2023-11-22T20:41:46Z",
        "closed_at": "2023-11-20T16:45:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8871",
            "html_url": "https://github.com/run-llama/llama_index/pull/8871",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8871.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8871.patch",
            "merged_at": "2023-11-20T16:45:18Z"
        },
        "body": "# Description\r\n\r\nRetriever's `callback_manager` is not implement in it's own class. Instead, it's in `RetrieverQueryEngine`\r\nIf you use `VectorIndexRetriever` directly, it will not be recorded.\r\nI moved callback_manager back to `VectorIndexRetriever` \r\n\r\n## Type of Change\r\n\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8871/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8871/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8870",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8870/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8870/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8870/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8870",
        "id": 1989324940,
        "node_id": "PR_kwDOIWuq585fOvFA",
        "number": 8870,
        "title": "Update evaluation.ipynb fixed refine missing service_context",
        "user": {
            "login": "FarisHijazi",
            "id": 47270244,
            "node_id": "MDQ6VXNlcjQ3MjcwMjQ0",
            "avatar_url": "https://avatars.githubusercontent.com/u/47270244?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/FarisHijazi",
            "html_url": "https://github.com/FarisHijazi",
            "followers_url": "https://api.github.com/users/FarisHijazi/followers",
            "following_url": "https://api.github.com/users/FarisHijazi/following{/other_user}",
            "gists_url": "https://api.github.com/users/FarisHijazi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/FarisHijazi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/FarisHijazi/subscriptions",
            "organizations_url": "https://api.github.com/users/FarisHijazi/orgs",
            "repos_url": "https://api.github.com/users/FarisHijazi/repos",
            "events_url": "https://api.github.com/users/FarisHijazi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/FarisHijazi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-12T09:37:00Z",
        "updated_at": "2023-11-13T16:44:52Z",
        "closed_at": "2023-11-13T16:44:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8870",
            "html_url": "https://github.com/run-llama/llama_index/pull/8870",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8870.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8870.patch",
            "merged_at": "2023-11-13T16:44:52Z"
        },
        "body": "faithfullness evaluation was wrong because the Refine() object was missing the ServiceContext\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8870/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8870/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8869",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8869/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8869/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8869/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8869",
        "id": 1989312934,
        "node_id": "I_kwDOIWuq5852koGm",
        "number": 8869,
        "title": "[Bug]: When using the Milvus database, inserting too many nodes will cause the insertion to fail.   ",
        "user": {
            "login": "Tangent-90C",
            "id": 28804414,
            "node_id": "MDQ6VXNlcjI4ODA0NDE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/28804414?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Tangent-90C",
            "html_url": "https://github.com/Tangent-90C",
            "followers_url": "https://api.github.com/users/Tangent-90C/followers",
            "following_url": "https://api.github.com/users/Tangent-90C/following{/other_user}",
            "gists_url": "https://api.github.com/users/Tangent-90C/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Tangent-90C/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Tangent-90C/subscriptions",
            "organizations_url": "https://api.github.com/users/Tangent-90C/orgs",
            "repos_url": "https://api.github.com/users/Tangent-90C/repos",
            "events_url": "https://api.github.com/users/Tangent-90C/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Tangent-90C/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-12T08:57:52Z",
        "updated_at": "2023-11-12T11:23:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhen I try to reproduce this tutorial using Milvus as a vector database, I get an error.\r\n\r\nhttps://gpt-index.readthedocs.io/en/stable/examples/node_postprocessor/MetadataReplacementDemo.html\r\n\r\n```\r\ngrpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:\r\n\tstatus = StatusCode.RESOURCE_EXHAUSTED\r\n\tdetails = \"grpc: received message larger than max (79782097 vs. 67108864)\"\r\n\tdebug_error_string = \"UNKNOWN:Error received from peer ipv6:%5B::1%5D:19530 {created_time:\"2023-11-12T08:47:41.991414553+00:00\", grpc_status:8, grpc_message:\"grpc: received message larger than max (79782097 vs. 67108864)\"}\"\r\n```\r\n\r\nI guessed that this was caused by too many entities being inserted into the database at once, so I tried to insert fewer nodes and it worked.\r\n\r\nfailed:\r\n![image](https://github.com/run-llama/llama_index/assets/28804414/2ff69772-14fc-48c3-9fcc-022713bfb5aa)\r\n\r\nsucceed:\r\n![image](https://github.com/run-llama/llama_index/assets/28804414/69538e0a-78b1-4efa-8329-c0a39609387c)\n\n### Version\n\n0.8.68\n\n### Steps to Reproduce\n\nrun the code\r\n\r\n```\r\nfrom llama_index import SimpleDirectoryReader\r\nfrom llama_index.node_parser import SentenceWindowNodeParser, SimpleNodeParser\r\nfrom llama_index import VectorStoreIndex, StorageContext\r\nfrom llama_index.vector_stores import MilvusVectorStore\r\nfrom llama_index.embeddings import HuggingFaceEmbedding\r\nfrom llama_index.llms import OpenAI\r\nfrom llama_index import ServiceContext\r\nimport openai\r\nimport os\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = \"sk-xxxxxxxxxxxxxxxxxxxxxxx\"\r\nopenai.api_key = os.environ[\"OPENAI_API_KEY\"]\r\n\r\nllm = OpenAI(model=\"gpt-3.5-turbo\", temperature=0.1)\r\nembed_model = HuggingFaceEmbedding(\r\n    model_name=\"sentence-transformers/all-mpnet-base-v2\", max_length=512\r\n)\r\n\r\ndocuments = SimpleDirectoryReader(\r\n    input_files=[\"./IPCC_AR6_WGII_Chapter03.pdf\"]\r\n).load_data()\r\n\r\nnode_parser = SentenceWindowNodeParser.from_defaults(\r\n    window_size=3,\r\n    window_metadata_key=\"window\",\r\n    original_text_metadata_key=\"original_text\",\r\n)\r\nnodes = node_parser.get_nodes_from_documents(documents)\r\n\r\nctx = ServiceContext.from_defaults(\r\n    llm=llm,\r\n    embed_model=embed_model,\r\n    node_parser=node_parser,\r\n)\r\n\r\nstorage_context = StorageContext.from_defaults(\r\n    vector_store=MilvusVectorStore(collection_name=\"IPCC_sentence\", dim=\"768\")\r\n)\r\n\r\nVectorStoreIndex(nodes, service_context=ctx, storage_context=storage_context)\r\n```\r\n\r\nThis is the required PDF file:\r\nhttps://www.ipcc.ch/report/ar6/wg2/downloads/report/IPCC_AR6_WGII_Chapter03.pdf\r\n\r\nThis is how my Milvus deployed:\r\nhttps://milvus.io/docs/install_standalone-docker.md\n\n### Relevant Logs/Tracbacks\n\n```shell\nE:\\envs\\openai\\python.exe E:\\llama-index-test\\run.py \r\ngrpc RpcError: [insert_rows], <_MultiThreadedRendezvous: StatusCode.RESOURCE_EXHAUSTED, grpc: received message larger than max (79782097 vs. 67108864)>, <Time:{'RPC start': '2023-11-12 16:47:41.239809', 'gRPC error': '2023-11-12 16:47:41.998676'}>\r\nFailed to insert batch starting at entity: 0/11087\r\nTraceback (most recent call last):\r\n  File \"E:\\llama-index-test\\run.py\", line 40, in <module>\r\n    VectorStoreIndex(nodes, service_context=ctx, storage_context=storage_context)\r\n  File \"E:\\envs\\openai\\lib\\site-packages\\llama_index\\indices\\vector_store\\base.py\", line 49, in __init__\r\n    super().__init__(\r\n  File \"E:\\envs\\openai\\lib\\site-packages\\llama_index\\indices\\base.py\", line 71, in __init__\r\n    index_struct = self.build_index_from_nodes(nodes)\r\n  File \"E:\\envs\\openai\\lib\\site-packages\\llama_index\\indices\\vector_store\\base.py\", line 254, in build_index_from_nodes\r\n    return self._build_index_from_nodes(nodes, **insert_kwargs)\r\n  File \"E:\\envs\\openai\\lib\\site-packages\\llama_index\\indices\\vector_store\\base.py\", line 235, in _build_index_from_nodes\r\n    self._add_nodes_to_index(\r\n  File \"E:\\envs\\openai\\lib\\site-packages\\llama_index\\indices\\vector_store\\base.py\", line 189, in _add_nodes_to_index\r\n    new_ids = self._vector_store.add(nodes, **insert_kwargs)\r\n  File \"E:\\envs\\openai\\lib\\site-packages\\llama_index\\vector_stores\\milvus.py\", line 180, in add\r\n    self.milvusclient.insert(self.collection_name, insert_list)\r\n  File \"E:\\envs\\openai\\lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 206, in insert\r\n    raise ex from ex\r\n  File \"E:\\envs\\openai\\lib\\site-packages\\pymilvus\\milvus_client\\milvus_client.py\", line 198, in insert\r\n    res = conn.insert_rows(collection_name, insert_batch, timeout=timeout)\r\n  File \"E:\\envs\\openai\\lib\\site-packages\\pymilvus\\decorators.py\", line 141, in handler\r\n    raise e from e\r\n  File \"E:\\envs\\openai\\lib\\site-packages\\pymilvus\\decorators.py\", line 123, in handler\r\n    return func(*args, **kwargs)\r\n  File \"E:\\envs\\openai\\lib\\site-packages\\pymilvus\\decorators.py\", line 162, in handler\r\n    return func(self, *args, **kwargs)\r\n  File \"E:\\envs\\openai\\lib\\site-packages\\pymilvus\\decorators.py\", line 79, in handler\r\n    raise e from e\r\n  File \"E:\\envs\\openai\\lib\\site-packages\\pymilvus\\decorators.py\", line 68, in handler\r\n    return func(*args, **kwargs)\r\n  File \"E:\\envs\\openai\\lib\\site-packages\\pymilvus\\client\\grpc_handler.py\", line 505, in insert_rows\r\n    response = rf.result()\r\n  File \"E:\\envs\\openai\\lib\\site-packages\\grpc\\_channel.py\", line 797, in result\r\n    raise self\r\ngrpc._channel._MultiThreadedRendezvous: <_MultiThreadedRendezvous of RPC that terminated with:\r\n\tstatus = StatusCode.RESOURCE_EXHAUSTED\r\n\tdetails = \"grpc: received message larger than max (79782097 vs. 67108864)\"\r\n\tdebug_error_string = \"UNKNOWN:Error received from peer ipv6:%5B::1%5D:19530 {created_time:\"2023-11-12T08:47:41.991414553+00:00\", grpc_status:8, grpc_message:\"grpc: received message larger than max (79782097 vs. 67108864)\"}\"\r\n>\r\n\r\nProcess finished with exit code 1\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8869/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8869/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8868",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8868/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8868/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8868/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8868",
        "id": 1989293935,
        "node_id": "PR_kwDOIWuq585fOo4O",
        "number": 8868,
        "title": "feat(llm): OpenLLM",
        "user": {
            "login": "aarnphm",
            "id": 29749331,
            "node_id": "MDQ6VXNlcjI5NzQ5MzMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29749331?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aarnphm",
            "html_url": "https://github.com/aarnphm",
            "followers_url": "https://api.github.com/users/aarnphm/followers",
            "following_url": "https://api.github.com/users/aarnphm/following{/other_user}",
            "gists_url": "https://api.github.com/users/aarnphm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aarnphm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aarnphm/subscriptions",
            "organizations_url": "https://api.github.com/users/aarnphm/orgs",
            "repos_url": "https://api.github.com/users/aarnphm/repos",
            "events_url": "https://api.github.com/users/aarnphm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aarnphm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-11-12T07:55:48Z",
        "updated_at": "2023-11-16T16:39:19Z",
        "closed_at": "2023-11-16T16:39:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8868",
            "html_url": "https://github.com/run-llama/llama_index/pull/8868",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8868.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8868.patch",
            "merged_at": "2023-11-16T16:39:19Z"
        },
        "body": "Signed-off-by: Aaron <29749331+aarnphm@users.noreply.github.com>\r\n\r\ncc @parano\r\n\r\n# Description\r\n\r\n\ud83c\udf89 OpenLLM \ud83e\udd1d Llama_index\r\n\r\n[OpenLLM](https://github.com/bentoml/OpenLLM) is an open-source platform designed to facilitate the deployment and operation of large language models (LLMs) in real-world applications. With OpenLLM, you can run inference on any open-source LLM, deploy them on the cloud or on-premises, and build powerful AI applications.\r\n\r\nIt includes supports for a wide range of open-source LLMs and model runtimes, including but not limited to Mistral, Llama2, StableLM, Falcon, Dolly, Flan-T5, ChatGLM, and StarCoder.\r\nIt also has support for token streaming, quantization, and continuous batching (via vLLM), which can significantly increase the total throughput of LLMs.\r\n\r\nWith this in mind, this integration to Llama_index brings in two new `LLM`: `OpenLLM` and `OpenLLMAPI`.\r\n\r\nFor running locally with `OpenLLM`, it will requires user to install `openllm[vllm]` on GPU and `openllm` if running on CPU.\r\n\r\n```python\r\nfrom llama_index.llms.openllm import OpenLLM\r\nllm = OpenLLM('HuggingFaceH4/zephyr-7b-alpha')\r\n\r\nllm.complete('I love you')\r\nawait llm.acomplete('I love you')\r\n\r\nfor it in llm.stream_chat(\r\n    [\r\n        ChatMessage(\r\n            role=\"system\", content=\"You are acting as Ernest Hemmingway.\"\r\n        ),\r\n        ChatMessage(role=\"user\", content=\"Hi there!\"),\r\n        ChatMessage(role=\"assistant\", content=\"Yes?\"),\r\n        ChatMessage(role=\"user\", content=\"What is the meaning of life?\"),\r\n    ]\r\n):\r\n    print(it.message.content, flush=True, end=\"\")\r\n\r\nasync for llm.astream_complete(\"The meaning of life is\"): print(it.delta, flush=True, end='')\r\n```\r\n\r\nWith an OpenLLM server running elsewhere or on [BentoCloud](https://www.bentoml.com/cloud), users will need to install `openllm-client` and use `OpenLLMAPI`:\r\n\r\n```python\r\nfrom llama_index.llms.openllm import OpenLLMAPI\r\n\r\nllm = OpenLLM(address='remote.server:3000')\r\n```\r\n\r\n> [!NOTE]\r\n> For `OpenLLMAPI`, if `OPENLLM_ENDPOINT` is set, then the following can be achieved:\r\n> ```python\r\n> llm = OpenLLMAPI()\r\n> ```\r\n\r\nAll async and sync variation of chat and completeion message is supported for both `OpenLLM` and `OpenLLMAPI`.\r\n\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8868/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8868/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8867",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8867/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8867/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8867/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8867",
        "id": 1989248079,
        "node_id": "PR_kwDOIWuq585fOfze",
        "number": 8867,
        "title": "bugfix: added entry for callback to clear _node_data_buffer",
        "user": {
            "login": "azurewtl",
            "id": 5175672,
            "node_id": "MDQ6VXNlcjUxNzU2NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5175672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/azurewtl",
            "html_url": "https://github.com/azurewtl",
            "followers_url": "https://api.github.com/users/azurewtl/followers",
            "following_url": "https://api.github.com/users/azurewtl/following{/other_user}",
            "gists_url": "https://api.github.com/users/azurewtl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/azurewtl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/azurewtl/subscriptions",
            "organizations_url": "https://api.github.com/users/azurewtl/orgs",
            "repos_url": "https://api.github.com/users/azurewtl/repos",
            "events_url": "https://api.github.com/users/azurewtl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/azurewtl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-12T05:33:44Z",
        "updated_at": "2023-11-14T03:42:03Z",
        "closed_at": "2023-11-14T03:42:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8867",
            "html_url": "https://github.com/run-llama/llama_index/pull/8867",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8867.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8867.patch",
            "merged_at": "2023-11-14T03:42:03Z"
        },
        "body": "# Description\r\nIn `OpenInferenceCallbackHandler`, both `self._query_data_buffer` and `self._node_data_buffer` grows persistently and require manual clearing.\r\nIn production env, we need to provide a callback to `OpenInferenceCallbackHandler` for logging and clearing `node_data_buffer`, but `node_data_buffer` is out of access in callback, which leave it grows out of control.\r\n```python\r\nclass ParquetCallback:\r\n    ...\r\n    def __call__(\r\n        self,\r\n        query_data_buffer: List[QueryData],\r\n    ) -> None:\r\n        if len(query_data_buffer) > self._max_buffer_length:\r\n            ...\r\n            self._batch_index += 1\r\n            query_data_buffer.clear()  # \u26a0\ufe0f clear the buffer or it will keep growing forever!\r\n```\r\n\r\n# Fixes\r\npass `self._node_data_buffer` to `callback` function, so it can clear it periodically\r\n```python\r\n    def end_trace(...) -> None:\r\n        if trace_id == \"query\":\r\n            ...\r\n            if self._callback is not None:\r\n                self._callback(self._query_data_buffer, self._node_data_buffer)\r\n```\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8867/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8867/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8866",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8866/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8866/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8866/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8866",
        "id": 1989242844,
        "node_id": "PR_kwDOIWuq585fOeyo",
        "number": 8866,
        "title": "Optimized function schema message for `ToolMetadata`",
        "user": {
            "login": "azurewtl",
            "id": 5175672,
            "node_id": "MDQ6VXNlcjUxNzU2NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5175672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/azurewtl",
            "html_url": "https://github.com/azurewtl",
            "followers_url": "https://api.github.com/users/azurewtl/followers",
            "following_url": "https://api.github.com/users/azurewtl/following{/other_user}",
            "gists_url": "https://api.github.com/users/azurewtl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/azurewtl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/azurewtl/subscriptions",
            "organizations_url": "https://api.github.com/users/azurewtl/orgs",
            "repos_url": "https://api.github.com/users/azurewtl/repos",
            "events_url": "https://api.github.com/users/azurewtl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/azurewtl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-12T05:09:01Z",
        "updated_at": "2023-11-21T15:57:51Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8866",
            "html_url": "https://github.com/run-llama/llama_index/pull/8866",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8866.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8866.patch",
            "merged_at": null
        },
        "body": "# Description\r\nLet's say we define a super simple schema\r\n```python\r\nclass MySchema(BaseModel):\r\n    input: Optional[str]\r\n```\r\n## Before\r\n`ToolMetadata.fn_schema_str` returns:\r\n```python\r\n{'title': 'FnSchema', 'description': 'Default tool function Schema.', 'type': 'object', 'properties': {'input': {'title': 'Input', 'type': 'string'}}}\r\n```\r\n***Problem:*** It contain too many information such as `title`, and it's not a valid `Json`, because it simply produced by `str(model.schema())`\r\n## After\r\n`ToolMetadata.fn_schema_str` returns:\r\n```json\r\n{\"type\": \"object\", \"properties\": {\"input\": {\"title\": \"Input\", \"type\": \"string\"}}}\r\n```\r\n\r\n## Usage Pattern\r\nuse it in query_engine\r\n```python\r\nquery_engine_tools = [\r\n    RetrieverTool(\r\n        retriever=vs_retriever,\r\n        metadata=ToolMetadata(\r\n            name=\"useless tool\", \r\n            description=\"super useless\",\r\n             fn_schema=MySchema\r\n        ),\r\n    ),\r\n]\r\n```\r\nwhen we prompt tool to LLM by\r\n```python\r\ndef get_react_tool_descriptions(tools: Sequence[BaseTool]) -> List[str]:\r\n    \"\"\"Tool.\"\"\"\r\n    tool_descs = []\r\n    for tool in tools:\r\n        tool_desc = (\r\n            f\"> Tool Name: {tool.metadata.name}\\n\"\r\n            f\"Tool Description: {tool.metadata.description}\\n\"\r\n            f\"Tool Args: {tool.metadata.fn_schema_str}\\n\"\r\n        )\r\n        tool_descs.append(tool_desc)\r\n    return tool_descs\r\n```\r\n`tool.metadata.fn_schema_str` is the description of schema that LLM use to understand how to call the tool\r\n\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8866/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8866/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8865",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8865/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8865/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8865/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8865",
        "id": 1989128905,
        "node_id": "PR_kwDOIWuq585fOIEA",
        "number": 8865,
        "title": "fix error that occurs when defining custom_path in download_loader.",
        "user": {
            "login": "Dilbarjot",
            "id": 46788967,
            "node_id": "MDQ6VXNlcjQ2Nzg4OTY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/46788967?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Dilbarjot",
            "html_url": "https://github.com/Dilbarjot",
            "followers_url": "https://api.github.com/users/Dilbarjot/followers",
            "following_url": "https://api.github.com/users/Dilbarjot/following{/other_user}",
            "gists_url": "https://api.github.com/users/Dilbarjot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Dilbarjot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Dilbarjot/subscriptions",
            "organizations_url": "https://api.github.com/users/Dilbarjot/orgs",
            "repos_url": "https://api.github.com/users/Dilbarjot/repos",
            "events_url": "https://api.github.com/users/Dilbarjot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Dilbarjot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-11T21:43:44Z",
        "updated_at": "2023-11-12T03:15:22Z",
        "closed_at": "2023-11-11T22:16:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8865",
            "html_url": "https://github.com/run-llama/llama_index/pull/8865",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8865.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8865.patch",
            "merged_at": "2023-11-11T22:16:19Z"
        },
        "body": "# Description\r\n\r\nFixes error that occurs when defining a `custom_path`  in `download_loader`.\r\n\r\nFixes #8812 (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8865/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8865/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8864",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8864/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8864/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8864/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8864",
        "id": 1989091866,
        "node_id": "PR_kwDOIWuq585fOA9P",
        "number": 8864,
        "title": "[version] bump version to 0.8.68",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-11T19:31:11Z",
        "updated_at": "2023-11-11T19:39:51Z",
        "closed_at": "2023-11-11T19:39:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8864",
            "html_url": "https://github.com/run-llama/llama_index/pull/8864",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8864.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8864.patch",
            "merged_at": "2023-11-11T19:39:50Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8864/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8864/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8863",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8863/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8863/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8863/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8863",
        "id": 1989071585,
        "node_id": "PR_kwDOIWuq585fN88m",
        "number": 8863,
        "title": "openai assistant agent + advanced retrieval cookbook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-11T18:28:52Z",
        "updated_at": "2023-11-11T19:28:50Z",
        "closed_at": "2023-11-11T19:28:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8863",
            "html_url": "https://github.com/run-llama/llama_index/pull/8863",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8863.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8863.patch",
            "merged_at": "2023-11-11T19:28:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8863/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8863/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8862",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8862/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8862/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8862/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8862",
        "id": 1989057036,
        "node_id": "PR_kwDOIWuq585fN6ES",
        "number": 8862,
        "title": "fix openai assistant tool creation + retrieval notebook",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-11T17:47:17Z",
        "updated_at": "2023-11-11T17:56:15Z",
        "closed_at": "2023-11-11T17:56:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8862",
            "html_url": "https://github.com/run-llama/llama_index/pull/8862",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8862.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8862.patch",
            "merged_at": "2023-11-11T17:56:14Z"
        },
        "body": "# Description\r\n\r\nQuick fix to use `to_openai_tool()` and also fix a single line in a notebook.\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/8857\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/8853\r\n\r\n## Type of Change\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8862/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8861",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8861/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8861/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8861/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8861",
        "id": 1989040827,
        "node_id": "PR_kwDOIWuq585fN22v",
        "number": 8861,
        "title": "Quick fix Replicate MultiModal example",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-11T16:59:55Z",
        "updated_at": "2023-11-11T17:12:01Z",
        "closed_at": "2023-11-11T17:12:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8861",
            "html_url": "https://github.com/run-llama/llama_index/pull/8861",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8861.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8861.patch",
            "merged_at": "2023-11-11T17:12:01Z"
        },
        "body": "# Description\r\n\r\n1. Fix some pkg import issue\r\n2. comment the first URL since the 1st url sometimes is not accessible \r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8861/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8860",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8860/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8860/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8860/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8860",
        "id": 1988927237,
        "node_id": "PR_kwDOIWuq585fNfao",
        "number": 8860,
        "title": "fix: paths treated as hidden",
        "user": {
            "login": "EmanuelCampos",
            "id": 16262455,
            "node_id": "MDQ6VXNlcjE2MjYyNDU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/16262455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EmanuelCampos",
            "html_url": "https://github.com/EmanuelCampos",
            "followers_url": "https://api.github.com/users/EmanuelCampos/followers",
            "following_url": "https://api.github.com/users/EmanuelCampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/EmanuelCampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EmanuelCampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EmanuelCampos/subscriptions",
            "organizations_url": "https://api.github.com/users/EmanuelCampos/orgs",
            "repos_url": "https://api.github.com/users/EmanuelCampos/repos",
            "events_url": "https://api.github.com/users/EmanuelCampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EmanuelCampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-11T12:30:27Z",
        "updated_at": "2023-11-11T16:36:34Z",
        "closed_at": "2023-11-11T16:36:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8860",
            "html_url": "https://github.com/run-llama/llama_index/pull/8860",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8860.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8860.patch",
            "merged_at": "2023-11-11T16:36:34Z"
        },
        "body": "# Description\r\n\r\nNotebooks when using `\"../../../img_cache\"` is being treated as a hidden file, making it throw an error that the path doesn't have files\r\n\r\nHow to reproduce:\r\n```py\r\nfrom llama_index.multi_modal_llms.openai import OpenAIMultiModal\r\nfrom llama_index import SimpleDirectoryReader\r\n\r\nimage_documents = SimpleDirectoryReader(\"../../../img_cache\").load_data()\r\n```\r\n\r\nKeep any image file in the img_cache directory and run (curiously when have a document it's recognized, images no (before the fix)\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8860/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8860/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8859",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8859/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8859/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8859/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8859",
        "id": 1988908381,
        "node_id": "PR_kwDOIWuq585fNbjj",
        "number": 8859,
        "title": "Add cohere reranker finetuner",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-11T11:40:55Z",
        "updated_at": "2023-11-15T22:58:45Z",
        "closed_at": "2023-11-15T22:58:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8859",
            "html_url": "https://github.com/run-llama/llama_index/pull/8859",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8859.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8859.patch",
            "merged_at": "2023-11-15T22:58:45Z"
        },
        "body": "# Description\r\n\r\nPR to add cohere reranking finetuner.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8859/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 1,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8859/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8858",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8858/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8858/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8858/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8858",
        "id": 1988902521,
        "node_id": "PR_kwDOIWuq585fNaVJ",
        "number": 8858,
        "title": "Add cohere reranker finetuner",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-11T11:26:09Z",
        "updated_at": "2023-11-11T11:26:15Z",
        "closed_at": "2023-11-11T11:26:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8858",
            "html_url": "https://github.com/run-llama/llama_index/pull/8858",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8858.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8858.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8858/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8858/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8857",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8857/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8857/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8857/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8857",
        "id": 1988860534,
        "node_id": "I_kwDOIWuq5852i5p2",
        "number": 8857,
        "title": "[Question]: Building RAG from scratch example code issue, help",
        "user": {
            "login": "ram510",
            "id": 2175155,
            "node_id": "MDQ6VXNlcjIxNzUxNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2175155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ram510",
            "html_url": "https://github.com/ram510",
            "followers_url": "https://api.github.com/users/ram510/followers",
            "following_url": "https://api.github.com/users/ram510/following{/other_user}",
            "gists_url": "https://api.github.com/users/ram510/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ram510/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ram510/subscriptions",
            "organizations_url": "https://api.github.com/users/ram510/orgs",
            "repos_url": "https://api.github.com/users/ram510/repos",
            "events_url": "https://api.github.com/users/ram510/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ram510/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-11T09:27:08Z",
        "updated_at": "2023-11-11T17:56:15Z",
        "closed_at": "2023-11-11T17:56:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi @logan-markewich using the example provided  in [https://gpt-index.readthedocs.io/en/v0.8.47/examples/low_level/oss_ingestion_retrieval.html](Building RAG from Scratch) I have created a retriever. But the VectorDBRetriever class has an undefined query_str, to mitigate that I have introduded query_str in the class. Below is the code\r\n`from typing import Any, List, Optional\r\n\r\nfrom llama_index.retrievers import BaseRetriever\r\nfrom llama_index.schema import NodeWithScore\r\nfrom llama_index.vector_stores import VectorStoreQuery\r\n\r\nfrom llama_index import QueryBundle\r\nfrom llama_index.vector_stores import PGVectorStore\r\nfrom one import embed_model\r\n\r\n\r\nclass VectorDBRetriever(BaseRetriever):\r\n    \"\"\"Retriever over a postgres vector store.\"\"\"\r\n\r\n    def __init__(\r\n        self,\r\n        vector_store: PGVectorStore,\r\n        embed_model: Any,\r\n        query_str: str,\r\n        query_mode: str = \"default\",\r\n        similarity_top_k: int = 2,\r\n    ) -> None:\r\n        \"\"\"Init params.\"\"\"\r\n        self._vector_store = vector_store\r\n        self._embed_model = embed_model\r\n        self._query_mode = query_mode\r\n        self._similarity_top_k = similarity_top_k\r\n        self._query_str = query_str // CHECK HERE\r\n\r\n    def _retrieve(self, query_bundle: QueryBundle) -> List[NodeWithScore]:\r\n        \"\"\"Retrieve.\"\"\"\r\n        query_embedding = embed_model.get_query_embedding(self._query_str) // CHECK HERE\r\n        vector_store_query = VectorStoreQuery(\r\n            query_embedding=query_embedding,\r\n            similarity_top_k=self._similarity_top_k,\r\n            mode=self._query_mode,\r\n        )\r\n        query_result = self._vector_store.query(vector_store_query)\r\n\r\n        nodes_with_scores = []\r\n        for index, node in enumerate(query_result.nodes):\r\n            score: Optional[float] = None\r\n            if query_result.similarities is not None:\r\n                score = query_result.similarities[index]\r\n            nodes_with_scores.append(NodeWithScore(node=node, score=score))\r\n\r\n        return nodes_with_scores\r\n`\r\nnow for every query I have to create a new objects for retriever, query_engine and chat_agent as they are independent \r\n`        if \"query\" in data:\r\n            query_str = data[\"query\"]\r\n\r\n            # Create a VectorDBRetriever and a RetrieverQueryEngine\r\n            retriever = VectorDBRetriever(\r\n                vector_store,\r\n                embed_model,\r\n                query_str, // CHECK HERE\r\n                query_mode=query_mode,\r\n                similarity_top_k=similarity_top_k,\r\n            )\r\n\r\n            query_engine = RetrieverQueryEngine.from_args(\r\n                retriever, service_context=service_context // RETRIEVER DEPENDENCY\r\n            )\r\n            chat_agent = CondenseQuestionChatEngine.from_defaults(\r\n                query_engine=query_engine, service_context=service_context // QUERY ENGINE DEPENDECY\r\n            )\r\n            response = chat_agent.chat(query_str)`\r\nplease help",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8857/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8857/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8856",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8856/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8856/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8856/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8856",
        "id": 1988856386,
        "node_id": "I_kwDOIWuq5852i4pC",
        "number": 8856,
        "title": "[Bug]: Fallback to `llama2-chat-13B` doesn't seem to be working",
        "user": {
            "login": "rtorrero",
            "id": 2668401,
            "node_id": "MDQ6VXNlcjI2Njg0MDE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2668401?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rtorrero",
            "html_url": "https://github.com/rtorrero",
            "followers_url": "https://api.github.com/users/rtorrero/followers",
            "following_url": "https://api.github.com/users/rtorrero/following{/other_user}",
            "gists_url": "https://api.github.com/users/rtorrero/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rtorrero/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rtorrero/subscriptions",
            "organizations_url": "https://api.github.com/users/rtorrero/orgs",
            "repos_url": "https://api.github.com/users/rtorrero/repos",
            "events_url": "https://api.github.com/users/rtorrero/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rtorrero/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-11T09:16:05Z",
        "updated_at": "2023-11-11T15:58:52Z",
        "closed_at": "2023-11-11T15:58:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nBy following the documentation it looks that if `OPENAI_API_KEY` is not set, llama-index will not attempt to use `gpt-3.5-turbo` and will instead fallback to `llama2-chat-13B`, but in my case, it leads to the following error when following the starter tutorial:\r\n\r\n```\r\n\u2570\u2500$ python starter.py \r\n... (supressed output)\r\n  File \"/home/rtorrero/Workspace/llamaindex-tutorial/venv/lib/python3.11/site-packages/openai/_base_client.py\", line 897, in _request\r\n    raise APIConnectionError(request=request) from err\r\nopenai.APIConnectionError: Connection error.\r\n```\n\n### Version\n\n 0.8.64\n\n### Steps to Reproduce\n\n- Followed https://gpt-index.readthedocs.io/en/latest/getting_started/installation.html#local-model-setup and https://gpt-index.readthedocs.io/en/latest/examples/llm/llama_2_llama_cpp.html to get LlamaCPP using CLBLAST optimized for AMD GPUs.\r\n\r\n- Created a `data` directory where I place a markdown document that I want to be able to query\r\n\r\nAfter that, I try to run:\r\n\r\n```\r\nimport logging\r\nimport sys\r\n\r\nlogging.basicConfig(stream=sys.stdout, level=logging.DEBUG)\r\nlogging.getLogger().addHandler(logging.StreamHandler(stream=sys.stdout))\r\n\r\nimport os.path\r\nfrom llama_index import (\r\n    VectorStoreIndex,\r\n    SimpleDirectoryReader,\r\n    StorageContext,\r\n    load_index_from_storage,\r\n)\r\n\r\n# check if storage already exists\r\nif not os.path.exists(\"./storage\"):\r\n    # load the documents and create the index\r\n    documents = SimpleDirectoryReader(\"data\").load_data()\r\n    index = VectorStoreIndex.from_documents(documents)\r\n    # store it for later\r\n    index.storage_context.persist()\r\nelse:\r\n    # load the existing index\r\n    storage_context = StorageContext.from_defaults(persist_dir=\"./storage\")\r\n    index = load_index_from_storage(storage_context)\r\n\r\n# either way we can now query the index\r\nquery_engine = index.as_query_engine()\r\nresponse = query_engine.query(\"What gatherer could I use to check the available filesystems?\")\r\nprint(response)\r\n```\r\n\r\nwith `python starter.py` after installing the requirements.\r\n\r\nI'm assuming something else needs to be done on my side, but by following the documentation I'm not understanding what additional step is required.\n\n### Relevant Logs/Tracbacks\n\n```shell\n\u2570\u2500$ python starter.py\r\nTraceback (most recent call last):\r\n  File \"/home/rtorrero/Workspace/llamaindex-tutorial/venv/lib/python3.11/site-packages/httpcore/_exceptions.py\", line 10, in map_exceptions\r\n    yield\r\n  File \"/home/rtorrero/Workspace/llamaindex-tutorial/venv/lib/python3.11/site-packages/httpcore/_sync/http11.py\", line 142, in _send_request_headers\r\n    event = h11.Request(\r\n            ^^^^^^^^^^^^\r\n....\r\n(Suppressed very similar output)\r\n...\r\n  File \"/home/rtorrero/Workspace/llamaindex-tutorial/venv/lib/python3.11/site-packages/openai/_base_client.py\", line 925, in _retry_request\r\n    return self._request(\r\n           ^^^^^^^^^^^^^^\r\n  File \"/home/rtorrero/Workspace/llamaindex-tutorial/venv/lib/python3.11/site-packages/openai/_base_client.py\", line 890, in _request\r\n    return self._retry_request(\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/rtorrero/Workspace/llamaindex-tutorial/venv/lib/python3.11/site-packages/openai/_base_client.py\", line 925, in _retry_request\r\n    return self._request(\r\n           ^^^^^^^^^^^^^^\r\n  File \"/home/rtorrero/Workspace/llamaindex-tutorial/venv/lib/python3.11/site-packages/openai/_base_client.py\", line 897, in _request\r\n    raise APIConnectionError(request=request) from err\r\nopenai.APIConnectionError: Connection error.\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8856/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8856/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8855",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8855/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8855/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8855/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8855",
        "id": 1988826313,
        "node_id": "PR_kwDOIWuq585fNKwY",
        "number": 8855,
        "title": "one line fix for wrapping of custom function tools to create OpenAI assistant",
        "user": {
            "login": "JohannesHa",
            "id": 26834619,
            "node_id": "MDQ6VXNlcjI2ODM0NjE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/26834619?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JohannesHa",
            "html_url": "https://github.com/JohannesHa",
            "followers_url": "https://api.github.com/users/JohannesHa/followers",
            "following_url": "https://api.github.com/users/JohannesHa/following{/other_user}",
            "gists_url": "https://api.github.com/users/JohannesHa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JohannesHa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JohannesHa/subscriptions",
            "organizations_url": "https://api.github.com/users/JohannesHa/orgs",
            "repos_url": "https://api.github.com/users/JohannesHa/repos",
            "events_url": "https://api.github.com/users/JohannesHa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JohannesHa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-11T08:05:04Z",
        "updated_at": "2023-11-11T17:46:13Z",
        "closed_at": "2023-11-11T17:46:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8855",
            "html_url": "https://github.com/run-llama/llama_index/pull/8855",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8855.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8855.patch",
            "merged_at": "2023-11-11T17:46:10Z"
        },
        "body": "# Description\r\n\r\nFixes #8853\r\n\r\nThe custom tools were previously wrapped twice with `{\"type\": \"function\", \"function\": { \"type\": \"function\",  \"function\": ... }`.\r\nLeading to the issue in #8853.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8855/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8855/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8854",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8854/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8854/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8854/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8854",
        "id": 1988824278,
        "node_id": "PR_kwDOIWuq585fNKXZ",
        "number": 8854,
        "title": "fix Replicate multi-modal LLM + notebook",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-11T07:58:53Z",
        "updated_at": "2023-11-11T09:17:52Z",
        "closed_at": "2023-11-11T09:17:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8854",
            "html_url": "https://github.com/run-llama/llama_index/pull/8854",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8854.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8854.patch",
            "merged_at": "2023-11-11T09:17:51Z"
        },
        "body": "Fixes the following:\r\n1. the replicate multi-modal was using outdated fields in image document metadata\r\n2. The notebook didn't work (no image files)\r\n3. Took out unused image_idx ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8854/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8854/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8853",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8853/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8853/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8853/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8853",
        "id": 1988824000,
        "node_id": "I_kwDOIWuq5852iwvA",
        "number": 8853,
        "title": "[Bug]: Validation Error for tools in OpenAI Assistant Agent example",
        "user": {
            "login": "JohannesHa",
            "id": 26834619,
            "node_id": "MDQ6VXNlcjI2ODM0NjE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/26834619?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JohannesHa",
            "html_url": "https://github.com/JohannesHa",
            "followers_url": "https://api.github.com/users/JohannesHa/followers",
            "following_url": "https://api.github.com/users/JohannesHa/following{/other_user}",
            "gists_url": "https://api.github.com/users/JohannesHa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JohannesHa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JohannesHa/subscriptions",
            "organizations_url": "https://api.github.com/users/JohannesHa/orgs",
            "repos_url": "https://api.github.com/users/JohannesHa/repos",
            "events_url": "https://api.github.com/users/JohannesHa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JohannesHa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-11T07:57:59Z",
        "updated_at": "2023-11-11T17:46:11Z",
        "closed_at": "2023-11-11T17:46:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI'm getting the following validation error when running the [OpenAI Assistant Agent colab example](https://docs.llamaindex.ai/en/latest/examples/agent/openai_assistant_agent.html#assistant-agent-with-your-own-vector-store-retrieval-api)\r\n\r\n```\r\nBadRequestError: Error code: 400 - {'error': {'message': \"8 validation errors for Request\\nbody -> tools -> 0 -> type\\n  unexpected value; permitted: <ToolTypeParam.CODE_INTERPRETER: 'code_interpreter'> (type=value_error.const; given=function; permitted=(<ToolTypeParam.CODE_INTERPRETER: 'code_interpreter'>,))\\nbody -> tools -> 0 -> type\\n  unexpected value; permitted: <ToolTypeParam.RETRIEVAL: 'retrieval'> (type=value_error.const; given=function; permitted=(<ToolTypeParam.RETRIEVAL: 'retrieval'>,))\\nbody -> tools -> 0 -> function -> name\\n  field required (type=value_error.missing)\\nbody -> tools -> 0 -> function -> parameters\\n  field required (type=value_error.missing)\\nbody -> tools -> 1 -> type\\n  unexpected value; permitted: <ToolTypeParam.CODE_INTERPRETER: 'code_interpreter'> (type=value_error.const; given=function; permitted=(<ToolTypeParam.CODE_INTERPRETER: 'code_interpreter'>,))\\nbody -> tools -> 1 -> type\\n  unexpected value; permitted: <ToolTypeParam.RETRIEVAL: 'retrieval'> (type=value_error.const; given=function; permitted=(<ToolTypeParam.RETRIEVAL: 'retrieval'>,))\\nbody -> tools -> 1 -> function -> name\\n  field required (type=value_error.missing)\\nbody -> tools -> 1 -> function -> parameters\\n  field required (type=value_error.missing)\", 'type': 'invalid_request_error', 'param': None, 'code': None}}\r\n```\r\n\r\nIt doesn't seem to wrap custom tools in the right function calling format that the OpenAI Assistant API expects.\n\n### Version\n\nv0.9.0a3\n\n### Steps to Reproduce\n\nJust run the colab: https://docs.llamaindex.ai/en/latest/examples/agent/openai_assistant_agent.html#assistant-agent-with-your-own-vector-store-retrieval-api\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8853/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8853/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8852",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8852/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8852/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8852/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8852",
        "id": 1988810932,
        "node_id": "PR_kwDOIWuq585fNHia",
        "number": 8852,
        "title": "MM RAG eval guide nb",
        "user": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-11T07:25:49Z",
        "updated_at": "2023-11-15T22:01:48Z",
        "closed_at": "2023-11-15T22:01:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8852",
            "html_url": "https://github.com/run-llama/llama_index/pull/8852",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8852.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8852.patch",
            "merged_at": "2023-11-15T22:01:26Z"
        },
        "body": "# Description\r\n\r\nFirst tutorial guide for MM RAG Evaluation:\r\n\r\n- Added `MultiModalRetrieverEvaluator` for being able to evaluate a mm retriever and specifying whether `images` or `text` retrieval wants to be evaluated\r\n- These should be done separately similar to the reason why we have `top_k` params for both text and image cases\r\n- Added `RetrievalEvalMode` to specify the kind of retrieval eval being done: `image` or `text`\r\n    - Added a `mode` field to `RetrievalEvalResult` that defaults to `text` \r\n- Hacky Add: In order to impl the idea of using generated image summaries as text embeddings for images rather than CLIP default (which btw, works well in the example of the notebook)... had to do some hacky stuff. TODO: this needs to get cleaned up, but wanted to get this on people's radar/eyes in case someone else knows of an already cleaner way to do this.\r\n\r\nTODO:\r\n1. Run all 27 MM QA examples to get mean correctness score against the full set\r\n2. Clean up the hacky bit in `query_engine` or omit this part from the notebook until we know of a better way to impl this.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8852/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8852/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8850",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8850/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8850/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8850/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8850",
        "id": 1988604018,
        "node_id": "PR_kwDOIWuq585fMaqL",
        "number": 8850,
        "title": "add retrieval API benchmark",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-11T00:32:20Z",
        "updated_at": "2023-11-11T00:54:46Z",
        "closed_at": "2023-11-11T00:54:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8850",
            "html_url": "https://github.com/run-llama/llama_index/pull/8850",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8850.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8850.patch",
            "merged_at": "2023-11-11T00:54:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8850/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8850/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8849",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8849/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8849/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8849/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8849",
        "id": 1988562901,
        "node_id": "PR_kwDOIWuq585fMR0g",
        "number": 8849,
        "title": "Create fleet_libraries_context.md",
        "user": {
            "login": "adrwz",
            "id": 44193474,
            "node_id": "MDQ6VXNlcjQ0MTkzNDc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/44193474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adrwz",
            "html_url": "https://github.com/adrwz",
            "followers_url": "https://api.github.com/users/adrwz/followers",
            "following_url": "https://api.github.com/users/adrwz/following{/other_user}",
            "gists_url": "https://api.github.com/users/adrwz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adrwz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adrwz/subscriptions",
            "organizations_url": "https://api.github.com/users/adrwz/orgs",
            "repos_url": "https://api.github.com/users/adrwz/repos",
            "events_url": "https://api.github.com/users/adrwz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adrwz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-10T23:37:58Z",
        "updated_at": "2023-11-13T22:55:28Z",
        "closed_at": "2023-11-13T22:55:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8849",
            "html_url": "https://github.com/run-llama/llama_index/pull/8849",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8849.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8849.patch",
            "merged_at": "2023-11-13T22:55:28Z"
        },
        "body": "Add the Fleet Context notebook as a .md guide under integrations",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8849/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8849/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8848",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8848/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8848/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8848/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8848",
        "id": 1988538539,
        "node_id": "PR_kwDOIWuq585fMMi9",
        "number": 8848,
        "title": "Disable legacy github actions",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-10T23:05:17Z",
        "updated_at": "2023-11-10T23:11:11Z",
        "closed_at": "2023-11-10T23:11:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8848",
            "html_url": "https://github.com/run-llama/llama_index/pull/8848",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8848.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8848.patch",
            "merged_at": "2023-11-10T23:11:10Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8848/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8848/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8847",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8847/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8847/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8847/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8847",
        "id": 1988532509,
        "node_id": "PR_kwDOIWuq585fMLJ7",
        "number": 8847,
        "title": "v0.9.0a2",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T23:01:43Z",
        "updated_at": "2023-11-13T21:46:27Z",
        "closed_at": "2023-11-13T21:46:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8847",
            "html_url": "https://github.com/run-llama/llama_index/pull/8847",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8847.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8847.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8847/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8847/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8846",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8846/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8846/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8846/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8846",
        "id": 1988424528,
        "node_id": "PR_kwDOIWuq585fLzJm",
        "number": 8846,
        "title": "[test] remove pydantic handling",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-10T21:25:41Z",
        "updated_at": "2023-11-10T21:39:57Z",
        "closed_at": "2023-11-10T21:39:56Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8846",
            "html_url": "https://github.com/run-llama/llama_index/pull/8846",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8846.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8846.patch",
            "merged_at": "2023-11-10T21:39:56Z"
        },
        "body": "These objects are not pydantic, and therefore do not need this special handler.\r\n\r\nhttps://docs.pydantic.dev/1.10/usage/schema/#modifying-schema-in-custom-fields\r\n\r\nThe new version requires the object to be a pydnatic object \ud83e\udd14 ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8846/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8846/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8845",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8845/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8845/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8845/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8845",
        "id": 1988343529,
        "node_id": "PR_kwDOIWuq585fLhEf",
        "number": 8845,
        "title": "Update MM retrieval notebook using new MM framework",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-10T20:29:56Z",
        "updated_at": "2023-11-10T21:20:52Z",
        "closed_at": "2023-11-10T21:20:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8845",
            "html_url": "https://github.com/run-llama/llama_index/pull/8845",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8845.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8845.patch",
            "merged_at": "2023-11-10T21:20:51Z"
        },
        "body": "# Description\r\n\r\nAdopt old MM retrieval notebook to new MM framework\r\n\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8845/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8845/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8844",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8844/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8844/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8844/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8844",
        "id": 1988261262,
        "node_id": "PR_kwDOIWuq585fLO2j",
        "number": 8844,
        "title": "Fix ImageNode type from NodeWithScore for SimpleMultiModalQueryEngine",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-10T19:32:18Z",
        "updated_at": "2023-11-10T19:37:51Z",
        "closed_at": "2023-11-10T19:37:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8844",
            "html_url": "https://github.com/run-llama/llama_index/pull/8844",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8844.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8844.patch",
            "merged_at": "2023-11-10T19:37:50Z"
        },
        "body": "\r\nSimpleMultiModalQueryEngine has this issue\r\n# Description\r\n\r\n```\r\nAttributeError                            Traceback (most recent call last)\r\n/Users/haotianzhang/llama_index/docs/examples/multi_modal/gpt4v_multi_modal_retrieval.ipynb Cell 25 line 2\r\n     16 query_engine = index.as_query_engine(\r\n     17     multi_modal_llm=openai_mm_llm, text_qa_template=qa_tmpl\r\n     18 )\r\n     20 query_str = \"Tell me more about the Porsche\"\r\n---> 21 response = query_engine.query(query_str)\r\n\r\nFile ~/llama_index/llama_index/indices/query/base.py:31, in BaseQueryEngine.query(self, str_or_query_bundle)\r\n     29 if isinstance(str_or_query_bundle, str):\r\n     30     str_or_query_bundle = QueryBundle(str_or_query_bundle)\r\n---> 31 return self._query(str_or_query_bundle)\r\n\r\nFile ~/llama_index/llama_index/query_engine/multi_modal.py:145, in SimpleMultiModalQueryEngine._query(self, query_bundle)\r\n    139         nodes = self.retrieve(query_bundle)\r\n    141         retrieve_event.on_end(\r\n    142             payload={EventPayload.NODES: nodes},\r\n    143         )\r\n--> 145     response = self.synthesize(\r\n    146         query_bundle,\r\n    147         nodes=nodes,\r\n    148     )\r\n    150     query_event.on_end(payload={EventPayload.RESPONSE: response})\r\n    152 return response\r\n...\r\n     42         \"file_path\" in image_document.metadata\r\n     43         and image_document.metadata[\"file_path\"] != \"\"\r\n     44     ):\r\n\r\nAttributeError: 'NodeWithScore' object has no attribute 'image_url'\r\n```\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8844/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8844/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8843",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8843/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8843/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8843/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8843",
        "id": 1988193852,
        "node_id": "PR_kwDOIWuq585fK_l0",
        "number": 8843,
        "title": "v0.9.0a1",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-10T18:53:21Z",
        "updated_at": "2023-11-10T23:01:18Z",
        "closed_at": "2023-11-10T23:01:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8843",
            "html_url": "https://github.com/run-llama/llama_index/pull/8843",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8843.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8843.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nv0.9.0a1",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8843/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8843/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8842",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8842/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8842/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8842/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8842",
        "id": 1987970490,
        "node_id": "I_kwDOIWuq5852fgW6",
        "number": 8842,
        "title": "OpenAI says \"I'm sorry, but as an AI language model, I don't have the capability to execute SQL queries on a live database or access any external systems to retrieve real-time data. However, I can provide you with an example of a...\"",
        "user": {
            "login": "vjr",
            "id": 612302,
            "node_id": "MDQ6VXNlcjYxMjMwMg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/612302?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vjr",
            "html_url": "https://github.com/vjr",
            "followers_url": "https://api.github.com/users/vjr/followers",
            "following_url": "https://api.github.com/users/vjr/following{/other_user}",
            "gists_url": "https://api.github.com/users/vjr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vjr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vjr/subscriptions",
            "organizations_url": "https://api.github.com/users/vjr/orgs",
            "repos_url": "https://api.github.com/users/vjr/repos",
            "events_url": "https://api.github.com/users/vjr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vjr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-10T16:39:28Z",
        "updated_at": "2023-11-10T17:45:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nWhen I try NL query a SQL DB (northwind data sample) with `\"what is the best selling product\"` using OpenAI llm it has recently started to say `\"I'm sorry, but as an AI language model, I don't have the capability to execute SQL queries on a live database or access any external systems to retrieve real-time data. However, I can provide you with an example of a...\"` since the openai devday updates, while before that it was working well with returning the actual response `\"The best selling product is xxx coffee with xxx units sold\"`\r\n\r\nI am running code mostly from the docs/samples which I can provide if required. I wanted to ask whether this is a known issue or my mistake and what could be the resolution?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8842/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8842/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8841",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8841/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8841/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8841/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8841",
        "id": 1987952128,
        "node_id": "PR_kwDOIWuq585fKJ0p",
        "number": 8841,
        "title": "[version] bump version to 0.8.67",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-10T16:28:02Z",
        "updated_at": "2023-11-10T16:37:45Z",
        "closed_at": "2023-11-10T16:37:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8841",
            "html_url": "https://github.com/run-llama/llama_index/pull/8841",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8841.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8841.patch",
            "merged_at": "2023-11-10T16:37:44Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8841/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8841/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8840",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8840/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8840/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8840/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8840",
        "id": 1987842407,
        "node_id": "PR_kwDOIWuq585fJxg0",
        "number": 8840,
        "title": "Change mutli_modal_base naming",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-10T15:29:41Z",
        "updated_at": "2023-11-10T15:39:52Z",
        "closed_at": "2023-11-10T15:39:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8840",
            "html_url": "https://github.com/run-llama/llama_index/pull/8840",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8840.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8840.patch",
            "merged_at": "2023-11-10T15:39:51Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8840/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8840/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8839",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8839/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8839/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8839/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8839",
        "id": 1987834927,
        "node_id": "I_kwDOIWuq5852e_Qv",
        "number": 8839,
        "title": "[Question]: Setting global service_context",
        "user": {
            "login": "utility-aagrawal",
            "id": 140737044,
            "node_id": "U_kgDOCGN6FA",
            "avatar_url": "https://avatars.githubusercontent.com/u/140737044?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/utility-aagrawal",
            "html_url": "https://github.com/utility-aagrawal",
            "followers_url": "https://api.github.com/users/utility-aagrawal/followers",
            "following_url": "https://api.github.com/users/utility-aagrawal/following{/other_user}",
            "gists_url": "https://api.github.com/users/utility-aagrawal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/utility-aagrawal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/utility-aagrawal/subscriptions",
            "organizations_url": "https://api.github.com/users/utility-aagrawal/orgs",
            "repos_url": "https://api.github.com/users/utility-aagrawal/repos",
            "events_url": "https://api.github.com/users/utility-aagrawal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/utility-aagrawal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-10T15:25:07Z",
        "updated_at": "2023-11-10T17:52:39Z",
        "closed_at": "2023-11-10T17:52:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi All, I have a question about using global service context. I have built a RAG Q&A pipeline using Llamaindex and it has 2 components: 1) Indexing documents every time a directory is updated 2) Query the index. I am using local models for embedding and LLM so I am setting service_context separately for both of these components. That takes about 4 seconds each time. I am trying to reduce the time my pipeline takes to answer a question. Is it something setting global service_context can help with?\r\n\r\nIf yes, do I need to set it once on a machine? I am trying to understand how does global service_context work. Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8839/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8839/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8838",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8838/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8838/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8838/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8838",
        "id": 1987834555,
        "node_id": "PR_kwDOIWuq585fJvyB",
        "number": 8838,
        "title": "remove commonly unpicklable entries",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-10T15:24:52Z",
        "updated_at": "2023-11-10T16:05:30Z",
        "closed_at": "2023-11-10T16:05:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8838",
            "html_url": "https://github.com/run-llama/llama_index/pull/8838",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8838.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8838.patch",
            "merged_at": "2023-11-10T16:05:29Z"
        },
        "body": "# Description\r\n\r\nTiktoken is famously un-picklable, but it's used all across LlamaIndex.\r\n\r\nHowever, with a sneaky wave of a wand (and relying on `BaseComponent` inheritance), we can fix this by removing unpicklable entries.\r\n\r\nThis probably won't cover every edge case, but it gets most.\r\n\r\nTested with `pickle.dumps(index)` and `pickle.dumps(index.as_query_engine())`.\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/8835\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8838/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8838/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8837",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8837/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8837/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8837/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8837",
        "id": 1987714301,
        "node_id": "I_kwDOIWuq5852ehz9",
        "number": 8837,
        "title": "[Question]: How to use VectorStoreIndex with French HuggingFace Embedding ?",
        "user": {
            "login": "mahmoudben96",
            "id": 47220737,
            "node_id": "MDQ6VXNlcjQ3MjIwNzM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/47220737?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mahmoudben96",
            "html_url": "https://github.com/mahmoudben96",
            "followers_url": "https://api.github.com/users/mahmoudben96/followers",
            "following_url": "https://api.github.com/users/mahmoudben96/following{/other_user}",
            "gists_url": "https://api.github.com/users/mahmoudben96/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mahmoudben96/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mahmoudben96/subscriptions",
            "organizations_url": "https://api.github.com/users/mahmoudben96/orgs",
            "repos_url": "https://api.github.com/users/mahmoudben96/repos",
            "events_url": "https://api.github.com/users/mahmoudben96/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mahmoudben96/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-10T14:15:43Z",
        "updated_at": "2023-11-10T21:17:27Z",
        "closed_at": "2023-11-10T21:17:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello Guys,\r\n\r\nI am working on a RAG project and I encountered a problem while trying to use embeddings from HuggingFace in llama-index and I was hoping that someone could help me please.\r\nI tried multiple embeddings in **French/Multilanguages** from HuggingFace and they do not work (eg : https://huggingface.co/antoinelouis/biencoder-camembert-base-mmarcoFR). The only that works for me is the english BAAI-bge family.\r\n\r\n\r\nI used the code below :\r\n\r\n\r\n```\r\nfrom llama_index.finetuning import EmbeddingQAFinetuneDataset\r\n\r\ndataset = EmbeddingQAFinetuneDataset(\"path_to_dataset\")\r\n\r\ncorpus = dataset.corpus\r\nnodes = [TextNode(id_=id_, text=text) for id_, text in corpus.items()]\r\n\r\nfrom llama_index\r\n\r\nfrom llama_index import ServiceContext, VectorStoreIndex, Simple\r\nfrom llama_index.embeddings import HuggingFaceEmbedding\r\n\r\nembed_model = HuggingFaceEmbedding(\"local_path_to_model\")\r\nservice_context = ServiceContext.from_defaults(embed_model=embed_model)\r\n\r\nindex = VectorStoreIndex(nodes, service_context=service_context, show_progress=True)\r\n```\r\nThe last line crashes and gives me the error :\r\n```\r\nCUDA error : CUBLAS_STATUS_NOT_INITIALIZED when calling `cublasCreate(handle)`\r\n```\r\nWhen I tried to use the CPU, I get another error \r\n```\r\nIndexError : index out of range in self\r\n```\r\n\r\nHere are some specs :\r\n- OS : Linux\r\n- GPU : Nvidia A100 80GB of VRAM\r\n- CUDA version : 11.8 (I am unable to change this because I am not the admin on this machine).\r\n- torch version : 2.0.1 (To my knowledge, it's the latest one that works with this version of CUDA).\r\n- python version : 3.10.6\r\n- llama-index version : 0.8.65\r\n\r\nPS : This Embedding to create a RAG works just fine in langchain\r\nPS-2 : A coworker told me that the model I tried to use doesn't have a pooling. When used via sentence-transformers (hence langchain), a mean pooling is generated. HuggingFaceEmbedding from llama_index.embeddings might not generate the pooling.\r\n\r\nThank you very much for you help,\r\nKind regards,\r\nMahmoud",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8837/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8837/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8836",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8836/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8836/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8836/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8836",
        "id": 1987686730,
        "node_id": "I_kwDOIWuq5852ebFK",
        "number": 8836,
        "title": "[Question]: Why included embedding still get warning for knowledge graph index?",
        "user": {
            "login": "keenhon",
            "id": 13294169,
            "node_id": "MDQ6VXNlcjEzMjk0MTY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13294169?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/keenhon",
            "html_url": "https://github.com/keenhon",
            "followers_url": "https://api.github.com/users/keenhon/followers",
            "following_url": "https://api.github.com/users/keenhon/following{/other_user}",
            "gists_url": "https://api.github.com/users/keenhon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/keenhon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/keenhon/subscriptions",
            "organizations_url": "https://api.github.com/users/keenhon/orgs",
            "repos_url": "https://api.github.com/users/keenhon/repos",
            "events_url": "https://api.github.com/users/keenhon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/keenhon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-10T14:01:44Z",
        "updated_at": "2023-11-10T14:33:51Z",
        "closed_at": "2023-11-10T14:33:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nVersion: 0.8.66\r\nI want to understand more on KnowledgeGraphIndex. I already set to include_embeddings \r\n\r\nindex = KnowledgeGraphIndex.from_documents(\r\n    documents,\r\n    max_triplets_per_chunk=10,\r\n    storage_context=storage_context,\r\n    service_context=service_context,\r\n    include_embeddings=True,\r\n)\r\n\r\nHowever, when I query, I get this warning. I am confused.\r\nWARNING:llama_index.indices.knowledge_graph.retrievers:Index was not constructed with embeddings, skipping embedding usage...\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8836/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8836/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8835",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8835/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8835/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8835/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8835",
        "id": 1987507748,
        "node_id": "I_kwDOIWuq5852dvYk",
        "number": 8835,
        "title": "[Question]: How to Query RAG  systems with Multiple prompt concurently ",
        "user": {
            "login": "okoliechykwuka",
            "id": 51082506,
            "node_id": "MDQ6VXNlcjUxMDgyNTA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/51082506?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/okoliechykwuka",
            "html_url": "https://github.com/okoliechykwuka",
            "followers_url": "https://api.github.com/users/okoliechykwuka/followers",
            "following_url": "https://api.github.com/users/okoliechykwuka/following{/other_user}",
            "gists_url": "https://api.github.com/users/okoliechykwuka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/okoliechykwuka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/okoliechykwuka/subscriptions",
            "organizations_url": "https://api.github.com/users/okoliechykwuka/orgs",
            "repos_url": "https://api.github.com/users/okoliechykwuka/repos",
            "events_url": "https://api.github.com/users/okoliechykwuka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/okoliechykwuka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-10T12:11:46Z",
        "updated_at": "2023-11-10T16:05:30Z",
        "closed_at": "2023-11-10T16:05:30Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI want to query the RAG system using multiple questions/queries concurrently.\r\n\r\nI am using multiprocessing to do this but llama-index RAG kept throwing an error  `TypeError: cannot pickle 'builtins.CoreBPE' object` as a result of llama-index implementation of RAG that doesn't support multiprocessing.\r\n\r\nIs there a module I can use for this or a solution to this?\r\n\r\n\r\nCode:\r\n\r\n```\r\nfrom llama_index import VectorStoreIndex\r\nfrom llama_index import Document\r\nimport multiprocessing\r\n\r\nclass ChatBotManager:\r\n    def __init__(self, rerank):\r\n        self.rerank = rerank\r\n      \r\n    def get_query_engine(self, document):\r\n        #  load document\r\n        # docs = self.get_docs(document)\r\n        # build index\r\n        index = VectorStoreIndex.from_documents(documents=document)\r\n        query_engine = index.as_query_engine(\r\n            similarity_top_k=10, node_postprocessors=[self.rerank]\r\n        )\r\n\r\n        return query_engine\r\n    \r\n    # @staticmethod\r\n    def chat_with_data_bot(self, prompt, query_engine):\r\n        \"\"\"\r\n        Perform a chat interaction with the bot.\r\n        \r\n        Args:\r\n            prompt: User's input.\r\n            qa: Initialized RetrieverQueryEngine \r\n            \r\n        Returns:\r\n            Bot's response.\r\n        \"\"\"\r\n        \r\n        response = query_engine.query(\r\n                        prompt,\r\n                    )\r\n        \r\n        return  response\r\n    \r\n    def parallel_process_inputs(self, input_value, query_engine):\r\n        if type(input_value) == str:\r\n            results = self.chat_with_data_bot(input_value, query_engine)\r\n        elif type(input_value) == tuple:\r\n            with multiprocessing.Pool(processes=len(input_value)) as pool:\r\n                results = pool.starmap(self.chat_with_data_bot, [(input1, query_engine) for input1 in input_value])\r\n            results = {'company_profile': results[0], 'company_details': results[1]}\r\n        else: \r\n            with multiprocessing.Pool(processes=len(input_value)) as pool:\r\n                results = pool.starmap(self.chat_with_data_bot, [(input1, query_engine) for input1 in input_value])\r\n            results = {'requirement': results[0],'financial_requirement':results[1], 'scope': results[2], 'evaluation_criteria': results[3], \"expected_rfp_response\": results[4],\r\n                       'budget_and_financials': results[5], 'legal_and_contractual': results[6], 'submission_guidelines': results[7], \"project_timeline\": results[8],\r\n                       'vendor_responsibilities': results[9], 'communication_and_reporting': results[10], 'objective': results[11], \"deliverable\": results[12],\r\n                       'qualification': results[13], \"technical_requirement\": results[14], \"project_duration_and_key_stages\": results[15],\r\n                       'collaboration_methods': results[16], \"update_frequency\": results[17]}\r\n            \r\n        return results\r\n        \r\n \r\nif __name__ == \"__main__\":\r\n    from pathlib import Path\r\n   from llama_index import download_loader\r\n\r\n   PDFReader = download_loader(\"PDFReader\")\r\n\r\n    loader = PDFReader()\r\n   documents = loader.load_data(file=Path(path))\r\n   chatbot = ChatBotManager(rerank)\r\n   query_engine = chatbot.get_query_engine(documents)\r\n   output = chatbot.parallel_process_inputs(information_list, query_engine)\r\n\r\n```\r\n\r\ninformation_list contains a lot of questions.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8835/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8835/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8834",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8834/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8834/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8834/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8834",
        "id": 1987344873,
        "node_id": "I_kwDOIWuq5852dHnp",
        "number": 8834,
        "title": "[Question]: How to work with query_wrapper_prompt=PromptTemplate()?",
        "user": {
            "login": "kiasar",
            "id": 23178294,
            "node_id": "MDQ6VXNlcjIzMTc4Mjk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/23178294?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kiasar",
            "html_url": "https://github.com/kiasar",
            "followers_url": "https://api.github.com/users/kiasar/followers",
            "following_url": "https://api.github.com/users/kiasar/following{/other_user}",
            "gists_url": "https://api.github.com/users/kiasar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kiasar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kiasar/subscriptions",
            "organizations_url": "https://api.github.com/users/kiasar/orgs",
            "repos_url": "https://api.github.com/users/kiasar/repos",
            "events_url": "https://api.github.com/users/kiasar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kiasar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-11-10T10:23:53Z",
        "updated_at": "2023-11-10T18:56:38Z",
        "closed_at": "2023-11-10T15:49:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi,\r\nI find it difficult to understand how to work with `query_wrapper_prompt=PromptTemplate()`.\r\n\r\nIs there any example in the documents for it? I was not able to find any.\r\n\r\nFor example, can you help me find out how to write this template from [zephyr-7b](https://huggingface.co/HuggingFaceH4/zephyr-7b-beta) using your API?\r\n```python\r\nmessages = [\r\n    {\r\n        \"role\": \"system\",\r\n        \"content\": \"You are a friendly chatbot who always responds in the style of a pirate\",\r\n    },\r\n    {\"role\": \"user\", \"content\": \"How many helicopters can a human eat in one sitting?\"},\r\n]\r\nprompt = pipe.tokenizer.apply_chat_template(messages, tokenize=False, add_generation_prompt=True)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8834/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8834/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8833",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8833/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8833/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8833/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8833",
        "id": 1987301397,
        "node_id": "I_kwDOIWuq5852c9AV",
        "number": 8833,
        "title": "[Bug]:  Constant timeouts after multiple calls with async",
        "user": {
            "login": "Inkorak",
            "id": 52286717,
            "node_id": "MDQ6VXNlcjUyMjg2NzE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/52286717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Inkorak",
            "html_url": "https://github.com/Inkorak",
            "followers_url": "https://api.github.com/users/Inkorak/followers",
            "following_url": "https://api.github.com/users/Inkorak/following{/other_user}",
            "gists_url": "https://api.github.com/users/Inkorak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Inkorak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Inkorak/subscriptions",
            "organizations_url": "https://api.github.com/users/Inkorak/orgs",
            "repos_url": "https://api.github.com/users/Inkorak/repos",
            "events_url": "https://api.github.com/users/Inkorak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Inkorak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-10T09:58:16Z",
        "updated_at": "2023-11-11T02:55:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nConstant timeouts after multiple asynchronous calls to openai. It was discovered when use async methods, constant timeouts begin. If you do this without async or with async, but on the old version like 0.8.55 and openai 0.28, then there are no problems.\n\n### Version\n\n0.8.66\n\n### Steps to Reproduce\n\nUse any async methods. Like evaluators multiple times in row.\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8833/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8833/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8832",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8832/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8832/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8832/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8832",
        "id": 1987248835,
        "node_id": "I_kwDOIWuq5852cwLD",
        "number": 8832,
        "title": "[Bug]: VectorStoreIndex.refresh_ref_docs() duplicate docs with PGVectorStore",
        "user": {
            "login": "3chospirits",
            "id": 48846930,
            "node_id": "MDQ6VXNlcjQ4ODQ2OTMw",
            "avatar_url": "https://avatars.githubusercontent.com/u/48846930?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/3chospirits",
            "html_url": "https://github.com/3chospirits",
            "followers_url": "https://api.github.com/users/3chospirits/followers",
            "following_url": "https://api.github.com/users/3chospirits/following{/other_user}",
            "gists_url": "https://api.github.com/users/3chospirits/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/3chospirits/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/3chospirits/subscriptions",
            "organizations_url": "https://api.github.com/users/3chospirits/orgs",
            "repos_url": "https://api.github.com/users/3chospirits/repos",
            "events_url": "https://api.github.com/users/3chospirits/events{/privacy}",
            "received_events_url": "https://api.github.com/users/3chospirits/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-10T09:30:16Z",
        "updated_at": "2023-11-10T15:46:52Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\n`VectorStoreIndex.refresh_ref_docs()` inserts every time instead of the expected upsert behavior when using PGVectorStore as vector store\r\n\r\n### Version\r\n\r\n0.8.66\r\n\r\n### Steps to Reproduce\r\n\r\nHere are snippets of my code:\r\n```py\r\nfrom llama_index.vector_stores import PGVectorStore\r\nfrom llama_index.indices.vector_store import VectorStoreIndex\r\n\r\nconfluence_vector_store = PGVectorStore.from_params(\r\n    database=os.environ.get(\"DB_DATABASE\"),\r\n    host=os.environ.get(\"DB_HOST\"),\r\n    password=os.environ.get(\"DB_PASSWORD\"),\r\n    port=os.environ.get(\"DB_PORT\"),\r\n    user=os.environ.get(\"DB_USER\"),\r\n    table_name=\"confluence\",\r\n    embed_dim=1536\r\n)\r\n\r\nconfluence_index = VectorStoreIndex.from_vector_store(\r\n    vector_store=confluence_vector_store, delete_from_docstore=True)\r\n\r\ndocs = Document(\r\n        text=\"This isn't in the index yet, but it will be soon!\",\r\n        id_=\"doc_id_3\",\r\n    )\r\n\r\nconfluence_index.refresh_ref_docs(docs, update_kwargs={\"delete_kwargs\": {\"delete_from_docstore\": True}})\r\n\r\n\r\n# Additional Debugging code I tried to run to locate the problem. It seems like the data isn't being added to the datastore at all, which is why the get_document_hash() function in refresh_ref_docs() is returning null. \r\n# print(confluence_index._storage_context.docstore._kvstore.get_all())\r\n# ^ this ends up returning an empty kvstore even when the vector storage is populated.\r\n```\r\n\r\nRunning the same code twice SHOULD have it only insert the document once into the document, with the second one doing nothing since the document is already there. Hoewver, it ends up being inserted twice.\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8832/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8832/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8831",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8831/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8831/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8831/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8831",
        "id": 1987082220,
        "node_id": "I_kwDOIWuq5852cHfs",
        "number": 8831,
        "title": "[Bug]: myscale.py cannot pass mypy check",
        "user": {
            "login": "zhenlohuang",
            "id": 2987182,
            "node_id": "MDQ6VXNlcjI5ODcxODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2987182?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zhenlohuang",
            "html_url": "https://github.com/zhenlohuang",
            "followers_url": "https://api.github.com/users/zhenlohuang/followers",
            "following_url": "https://api.github.com/users/zhenlohuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/zhenlohuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zhenlohuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zhenlohuang/subscriptions",
            "organizations_url": "https://api.github.com/users/zhenlohuang/orgs",
            "repos_url": "https://api.github.com/users/zhenlohuang/repos",
            "events_url": "https://api.github.com/users/zhenlohuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zhenlohuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-10T07:35:43Z",
        "updated_at": "2023-11-10T15:48:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nmyscale cannot pass mypy check after clickhouse_connect installed.\r\n\r\n```\r\ntests/prompts/test_base.py:165: error: Any? not callable  [misc]\r\ntests/indices/vector_store/test_myscale.py:51: error: Argument \"host\" has incompatible type \"None\"; expected \"str\"  [arg-type]\r\ntests/indices/vector_store/test_myscale.py:53: error: Argument \"username\" has incompatible type \"None\"; expected \"str\"  [arg-type]\r\ntests/indices/vector_store/test_myscale.py:54: error: Argument \"password\" has incompatible type \"None\"; expected \"str\"  [arg-type]\r\ntests/indices/vector_store/test_myscale.py:79: error: Argument \"host\" has incompatible type \"None\"; expected \"str\"  [arg-type]\r\ntests/indices/vector_store/test_myscale.py:81: error: Argument \"username\" has incompatible type \"None\"; expected \"str\"  [arg-type]\r\ntests/indices/vector_store/test_myscale.py:82: error: Argument \"password\" has incompatible type \"None\"; expected \"str\"  [arg-type]\r\ntests/indices/vector_store/test_myscale.py:107: error: Argument \"host\" has incompatible type \"None\"; expected \"str\"  [arg-type]\r\ntests/indices/vector_store/test_myscale.py:109: error: Argument \"username\" has incompatible type \"None\"; expected \"str\"  [arg-type]\r\ntests/indices/vector_store/test_myscale.py:110: error: Argument \"password\" has incompatible type \"None\"; expected \"str\"  [arg-type]\r\n```\r\n\n\n### Version\n\n0.8.86\n\n### Steps to Reproduce\n\n1. poetry add clickhouse_connect\r\n2. make lint\r\n\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8831/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8831/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8830",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8830/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8830/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8830/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8830",
        "id": 1986927021,
        "node_id": "I_kwDOIWuq5852bhmt",
        "number": 8830,
        "title": "[Bug]: service context not using the suggest LLM?",
        "user": {
            "login": "hemanth",
            "id": 18315,
            "node_id": "MDQ6VXNlcjE4MzE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/18315?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemanth",
            "html_url": "https://github.com/hemanth",
            "followers_url": "https://api.github.com/users/hemanth/followers",
            "following_url": "https://api.github.com/users/hemanth/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemanth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemanth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemanth/subscriptions",
            "organizations_url": "https://api.github.com/users/hemanth/orgs",
            "repos_url": "https://api.github.com/users/hemanth/repos",
            "events_url": "https://api.github.com/users/hemanth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemanth/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-11-10T05:23:01Z",
        "updated_at": "2023-11-17T13:38:20Z",
        "closed_at": "2023-11-10T13:58:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nTrying to use `llama_index.llms.palm` as `llm` for service_context and it still seems to be connecting to OpenAI?\r\n\r\n```\r\nThe above exception was the direct cause of the following exception:\r\n\r\nLocalProtocolError                        Traceback (most recent call last)\r\nLocalProtocolError: Illegal header value b'Bearer '\r\n\r\nThe above exception was the direct cause of the following exception:\r\n\r\nAPIConnectionError                        Traceback (most recent call last)\r\n/usr/local/lib/python3.10/dist-packages/openai/_base_client.py in _request(self, cast_to, options, remaining_retries, stream, stream_cls)\r\n    895                     stream_cls=stream_cls,\r\n    896                 )\r\n--> 897             raise APIConnectionError(request=request) from err\r\n    898 \r\n    899         return self._process_response(\r\n\r\nAPIConnectionError: Connection error.\r\n```\n\n### Version\n\n0.8.66\n\n### Steps to Reproduce\n\n```py\r\nimport os\r\n\r\nfrom IPython.display import display\r\nfrom llama_index import ServiceContext, VectorStoreIndex, download_loader\r\nfrom llama_index.llms.palm import PaLM\r\n\r\nllm = PaLM(os.environ['API_KEY'])\r\n\r\nSimpleWebPageReader = download_loader(\"SimpleWebPageReader\")\r\n\r\nloader = SimpleWebPageReader()\r\ndocuments = loader.load_data(urls=['https://v8.dev/blog/wasm-gc-porting'])\r\n\r\nservice_context = ServiceContext.from_defaults(llm=llm,\r\n                                               chunk_size=800,\r\n                                               chunk_overlap=20)\r\n\r\nindex = VectorStoreIndex.from_documents(documents,\r\n                                        service_context=service_context)\r\n\r\nengine = index.as_query_engine()\r\n\r\nresponse = engine.query(\"Summarize the website in 5 points\")\r\ndisplay((f\"{response}\"))\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8830/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8830/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8829",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8829/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8829/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8829/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8829",
        "id": 1986845858,
        "node_id": "PR_kwDOIWuq585fGXI9",
        "number": 8829,
        "title": "[Draft] Init Multi Modal Query Engine ",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-10T04:19:19Z",
        "updated_at": "2023-12-01T21:54:52Z",
        "closed_at": "2023-12-01T21:54:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8829",
            "html_url": "https://github.com/run-llama/llama_index/pull/8829",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8829.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8829.patch",
            "merged_at": null
        },
        "body": "# Description\r\nSimple Multi Modal Query Engine Base\r\nRight now it only return node contents\r\n\r\nTODO synthesizer for image and texts\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8829/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8829/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8828",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8828/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8828/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8828/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8828",
        "id": 1986825489,
        "node_id": "PR_kwDOIWuq585fGSo1",
        "number": 8828,
        "title": "Remove deprecated code in vector store",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-10T04:00:50Z",
        "updated_at": "2023-11-10T19:01:49Z",
        "closed_at": "2023-11-10T19:01:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8828",
            "html_url": "https://github.com/run-llama/llama_index/pull/8828",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8828.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8828.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nClean up \r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8828/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8828/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8827",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8827/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8827/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8827/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8827",
        "id": 1986761223,
        "node_id": "PR_kwDOIWuq585fGFf4",
        "number": 8827,
        "title": "Issue#346 - Allow multiple Langchain prompt template keys",
        "user": {
            "login": "Vydruth",
            "id": 10277192,
            "node_id": "MDQ6VXNlcjEwMjc3MTky",
            "avatar_url": "https://avatars.githubusercontent.com/u/10277192?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Vydruth",
            "html_url": "https://github.com/Vydruth",
            "followers_url": "https://api.github.com/users/Vydruth/followers",
            "following_url": "https://api.github.com/users/Vydruth/following{/other_user}",
            "gists_url": "https://api.github.com/users/Vydruth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Vydruth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Vydruth/subscriptions",
            "organizations_url": "https://api.github.com/users/Vydruth/orgs",
            "repos_url": "https://api.github.com/users/Vydruth/repos",
            "events_url": "https://api.github.com/users/Vydruth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Vydruth/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-10T03:01:36Z",
        "updated_at": "2023-11-10T03:10:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8827",
            "html_url": "https://github.com/run-llama/llama_index/pull/8827",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8827.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8827.patch",
            "merged_at": null
        },
        "body": "## Work in Progress!!\r\n\r\n# Description\r\n\r\nThe change allows users to use multiple prompt template keys.\r\n\r\nFixes # https://github.com/run-llama/llama_index/issues/346\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works - *Need some help testing this, as this is my first time working with this repo and I am not aware of how to reproduce the issue. I have reached out on the discord chat but haven't got any response about the same. Any help is appreciated.*\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8827/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8827/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8826",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8826/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8826/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8826/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8826",
        "id": 1986673471,
        "node_id": "PR_kwDOIWuq585fFzTB",
        "number": 8826,
        "title": "Adjust import paths ",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-10T01:22:56Z",
        "updated_at": "2023-11-10T03:46:16Z",
        "closed_at": "2023-11-10T03:46:15Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8826",
            "html_url": "https://github.com/run-llama/llama_index/pull/8826",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8826.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8826.patch",
            "merged_at": "2023-11-10T03:46:15Z"
        },
        "body": "# Description\r\n- reduce root level imports (breaking change)\r\n- make `llama_index.indices` consistent, actually expose all indices (only addition)\r\n- move `llama_index.indices.postprocessor` to `llama_index.postprocessor` (keep old for backward compatibility)\r\n- move `llama_index.indices.query.schema.*` to `llama_index.schema` (keep old for backward compatibility)\r\n- create `llama_index.core` and move `BaseQueryEngine`, `BaseRetriever` (keep old for backward compatibility)\r\n- move `llama_index.indices.service_context` to `llama_index.service_context` (keep old for backward compatibility)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8826/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8826/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8825",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8825/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8825/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8825/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8825",
        "id": 1986655716,
        "node_id": "PR_kwDOIWuq585fFvcm",
        "number": 8825,
        "title": "Accumulate response synthesizer: use SelectorPromptTemplate for chat \u2026",
        "user": {
            "login": "bmax",
            "id": 158370,
            "node_id": "MDQ6VXNlcjE1ODM3MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/158370?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bmax",
            "html_url": "https://github.com/bmax",
            "followers_url": "https://api.github.com/users/bmax/followers",
            "following_url": "https://api.github.com/users/bmax/following{/other_user}",
            "gists_url": "https://api.github.com/users/bmax/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bmax/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bmax/subscriptions",
            "organizations_url": "https://api.github.com/users/bmax/orgs",
            "repos_url": "https://api.github.com/users/bmax/repos",
            "events_url": "https://api.github.com/users/bmax/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bmax/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-10T01:04:06Z",
        "updated_at": "2023-11-10T04:32:44Z",
        "closed_at": "2023-11-10T04:32:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8825",
            "html_url": "https://github.com/run-llama/llama_index/pull/8825",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8825.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8825.patch",
            "merged_at": "2023-11-10T04:32:43Z"
        },
        "body": "\u2026models\r\n\r\n# Description\r\nAllow Accumulate response mode to use `SelectorPromptTemplate`\r\n\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8825/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8825/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8824",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8824/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8824/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8824/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8824",
        "id": 1986603333,
        "node_id": "I_kwDOIWuq5852aSlF",
        "number": 8824,
        "title": "Poor performance of of vector retriever/engine on queries with keywords",
        "user": {
            "login": "snassimr",
            "id": 6830626,
            "node_id": "MDQ6VXNlcjY4MzA2MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6830626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snassimr",
            "html_url": "https://github.com/snassimr",
            "followers_url": "https://api.github.com/users/snassimr/followers",
            "following_url": "https://api.github.com/users/snassimr/following{/other_user}",
            "gists_url": "https://api.github.com/users/snassimr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snassimr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snassimr/subscriptions",
            "organizations_url": "https://api.github.com/users/snassimr/orgs",
            "repos_url": "https://api.github.com/users/snassimr/repos",
            "events_url": "https://api.github.com/users/snassimr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snassimr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-10T00:04:36Z",
        "updated_at": "2023-11-10T04:30:29Z",
        "closed_at": "2023-11-10T04:30:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi , \r\n\r\nThe question objective isn't llama_index per se.\r\n\r\nI have simple code  up to query engine : \r\n\r\n`\r\nfrom llama_index.embeddings import OpenAIEmbedding\r\nembed_model = OpenAIEmbedding(model='text-embedding-ada-002',\r\n                              embed_batch_size=10)\r\n\r\nnode_parser = SimpleNodeParser.from_defaults(chunk_size = 128,\r\n                                             chunk_overlap = 16,\r\n                                             include_metadata = True)\r\n\r\nservice_context = ServiceContext.from_defaults(llm=llm,\r\n                                               embed_model=embed_model,\r\n                                               node_parser=node_parser)\r\n\r\n    # Build vector index\r\n    vector_index = VectorStoreIndex.from_documents(documents,  service_context=service_context)\r\n\r\n...\r\n`\r\n\r\nI want to present a title of Figure 2 with query = \"Present title of Figure 2\"\r\n\r\nThe top node is retrieved has score > 0.8 and contains text : \". . . . . . . . . . . . . . . . . . 2 .\"\r\n\r\nI tried to use SimpleKeywordTableIndex , but with no success.\r\n\r\nAny clue how I can improve retrieving nodes in this case ?\r\n\r\nThanks\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8824/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8824/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8823",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8823/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8823/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8823/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8823",
        "id": 1986583447,
        "node_id": "PR_kwDOIWuq585fFgKk",
        "number": 8823,
        "title": "[wip] add multi-modal use case section",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-09T23:38:55Z",
        "updated_at": "2023-11-10T16:24:47Z",
        "closed_at": "2023-11-10T16:24:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8823",
            "html_url": "https://github.com/run-llama/llama_index/pull/8823",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8823.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8823.patch",
            "merged_at": "2023-11-10T16:24:46Z"
        },
        "body": "add to \"use cases\"\r\n\r\nwill add module guides to this section, as well as indexes/retrievers once they come out e.g. #8822 ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8823/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8823/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8822",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8822/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8822/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8822/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8822",
        "id": 1986581190,
        "node_id": "PR_kwDOIWuq585fFfrf",
        "number": 8822,
        "title": "Advanced Multi Modal Retrieval Example",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-09T23:35:54Z",
        "updated_at": "2023-11-10T16:08:16Z",
        "closed_at": "2023-11-10T16:08:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8822",
            "html_url": "https://github.com/run-llama/llama_index/pull/8822",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8822.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8822.patch",
            "merged_at": "2023-11-10T16:08:15Z"
        },
        "body": "# Description\r\n\r\n1. A new Multi Modal Retrieval Example on basis of new MM LLM/Vector Store/Index/Retriever/Query Engine classes\r\n2. A simple MM query engine\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8822/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8822/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8821",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8821/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8821/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8821/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8821",
        "id": 1986554672,
        "node_id": "PR_kwDOIWuq585fFZ-a",
        "number": 8821,
        "title": "BUG fix: read image url field directly from ImageDocument field",
        "user": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-09T23:06:31Z",
        "updated_at": "2023-11-09T23:30:14Z",
        "closed_at": "2023-11-09T23:30:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8821",
            "html_url": "https://github.com/run-llama/llama_index/pull/8821",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8821.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8821.patch",
            "merged_at": "2023-11-09T23:30:13Z"
        },
        "body": "# Description\r\nThe `to_openai_multi_modal_payload` utility function is trying to create `image_content` first by looking for `image_url` within the `metadata` of the `ImageDocument`. However, I believe it should be reading directly from the `image_url` field as the `load_image_urls` loads urls from a list and converts them to `ImageDocuments` with `image_url` being populated.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8821/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8821/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8820",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8820/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8820/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8820/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8820",
        "id": 1986545114,
        "node_id": "PR_kwDOIWuq585fFX6Y",
        "number": 8820,
        "title": "Bump pyarrow from 14.0.0 to 14.0.1",
        "user": {
            "login": "dependabot[bot]",
            "id": 49699333,
            "node_id": "MDM6Qm90NDk2OTkzMzM=",
            "avatar_url": "https://avatars.githubusercontent.com/in/29110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dependabot%5Bbot%5D",
            "html_url": "https://github.com/apps/dependabot",
            "followers_url": "https://api.github.com/users/dependabot%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dependabot%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/dependabot%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/dependabot%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dependabot%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5152878030,
                "node_id": "LA_kwDOIWuq588AAAABMyKtzg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/dependencies",
                "name": "dependencies",
                "color": "0366d6",
                "default": false,
                "description": "Pull requests that update a dependency file"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-09T22:57:59Z",
        "updated_at": "2023-11-10T09:23:46Z",
        "closed_at": "2023-11-10T09:23:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8820",
            "html_url": "https://github.com/run-llama/llama_index/pull/8820",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8820.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8820.patch",
            "merged_at": "2023-11-10T09:23:45Z"
        },
        "body": "Bumps [pyarrow](https://github.com/apache/arrow) from 14.0.0 to 14.0.1.\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/apache/arrow/commit/ba537483618196f50c67a90a473039e4d5dc35e0\"><code>ba53748</code></a> MINOR: [Release] Update versions for 14.0.1</li>\n<li><a href=\"https://github.com/apache/arrow/commit/529f3768fa4fce80781cd1a3cbdcf3a826281b14\"><code>529f376</code></a> MINOR: [Release] Update .deb/.rpm changelogs for 14.0.1</li>\n<li><a href=\"https://github.com/apache/arrow/commit/b84bbcac64e184a2b58661385506cff23006cc10\"><code>b84bbca</code></a> MINOR: [Release] Update CHANGELOG.md for 14.0.1</li>\n<li><a href=\"https://github.com/apache/arrow/commit/f14170976372436ec1d03a724d8d3f3925484ecf\"><code>f141709</code></a> <a href=\"https://redirect.github.com/apache/arrow/issues/38607\">GH-38607</a>: [Python] Disable PyExtensionType autoload (<a href=\"https://redirect.github.com/apache/arrow/issues/38608\">#38608</a>)</li>\n<li><a href=\"https://github.com/apache/arrow/commit/5a37e741987e4cba41dfdad2331a308c95b62083\"><code>5a37e74</code></a> <a href=\"https://redirect.github.com/apache/arrow/issues/38431\">GH-38431</a>: [Python][CI] Update fs.type_name checks for s3fs tests (<a href=\"https://redirect.github.com/apache/arrow/issues/38455\">#38455</a>)</li>\n<li>See full diff in <a href=\"https://github.com/apache/arrow/compare/go/v14.0.0...apache-arrow-14.0.1\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pyarrow&package-manager=pip&previous-version=14.0.0&new-version=14.0.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/run-llama/llama_index/network/alerts).\n\n</details>",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8820/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8820/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8819",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8819/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8819/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8819/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8819",
        "id": 1986507295,
        "node_id": "PR_kwDOIWuq585fFPda",
        "number": 8819,
        "title": "OpenAI client improvements",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-09T22:29:24Z",
        "updated_at": "2023-11-11T18:49:11Z",
        "closed_at": "2023-11-11T18:49:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8819",
            "html_url": "https://github.com/run-llama/llama_index/pull/8819",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8819.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8819.patch",
            "merged_at": "2023-11-11T18:49:10Z"
        },
        "body": "# Description\r\n\r\n- bring back key validation\r\n- lower default retries\r\n- set default timeout\r\n- remove automatic embeddings timeout\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/8463\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8819/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8819/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8818",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8818/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8818/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8818/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8818",
        "id": 1986434771,
        "node_id": "PR_kwDOIWuq585fE_k0",
        "number": 8818,
        "title": "fix retriever in citation query engine",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-09T21:32:14Z",
        "updated_at": "2023-11-09T21:59:09Z",
        "closed_at": "2023-11-09T21:59:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8818",
            "html_url": "https://github.com/run-llama/llama_index/pull/8818",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8818.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8818.patch",
            "merged_at": "2023-11-09T21:59:08Z"
        },
        "body": "# Description\r\n\r\nThe citation query engine was not passing in the query bundle to node-postprocessors. Furthermore, it was missing async retrieval support.\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/8817\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8818/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8818/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8817",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8817/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8817/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8817/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8817",
        "id": 1986428515,
        "node_id": "I_kwDOIWuq5852Zn5j",
        "number": 8817,
        "title": "[Bug]: CitationQueryEngine fails when node postprocessor requires a query_bundle argument",
        "user": {
            "login": "tlongatalaya",
            "id": 98911650,
            "node_id": "U_kgDOBeVFog",
            "avatar_url": "https://avatars.githubusercontent.com/u/98911650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tlongatalaya",
            "html_url": "https://github.com/tlongatalaya",
            "followers_url": "https://api.github.com/users/tlongatalaya/followers",
            "following_url": "https://api.github.com/users/tlongatalaya/following{/other_user}",
            "gists_url": "https://api.github.com/users/tlongatalaya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tlongatalaya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tlongatalaya/subscriptions",
            "organizations_url": "https://api.github.com/users/tlongatalaya/orgs",
            "repos_url": "https://api.github.com/users/tlongatalaya/repos",
            "events_url": "https://api.github.com/users/tlongatalaya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tlongatalaya/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "logan-markewich",
                "id": 22285038,
                "node_id": "MDQ6VXNlcjIyMjg1MDM4",
                "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/logan-markewich",
                "html_url": "https://github.com/logan-markewich",
                "followers_url": "https://api.github.com/users/logan-markewich/followers",
                "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
                "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
                "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
                "repos_url": "https://api.github.com/users/logan-markewich/repos",
                "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
                "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-09T21:27:15Z",
        "updated_at": "2023-11-09T21:59:09Z",
        "closed_at": "2023-11-09T21:59:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nWhen using the `SentenceTransformerRerank` node postprocessor with the `CitationQueryEngine`, the `retrieve` method does not pass the `query_bundle` arg to the postprocessor, which throws a ValueError.\n\n### Version\n\nLatest\n\n### Steps to Reproduce\n\nusing the `SentenceTransformerRerank` node postprocessor with the `CitationQueryEngine`\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8817/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8817/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8816",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8816/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8816/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8816/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8816",
        "id": 1986422412,
        "node_id": "PR_kwDOIWuq585fE85Q",
        "number": 8816,
        "title": "[version] bump to v0.8.66",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-09T21:22:23Z",
        "updated_at": "2023-11-09T21:30:13Z",
        "closed_at": "2023-11-09T21:30:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8816",
            "html_url": "https://github.com/run-llama/llama_index/pull/8816",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8816.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8816.patch",
            "merged_at": "2023-11-09T21:30:12Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8816/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8816/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8815",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8815/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8815/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8815/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8815",
        "id": 1986414459,
        "node_id": "I_kwDOIWuq5852Zkd7",
        "number": 8815,
        "title": "[Bug]: SQLAutoVectorQueryEngine Tutorial error",
        "user": {
            "login": "tamanna037",
            "id": 14105107,
            "node_id": "MDQ6VXNlcjE0MTA1MTA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/14105107?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tamanna037",
            "html_url": "https://github.com/tamanna037",
            "followers_url": "https://api.github.com/users/tamanna037/followers",
            "following_url": "https://api.github.com/users/tamanna037/following{/other_user}",
            "gists_url": "https://api.github.com/users/tamanna037/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tamanna037/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tamanna037/subscriptions",
            "organizations_url": "https://api.github.com/users/tamanna037/orgs",
            "repos_url": "https://api.github.com/users/tamanna037/repos",
            "events_url": "https://api.github.com/users/tamanna037/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tamanna037/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-09T21:15:53Z",
        "updated_at": "2023-11-09T23:53:33Z",
        "closed_at": "2023-11-09T23:53:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI am trying to run SQLAutoVectorQueryEngine Tutorial , https://github.com/run-llama/llama_index/blob/main/docs/examples/query_engine/SQLAutoVectorQueryEngine.ipynb. but \r\nresponse = query_engine.query(\r\n    \"Tell me about the arts and culture of the city with the highest\"\r\n    \" population\"\r\n)\r\n\r\nis showing this error. It was working fine 2-3 days ago. Have you changed anything?\r\n---------------------------------------------------------------------------\r\nValueError                                Traceback (most recent call last)\r\n[<ipython-input-53-29d7f42332ec>](https://localhost:8080/#) in <cell line: 1>()\r\n----> 1 response = query_engine.query(\r\n      2     \"Tell me about the arts and culture of the city with the highest\"\r\n      3     \" population\"\r\n      4 )\r\n\r\n4 frames\r\n[/usr/local/lib/python3.10/dist-packages/llama_index/program/openai_program.py](https://localhost:8080/#) in __call__(self, *args, **kwargs)\r\n    123         message = chat_response.message\r\n    124         if \"function_call\" not in message.additional_kwargs:\r\n--> 125             raise ValueError(\r\n    126                 \"Expected function call in ai_message.additional_kwargs, \"\r\n    127                 \"but none found.\"\r\n\r\nValueError: Expected function call in ai_message.additional_kwargs, but none found.\n\n### Version\n\n0.8.65\n\n### Steps to Reproduce\n\nRun the tutorial. \n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8815/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8815/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8814",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8814/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8814/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8814/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8814",
        "id": 1986396209,
        "node_id": "PR_kwDOIWuq585fE3Kx",
        "number": 8814,
        "title": "v0.9",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-09T21:01:21Z",
        "updated_at": "2023-11-15T16:23:09Z",
        "closed_at": "2023-11-15T16:23:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8814",
            "html_url": "https://github.com/run-llama/llama_index/pull/8814",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8814.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8814.patch",
            "merged_at": "2023-11-15T16:23:08Z"
        },
        "body": "# Description\r\nV0.9",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8814/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8814/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8813",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8813/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8813/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8813/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8813",
        "id": 1986375331,
        "node_id": "PR_kwDOIWuq585fEymt",
        "number": 8813,
        "title": "fix retreiver name",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-09T20:44:08Z",
        "updated_at": "2023-11-09T20:50:07Z",
        "closed_at": "2023-11-09T20:50:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8813",
            "html_url": "https://github.com/run-llama/llama_index/pull/8813",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8813.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8813.patch",
            "merged_at": "2023-11-09T20:50:06Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8813/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8813/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8812",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8812/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8812/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8812/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8812",
        "id": 1986356035,
        "node_id": "I_kwDOIWuq5852ZWND",
        "number": 8812,
        "title": "[Bug]: `custom_path` cannot be defined in `download_loader`.",
        "user": {
            "login": "Dilbarjot",
            "id": 46788967,
            "node_id": "MDQ6VXNlcjQ2Nzg4OTY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/46788967?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Dilbarjot",
            "html_url": "https://github.com/Dilbarjot",
            "followers_url": "https://api.github.com/users/Dilbarjot/followers",
            "following_url": "https://api.github.com/users/Dilbarjot/following{/other_user}",
            "gists_url": "https://api.github.com/users/Dilbarjot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Dilbarjot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Dilbarjot/subscriptions",
            "organizations_url": "https://api.github.com/users/Dilbarjot/orgs",
            "repos_url": "https://api.github.com/users/Dilbarjot/repos",
            "events_url": "https://api.github.com/users/Dilbarjot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Dilbarjot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-09T20:30:19Z",
        "updated_at": "2023-11-11T22:16:20Z",
        "closed_at": "2023-11-11T22:16:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nIn recent changes to [readers/download_loader](https://github.com/run-llama/llama_index/blob/0ffb53cdca8b62d22d6e4561b95a49d8f85eff2e/llama_index/readers/download.py#L14C10-L14C10), [custom_dir](https://github.com/run-llama/llama_index/blob/0ffb53cdca8b62d22d6e4561b95a49d8f85eff2e/llama_index/readers/download.py#L42)  is already initialized, and when a user also defines a `custom_path`, that would lead to [ValueError](https://github.com/run-llama/llama_index/blob/0ffb53cdca8b62d22d6e4561b95a49d8f85eff2e/llama_index/download/download_utils.py#L84).\n\n### Version\n\nv0.8.65\n\n### Steps to Reproduce\n\nJust run \r\n```\r\n SimpleDirectoryReader = download_loader(\"SimpleDirectoryReader\", custom_path=\".cache/llamahub_modules\")\r\n  ```\n\n### Relevant Logs/Tracbacks\n\n```shell\n\u2502 /home/venv/lib/python3.10/site-packages/llama_index/ \u2502\r\n\u2502 readers/download.py:38 in download_loader                                                        \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   35 \u2502   Returns:                                                                                \u2502\r\n\u2502   36 \u2502   \u2502   A Loader.                                                                           \u2502\r\n\u2502   37 \u2502   \"\"\"                                                                                     \u2502\r\n\u2502 \u2771 38 \u2502   reader_cls = download_llama_module(                                                     \u2502\r\n\u2502   39 \u2502   \u2502   loader_class,                                                                       \u2502\r\n\u2502   40 \u2502   \u2502   llama_hub_url=loader_hub_url,                                                       \u2502\r\n\u2502   41 \u2502   \u2502   refresh_cache=refresh_cache,                                                        \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502          custom_path = '.cache/llamahub_modules'                                             \u2502 \u2502\r\n\u2502 \u2502         loader_class = 'SimpleDirectoryReader'                                               \u2502 \u2502\r\n\u2502 \u2502       loader_hub_url = 'https://raw.githubusercontent.com/run-llama/llama-hub/main/llama_hu\u2026 \u2502 \u2502\r\n\u2502 \u2502        refresh_cache = False                                                                 \u2502 \u2502\r\n\u2502 \u2502 use_gpt_index_import = False                                                                 \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/venv/lib/python3.10/site-packages/llama_index/ \u2502\r\n\u2502 download/download_utils.py:260 in download_llama_module                                          \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502   257 \u2502   \u2502   A Loader.                                                                          \u2502\r\n\u2502   258 \u2502   \"\"\"                                                                                    \u2502\r\n\u2502   259 \u2502   # create directory / get path                                                          \u2502\r\n\u2502 \u2771 260 \u2502   dirpath = initialize_directory(custom_path=custom_path, custom_dir=custom_dir)         \u2502\r\n\u2502   261 \u2502                                                                                          \u2502\r\n\u2502   262 \u2502   # fetch info from library.json file                                                    \u2502\r\n\u2502   263 \u2502   module_info = get_module_info(                                                         \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e \u2502\r\n\u2502 \u2502       base_file_name = 'base.py'                                                             \u2502 \u2502\r\n\u2502 \u2502           custom_dir = 'llamahub_modules'                                                    \u2502 \u2502\r\n\u2502 \u2502          custom_path = '.cache/llamahub_modules'                                             \u2502 \u2502\r\n\u2502 \u2502         library_path = 'library.json'                                                        \u2502 \u2502\r\n\u2502 \u2502        llama_hub_url = 'https://raw.githubusercontent.com/run-llama/llama-hub/main/llama_hu\u2026 \u2502 \u2502\r\n\u2502 \u2502         module_class = 'SimpleDirectoryReader'                                               \u2502 \u2502\r\n\u2502 \u2502        refresh_cache = False                                                                 \u2502 \u2502\r\n\u2502 \u2502 use_gpt_index_import = False                                                                 \u2502 \u2502\r\n\u2502 \u2570\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256f \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 /home/venv/lib/python3.10/site-packages/llama_index/ \u2502\r\n\u2502 download/download_utils.py:83 in initialize_directory                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502    80 ) -> Path:                                                                                 \u2502\r\n\u2502    81 \u2502   \"\"\"Initialize directory.\"\"\"                                                            \u2502\r\n\u2502    82 \u2502   if custom_path is not None and custom_dir is not None:                                 \u2502\r\n\u2502 \u2771  83 \u2502   \u2502   raise ValueError(                                                                  \u2502\r\n\u2502    84 \u2502   \u2502   \u2502   \"You cannot specify both `custom_path` and `custom_dir` at the same time.\"     \u2502\r\n\u2502    85 \u2502   \u2502   )                                                                                  \u2502\r\n\u2502    86                                                                                            \u2502\r\n\u2502                                                                                                  \u2502\r\n\u2502 \u256d\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500 locals \u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u2500\u256e                                                      \u2502\r\n\u2502 \u2502  custom_dir = 'llamahub_modules'        \u2502                                                      \u2502\r\n\u2502 \u2502 custom_path = '.cache/llamahub_modules' \u2502                                                      \u2502\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8812/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8812/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8811",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8811/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8811/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8811/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8811",
        "id": 1986352767,
        "node_id": "PR_kwDOIWuq585fEtux",
        "number": 8811,
        "title": "nit fix to multimodalretriever name ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-09T20:28:00Z",
        "updated_at": "2023-11-09T20:32:47Z",
        "closed_at": "2023-11-09T20:32:47Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8811",
            "html_url": "https://github.com/run-llama/llama_index/pull/8811",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8811.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8811.patch",
            "merged_at": "2023-11-09T20:32:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8811/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8811/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8810",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8810/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8810/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8810/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8810",
        "id": 1986314813,
        "node_id": "PR_kwDOIWuq585fElcw",
        "number": 8810,
        "title": "Adding routers to high level concepts",
        "user": {
            "login": "aaronjimv",
            "id": 67152883,
            "node_id": "MDQ6VXNlcjY3MTUyODgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/67152883?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronjimv",
            "html_url": "https://github.com/aaronjimv",
            "followers_url": "https://api.github.com/users/aaronjimv/followers",
            "following_url": "https://api.github.com/users/aaronjimv/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronjimv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronjimv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronjimv/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronjimv/orgs",
            "repos_url": "https://api.github.com/users/aaronjimv/repos",
            "events_url": "https://api.github.com/users/aaronjimv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronjimv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-09T20:01:43Z",
        "updated_at": "2023-11-13T14:24:06Z",
        "closed_at": "2023-11-10T09:24:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8810",
            "html_url": "https://github.com/run-llama/llama_index/pull/8810",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8810.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8810.patch",
            "merged_at": "2023-11-10T09:24:45Z"
        },
        "body": "# Description\r\n\r\nThis PR includes the changes requested in **[Documentation]: adding Routers to High-Level Concepts\u00a0#7884**\r\n\r\nThe routers concept was added to High-Level Concepts.\r\n\r\nAlso fixing a typo in the file (and and \u2192 and).\r\n\r\nFixes #7884 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] My changes generate no new warnings\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8810/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8810/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8809",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8809/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8809/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8809/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8809",
        "id": 1985932920,
        "node_id": "PR_kwDOIWuq585fDSBT",
        "number": 8809,
        "title": "Updated Cogniswitch docs",
        "user": {
            "login": "saiCogniswitch",
            "id": 145636106,
            "node_id": "U_kgDOCK47Cg",
            "avatar_url": "https://avatars.githubusercontent.com/u/145636106?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/saiCogniswitch",
            "html_url": "https://github.com/saiCogniswitch",
            "followers_url": "https://api.github.com/users/saiCogniswitch/followers",
            "following_url": "https://api.github.com/users/saiCogniswitch/following{/other_user}",
            "gists_url": "https://api.github.com/users/saiCogniswitch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/saiCogniswitch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/saiCogniswitch/subscriptions",
            "organizations_url": "https://api.github.com/users/saiCogniswitch/orgs",
            "repos_url": "https://api.github.com/users/saiCogniswitch/repos",
            "events_url": "https://api.github.com/users/saiCogniswitch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/saiCogniswitch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-09T15:54:33Z",
        "updated_at": "2023-11-10T13:16:16Z",
        "closed_at": "2023-11-10T09:23:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8809",
            "html_url": "https://github.com/run-llama/llama_index/pull/8809",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8809.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8809.patch",
            "merged_at": "2023-11-10T09:23:29Z"
        },
        "body": "# Description\r\n\r\nAdded cogniswitch example inside docs\r\n\r\n## Type of Change\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n- [X] Added new notebook \r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n- [X] I have made corresponding changes to the documentation\r\n- [X] My changes generate no new warnings\r\n- [X] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8809/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8809/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8808",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8808/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8808/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8808/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8808",
        "id": 1985896936,
        "node_id": "PR_kwDOIWuq585fDKAN",
        "number": 8808,
        "title": "Parallel func calling cleanup work",
        "user": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-09T15:39:32Z",
        "updated_at": "2023-11-10T09:15:28Z",
        "closed_at": "2023-11-10T09:15:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8808",
            "html_url": "https://github.com/run-llama/llama_index/pull/8808",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8808.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8808.patch",
            "merged_at": "2023-11-10T09:15:27Z"
        },
        "body": "# Description\r\nThis PR completes the hangover work from the original parallel function PR #8738. In particular, the items that were marked as TODO which came from @jerryjliu's and @Disiok have been completed:\r\n\r\n- improve impl of `_stream_chat` and `_astream_chat` thru cleaner logic and with helper function\r\n- use openai's typed objects instead of `dict`s when dealing with `tool_call`\r\n- deprecated `to_openai_function` now invokes `to_openai_tool`\r\n    - so user's can use deprecated `to_openai_function` to prepare their `tools`\r\n\r\nFor convenience, I have added comments in the places where @jerryjliu and @Disiok raised comments in the original PR (#8738)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue). Not really bug fix, but more improvements to current impls\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x]  Checked a few notebooks still run as they should\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8808/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8808/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8806",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8806/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8806/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8806/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8806",
        "id": 1985791343,
        "node_id": "I_kwDOIWuq5852XMVv",
        "number": 8806,
        "title": "[Bug]: \"Empty Response\" by running official documents.",
        "user": {
            "login": "kiasar",
            "id": 23178294,
            "node_id": "MDQ6VXNlcjIzMTc4Mjk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/23178294?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kiasar",
            "html_url": "https://github.com/kiasar",
            "followers_url": "https://api.github.com/users/kiasar/followers",
            "following_url": "https://api.github.com/users/kiasar/following{/other_user}",
            "gists_url": "https://api.github.com/users/kiasar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kiasar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kiasar/subscriptions",
            "organizations_url": "https://api.github.com/users/kiasar/orgs",
            "repos_url": "https://api.github.com/users/kiasar/repos",
            "events_url": "https://api.github.com/users/kiasar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kiasar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-09T14:51:15Z",
        "updated_at": "2023-11-09T21:00:37Z",
        "closed_at": "2023-11-09T21:00:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nI'm trying to run your [ official document](https://gpt-index.readthedocs.io/en/v0.6.30/how_to/customization/custom_llms.html#example-using-a-custom-llm-model-advanced) code but I get \"Empty Response\".\r\n\r\nI have only one .txt file containing \"I have a cat named Max. It is in the park.\" and here is the version of my code: \r\n\r\n```python\r\nimport torch\r\nfrom langchain.llms.base import LLM\r\nfrom llama_index import SimpleDirectoryReader, LangchainEmbedding, ListIndex\r\nfrom llama_index import LLMPredictor, ServiceContext\r\nfrom transformers import pipeline\r\nfrom typing import Optional, List, Mapping, Any\r\n\r\n# set context window size\r\ncontext_window = 2048\r\n# set number of output tokens\r\nnum_output = 256\r\n\r\n# store the pipeline/model outisde of the LLM class to avoid memory issues\r\nmodel_name = \"facebook/opt-iml-1.3b\"\r\npipeline = pipeline(\"text-generation\", model=model_name, device=\"cuda:0\", model_kwargs={\"torch_dtype\": torch.bfloat16})\r\n\r\n\r\nclass CustomLLM(LLM):\r\n\r\n    def _call(self, prompt: str, stop: Optional[List[str]] = None, **kwargs) -> str:\r\n        prompt_length = len(prompt)\r\n        response = pipeline(prompt, max_new_tokens=num_output)[0][\"generated_text\"]\r\n\r\n        # only return newly generated tokens\r\n        return response[prompt_length:]\r\n\r\n    @property\r\n    def _identifying_params(self) -> Mapping[str, Any]:\r\n        return {\"name_of_model\": model_name}\r\n\r\n    @property\r\n    def _llm_type(self) -> str:\r\n        return \"custom\"\r\n\r\n\r\n# define our LLM\r\nllm_predictor = LLMPredictor(llm=CustomLLM())\r\n\r\nservice_context = ServiceContext.from_defaults(\r\n    llm_predictor=llm_predictor,\r\n    context_window=context_window,\r\n    num_output=num_output\r\n)\r\n\r\n# Load the your data\r\ndocuments = SimpleDirectoryReader('./data2').load_data()\r\nindex = ListIndex.from_documents(documents, service_context=service_context)\r\n\r\n# Query and print response\r\nquery_engine = index.as_query_engine()\r\nresponse = query_engine.query(\"What is the name of my cat?\")\r\nprint(response)\r\n```\r\n\r\nIt will return \"Empty Response\".\r\n\r\nP.S. I'm sure that it is able to read the .txt file because this is the output to `print(documents)`\r\n\r\n```\r\n[Document(id_='b280219b-fcee-4ccd-a1e0-64d6c696133e', embedding=None, metadata={'file_path': 'data2/1.txt', 'creation_date': '2023-11-09', 'last_modified_date': '2023-11-09', 'last_accessed_date': '2023-11-09'}, excluded_embed_metadata_keys=['creation_date', 'last_modified_date', 'last_accessed_date'], excluded_llm_metadata_keys=['creation_date', 'last_modified_date', 'last_accessed_date'], relationships={}, hash='e6f967d037f7e35b52c98ab114171f7be1b34515a5354b05204c3338b2808e97', text='I have a cat named Max. It is in the park.', start_char_idx=None, end_char_idx=None, text_template='{metadata_str}\\n\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\n')]\r\n```\r\n\r\n### Version\r\n\r\n085.65\r\n\r\n### Steps to Reproduce\r\n\r\nJust run the code.\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8806/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8806/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8805",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8805/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8805/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8805/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8805",
        "id": 1985716092,
        "node_id": "PR_kwDOIWuq585fCiKt",
        "number": 8805,
        "title": "Cassandra vector-store notebook updates",
        "user": {
            "login": "hemidactylus",
            "id": 14221764,
            "node_id": "MDQ6VXNlcjE0MjIxNzY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/14221764?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hemidactylus",
            "html_url": "https://github.com/hemidactylus",
            "followers_url": "https://api.github.com/users/hemidactylus/followers",
            "following_url": "https://api.github.com/users/hemidactylus/following{/other_user}",
            "gists_url": "https://api.github.com/users/hemidactylus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hemidactylus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hemidactylus/subscriptions",
            "organizations_url": "https://api.github.com/users/hemidactylus/orgs",
            "repos_url": "https://api.github.com/users/hemidactylus/repos",
            "events_url": "https://api.github.com/users/hemidactylus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hemidactylus/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-09T14:13:44Z",
        "updated_at": "2023-11-10T09:18:52Z",
        "closed_at": "2023-11-10T09:18:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8805",
            "html_url": "https://github.com/run-llama/llama_index/pull/8805",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8805.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8805.patch",
            "merged_at": "2023-11-10T09:18:51Z"
        },
        "body": "As a twin PR to #8777 (now merged), this PR adapts the dependencies and naming scheme for better clarity over which connectors covers which kind of database/protocol. Additionally, URLs are updated to point to the latest quickstart and landing pages (both Astra and Cassandra), and more details are provided for the case of connecting to a Cassandra cluster.\r\n\r\nThank you!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8805/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8805/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]