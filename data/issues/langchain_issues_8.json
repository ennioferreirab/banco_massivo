[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13971",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13971/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13971/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13971/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13971",
        "id": 2014572602,
        "node_id": "I_kwDOIPDwls54E_A6",
        "number": 13971,
        "title": "Singel object extraction",
        "user": {
            "login": "Yanni8",
            "id": 99135388,
            "node_id": "U_kgDOBeivnA",
            "avatar_url": "https://avatars.githubusercontent.com/u/99135388?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Yanni8",
            "html_url": "https://github.com/Yanni8",
            "followers_url": "https://api.github.com/users/Yanni8/followers",
            "following_url": "https://api.github.com/users/Yanni8/following{/other_user}",
            "gists_url": "https://api.github.com/users/Yanni8/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Yanni8/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Yanni8/subscriptions",
            "organizations_url": "https://api.github.com/users/Yanni8/orgs",
            "repos_url": "https://api.github.com/users/Yanni8/repos",
            "events_url": "https://api.github.com/users/Yanni8/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Yanni8/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T14:29:08Z",
        "updated_at": "2023-11-28T14:29:34Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nCurrently, the extraction chain only supports the extraction of an Array of object.\r\n\r\nFor example\r\n\r\n```python\r\nfrom typing import Optional\r\n\r\nfrom langchain.chains import create_extraction_chain_pydantic\r\nfrom langchain.pydantic_v1 import BaseModel\r\n\r\n\r\n# Pydantic data class\r\nclass Properties(BaseModel):\r\n    person_name: str\r\n    person_height: int\r\n    person_hair_color: str\r\n    dog_breed: Optional[str]\r\n    dog_name: Optional[str]\r\n\r\n\r\n# Extraction\r\nchain = create_extraction_chain_pydantic(pydantic_schema=Properties, llm=llm)\r\n\r\n# Run\r\ninp = \"\"\"Alex is 5 feet tall. Claudia is 1 feet taller Alex and jumps higher than him. Claudia is a brunette and Alex is blonde.\"\"\"\r\n\r\nchain.run(inp)\r\n# Results in\r\n#\r\n#  [Properties(person_name='Alex', person_height=5, person_hair_color='blonde', dog_breed=None, dog_name=None),\r\n#  Properties(person_name='Claudia', person_height=6, person_hair_color='brunette', dog_breed=None, dog_name=None)]\r\n#\r\n````\r\n\r\nThere is currently no option available to just get one `Properties` object.\r\n\r\nIt would be nice if you could define at the beginning if you are interested in one object or an array of objects\r\n\r\nFor example\r\n\r\n```` python\r\nchain = create_extraction_chain_pydantic(pydantic_schema=List[Properties], llm=llm) -> Array of Properties\r\nchain = create_extraction_chain_pydantic(pydantic_schema=Properties] llm=llm) -> Just one Propertie\r\n`````\n\n### Motivation\n\nIt would just make life easier when you knew that you were only dealing with one object.\r\n\r\nIt might also improve the response and prevent wrong or incomplete responses. \n\n### Your contribution\n\nI would create and submit a PR that contains this feature.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13971/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13971/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13970",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13970/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13970/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13970/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13970",
        "id": 2014540587,
        "node_id": "I_kwDOIPDwls54E3Mr",
        "number": 13970,
        "title": "AttributeError: module 'typing_extensions' has no attribute 'deprecated' when using ChatOpenAI",
        "user": {
            "login": "vlasvlasvlas",
            "id": 4071796,
            "node_id": "MDQ6VXNlcjQwNzE3OTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4071796?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vlasvlasvlas",
            "html_url": "https://github.com/vlasvlasvlas",
            "followers_url": "https://api.github.com/users/vlasvlasvlas/followers",
            "following_url": "https://api.github.com/users/vlasvlasvlas/following{/other_user}",
            "gists_url": "https://api.github.com/users/vlasvlasvlas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vlasvlasvlas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vlasvlasvlas/subscriptions",
            "organizations_url": "https://api.github.com/users/vlasvlasvlas/orgs",
            "repos_url": "https://api.github.com/users/vlasvlasvlas/repos",
            "events_url": "https://api.github.com/users/vlasvlasvlas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vlasvlasvlas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T14:15:08Z",
        "updated_at": "2023-11-28T14:22:25Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nhi! \r\nim getting this error \ud83d\udc4d \r\n\r\n\r\n`AttributeError                            Traceback (most recent call last)\r\nFile <command-3819272873890469>, line 7\r\n      1 # gpt-3.5-turbo-0613\r\n      2 # gpt-3.5-turbo-1106\r\n      3 # gpt-4\r\n      4 # gpt-4-1106-preview\r\n      5 llm_model = \"gpt-3.5-turbo-1106\"\r\n----> 7 llm = ChatOpenAI(\r\n      8     temperature=0, \r\n      9     model=llm_model\r\n     10     )\r\n\r\nFile /local_disk0/.ephemeral_nfs/cluster_libraries/python/lib/python3.10/site-packages/langchain/load/serializable.py:97, in Serializable.__init__(self, **kwargs)\r\n     96 def __init__(self, **kwargs: Any) -> None:\r\n---> 97     super().__init__(**kwargs)\r\n     98     self._lc_kwargs = kwargs\r\n\r\nFile /databricks/python/lib/python3.10/site-packages/pydantic/main.py:339, in pydantic.main.BaseModel.__init__()\r\n\r\nFile /databricks/python/lib/python3.10/site-packages/pydantic/main.py:1102, in pydantic.main.validate_model()\r\n\r\nFile /local_disk0/.ephemeral_nfs/cluster_libraries/python/lib/python3.10/site-packages/langchain/chat_models/openai.py:291, in ChatOpenAI.validate_environment(cls, values)\r\n    284 values[\"openai_proxy\"] = get_from_dict_or_env(\r\n    285     values,\r\n    286     \"openai_proxy\",\r\n    287     \"OPENAI_PROXY\",\r\n    288     default=\"\",\r\n    289 )\r\n    290 try:\r\n--> 291     import openai\r\n    293 except ImportError:\r\n    294     raise ImportError(\r\n    295         \"Could not import openai python package. \"\r\n    296         \"Please install it with `pip install openai`.\"\r\n    297     )\r\n\r\nFile /local_disk0/.ephemeral_nfs/cluster_libraries/python/lib/python3.10/site-packages/openai/__init__.py:11\r\n      9 from ._types import NoneType, Transport, ProxiesTypes\r\n     10 from ._utils import file_from_path\r\n---> 11 from ._client import (\r\n     12     Client,\r\n     13     OpenAI,\r\n     14     Stream,\r\n     15     Timeout,\r\n     16     Transport,\r\n     17     AsyncClient,\r\n     18     AsyncOpenAI,\r\n     19     AsyncStream,\r\n     20     RequestOptions,\r\n     21 )\r\n     22 from ._version import __title__, __version__\r\n     23 from ._exceptions import (\r\n     24     APIError,\r\n     25     OpenAIError,\r\n   (...)\r\n     37     APIResponseValidationError,\r\n     38 )\r\n\r\nFile /local_disk0/.ephemeral_nfs/cluster_libraries/python/lib/python3.10/site-packages/openai/_client.py:12\r\n      8 from typing_extensions import override\r\n     10 import httpx\r\n---> 12 from . import resources, _exceptions\r\n     13 from ._qs import Querystring\r\n     14 from ._types import (\r\n     15     NOT_GIVEN,\r\n     16     Omit,\r\n   (...)\r\n     21     RequestOptions,\r\n     22 )\r\n\r\nFile /local_disk0/.ephemeral_nfs/cluster_libraries/python/lib/python3.10/site-packages/openai/resources/__init__.py:6\r\n      4 from .chat import Chat, AsyncChat, ChatWithRawResponse, AsyncChatWithRawResponse\r\n      5 from .audio import Audio, AsyncAudio, AudioWithRawResponse, AsyncAudioWithRawResponse\r\n----> 6 from .edits import Edits, AsyncEdits, EditsWithRawResponse, AsyncEditsWithRawResponse\r\n      7 from .files import Files, AsyncFiles, FilesWithRawResponse, AsyncFilesWithRawResponse\r\n      8 from .images import (\r\n      9     Images,\r\n     10     AsyncImages,\r\n     11     ImagesWithRawResponse,\r\n     12     AsyncImagesWithRawResponse,\r\n     13 )\r\n\r\nFile /local_disk0/.ephemeral_nfs/cluster_libraries/python/lib/python3.10/site-packages/openai/resources/edits.py:24\r\n     19     from .._client import OpenAI, AsyncOpenAI\r\n     21 __all__ = [\"Edits\", \"AsyncEdits\"]\r\n---> 24 class Edits(SyncAPIResource):\r\n     25     with_raw_response: EditsWithRawResponse\r\n     27     def __init__(self, client: OpenAI) -> None:\r\n\r\nFile /local_disk0/.ephemeral_nfs/cluster_libraries/python/lib/python3.10/site-packages/openai/resources/edits.py:31, in Edits()\r\n     28     super().__init__(client)\r\n     29     self.with_raw_response = EditsWithRawResponse(self)\r\n---> 31 @typing_extensions.deprecated(\r\n     32     \"The Edits API is deprecated; please use Chat Completions instead.\\n\\nhttps://openai.com/blog/gpt-4-api-general-availability#deprecation-of-the-edits-api\\n\"\r\n     33 )\r\n     34 def create(\r\n     35     self,\r\n     36     *,\r\n     37     instruction: str,\r\n     38     model: Union[str, Literal[\"text-davinci-edit-001\", \"code-davinci-edit-001\"]],\r\n     39     input: Optional[str] | NotGiven = NOT_GIVEN,\r\n     40     n: Optional[int] | NotGiven = NOT_GIVEN,\r\n     41     temperature: Optional[float] | NotGiven = NOT_GIVEN,\r\n     42     top_p: Optional[float] | NotGiven = NOT_GIVEN,\r\n     43     # Use the following arguments if you need to pass additional parameters to the API that aren't available via kwargs.\r\n     44     # The extra values given here take precedence over values defined on the client or passed to this method.\r\n     45     extra_headers: Headers | None = None,\r\n     46     extra_query: Query | None = None,\r\n     47     extra_body: Body | None = None,\r\n     48     timeout: float | httpx.Timeout | None | NotGiven = NOT_GIVEN,\r\n     49 ) -> Edit:\r\n     50     \"\"\"\r\n     51     Creates a new edit for the provided input, instruction, and parameters.\r\n     52 \r\n   (...)\r\n     81       timeout: Override the client-level default timeout for this request, in seconds\r\n     82     \"\"\"\r\n     83     return self._post(\r\n     84         \"/edits\",\r\n     85         body=maybe_transform(\r\n   (...)\r\n     99         cast_to=Edit,\r\n    100     )\r\n\r\nAttributeError: module 'typing_extensions' has no attribute 'deprecated'`\r\n\r\nim using ChatOpenAI with the follwing libs:\r\n\r\n![image](https://github.com/langchain-ai/langchain/assets/4071796/2569f6a9-924f-4a72-a933-221e43bfb48b)\r\n\r\nand python version is \r\nPython 3.10.12\r\n\r\n\r\nuntil some days these worked great. and i didnt touch the code.\r\n\r\nso, whats happening here?\r\n\r\nthanks\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nllm_model = \"gpt-4-1106-preview\"\r\n\r\nllm = ChatOpenAI(\r\n    temperature=0, \r\n    model=llm_model\r\n    )\r\n\r\n-- using databricks, with langchain and openai\n\n### Expected behavior\n\njust an ok and chatopenai working",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13970/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13970/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13969",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13969/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13969/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13969/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13969",
        "id": 2014537056,
        "node_id": "I_kwDOIPDwls54E2Vg",
        "number": 13969,
        "title": "OutputParserException in extraction use case",
        "user": {
            "login": "nicoforteza",
            "id": 23416891,
            "node_id": "MDQ6VXNlcjIzNDE2ODkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/23416891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nicoforteza",
            "html_url": "https://github.com/nicoforteza",
            "followers_url": "https://api.github.com/users/nicoforteza/followers",
            "following_url": "https://api.github.com/users/nicoforteza/following{/other_user}",
            "gists_url": "https://api.github.com/users/nicoforteza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nicoforteza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nicoforteza/subscriptions",
            "organizations_url": "https://api.github.com/users/nicoforteza/orgs",
            "repos_url": "https://api.github.com/users/nicoforteza/repos",
            "events_url": "https://api.github.com/users/nicoforteza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nicoforteza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T14:13:25Z",
        "updated_at": "2023-11-28T14:21:35Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHi, i'm obtaining this error trace when performing a basic `create_extraction_chain` example.I'm using CTransformers (llama2 type), more specifically, this model here: https://huggingface.co/clibrain/Llama-2-13b-ft-instruct-es-gguf\r\n\r\nPython version: 3.11\r\nEnvironment:\r\n```\r\naccelerate                0.24.1\r\naiofiles                  22.1.0\r\naiohttp                   3.9.0\r\naiosignal                 1.3.1\r\naiosqlite                 0.19.0\r\nalembic                   1.9.4\r\nanyio                     3.7.1\r\nappnope                   0.1.3\r\nargilla                   1.19.0\r\nargon2-cffi               23.1.0\r\nargon2-cffi-bindings      21.2.0\r\narrow                     1.3.0\r\nasttokens                 2.4.1\r\nasync-lru                 2.0.4\r\nattrs                     23.1.0\r\nBabel                     2.13.1\r\nbackoff                   1.11.1\r\nbcrypt                    4.0.1\r\nbeautifulsoup4            4.12.2\r\nbleach                    6.1.0\r\nBrotli                    1.1.0\r\nbrotli-asgi               1.2.0\r\ncertifi                   2023.11.17\r\ncffi                      1.16.0\r\ncharset-normalizer        3.3.2\r\nclick                     8.1.7\r\ncoloredlogs               15.0.1\r\ncomm                      0.2.0\r\ncommonmark                0.9.1\r\ncryptography              41.0.5\r\nctransformers             0.2.27\r\ndataclasses-json          0.6.3\r\ndatasets                  2.15.0\r\ndebugpy                   1.8.0\r\ndecorator                 5.1.1\r\ndefusedxml                0.7.1\r\nDeprecated                1.2.14\r\ndill                      0.3.7\r\ndiskcache                 5.6.3\r\necdsa                     0.18.0\r\nelastic-transport         8.10.0\r\nelasticsearch8            8.7.0\r\nexecuting                 2.0.1\r\nfastapi                   0.104.1\r\nfastjsonschema            2.19.0\r\nfilelock                  3.13.1\r\nfqdn                      1.5.1\r\nfrozenlist                1.4.0\r\nfsspec                    2023.10.0\r\ngreenlet                  3.0.1\r\nh11                       0.14.0\r\nhttpcore                  0.16.3\r\nhttptools                 0.6.1\r\nhttpx                     0.23.3\r\nhuggingface-hub           0.19.4\r\nhumanfriendly             10.0\r\nidna                      3.4\r\nipykernel                 6.27.0\r\nipython                   8.17.2\r\nisoduration               20.11.0\r\njedi                      0.19.1\r\nJinja2                    3.1.2\r\njoblib                    1.3.2\r\njson5                     0.9.14\r\njsonpatch                 1.33\r\njsonpointer               2.4\r\njsonschema                4.20.0\r\njsonschema-specifications 2023.11.1\r\njupyter_client            8.6.0\r\njupyter_core              5.5.0\r\njupyter-events            0.9.0\r\njupyter-lsp               2.2.0\r\njupyter_server            2.11.0\r\njupyter_server_terminals  0.4.4\r\njupyterlab                4.0.9\r\njupyterlab-pygments       0.2.2\r\njupyterlab_server         2.25.2\r\nlangchain                 0.0.341\r\nlangchain-core            0.0.6\r\nlangsmith                 0.0.67\r\nllama_cpp_python          0.2.20\r\nMako                      1.3.0\r\nmarkdown-it-py            3.0.0\r\nMarkupSafe                2.1.3\r\nmarshmallow               3.20.1\r\nmatplotlib-inline         0.1.6\r\nmdurl                     0.1.2\r\nmistune                   3.0.2\r\nmonotonic                 1.6\r\nmpmath                    1.3.0\r\nmultidict                 6.0.4\r\nmultiprocess              0.70.15\r\nmypy-extensions           1.0.0\r\nnbclient                  0.9.0\r\nnbconvert                 7.11.0\r\nnbformat                  5.9.2\r\nnest-asyncio              1.5.8\r\nnetworkx                  3.2.1\r\nnltk                      3.8.1\r\nnotebook_shim             0.2.3\r\nnumpy                     1.23.5\r\nopensearch-py             2.0.1\r\noptimum                   1.14.1\r\noverrides                 7.4.0\r\npackaging                 23.2\r\npandas                    1.5.3\r\npandocfilters             1.5.0\r\nparso                     0.8.3\r\npasslib                   1.7.4\r\npexpect                   4.8.0\r\nPillow                    10.1.0\r\npip                       23.3.1\r\nplatformdirs              4.0.0\r\nprometheus-client         0.19.0\r\nprompt-toolkit            3.0.41\r\nprotobuf                  4.25.1\r\npsutil                    5.9.6\r\nptyprocess                0.7.0\r\npure-eval                 0.2.2\r\npy-cpuinfo                9.0.0\r\npyarrow                   14.0.1\r\npyarrow-hotfix            0.6\r\npyasn1                    0.5.1\r\npycparser                 2.21\r\npydantic                  1.10.13\r\nPygments                  2.17.2\r\npython-dateutil           2.8.2\r\npython-dotenv             1.0.0\r\npython-jose               3.3.0\r\npython-json-logger        2.0.7\r\npython-multipart          0.0.6\r\npytz                      2023.3.post1\r\nPyYAML                    6.0.1\r\npyzmq                     25.1.1\r\nreferencing               0.31.0\r\nregex                     2023.10.3\r\nrequests                  2.31.0\r\nrfc3339-validator         0.1.4\r\nrfc3986                   1.5.0\r\nrfc3986-validator         0.1.1\r\nrich                      13.0.1\r\nrpds-py                   0.13.1\r\nrsa                       4.9\r\nsafetensors               0.4.0\r\nscikit-learn              1.3.2\r\nscipy                     1.11.4\r\nsegment-analytics-python  2.2.0\r\nSend2Trash                1.8.2\r\nsentence-transformers     2.2.2\r\nsentencepiece             0.1.99\r\nsetuptools                68.2.2\r\nsix                       1.16.0\r\nsmart-open                6.4.0\r\nsniffio                   1.3.0\r\nsoupsieve                 2.5\r\nSQLAlchemy                2.0.23\r\nstack-data                0.6.3\r\nstarlette                 0.27.0\r\nsympy                     1.12\r\ntenacity                  8.2.3\r\nterminado                 0.18.0\r\nthreadpoolctl             3.2.0\r\ntinycss2                  1.2.1\r\ntokenizers                0.15.0\r\ntorch                     2.1.1\r\ntorchvision               0.16.1\r\ntornado                   6.3.3\r\ntqdm                      4.66.1\r\ntraitlets                 5.13.0\r\ntransformers              4.35.2\r\ntyper                     0.9.0\r\ntypes-python-dateutil     2.8.19.14\r\ntyping_extensions         4.8.0\r\ntyping-inspect            0.9.0\r\nuri-template              1.3.0\r\nurllib3                   1.26.18\r\nuvicorn                   0.20.0\r\nuvloop                    0.19.0\r\nwatchfiles                0.21.0\r\nwcwidth                   0.2.12\r\nwebcolors                 1.13\r\nwebencodings              0.5.1\r\nwebsocket-client          1.6.4\r\nwebsockets                12.0\r\nwrapt                     1.14.1\r\nxxhash                    3.4.1\r\nyarl                      1.9.3\r\n\r\n```\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [X] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nHi, i'm obtaining this error trace when performing a basic `create_extraction_chain` example.I'm using CTransformers (llama2 type), more specifically, this model here: https://huggingface.co/clibrain/Llama-2-13b-ft-instruct-es-gguf\r\n\r\n```\r\nOutputParserException                     Traceback (most recent call last)\r\nCell In[9], line 17\r\n     12 chain = create_extraction_chain(schema, llm)\r\n     14 inp = \"\"\"Alex is 5 feet tall. Claudia is 1 feet taller Alex and jumps higher than him. Claudia is a brunette and Alex is blonde.\r\n     15 Willow is a German Shepherd that likes to play with other dogs and can always be found playing with Milo, a border collie that lives close by.\"\"\"\r\n---> 17 chain.run(inp)\r\n\r\nFile ~/Desktop/green-jobs/genv/lib/python3.11/site-packages/langchain/chains/base.py:507, in Chain.run(self, callbacks, tags, metadata, *args, **kwargs)\r\n    505     if len(args) != 1:\r\n    506         raise ValueError(\"`run` supports only one positional argument.\")\r\n--> 507     return self(args[0], callbacks=callbacks, tags=tags, metadata=metadata)[\r\n    508         _output_key\r\n    509     ]\r\n    511 if kwargs and not args:\r\n    512     return self(kwargs, callbacks=callbacks, tags=tags, metadata=metadata)[\r\n    513         _output_key\r\n    514     ]\r\n\r\nFile ~/Desktop/green-jobs/genv/lib/python3.11/site-packages/langchain/chains/base.py:312, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, metadata, run_name, include_run_info)\r\n    310 except BaseException as e:\r\n    311     run_manager.on_chain_error(e)\r\n--> 312     raise e\r\n    313 run_manager.on_chain_end(outputs)\r\n    314 final_outputs: Dict[str, Any] = self.prep_outputs(\r\n    315     inputs, outputs, return_only_outputs\r\n    316 )\r\n\r\nFile ~/Desktop/green-jobs/genv/lib/python3.11/site-packages/langchain/chains/base.py:306, in Chain.__call__(self, inputs, return_only_outputs, callbacks, tags, metadata, run_name, include_run_info)\r\n    299 run_manager = callback_manager.on_chain_start(\r\n    300     dumpd(self),\r\n    301     inputs,\r\n    302     name=run_name,\r\n    303 )\r\n    304 try:\r\n    305     outputs = (\r\n--> 306         self._call(inputs, run_manager=run_manager)\r\n    307         if new_arg_supported\r\n    308         else self._call(inputs)\r\n    309     )\r\n    310 except BaseException as e:\r\n    311     run_manager.on_chain_error(e)\r\n\r\nFile ~/Desktop/green-jobs/genv/lib/python3.11/site-packages/langchain/chains/llm.py:104, in LLMChain._call(self, inputs, run_manager)\r\n     98 def _call(\r\n     99     self,\r\n    100     inputs: Dict[str, Any],\r\n    101     run_manager: Optional[CallbackManagerForChainRun] = None,\r\n    102 ) -> Dict[str, str]:\r\n    103     response = self.generate([inputs], run_manager=run_manager)\r\n--> 104     return self.create_outputs(response)[0]\r\n\r\nFile ~/Desktop/green-jobs/genv/lib/python3.11/site-packages/langchain/chains/llm.py:258, in LLMChain.create_outputs(self, llm_result)\r\n    256 def create_outputs(self, llm_result: LLMResult) -> List[Dict[str, Any]]:\r\n    257     \"\"\"Create outputs from response.\"\"\"\r\n--> 258     result = [\r\n    259         # Get the text of the top generated string.\r\n    260         {\r\n    261             self.output_key: self.output_parser.parse_result(generation),\r\n    262             \"full_generation\": generation,\r\n    263         }\r\n    264         for generation in llm_result.generations\r\n    265     ]\r\n    266     if self.return_final_only:\r\n    267         result = [{self.output_key: r[self.output_key]} for r in result]\r\n\r\nFile ~/Desktop/green-jobs/genv/lib/python3.11/site-packages/langchain/chains/llm.py:261, in <listcomp>(.0)\r\n    256 def create_outputs(self, llm_result: LLMResult) -> List[Dict[str, Any]]:\r\n    257     \"\"\"Create outputs from response.\"\"\"\r\n    258     result = [\r\n    259         # Get the text of the top generated string.\r\n    260         {\r\n--> 261             self.output_key: self.output_parser.parse_result(generation),\r\n    262             \"full_generation\": generation,\r\n    263         }\r\n    264         for generation in llm_result.generations\r\n    265     ]\r\n    266     if self.return_final_only:\r\n    267         result = [{self.output_key: r[self.output_key]} for r in result]\r\n\r\nFile ~/Desktop/green-jobs/genv/lib/python3.11/site-packages/langchain/output_parsers/openai_functions.py:130, in JsonKeyOutputFunctionsParser.parse_result(self, result, partial)\r\n    129 def parse_result(self, result: List[Generation], *, partial: bool = False) -> Any:\r\n--> 130     res = super().parse_result(result, partial=partial)\r\n    131     if partial and res is None:\r\n    132         return None\r\n\r\nFile ~/Desktop/green-jobs/genv/lib/python3.11/site-packages/langchain/output_parsers/openai_functions.py:68, in JsonOutputFunctionsParser.parse_result(self, result, partial)\r\n     66 generation = result[0]\r\n     67 if not isinstance(generation, ChatGeneration):\r\n---> 68     raise OutputParserException(\r\n     69         \"This output parser can only be used with a chat generation.\"\r\n     70     )\r\n     71 message = generation.message\r\n     72 try:\r\n\r\nOutputParserException: This output parser can only be used with a chat generation.\r\n```\r\n\r\nIm using the following example:\r\n```\r\nschema = {\r\n    \"properties\": {\r\n        \"person_name\": {\"type\": \"string\"},\r\n        \"person_height\": {\"type\": \"integer\"},\r\n        \"person_hair_color\": {\"type\": \"string\"},\r\n        \"dog_name\": {\"type\": \"string\"},\r\n        \"dog_breed\": {\"type\": \"string\"},\r\n    },\r\n    \"required\": [],\r\n}\r\n\r\nchain = create_extraction_chain(schema, llm)\r\n\r\ninp = \"\"\"Alex is 5 feet tall. Claudia is 1 feet taller Alex and jumps higher than him. Claudia is a brunette and Alex is blonde.\r\nWillow is a German Shepherd that likes to play with other dogs and can always be found playing with Milo, a border collie that lives close by.\"\"\"\r\n\r\nchain.run(inp)\r\n```\n\n### Expected behavior\n\nI expect not to get an error when executing the code",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13969/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13969/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13968",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13968/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13968/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13968/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13968",
        "id": 2014504640,
        "node_id": "I_kwDOIPDwls54EubA",
        "number": 13968,
        "title": "Caused by NewConnectionError when using ZERO_SHOT_REACT_DESCRIPTION",
        "user": {
            "login": "HEYBOY789",
            "id": 20195023,
            "node_id": "MDQ6VXNlcjIwMTk1MDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20195023?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HEYBOY789",
            "html_url": "https://github.com/HEYBOY789",
            "followers_url": "https://api.github.com/users/HEYBOY789/followers",
            "following_url": "https://api.github.com/users/HEYBOY789/following{/other_user}",
            "gists_url": "https://api.github.com/users/HEYBOY789/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HEYBOY789/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HEYBOY789/subscriptions",
            "organizations_url": "https://api.github.com/users/HEYBOY789/orgs",
            "repos_url": "https://api.github.com/users/HEYBOY789/repos",
            "events_url": "https://api.github.com/users/HEYBOY789/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HEYBOY789/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-28T13:57:21Z",
        "updated_at": "2023-11-30T11:03:08Z",
        "closed_at": "2023-11-30T11:03:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n**python:** 3.11.6\r\n**langchain:** 0.0.335\r\n**openai:** 0.28.1\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI tried to create custom tools for Agent type ZERO_SHOT_REACT_DESCRIPTION but after executing the first chain, it keeps getting error Caused by NewConnectionError on the next chain. The tools work fine because I tested them with Agent type OPENAI.FUNTIONS\r\n\r\nMy first tool\r\n```\r\ndef get_thing(u: str) -> str:\r\n    c, l = get_thing_ori(u, True)\r\n    r = c + '\\n' + l\r\n    return r\r\n\r\nclass GetThingCheckInput(BaseModel):\r\n    u: str = Field(..., description='thing to get')\r\n\r\ndef get_thing_tool():\r\n    GetThingTool = StructuredTool.from_function(\r\n        name=\"get_thing\",\r\n        description=\"Useful to get thing\", \r\n        func=get_thing,\r\n        args_schema=GetThingCheckInput\r\n        )\r\n    return GetThingTool\r\n```\r\n\r\nMy second tool\r\n```\r\ndef get_S(t: str, l=str, c=str) -> str:\r\n    u_s, d_s = get_so()\r\n    result = ''\r\n    for u, d in zip(u_s, d_s):\r\n        result += f'U: {u}\\nD: {d}\\n\\n'\r\n    return result\r\n\r\ndef parsing_get_S(string: str):\r\n    t, l, c = string.split(', ')\r\n    return (get_S(t, l, c))\r\n\r\nclass ParsingGetSCheckInput(BaseModel):\r\n    string: str = Field(..., description='A string contain a data in format: \"T, L, C\"')\r\n\r\ndef get_parsing_get_S_tool():\r\n    ParsingGetSTool = StructuredTool.from_function(\r\n        name = 'parsing_get_S',\r\n        description=\"Useful to get S. Input is a comma-seperated list contain data in format: 'T, L, C'\",\r\n        func=parsing_get_S,\r\n        args_schema=ParsingGetSCheckInput\r\n        )\r\n    return ParsingGetSTool\r\n```\r\n\r\nThis is my main\r\n```\r\nif __name__ == '__main__':\r\n\r\n    llm = ChatOpenAI(model=\"gpt-3.5-turbo\", temperature=0, max_retries=5, timeout=100)\r\n\r\n    GetThingTool = get_thing_tool()\r\n    ParsingGetSTool = get_parsing_get_S_tool()\r\n    tools = [GetThingTool, ParsingGetSTool]\r\n\r\n    agent = initialize_agent(tools, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)\r\n\r\n    agent.run(\"Who is Leo DiCaprio's girlfriend? What is her current age raised to the 0.43 power?\")    \r\n```\r\n\r\nI try to add both `os.environ[\"LANGCHAIN_TRACING\"] = \"true\"` and `os.environ[\"LANGCHAIN_TRACING\"] = \"true\"` but it not working.\r\n\r\nFull error is:\r\n```\r\nERROR:root:download error: 'https://www.dailymail.co.uk/tvshowbiz/article-12792715/Leonardo-DiCaprio-low-key-glamorous-girlfriend-Vittoria-Ceretti-family-London.html' HTTPConnectionPool(host=\"'https\", port=80): Max retries exceeded with url: //[www.dailymail.co.uk/tvshowbiz/article-12792715/Leonardo-DiCaprio-low-key-glamorous-girlfriend-Vittoria-Ceretti-family-London.html](https://file+.vscode-resource.vscode-cdn.net/d%3A/Python%20Project/www.dailymail.co.uk/tvshowbiz/article-12792715/Leonardo-DiCaprio-low-key-glamorous-girlfriend-Vittoria-Ceretti-family-London.html)' (Caused by NewConnectionError('<urllib3.connection.HTTPConnection object at 0x0000018BEA481B90>: Failed to establish a new connection: [Errno 11001] getaddrinfo failed'))\r\n```\r\n\n\n### Expected behavior\n\nAs I use Agent type OPENAI.FUNTIONS, it completely returns a full answer, so that means there is nothing wrong with the tools, i guess. It should work for agent type ZERO_SHOT_REACT_DESCRIPTION. The reason I use zero shot is because the thinking part works better in different languages than agent-type OPENAI.FUNTIONS.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13968/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13968/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13967",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13967/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13967/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13967/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13967",
        "id": 2014447411,
        "node_id": "I_kwDOIPDwls54Egcz",
        "number": 13967,
        "title": "Issue: Passing context(previous question and answer) to the create_pandas_dataframe_agent function. ",
        "user": {
            "login": "akash97715",
            "id": 34799343,
            "node_id": "MDQ6VXNlcjM0Nzk5MzQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/34799343?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akash97715",
            "html_url": "https://github.com/akash97715",
            "followers_url": "https://api.github.com/users/akash97715/followers",
            "following_url": "https://api.github.com/users/akash97715/following{/other_user}",
            "gists_url": "https://api.github.com/users/akash97715/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akash97715/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akash97715/subscriptions",
            "organizations_url": "https://api.github.com/users/akash97715/orgs",
            "repos_url": "https://api.github.com/users/akash97715/repos",
            "events_url": "https://api.github.com/users/akash97715/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akash97715/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2023-11-28T13:30:17Z",
        "updated_at": "2023-12-01T11:30:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHello Team,\r\nWe are finding a way to pass the context, previous question and answer to **create_pandas_dataframe_agent**. Can u please help me understand how i can pass the context(previous question and answer) to the **create_pandas_dataframe_agent**. it will be helpful if you have any such example implementation\r\n\r\nThanks,\r\nAkash\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13967/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13967/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13966",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13966/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13966/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13966/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13966",
        "id": 2014426847,
        "node_id": "PR_kwDOIPDwls5gjbed",
        "number": 13966,
        "title": "Add doc for the development of core and experimental sections",
        "user": {
            "login": "169",
            "id": 10000925,
            "node_id": "MDQ6VXNlcjEwMDAwOTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/10000925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/169",
            "html_url": "https://github.com/169",
            "followers_url": "https://api.github.com/users/169/followers",
            "following_url": "https://api.github.com/users/169/following{/other_user}",
            "gists_url": "https://api.github.com/users/169/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/169/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/169/subscriptions",
            "organizations_url": "https://api.github.com/users/169/orgs",
            "repos_url": "https://api.github.com/users/169/repos",
            "events_url": "https://api.github.com/users/169/events{/privacy}",
            "received_events_url": "https://api.github.com/users/169/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-28T13:21:42Z",
        "updated_at": "2023-12-04T20:27:57Z",
        "closed_at": "2023-12-04T20:27:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13966",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13966",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13966.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13966.patch",
            "merged_at": "2023-12-04T20:27:57Z"
        },
        "body": "### **Description**\r\n\r\nHi, I just started learning the source code of `langchain` and hope to contribute code. However, according to the instructions in the [CONTRIBUTING.md](https://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md) document, I could not run the test command `make test` to run normally. I found that many modules did not exist after [splitting `langchain_core`](https://github.com/langchain-ai/langchain/discussions/13823), so I updated the document. \r\n\r\n### **Twitter handle** \r\n\r\nlin_bob57617",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13966/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13966/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13965",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13965/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13965/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13965/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13965",
        "id": 2014383567,
        "node_id": "PR_kwDOIPDwls5gjSA9",
        "number": 13965,
        "title": "Update CONTRIBUTING.md doc",
        "user": {
            "login": "169",
            "id": 10000925,
            "node_id": "MDQ6VXNlcjEwMDAwOTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/10000925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/169",
            "html_url": "https://github.com/169",
            "followers_url": "https://api.github.com/users/169/followers",
            "following_url": "https://api.github.com/users/169/following{/other_user}",
            "gists_url": "https://api.github.com/users/169/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/169/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/169/subscriptions",
            "organizations_url": "https://api.github.com/users/169/orgs",
            "repos_url": "https://api.github.com/users/169/repos",
            "events_url": "https://api.github.com/users/169/events{/privacy}",
            "received_events_url": "https://api.github.com/users/169/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T12:58:15Z",
        "updated_at": "2023-11-29T00:32:26Z",
        "closed_at": "2023-11-29T00:32:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13965",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13965",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13965.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13965.patch",
            "merged_at": "2023-11-29T00:32:26Z"
        },
        "body": "  - **Description:** The new demo notebook should be placed in [docs/docs/modules](https://github.com/langchain-ai/langchain/tree/master/docs/docs/modules)\r\n  - **Twitter handle:**  lin_bob57617\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13965/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13965/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13964",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13964/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13964/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13964/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13964",
        "id": 2014369520,
        "node_id": "I_kwDOIPDwls54ENbw",
        "number": 13964,
        "title": "Why does FAISS similarity search not fetch data with respect to alphanumeric keys like ORA-14300?",
        "user": {
            "login": "ShahzaibAhmedKhan31",
            "id": 134971688,
            "node_id": "U_kgDOCAuBKA",
            "avatar_url": "https://avatars.githubusercontent.com/u/134971688?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShahzaibAhmedKhan31",
            "html_url": "https://github.com/ShahzaibAhmedKhan31",
            "followers_url": "https://api.github.com/users/ShahzaibAhmedKhan31/followers",
            "following_url": "https://api.github.com/users/ShahzaibAhmedKhan31/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShahzaibAhmedKhan31/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShahzaibAhmedKhan31/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShahzaibAhmedKhan31/subscriptions",
            "organizations_url": "https://api.github.com/users/ShahzaibAhmedKhan31/orgs",
            "repos_url": "https://api.github.com/users/ShahzaibAhmedKhan31/repos",
            "events_url": "https://api.github.com/users/ShahzaibAhmedKhan31/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShahzaibAhmedKhan31/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5955630415,
                "node_id": "LA_kwDOIPDwls8AAAABYvu1Tw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20redis",
                "name": "integration: redis",
                "color": "F9D0C4",
                "default": false,
                "description": "Any integration that uses Redis"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T12:50:29Z",
        "updated_at": "2023-11-28T12:55:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n**Summary:**\r\nThe FAISS similarity search in LangChain is encountering difficulties when processing alpha-numeric queries that involve numeric integers. While the search performs well for queries like \"What are resolutions to problems related to SAF,\" it exhibits suboptimal behavior when processing queries such as \"Give me complete details of L2-resolution against ORA-14300,\" which involve alpha-numeric combinations.\r\nNote that we have already successfully embedded and indexed the above documents that includes alpha numeric key as well \r\nsuch as \"ORA-14300\".\r\n\r\n**Expected Behavior:**\r\nThe FAISS similarity search should accurately and effectively retrieve relevant information for alpha-numeric queries, providing precise results even when numeric integers are included in the query.\r\n\r\n**Current Behavior:**\r\nThe search is not functioning correctly when processing alpha-numeric queries with numeric integers. It fails to accurately identify and retrieve relevant documents, leading to a suboptimal user experience.\r\n\r\n![correct](https://github.com/langchain-ai/langchain/assets/134971688/362451a6-981f-4edc-b7e0-790fc50b93de)\r\n![wrong](https://github.com/langchain-ai/langchain/assets/134971688/9f169624-4079-489e-9303-e2b3c840a2ca)\r\n\r\n**Steps to Reproduce:**\r\nIndex CSV data containing both text and numerical values, and subsequently execute a query that includes an alphanumeric question.\r\n\r\n**Additional Information:**\r\nEnvironment: Langchain version (0.0.284)\r\n\r\n**Impact:**\r\nThis issue affects the accuracy and reliability of the FAISS similarity search, particularly when handling alpha-numeric queries that include numeric integers. Users relying on LangChain for information retrieval may experience challenges when seeking relevant documents related to such queries.\r\n\r\n**Priority:**\r\nHigh\r\n\r\nAre FAISS and Redis similarity searches capable of providing such high similarity search over the index? If not, please guide me on where I should turn to achieve better and more accurate results\r\n\r\nThank you for your attention to this matter. Feel free to request additional information if needed.\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13964/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13963",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13963/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13963/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13963/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13963",
        "id": 2014310258,
        "node_id": "I_kwDOIPDwls54D-9y",
        "number": 13963,
        "title": "Issue: Chroma.from_documents does not save metadata properly",
        "user": {
            "login": "YanaSSS",
            "id": 43813983,
            "node_id": "MDQ6VXNlcjQzODEzOTgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/43813983?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/YanaSSS",
            "html_url": "https://github.com/YanaSSS",
            "followers_url": "https://api.github.com/users/YanaSSS/followers",
            "following_url": "https://api.github.com/users/YanaSSS/following{/other_user}",
            "gists_url": "https://api.github.com/users/YanaSSS/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/YanaSSS/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/YanaSSS/subscriptions",
            "organizations_url": "https://api.github.com/users/YanaSSS/orgs",
            "repos_url": "https://api.github.com/users/YanaSSS/repos",
            "events_url": "https://api.github.com/users/YanaSSS/events{/privacy}",
            "received_events_url": "https://api.github.com/users/YanaSSS/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-28T12:16:56Z",
        "updated_at": "2023-12-01T22:24:59Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI create my vector db using the following code:\r\n```\r\ndb = Chroma.from_documents(\r\n            chunked_documents,\r\n            embeddings,\r\n            persist_directory=db_path + '/' + db_type,\r\n            client_settings=chroma_settings,)\r\n```\r\n`chunked_documents` is a list of elements of type Document.\r\nI have added metadata which is a simple numerical id: `{'id': 1}`\r\n\r\n```\r\nembeddings = HuggingFaceInstructEmbeddings(\r\n        model_name=args.embedding_model,\r\n        model_kwargs={\"device\": args.device},\r\n    )\r\n```\r\n\r\n```\r\nCHROMA_SETTINGS = Settings(\r\n    anonymized_telemetry=False,\r\n    is_persistent=True,\r\n)\r\n```\r\n\r\nWhat happens is that I run `db.similarity_search(query, k=3)` and for part of the answers, the metadata dict is empty. Has anyone encountered such an issue? \r\n\r\nJust to point out, when I create the db using the `from_texts()` method where I add raw texts and metadata separately I do not encounter the issue and when running `db.similarity_search()` the returned answer, contains the respective metadata.\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13963/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13963/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13962",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13962/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13962/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13962/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13962",
        "id": 2014276204,
        "node_id": "PR_kwDOIPDwls5gi6da",
        "number": 13962,
        "title": "Remove `python_repl` from _BASE_TOOLS",
        "user": {
            "login": "169",
            "id": 10000925,
            "node_id": "MDQ6VXNlcjEwMDAwOTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/10000925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/169",
            "html_url": "https://github.com/169",
            "followers_url": "https://api.github.com/users/169/followers",
            "following_url": "https://api.github.com/users/169/following{/other_user}",
            "gists_url": "https://api.github.com/users/169/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/169/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/169/subscriptions",
            "organizations_url": "https://api.github.com/users/169/orgs",
            "repos_url": "https://api.github.com/users/169/repos",
            "events_url": "https://api.github.com/users/169/events{/privacy}",
            "received_events_url": "https://api.github.com/users/169/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T11:57:14Z",
        "updated_at": "2023-11-29T01:13:55Z",
        "closed_at": "2023-11-29T01:13:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13962",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13962",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13962.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13962.patch",
            "merged_at": "2023-11-29T01:13:55Z"
        },
        "body": "### **Description:**\r\n\r\nPreviously `python_repl` was a built-in tool, but now it has been moved to `langchain_experimental`.\r\n\r\nWhen I use `load_tools` I get an error:\r\n\r\n```python\r\nIn [1]: from langchain.agents import load_tools\r\n\r\nIn [2]: load_tools([\"python_repl\"])\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\nCell In[2], line 1\r\n----> 1 load_tools([\"python_repl\"])\r\n\r\nFile ~/workspace/langchain/libs/langchain/langchain/agents/load_tools.py:530, in load_tools(tool_names, llm, callbacks, **kwargs)\r\n    528     tool_names.extend(requests_method_tools)\r\n    529 elif name in _BASE_TOOLS:\r\n--> 530     tools.append(_BASE_TOOLS[name]())\r\n    531 elif name in _LLM_TOOLS:\r\n    532     if llm is None:\r\n\r\nFile ~/workspace/langchain/libs/langchain/langchain/agents/load_tools.py:84, in _get_python_repl()\r\n     83 def _get_python_repl() -> BaseTool:\r\n---> 84     raise ImportError(\r\n     85         \"This tool has been moved to langchain experiment. \"\r\n     86         \"This tool has access to a python REPL. \"\r\n     87         \"For best practices make sure to sandbox this tool. \"\r\n     88         \"Read https://github.com/langchain-ai/langchain/blob/master/SECURITY.md \"\r\n     89         \"To keep using this code as is, install langchain experimental and \"\r\n     90         \"update relevant imports replacing 'langchain' with 'langchain_experimental'\"\r\n     91     )\r\n\r\nImportError: This tool has been moved to langchain experiment. This tool has access to a python REPL. For best practices make sure to sandbox this tool. Read https://github.com/langchain-ai/langchain/blob/master/SECURITY.md To keep using this code as is, install langchain experimental and update relevant imports replacing 'langchain' with 'langchain_experimental'\r\n```\r\n\r\nIn this case, it will be very confusing. I think it is no longer a built-in tool now, so it can be removed from `_BASE_TOOLS`\r\n\r\n### **Issue:** \r\n\r\nhttps://github.com/langchain-ai/langchain/issues/13858, https://github.com/langchain-ai/langchain/issues/13859, https://github.com/langchain-ai/langchain/issues/13856\r\n### **Twitter handle:** \r\n\r\n[lin_bob57617](https://twitter.com/lin_bob57617)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13962/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13962/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13961",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13961/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13961/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13961/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13961",
        "id": 2014263985,
        "node_id": "I_kwDOIPDwls54Dzqx",
        "number": 13961,
        "title": "Enable Limit False in Self Query Retriever doesn't have the expected behavior",
        "user": {
            "login": "bescada",
            "id": 152276873,
            "node_id": "U_kgDOCROPiQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/152276873?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bescada",
            "html_url": "https://github.com/bescada",
            "followers_url": "https://api.github.com/users/bescada/followers",
            "following_url": "https://api.github.com/users/bescada/following{/other_user}",
            "gists_url": "https://api.github.com/users/bescada/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bescada/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bescada/subscriptions",
            "organizations_url": "https://api.github.com/users/bescada/orgs",
            "repos_url": "https://api.github.com/users/bescada/repos",
            "events_url": "https://api.github.com/users/bescada/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bescada/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T11:50:02Z",
        "updated_at": "2023-11-28T12:32:28Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nI am using the SelfQueryRetriever class to make questions about a set of documents. It seems that there is an issue with the use of the `enable_limit` argument\r\n\r\nVersions:\r\nLangchain Version: 0.0.340\r\nopenai 1.3.5\r\n\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [X] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n enable_limit = False:\r\n```python\r\n retriever = SelfQueryRetriever.from_llm(\r\n    llm,\r\n    vectorstore,\r\n    document_content_description,\r\n    metadata_field_info,\r\n    enable_limit=False\r\n)\r\n\r\nquery = \"I want indentify thousand repairs with xxxx\"\r\n\r\nresult = retriever.invoke(query)\r\n\r\nlen(result)\r\n\r\n#Result: 4\r\n ```\r\n\r\nIf change enable_limit = True:\r\n```python\r\n\r\nretriever = SelfQueryRetriever.from_llm(\r\n    llm,\r\n    vectorstore,\r\n    document_content_description,\r\n    metadata_field_info,\r\n    enable_limit=True\r\n)\r\n\r\nquery = \"I want indentify thousand repairs with xxxx\"\r\n\r\nresult = retriever.invoke(query)\r\n\r\nlen(result)\r\n\r\n#Result: 1000\r\n ```\r\n\r\nIf  enable_limit=True and change in query for \"All\":\r\n```python\r\nretriever = SelfQueryRetriever.from_llm(\r\n    llm,\r\n    vectorstore,\r\n    document_content_description,\r\n    metadata_field_info,\r\n    enable_limit=True\r\n)\r\n\r\nquery = \"I want indentify All repairs with xxxx\"\r\n\r\nresult = retriever.invoke(query)\r\n\r\nlen(result)\r\n\r\n#Result: 4\r\n```\r\n\r\n### Expected behavior\r\n\r\nThe expected behaviour with  \"enable_limit = False\" was to show more than 1000 documents.\r\nAs there is no defined limit, all documents were expected as a result.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13961/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13961/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13960",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13960/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13960/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13960/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13960",
        "id": 2014219392,
        "node_id": "PR_kwDOIPDwls5giuKz",
        "number": 13960,
        "title": "Fixes for opengpts release",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T11:23:48Z",
        "updated_at": "2023-11-28T21:49:44Z",
        "closed_at": "2023-11-28T21:49:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13960",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13960",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13960.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13960.patch",
            "merged_at": "2023-11-28T21:49:43Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13960/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13960/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13958",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13958/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13958/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13958/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13958",
        "id": 2014030020,
        "node_id": "I_kwDOIPDwls54C6jE",
        "number": 13958,
        "title": "ImportError: cannot import name 'agenerate_from_stream' from 'langchain_core.language_models.chat_models'",
        "user": {
            "login": "nicoloboschi",
            "id": 23314389,
            "node_id": "MDQ6VXNlcjIzMzE0Mzg5",
            "avatar_url": "https://avatars.githubusercontent.com/u/23314389?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nicoloboschi",
            "html_url": "https://github.com/nicoloboschi",
            "followers_url": "https://api.github.com/users/nicoloboschi/followers",
            "following_url": "https://api.github.com/users/nicoloboschi/following{/other_user}",
            "gists_url": "https://api.github.com/users/nicoloboschi/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nicoloboschi/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nicoloboschi/subscriptions",
            "organizations_url": "https://api.github.com/users/nicoloboschi/orgs",
            "repos_url": "https://api.github.com/users/nicoloboschi/repos",
            "events_url": "https://api.github.com/users/nicoloboschi/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nicoloboschi/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-28T09:40:11Z",
        "updated_at": "2023-11-29T13:33:23Z",
        "closed_at": "2023-11-29T13:33:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nCurrent LangChain master commit: \r\nhttps://github.com/langchain-ai/langchain/commits/391f200 \n\n### Who can help?\n\n@hwchase17 @baskaryan\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nJust run \r\n```\r\nfrom langchain.chat_models import BedrockChat\r\n```\r\n\r\nStacktrace: \r\n```\r\ntests/e2e-tests/test_compatibility_matrix.py:10: in <module>\r\n    from langchain.chat_models import ChatOpenAI, AzureChatOpenAI, ChatVertexAI, BedrockChat\r\n/tmp/venv/lib/python3.11/site-packages/langchain/chat_models/__init__.py:20: in <module>\r\n    from langchain.chat_models.anthropic import ChatAnthropic\r\n/tmp/venv/lib/python3.11/site-packages/langchain/chat_models/anthropic.py:18: in <module>\r\n    from langchain.chat_models.base import (\r\n/tmp/venv/lib/python3.11/site-packages/langchain/chat_models/base.py:1: in <module>\r\n    from langchain_core.language_models.chat_models import (\r\nE   ImportError: cannot import name 'agenerate_from_stream' from 'langchain_core.language_models.chat_models' (/tmp/venv/lib/python3.11/site-packages/langchain_core/language_models/chat_models.py)\r\n```\n\n### Expected behavior\n\nTo being able to import the required modules",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13958/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13958/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13957",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13957/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13957/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13957/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13957",
        "id": 2013946167,
        "node_id": "PR_kwDOIPDwls5ghy90",
        "number": 13957,
        "title": "Use langchain core in-tree as a dev dependency",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T08:52:02Z",
        "updated_at": "2023-11-28T17:23:44Z",
        "closed_at": "2023-11-28T17:23:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13957",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13957",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13957.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13957.patch",
            "merged_at": "2023-11-28T17:23:43Z"
        },
        "body": "Using the published version means master is broken for contributors whenever we make changes in one lib that depend on the other.\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13957/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13957/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13956",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13956/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13956/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13956/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13956",
        "id": 2013904967,
        "node_id": "I_kwDOIPDwls54CcBH",
        "number": 13956,
        "title": "Issue: Question about Deletion of Embeddings for Confluence Spaces",
        "user": {
            "login": "deepak-habilelabs",
            "id": 137885024,
            "node_id": "U_kgDOCDf1YA",
            "avatar_url": "https://avatars.githubusercontent.com/u/137885024?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deepak-habilelabs",
            "html_url": "https://github.com/deepak-habilelabs",
            "followers_url": "https://api.github.com/users/deepak-habilelabs/followers",
            "following_url": "https://api.github.com/users/deepak-habilelabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/deepak-habilelabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deepak-habilelabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deepak-habilelabs/subscriptions",
            "organizations_url": "https://api.github.com/users/deepak-habilelabs/orgs",
            "repos_url": "https://api.github.com/users/deepak-habilelabs/repos",
            "events_url": "https://api.github.com/users/deepak-habilelabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deepak-habilelabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-28T08:26:59Z",
        "updated_at": "2023-11-28T11:41:36Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n\r\nI'm currently working on a project and have encountered an issue with the deletion functionality for Confluence \r\nSpaces. I've implemented a function delete_embeddings that is supposed to delete embeddings based on the Confluence space key, but it doesn't seem to be working as expected.\r\nHere's the relevant code snippet:\r\ndef delete_embeddings(file_path, persist_directory):\r\n    chroma_db = chromadb.PersistentClient(path=persist_directory)\r\n    collection = chroma_db.get_or_create_collection(name=\"langchain\")\r\n    ids = collection.get(where={\"source\": file_path})['ids']\r\n    collection.delete(where={\"source\": file_path},ids=ids)\r\n    # chroma_db.delete_collection(name=\"langchain\")\r\n    print(\"delete successfully\")\r\n    And I'm calling this function as follows:\r\n    delete_embeddings(names, persist_directory)\r\nI want to delete embeddings of Confluence Spaces when user request deletion confluence space.\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13956/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13956/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13955",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13955/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13955/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13955/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13955",
        "id": 2013887941,
        "node_id": "I_kwDOIPDwls54CX3F",
        "number": 13955,
        "title": "Advance metadata filtering for PGVector",
        "user": {
            "login": "raghav-knowbe4",
            "id": 152261650,
            "node_id": "U_kgDOCRNUEg",
            "avatar_url": "https://avatars.githubusercontent.com/u/152261650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raghav-knowbe4",
            "html_url": "https://github.com/raghav-knowbe4",
            "followers_url": "https://api.github.com/users/raghav-knowbe4/followers",
            "following_url": "https://api.github.com/users/raghav-knowbe4/following{/other_user}",
            "gists_url": "https://api.github.com/users/raghav-knowbe4/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raghav-knowbe4/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raghav-knowbe4/subscriptions",
            "organizations_url": "https://api.github.com/users/raghav-knowbe4/orgs",
            "repos_url": "https://api.github.com/users/raghav-knowbe4/repos",
            "events_url": "https://api.github.com/users/raghav-knowbe4/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raghav-knowbe4/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5932474361,
                "node_id": "LA_kwDOIPDwls8AAAABYZpf-Q",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20pinecone",
                "name": "integration: pinecone",
                "color": "BC53BE",
                "default": false,
                "description": "Related to Pinecone vector store integration"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-28T08:15:46Z",
        "updated_at": "2023-11-28T19:55:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nPGVector in Langchain does not support advance metadata filtering such as \"OR\" clause.\r\nFor now, there is no way to perform filters such as:\r\n\r\n```\r\n{\r\n\"$or\": [\r\n     {\"uploaded_by\": {\"$eq\": \"USER1\"}},\r\n     {\"org\": {\"$eq\": \"ORG\"}},\r\n  ]\r\n}\r\n```\n\n### Motivation\n\nOur team is unable to use langchain with PGVector due to its lack of support for \"OR\" filter.\r\nHaving advanced metadata filtering like that in Pinecone/Qdrant would really help\r\n\r\nhttps://docs.pinecone.io/docs/metadata-filtering\n\n### Your contribution\n\nFor now, I see existing PR: https://github.com/langchain-ai/langchain/pull/12977\r\nThis could possibly solve the issue.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13955/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13954",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13954/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13954/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13954/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13954",
        "id": 2013781829,
        "node_id": "I_kwDOIPDwls54B99F",
        "number": 13954,
        "title": "Issue: Question about Deletion Functionality for Confluence Spaces",
        "user": {
            "login": "deepak-habilelabs",
            "id": 137885024,
            "node_id": "U_kgDOCDf1YA",
            "avatar_url": "https://avatars.githubusercontent.com/u/137885024?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/deepak-habilelabs",
            "html_url": "https://github.com/deepak-habilelabs",
            "followers_url": "https://api.github.com/users/deepak-habilelabs/followers",
            "following_url": "https://api.github.com/users/deepak-habilelabs/following{/other_user}",
            "gists_url": "https://api.github.com/users/deepak-habilelabs/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/deepak-habilelabs/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/deepak-habilelabs/subscriptions",
            "organizations_url": "https://api.github.com/users/deepak-habilelabs/orgs",
            "repos_url": "https://api.github.com/users/deepak-habilelabs/repos",
            "events_url": "https://api.github.com/users/deepak-habilelabs/events{/privacy}",
            "received_events_url": "https://api.github.com/users/deepak-habilelabs/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5924999838,
                "node_id": "LA_kwDOIPDwls8AAAABYShSng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20chroma",
                "name": "integration: chroma",
                "color": "9D6C34",
                "default": false,
                "description": "Related to ChromaDB"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-28T06:57:30Z",
        "updated_at": "2023-11-28T08:03:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n\r\nI'm currently working on a project and have encountered an issue with the deletion functionality for Confluence Spaces. I've implemented a function `delete_embeddings` that is supposed to delete embeddings based on the Confluence space key, but it doesn't seem to be working as expected.\r\nHere's the relevant code snippet:\r\n\r\n```python\r\ndef delete_embeddings(file_path, persist_directory):\r\n    chroma_db = chromadb.PersistentClient(path=persist_directory)\r\n    collection = chroma_db.get_or_create_collection(name=\"langchain\")\r\n    ids = collection.get(where={\"source\": file_path})['ids']\r\n    collection.delete(where={\"source\": file_path},ids=ids)\r\n    # chroma_db.delete_collection(name=\"langchain\")\r\n    print(\"delete successfully\")\r\n    And I'm calling this function as follows:\r\ndelete_embeddings(names, persist_directory)\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13954/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13952",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13952/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13952/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13952/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13952",
        "id": 2013737662,
        "node_id": "I_kwDOIPDwls54BzK-",
        "number": 13952,
        "title": "DOC: Dropbox document loader functionality",
        "user": {
            "login": "llamasrock",
            "id": 131513748,
            "node_id": "U_kgDOB9a9lA",
            "avatar_url": "https://avatars.githubusercontent.com/u/131513748?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/llamasrock",
            "html_url": "https://github.com/llamasrock",
            "followers_url": "https://api.github.com/users/llamasrock/followers",
            "following_url": "https://api.github.com/users/llamasrock/following{/other_user}",
            "gists_url": "https://api.github.com/users/llamasrock/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/llamasrock/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/llamasrock/subscriptions",
            "organizations_url": "https://api.github.com/users/llamasrock/orgs",
            "repos_url": "https://api.github.com/users/llamasrock/repos",
            "events_url": "https://api.github.com/users/llamasrock/events{/privacy}",
            "received_events_url": "https://api.github.com/users/llamasrock/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-28T06:18:48Z",
        "updated_at": "2023-12-03T22:19:38Z",
        "closed_at": "2023-12-03T22:19:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nI was hoping to use the Dropbox document loader for a large number of pdf and some docx documents, however I am not sure whether this loader supports these file types. I followed the instructions on https://python.langchain.com/docs/integrations/document_loaders/dropbox and installed the \"unstructured[all-docs]\" package but I keep getting the message that the loader skips these files. \r\n\r\n> xxx.docx could not be decoded as text. Skipping.\r\n> yyy.pdf could not be decoded as text. Skipping.\r\n\r\nDoes this loader only support .txt files? Is there an alternative? I see the Unstructured loader only works for individual files, is that the best alternative? \r\n\r\nMany thanks!\n\n### Idea or request for content:\n\nFile formats the loader supports needs to be clarified\r\nunstructured package was given as a prerequisite for pdf files but I was getting missing package/method errors until I installed the \"unstructured[all-docs]\" package and still not able to load pdf files",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13952/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13952/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13951",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13951/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13951/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13951/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13951",
        "id": 2013694385,
        "node_id": "I_kwDOIPDwls54Bomx",
        "number": 13951,
        "title": "PineconeProtocolError: Failed to connect; did you specify the correct index name?",
        "user": {
            "login": "blockdev723",
            "id": 47790805,
            "node_id": "MDQ6VXNlcjQ3NzkwODA1",
            "avatar_url": "https://avatars.githubusercontent.com/u/47790805?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blockdev723",
            "html_url": "https://github.com/blockdev723",
            "followers_url": "https://api.github.com/users/blockdev723/followers",
            "following_url": "https://api.github.com/users/blockdev723/following{/other_user}",
            "gists_url": "https://api.github.com/users/blockdev723/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blockdev723/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blockdev723/subscriptions",
            "organizations_url": "https://api.github.com/users/blockdev723/orgs",
            "repos_url": "https://api.github.com/users/blockdev723/repos",
            "events_url": "https://api.github.com/users/blockdev723/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blockdev723/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5932474361,
                "node_id": "LA_kwDOIPDwls8AAAABYZpf-Q",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20pinecone",
                "name": "integration: pinecone",
                "color": "BC53BE",
                "default": false,
                "description": "Related to Pinecone vector store integration"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-28T05:49:35Z",
        "updated_at": "2023-11-29T11:03:57Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nTo train data in Pinecone, I used the function.\r\n_pinecone = Pinecone.from_documents(docs, self.embeddings, index_name=self.index_name)\r\n\r\nall the parameters have values always:\r\n![image](https://github.com/langchain-ai/langchain/assets/47790805/da013cf4-a082-44d0-9505-0013835c4b90)\r\n\r\n![image](https://github.com/langchain-ai/langchain/assets/47790805/6764a84c-a59c-43a5-9dfe-4ecea69e68ef)\r\n\r\nBut, this error occurs often like this: \r\n![image](https://github.com/langchain-ai/langchain/assets/47790805/9aee7fed-49c4-4e6e-941f-94c3f442244c)\r\n\r\n @hwchase17 , I am looking forward to fixing this issue asap. Thank you.\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nclass PineConeIndexer:\r\n    \r\n    def __init__(self):\r\n        self.embeddings = OpenAIEmbeddings()\r\n\r\n        # initialize pinecone\r\n        pinecone.init(\r\n            api_key=os.environ.get('PINECONE_API_KEY'), \r\n            environment=os.environ.get('PINECONE_ENV') \r\n        )\r\n\r\n        self.index_name = os.environ.get('PINECONE_INDEX_NAME')\r\n\r\n   def upsert_index_from_task(self, task):\r\n        try:\r\n           # get doc\r\n            ....\r\n            _pinecone = Pinecone.from_documents(docs, self.embeddings, index_name=self.index_name)\r\n            return {\"success\": True, \"error\": None}\r\n        except Exception as e:\r\n            return {\"success\": False, \"error\": str(e)}\n\n### Expected behavior\n\nsometimes, this error occurs: \r\n\r\nPineconeProtocolError\r\nFailed to connect; did you specify the correct index name?\r\n\r\nProtocolError\r\n('Connection aborted.', ConnectionResetError(104, 'Connection reset by peer'))\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13951/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13951/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13950",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13950/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13950/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13950/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13950",
        "id": 2013688168,
        "node_id": "PR_kwDOIPDwls5gg68L",
        "number": 13950,
        "title": "Mathpix PDF loader supports arbitrary extra params",
        "user": {
            "login": "chadnorvell",
            "id": 29340381,
            "node_id": "MDQ6VXNlcjI5MzQwMzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29340381?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chadnorvell",
            "html_url": "https://github.com/chadnorvell",
            "followers_url": "https://api.github.com/users/chadnorvell/followers",
            "following_url": "https://api.github.com/users/chadnorvell/following{/other_user}",
            "gists_url": "https://api.github.com/users/chadnorvell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chadnorvell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chadnorvell/subscriptions",
            "organizations_url": "https://api.github.com/users/chadnorvell/orgs",
            "repos_url": "https://api.github.com/users/chadnorvell/repos",
            "events_url": "https://api.github.com/users/chadnorvell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chadnorvell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T05:42:54Z",
        "updated_at": "2023-11-29T10:12:33Z",
        "closed_at": "2023-11-29T10:12:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13950",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13950",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13950.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13950.patch",
            "merged_at": "2023-11-29T10:12:32Z"
        },
        "body": "  - **Description:** Support providing whatever extra parameters you want to the Mathpix PDF loader API request.\r\n  - **Issue:** #12773\r\n  - **Dependencies:** None",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13950/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13949",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13949/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13949/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13949/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13949",
        "id": 2013672102,
        "node_id": "PR_kwDOIPDwls5gg3Zz",
        "number": 13949,
        "title": "Fix Mathpix PDF loader integration",
        "user": {
            "login": "chadnorvell",
            "id": 29340381,
            "node_id": "MDQ6VXNlcjI5MzQwMzgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29340381?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chadnorvell",
            "html_url": "https://github.com/chadnorvell",
            "followers_url": "https://api.github.com/users/chadnorvell/followers",
            "following_url": "https://api.github.com/users/chadnorvell/following{/other_user}",
            "gists_url": "https://api.github.com/users/chadnorvell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chadnorvell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chadnorvell/subscriptions",
            "organizations_url": "https://api.github.com/users/chadnorvell/orgs",
            "repos_url": "https://api.github.com/users/chadnorvell/repos",
            "events_url": "https://api.github.com/users/chadnorvell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chadnorvell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T05:26:23Z",
        "updated_at": "2023-12-03T18:36:50Z",
        "closed_at": "2023-12-03T18:36:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13949",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13949",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13949.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13949.patch",
            "merged_at": "2023-12-03T18:36:50Z"
        },
        "body": "  - **Description:** Fixes the Mathpix PDF loader API integration. Specifically, ensures that Mathpix auth headers are provided for every request, and ensures that we recognize all errors that can occur during a request. Also, the option to provide API keys as kwargs never actually worked before, but now that's fixed too.\r\n  - **Issue:** #11249\r\n  - **Dependencies:** None",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13949/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13949/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13948",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13948/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13948/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13948/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13948",
        "id": 2013613246,
        "node_id": "PR_kwDOIPDwls5ggp_4",
        "number": 13948,
        "title": "Tmp",
        "user": {
            "login": "169",
            "id": 10000925,
            "node_id": "MDQ6VXNlcjEwMDAwOTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/10000925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/169",
            "html_url": "https://github.com/169",
            "followers_url": "https://api.github.com/users/169/followers",
            "following_url": "https://api.github.com/users/169/following{/other_user}",
            "gists_url": "https://api.github.com/users/169/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/169/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/169/subscriptions",
            "organizations_url": "https://api.github.com/users/169/orgs",
            "repos_url": "https://api.github.com/users/169/repos",
            "events_url": "https://api.github.com/users/169/events{/privacy}",
            "received_events_url": "https://api.github.com/users/169/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T04:46:46Z",
        "updated_at": "2023-11-28T07:45:57Z",
        "closed_at": "2023-11-28T07:45:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13948",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13948",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13948.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13948.patch",
            "merged_at": null
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13948/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13947",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13947/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13947/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13947/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13947",
        "id": 2013606586,
        "node_id": "I_kwDOIPDwls54BTK6",
        "number": 13947,
        "title": "can you tell me how to calculate  what will be cost for this input tokens in prompt and output tokens in prompt ",
        "user": {
            "login": "Onkargaikwad11",
            "id": 121924825,
            "node_id": "U_kgDOB0Rs2Q",
            "avatar_url": "https://avatars.githubusercontent.com/u/121924825?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Onkargaikwad11",
            "html_url": "https://github.com/Onkargaikwad11",
            "followers_url": "https://api.github.com/users/Onkargaikwad11/followers",
            "following_url": "https://api.github.com/users/Onkargaikwad11/following{/other_user}",
            "gists_url": "https://api.github.com/users/Onkargaikwad11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Onkargaikwad11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Onkargaikwad11/subscriptions",
            "organizations_url": "https://api.github.com/users/Onkargaikwad11/orgs",
            "repos_url": "https://api.github.com/users/Onkargaikwad11/repos",
            "events_url": "https://api.github.com/users/Onkargaikwad11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Onkargaikwad11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T04:42:02Z",
        "updated_at": "2023-11-28T04:47:14Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nthis is intput token (import pandas as pd\r\nimport json\r\nfrom IPython.display import Markdown, display\r\nfrom langchain.agents import create_csv_agent\r\nfrom langchain.chat_models import ChatOpenAI\r\nfrom langchain.llms import OpenAI\r\nimport os\r\n\r\nos.environ[\"OPENAI_API_KEY\"] = \"\"\r\n\r\n\r\n# Load the dataset\r\ndf = pd.read_csv('Loan Collections - Sheet1.csv')\r\n\r\n# Function to convert date and time columns to float\r\ndef convert_date_time_columns_to_float(df):\r\n    for column in df.select_dtypes(include=['object']).columns:\r\n        # Check if the column name contains 'date' or 'time'\r\n        if 'date' in column.lower() or 'time' in column.lower():\r\n            try:\r\n                # Convert the column to datetime\r\n                df[column] = pd.to_datetime(df[column], errors='coerce')\r\n                \r\n                # Convert datetime to numerical representation (e.g., days since a reference date)\r\n                reference_date = pd.to_datetime('1900-01-01')\r\n                df[column] = (df[column] - reference_date).dt.total_seconds() / (24 * 60 * 60)\r\n\r\n            except ValueError:\r\n                # Handle errors during conversion\r\n                print(f\"Error converting column '{column}' to float.\")\r\n\r\n# Convert 'date' and 'time' columns to float\r\nconvert_date_time_columns_to_float(df)\r\n\r\n\r\n# Extract unique values for each column\r\nunique_values_per_column = {}\r\nfor column in df.select_dtypes(include=['object']).columns:\r\n    unique_values_per_column[column] = df[column].unique().tolist()\r\n\r\n# Convert the dictionary to JSON\r\njson_data_train = json.dumps(unique_values_per_column, indent=4)\r\n\r\n\r\ntestData_fname = \"Sample Retail Stores Data.csv\"\r\n# Load the dataset\r\ndf2 = pd.read_csv(testData_fname)\r\n\r\n\r\nconvert_date_time_columns_to_float(df2)\r\n\r\n\r\n\r\n# Extract unique values for each column\r\nunique_values_per_column = {}\r\nfor column in df2.select_dtypes(include=['object']).columns:\r\n    unique_values_per_column[column] = df2[column].unique().tolist()\r\n\r\n# Convert the dictionary to JSON\r\njson_data_test = json.dumps(unique_values_per_column, indent=4)\r\n\r\n# Define user's question\r\nuser_question = \"Percentage share of State by Value?\"\r\n\r\n# Define the prompt template\r\nprompt_template = f'''If the dataset has the following columns: {json_data_train}'''+''' Understand user questions with different column names and convert them to a JSON format.\r\n\r\nQuestion might not even mentioned column name at all, it would probably mention value of the column. so it has to figure it out columnn name based on that value.\r\n\r\nExample1:\r\nUser Question1:  top zone in the year 2019 with Loan Amt between 10k and 20k and tenure > 12 excluding Texas region?\r\n\r\n\r\n{\r\n    \"start_date\": \"01-01-2019\",\r\n    \"end_date\": \"31-12-2019\",\r\n    \"time_stamp_col\": \"Due Date\",\r\n    \"agg_columns\": [],\r\n    \"trend\": \"null\",\r\n    \"to_start_date\": \"null\",\r\n    \"to_end_date\": \"null\",\r\n    \"growth\": \"null\",\r\n    \"variables_grpby\": [\"Zone\"],\r\n    \"filters\": {},\r\n    \"not_in\": {\"Region\": [\"Texas\"]},\r\n    \"num_filter\": {\r\n        \"gt\": [\r\n            [\"Loan Tenure\", 12],\r\n            [\"Loan Amount\", 10000]\r\n        ],\r\n        \"lt\": [\r\n            [\"Loan Amount\", 20000]\r\n        ]\r\n    },\r\n    \"percent\": \"false\",\r\n    \"top\": \"1\",\r\n    \"bottom\": \"null\"\r\n}\r\n\r\nNote the following in the above example\r\n- The word \"top\" in the User Question made the \"top\" key have the value as \"1\". If \"highest\" is mentioned in the User Question, even then \"top\" would have the value as \"1\". If \"top\" is not mentioned or not implied in the User Question, then it takes on the value \"null\". Similarly for \"bottom\" key in the System Response.\r\n- The word \"zone\" in the User Question refers to a column \"Zone\" in the dataset and since it is a non-numeric column and we have to group by that column, the system response has it as one of the values of the list of the key \"variables_grpby\"\r\n- The key \"start_date\" and \"end_date\" Since it is mentioned 2019 in the User Question as the timeframe, the \"start_date\" assumes the beginning of the year 2019 and \"end_date\" assumes the end of the year 2019. If no date related words are mentioned in the question, \"start_date\" would be \"null\" and \"end_date\" would be \"null\".\r\n- The key \"time_stamp_col\" in the System Response should mention the relevant time related column name from the dataset according to the question if the question mentions a time related word.\r\n- The key \"agg_columns\" in the System Response is a list of columns to be aggregated which should mention the numeric column names on which the question wants us to aggregate on.\r\n- The key \"trend\" in the System Response, \"trend\" is set to \"null\" since the user question doesn't imply any trend analysis . If the question were about trends over time, this key would contain information about the trend, such as \"upward,\" \"downward,\" or \"null\" if no trend is specified.\r\n- The key \"filters\" An empty dictionary in this case, as there are no explicit filters mentioned in the user question. If the user asked to filter data based on certain conditions (e.g. excluding a specific region), this key would contain the relevant filters.\r\n- The key \"to_start_date\" and \"to_end_date\" Both set to \"null\" in this example because the user question specifies a single timeframe (2019). If the question mentioned a range (e.g. \"from January 2019 to March 2019\"), these keys would capture the specified range.\r\n- The key \"growth\" Set to \"null\" in this example as there is no mention of growth in the user question. If the user inquired about growth or change over time, this key would provide information about the type of growth (e.g.\"monthly\",\"yearly\",\" \"absolute\") or be set to \"null\" if not applicable.\r\n- The key \"not_in\" Contains information about exclusion criteria based on the user's question. In this example, it excludes the \"Texas\" region. If the user question doesn't involve exclusions, this key would be an empty dictionary.\r\n- The key \"num_filter\" Specifies numerical filters based on conditions in the user question. In this example, it filters loans with a tenure greater than 12 and loan amounts between 10k and 20k. If the user question doesn't involve numerical filters, this key would be an empty dictionary.\r\n- The key \"percent\" Set to \"false\" in this example as there is no mention of percentage in the user question. If the user inquired about percentages, this key would contain information about the use of percentages in the response.\r\n\r\nSimilarly, below are more examples of user questions and their corresponding expected System Responses.\r\n\r\nExample 2:\r\nUser Question: What is the Highest Loan Amount and Loan Outstanding by RM Name James in January 2020\r\n\r\n{\r\n    \"start_date\": \"01-01-2020\",\r\n    \"end_date\": \"31-01-2020\",\r\n    \"time_stamp_col\": \"Due Date\",\r\n    \"agg_columns\": [\"Loan Amount\", \"Loan Outstanding\"],\r\n    \"trend\":  \"null\",\r\n    \"to_start_date\":  \"null\",\r\n    \"to_end_date\":  \"null\",\r\n    \"growth\":  \"null\",\r\n    \"variables_grpby\": [],\r\n    \"filters\": {\"RM Name\": [\"James\"]},\r\n    \"not_in\": {},\r\n    \"num_filter\": {},\r\n    \"percent\": \"false\",\r\n    \"top\": \"1\",\r\n    \"bottom\": \"null\"\r\n}\r\n\r\nExample 3:\r\nUser Question: Which RM Name with respect to Region has the Highest Interest Outstanding and Principal Outstanding in the year 2019\r\n\r\n{\r\n    \"start_date\": \"01-01-2019\",\r\n    \"end_date\": \"31-12-2019\",\r\n    \"time_stamp_col\": \"Due Date\",\r\n    \"agg_columns\": [\"Interest Outstanding\", \"Principal Outstanding\"],\r\n    \"trend\":  \"null\",\r\n    \"to_start_date\":  \"null\",\r\n    \"to_end_date\":  \"null\",\r\n    \"growth\":  \"null\",\r\n    \"variables_grpby\": [\"RM Name\", \"Region\"],\r\n    \"filters\": {},\r\n    \"not_in\": {},\r\n    \"num_filter\": {},\r\n    \"percent\": \"false\",\r\n    \"top\": \"1\",\r\n    \"bottom\":  \"null\"\r\n}\r\n\r\nExample 4:\r\nUser Question: Which Branch in North Carolina with respect to Cibil Score Bucket has the Highest Cibil Score in 2019\r\n\r\n{\r\n    \"start_date\": \"01-01-2019\",\r\n    \"end_date\": \"31-12-2019\",\r\n    \"time_stamp_col\": \"Due Date\",\r\n    \"agg_columns\": [\"Cibil Score\", \"DPD Bucket\"],\r\n    \"trend\":  \"null\",\r\n    \"to_start_date\":  \"null\",\r\n    \"to_end_date\":  \"null\",\r\n    \"growth\":  \"null\",\r\n    \"variables_grpby\": [\"Branch\"],\r\n    \"filters\": {\"Region\": [\"North Carolina\"]},\r\n    \"not_in\": {},\r\n    \"num_filter\": {},\r\n    \"percent\": \"false\",\r\n    \"top\": \"1\",\r\n    \"bottom\":  \"null\"\r\n}\r\n''\r\nExample 5:\r\nUser Question: With respect to Zone, Region, Branch, RM Name what is the Highest Loan Amount, Loan Tenure, Loan Outstanding, EMI Pending, Principal Outstanding\r\n\r\n{\r\n    \"start_date\":  \"null\",\r\n    \"end_date\":  \"null\",\r\n    \"time_stamp_col\":  \"null\",\r\n    \"agg_columns\": [\"Loan Amount\", \"Loan Tenure\", \"Loan Outstanding\", \"EMI Pending\", \"Principal Outstanding\"],\r\n    \"trend\":  \"null\",\r\n    \"to_start_date\":  \"null\",\r\n    \"to_end_date\":  \"null\",\r\n    \"growth\":  \"null\",\r\n    \"variables_grpby\": [\"Zone\", \"Region\", \"Branch\", \"RM Name\"],\r\n    \"filters\": {},\r\n    \"not_in\": {},\r\n    \"num_filter\": {},\r\n    \"percent\": \"false\",\r\n    \"top\": \"1\",\r\n    \"bottom\":  \"null\"\r\n}\r\n\r\nExample 6:\r\nUser Question: Top 2 zones by Housing Loan in the year 2019\r\n\r\n{\r\n    \"start_date\": \"01-01-2019\",\r\n    \"end_date\": \"31-12-2019\",\r\n    \"time_stamp_col\": \"Due Date\",\r\n    \"agg_columns\": [\"Housing Loan\"],\r\n    \"trend\":  \"null\",\r\n    \"to_start_date\":  \"null\",\r\n    \"to_end_date\":  \"null\",\r\n    \"growth\":  \"null\",\r\n    \"variables_grpby\": [\"Zone\"],\r\n    \"filters\": {\"Product\": [\"Home Loan\"]},\r\n    \"not_in\": {},\r\n    \"num_filter\": {},\r\n    \"percent\": \"false\",\r\n    \"top\": \"2\",\r\n    \"bottom\":  \"null\"\r\n}\r\n\r\n'''+ f'''Our test dataset has the following columns: {json_data_test}\r\n\r\nUser Question (to be converted): {user_question}'''\r\n\r\n\r\n\r\n# Load the agent\r\nagent = create_csv_agent(OpenAI(temperature=0), testData_fname, verbose=True)\r\ngpt4_agent = create_csv_agent(ChatOpenAI(temperature=0, model_name=\"gpt-4-1106-preview\"), testData_fname)\r\n\r\n# Use the formatted question as the input to your agent\r\nresponse = gpt4_agent.run(prompt_template)\r\n\r\n# Print the response\r\nprint(user_question)\r\nprint(response))   and this is output token ( Percentage share of State by Value?\r\n{\r\n    \"start_date\": \"null\",\r\n    \"end_date\": \"null\",\r\n    \"time_stamp_col\": \"null\",\r\n    \"agg_columns\": [\"Value\"],\r\n    \"trend\": \"null\",\r\n    \"to_start_date\": \"null\",\r\n    \"to_end_date\": \"null\",\r\n    \"growth\": \"null\",\r\n    \"variables_grpby\": [\"State\"],\r\n    \"filters\": {},\r\n    \"not_in\": {},\r\n    \"num_filter\": {},\r\n    \"percent\": \"true\",\r\n    \"top\": \"null\",\r\n    \"bottom\": \"null\"\r\n}) \r\n\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13947/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13947/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13946",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13946/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13946/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13946/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13946",
        "id": 2013573622,
        "node_id": "PR_kwDOIPDwls5gghYn",
        "number": 13946,
        "title": "secretStr for baichuan chat model api key",
        "user": {
            "login": "nhywieza",
            "id": 8528287,
            "node_id": "MDQ6VXNlcjg1MjgyODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8528287?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nhywieza",
            "html_url": "https://github.com/nhywieza",
            "followers_url": "https://api.github.com/users/nhywieza/followers",
            "following_url": "https://api.github.com/users/nhywieza/following{/other_user}",
            "gists_url": "https://api.github.com/users/nhywieza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nhywieza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nhywieza/subscriptions",
            "organizations_url": "https://api.github.com/users/nhywieza/orgs",
            "repos_url": "https://api.github.com/users/nhywieza/repos",
            "events_url": "https://api.github.com/users/nhywieza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nhywieza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-28T04:03:03Z",
        "updated_at": "2023-11-29T02:22:13Z",
        "closed_at": "2023-11-29T02:20:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13946",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13946",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13946.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13946.patch",
            "merged_at": "2023-11-29T02:20:23Z"
        },
        "body": "Description: This PR removes secrets present in raw format,\r\nIssue: Baichuan api key was exposed when printing out the langchain object(https://github.com/langchain-ai/langchain/issues/12165)\r\nTag maintainer: @eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13946/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13946/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13945",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13945/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13945/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13945/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13945",
        "id": 2013561050,
        "node_id": "PR_kwDOIPDwls5ggeut",
        "number": 13945,
        "title": "feat: mask api key for nlpcloud",
        "user": {
            "login": "lujingxuansc",
            "id": 31956487,
            "node_id": "MDQ6VXNlcjMxOTU2NDg3",
            "avatar_url": "https://avatars.githubusercontent.com/u/31956487?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lujingxuansc",
            "html_url": "https://github.com/lujingxuansc",
            "followers_url": "https://api.github.com/users/lujingxuansc/followers",
            "following_url": "https://api.github.com/users/lujingxuansc/following{/other_user}",
            "gists_url": "https://api.github.com/users/lujingxuansc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lujingxuansc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lujingxuansc/subscriptions",
            "organizations_url": "https://api.github.com/users/lujingxuansc/orgs",
            "repos_url": "https://api.github.com/users/lujingxuansc/repos",
            "events_url": "https://api.github.com/users/lujingxuansc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lujingxuansc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T03:46:22Z",
        "updated_at": "2023-11-29T02:16:36Z",
        "closed_at": "2023-11-29T02:16:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13945",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13945",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13945.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13945.patch",
            "merged_at": "2023-11-29T02:16:36Z"
        },
        "body": "for https://github.com/langchain-ai/langchain/issues/12165",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13945/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13945/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13944",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13944/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13944/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13944/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13944",
        "id": 2013558131,
        "node_id": "PR_kwDOIPDwls5ggeHM",
        "number": 13944,
        "title": "Secret str for baichuan",
        "user": {
            "login": "nhywieza",
            "id": 8528287,
            "node_id": "MDQ6VXNlcjg1MjgyODc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8528287?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nhywieza",
            "html_url": "https://github.com/nhywieza",
            "followers_url": "https://api.github.com/users/nhywieza/followers",
            "following_url": "https://api.github.com/users/nhywieza/following{/other_user}",
            "gists_url": "https://api.github.com/users/nhywieza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nhywieza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nhywieza/subscriptions",
            "organizations_url": "https://api.github.com/users/nhywieza/orgs",
            "repos_url": "https://api.github.com/users/nhywieza/repos",
            "events_url": "https://api.github.com/users/nhywieza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nhywieza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T03:42:34Z",
        "updated_at": "2023-11-28T03:59:43Z",
        "closed_at": "2023-11-28T03:59:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13944",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13944",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13944.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13944.patch",
            "merged_at": null
        },
        "body": "  - **Description:** This PR removes secrets present in raw format, \r\n  - **Issue:** Baichuan api key was exposed when printing out the langchain object(#12165)\r\n  - **Tag maintainer:** @eyurtsev \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13944/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13944/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13943",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13943/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13943/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13943/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13943",
        "id": 2013546758,
        "node_id": "I_kwDOIPDwls54BEkG",
        "number": 13943,
        "title": "'HTTPClient' object has no attribute 'configuration'",
        "user": {
            "login": "crazyseabiscuit",
            "id": 878788,
            "node_id": "MDQ6VXNlcjg3ODc4OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/878788?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crazyseabiscuit",
            "html_url": "https://github.com/crazyseabiscuit",
            "followers_url": "https://api.github.com/users/crazyseabiscuit/followers",
            "following_url": "https://api.github.com/users/crazyseabiscuit/following{/other_user}",
            "gists_url": "https://api.github.com/users/crazyseabiscuit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crazyseabiscuit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crazyseabiscuit/subscriptions",
            "organizations_url": "https://api.github.com/users/crazyseabiscuit/orgs",
            "repos_url": "https://api.github.com/users/crazyseabiscuit/repos",
            "events_url": "https://api.github.com/users/crazyseabiscuit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crazyseabiscuit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-28T03:28:12Z",
        "updated_at": "2023-11-28T09:22:33Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nmachine: mackbook pro Sonoma 14.1.1\r\npackage:\r\npython = \"3.10.13\"\r\nopenai = \"^0.28.1\"\r\npandas = \"^2.1.1\"\r\nipython = \"^8.16.0\"\r\nlangchain = \"^0.0.306\"\r\npython-dotenv = \"^1.0.0\"\r\nseaborn = \"^0.13.0\"\r\ntqdm = \"^4.66.1\"\r\ntorch = \"^2.1.0\"\r\ntransformers = \"^4.35.2\"\r\naccelerate = \"^0.24.1\"\r\nsentencepiece = \"^0.1.99\"\r\nopenllm = \"^0.4.27\"\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfollow the instruction https://python.langchain.com/docs/integrations/llms/openllm\r\n1)openllm start dolly-v2\r\n2)\r\nfrom langchain.llms import OpenLLM\r\nserver_url = \"http://localhost:3000\"  # Replace with remote host if you are running on a remote server\r\nllm = OpenLLM(server_url=server_url)\r\nllm(\"what is the meaning of life\")\r\n\r\nerror:\r\nline 229 /langchain/llms/openllm.py 220\r\nAtrributionError: \"HttpClient\" object has not attribute 'configuration'\n\n### Expected behavior\n\nreturn a response from LLM",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13943/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13942",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13942/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13942/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13942/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13942",
        "id": 2013542053,
        "node_id": "PR_kwDOIPDwls5ggav8",
        "number": 13942,
        "title": "add volcengine endpoint for LLM",
        "user": {
            "login": "h3l",
            "id": 1664952,
            "node_id": "MDQ6VXNlcjE2NjQ5NTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1664952?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/h3l",
            "html_url": "https://github.com/h3l",
            "followers_url": "https://api.github.com/users/h3l/followers",
            "following_url": "https://api.github.com/users/h3l/following{/other_user}",
            "gists_url": "https://api.github.com/users/h3l/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/h3l/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/h3l/subscriptions",
            "organizations_url": "https://api.github.com/users/h3l/orgs",
            "repos_url": "https://api.github.com/users/h3l/repos",
            "events_url": "https://api.github.com/users/h3l/events{/privacy}",
            "received_events_url": "https://api.github.com/users/h3l/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714130,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rkg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XL",
                "name": "size:XL",
                "color": "D4C5F9",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-28T03:22:35Z",
        "updated_at": "2023-11-29T21:16:49Z",
        "closed_at": "2023-11-29T21:16:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13942",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13942",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13942.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13942.patch",
            "merged_at": "2023-11-29T21:16:42Z"
        },
        "body": "  - **Description:** Volc Engine MaaS serves as an enterprise-grade, large-model service platform designed for developers. You can visit its homepage at https://www.volcengine.com/docs/82379/1099455 for details. This change will facilitate developers to integrate quickly with the platform.\r\n  - **Issue:** None\r\n  - **Dependencies:** volcengine\r\n  - **Tag maintainer:** @baskaryan \r\n  - **Twitter handle:** @he1v3tica",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13942/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13942/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13941",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13941/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13941/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13941/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13941",
        "id": 2013521427,
        "node_id": "PR_kwDOIPDwls5ggWG9",
        "number": 13941,
        "title": "Added Slack Toolkit",
        "user": {
            "login": "ZyeG",
            "id": 97558871,
            "node_id": "U_kgDOBdChVw",
            "avatar_url": "https://avatars.githubusercontent.com/u/97558871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZyeG",
            "html_url": "https://github.com/ZyeG",
            "followers_url": "https://api.github.com/users/ZyeG/followers",
            "following_url": "https://api.github.com/users/ZyeG/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZyeG/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZyeG/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZyeG/subscriptions",
            "organizations_url": "https://api.github.com/users/ZyeG/orgs",
            "repos_url": "https://api.github.com/users/ZyeG/repos",
            "events_url": "https://api.github.com/users/ZyeG/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZyeG/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T03:06:41Z",
        "updated_at": "2023-11-29T07:28:07Z",
        "closed_at": "2023-11-29T07:28:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13941",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13941",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13941.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13941.patch",
            "merged_at": null
        },
        "body": "This pull request addresses #11747 \r\nWe added slack toolkit to lang chain.\r\n\r\n Slack tools: \r\n- get_message: get message history in a channel\r\n- send_message: send a message on user's or bot's behalf to a channel\r\n- get_channel: get a summary of all channels in workspace\r\n\r\nExample: docs/integrations/toolkits/slack.ipynb",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13941/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13940",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13940/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13940/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13940/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13940",
        "id": 2013520514,
        "node_id": "PR_kwDOIPDwls5ggV5t",
        "number": 13940,
        "title": "Split out openai",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714144,
                "node_id": "LA_kwDOIPDwls8AAAABc3-roA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XXL",
                "name": "size:XXL",
                "color": "5319E7",
                "default": false,
                "description": "This PR changes 1000+ lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T03:06:08Z",
        "updated_at": "2023-12-14T02:53:58Z",
        "closed_at": "2023-12-14T02:53:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13940",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13940",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13940.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13940.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13940/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13940/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13939",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13939/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13939/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13939/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13939",
        "id": 2013460359,
        "node_id": "I_kwDOIPDwls54AveH",
        "number": 13939,
        "title": "To support open v1 SDK proxy setting",
        "user": {
            "login": "shadowlinyf",
            "id": 13216079,
            "node_id": "MDQ6VXNlcjEzMjE2MDc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13216079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shadowlinyf",
            "html_url": "https://github.com/shadowlinyf",
            "followers_url": "https://api.github.com/users/shadowlinyf/followers",
            "following_url": "https://api.github.com/users/shadowlinyf/following{/other_user}",
            "gists_url": "https://api.github.com/users/shadowlinyf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shadowlinyf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shadowlinyf/subscriptions",
            "organizations_url": "https://api.github.com/users/shadowlinyf/orgs",
            "repos_url": "https://api.github.com/users/shadowlinyf/repos",
            "events_url": "https://api.github.com/users/shadowlinyf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shadowlinyf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T02:12:10Z",
        "updated_at": "2023-11-28T02:17:38Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain 0.0.340\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nAfter openai v1 sdk the previous method openai.proxy = {xxx} is no longer supported. But langchain is still using it.\r\nIt seems openai v1 sdk only support to set proxy on client level. see this issue on open ai sdk repo https://github.com/openai/openai-python/issues/825#issuecomment-1826047567\r\n \n\n### Expected behavior\n\nShould implement the way openai sdk required to set proxy",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13939/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13939/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13938",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13938/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13938/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13938/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13938",
        "id": 2013443383,
        "node_id": "PR_kwDOIPDwls5ggFbd",
        "number": 13938,
        "title": "Add Outline provider doc",
        "user": {
            "login": "yuskhan",
            "id": 66191792,
            "node_id": "MDQ6VXNlcjY2MTkxNzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/66191792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuskhan",
            "html_url": "https://github.com/yuskhan",
            "followers_url": "https://api.github.com/users/yuskhan/followers",
            "following_url": "https://api.github.com/users/yuskhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuskhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuskhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuskhan/subscriptions",
            "organizations_url": "https://api.github.com/users/yuskhan/orgs",
            "repos_url": "https://api.github.com/users/yuskhan/repos",
            "events_url": "https://api.github.com/users/yuskhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuskhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T01:51:18Z",
        "updated_at": "2023-11-29T03:29:31Z",
        "closed_at": "2023-11-29T03:29:30Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13938",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13938",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13938.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13938.patch",
            "merged_at": "2023-11-29T03:29:30Z"
        },
        "body": "  - **Description:** Added a provider doc to `docs/integrations/providers` for the new Outline integration in #13889\r\n  - **Tag maintainer:** @baskaryan ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13938/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13938/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13937",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13937/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13937/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13937/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13937",
        "id": 2013425511,
        "node_id": "I_kwDOIPDwls54Am9n",
        "number": 13937,
        "title": "Issue: create agent takes multiple variables ",
        "user": {
            "login": "xasxin",
            "id": 113810081,
            "node_id": "U_kgDOBsiaoQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/113810081?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xasxin",
            "html_url": "https://github.com/xasxin",
            "followers_url": "https://api.github.com/users/xasxin/followers",
            "following_url": "https://api.github.com/users/xasxin/following{/other_user}",
            "gists_url": "https://api.github.com/users/xasxin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xasxin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xasxin/subscriptions",
            "organizations_url": "https://api.github.com/users/xasxin/orgs",
            "repos_url": "https://api.github.com/users/xasxin/repos",
            "events_url": "https://api.github.com/users/xasxin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xasxin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-28T01:27:57Z",
        "updated_at": "2023-11-28T01:31:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nIt seems like that the agent can only take one variable \"input\".\r\nI would like to create an agent with a custom prompt template that takes multiple variables whenever a user types something. like agent_executor.invoke({\"input\": \"what is my name\", \"example\":example, \"user_profile\":user_profile})\r\nthe custom prompt template looks like \"\"\"\r\nuser input: {input}\r\nexample: {example}\r\nuser_profile : {user_profile}\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13937/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13937/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13936",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13936/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13936/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13936/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13936",
        "id": 2013395749,
        "node_id": "I_kwDOIPDwls54Afsl",
        "number": 13936,
        "title": "devcontainer fail to built",
        "user": {
            "login": "ZyeG",
            "id": 97558871,
            "node_id": "U_kgDOBdChVw",
            "avatar_url": "https://avatars.githubusercontent.com/u/97558871?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZyeG",
            "html_url": "https://github.com/ZyeG",
            "followers_url": "https://api.github.com/users/ZyeG/followers",
            "following_url": "https://api.github.com/users/ZyeG/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZyeG/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZyeG/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZyeG/subscriptions",
            "organizations_url": "https://api.github.com/users/ZyeG/orgs",
            "repos_url": "https://api.github.com/users/ZyeG/repos",
            "events_url": "https://api.github.com/users/ZyeG/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZyeG/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-28T00:57:23Z",
        "updated_at": "2023-11-29T04:10:15Z",
        "closed_at": "2023-11-29T04:10:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\ntrying building devcontainer following steps in doc ~/langchain/.devcontainer/README.md, but stuck at step10/11\r\n<img width=\"876\" alt=\"Screen Shot 2023-11-27 at 7 56 30 PM\" src=\"https://github.com/langchain-ai/langchain/assets/97558871/3b8c803c-bdce-410d-8b7a-19fb0d1bc692\">\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13936/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13936/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13935",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13935/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13935/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13935/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13935",
        "id": 2013378489,
        "node_id": "PR_kwDOIPDwls5gf3dw",
        "number": 13935,
        "title": "Added DGraphQAChain for DGraph databases",
        "user": {
            "login": "PoromKamal",
            "id": 62628923,
            "node_id": "MDQ6VXNlcjYyNjI4OTIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/62628923?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PoromKamal",
            "html_url": "https://github.com/PoromKamal",
            "followers_url": "https://api.github.com/users/PoromKamal/followers",
            "following_url": "https://api.github.com/users/PoromKamal/following{/other_user}",
            "gists_url": "https://api.github.com/users/PoromKamal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PoromKamal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PoromKamal/subscriptions",
            "organizations_url": "https://api.github.com/users/PoromKamal/orgs",
            "repos_url": "https://api.github.com/users/PoromKamal/repos",
            "events_url": "https://api.github.com/users/PoromKamal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PoromKamal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714144,
                "node_id": "LA_kwDOIPDwls8AAAABc3-roA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XXL",
                "name": "size:XXL",
                "color": "5319E7",
                "default": false,
                "description": "This PR changes 1000+ lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-28T00:40:11Z",
        "updated_at": "2023-12-01T05:24:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13935",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13935",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13935.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13935.patch",
            "merged_at": null
        },
        "body": "**Description:**\r\nAdded DGraphQAChain, a question answering chain for DGraph, a GraphQL powered database, extending LangChain's outreach to DGraph clients, and the DGraph community overall.\r\n\r\nThis pull request seamlessly integrates DGraph and DGraphQAChain, offering functionality similar to the other graph database integrations. Noteworthy differentiators include the introduction of an \"experimental_dql_syntax_injection\" flag. When activated, this feature injects text extracted from the DGraph Query Syntax guidelines page, providing valuable context to enhance the performance of less proficient Language Models and increase the likelihood of generating valid queries.\r\n\r\nThis pull requests also contains some sample queries which can be injected into the DGraphQAChain, with the use_generic_query_examples flag.\r\n\r\n**issue**\r\nhttps://github.com/langchain-ai/langchain/issues/11533\r\n\r\n**Dependencies:**\r\n[pydgraph](https://pypi.org/project/pydgraph/1.0.0a2/)\r\n\r\n**Tag maintainer:**\r\n@baskaryan \r\n\r\nApart of UofT's CSCD01: Engineering Large Software Course \ud83d\ude04",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13935/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13935/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13934",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13934/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13934/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13934/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13934",
        "id": 2013355206,
        "node_id": "PR_kwDOIPDwls5gfyYn",
        "number": 13934,
        "title": "Extend serpapi tools",
        "user": {
            "login": "HamJaw1432",
            "id": 56083056,
            "node_id": "MDQ6VXNlcjU2MDgzMDU2",
            "avatar_url": "https://avatars.githubusercontent.com/u/56083056?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HamJaw1432",
            "html_url": "https://github.com/HamJaw1432",
            "followers_url": "https://api.github.com/users/HamJaw1432/followers",
            "following_url": "https://api.github.com/users/HamJaw1432/following{/other_user}",
            "gists_url": "https://api.github.com/users/HamJaw1432/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HamJaw1432/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HamJaw1432/subscriptions",
            "organizations_url": "https://api.github.com/users/HamJaw1432/orgs",
            "repos_url": "https://api.github.com/users/HamJaw1432/repos",
            "events_url": "https://api.github.com/users/HamJaw1432/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HamJaw1432/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714144,
                "node_id": "LA_kwDOIPDwls8AAAABc3-roA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XXL",
                "name": "size:XXL",
                "color": "5319E7",
                "default": false,
                "description": "This PR changes 1000+ lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-28T00:14:55Z",
        "updated_at": "2023-11-29T22:02:58Z",
        "closed_at": "2023-11-29T22:02:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13934",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13934",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13934.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13934.patch",
            "merged_at": "2023-11-29T22:02:57Z"
        },
        "body": "  - **Description:** Added some of the more endpoints supported by serpapi that are not suported on langchain at the moment, like google trends, google finance, google jobs, and google lens\r\n  - **Issue:** [Add support for many of the querying endpoints with serpapi #11811](https://github.com/langchain-ai/langchain/issues/11811)\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13934/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13934/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13933",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13933/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13933/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13933/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13933",
        "id": 2013305649,
        "node_id": "PR_kwDOIPDwls5gfnYk",
        "number": 13933,
        "title": "Added DGraphQAChain for DGraph databases",
        "user": {
            "login": "PoromKamal",
            "id": 62628923,
            "node_id": "MDQ6VXNlcjYyNjI4OTIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/62628923?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/PoromKamal",
            "html_url": "https://github.com/PoromKamal",
            "followers_url": "https://api.github.com/users/PoromKamal/followers",
            "following_url": "https://api.github.com/users/PoromKamal/following{/other_user}",
            "gists_url": "https://api.github.com/users/PoromKamal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/PoromKamal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/PoromKamal/subscriptions",
            "organizations_url": "https://api.github.com/users/PoromKamal/orgs",
            "repos_url": "https://api.github.com/users/PoromKamal/repos",
            "events_url": "https://api.github.com/users/PoromKamal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/PoromKamal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714144,
                "node_id": "LA_kwDOIPDwls8AAAABc3-roA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XXL",
                "name": "size:XXL",
                "color": "5319E7",
                "default": false,
                "description": "This PR changes 1000+ lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T23:26:44Z",
        "updated_at": "2023-11-28T00:54:42Z",
        "closed_at": "2023-11-28T00:37:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13933",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13933",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13933.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13933.patch",
            "merged_at": null
        },
        "body": "**Description:**\r\nAdded DGraphQAChain, a question answering chain for DGraph, a GraphQL powered database, extending LangChain's outreach to DGraph clients, and the DGraph community overall.\r\n\r\nThis pull request seamlessly integrates DGraph and DGraphQAChain, offering functionality similar to the other graph database integrations. Noteworthy differentiators include the introduction of an \"experimental_dql_syntax_injection\" flag. When activated, this feature injects text extracted from the DGraph Query Syntax guidelines page, providing valuable context to enhance the performance of less proficient Language Models and increase the likelihood of generating valid queries.\r\n\r\n**issue**\r\nhttps://github.com/langchain-ai/langchain/issues/11533\r\n\r\n**Dependencies:**\r\n[pydgraph](https://pypi.org/project/pydgraph/1.0.0a2/)\r\n\r\n**Tag maintainer:**\r\n@baskaryan ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13933/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13933/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13932",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13932/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13932/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13932/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13932",
        "id": 2013303960,
        "node_id": "PR_kwDOIPDwls5gfnAl",
        "number": 13932,
        "title": "Make common utils public",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700892,
                "node_id": "LA_kwDOIPDwls8AAAABUpid3A",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:refactor",
                "name": "auto:refactor",
                "color": "D4C5F9",
                "default": false,
                "description": "A large refactor of a feature(s) or restructuring of many files"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T23:25:07Z",
        "updated_at": "2023-11-27T23:34:47Z",
        "closed_at": "2023-11-27T23:34:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13932",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13932",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13932.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13932.patch",
            "merged_at": "2023-11-27T23:34:46Z"
        },
        "body": "Needed for splitting out packages",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13932/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13932/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13931",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13931/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13931/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13931/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13931",
        "id": 2013215135,
        "node_id": "I_kwDOIPDwls53_zmf",
        "number": 13931,
        "title": "Issue: create_sql_agent omits and limits actual information retrieved from SQL tables",
        "user": {
            "login": "hamzaawan99",
            "id": 61236622,
            "node_id": "MDQ6VXNlcjYxMjM2NjIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/61236622?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hamzaawan99",
            "html_url": "https://github.com/hamzaawan99",
            "followers_url": "https://api.github.com/users/hamzaawan99/followers",
            "following_url": "https://api.github.com/users/hamzaawan99/following{/other_user}",
            "gists_url": "https://api.github.com/users/hamzaawan99/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hamzaawan99/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hamzaawan99/subscriptions",
            "organizations_url": "https://api.github.com/users/hamzaawan99/orgs",
            "repos_url": "https://api.github.com/users/hamzaawan99/repos",
            "events_url": "https://api.github.com/users/hamzaawan99/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hamzaawan99/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-27T22:16:47Z",
        "updated_at": "2023-12-05T13:49:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nWhen utilizing the create_sql_agent module by LangChain to interact with a SQL database and generate SQL queries from natural language, I've encountered an issue with the responses. Currently, when I execute queries, the SQL Agent responds with placeholder information, citing security reasons for omitting the actual data. However, for my use case, it is crucial to receive the real information retrieved from the SQL database tables.\r\n\r\nAlso, it limits the information as well even with `top_k=50`. The database return 50 records but in the output it only shows 10-12 with the following output: Please note that this is a partial list. There are more ...\r\n\r\nlangchain == 0.0.313\r\nlangchain-experimental == 0.0.32\r\n\r\n```\r\ndbmssql = SQLDatabase.from_uri(\r\n        connection_url,\r\n        include_tables=[\r\n            \"table_1\",\r\n            \"table_2\",\r\n            \"table_3\",\r\n            \"table_4\",\r\n        ],\r\n        view_support=False\r\n    )\r\n\r\nchat_llm = ChatOpenAI(\r\n    model=\"gpt-4\",\r\n    temperature=0,\r\n    verbose=True,\r\n    openai_api_key=openai_api_key,\r\n    request_timeout=600\r\n)\r\n\r\ndef create_mssql_db_agent(dbmssql):\r\n\r\n    few_shot_docs = [\r\n        Document(page_content=question, metadata={\r\n            \"sql_query\": few_shots[question]})\r\n        for question in few_shots.keys()\r\n    ]\r\n    vector_db = FAISS.from_documents(few_shot_docs, embeddings)\r\n    retriever = vector_db.as_retriever()\r\n\r\n    tool_description = \"\"\"\r\n    This tool will help you understand similar examples to adapt them to the user question.\r\n    Input to this tool should be the user question.\r\n    \"\"\"\r\n\r\n    retriever_tool = create_retriever_tool(\r\n        retriever, name=\"sql_get_similar_examples\", description=tool_description\r\n    )\r\n    custom_tool_list = [retriever_tool]\r\n\r\n    custom_suffix = \"\"\"\r\n    I should first get the similar examples I know.\r\n    If the examples are enough to construct the query, I can build it.\r\n    Otherwise, I can then look at the tables in the database to see what I can query.\r\n    Then I should query the schema of the most relevant tables\r\n    \"\"\"\r\n\r\n    agent = create_sql_agent(\r\n        agent_executor_kwargs={\"return_intermediate_steps\": True},\r\n        llm=chat_llm,\r\n        toolkit=SQLDatabaseToolkit(db=dbmssql, llm=chat_llm),\r\n        verbose=True,\r\n        agent_type=AgentType.OPENAI_FUNCTIONS,\r\n        extra_tools=custom_tool_list,\r\n        suffix=custom_suffix,\r\n        top_k=50,\r\n        # return_intermediate_steps=True\r\n    )\r\n    return agent\r\n```\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13931/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13931/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13930",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13930/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13930/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13930/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13930",
        "id": 2013152823,
        "node_id": "PR_kwDOIPDwls5gfFJF",
        "number": 13930,
        "title": "Update prompt injection model",
        "user": {
            "login": "asofter",
            "id": 1751809,
            "node_id": "MDQ6VXNlcjE3NTE4MDk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1751809?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/asofter",
            "html_url": "https://github.com/asofter",
            "followers_url": "https://api.github.com/users/asofter/followers",
            "following_url": "https://api.github.com/users/asofter/following{/other_user}",
            "gists_url": "https://api.github.com/users/asofter/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/asofter/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/asofter/subscriptions",
            "organizations_url": "https://api.github.com/users/asofter/orgs",
            "repos_url": "https://api.github.com/users/asofter/repos",
            "events_url": "https://api.github.com/users/asofter/events{/privacy}",
            "received_events_url": "https://api.github.com/users/asofter/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-27T21:40:55Z",
        "updated_at": "2023-11-27T22:56:53Z",
        "closed_at": "2023-11-27T22:56:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13930",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13930",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13930.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13930.patch",
            "merged_at": "2023-11-27T22:56:53Z"
        },
        "body": "  - **Description:** Existing model used for Prompt Injection is quite outdated but we fine-tuned and open-source a new model based on the same model deberta-v3-base from Microsoft - [laiyer/deberta-v3-base-prompt-injection](https://huggingface.co/laiyer/deberta-v3-base-prompt-injection). It supports more up-to-date injections and less prone to false-positives.\r\n  - **Dependencies:** No\r\n  - **Tag maintainer:** -\r\n  - **Twitter handle:** @alex_yaremchuk\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13930/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13930/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13929",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13929/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13929/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13929/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13929",
        "id": 2012847820,
        "node_id": "I_kwDOIPDwls53-Z7M",
        "number": 13929,
        "title": "Allow intercepting agents' final answers and reporting feedback to them",
        "user": {
            "login": "syedmoizurrehman",
            "id": 17818950,
            "node_id": "MDQ6VXNlcjE3ODE4OTUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/17818950?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/syedmoizurrehman",
            "html_url": "https://github.com/syedmoizurrehman",
            "followers_url": "https://api.github.com/users/syedmoizurrehman/followers",
            "following_url": "https://api.github.com/users/syedmoizurrehman/following{/other_user}",
            "gists_url": "https://api.github.com/users/syedmoizurrehman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/syedmoizurrehman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/syedmoizurrehman/subscriptions",
            "organizations_url": "https://api.github.com/users/syedmoizurrehman/orgs",
            "repos_url": "https://api.github.com/users/syedmoizurrehman/repos",
            "events_url": "https://api.github.com/users/syedmoizurrehman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/syedmoizurrehman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-27T18:23:38Z",
        "updated_at": "2023-12-01T02:39:23Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\nAllow intercepting agents' final answers and reporting any feedback on the final answers to the agents without ending the agent execution chain.\r\n\r\nThis will enable users to, for example, run validations on the final answer (e.g. whether the answer contains some keywords) or agent's state (whether agent has used a particular tool) and report issues to the agent so that it can fix the problems before ending the chain.\r\n\r\n### Motivation\r\n\r\nToday, we don't have a way to run an analysis on final answers and report problems (if any) to the agents so that they can fix the problems without losing the thoughts and observations of the current chain (if there's a way to achieve that today, please feel free to point me to it and close this issue). This feature will allow self-correction of final answers, further enhancing the capabilities of agents.\r\n\r\nSome use cases I have in mind include\r\n1. Validate the final answer to ensure that it conforms to some instructions, e.g. by making an LLM call.\r\n2. Make sure the agent has used a set of tools to come up with the answer.\r\n3. Apply some rules on the answer to determine whether answer is correct or not, e.g. whether the answer contains certain keywords.\r\n\r\n### Your contribution\r\n\r\nI'm not able to contribute currently, however, I might be able to pick this up in coming weeks if it seems useful to others as well.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13929/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13929/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13928",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13928/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13928/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13928/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13928",
        "id": 2012833707,
        "node_id": "PR_kwDOIPDwls5gd-51",
        "number": 13928,
        "title": "Adding `infinity` embedding integration. ",
        "user": {
            "login": "michaelfeil",
            "id": 63565275,
            "node_id": "MDQ6VXNlcjYzNTY1Mjc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/63565275?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/michaelfeil",
            "html_url": "https://github.com/michaelfeil",
            "followers_url": "https://api.github.com/users/michaelfeil/followers",
            "following_url": "https://api.github.com/users/michaelfeil/following{/other_user}",
            "gists_url": "https://api.github.com/users/michaelfeil/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/michaelfeil/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/michaelfeil/subscriptions",
            "organizations_url": "https://api.github.com/users/michaelfeil/orgs",
            "repos_url": "https://api.github.com/users/michaelfeil/repos",
            "events_url": "https://api.github.com/users/michaelfeil/events{/privacy}",
            "received_events_url": "https://api.github.com/users/michaelfeil/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5510857403,
                "node_id": "LA_kwDOIPDwls8AAAABSHkCuw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20documentation",
                "name": "needs documentation",
                "color": "DCAAC0",
                "default": false,
                "description": "PR needs to be updated with documentation"
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714130,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rkg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XL",
                "name": "size:XL",
                "color": "D4C5F9",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-27T18:14:03Z",
        "updated_at": "2023-11-28T00:43:53Z",
        "closed_at": "2023-11-28T00:43:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13928",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13928",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13928.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13928.patch",
            "merged_at": "2023-11-28T00:43:47Z"
        },
        "body": "This adds integation to https://github.com/michaelfeil/infinity. Users requested it in https://github.com/michaelfeil/infinity/issues/36 @saatvikshah\r\n\r\nFollows my implementation of gradient.ai.\r\n\r\nFeedback 1: Well done -  I love your CI / repo / poetry setup - I adapted a lot in https://github.com/michaelfeil/infinity.\r\nFeedback 2: Not so good: The openai integration contains to much reverse engineering - in general projects such as michaelfeil/infinity and huggingface/text-embeddings-inference are compatible to the `pip install openai` package. \r\n\r\nReverse engineering like this one is really hindering the use for me:\r\nhttps://github.com/langchain-ai/langchain/blob/8e88ba16a88affc272da4bb99bd515b714781179/libs/langchain/langchain/embeddings/openai.py#L347\r\nhttps://github.com/langchain-ai/langchain/blob/8e88ba16a88affc272da4bb99bd515b714781179/libs/langchain/langchain/embeddings/openai.py#L351 - it is about preventing 3rd party providers to use the same url + uses interfaces of openai, that are not publically documented. \r\n\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13928/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13928/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13927",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13927/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13927/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13927/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13927",
        "id": 2012817515,
        "node_id": "PR_kwDOIPDwls5gd7ag",
        "number": 13927,
        "title": "Document Runnable Binding",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-27T18:04:52Z",
        "updated_at": "2023-11-27T18:21:28Z",
        "closed_at": "2023-11-27T18:21:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13927",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13927",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13927.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13927.patch",
            "merged_at": "2023-11-27T18:21:27Z"
        },
        "body": "Document runnable binding\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13927/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13927/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13926",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13926/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13926/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13926/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13926",
        "id": 2012783290,
        "node_id": "PR_kwDOIPDwls5gdz7u",
        "number": 13926,
        "title": "RELEASE: 0.0.341",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T17:42:47Z",
        "updated_at": "2023-11-27T17:51:14Z",
        "closed_at": "2023-11-27T17:51:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13926",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13926",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13926.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13926.patch",
            "merged_at": "2023-11-27T17:51:13Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13926/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13926/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13924",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13924/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13924/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13924/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13924",
        "id": 2012745465,
        "node_id": "I_kwDOIPDwls53-A75",
        "number": 13924,
        "title": "Filtering Issue with ConversationRetrievalChain",
        "user": {
            "login": "akash130701",
            "id": 92721700,
            "node_id": "U_kgDOBYbSJA",
            "avatar_url": "https://avatars.githubusercontent.com/u/92721700?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akash130701",
            "html_url": "https://github.com/akash130701",
            "followers_url": "https://api.github.com/users/akash130701/followers",
            "following_url": "https://api.github.com/users/akash130701/following{/other_user}",
            "gists_url": "https://api.github.com/users/akash130701/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akash130701/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akash130701/subscriptions",
            "organizations_url": "https://api.github.com/users/akash130701/orgs",
            "repos_url": "https://api.github.com/users/akash130701/repos",
            "events_url": "https://api.github.com/users/akash130701/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akash130701/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-27T17:19:53Z",
        "updated_at": "2023-11-27T17:37:39Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Hi everyone,\r\n\r\nI'm trying to do something and I haven\u00b4t found enough information on the internet to make it work properly with Langchain. Here it is:\r\n\r\nI want to develop a QA chat using pdfs as knowledge source, using as relevant documents the ones corresponding to a certain pdf that the user will choose with a select box. To achieve that:\r\n\r\n1. I've built a Azure Search vector store in which all the embeddings of different documents are stored.\r\n\r\nEach document's metadata looks something like this: \r\n{\r\n  \"@odata.context\": \"https://blublu.search.windows.net/indexes('embeddings')/$metadata#docs(*)\",\r\n  \"@search.nextPageParameters\": {\r\n    \"search\": \"*\",\r\n    \"top\": null,\r\n    \"skip\": 50\r\n  },\r\n  \"value\": [\r\n    {\r\n      \"@search.score\": 1,\r\n      \"id\": \"doc_embeddings_7102233d903cd1ac7475a60c373a716b57bf1586\",\r\n      \"title\": \"https://blahblah.blob.core.windows.net/documents/converted/100.pdf.txt\",\r\n      \"content\": \" Officer | Immediate line manager | Region/Division head or VP of the corresponding vertical | KFSL HR |  | CEO | \\n|Assistant Manager |  | \\n|Manager | CEO.\\nv\",\r\n      \"content_vector\": [\r\n        -0.0014578825,\r\n        -0.0058897766],\r\n      \"tag\": \"\",\r\n      \"metadata\": \"{\\\"source\\\": \\\"[https://ask}\"\r\n    },...}\r\n    \r\n    3.With all this I'm using a ConversationalRetrievalChain to retrieve info from the vector store and using an llm to answer questions entered via prompt:\r\nclass FilteredRetriever:\r\n            def __init__(self, retriever, filter_prefix):\r\n                self.retriever = retriever\r\n                self.filter_prefix = filter_prefix\r\n\r\n            def retrieve(self, *args, **kwargs):\r\n                results = self.retriever.retrieve(*args, **kwargs)\r\n                return [doc for doc in results if doc['value']['title'].startswith(self.filter_prefix)]\r\n\r\n        source='https://blahblah.blob.core.windows.net/documents/converted/100.pdf.txt'\r\n        filtered_retriever = FilteredRetriever(self.vector_store.as_retriever(), source)\r\n        \r\n        chain = ConversationalRetrievalChain(       \r\n            retriever=filtered_retriever,\r\n            question_generator=question_generator,\r\n            combine_docs_chain=doc_chain,\r\n            return_source_documents=True,\r\n            # top_k_docs_for_context= self.k\r\n        )\r\n        \r\n        But this is raising: instance of BaseRetriever expected (type=type_error.arbitrary_type; expected_arbitrary_type=BaseRetriever)\r\n\r\n\r\n\r\n\r\n### Suggestion:\r\n\r\nHave already referred [Filtering retrieval with ConversationalRetrievalChain](https://github.com/langchain-ai/langchain/issues/7474#top)\r\n#7474",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13924/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13924/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13923",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13923/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13923/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13923/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13923",
        "id": 2012721002,
        "node_id": "I_kwDOIPDwls53969q",
        "number": 13923,
        "title": "-",
        "user": {
            "login": "akashtcpl",
            "id": 149153685,
            "node_id": "U_kgDOCOPnlQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/149153685?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akashtcpl",
            "html_url": "https://github.com/akashtcpl",
            "followers_url": "https://api.github.com/users/akashtcpl/followers",
            "following_url": "https://api.github.com/users/akashtcpl/following{/other_user}",
            "gists_url": "https://api.github.com/users/akashtcpl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akashtcpl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akashtcpl/subscriptions",
            "organizations_url": "https://api.github.com/users/akashtcpl/orgs",
            "repos_url": "https://api.github.com/users/akashtcpl/repos",
            "events_url": "https://api.github.com/users/akashtcpl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akashtcpl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T17:04:38Z",
        "updated_at": "2023-11-28T05:59:31Z",
        "closed_at": "2023-11-28T05:59:31Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "-",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13923/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13923/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13922",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13922/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13922/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13922/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13922",
        "id": 2012718979,
        "node_id": "PR_kwDOIPDwls5gdl4I",
        "number": 13922,
        "title": "Update root poetry lock with core",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700883,
                "node_id": "LA_kwDOIPDwls8AAAABUpid0w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:nit",
                "name": "auto:nit",
                "color": "FEF2C0",
                "default": false,
                "description": "Small modifications/deletions, fixes, deps or improvements to existing code or docs"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T17:03:27Z",
        "updated_at": "2023-11-27T17:30:46Z",
        "closed_at": "2023-11-27T17:30:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13922",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13922",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13922.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13922.patch",
            "merged_at": "2023-11-27T17:30:45Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13922/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13922/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13921",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13921/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13921/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13921/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13921",
        "id": 2012689762,
        "node_id": "PR_kwDOIPDwls5gdfi0",
        "number": 13921,
        "title": "Add rag google sensitive data protection template",
        "user": {
            "login": "juan-calvo-datatonic",
            "id": 82172964,
            "node_id": "MDQ6VXNlcjgyMTcyOTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/82172964?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juan-calvo-datatonic",
            "html_url": "https://github.com/juan-calvo-datatonic",
            "followers_url": "https://api.github.com/users/juan-calvo-datatonic/followers",
            "following_url": "https://api.github.com/users/juan-calvo-datatonic/following{/other_user}",
            "gists_url": "https://api.github.com/users/juan-calvo-datatonic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juan-calvo-datatonic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juan-calvo-datatonic/subscriptions",
            "organizations_url": "https://api.github.com/users/juan-calvo-datatonic/orgs",
            "repos_url": "https://api.github.com/users/juan-calvo-datatonic/repos",
            "events_url": "https://api.github.com/users/juan-calvo-datatonic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juan-calvo-datatonic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714144,
                "node_id": "LA_kwDOIPDwls8AAAABc3-roA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XXL",
                "name": "size:XXL",
                "color": "5319E7",
                "default": false,
                "description": "This PR changes 1000+ lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T16:46:41Z",
        "updated_at": "2023-11-28T23:15:59Z",
        "closed_at": "2023-11-28T23:15:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13921",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13921",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13921.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13921.patch",
            "merged_at": "2023-11-28T23:15:58Z"
        },
        "body": "This is a template demonstrating how to utilize Google Sensitive Data Protection in conjunction with ChatVertexAI(). Tagging you @efriis  as you reviewed my last template. :) Thanks!\r\n\r\nProof of successful execution: \r\n![image](https://github.com/langchain-ai/langchain/assets/82172964/e4d678aa-85c8-482b-b09d-81fe7e912dd4)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13921/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13921/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13920",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13920/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13920/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13920/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13920",
        "id": 2012673073,
        "node_id": "I_kwDOIPDwls539vQx",
        "number": 13920,
        "title": "Link to URL to load product details",
        "user": {
            "login": "yazanrisheh",
            "id": 99576727,
            "node_id": "U_kgDOBe9rlw",
            "avatar_url": "https://avatars.githubusercontent.com/u/99576727?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yazanrisheh",
            "html_url": "https://github.com/yazanrisheh",
            "followers_url": "https://api.github.com/users/yazanrisheh/followers",
            "following_url": "https://api.github.com/users/yazanrisheh/following{/other_user}",
            "gists_url": "https://api.github.com/users/yazanrisheh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yazanrisheh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yazanrisheh/subscriptions",
            "organizations_url": "https://api.github.com/users/yazanrisheh/orgs",
            "repos_url": "https://api.github.com/users/yazanrisheh/repos",
            "events_url": "https://api.github.com/users/yazanrisheh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yazanrisheh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-11-27T16:38:20Z",
        "updated_at": "2023-11-29T10:12:18Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "@dosu-bot\r\n\r\nI have a project where I need to extract product details from product links online. What is the best url loader for this use case?\r\n\r\nAlso, for the previous links that I already appended to a csv file called \"Lalal\". How can I create embeddings only for the new URL link that I will extract so that I dont have to embed the entire document every single time.\r\n\r\nPlease write the code for me in python.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13920/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13920/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13919",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13919/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13919/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13919/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13919",
        "id": 2012634605,
        "node_id": "PR_kwDOIPDwls5gdTfY",
        "number": 13919,
        "title": "Update azure_cosmos_db.py",
        "user": {
            "login": "esoler-sage",
            "id": 48916514,
            "node_id": "MDQ6VXNlcjQ4OTE2NTE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/48916514?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esoler-sage",
            "html_url": "https://github.com/esoler-sage",
            "followers_url": "https://api.github.com/users/esoler-sage/followers",
            "following_url": "https://api.github.com/users/esoler-sage/following{/other_user}",
            "gists_url": "https://api.github.com/users/esoler-sage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esoler-sage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esoler-sage/subscriptions",
            "organizations_url": "https://api.github.com/users/esoler-sage/orgs",
            "repos_url": "https://api.github.com/users/esoler-sage/repos",
            "events_url": "https://api.github.com/users/esoler-sage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esoler-sage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-27T16:18:08Z",
        "updated_at": "2023-11-27T20:51:08Z",
        "closed_at": "2023-11-27T20:51:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13919",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13919",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13919.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13919.patch",
            "merged_at": "2023-11-27T20:51:08Z"
        },
        "body": "Description: Implement embedding key parametrisation\r\nIssue: https://github.com/langchain-ai/langchain/issues/13918\r\nDependencies: None\r\nTag maintainer: @hwchase17 @izzymsft\r\nTwitter handle:@MaddogoS\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13919/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13919/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13918",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13918/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13918/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13918/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13918",
        "id": 2012621829,
        "node_id": "I_kwDOIPDwls539iwF",
        "number": 13918,
        "title": "AzureCosmosDBVectorSearch index creation fixes document key",
        "user": {
            "login": "esoler-sage",
            "id": 48916514,
            "node_id": "MDQ6VXNlcjQ4OTE2NTE0",
            "avatar_url": "https://avatars.githubusercontent.com/u/48916514?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/esoler-sage",
            "html_url": "https://github.com/esoler-sage",
            "followers_url": "https://api.github.com/users/esoler-sage/followers",
            "following_url": "https://api.github.com/users/esoler-sage/following{/other_user}",
            "gists_url": "https://api.github.com/users/esoler-sage/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/esoler-sage/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/esoler-sage/subscriptions",
            "organizations_url": "https://api.github.com/users/esoler-sage/orgs",
            "repos_url": "https://api.github.com/users/esoler-sage/repos",
            "events_url": "https://api.github.com/users/esoler-sage/events{/privacy}",
            "received_events_url": "https://api.github.com/users/esoler-sage/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-27T16:11:15Z",
        "updated_at": "2023-11-27T16:26:14Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain all versions\n\n### Who can help?\n\n@hwchase17 @izzymsft \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nInstantiate a new AzureCosmosDBVectorSearch with embeddings key different than vectorContent, and then you get this error\r\n`Similarity index was not found for a vector similarity search query.`\r\n\r\nThis is because embeddings key is parametrised correctly\r\nhttps://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/vectorstores/azure_cosmos_db.py#L75\r\nhttps://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/vectorstores/azure_cosmos_db.py#L92\r\n, but not used on index creation\r\nhttps://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/vectorstores/azure_cosmos_db.py#L224\r\n\r\n\n\n### Expected behavior\n\nThe embedding_key param should be used to create the index properly",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13918/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13918/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13917",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13917/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13917/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13917/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13917",
        "id": 2012614744,
        "node_id": "PR_kwDOIPDwls5gdPKj",
        "number": 13917,
        "title": "fixed VertexAIModelGarden class",
        "user": {
            "login": "lkuligin",
            "id": 11026406,
            "node_id": "MDQ6VXNlcjExMDI2NDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11026406?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lkuligin",
            "html_url": "https://github.com/lkuligin",
            "followers_url": "https://api.github.com/users/lkuligin/followers",
            "following_url": "https://api.github.com/users/lkuligin/following{/other_user}",
            "gists_url": "https://api.github.com/users/lkuligin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lkuligin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lkuligin/subscriptions",
            "organizations_url": "https://api.github.com/users/lkuligin/orgs",
            "repos_url": "https://api.github.com/users/lkuligin/repos",
            "events_url": "https://api.github.com/users/lkuligin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lkuligin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T16:07:27Z",
        "updated_at": "2023-11-27T18:31:54Z",
        "closed_at": "2023-11-27T18:31:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13917",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13917",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13917.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13917.patch",
            "merged_at": "2023-11-27T18:31:54Z"
        },
        "body": "Replace this entire comment with:\r\n  - **Description:** added support for various OSS images from Model Garden\r\n  - **Issue:** #13370\r\n  ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13917/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13917/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13916",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13916/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13916/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13916/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13916",
        "id": 2012607901,
        "node_id": "I_kwDOIPDwls539fWd",
        "number": 13916,
        "title": "Addition of BinaryPyPdf Loader for Langchain Document Loaders",
        "user": {
            "login": "Rajaniraiyn",
            "id": 72294760,
            "node_id": "MDQ6VXNlcjcyMjk0NzYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/72294760?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Rajaniraiyn",
            "html_url": "https://github.com/Rajaniraiyn",
            "followers_url": "https://api.github.com/users/Rajaniraiyn/followers",
            "following_url": "https://api.github.com/users/Rajaniraiyn/following{/other_user}",
            "gists_url": "https://api.github.com/users/Rajaniraiyn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Rajaniraiyn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Rajaniraiyn/subscriptions",
            "organizations_url": "https://api.github.com/users/Rajaniraiyn/orgs",
            "repos_url": "https://api.github.com/users/Rajaniraiyn/repos",
            "events_url": "https://api.github.com/users/Rajaniraiyn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Rajaniraiyn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T16:04:01Z",
        "updated_at": "2023-11-27T16:04:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI propose the addition of a new feature, a BinaryPyPdf loader, to the existing Langchain document loaders. This loader is designed to handle PDF files in a binary format, providing a more efficient and effective way of processing PDF documents within the Langchain project.\n\n### Motivation\n\nAs a Langchain enthusiast, I noticed that the current document loaders lack a dedicated loader for handling PDF files in binary format. This often leads to inefficiencies and limitations when working with PDF documents. The addition of a BinaryPyPdf loader would address this gap and enhance the overall functionality and versatility of the Langchain document loaders.\n\n### Your contribution\n\nI have already developed a BinaryPyPdf loader using `pypdf` that is ready for integration into the Langchain project. I am prepared to submit a PR for this feature, following the guidelines outlined in the [`CONTRIBUTING.MD`](https://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md). I look forward to the opportunity to contribute to the project and enhance its capabilities.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13916/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13916/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13915",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13915/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13915/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13915/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13915",
        "id": 2012495495,
        "node_id": "PR_kwDOIPDwls5gc03i",
        "number": 13915,
        "title": "Update openai.py: Fix the bug where openai_proxy is not effective.",
        "user": {
            "login": "leleboys",
            "id": 148516251,
            "node_id": "U_kgDOCNotmw",
            "avatar_url": "https://avatars.githubusercontent.com/u/148516251?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leleboys",
            "html_url": "https://github.com/leleboys",
            "followers_url": "https://api.github.com/users/leleboys/followers",
            "following_url": "https://api.github.com/users/leleboys/following{/other_user}",
            "gists_url": "https://api.github.com/users/leleboys/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leleboys/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leleboys/subscriptions",
            "organizations_url": "https://api.github.com/users/leleboys/orgs",
            "repos_url": "https://api.github.com/users/leleboys/repos",
            "events_url": "https://api.github.com/users/leleboys/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leleboys/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-27T15:12:21Z",
        "updated_at": "2023-11-27T22:20:47Z",
        "closed_at": "2023-11-27T22:20:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13915",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13915",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13915.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13915.patch",
            "merged_at": null
        },
        "body": "Fix the bug where ChatOpenAI().openai_proxy = HTTP_PROXY is not effective.\r\n\r\nReproduce&Test:\r\n\r\nfrom langchain.chat_models import ChatOpenAI\r\nllm = ChatOpenAI()\r\nllm.openai_proxy = \"http://127.0.0.1:8001\"\r\nllm.predict(\"Hello\")\r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13915/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13915/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13914",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13914/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13914/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13914/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13914",
        "id": 2012479273,
        "node_id": "PR_kwDOIPDwls5gcxSw",
        "number": 13914,
        "title": "docs[patch]: RAG Cookbook example fix",
        "user": {
            "login": "waseemhnyc",
            "id": 16570741,
            "node_id": "MDQ6VXNlcjE2NTcwNzQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/16570741?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/waseemhnyc",
            "html_url": "https://github.com/waseemhnyc",
            "followers_url": "https://api.github.com/users/waseemhnyc/followers",
            "following_url": "https://api.github.com/users/waseemhnyc/following{/other_user}",
            "gists_url": "https://api.github.com/users/waseemhnyc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/waseemhnyc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/waseemhnyc/subscriptions",
            "organizations_url": "https://api.github.com/users/waseemhnyc/orgs",
            "repos_url": "https://api.github.com/users/waseemhnyc/repos",
            "events_url": "https://api.github.com/users/waseemhnyc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/waseemhnyc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-27T15:05:11Z",
        "updated_at": "2023-11-29T01:37:04Z",
        "closed_at": "2023-11-29T01:37:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13914",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13914",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13914.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13914.patch",
            "merged_at": "2023-11-29T01:37:04Z"
        },
        "body": "### Description:\r\nHey \ud83d\udc4b\ud83c\udffd  this is a small docs example fix. Hoping it helps future developers  who are working with Langchain.\r\n\r\n### Problem:\r\nTake a look at the original example code. You were not able to get the `dialogue_turn[0]` while it was a tuple.\r\n\r\nOriginal code:\r\n```python\r\ndef _format_chat_history(chat_history: List[Tuple]) -> str:\r\n    buffer = \"\"\r\n    for dialogue_turn in chat_history:\r\n        human = \"Human: \" + dialogue_turn[0]\r\n        ai = \"Assistant: \" + dialogue_turn[1]\r\n        buffer += \"\\n\" + \"\\n\".join([human, ai])\r\n    return buffer\r\n```\r\nIn the original code you were getting this error:\r\n```bash\r\n    human = \"Human: \" + dialogue_turn[0].content\r\n                        ~~~~~~~~~~~~~^^^\r\nTypeError: 'HumanMessage' object is not subscriptable\r\n```\r\n### Solution:\r\nThe fix is to just for loop over the chat history and look to see if its a human or ai message and add it to the buffer.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13914/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13914/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13913",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13913/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13913/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13913/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13913",
        "id": 2012448718,
        "node_id": "PR_kwDOIPDwls5gcqrP",
        "number": 13913,
        "title": "Add Cypher template diagrams",
        "user": {
            "login": "tomasonjo",
            "id": 19948365,
            "node_id": "MDQ6VXNlcjE5OTQ4MzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/19948365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomasonjo",
            "html_url": "https://github.com/tomasonjo",
            "followers_url": "https://api.github.com/users/tomasonjo/followers",
            "following_url": "https://api.github.com/users/tomasonjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomasonjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomasonjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomasonjo/subscriptions",
            "organizations_url": "https://api.github.com/users/tomasonjo/orgs",
            "repos_url": "https://api.github.com/users/tomasonjo/repos",
            "events_url": "https://api.github.com/users/tomasonjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomasonjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "efriis",
            "id": 9557659,
            "node_id": "MDQ6VXNlcjk1NTc2NTk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/efriis",
            "html_url": "https://github.com/efriis",
            "followers_url": "https://api.github.com/users/efriis/followers",
            "following_url": "https://api.github.com/users/efriis/following{/other_user}",
            "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
            "organizations_url": "https://api.github.com/users/efriis/orgs",
            "repos_url": "https://api.github.com/users/efriis/repos",
            "events_url": "https://api.github.com/users/efriis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/efriis/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "efriis",
                "id": 9557659,
                "node_id": "MDQ6VXNlcjk1NTc2NTk=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9557659?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/efriis",
                "html_url": "https://github.com/efriis",
                "followers_url": "https://api.github.com/users/efriis/followers",
                "following_url": "https://api.github.com/users/efriis/following{/other_user}",
                "gists_url": "https://api.github.com/users/efriis/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/efriis/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/efriis/subscriptions",
                "organizations_url": "https://api.github.com/users/efriis/orgs",
                "repos_url": "https://api.github.com/users/efriis/repos",
                "events_url": "https://api.github.com/users/efriis/events{/privacy}",
                "received_events_url": "https://api.github.com/users/efriis/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T14:50:38Z",
        "updated_at": "2023-11-27T15:18:51Z",
        "closed_at": "2023-11-27T15:18:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13913",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13913",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13913.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13913.patch",
            "merged_at": "2023-11-27T15:18:51Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13913/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13913/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13912",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13912/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13912/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13912/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13912",
        "id": 2012359254,
        "node_id": "I_kwDOIPDwls538ipW",
        "number": 13912,
        "title": "poetry install --with test issue ",
        "user": {
            "login": "johnlarkin1",
            "id": 18692931,
            "node_id": "MDQ6VXNlcjE4NjkyOTMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/18692931?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/johnlarkin1",
            "html_url": "https://github.com/johnlarkin1",
            "followers_url": "https://api.github.com/users/johnlarkin1/followers",
            "following_url": "https://api.github.com/users/johnlarkin1/following{/other_user}",
            "gists_url": "https://api.github.com/users/johnlarkin1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/johnlarkin1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/johnlarkin1/subscriptions",
            "organizations_url": "https://api.github.com/users/johnlarkin1/orgs",
            "repos_url": "https://api.github.com/users/johnlarkin1/repos",
            "events_url": "https://api.github.com/users/johnlarkin1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/johnlarkin1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-27T14:07:30Z",
        "updated_at": "2023-11-27T23:07:40Z",
        "closed_at": "2023-11-27T23:07:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nYou cannot run `poetry install --with test` on a fresh build: \r\n\r\n```\r\n\u256d\u2500 username@comp ~/path/to/coding\r\n\u2570\u2500\u27a4  cd langchain2\r\nls\r\n\r\n\u256d\u2500username@comp ~/path/to/langchain2 \u2039master\u203a\r\n\u2570\u2500\u27a4  ls\r\nCITATION.cff   Makefile       cookbook       libs           pyproject.toml\r\nLICENSE        README.md      docker         poetry.lock    templates\r\nMIGRATE.md     SECURITY.md    docs           poetry.toml\r\n\r\n\u256d\u2500username@comp ~/path/to/langchain2 \u2039master\u203a\r\n\u2570\u2500\u27a4  poetry install --with test\r\n\r\nCreating virtualenv langchain-monorepo in /path/to/langchain2/.venv\r\nInstalling dependencies from lock file\r\n\r\nPackage operations: 165 installs, 1 update, 0 removals\r\n\r\n  \u2022 Downgrading pip (23.3.1 -> 23.2.1)\r\n  \u2022 Installing attrs (23.1.0)\r\n  \u2022 Installing rpds-py (0.10.3)\r\n  \u2022 Installing referencing (0.30.2)\r\n  \u2022 Installing six (1.16.0)\r\n  \u2022 Installing jsonschema-specifications (2023.7.1)\r\n  \u2022 Installing platformdirs (3.11.0)\r\n  \u2022 Installing python-dateutil (2.8.2)\r\n  \u2022 Installing traitlets (5.11.1)\r\n  \u2022 Installing types-python-dateutil (2.8.19.14)\r\n  \u2022 Installing arrow (1.3.0)\r\n  \u2022 Installing entrypoints (0.4)\r\n  \u2022 Installing fastjsonschema (2.18.1)\r\n  \u2022 Installing jsonschema (4.19.1)\r\n  \u2022 Installing jupyter-core (5.3.2)\r\n  \u2022 Installing nest-asyncio (1.5.8)\r\n  \u2022 Installing pycparser (2.21)\r\n  \u2022 Installing pyzmq (25.1.1)\r\n  \u2022 Installing tornado (6.3.3)\r\n  \u2022 Installing cffi (1.16.0)\r\n  \u2022 Installing fqdn (1.5.1)\r\n  \u2022 Installing idna (3.4)\r\n  \u2022 Installing isoduration (20.11.0)\r\n  \u2022 Installing jsonpointer (2.4)\r\n  \u2022 Installing jupyter-client (7.4.9)\r\n  \u2022 Installing markupsafe (2.1.3)\r\n  \u2022 Installing nbformat (5.9.2)\r\n  \u2022 Installing ptyprocess (0.7.0)\r\n  \u2022 Installing rfc3339-validator (0.1.4)\r\n  \u2022 Installing rfc3986-validator (0.1.1)\r\n  \u2022 Installing soupsieve (2.5)\r\n  \u2022 Installing uri-template (1.3.0)\r\n  \u2022 Installing webcolors (1.13)\r\n  \u2022 Installing webencodings (0.5.1)\r\n  \u2022 Installing argon2-cffi-bindings (21.2.0): Pending...\r\n  \u2022 Installing argon2-cffi-bindings (21.2.0)\r\n  \u2022 Installing asttokens (2.4.0)\r\n  \u2022 Installing beautifulsoup4 (4.12.2)\r\n  \u2022 Installing bleach (6.0.0)\r\n  \u2022 Installing defusedxml (0.7.1)\r\n  \u2022 Installing executing (2.0.0)\r\n  \u2022 Installing jinja2 (3.1.2)\r\n  \u2022 Installing jupyterlab-pygments (0.2.2)\r\n  \u2022 Installing mistune (3.0.2)\r\n  \u2022 Installing nbclient (0.7.4)\r\n  \u2022 Installing packaging (23.2)\r\n  \u2022 Installing pandocfilters (1.5.0)\r\n  \u2022 Installing parso (0.8.3)\r\n  \u2022 Installing pure-eval (0.2.2)\r\n  \u2022 Installing pygments (2.16.1)\r\n  \u2022 Installing python-json-logger (2.0.7)\r\n  \u2022 Installing pyyaml (6.0.1)\r\n  \u2022 Installing sniffio (1.3.0)\r\n  \u2022 Installing terminado (0.17.1)\r\n  \u2022 Installing tinycss2 (1.2.1)\r\n  \u2022 Installing wcwidth (0.2.8)\r\n  \u2022 Installing anyio (3.7.1): Installing...\r\n  \u2022 Installing appnope (0.1.3): Installing...\r\n  \u2022 Installing anyio (3.7.1)\r\n  \u2022 Installing appnope (0.1.3)\r\n  \u2022 Installing argon2-cffi (23.1.0)\r\n  \u2022 Installing backcall (0.2.0)\r\n  \u2022 Installing certifi (2023.7.22)\r\n  \u2022 Installing charset-normalizer (3.3.0)\r\n  \u2022 Installing decorator (5.1.1)\r\n  \u2022 Installing jedi (0.19.1)\r\n  \u2022 Installing jupyter-events (0.7.0)\r\n  \u2022 Installing jupyter-server-terminals (0.4.4)\r\n  \u2022 Installing matplotlib-inline (0.1.6)\r\n  \u2022 Installing nbconvert (7.8.0)\r\n  \u2022 Installing overrides (7.4.0)\r\n  \u2022 Installing pexpect (4.8.0)\r\n  \u2022 Installing pickleshare (0.7.5)\r\n  \u2022 Installing prometheus-client (0.17.1)\r\n  \u2022 Installing prompt-toolkit (3.0.39)\r\n  \u2022 Installing send2trash (1.8.2)\r\n  \u2022 Installing stack-data (0.6.3)\r\n  \u2022 Installing urllib3 (2.0.6)\r\n  \u2022 Installing websocket-client (1.6.3)\r\n  \u2022 Installing babel (2.13.0)\r\n  \u2022 Installing comm (0.1.4)\r\n  \u2022 Installing debugpy (1.8.0)\r\n  \u2022 Installing ipython (8.12.3)\r\n  \u2022 Installing json5 (0.9.14)\r\n  \u2022 Installing jupyter-server (2.7.3)\r\n  \u2022 Installing psutil (5.9.5)\r\n  \u2022 Installing requests (2.31.0)\r\n  \u2022 Installing async-lru (2.0.4)\r\n  \u2022 Installing ipykernel (6.25.2)\r\n  \u2022 Installing jupyter-lsp (2.2.0)\r\n  \u2022 Installing jupyterlab-server (2.25.0)\r\n  \u2022 Installing notebook-shim (0.2.3)\r\n  \u2022 Installing fastcore (1.4.2)\r\n  \u2022 Installing ipython-genutils (0.2.0)\r\n  \u2022 Installing jupyterlab (4.0.6)\r\n  \u2022 Installing jupyterlab-widgets (3.0.9)\r\n  \u2022 Installing mdurl (0.1.2)\r\n  \u2022 Installing qtpy (2.4.0)\r\n  \u2022 Installing typing-extensions (4.8.0)\r\n  \u2022 Installing widgetsnbextension (4.0.9)\r\n  \u2022 Installing alabaster (0.7.13): Installing...\r\n  \u2022 Installing annotated-types (0.5.0): Pending...\r\n  \u2022 Installing alabaster (0.7.13)\r\n  \u2022 Installing annotated-types (0.5.0)\r\n  \u2022 Installing docutils (0.17.1)\r\n  \u2022 Installing frozenlist (1.4.0)\r\n  \u2022 Installing ghapi (0.1.22)\r\n  \u2022 Installing imagesize (1.4.1)\r\n  \u2022 Installing ipywidgets (8.1.1)\r\n  \u2022 Installing jupyter-console (6.6.3)\r\n  \u2022 Installing markdown-it-py (2.2.0)\r\n  \u2022 Installing multidict (6.0.4)\r\n  \u2022 Installing mypy-extensions (1.0.0)\r\n  \u2022 Installing notebook (7.0.4)\r\n  \u2022 Installing pydantic-core (2.10.1)\r\n  \u2022 Installing qtconsole (5.4.4)\r\n  \u2022 Installing sphinxcontrib-applehelp (1.0.4)\r\n  \u2022 Installing snowballstemmer (2.2.0)\r\n  \u2022 Installing sphinxcontrib-devhelp (1.0.2)\r\n  \u2022 Installing sphinxcontrib-htmlhelp (2.0.1)\r\n  \u2022 Installing sphinxcontrib-jsmath (1.0.1)\r\n  \u2022 Installing sphinxcontrib-qthelp (1.0.3)\r\n  \u2022 Installing sphinxcontrib-serializinghtml (1.1.5)\r\n  \u2022 Installing zipp (3.17.0)\r\n  \u2022 Installing aiosignal (1.3.1): Installing...\r\n  \u2022 Installing async-timeout (4.0.3): Pending...\r\n  \u2022 Installing aiosignal (1.3.1)\r\n  \u2022 Installing async-timeout (4.0.3)\r\n  \u2022 Installing click (8.1.7)\r\n  \u2022 Installing fastrelease (0.1.17)\r\n  \u2022 Installing importlib-metadata (6.8.0)\r\n  \u2022 Installing jupyter (1.0.0)\r\n  \u2022 Installing marshmallow (3.20.1)\r\n  \u2022 Installing mdit-py-plugins (0.3.5)\r\n  \u2022 Installing pathspec (0.11.2)\r\n  \u2022 Installing pydantic (2.4.2)\r\n  \u2022 Installing sphinx (4.5.0)\r\n  \u2022 Installing sqlalchemy (2.0.21)\r\n  \u2022 Installing tabulate (0.9.0)\r\n  \u2022 Installing tokenize-rt (5.2.0)\r\n  \u2022 Installing typing-inspect (0.9.0)\r\n  \u2022 Installing yarl (1.9.2)\r\n  \u2022 Installing aiohttp (3.8.5): Failed\r\n\r\n  ChefBuildError\r\n\r\n  Backend subprocess exited when trying to invoke build_wheel\r\n\r\n  *********************\r\n  * Accelerated build *\r\n  *********************\r\n  running bdist_wheel\r\n  running build\r\n  running build_py\r\n  creating build\r\n  creating build/lib.macosx-13-arm64-cpython-312\r\n  creating build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/web_ws.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/worker.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/multipart.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/web_response.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/client_ws.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/test_utils.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/tracing.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/web_exceptions.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/web_middlewares.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/web.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/http_exceptions.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/web_app.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/streams.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/web_protocol.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/log.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/client.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/web_urldispatcher.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/web_request.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/http_websocket.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/client_proto.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/locks.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/__init__.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/web_runner.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/web_server.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/base_protocol.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/payload.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/client_reqrep.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/http.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/web_log.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/resolver.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/formdata.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/payload_streamer.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/web_routedef.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/connector.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/client_exceptions.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/typedefs.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/hdrs.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/web_fileresponse.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/http_writer.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/tcp_helpers.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/helpers.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/http_parser.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/cookiejar.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/pytest_plugin.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/abc.py -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  running egg_info\r\n  writing aiohttp.egg-info/PKG-INFO\r\n  writing dependency_links to aiohttp.egg-info/dependency_links.txt\r\n  writing requirements to aiohttp.egg-info/requires.txt\r\n  writing top-level names to aiohttp.egg-info/top_level.txt\r\n  reading manifest file 'aiohttp.egg-info/SOURCES.txt'\r\n  reading manifest template 'MANIFEST.in'\r\n  warning: no files found matching 'aiohttp' anywhere in distribution\r\n  warning: no previously-included files matching '*.pyc' found anywhere in distribution\r\n  warning: no previously-included files matching '*.pyd' found anywhere in distribution\r\n  warning: no previously-included files matching '*.so' found anywhere in distribution\r\n  warning: no previously-included files matching '*.lib' found anywhere in distribution\r\n  warning: no previously-included files matching '*.dll' found anywhere in distribution\r\n  warning: no previously-included files matching '*.a' found anywhere in distribution\r\n  warning: no previously-included files matching '*.obj' found anywhere in distribution\r\n  warning: no previously-included files found matching 'aiohttp/*.html'\r\n  no previously-included directories found matching 'docs/_build'\r\n  adding license file 'LICENSE.txt'\r\n  writing manifest file 'aiohttp.egg-info/SOURCES.txt'\r\n  copying aiohttp/_cparser.pxd -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/_find_header.pxd -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/_headers.pxi -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/_helpers.pyi -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/_helpers.pyx -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/_http_parser.pyx -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/_http_writer.pyx -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/_websocket.pyx -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  copying aiohttp/py.typed -> build/lib.macosx-13-arm64-cpython-312/aiohttp\r\n  creating build/lib.macosx-13-arm64-cpython-312/aiohttp/.hash\r\n  copying aiohttp/.hash/_cparser.pxd.hash -> build/lib.macosx-13-arm64-cpython-312/aiohttp/.hash\r\n  copying aiohttp/.hash/_find_header.pxd.hash -> build/lib.macosx-13-arm64-cpython-312/aiohttp/.hash\r\n  copying aiohttp/.hash/_helpers.pyi.hash -> build/lib.macosx-13-arm64-cpython-312/aiohttp/.hash\r\n  copying aiohttp/.hash/_helpers.pyx.hash -> build/lib.macosx-13-arm64-cpython-312/aiohttp/.hash\r\n  copying aiohttp/.hash/_http_parser.pyx.hash -> build/lib.macosx-13-arm64-cpython-312/aiohttp/.hash\r\n  copying aiohttp/.hash/_http_writer.pyx.hash -> build/lib.macosx-13-arm64-cpython-312/aiohttp/.hash\r\n  copying aiohttp/.hash/_websocket.pyx.hash -> build/lib.macosx-13-arm64-cpython-312/aiohttp/.hash\r\n  copying aiohttp/.hash/hdrs.py.hash -> build/lib.macosx-13-arm64-cpython-312/aiohttp/.hash\r\n  running build_ext\r\n  building 'aiohttp._websocket' extension\r\n  creating build/temp.macosx-13-arm64-cpython-312\r\n  creating build/temp.macosx-13-arm64-cpython-312/aiohttp\r\n  clang -fno-strict-overflow -Wsign-compare -Wunreachable-code -fno-common -dynamic -DNDEBUG -g -O3 -Wall -isysroot /Library/Developer/CommandLineTools/SDKs/MacOSX13.sdk -I/private/var/folders/z4/nphh3sds4zsckwzc8kcht7h00000gn/T/tmpmjkdtpaa/.venv/include -I/opt/homebrew/opt/python@3.12/Frameworks/Python.framework/Versions/3.12/include/python3.12 -c aiohttp/_websocket.c -o build/temp.macosx-13-arm64-cpython-312/aiohttp/_websocket.o\r\n  aiohttp/_websocket.c:1475:17: warning: 'Py_OptimizeFlag' is deprecated [-Wdeprecated-declarations]\r\n    if (unlikely(!Py_OptimizeFlag)) {\r\n                  ^\r\n  /opt/homebrew/opt/python@3.12/Frameworks/Python.framework/Versions/3.12/include/python3.12/cpython/pydebug.h:13:1: note: 'Py_OptimizeFlag' has been explicitly marked deprecated here\r\n  Py_DEPRECATED(3.12) PyAPI_DATA(int) Py_OptimizeFlag;\r\n  ^\r\n  /opt/homebrew/opt/python@3.12/Frameworks/Python.framework/Versions/3.12/include/python3.12/pyport.h:317:54: note: expanded from macro 'Py_DEPRECATED'\r\n  #define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))\r\n                                                       ^\r\n  aiohttp/_websocket.c:2680:27: warning: 'ma_version_tag' is deprecated [-Wdeprecated-declarations]\r\n      return likely(dict) ? __PYX_GET_DICT_VERSION(dict) : 0;\r\n                            ^\r\n  aiohttp/_websocket.c:1118:65: note: expanded from macro '__PYX_GET_DICT_VERSION'\r\n  #define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)\r\n                                                                  ^\r\n  /opt/homebrew/opt/python@3.12/Frameworks/Python.framework/Versions/3.12/include/python3.12/cpython/dictobject.h:22:5: note: 'ma_version_tag' has been explicitly marked deprecated here\r\n      Py_DEPRECATED(3.12) uint64_t ma_version_tag;\r\n      ^\r\n  /opt/homebrew/opt/python@3.12/Frameworks/Python.framework/Versions/3.12/include/python3.12/pyport.h:317:54: note: expanded from macro 'Py_DEPRECATED'\r\n  #define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))\r\n                                                       ^\r\n  aiohttp/_websocket.c:2692:36: warning: 'ma_version_tag' is deprecated [-Wdeprecated-declarations]\r\n      return (dictptr && *dictptr) ? __PYX_GET_DICT_VERSION(*dictptr) : 0;\r\n                                     ^\r\n  aiohttp/_websocket.c:1118:65: note: expanded from macro '__PYX_GET_DICT_VERSION'\r\n  #define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)\r\n                                                                  ^\r\n  /opt/homebrew/opt/python@3.12/Frameworks/Python.framework/Versions/3.12/include/python3.12/cpython/dictobject.h:22:5: note: 'ma_version_tag' has been explicitly marked deprecated here\r\n      Py_DEPRECATED(3.12) uint64_t ma_version_tag;\r\n      ^\r\n  /opt/homebrew/opt/python@3.12/Frameworks/Python.framework/Versions/3.12/include/python3.12/pyport.h:317:54: note: expanded from macro 'Py_DEPRECATED'\r\n  #define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))\r\n                                                       ^\r\n  aiohttp/_websocket.c:2696:56: warning: 'ma_version_tag' is deprecated [-Wdeprecated-declarations]\r\n      if (unlikely(!dict) || unlikely(tp_dict_version != __PYX_GET_DICT_VERSION(dict)))\r\n                                                         ^\r\n  aiohttp/_websocket.c:1118:65: note: expanded from macro '__PYX_GET_DICT_VERSION'\r\n  #define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)\r\n                                                                  ^\r\n  /opt/homebrew/opt/python@3.12/Frameworks/Python.framework/Versions/3.12/include/python3.12/cpython/dictobject.h:22:5: note: 'ma_version_tag' has been explicitly marked deprecated here\r\n      Py_DEPRECATED(3.12) uint64_t ma_version_tag;\r\n      ^\r\n  /opt/homebrew/opt/python@3.12/Frameworks/Python.framework/Versions/3.12/include/python3.12/pyport.h:317:54: note: expanded from macro 'Py_DEPRECATED'\r\n  #define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))\r\n                                                       ^\r\n  aiohttp/_websocket.c:2741:9: warning: 'ma_version_tag' is deprecated [-Wdeprecated-declarations]\r\n          __PYX_PY_DICT_LOOKUP_IF_MODIFIED(\r\n          ^\r\n  aiohttp/_websocket.c:1125:16: note: expanded from macro '__PYX_PY_DICT_LOOKUP_IF_MODIFIED'\r\n      if (likely(__PYX_GET_DICT_VERSION(DICT) == __pyx_dict_version)) {\\\r\n                 ^\r\n  aiohttp/_websocket.c:1118:65: note: expanded from macro '__PYX_GET_DICT_VERSION'\r\n  #define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)\r\n                                                                  ^\r\n  /opt/homebrew/opt/python@3.12/Frameworks/Python.framework/Versions/3.12/include/python3.12/cpython/dictobject.h:22:5: note: 'ma_version_tag' has been explicitly marked deprecated here\r\n      Py_DEPRECATED(3.12) uint64_t ma_version_tag;\r\n      ^\r\n  /opt/homebrew/opt/python@3.12/Frameworks/Python.framework/Versions/3.12/include/python3.12/pyport.h:317:54: note: expanded from macro 'Py_DEPRECATED'\r\n  #define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))\r\n                                                       ^\r\n  aiohttp/_websocket.c:2741:9: warning: 'ma_version_tag' is deprecated [-Wdeprecated-declarations]\r\n          __PYX_PY_DICT_LOOKUP_IF_MODIFIED(\r\n          ^\r\n  aiohttp/_websocket.c:1129:30: note: expanded from macro '__PYX_PY_DICT_LOOKUP_IF_MODIFIED'\r\n          __pyx_dict_version = __PYX_GET_DICT_VERSION(DICT);\\\r\n                               ^\r\n  aiohttp/_websocket.c:1118:65: note: expanded from macro '__PYX_GET_DICT_VERSION'\r\n  #define __PYX_GET_DICT_VERSION(dict)  (((PyDictObject*)(dict))->ma_version_tag)\r\n                                                                  ^\r\n  /opt/homebrew/opt/python@3.12/Frameworks/Python.framework/Versions/3.12/include/python3.12/cpython/dictobject.h:22:5: note: 'ma_version_tag' has been explicitly marked deprecated here\r\n      Py_DEPRECATED(3.12) uint64_t ma_version_tag;\r\n      ^\r\n  /opt/homebrew/opt/python@3.12/Frameworks/Python.framework/Versions/3.12/include/python3.12/pyport.h:317:54: note: expanded from macro 'Py_DEPRECATED'\r\n  #define Py_DEPRECATED(VERSION_UNUSED) __attribute__((__deprecated__))\r\n                                                       ^\r\n  aiohttp/_websocket.c:3042:55: error: no member named 'ob_digit' in 'struct _longobject'\r\n              const digit* digits = ((PyLongObject*)x)->ob_digit;\r\n                                    ~~~~~~~~~~~~~~~~~~  ^\r\n  aiohttp/_websocket.c:3097:55: error: no member named 'ob_digit' in 'struct _longobject'\r\n              const digit* digits = ((PyLongObject*)x)->ob_digit;\r\n                                    ~~~~~~~~~~~~~~~~~~  ^\r\n  aiohttp/_websocket.c:3238:55: error: no member named 'ob_digit' in 'struct _longobject'\r\n              const digit* digits = ((PyLongObject*)x)->ob_digit;\r\n                                    ~~~~~~~~~~~~~~~~~~  ^\r\n  aiohttp/_websocket.c:3293:55: error: no member named 'ob_digit' in 'struct _longobject'\r\n              const digit* digits = ((PyLongObject*)x)->ob_digit;\r\n                                    ~~~~~~~~~~~~~~~~~~  ^\r\n  aiohttp/_websocket.c:3744:47: error: no member named 'ob_digit' in 'struct _longobject'\r\n      const digit* digits = ((PyLongObject*)b)->ob_digit;\r\n                            ~~~~~~~~~~~~~~~~~~  ^\r\n  6 warnings and 5 errors generated.\r\n  error: command '/usr/bin/clang' failed with exit code 1\r\n\r\n\r\n  at ~/.local/pipx/venvs/poetry/lib/python3.12/site-packages/poetry/installation/chef.py:164 in _prepare\r\n      160\u2502\r\n      161\u2502                 error = ChefBuildError(\"\\n\\n\".join(message_parts))\r\n      162\u2502\r\n      163\u2502             if error is not None:\r\n    \u2192 164\u2502                 raise error from None\r\n      165\u2502\r\n      166\u2502             return path\r\n      167\u2502\r\n      168\u2502     def _prepare_sdist(self, archive: Path, destination: Path | None = None) -> Path:\r\n\r\nNote: This error originates from the build backend, and is likely not a problem with poetry but with aiohttp (3.8.5) not supporting PEP 517 builds. You can verify this by running 'pip wheel --no-cache-dir --use-pep517 \"aiohttp (==3.8.5)\"'.\r\n\r\n  \u2022 Installing black (23.10.1)\r\n  \u2022 Installing colorama (0.4.6)\r\n  \u2022 Installing dataclasses-json (0.6.1)\r\n  \u2022 Installing dnspython (2.4.2)\r\n  \u2022 Installing jsonpatch (1.33)\r\n  \u2022 Installing jupyter-cache (0.6.1)\r\n  \u2022 Installing langsmith (0.0.63)\r\n  \u2022 Installing livereload (2.6.3)\r\n  \u2022 Installing myst-parser (0.18.1)\r\n  \u2022 Installing nbdev (1.2.0)\r\n  \u2022 Installing numpy (1.24.4): Failed\r\n\r\n  ChefBuildError\r\n\r\n  Backend 'setuptools.build_meta:__legacy__' is not available.\r\n\r\n  Traceback (most recent call last):\r\n    File \"/Users/username/.local/pipx/venvs/poetry/lib/python3.12/site-packages/pyproject_hooks/_in_process/_in_process.py\", line 77, in _build_backend\r\n      obj = import_module(mod_path)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^\r\n    File \"/opt/homebrew/Cellar/python@3.12/3.12.0/Frameworks/Python.framework/Versions/3.12/lib/python3.12/importlib/__init__.py\", line 90, in import_module\r\n      return _bootstrap._gcd_import(name[level:], package, level)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n    File \"<frozen importlib._bootstrap>\", line 1381, in _gcd_import\r\n    File \"<frozen importlib._bootstrap>\", line 1354, in _find_and_load\r\n    File \"<frozen importlib._bootstrap>\", line 1304, in _find_and_load_unlocked\r\n    File \"<frozen importlib._bootstrap>\", line 488, in _call_with_frames_removed\r\n    File \"<frozen importlib._bootstrap>\", line 1381, in _gcd_import\r\n    File \"<frozen importlib._bootstrap>\", line 1354, in _find_and_load\r\n    File \"<frozen importlib._bootstrap>\", line 1325, in _find_and_load_unlocked\r\n    File \"<frozen importlib._bootstrap>\", line 929, in _load_unlocked\r\n    File \"<frozen importlib._bootstrap_external>\", line 994, in exec_module\r\n    File \"<frozen importlib._bootstrap>\", line 488, in _call_with_frames_removed\r\n    File \"/private/var/folders/z4/nphh3sds4zsckwzc8kcht7h00000gn/T/tmphs3uy5rx/.venv/lib/python3.12/site-packages/setuptools/__init__.py\", line 10, in <module>\r\n      import distutils.core\r\n  ModuleNotFoundError: No module named 'distutils'\r\n\r\n\r\n  at ~/.local/pipx/venvs/poetry/lib/python3.12/site-packages/poetry/installation/chef.py:164 in _prepare\r\n      160\u2502\r\n      161\u2502                 error = ChefBuildError(\"\\n\\n\".join(message_parts))\r\n      162\u2502\r\n      163\u2502             if error is not None:\r\n    \u2192 164\u2502                 raise error from None\r\n      165\u2502\r\n      166\u2502             return path\r\n      167\u2502\r\n      168\u2502     def _prepare_sdist(self, archive: Path, destination: Path | None = None) -> Path:\r\n\r\nNote: This error originates from the build backend, and is likely not a problem with poetry but with numpy (1.24.4) not supporting PEP 517 builds. You can verify this by running 'pip wheel --no-cache-dir --use-pep517 \"numpy (==1.24.4)\"'.\r\n\r\n  \u2022 Installing numpydoc (1.2)\r\n  \u2022 Installing pydata-sphinx-theme (0.8.1)\r\n  \u2022 Installing sphinxcontrib-jquery (4.1)\r\n  \u2022 Installing tenacity (8.2.3)\r\nWarning: The file chosen for install of executing 2.0.0 (executing-2.0.0-py2.py3-none-any.whl) is yanked. Reason for being yanked: Released 2.0.1 which is equivalent but added 'python_requires = >=3.5' so that pip install with Python 2 uses the previous version 1.2.0.\r\n```\r\n\r\nHere is my poetry info: \r\n\r\n```\r\n\u2570\u2500\u27a4  poetry env info                                                                                                                                                                                                                   1 \u21b5\r\n\r\nVirtualenv\r\nPython:         3.12.0\r\nImplementation: CPython\r\nPath:           /Users/username/path/to/langchain2/.venv\r\nExecutable:     /Users/username/path/to/langchain2/.venv/bin/python\r\nValid:          True\r\n```\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI believe you should be able to do: \r\n1. git clone \r\n2. poetry install --with test\n\n### Expected behavior\n\nI would expect that all packages specified by the lockfile could be installed successfully. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13912/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13912/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13910",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13910/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13910/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13910/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13910",
        "id": 2012084381,
        "node_id": "PR_kwDOIPDwls5gbbPc",
        "number": 13910,
        "title": "Pprados/rag vectorstore",
        "user": {
            "login": "pprados",
            "id": 204694,
            "node_id": "MDQ6VXNlcjIwNDY5NA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/204694?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pprados",
            "html_url": "https://github.com/pprados",
            "followers_url": "https://api.github.com/users/pprados/followers",
            "following_url": "https://api.github.com/users/pprados/following{/other_user}",
            "gists_url": "https://api.github.com/users/pprados/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pprados/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pprados/subscriptions",
            "organizations_url": "https://api.github.com/users/pprados/orgs",
            "repos_url": "https://api.github.com/users/pprados/repos",
            "events_url": "https://api.github.com/users/pprados/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pprados/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714144,
                "node_id": "LA_kwDOIPDwls8AAAABc3-roA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XXL",
                "name": "size:XXL",
                "color": "5319E7",
                "default": false,
                "description": "This PR changes 1000+ lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-27T11:38:43Z",
        "updated_at": "2023-12-01T07:54:37Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13910",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13910",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13910.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13910.patch",
            "merged_at": null
        },
        "body": "**Description:**\r\nThe `ParentDocumentRetriever` class provides the `add_documents()` methods, which may seem unconventional for a retriever.\r\n\r\nThis deviation arises from the need to establish and maintain connections between document fragments and their various iterations. Consequently, the `parent_splitter` and `child_splitter` were introduced. As elaborated in this [pull request](https://github.com/langchain-ai/langchain/pull/11968), it's crucial not to confine oneself to text splitters exclusively. Instead, a preference is given to working with *transformations*, from which text splitters inherit.\r\n\r\nHowever, my [initial proposal](https://github.com/langchain-ai/langchain/pull/11968) proved insufficient to fully leverage this concept with all the advanced features of Langchain. An [issue](https://github.com/langchain-ai/langchain/issues/11983) has been raised to address this limitation.\r\n\r\nTo enhance text selection, the proposed idea by `ParentDocumentRetriever` is as follows:\r\n- Convert each text fragment into multiple versions to enhance proximity between questions and potential answers.\r\n- Select corresponding fragments in the vector store.\r\n- Return the original fragment for injection into the prompt.\r\n\r\nFor this purpose, maintaining a link between the original document, each document chunk, and every transformation \r\napplied to each chunk is essential. \r\n\r\n**My Proposition:**\r\nThe `RagVectorStore` class serves as a vector store wrapper with rules for transforming a document \r\ninto a chunk and each chunk into different versions. It closely resembles `ParentRetriever` but employs \r\na `VectorStore` instead of a `Retriever`.\r\n\r\nThis approach is advantageous due to its simplicity and compatibility with all advanced features of Langchain. \r\nFeel free to explore the benefits of this solution in [this notebook](https://github.com/pprados/langchain-rag/blob/master/docs/integrations/vectorstores/rag_vectorstore.ipynb).\r\n\r\nCompatibility includes:\r\n- [Indexing API](https://python.langchain.com/docs/modules/data_connection/indexing)\r\n- Advanced retrievers like [MultiQueryRetriever](https://python.langchain.com/docs/modules/data_connection/retrievers/MultiQueryRetriever), [Self Querying](https://python.langchain.com/docs/modules/data_connection/retrievers/self_query), etc.\r\n\r\nThe implementation required several changes and additional pull requests, each of which can be validated independently before merging into this one:\r\n- [Adds an in-memory implementation of RecordStore](https://github.com/langchain-ai/langchain/pull/13200)\r\n- [Add SQLDocStore](https://github.com/langchain-ai/langchain/pull/13181)\r\n- [Add a Wrapper vectorstore, compatible with SelfQueryRetriever](https://github.com/langchain-ai/langchain/pull/13190)\r\n- [Add *LCEL* Transformers](https://github.com/langchain-ai/langchain/pull/13819)\r\n\r\n**Issues:**\r\n- [Pull Request: 11968](https://github.com/langchain-ai/langchain/pull/11968)\r\n- [Issue: 11983](https://github.com/langchain-ai/langchain/issues/11983)\r\n\r\n**Dependencies:** \r\nAny dependencies required for this change.\r\n\r\n**Tag Maintainers:**\r\n@baskaryan @hwchase17\r\n\r\n**Twitter Handle:**\r\nTwitter account: pprados\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13910/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13910/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13909",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13909/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13909/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13909/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13909",
        "id": 2012075695,
        "node_id": "I_kwDOIPDwls537dav",
        "number": 13909,
        "title": "MultiVector Retriever BaseStore",
        "user": {
            "login": "raelix",
            "id": 3819481,
            "node_id": "MDQ6VXNlcjM4MTk0ODE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3819481?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/raelix",
            "html_url": "https://github.com/raelix",
            "followers_url": "https://api.github.com/users/raelix/followers",
            "following_url": "https://api.github.com/users/raelix/following{/other_user}",
            "gists_url": "https://api.github.com/users/raelix/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/raelix/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/raelix/subscriptions",
            "organizations_url": "https://api.github.com/users/raelix/orgs",
            "repos_url": "https://api.github.com/users/raelix/repos",
            "events_url": "https://api.github.com/users/raelix/events{/privacy}",
            "received_events_url": "https://api.github.com/users/raelix/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T11:33:30Z",
        "updated_at": "2023-11-27T11:33:52Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nMultiVectorRetriever is really helpful to add summary and hypothetical queries of our documents to improve the retrievers but only these two are stored in the vectorstore, instead the entire document is within a BaseStore (Memory or Local).\r\nThe main issue is that:\r\n- the Memory one is not going to persist across restarts \r\n- the File one is going to create tons of files\r\nWhy not keeping the original document in the vectorstore as well instead of using external file/memory?\n\n### Motivation\n\nKeep documents, questions and summaries on the same vectorstore.\n\n### Your contribution\n\nI could work on that but I would like to know your point of view.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13909/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13909/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13908",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13908/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13908/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13908/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13908",
        "id": 2012073691,
        "node_id": "PR_kwDOIPDwls5gbY6x",
        "number": 13908,
        "title": "fix: fix qianfan validate_environment typo",
        "user": {
            "login": "chyroc",
            "id": 15604894,
            "node_id": "MDQ6VXNlcjE1NjA0ODk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/15604894?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chyroc",
            "html_url": "https://github.com/chyroc",
            "followers_url": "https://api.github.com/users/chyroc/followers",
            "following_url": "https://api.github.com/users/chyroc/following{/other_user}",
            "gists_url": "https://api.github.com/users/chyroc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chyroc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chyroc/subscriptions",
            "organizations_url": "https://api.github.com/users/chyroc/orgs",
            "repos_url": "https://api.github.com/users/chyroc/repos",
            "events_url": "https://api.github.com/users/chyroc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chyroc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-27T11:32:13Z",
        "updated_at": "2023-11-27T20:14:42Z",
        "closed_at": "2023-11-27T19:17:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13908",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13908",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13908.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13908.patch",
            "merged_at": "2023-11-27T19:17:27Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13908/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13908/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13907",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13907/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13907/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13907/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13907",
        "id": 2012036150,
        "node_id": "PR_kwDOIPDwls5gbQvy",
        "number": 13907,
        "title": "feat: mask api_key for jina",
        "user": {
            "login": "chyroc",
            "id": 15604894,
            "node_id": "MDQ6VXNlcjE1NjA0ODk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/15604894?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/chyroc",
            "html_url": "https://github.com/chyroc",
            "followers_url": "https://api.github.com/users/chyroc/followers",
            "following_url": "https://api.github.com/users/chyroc/following{/other_user}",
            "gists_url": "https://api.github.com/users/chyroc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/chyroc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/chyroc/subscriptions",
            "organizations_url": "https://api.github.com/users/chyroc/orgs",
            "repos_url": "https://api.github.com/users/chyroc/repos",
            "events_url": "https://api.github.com/users/chyroc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/chyroc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-27T11:09:12Z",
        "updated_at": "2023-11-29T03:34:45Z",
        "closed_at": "2023-11-29T02:24:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13907",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13907",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13907.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13907.patch",
            "merged_at": "2023-11-29T02:24:50Z"
        },
        "body": "for https://github.com/langchain-ai/langchain/issues/12165",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13907/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13907/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13906",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13906/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13906/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13906/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13906",
        "id": 2012028998,
        "node_id": "I_kwDOIPDwls537SBG",
        "number": 13906,
        "title": "imports of OpenAI and SQLDatabase don't work in .py file",
        "user": {
            "login": "nyck33",
            "id": 25189545,
            "node_id": "MDQ6VXNlcjI1MTg5NTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/25189545?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nyck33",
            "html_url": "https://github.com/nyck33",
            "followers_url": "https://api.github.com/users/nyck33/followers",
            "following_url": "https://api.github.com/users/nyck33/following{/other_user}",
            "gists_url": "https://api.github.com/users/nyck33/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nyck33/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nyck33/subscriptions",
            "organizations_url": "https://api.github.com/users/nyck33/orgs",
            "repos_url": "https://api.github.com/users/nyck33/repos",
            "events_url": "https://api.github.com/users/nyck33/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nyck33/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-27T11:04:57Z",
        "updated_at": "2023-11-27T11:10:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nUbuntu 23.10\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nfrom langchain import OpenAI, SQLDatabase\r\nfrom snowflake.snowpark import Session \r\nfrom langchain.chains import create_sql_query_chain\r\n\r\nfrom dotenv import load_dotenv\r\nimport os\r\nfrom urllib.parse import quote\r\n\r\nload_dotenv()\r\n\r\n# use the env vars in comments above to set the vars below\r\nOpenAI_API_KEY = os.getenv(\"OPENAI_API_KEY\")\r\nsnowflake_account = os.getenv(\"ACCOUNT\")\r\nusername = os.getenv(\"USER\")\r\npassword = os.getenv(\"SNOWSQL_PWD\")\r\nwarehouse = os.getenv(\"WAREHOUSE\")\r\ndatabase = 'LANGCHAIN_DEMO_DB' #os.getenv(\"DATABASE\")\r\nschema = 'PUBLIC' #os.getenv(\"SCHEMA\")\r\nrole = os.getenv(\"ROLE\")\r\n\r\n\r\n# print out all env vars using f-strings each on a separate line but x out password\r\nprint(f\"OpenAI_API_KEY: {'x' * len(OpenAI_API_KEY)}\")\r\nprint(f\"snowflake_account: {snowflake_account}\")\r\n#print(f\"username: {username}\")\r\n#print(f\"password: {password}\")\r\nprint(f\"warehouse: {warehouse}\")\r\nprint(f\"database: {database}\")\r\nprint(f\"schema: {schema}\")\r\nprint(f\"role: {role}\")\r\n\r\nencoded_password = quote(password, safe='')\r\n```\r\nbut it works in my Jupyter notebook \r\n\r\n![image](https://github.com/langchain-ai/langchain/assets/25189545/5ef3caa3-747e-4622-9714-a96f8e10a5ad)\r\n\r\nhttps://medium.com/@muriithicliffernest/snowflake-langchain-generating-sql-queries-from-natural-language-queries-12c4e2918631 is the tutorial I followed for the .ipynb.\r\n\r\n```\r\npip install --upgrade pip\r\npip install \"snowflake-snowpark-python[pandas]\" snowflake-sqlalchemy\r\npip install langchain openai langchain-experimental jupyter\r\n```\r\nare the instructions to install packages in that Medium article so I matched versions for both the conda env I'm using for the .py and .ipynb.  Even if I use the same `langchain-snowlfake` env for both the error is still there.  See the red line under `from langchain import OpenAI, SQLDatabase \r\n` in the right half of the image which is showing `lanchain-sql.py`\r\n\r\n\r\n\n\n### Expected behavior\n\nThe import should work, no red line.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13906/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13906/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13905",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13905/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13905/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13905/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13905",
        "id": 2011835828,
        "node_id": "PR_kwDOIPDwls5galRN",
        "number": 13905,
        "title": "IMPROVEMENT: import Document from core",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714130,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rkg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XL",
                "name": "size:XL",
                "color": "D4C5F9",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T09:16:12Z",
        "updated_at": "2023-11-27T20:48:44Z",
        "closed_at": "2023-11-27T20:48:44Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13905",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13905",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13905.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13905.patch",
            "merged_at": "2023-11-27T20:48:43Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13905/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13905/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13903",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13903/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13903/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13903/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13903",
        "id": 2011758303,
        "node_id": "PR_kwDOIPDwls5gaU08",
        "number": 13903,
        "title": "Support for indexes that do not return a 'metadata' field in '_source'",
        "user": {
            "login": "assaftibm",
            "id": 28494432,
            "node_id": "MDQ6VXNlcjI4NDk0NDMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/28494432?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/assaftibm",
            "html_url": "https://github.com/assaftibm",
            "followers_url": "https://api.github.com/users/assaftibm/followers",
            "following_url": "https://api.github.com/users/assaftibm/following{/other_user}",
            "gists_url": "https://api.github.com/users/assaftibm/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/assaftibm/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/assaftibm/subscriptions",
            "organizations_url": "https://api.github.com/users/assaftibm/orgs",
            "repos_url": "https://api.github.com/users/assaftibm/repos",
            "events_url": "https://api.github.com/users/assaftibm/events{/privacy}",
            "received_events_url": "https://api.github.com/users/assaftibm/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6077048506,
                "node_id": "LA_kwDOIPDwls8AAAABajhmug",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20elasticsearch",
                "name": "integration: elasticsearch",
                "color": "DAB5EC",
                "default": false,
                "description": "Related to elastic/elasticsearch integrations"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-27T08:30:49Z",
        "updated_at": "2023-11-30T17:21:28Z",
        "closed_at": "2023-11-27T20:52:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13903",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13903",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13903.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13903.patch",
            "merged_at": "2023-11-27T20:52:57Z"
        },
        "body": "\r\nDescription: Some Elastic indexes do not return a 'metadata' field in '_source'. However, prior to this PR, the code assumed  there always is a 'metadata' field. This PR adds support for cases where the field is missing by adding it manually.\r\n\r\nIssue: #13869 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13903/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13903/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13902",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13902/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13902/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13902/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13902",
        "id": 2011722513,
        "node_id": "PR_kwDOIPDwls5gaNF-",
        "number": 13902,
        "title": "DOCS: update stack diagram",
        "user": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 6232714144,
                "node_id": "LA_kwDOIPDwls8AAAABc3-roA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XXL",
                "name": "size:XXL",
                "color": "5319E7",
                "default": false,
                "description": "This PR changes 1000+ lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T08:06:25Z",
        "updated_at": "2023-11-28T22:19:14Z",
        "closed_at": "2023-11-28T22:19:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13902",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13902",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13902.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13902.patch",
            "merged_at": "2023-11-28T22:19:13Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13902/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13902/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13901",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13901/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13901/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13901/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13901",
        "id": 2011713191,
        "node_id": "PR_kwDOIPDwls5gaLHO",
        "number": 13901,
        "title": "AnthropicFunctions  function_call compatibility",
        "user": {
            "login": "JohnnyFoulds",
            "id": 28979940,
            "node_id": "MDQ6VXNlcjI4OTc5OTQw",
            "avatar_url": "https://avatars.githubusercontent.com/u/28979940?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JohnnyFoulds",
            "html_url": "https://github.com/JohnnyFoulds",
            "followers_url": "https://api.github.com/users/JohnnyFoulds/followers",
            "following_url": "https://api.github.com/users/JohnnyFoulds/following{/other_user}",
            "gists_url": "https://api.github.com/users/JohnnyFoulds/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JohnnyFoulds/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JohnnyFoulds/subscriptions",
            "organizations_url": "https://api.github.com/users/JohnnyFoulds/orgs",
            "repos_url": "https://api.github.com/users/JohnnyFoulds/repos",
            "events_url": "https://api.github.com/users/JohnnyFoulds/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JohnnyFoulds/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T08:00:03Z",
        "updated_at": "2023-11-28T21:22:55Z",
        "closed_at": "2023-11-28T21:22:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13901",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13901",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13901.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13901.patch",
            "merged_at": "2023-11-28T21:22:55Z"
        },
        "body": "  - **Description:** Updates to `AnthropicFunctions` to be compatible with the OpenAI `function_call` functionality.\r\n  - **Issue:** The functionality to indicate `auto`, `none` and a forced function_call was not completely implemented in the existing code.\r\n  - **Dependencies:** None\r\n  - **Tag maintainer:** @baskaryan , and any of the other maintainers if needed.\r\n  - **Twitter handle:** None\r\n\r\nI have specifically tested this functionality via AWS Bedrock with the Claude-2 and Claude-Instant models. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13901/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13901/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13900",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13900/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13900/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13900/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13900",
        "id": 2011642730,
        "node_id": "I_kwDOIPDwls535ztq",
        "number": 13900,
        "title": "Issue: Retrieval QA Chain not giving response after Entering new RetrievalQA chain...",
        "user": {
            "login": "JoAmps",
            "id": 64706945,
            "node_id": "MDQ6VXNlcjY0NzA2OTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/64706945?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JoAmps",
            "html_url": "https://github.com/JoAmps",
            "followers_url": "https://api.github.com/users/JoAmps/followers",
            "following_url": "https://api.github.com/users/JoAmps/following{/other_user}",
            "gists_url": "https://api.github.com/users/JoAmps/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JoAmps/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JoAmps/subscriptions",
            "organizations_url": "https://api.github.com/users/JoAmps/orgs",
            "repos_url": "https://api.github.com/users/JoAmps/repos",
            "events_url": "https://api.github.com/users/JoAmps/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JoAmps/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T07:12:34Z",
        "updated_at": "2023-11-27T07:21:21Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nSometimes when interacting with the bot using Retrieval QA chain, it just stops at Entering new RetrievalQA chain...\r\nNo response, it doesn't give the response, it just stops,\r\nI am using qa.acall\r\nand using the async callback handler\r\nhow to fix that, as that is unnacceptable\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13900/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13900/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13897",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13897/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13897/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13897/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13897",
        "id": 2011474672,
        "node_id": "I_kwDOIPDwls535Krw",
        "number": 13897,
        "title": "Issue: AgentExecutor stopping before reaching the set max_iteration and max_execution_time limits without meeting the stop condition",
        "user": {
            "login": "XO-Appleton",
            "id": 41369365,
            "node_id": "MDQ6VXNlcjQxMzY5MzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/41369365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/XO-Appleton",
            "html_url": "https://github.com/XO-Appleton",
            "followers_url": "https://api.github.com/users/XO-Appleton/followers",
            "following_url": "https://api.github.com/users/XO-Appleton/following{/other_user}",
            "gists_url": "https://api.github.com/users/XO-Appleton/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/XO-Appleton/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/XO-Appleton/subscriptions",
            "organizations_url": "https://api.github.com/users/XO-Appleton/orgs",
            "repos_url": "https://api.github.com/users/XO-Appleton/repos",
            "events_url": "https://api.github.com/users/XO-Appleton/events{/privacy}",
            "received_events_url": "https://api.github.com/users/XO-Appleton/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-27T04:43:45Z",
        "updated_at": "2023-11-29T13:52:34Z",
        "closed_at": "2023-11-29T13:52:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\n```python\r\nllm = ChatOpenAI(model=gpt_4, temperature=0, api_key=os.environ['OPENAI_API_KEY'])\r\n\r\nllm_chain = LLMChain(llm=llm, prompt=react_prompt)\r\n\r\ntool_names = [tool.name]\r\n\r\nagent = LLMSingleActionAgent(\r\n    llm_chain=llm_chain,\r\n    output_parser=react_output_parser,\r\n    stop=[\"\\nObservation:\"],\r\n    allowed_tools=tool_names,\r\n    max_execution_time=240,\r\n    max_iterations=120,\r\n    handle_parsing_errors=True\r\n)\r\n\r\nagent_executor = AgentExecutor.from_agent_and_tools(agent=agent, tools=[tool], verbose=True)\r\nresponse = agent_executor.run(textual_description)\r\n```\r\n\r\nThis is my setup for AgentExecutor. It is prompted to solve OpenAI gym's Taxi problem and only stop after the passenger is dropped off at the destination. But as the title suggests the AgentExecutor chain finishes before reaching the stopping limits or achieving the stopping condition.\r\n\r\nAlso when I use GPT-3 model sometimes it stops following the ReAct template occasionally and raises errors as my output parser cannot process the output correctly. I wonder if there is a way to change that.\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13897/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13897/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13896",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13896/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13896/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13896/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13896",
        "id": 2011448434,
        "node_id": "I_kwDOIPDwls535ERy",
        "number": 13896,
        "title": "Error raised during decoding response from inference endpoint when using ChatGLM",
        "user": {
            "login": "henrywang0314",
            "id": 48542403,
            "node_id": "MDQ6VXNlcjQ4NTQyNDAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/48542403?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/henrywang0314",
            "html_url": "https://github.com/henrywang0314",
            "followers_url": "https://api.github.com/users/henrywang0314/followers",
            "following_url": "https://api.github.com/users/henrywang0314/following{/other_user}",
            "gists_url": "https://api.github.com/users/henrywang0314/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/henrywang0314/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/henrywang0314/subscriptions",
            "organizations_url": "https://api.github.com/users/henrywang0314/orgs",
            "repos_url": "https://api.github.com/users/henrywang0314/repos",
            "events_url": "https://api.github.com/users/henrywang0314/events{/privacy}",
            "received_events_url": "https://api.github.com/users/henrywang0314/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-27T04:12:28Z",
        "updated_at": "2023-11-27T05:21:31Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain==0.0.316\r\npython==3.10.13\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\ni'm using the code here:https://python.langchain.com/docs/integrations/llms/chatglm\r\nHere is the full error output:\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\vic\\Desktop\\chatGLM\\.conda\\lib\\site-packages\\requests\\models.py\", line 971, in json\r\n    return complexjson.loads(self.text, **kwargs)\r\n  File \"C:\\Users\\vic\\Desktop\\chatGLM\\.conda\\lib\\json\\__init__.py\", line 346, in loads\r\n    return _default_decoder.decode(s)\r\n  File \"C:\\Users\\vic\\Desktop\\chatGLM\\.conda\\lib\\json\\decoder.py\", line 337, in decode\r\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\r\n  File \"C:\\Users\\vic\\Desktop\\chatGLM\\.conda\\lib\\json\\decoder.py\", line 355, in raw_decode\r\n    raise JSONDecodeError(\"Expecting value\", s, err.value) from None\r\njson.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\vic\\AppData\\Roaming\\Python\\Python310\\site-packages\\langchain\\llms\\chatglm.py\", line 107, in _call\r\n    parsed_response = response.json()\r\n  File \"C:\\Users\\vic\\Desktop\\chatGLM\\.conda\\lib\\site-packages\\requests\\models.py\", line 975, in json\r\n    raise RequestsJSONDecodeError(e.msg, e.doc, e.pos)\r\nrequests.exceptions.JSONDecodeError: Expecting value: line 1 column 1 (char 0)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"c:\\Users\\vic\\Desktop\\chatGLM\\test_server.py\", line 36, in <module>\r\n    print(llm_chain.run(question))\r\n  File \"C:\\Users\\vic\\AppData\\Roaming\\Python\\Python310\\site-packages\\langchain\\chains\\base.py\", line 503, in run\r\n    return self(args[0], callbacks=callbacks, tags=tags, metadata=metadata)[\r\n  File \"C:\\Users\\vic\\AppData\\Roaming\\Python\\Python310\\site-packages\\langchain\\chains\\base.py\", line 308, in __call__\r\n    raise e\r\n  File \"C:\\Users\\vic\\AppData\\Roaming\\Python\\Python310\\site-packages\\langchain\\chains\\base.py\", line 302, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"C:\\Users\\vic\\AppData\\Roaming\\Python\\Python310\\site-packages\\langchain\\chains\\llm.py\", line 93, in _call\r\n    response = self.generate([inputs], run_manager=run_manager)\r\n  File \"C:\\Users\\vic\\AppData\\Roaming\\Python\\Python310\\site-packages\\langchain\\chains\\llm.py\", line 103, in generate\r\n    return self.llm.generate_prompt(\r\n  File \"C:\\Users\\vic\\AppData\\Roaming\\Python\\Python310\\site-packages\\langchain\\llms\\base.py\", line 497, in generate_prompt\r\n    return self.generate(prompt_strings, stop=stop, callbacks=callbacks, **kwargs)\r\n  File \"C:\\Users\\vic\\AppData\\Roaming\\Python\\Python310\\site-packages\\langchain\\llms\\base.py\", line 646, in generate\r\n    output = self._generate_helper(\r\n  File \"C:\\Users\\vic\\AppData\\Roaming\\Python\\Python310\\site-packages\\langchain\\llms\\base.py\", line 534, in _generate_helper\r\n    raise e\r\n  File \"C:\\Users\\vic\\AppData\\Roaming\\Python\\Python310\\site-packages\\langchain\\llms\\base.py\", line 521, in _generate_helper\r\n    self._generate(\r\n  File \"C:\\Users\\vic\\AppData\\Roaming\\Python\\Python310\\site-packages\\langchain\\llms\\base.py\", line 1043, in _generate\r\n    self._call(prompt, stop=stop, run_manager=run_manager, **kwargs)\r\n  File \"C:\\Users\\vic\\AppData\\Roaming\\Python\\Python310\\site-packages\\langchain\\llms\\chatglm.py\", line 120, in _call\r\n    raise ValueError(\r\nValueError: Error raised during decoding response from inference endpoint: Expecting value: line 1 column 1 (char 0).\r\n\r\n\r\n### Expected behavior\r\n\r\noutput of ChatGLM's response is missing\r\nprint(response)\r\n<Response [200]>",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13896/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13896/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13894",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13894/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13894/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13894/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13894",
        "id": 2011378648,
        "node_id": "PR_kwDOIPDwls5gZCwl",
        "number": 13894,
        "title": "Improve exclude path filesystem logic",
        "user": {
            "login": "johnlarkin1",
            "id": 18692931,
            "node_id": "MDQ6VXNlcjE4NjkyOTMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/18692931?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/johnlarkin1",
            "html_url": "https://github.com/johnlarkin1",
            "followers_url": "https://api.github.com/users/johnlarkin1/followers",
            "following_url": "https://api.github.com/users/johnlarkin1/following{/other_user}",
            "gists_url": "https://api.github.com/users/johnlarkin1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/johnlarkin1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/johnlarkin1/subscriptions",
            "organizations_url": "https://api.github.com/users/johnlarkin1/orgs",
            "repos_url": "https://api.github.com/users/johnlarkin1/repos",
            "events_url": "https://api.github.com/users/johnlarkin1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/johnlarkin1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-27T02:42:32Z",
        "updated_at": "2023-11-27T23:20:11Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13894",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13894",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13894.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13894.patch",
            "merged_at": null
        },
        "body": "  - **Description:** Improving the use of the exclude arguments for `FileSystemBlobLoader`\r\n  - **Issue:** #13751\r\n  - **Dependencies:** n/a\r\n  - **Tag maintainer:** \r\n  - **Twitter handle:** this PR won't get announced, but @jlarks32\r\n\r\nSee the issue above for more detail, but I don't think that the `exclude` parameter is being handled really like what the API is indicating / what we were thinking (largely due to annoyances with pathlib's `Path.match`). Let me know if you all want me to add some more unit tests and build this out a little bit more. \r\n\r\n<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13894/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13893",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13893/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13893/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13893/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13893",
        "id": 2011374966,
        "node_id": "PR_kwDOIPDwls5gZB_B",
        "number": 13893,
        "title": "Add multi-input Reddit search tool",
        "user": {
            "login": "clwillhuang",
            "id": 49571870,
            "node_id": "MDQ6VXNlcjQ5NTcxODcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/49571870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/clwillhuang",
            "html_url": "https://github.com/clwillhuang",
            "followers_url": "https://api.github.com/users/clwillhuang/followers",
            "following_url": "https://api.github.com/users/clwillhuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/clwillhuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/clwillhuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clwillhuang/subscriptions",
            "organizations_url": "https://api.github.com/users/clwillhuang/orgs",
            "repos_url": "https://api.github.com/users/clwillhuang/repos",
            "events_url": "https://api.github.com/users/clwillhuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/clwillhuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714130,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rkg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XL",
                "name": "size:XL",
                "color": "D4C5F9",
                "default": false,
                "description": "This PR changes 500-999 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T02:37:19Z",
        "updated_at": "2023-12-01T22:56:21Z",
        "closed_at": "2023-11-30T01:16:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13893",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13893",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13893.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13893.patch",
            "merged_at": "2023-11-30T01:16:41Z"
        },
        "body": "  - **Description:** Added a tool called RedditSearchRun and an accompanying API wrapper, which searches Reddit for posts with support for time filtering, post sorting, query string and subreddit filtering. \r\n  - **Issue:** #13891 \r\n  - **Dependencies:** `praw` module is used to search Reddit\r\n  - **Tag maintainer:** @baskaryan , and any of the other maintainers if needed\r\n  - **Twitter handle:** None.\r\n\r\n  Hello,\r\n\r\nThis is our first PR and we hope that our changes will be helpful to the community. We have run `make format`, `make lint` and `make test` locally before submitting the PR. To our knowledge, our changes do not introduce any new errors.\r\n\r\nOur PR integrates the `praw` package which is already used by RedditPostsLoader in LangChain. Nonetheless, we have added integration tests and edited unit tests to test our changes. An example notebook is also provided. These changes were put together by me, @Anika2000, @CharlesXu123, and @Jeremy-Cheng-stack\r\n\r\nThank you in advance to the maintainers for their time.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13893/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13893/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13891",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13891/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13891/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13891/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13891",
        "id": 2011359518,
        "node_id": "I_kwDOIPDwls534uke",
        "number": 13891,
        "title": "Adding a multi-input Reddit search tool",
        "user": {
            "login": "clwillhuang",
            "id": 49571870,
            "node_id": "MDQ6VXNlcjQ5NTcxODcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/49571870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/clwillhuang",
            "html_url": "https://github.com/clwillhuang",
            "followers_url": "https://api.github.com/users/clwillhuang/followers",
            "following_url": "https://api.github.com/users/clwillhuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/clwillhuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/clwillhuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/clwillhuang/subscriptions",
            "organizations_url": "https://api.github.com/users/clwillhuang/orgs",
            "repos_url": "https://api.github.com/users/clwillhuang/repos",
            "events_url": "https://api.github.com/users/clwillhuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/clwillhuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-27T02:16:19Z",
        "updated_at": "2023-12-11T03:21:33Z",
        "closed_at": "2023-12-11T03:21:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWe are working on a way to add a multi-input tool to LangChain for searching Reddit posts. Integrating the API as a tool will allow agents to search for posts using a specific search query and some query parameters like sort, time_filter, subreddit etc. to respond to prompts. The tool will use search functionality provided by [the `praw` package](https://praw.readthedocs.io/en/stable/code_overview/models/subreddit.html#praw.models.Subreddit.search).\n\n### Motivation\n\nAlthough LangChain currently has a document loader for Reddit (RedditPostsLoader), it is more centred around subreddit and username to load posts and we want to create our tool to provide more functionalities.  Our tool will offer functionality for sorting and filtering by time, which is currently not handled by RedditPostsLoader. With this tool, agents can respond to prompts by interacting with the API without the user having to manually load the Reddit posts. The multi-input nature of the tool will make it useful for responding to more diverse prompts and we hope that users can use it to better leverage [multi-input tool](https://python.langchain.com/docs/modules/agents/tools/multi_input_tool) and [shared memory](https://python.langchain.com/docs/modules/agents/how_to/sharedmemory_for_tools) functionalities already provided by LangChain.\n\n### Your contribution\n\nWe have our code already prepared and we will be submitting a PR soon. As encouraged by contributing.md, we have added integration tests, a notebook example, and edits for documentation generation. `praw` has also been added as an optional dependency.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13891/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13891/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13890",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13890/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13890/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13890/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13890",
        "id": 2011351167,
        "node_id": "PR_kwDOIPDwls5gY8_x",
        "number": 13890,
        "title": "DOC: Fix Sample Code for Compatibility with Pydantic 2.0",
        "user": {
            "login": "ggeutzzang",
            "id": 375580,
            "node_id": "MDQ6VXNlcjM3NTU4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/375580?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ggeutzzang",
            "html_url": "https://github.com/ggeutzzang",
            "followers_url": "https://api.github.com/users/ggeutzzang/followers",
            "following_url": "https://api.github.com/users/ggeutzzang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ggeutzzang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ggeutzzang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ggeutzzang/subscriptions",
            "organizations_url": "https://api.github.com/users/ggeutzzang/orgs",
            "repos_url": "https://api.github.com/users/ggeutzzang/repos",
            "events_url": "https://api.github.com/users/ggeutzzang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ggeutzzang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-27T02:04:27Z",
        "updated_at": "2023-11-28T08:48:41Z",
        "closed_at": "2023-11-27T02:21:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13890",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13890",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13890.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13890.patch",
            "merged_at": "2023-11-27T02:21:14Z"
        },
        "body": "  - **Description:** \r\nI encountered an issue while running the existing sample code on the page https://python.langchain.com/docs/modules/agents/how_to/agent_iter in an environment with Pydantic 2.0 installed. The following error was triggered:\r\n\r\n```python\r\nValidationError                           Traceback (most recent call last)\r\n<ipython-input-12-2ffff2c87e76> in <cell line: 43>()\r\n     41 \r\n     42 tools = [\r\n---> 43     Tool(\r\n     44         name=\"GetPrime\",\r\n     45         func=get_prime,\r\n\r\n2 frames\r\n/usr/local/lib/python3.10/dist-packages/pydantic/v1/main.py in __init__(__pydantic_self__, **data)\r\n    339         values, fields_set, validation_error = validate_model(__pydantic_self__.__class__, data)\r\n    340         if validation_error:\r\n--> 341             raise validation_error\r\n    342         try:\r\n    343             object_setattr(__pydantic_self__, '__dict__', values)\r\n\r\nValidationError: 1 validation error for Tool\r\nargs_schema\r\n  subclass of BaseModel expected (type=type_error.subclass; expected_class=BaseModel)\r\n```\r\n\r\nI have made modifications to the example code to ensure it functions correctly in environments with Pydantic 2.0.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13890/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13890/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13889",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13889/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13889/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13889/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13889",
        "id": 2011322066,
        "node_id": "PR_kwDOIPDwls5gY20h",
        "number": 13889,
        "title": "Add retriever for Outline",
        "user": {
            "login": "yuskhan",
            "id": 66191792,
            "node_id": "MDQ6VXNlcjY2MTkxNzky",
            "avatar_url": "https://avatars.githubusercontent.com/u/66191792?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yuskhan",
            "html_url": "https://github.com/yuskhan",
            "followers_url": "https://api.github.com/users/yuskhan/followers",
            "following_url": "https://api.github.com/users/yuskhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/yuskhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yuskhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yuskhan/subscriptions",
            "organizations_url": "https://api.github.com/users/yuskhan/orgs",
            "repos_url": "https://api.github.com/users/yuskhan/repos",
            "events_url": "https://api.github.com/users/yuskhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yuskhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-27T01:24:46Z",
        "updated_at": "2023-11-28T01:51:55Z",
        "closed_at": "2023-11-27T02:56:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13889",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13889",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13889.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13889.patch",
            "merged_at": "2023-11-27T02:56:12Z"
        },
        "body": "  - **Description:** Added a retriever for the Outline API to ask questions on knowledge base\r\n  - **Issue:** resolves #11814\r\n  - **Dependencies:** None\r\n  - **Tag maintainer:** @baskaryan\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13889/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13889/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13888",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13888/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13888/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13888/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13888",
        "id": 2011309828,
        "node_id": "PR_kwDOIPDwls5gY0L0",
        "number": 13888,
        "title": "Fixes error loading Obsidian templates",
        "user": {
            "login": "ealt",
            "id": 13019253,
            "node_id": "MDQ6VXNlcjEzMDE5MjUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/13019253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ealt",
            "html_url": "https://github.com/ealt",
            "followers_url": "https://api.github.com/users/ealt/followers",
            "following_url": "https://api.github.com/users/ealt/following{/other_user}",
            "gists_url": "https://api.github.com/users/ealt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ealt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ealt/subscriptions",
            "organizations_url": "https://api.github.com/users/ealt/orgs",
            "repos_url": "https://api.github.com/users/ealt/repos",
            "events_url": "https://api.github.com/users/ealt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ealt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-27T01:07:17Z",
        "updated_at": "2023-12-04T20:55:38Z",
        "closed_at": "2023-12-04T20:55:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13888",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13888",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13888.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13888.patch",
            "merged_at": "2023-12-04T20:55:37Z"
        },
        "body": "  - **Description:** Obsidian templates can include [variables](https://help.obsidian.md/Plugins/Templates#Template+variables) using double curly braces.  `ObsidianLoader` uses PyYaml to parse the frontmatter of documents. This parsing throws an error when encountering variables' curly braces. This is avoided by temporarily substituting safe strings before parsing.\r\n  - **Issue:** #13887\r\n  - **Tag maintainer:** @hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13888/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13888/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13887",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13887/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13887/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13887/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13887",
        "id": 2011308854,
        "node_id": "I_kwDOIPDwls534iM2",
        "number": 13887,
        "title": "ObsidianLoader fails when encountering template variables in the properties frontmatter of a file",
        "user": {
            "login": "ealt",
            "id": 13019253,
            "node_id": "MDQ6VXNlcjEzMDE5MjUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/13019253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ealt",
            "html_url": "https://github.com/ealt",
            "followers_url": "https://api.github.com/users/ealt/followers",
            "following_url": "https://api.github.com/users/ealt/following{/other_user}",
            "gists_url": "https://api.github.com/users/ealt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ealt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ealt/subscriptions",
            "organizations_url": "https://api.github.com/users/ealt/orgs",
            "repos_url": "https://api.github.com/users/ealt/repos",
            "events_url": "https://api.github.com/users/ealt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ealt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T01:05:47Z",
        "updated_at": "2023-11-27T01:08:49Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version 0.0.340\r\nPython version: 3.11.5\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Create an Obsidian template with a [template variable](https://help.obsidian.md/Plugins/Templates#Template+variables) in the [properties](https://help.obsidian.md/Editing+and+formatting/Properties#Property+format) section of the file.\r\n2. Attempt to load a directory containing that template file using [ObsidianLoader](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/document_loaders/obsidian.py).\r\n\r\n```shell\r\n$ echo -e \"---\\nyear: {{date:YYYY}}\\n---\" > vault/template.md\r\n$ python\r\n>>> from langchain.document_loaders.obsidian import ObsidianLoader\r\n>>> loader = ObsidianLoader('vault')\r\n>>> loader.load()\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/home/user/.conda/envs/localai/lib/python3.11/site-packages/langchain/document_loaders/obsidian.py\", line 115, in load\r\n    front_matter = self._parse_front_matter(text)\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/.conda/envs/localai/lib/python3.11/site-packages/langchain/document_loaders/obsidian.py\", line 48, in _parse_front_matter\r\n    front_matter = yaml.safe_load(match.group(1))\r\n                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/.conda/envs/localai/lib/python3.11/site-packages/yaml/__init__.py\", line 125, in safe_load\r\n    return load(stream, SafeLoader)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/.conda/envs/localai/lib/python3.11/site-packages/yaml/__init__.py\", line 81, in load\r\n    return loader.get_single_data()\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/.conda/envs/localai/lib/python3.11/site-packages/yaml/constructor.py\", line 51, in get_single_data\r\n    return self.construct_document(node)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/.conda/envs/localai/lib/python3.11/site-packages/yaml/constructor.py\", line 60, in construct_document\r\n    for dummy in generator:\r\n  File \"/home/user/.conda/envs/localai/lib/python3.11/site-packages/yaml/constructor.py\", line 413, in construct_yaml_map\r\n    value = self.construct_mapping(node)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/.conda/envs/localai/lib/python3.11/site-packages/yaml/constructor.py\", line 218, in construct_mapping\r\n    return super().construct_mapping(node, deep=deep)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/home/user/.conda/envs/localai/lib/python3.11/site-packages/yaml/constructor.py\", line 141, in construct_mapping\r\n    raise ConstructorError(\"while constructing a mapping\", node.start_mark,\r\nyaml.constructor.ConstructorError: while constructing a mapping\r\n  in \"<unicode string>\", line 1, column 7:\r\n    year: {{date:YYYY}}\r\n          ^\r\nfound unhashable key\r\n  in \"<unicode string>\", line 1, column 8:\r\n    year: {{date:YYYY}}\r\n```\n\n### Expected behavior\n\n[Template variables](https://help.obsidian.md/Plugins/Templates#Template+variables) are a feature in Obsidian and including them in the properties section of a file is perfectly valid, so [ObsidianLoader](https://github.com/langchain-ai/langchain/blob/master/libs/langchain/langchain/document_loaders/obsidian.py) should have no issue loading a directory that includes a file that has template variable in its properties.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13887/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13887/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13886",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13886/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13886/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13886/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13886",
        "id": 2011286598,
        "node_id": "PR_kwDOIPDwls5gYvPF",
        "number": 13886,
        "title": "export more types",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-27T00:30:26Z",
        "updated_at": "2023-11-27T03:15:35Z",
        "closed_at": "2023-11-27T03:15:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13886",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13886",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13886.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13886.patch",
            "merged_at": "2023-11-27T03:15:34Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13886/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13886/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13885",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13885/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13885/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13885/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13885",
        "id": 2011279522,
        "node_id": "PR_kwDOIPDwls5gYt0q",
        "number": 13885,
        "title": "Mask API keys for various LLM/ChatModel Modules",
        "user": {
            "login": "AnasKhan0607",
            "id": 76663779,
            "node_id": "MDQ6VXNlcjc2NjYzNzc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/76663779?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AnasKhan0607",
            "html_url": "https://github.com/AnasKhan0607",
            "followers_url": "https://api.github.com/users/AnasKhan0607/followers",
            "following_url": "https://api.github.com/users/AnasKhan0607/following{/other_user}",
            "gists_url": "https://api.github.com/users/AnasKhan0607/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AnasKhan0607/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AnasKhan0607/subscriptions",
            "organizations_url": "https://api.github.com/users/AnasKhan0607/orgs",
            "repos_url": "https://api.github.com/users/AnasKhan0607/repos",
            "events_url": "https://api.github.com/users/AnasKhan0607/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AnasKhan0607/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-27T00:16:45Z",
        "updated_at": "2023-12-05T22:11:32Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13885",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13885",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13885.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13885.patch",
            "merged_at": null
        },
        "body": "  **Description:** \r\n- Added masking of the API Keys for the modules:\r\n  - `langchain/chat_models/openai.py`\r\n  - `langchain/llms/openai.py`\r\n  - `langchain/llms/google_palm.py`\r\n  - `langchain/chat_models/google_palm.py`\r\n  - `langchain/llms/edenai.py`\r\n\r\n- Updated the modules to utilize `SecretStr` from pydantic to securely manage API key.\r\n- Added unit/integration tests\r\n- `langchain/chat_models/asure_openai.py` used the `open_api_key` that is derived from the `ChatOpenAI` Class and it was assuming `openai_api_key` is a str so we changed it to expect `SecretStr` instead.\r\n\r\n**Issue:** https://github.com/langchain-ai/langchain/issues/12165 ,\r\n**Dependencies:** none,\r\n**Tag maintainer:** @eyurtsev ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13885/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13885/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13884",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13884/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13884/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13884/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13884",
        "id": 2011260754,
        "node_id": "PR_kwDOIPDwls5gYqIj",
        "number": 13884,
        "title": "Extend OpenAIEmbeddings class to support non-`tiktoken` based embeddings",
        "user": {
            "login": "xychelsea",
            "id": 29785699,
            "node_id": "MDQ6VXNlcjI5Nzg1Njk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/29785699?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/xychelsea",
            "html_url": "https://github.com/xychelsea",
            "followers_url": "https://api.github.com/users/xychelsea/followers",
            "following_url": "https://api.github.com/users/xychelsea/following{/other_user}",
            "gists_url": "https://api.github.com/users/xychelsea/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/xychelsea/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/xychelsea/subscriptions",
            "organizations_url": "https://api.github.com/users/xychelsea/orgs",
            "repos_url": "https://api.github.com/users/xychelsea/repos",
            "events_url": "https://api.github.com/users/xychelsea/events{/privacy}",
            "received_events_url": "https://api.github.com/users/xychelsea/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-26T23:27:53Z",
        "updated_at": "2023-12-03T20:04:18Z",
        "closed_at": "2023-12-03T20:04:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13884",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13884",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13884.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13884.patch",
            "merged_at": "2023-12-03T20:04:17Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** This extends `OpenAIEmbeddings` to add support for non-`tiktoken` based embeddings, specifically for use with the new `text-generation-webui` API (`--extensions openai`) which does not support `tiktoken` encodings, but rather strings \r\n  - **Issue:** Not found,\r\n  - **Dependencies:** HuggingFace `transformers.AutoTokenizer` is new dependency for running the model without `tiktoken`\r\n  - **Tag maintainer:** @baskaryan based on last commit for `langchain-core` refactor\r\n  - **Twitter handle:** @xychelsea\r\n\r\nModified the tokenization process to be model-agnostic, allowing for both OpenAI and non-OpenAI model tokenizations, by setting the new default `bool` flag `tiktoken_enabled` to `False`. This requeires HuggingFace\u2019s AutoTokenizer and handling tokenization for models requiring different preprocessing steps to generate a chunked string request rather than a list of integers.\r\n\r\nUpdated the embeddings generation process to accommodate non-OpenAI models. This includes converting tokenized text into embeddings using OpenAI\u2019s and Hugging Face\u2019s model architectures.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13884/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 1,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13884/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13883",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13883/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13883/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13883/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13883",
        "id": 2011256390,
        "node_id": "PR_kwDOIPDwls5gYpST",
        "number": 13883,
        "title": "add skeleton of thought",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-26T23:14:24Z",
        "updated_at": "2023-11-27T17:41:09Z",
        "closed_at": "2023-11-27T00:31:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13883",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13883",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13883.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13883.patch",
            "merged_at": "2023-11-27T00:31:41Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13883/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13883/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13882",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13882/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13882/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13882/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13882",
        "id": 2011244811,
        "node_id": "PR_kwDOIPDwls5gYm-9",
        "number": 13882,
        "title": "Add progress bar to OllamaEmbeddings",
        "user": {
            "login": "tylertitsworth",
            "id": 43555799,
            "node_id": "MDQ6VXNlcjQzNTU1Nzk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/43555799?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tylertitsworth",
            "html_url": "https://github.com/tylertitsworth",
            "followers_url": "https://api.github.com/users/tylertitsworth/followers",
            "following_url": "https://api.github.com/users/tylertitsworth/following{/other_user}",
            "gists_url": "https://api.github.com/users/tylertitsworth/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tylertitsworth/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tylertitsworth/subscriptions",
            "organizations_url": "https://api.github.com/users/tylertitsworth/orgs",
            "repos_url": "https://api.github.com/users/tylertitsworth/repos",
            "events_url": "https://api.github.com/users/tylertitsworth/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tylertitsworth/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541141061,
                "node_id": "LA_kwDOIPDwls8AAAABSkcaRQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20embeddings",
                "name": "area: embeddings",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to text embedding models module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-26T22:40:52Z",
        "updated_at": "2023-11-27T21:56:13Z",
        "closed_at": "2023-11-27T21:56:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13882",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13882",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13882.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13882.patch",
            "merged_at": "2023-11-27T21:56:13Z"
        },
        "body": "- **Description:** Adds a tqdm progress bar to OllamaEmbeddings when embedding a list.\r\n- **Issue:** Related to #13637, but extended to Ollama.\r\n- **Dependencies:** `tqdm` made a necessary dependency.\r\n\r\nThanks to @ugm2 for helping identify a common problem. Embeddings take a very long time to finish on local machines, and require a progress bar to help identify if one should even attempt the workload.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13882/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13882/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13881",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13881/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13881/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13881/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13881",
        "id": 2011218270,
        "node_id": "PR_kwDOIPDwls5gYhbz",
        "number": 13881,
        "title": "Mask api key for googlepalm chat models",
        "user": {
            "login": "faisalt14",
            "id": 90787271,
            "node_id": "MDQ6VXNlcjkwNzg3Mjcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/90787271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/faisalt14",
            "html_url": "https://github.com/faisalt14",
            "followers_url": "https://api.github.com/users/faisalt14/followers",
            "following_url": "https://api.github.com/users/faisalt14/following{/other_user}",
            "gists_url": "https://api.github.com/users/faisalt14/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/faisalt14/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/faisalt14/subscriptions",
            "organizations_url": "https://api.github.com/users/faisalt14/orgs",
            "repos_url": "https://api.github.com/users/faisalt14/repos",
            "events_url": "https://api.github.com/users/faisalt14/events{/privacy}",
            "received_events_url": "https://api.github.com/users/faisalt14/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-26T21:43:27Z",
        "updated_at": "2023-11-26T21:44:59Z",
        "closed_at": "2023-11-26T21:44:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13881",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13881",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13881.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13881.patch",
            "merged_at": null
        },
        "body": "**Description**: masked Google Palm - Chat_Models module API key and added unit tests,\r\n**Issue**: the issue https://github.com/langchain-ai/langchain/issues/12165,\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13881/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13881/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13879",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13879/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13879/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13879/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13879",
        "id": 2011161846,
        "node_id": "PR_kwDOIPDwls5gYWV9",
        "number": 13879,
        "title": "Make contributing to docs easier",
        "user": {
            "login": "daertommy",
            "id": 66957603,
            "node_id": "MDQ6VXNlcjY2OTU3NjAz",
            "avatar_url": "https://avatars.githubusercontent.com/u/66957603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/daertommy",
            "html_url": "https://github.com/daertommy",
            "followers_url": "https://api.github.com/users/daertommy/followers",
            "following_url": "https://api.github.com/users/daertommy/following{/other_user}",
            "gists_url": "https://api.github.com/users/daertommy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/daertommy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/daertommy/subscriptions",
            "organizations_url": "https://api.github.com/users/daertommy/orgs",
            "repos_url": "https://api.github.com/users/daertommy/repos",
            "events_url": "https://api.github.com/users/daertommy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/daertommy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-26T18:55:45Z",
        "updated_at": "2023-11-29T06:49:09Z",
        "closed_at": "2023-11-29T01:53:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13879",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13879",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13879.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13879.patch",
            "merged_at": null
        },
        "body": "With this PR readers can suggest changes to the docs with an easy to use WYSIWYG markdown editor.\n\n[This](https://holocron.so/github/pr/langchain-ai/langchain/master/editor) is how the editor looks like for this repo.\n\nhttps://github.com/remorses/docusaurus-example/assets/31321188/43c8bc68-3668-4a25-bf1c-a70eceab7bcb",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13879/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13879/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13876",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13876/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13876/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13876/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13876",
        "id": 2011079659,
        "node_id": "I_kwDOIPDwls533qPr",
        "number": 13876,
        "title": "storing metadata with the VectorStoreRetrieverMemory memory module",
        "user": {
            "login": "ShukriChiu",
            "id": 5136543,
            "node_id": "MDQ6VXNlcjUxMzY1NDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5136543?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShukriChiu",
            "html_url": "https://github.com/ShukriChiu",
            "followers_url": "https://api.github.com/users/ShukriChiu/followers",
            "following_url": "https://api.github.com/users/ShukriChiu/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShukriChiu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShukriChiu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShukriChiu/subscriptions",
            "organizations_url": "https://api.github.com/users/ShukriChiu/orgs",
            "repos_url": "https://api.github.com/users/ShukriChiu/repos",
            "events_url": "https://api.github.com/users/ShukriChiu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShukriChiu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-26T15:14:26Z",
        "updated_at": "2023-11-26T21:01:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIf I want to use VectorStoreRetrieverMemory to store my users' chat memories, I need to search and store them using user_id and session_id. However, memory.save_context doesn't have a 'metadata' option.\n\n### Motivation\n\nI want to associate chat merory with single user\n\n### Your contribution\n\nI can't submit PR",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13876/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13876/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13875",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13875/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13875/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13875/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13875",
        "id": 2011016674,
        "node_id": "PR_kwDOIPDwls5gX5ry",
        "number": 13875,
        "title": "max length attribute for spacy splitter for large docs",
        "user": {
            "login": "kunal8164705",
            "id": 73680423,
            "node_id": "MDQ6VXNlcjczNjgwNDIz",
            "avatar_url": "https://avatars.githubusercontent.com/u/73680423?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kunal8164705",
            "html_url": "https://github.com/kunal8164705",
            "followers_url": "https://api.github.com/users/kunal8164705/followers",
            "following_url": "https://api.github.com/users/kunal8164705/following{/other_user}",
            "gists_url": "https://api.github.com/users/kunal8164705/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kunal8164705/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kunal8164705/subscriptions",
            "organizations_url": "https://api.github.com/users/kunal8164705/orgs",
            "repos_url": "https://api.github.com/users/kunal8164705/repos",
            "events_url": "https://api.github.com/users/kunal8164705/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kunal8164705/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-26T12:12:00Z",
        "updated_at": "2023-11-29T03:30:26Z",
        "closed_at": "2023-11-29T03:30:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13875",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13875",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13875.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13875.patch",
            "merged_at": "2023-11-29T03:30:26Z"
        },
        "body": "For large size  documents spacy splitter doesn't work it throws an error as shown in  below screenshot.\r\nReason its default max_length is 1000000 and there is no option to increase it. So i added it in this PR. \r\n\r\n![image](https://github.com/langchain-ai/langchain/assets/73680423/613625c3-0e21-4834-9aad-2a73cf56eecc)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13875/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13875/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13874",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13874/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13874/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13874/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13874",
        "id": 2011011732,
        "node_id": "PR_kwDOIPDwls5gX4tr",
        "number": 13874,
        "title": "Fix: (issue #13825) Getting an error with DallEAPIWrapper",
        "user": {
            "login": "ggeutzzang",
            "id": 375580,
            "node_id": "MDQ6VXNlcjM3NTU4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/375580?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ggeutzzang",
            "html_url": "https://github.com/ggeutzzang",
            "followers_url": "https://api.github.com/users/ggeutzzang/followers",
            "following_url": "https://api.github.com/users/ggeutzzang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ggeutzzang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ggeutzzang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ggeutzzang/subscriptions",
            "organizations_url": "https://api.github.com/users/ggeutzzang/orgs",
            "repos_url": "https://api.github.com/users/ggeutzzang/repos",
            "events_url": "https://api.github.com/users/ggeutzzang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ggeutzzang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-26T11:56:40Z",
        "updated_at": "2023-11-30T13:42:33Z",
        "closed_at": "2023-11-29T03:31:25Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13874",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13874",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13874.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13874.patch",
            "merged_at": "2023-11-29T03:31:25Z"
        },
        "body": "  - **Description:** As of OpenAI's Python package 1.0, the existing DallEAPIWrapper does not work correctly, so the example in the LangChain Documentation link below does not work either. \r\nhttps://python.langchain.com/docs/integrations/tools/dalle_image_generator \r\nAlso, since OpenAI only supports DALL-E version 2 or version 3, I modified the DallEAPIWrapper to support it. \r\n\r\n  - **Issue:** #13825 \r\n\r\n  - **Twitter handle:** ggeutzzang\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13874/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13874/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13872",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13872/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13872/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13872/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13872",
        "id": 2011005485,
        "node_id": "PR_kwDOIPDwls5gX3gV",
        "number": 13872,
        "title": "docs: fix link to `local_retrieval_qa`",
        "user": {
            "login": "superpung",
            "id": 59875060,
            "node_id": "MDQ6VXNlcjU5ODc1MDYw",
            "avatar_url": "https://avatars.githubusercontent.com/u/59875060?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/superpung",
            "html_url": "https://github.com/superpung",
            "followers_url": "https://api.github.com/users/superpung/followers",
            "following_url": "https://api.github.com/users/superpung/following{/other_user}",
            "gists_url": "https://api.github.com/users/superpung/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/superpung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/superpung/subscriptions",
            "organizations_url": "https://api.github.com/users/superpung/orgs",
            "repos_url": "https://api.github.com/users/superpung/repos",
            "events_url": "https://api.github.com/users/superpung/events{/privacy}",
            "received_events_url": "https://api.github.com/users/superpung/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 6232714104,
                "node_id": "LA_kwDOIPDwls8AAAABc3-reA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:XS",
                "name": "size:XS",
                "color": "C2E0C6",
                "default": false,
                "description": "This PR changes 0-9 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-26T11:35:48Z",
        "updated_at": "2023-11-27T03:19:17Z",
        "closed_at": "2023-11-27T03:16:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13872",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13872",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13872.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13872.patch",
            "merged_at": "2023-11-27T03:16:46Z"
        },
        "body": "<!-- Thank you for contributing to LangChain!\r\n\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\nThe original link in [this section](https://python.langchain.com/docs/use_cases/question_answering/#:~:text=locally%2Drunning%20models-,here,-.):\r\nhttps://python.langchain.com/docs/modules/use_cases/question_answering/local_retrieval_qa\r\n\r\nAfter fix:\r\nhttps://python.langchain.com/docs/use_cases/question_answering/local_retrieval_qa",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13872/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13872/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13871",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13871/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13871/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13871/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13871",
        "id": 2010984754,
        "node_id": "PR_kwDOIPDwls5gXzcD",
        "number": 13871,
        "title": "Fix: getting an error with DallEAPIWrapper #13825",
        "user": {
            "login": "ggeutzzang",
            "id": 375580,
            "node_id": "MDQ6VXNlcjM3NTU4MA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/375580?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ggeutzzang",
            "html_url": "https://github.com/ggeutzzang",
            "followers_url": "https://api.github.com/users/ggeutzzang/followers",
            "following_url": "https://api.github.com/users/ggeutzzang/following{/other_user}",
            "gists_url": "https://api.github.com/users/ggeutzzang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ggeutzzang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ggeutzzang/subscriptions",
            "organizations_url": "https://api.github.com/users/ggeutzzang/orgs",
            "repos_url": "https://api.github.com/users/ggeutzzang/repos",
            "events_url": "https://api.github.com/users/ggeutzzang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ggeutzzang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-26T10:26:19Z",
        "updated_at": "2023-11-26T10:29:28Z",
        "closed_at": "2023-11-26T10:28:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13871",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13871",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13871.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13871.patch",
            "merged_at": null
        },
        "body": "  - **Description:** Existing DallEAPIWrapper code will throw errors in OpenAI 1.0 and later packages. \r\nAlso, OpenAI now only supports DALL-E2 or DALL-E3.\r\nI modified the existing DallEAPIWrapper to accommodate this.\r\n\r\n  - **Issue:** #13825 \r\n\r\n  - **Twitter handle:** ggeutzzang\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13871/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13871/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13870",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13870/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13870/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13870/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13870",
        "id": 2010975800,
        "node_id": "I_kwDOIPDwls533Q44",
        "number": 13870,
        "title": "KENDRA: issue with user_context parameter when using get_relevant_documents method (langchain.retrievers.kendra.AmazonKendraRetriever)",
        "user": {
            "login": "jflopezcolmenarejo",
            "id": 57852024,
            "node_id": "MDQ6VXNlcjU3ODUyMDI0",
            "avatar_url": "https://avatars.githubusercontent.com/u/57852024?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jflopezcolmenarejo",
            "html_url": "https://github.com/jflopezcolmenarejo",
            "followers_url": "https://api.github.com/users/jflopezcolmenarejo/followers",
            "following_url": "https://api.github.com/users/jflopezcolmenarejo/following{/other_user}",
            "gists_url": "https://api.github.com/users/jflopezcolmenarejo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jflopezcolmenarejo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jflopezcolmenarejo/subscriptions",
            "organizations_url": "https://api.github.com/users/jflopezcolmenarejo/orgs",
            "repos_url": "https://api.github.com/users/jflopezcolmenarejo/repos",
            "events_url": "https://api.github.com/users/jflopezcolmenarejo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jflopezcolmenarejo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5959659008,
                "node_id": "LA_kwDOIPDwls8AAAABYzkuAA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20aws",
                "name": "integration: aws",
                "color": "C5DEF5",
                "default": false,
                "description": "Related to Amazon Web Services (AWS) integrations"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-26T09:55:33Z",
        "updated_at": "2023-12-11T15:22:58Z",
        "closed_at": "2023-12-11T15:22:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython version: 3.11.5\r\nLangchain version: 0.0.316\n\n### Who can help?\n\n@3coins \r\n@hw\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI am using Amazon Kendra as vector store to retrieve relevant documents as part of a Q&A application. As `UserContext` I am using User token:\r\n```\r\ndef get_kendra_json_token(user_name: str, groups: List[str]):\r\n    kendra_json_token = {\r\n        'username': user_name,\r\n        'groups': groups\r\n    }\r\n    return kendra_json_token\r\n```\r\nThis output is subsequently converted to: `'user_context': {'Token': json.dumps(kendra_json_token)}`\r\nEverything is fine when I build the Retriever:\r\n```\r\ndef get_kendra_doc_retriever(inputs: KendraRequest) -> AmazonKendraRetriever:\r\n    try:\r\n        kendra_client = boto3.client(\"kendra\", os.environ.get('AWS_REGION'))\r\n        retriever = AmazonKendraRetriever(\r\n            index_id=inputs.kendra_index_id,\r\n            top_k=get_param(AIAssistantParam.NB_KENDRA_DOCS),\r\n            client=kendra_client,\r\n            attribute_filter=inputs.attribute_filter,\r\n            user_context=inputs.user_context\r\n        )\r\n        logger.info(f'Kendra retriever successfully instantiated')\r\n        return retriever\r\n```\r\nBut then, when I call `get_relevant_documents`:\r\n```\r\ndef ask_question(\r\n        chain: Chain,\r\n        retriever: AmazonKendraRetriever,\r\n        question: str\r\n) -> Response:\r\n        \r\n    try:\r\n        context = retriever.get_relevant_documents(question)\r\n```\r\nI get this exception: `An error occurred (AccessDeniedException) when calling the Retrieve operation: The provided JSON token isn't valid. The username couldn't be parsed. Generate a new token with username as an array of strings and try your request again.` Of course, `username` should be an string.\r\n\r\nIf I change the code doing this (swapping the content of `user_name` and `groups` in the user token):\r\n```\r\ndef get_kendra_json_token(user_name: List[str], groups: str):\r\n    kendra_json_token = {\r\n        'username': groups,\r\n        'groups': user_name\r\n    }\r\n    return kendra_json_token\r\n```\r\neverything works fine. It is like `user_name` and `groups` inputs parameters are messed up somewhere.\r\n\r\n \n\n### Expected behavior\n\nNo exception should be raised when creating the user token as explained in the description above.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13870/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13870/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13869",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13869/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13869/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13869/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13869",
        "id": 2010969350,
        "node_id": "I_kwDOIPDwls533PUG",
        "number": 13869,
        "title": "Support for elastic index without metadata field",
        "user": {
            "login": "assaft",
            "id": 4903680,
            "node_id": "MDQ6VXNlcjQ5MDM2ODA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4903680?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/assaft",
            "html_url": "https://github.com/assaft",
            "followers_url": "https://api.github.com/users/assaft/followers",
            "following_url": "https://api.github.com/users/assaft/following{/other_user}",
            "gists_url": "https://api.github.com/users/assaft/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/assaft/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/assaft/subscriptions",
            "organizations_url": "https://api.github.com/users/assaft/orgs",
            "repos_url": "https://api.github.com/users/assaft/repos",
            "events_url": "https://api.github.com/users/assaft/events{/privacy}",
            "received_events_url": "https://api.github.com/users/assaft/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6077048506,
                "node_id": "LA_kwDOIPDwls8AAAABajhmug",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/integration:%20elasticsearch",
                "name": "integration: elasticsearch",
                "color": "DAB5EC",
                "default": false,
                "description": "Related to elastic/elasticsearch integrations"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-26T09:33:34Z",
        "updated_at": "2023-11-26T09:33:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nCurrently the `_search` function in `ElasticsearchStore` assumes that the `hit` object returned in the search has a `metadata` field under `_source`:\r\n```python\r\n                    hit[\"_source\"][\"metadata\"][field] = hit[\"_source\"][field]\r\n```\r\n\r\nHowever, this is not the case in the index I work with - it does not have a `metadata` field.  Due to that, an exception is raised.\r\n\r\nNote that the following code does not help - \r\n```python\r\n        if \"metadata\" not in fields:\r\n            fields.append(\"metadata\")\r\n```\r\nThe index still does not return any `metadata`.\r\n\r\nI assume that in indexes created by `ElasticsearchStore` the `metadata` field is forced, and therefor there is no such issue. However, when using indexes created by external tools, it is better not to assume that the field exists, and support the case where it doesn't. \r\n\r\n\r\n\n\n### Motivation\n\nI'd prefer to re-use the existing `ElasticsearchStore` instead of my own implementation of it.\n\n### Your contribution\n\nI think I can contribute a PR handling this issue, if the admins confirm the feature request.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13869/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13869/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13868",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13868/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13868/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13868/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13868",
        "id": 2010957361,
        "node_id": "PR_kwDOIPDwls5gXuBx",
        "number": 13868,
        "title": "Added score_threshold parameter to actually filter when retrieval search type is 'similarity_score_threshold'",
        "user": {
            "login": "Frank995",
            "id": 47689966,
            "node_id": "MDQ6VXNlcjQ3Njg5OTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/47689966?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Frank995",
            "html_url": "https://github.com/Frank995",
            "followers_url": "https://api.github.com/users/Frank995/followers",
            "following_url": "https://api.github.com/users/Frank995/following{/other_user}",
            "gists_url": "https://api.github.com/users/Frank995/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Frank995/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Frank995/subscriptions",
            "organizations_url": "https://api.github.com/users/Frank995/orgs",
            "repos_url": "https://api.github.com/users/Frank995/repos",
            "events_url": "https://api.github.com/users/Frank995/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Frank995/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-26T08:52:16Z",
        "updated_at": "2023-11-26T09:09:41Z",
        "closed_at": "2023-11-26T09:09:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13868",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13868",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13868.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13868.patch",
            "merged_at": null
        },
        "body": "Replace this entire comment with:\r\n  - **Description:** currently similarity_score_threshold mode doesn't filter properly. This fixes it by adding the parameter and the relative filter \r\n  - **Issue:** not sure, I think a few,\r\n ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13868/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13867",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13867/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13867/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13867/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13867",
        "id": 2010950164,
        "node_id": "I_kwDOIPDwls533KoU",
        "number": 13867,
        "title": "bug: When running by example getting error: TypeError: 'dict' object is not callable",
        "user": {
            "login": "lolevsky",
            "id": 4951086,
            "node_id": "MDQ6VXNlcjQ5NTEwODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4951086?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lolevsky",
            "html_url": "https://github.com/lolevsky",
            "followers_url": "https://api.github.com/users/lolevsky/followers",
            "following_url": "https://api.github.com/users/lolevsky/following{/other_user}",
            "gists_url": "https://api.github.com/users/lolevsky/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lolevsky/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lolevsky/subscriptions",
            "organizations_url": "https://api.github.com/users/lolevsky/orgs",
            "repos_url": "https://api.github.com/users/lolevsky/repos",
            "events_url": "https://api.github.com/users/lolevsky/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lolevsky/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-26T08:25:23Z",
        "updated_at": "2023-11-26T08:30:04Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n#### Environment variable\r\n\r\n```bash\r\nBENTOML_DEBUG=''\r\nBENTOML_QUIET=''\r\nBENTOML_BUNDLE_LOCAL_BUILD=''\r\nBENTOML_DO_NOT_TRACK=''\r\nBENTOML_CONFIG=''\r\nBENTOML_CONFIG_OPTIONS=''\r\nBENTOML_PORT=''\r\nBENTOML_HOST=''\r\nBENTOML_API_WORKERS=''\r\n```\r\n\r\n#### System information\r\n\r\n`bentoml`: 1.1.10\r\n`python`: 3.11.5\r\n`platform`: Linux-6.2.0-37-generic-x86_64-with-glibc2.35\r\n`uid_gid`: 1000:1000\r\n`conda`: 23.7.4\r\n`in_conda_env`: True\r\n<details><summary><code>conda_packages</code></summary>\r\n\r\n<br>\r\n\r\n```yaml\r\nname: openllm\r\nchannels:\r\n  - defaults\r\ndependencies:\r\n  - _libgcc_mutex=0.1=main\r\n  - _openmp_mutex=5.1=1_gnu\r\n  - bzip2=1.0.8=h7b6447c_0\r\n  - ca-certificates=2023.08.22=h06a4308_0\r\n  - ld_impl_linux-64=2.38=h1181459_1\r\n  - libffi=3.4.4=h6a678d5_0\r\n  - libgcc-ng=11.2.0=h1234567_1\r\n  - libgomp=11.2.0=h1234567_1\r\n  - libstdcxx-ng=11.2.0=h1234567_1\r\n  - libuuid=1.41.5=h5eee18b_0\r\n  - ncurses=6.4=h6a678d5_0\r\n  - openssl=3.0.12=h7f8727e_0\r\n  - pip=23.3.1=py311h06a4308_0\r\n  - python=3.11.5=h955ad1f_0\r\n  - readline=8.2=h5eee18b_0\r\n  - setuptools=68.0.0=py311h06a4308_0\r\n  - sqlite=3.41.2=h5eee18b_0\r\n  - tk=8.6.12=h1ccaba5_0\r\n  - wheel=0.41.2=py311h06a4308_0\r\n  - xz=5.4.2=h5eee18b_0\r\n  - zlib=1.2.13=h5eee18b_0\r\n  - pip:\r\n      - accelerate==0.24.1\r\n      - aiohttp==3.9.0\r\n      - aiosignal==1.3.1\r\n      - anyio==3.7.1\r\n      - appdirs==1.4.4\r\n      - asgiref==3.7.2\r\n      - attrs==23.1.0\r\n      - beautifulsoup4==4.12.2\r\n      - bentoml==1.1.10\r\n      - bitsandbytes==0.41.2.post2\r\n      - build==0.10.0\r\n      - cattrs==23.1.2\r\n      - certifi==2023.11.17\r\n      - charset-normalizer==3.3.2\r\n      - circus==0.18.0\r\n      - click==8.1.7\r\n      - click-option-group==0.5.6\r\n      - cloudpickle==3.0.0\r\n      - coloredlogs==15.0.1\r\n      - contextlib2==21.6.0\r\n      - cuda-python==12.3.0\r\n      - dataclasses-json==0.6.2\r\n      - datasets==2.15.0\r\n      - deepmerge==1.1.0\r\n      - deprecated==1.2.14\r\n      - dill==0.3.7\r\n      - distlib==0.3.7\r\n      - distro==1.8.0\r\n      - einops==0.7.0\r\n      - fastapi==0.104.1\r\n      - fastcore==1.5.29\r\n      - filelock==3.13.1\r\n      - filetype==1.2.0\r\n      - frozenlist==1.4.0\r\n      - fs==2.4.16\r\n      - fsspec==2023.10.0\r\n      - ghapi==1.0.4\r\n      - greenlet==3.0.1\r\n      - h11==0.14.0\r\n      - httpcore==1.0.2\r\n      - httptools==0.6.1\r\n      - httpx==0.25.2\r\n      - huggingface-hub==0.19.4\r\n      - humanfriendly==10.0\r\n      - idna==3.6\r\n      - importlib-metadata==6.8.0\r\n      - inflection==0.5.1\r\n      - jinja2==3.1.2\r\n      - jsonpatch==1.33\r\n      - jsonpointer==2.4\r\n      - jsonschema==4.20.0\r\n      - jsonschema-specifications==2023.11.1\r\n      - langchain==0.0.340\r\n      - langsmith==0.0.66\r\n      - markdown-it-py==3.0.0\r\n      - markupsafe==2.1.3\r\n      - marshmallow==3.20.1\r\n      - mdurl==0.1.2\r\n      - mpmath==1.3.0\r\n      - msgpack==1.0.7\r\n      - multidict==6.0.4\r\n      - multiprocess==0.70.15\r\n      - mypy-extensions==1.0.0\r\n      - networkx==3.2.1\r\n      - ninja==1.11.1.1\r\n      - numpy==1.26.2\r\n      - nvidia-cublas-cu12==12.1.3.1\r\n      - nvidia-cuda-cupti-cu12==12.1.105\r\n      - nvidia-cuda-nvrtc-cu12==12.1.105\r\n      - nvidia-cuda-runtime-cu12==12.1.105\r\n      - nvidia-cudnn-cu12==8.9.2.26\r\n      - nvidia-cufft-cu12==11.0.2.54\r\n      - nvidia-curand-cu12==10.3.2.106\r\n      - nvidia-cusolver-cu12==11.4.5.107\r\n      - nvidia-cusparse-cu12==12.1.0.106\r\n      - nvidia-ml-py==11.525.150\r\n      - nvidia-nccl-cu12==2.18.1\r\n      - nvidia-nvjitlink-cu12==12.3.101\r\n      - nvidia-nvtx-cu12==12.1.105\r\n      - openllm==0.4.28\r\n      - openllm-client==0.4.28\r\n      - openllm-core==0.4.28\r\n      - opentelemetry-api==1.20.0\r\n      - opentelemetry-instrumentation==0.41b0\r\n      - opentelemetry-instrumentation-aiohttp-client==0.41b0\r\n      - opentelemetry-instrumentation-asgi==0.41b0\r\n      - opentelemetry-sdk==1.20.0\r\n      - opentelemetry-semantic-conventions==0.41b0\r\n      - opentelemetry-util-http==0.41b0\r\n      - optimum==1.14.1\r\n      - orjson==3.9.10\r\n      - packaging==23.2\r\n      - pandas==2.1.3\r\n      - pathspec==0.11.2\r\n      - pillow==10.1.0\r\n      - pip-requirements-parser==32.0.1\r\n      - pip-tools==7.3.0\r\n      - platformdirs==4.0.0\r\n      - prometheus-client==0.19.0\r\n      - protobuf==4.25.1\r\n      - psutil==5.9.6\r\n      - pyarrow==14.0.1\r\n      - pyarrow-hotfix==0.6\r\n      - pydantic==1.10.13\r\n      - pygments==2.17.2\r\n      - pyparsing==3.1.1\r\n      - pyproject-hooks==1.0.0\r\n      - python-dateutil==2.8.2\r\n      - python-dotenv==1.0.0\r\n      - python-json-logger==2.0.7\r\n      - python-multipart==0.0.6\r\n      - pytz==2023.3.post1\r\n      - pyyaml==6.0.1\r\n      - pyzmq==25.1.1\r\n      - ray==2.8.0\r\n      - referencing==0.31.0\r\n      - regex==2023.10.3\r\n      - requests==2.31.0\r\n      - rich==13.7.0\r\n      - rpds-py==0.13.1\r\n      - safetensors==0.4.0\r\n      - schema==0.7.5\r\n      - scipy==1.11.4\r\n      - sentencepiece==0.1.99\r\n      - simple-di==0.1.5\r\n      - six==1.16.0\r\n      - sniffio==1.3.0\r\n      - soupsieve==2.5\r\n      - sqlalchemy==2.0.23\r\n      - starlette==0.27.0\r\n      - sympy==1.12\r\n      - tenacity==8.2.3\r\n      - tokenizers==0.15.0\r\n      - torch==2.1.0\r\n      - tornado==6.3.3\r\n      - tqdm==4.66.1\r\n      - transformers==4.35.2\r\n      - triton==2.1.0\r\n      - typing-extensions==4.8.0\r\n      - typing-inspect==0.9.0\r\n      - tzdata==2023.3\r\n      - urllib3==2.1.0\r\n      - uvicorn==0.24.0.post1\r\n      - uvloop==0.19.0\r\n      - virtualenv==20.24.7\r\n      - vllm==0.2.2\r\n      - watchfiles==0.21.0\r\n      - websockets==12.0\r\n      - wrapt==1.16.0\r\n      - xformers==0.0.22.post7\r\n      - xxhash==3.4.1\r\n      - yarl==1.9.3\r\n      - zipp==3.17.0\r\nprefix: /home/lolevsky/anaconda3/envs/openllm\r\n```\r\n\r\n</details>\r\n\r\n<details><summary><code>pip_packages</code></summary>\r\n\r\n<br>\r\n\r\n```\r\naccelerate==0.24.1\r\naiohttp==3.9.0\r\naiosignal==1.3.1\r\nanyio==3.7.1\r\nappdirs==1.4.4\r\nasgiref==3.7.2\r\nattrs==23.1.0\r\nbeautifulsoup4==4.12.2\r\nbentoml==1.1.10\r\nbitsandbytes==0.41.2.post2\r\nbuild==0.10.0\r\ncattrs==23.1.2\r\ncertifi==2023.11.17\r\ncharset-normalizer==3.3.2\r\ncircus==0.18.0\r\nclick==8.1.7\r\nclick-option-group==0.5.6\r\ncloudpickle==3.0.0\r\ncoloredlogs==15.0.1\r\ncontextlib2==21.6.0\r\ncuda-python==12.3.0\r\ndataclasses-json==0.6.2\r\ndatasets==2.15.0\r\ndeepmerge==1.1.0\r\nDeprecated==1.2.14\r\ndill==0.3.7\r\ndistlib==0.3.7\r\ndistro==1.8.0\r\neinops==0.7.0\r\nfastapi==0.104.1\r\nfastcore==1.5.29\r\nfilelock==3.13.1\r\nfiletype==1.2.0\r\nfrozenlist==1.4.0\r\nfs==2.4.16\r\nfsspec==2023.10.0\r\nghapi==1.0.4\r\ngreenlet==3.0.1\r\nh11==0.14.0\r\nhttpcore==1.0.2\r\nhttptools==0.6.1\r\nhttpx==0.25.2\r\nhuggingface-hub==0.19.4\r\nhumanfriendly==10.0\r\nidna==3.6\r\nimportlib-metadata==6.8.0\r\ninflection==0.5.1\r\nJinja2==3.1.2\r\njsonpatch==1.33\r\njsonpointer==2.4\r\njsonschema==4.20.0\r\njsonschema-specifications==2023.11.1\r\nlangchain==0.0.340\r\nlangsmith==0.0.66\r\nmarkdown-it-py==3.0.0\r\nMarkupSafe==2.1.3\r\nmarshmallow==3.20.1\r\nmdurl==0.1.2\r\nmpmath==1.3.0\r\nmsgpack==1.0.7\r\nmultidict==6.0.4\r\nmultiprocess==0.70.15\r\nmypy-extensions==1.0.0\r\nnetworkx==3.2.1\r\nninja==1.11.1.1\r\nnumpy==1.26.2\r\nnvidia-cublas-cu12==12.1.3.1\r\nnvidia-cuda-cupti-cu12==12.1.105\r\nnvidia-cuda-nvrtc-cu12==12.1.105\r\nnvidia-cuda-runtime-cu12==12.1.105\r\nnvidia-cudnn-cu12==8.9.2.26\r\nnvidia-cufft-cu12==11.0.2.54\r\nnvidia-curand-cu12==10.3.2.106\r\nnvidia-cusolver-cu12==11.4.5.107\r\nnvidia-cusparse-cu12==12.1.0.106\r\nnvidia-ml-py==11.525.150\r\nnvidia-nccl-cu12==2.18.1\r\nnvidia-nvjitlink-cu12==12.3.101\r\nnvidia-nvtx-cu12==12.1.105\r\nopenllm==0.4.28\r\nopenllm-client==0.4.28\r\nopenllm-core==0.4.28\r\nopentelemetry-api==1.20.0\r\nopentelemetry-instrumentation==0.41b0\r\nopentelemetry-instrumentation-aiohttp-client==0.41b0\r\nopentelemetry-instrumentation-asgi==0.41b0\r\nopentelemetry-sdk==1.20.0\r\nopentelemetry-semantic-conventions==0.41b0\r\nopentelemetry-util-http==0.41b0\r\noptimum==1.14.1\r\norjson==3.9.10\r\npackaging==23.2\r\npandas==2.1.3\r\npathspec==0.11.2\r\nPillow==10.1.0\r\npip-requirements-parser==32.0.1\r\npip-tools==7.3.0\r\nplatformdirs==4.0.0\r\nprometheus-client==0.19.0\r\nprotobuf==4.25.1\r\npsutil==5.9.6\r\npyarrow==14.0.1\r\npyarrow-hotfix==0.6\r\npydantic==1.10.13\r\nPygments==2.17.2\r\npyparsing==3.1.1\r\npyproject_hooks==1.0.0\r\npython-dateutil==2.8.2\r\npython-dotenv==1.0.0\r\npython-json-logger==2.0.7\r\npython-multipart==0.0.6\r\npytz==2023.3.post1\r\nPyYAML==6.0.1\r\npyzmq==25.1.1\r\nray==2.8.0\r\nreferencing==0.31.0\r\nregex==2023.10.3\r\nrequests==2.31.0\r\nrich==13.7.0\r\nrpds-py==0.13.1\r\nsafetensors==0.4.0\r\nschema==0.7.5\r\nscipy==1.11.4\r\nsentencepiece==0.1.99\r\nsimple-di==0.1.5\r\nsix==1.16.0\r\nsniffio==1.3.0\r\nsoupsieve==2.5\r\nSQLAlchemy==2.0.23\r\nstarlette==0.27.0\r\nsympy==1.12\r\ntenacity==8.2.3\r\ntokenizers==0.15.0\r\ntorch==2.1.0\r\ntornado==6.3.3\r\ntqdm==4.66.1\r\ntransformers==4.35.2\r\ntriton==2.1.0\r\ntyping-inspect==0.9.0\r\ntyping_extensions==4.8.0\r\ntzdata==2023.3\r\nurllib3==2.1.0\r\nuvicorn==0.24.0.post1\r\nuvloop==0.19.0\r\nvirtualenv==20.24.7\r\nvllm==0.2.2\r\nwatchfiles==0.21.0\r\nwebsockets==12.0\r\nwrapt==1.16.0\r\nxformers==0.0.22.post7\r\nxxhash==3.4.1\r\nyarl==1.9.3\r\nzipp==3.17.0\r\n```\r\n\r\n</details>\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI am following the example and wrote the code:\r\n```\r\nllm = OpenLLM(server_url=server_url, server_type='http')\r\nllm(\"What is the difference between a duck and a goose? And why there are so many Goose in Canada?\")\r\n```\r\nSeems like First request is hitting the server\r\n```\r\n(scheme=http,method=POST,path=/v1/metadata,type=application/json,length=2) (status=200\r\n```\r\nTill now its look promising, but then I am getting error ```TypeError: 'dict' object is not callable```.\r\n\r\nAs attached in the trace:\r\n```\r\nTraceback (most recent call last):\r\n  File \"/home/lolevsky/Github/Zodiac/main.py\", line 24, in <module>\r\n    run_zodiac()\r\n  File \"/home/lolevsky/Github/Zodiac/main.py\", line 9, in run_zodiac\r\n    resA = llm(\"What is the difference between a duck and a goose? And why there are so many Goose in Canada?\")\r\n  File \"/usr/local/lib/python3.10/dist-packages/langchain/llms/base.py\", line 876, in __call__\r\n    self.generate(\r\n  File \"/usr/local/lib/python3.10/dist-packages/langchain/llms/base.py\", line 626, in generate\r\n    params = self.dict()\r\n  File \"/usr/local/lib/python3.10/dist-packages/langchain/llms/base.py\", line 974, in dict\r\n    starter_dict = dict(self._identifying_params)\r\n  File \"/usr/local/lib/python3.10/dist-packages/langchain/llms/openllm.py\", line 220, in _identifying_params\r\n    self.llm_kwargs.update(self._client._config())\r\nTypeError: 'dict' object is not callable\r\n```\r\n\r\n\r\n### To reproduce\r\n\r\nThis is how I had setup the envirment:\r\n- conda create --name openllm python=3.11\r\n- conda activate openllm\r\n- pip install openllm\r\n- pip install langchain\n\n### Expected behavior\n\nShould not get errors, should hit the server for prompting",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13867/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13867/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13866",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13866/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13866/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13866/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13866",
        "id": 2010937355,
        "node_id": "PR_kwDOIPDwls5gXqGN",
        "number": 13866,
        "title": "Update PGVector __query_collection with extended filters",
        "user": {
            "login": "Frank995",
            "id": 47689966,
            "node_id": "MDQ6VXNlcjQ3Njg5OTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/47689966?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Frank995",
            "html_url": "https://github.com/Frank995",
            "followers_url": "https://api.github.com/users/Frank995/followers",
            "following_url": "https://api.github.com/users/Frank995/following{/other_user}",
            "gists_url": "https://api.github.com/users/Frank995/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Frank995/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Frank995/subscriptions",
            "organizations_url": "https://api.github.com/users/Frank995/orgs",
            "repos_url": "https://api.github.com/users/Frank995/repos",
            "events_url": "https://api.github.com/users/Frank995/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Frank995/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "eyurtsev",
                "id": 3205522,
                "node_id": "MDQ6VXNlcjMyMDU1MjI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/eyurtsev",
                "html_url": "https://github.com/eyurtsev",
                "followers_url": "https://api.github.com/users/eyurtsev/followers",
                "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
                "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
                "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
                "repos_url": "https://api.github.com/users/eyurtsev/repos",
                "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
                "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-26T07:41:30Z",
        "updated_at": "2023-11-27T03:22:11Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13866",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13866",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13866.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13866.patch",
            "merged_at": null
        },
        "body": "  - **Description:** current SQL filtering capabilities of PGVector document matching are limited to \"is equal\" and \"is in\", this extends it and generalise the code to any (potential) future other matching type \r\n  - **Dependencies:** none\r\n  - **Tag maintainer:** @hwchase17 ,\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13866/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13866/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13865",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13865/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13865/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13865/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13865",
        "id": 2010911639,
        "node_id": "I_kwDOIPDwls533BOX",
        "number": 13865,
        "title": "DOC: How langchain_experimental.rl_chain works",
        "user": {
            "login": "austinmw",
            "id": 12224358,
            "node_id": "MDQ6VXNlcjEyMjI0MzU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12224358?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/austinmw",
            "html_url": "https://github.com/austinmw",
            "followers_url": "https://api.github.com/users/austinmw/followers",
            "following_url": "https://api.github.com/users/austinmw/following{/other_user}",
            "gists_url": "https://api.github.com/users/austinmw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/austinmw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/austinmw/subscriptions",
            "organizations_url": "https://api.github.com/users/austinmw/orgs",
            "repos_url": "https://api.github.com/users/austinmw/repos",
            "events_url": "https://api.github.com/users/austinmw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/austinmw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-26T06:33:13Z",
        "updated_at": "2023-11-28T21:54:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nHi, can we get more documentation on `langchain_experimental.rl_chain`? I'm having trouble wrapping my head around how it works, and the documentation is sparse. \r\n\r\nFrom the notebook intro, originally I thought it was going to tune the human written prompt template and then output a new and improved prompt template that it found was better. However it seems to be doing something else.\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13865/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13865/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13864",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13864/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13864/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13864/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13864",
        "id": 2010895096,
        "node_id": "PR_kwDOIPDwls5gXhqm",
        "number": 13864,
        "title": "Add object parsing functionality",
        "user": {
            "login": "Amyh102",
            "id": 15304273,
            "node_id": "MDQ6VXNlcjE1MzA0Mjcz",
            "avatar_url": "https://avatars.githubusercontent.com/u/15304273?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Amyh102",
            "html_url": "https://github.com/Amyh102",
            "followers_url": "https://api.github.com/users/Amyh102/followers",
            "following_url": "https://api.github.com/users/Amyh102/following{/other_user}",
            "gists_url": "https://api.github.com/users/Amyh102/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Amyh102/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Amyh102/subscriptions",
            "organizations_url": "https://api.github.com/users/Amyh102/orgs",
            "repos_url": "https://api.github.com/users/Amyh102/repos",
            "events_url": "https://api.github.com/users/Amyh102/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Amyh102/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            },
            {
                "id": 6232714108,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rfA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:S",
                "name": "size:S",
                "color": "BFDADC",
                "default": false,
                "description": "This PR changes 10-29 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-26T05:08:26Z",
        "updated_at": "2023-11-29T03:33:17Z",
        "closed_at": "2023-11-29T03:33:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13864",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13864",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13864.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13864.patch",
            "merged_at": "2023-11-29T03:33:17Z"
        },
        "body": "* **Description:** Parses huggingface dataset Sequence objects into strings for Document loading.\r\n* **Issue:** Fixes #10674 \r\n* **Tag maintainter:** @baskaryan @eyurtsev \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13864/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13864/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13863",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13863/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13863/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13863/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13863",
        "id": 2010867450,
        "node_id": "I_kwDOIPDwls5322b6",
        "number": 13863,
        "title": "CalledProcessError: bash command for LLAVA in Multimodal giving error ",
        "user": {
            "login": "andysingal",
            "id": 20493493,
            "node_id": "MDQ6VXNlcjIwNDkzNDkz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20493493?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/andysingal",
            "html_url": "https://github.com/andysingal",
            "followers_url": "https://api.github.com/users/andysingal/followers",
            "following_url": "https://api.github.com/users/andysingal/following{/other_user}",
            "gists_url": "https://api.github.com/users/andysingal/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/andysingal/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/andysingal/subscriptions",
            "organizations_url": "https://api.github.com/users/andysingal/orgs",
            "repos_url": "https://api.github.com/users/andysingal/repos",
            "events_url": "https://api.github.com/users/andysingal/events{/privacy}",
            "received_events_url": "https://api.github.com/users/andysingal/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-26T02:43:06Z",
        "updated_at": "2023-11-27T20:32:19Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nRTX 3090\r\n```\r\nHere is notebook for reference: https://colab.research.google.com/drive/1Rwdrji34CV4QJofVl9jAT7-EwodvphA4?usp=sharing\r\n```\r\n\r\n### Who can help?\r\n\r\n@agola11 @ey\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```\r\n!wget -O /content/models/ggml-model-f16.gguf  https://huggingface.co/mys/ggml_llava-v1.5-7b/resolve/main/ggml-model-f16.gguf\r\n!wget  -O /content/models/ggml-model-q5_k.gguf  https://huggingface.co/mys/ggml_llava-v1.5-7b/resolve/main/ggml-model-q5_k.gguf\r\n```\r\n```\r\n%%bash\r\n\r\n# Define the directory containing the images\r\nIMG_DIR=/content/LLAVA/\r\n\r\n# Loop through each image in the directory\r\nfor img in \"${IMG_DIR}\"*.jpg; do\r\n    # Extract the base name of the image without extension\r\n    base_name=$(basename \"$img\" .jpg)\r\n\r\n    # Define the output file name based on the image name\r\n    output_file=\"${IMG_DIR}${base_name}.txt\"\r\n\r\n    # Execute the command and save the output to the defined output file\r\n    /content/llama.cpp/bin/llava -m /content/models/ggml-model-q5_k.gguf --mmproj /content/models//mmproj-model-f16.gguf --temp 0.1 -p \"Describe the image in detail. Be specific about graphs, such as bar plots.\" --image \"$img\" > \"$output_file\"\r\n\r\ndone\r\n```\r\ngives error:\r\n```\r\nbash: line 14: /content/llama.cpp/bin/llava: No such file or directory\r\nbash: line 14: /content/llama.cpp/bin/llava: No such file or directory\r\nbash: line 14: /content/llama.cpp/bin/llava: No such file or directory\r\nbash: line 14: /content/llama.cpp/bin/llava: No such file or directory\r\nbash: line 14: /content/llama.cpp/bin/llava: No such file or directory\r\nbash: line 14: /content/llama.cpp/bin/llava: No such file or directory\r\nbash: line 14: /content/llama.cpp/bin/llava: No such file or directory\r\nbash: line 14: /content/llama.cpp/bin/llava: No such file or directory\r\nbash: line 14: /content/llama.cpp/bin/llava: No such file or directory\r\nbash: line 14: /content/llama.cpp/bin/llava: No such file or directory\r\n---------------------------------------------------------------------------\r\nCalledProcessError                        Traceback (most recent call last)\r\n[<ipython-input-51-e049cdfbb7ce>](https://localhost:8080/#) in <cell line: 1>()\r\n----> 1 get_ipython().run_cell_magic('bash', '', '\\n# Define the directory containing the images\\nIMG_DIR=/content/LLAVA/\\n\\n# Loop through each image in the directory\\nfor img in \"${IMG_DIR}\"*.jpg; do\\n    # Extract the base name of the image without extension\\n    base_name=$(basename \"$img\" .jpg)\\n\\n    # Define the output file name based on the image name\\n    output_file=\"${IMG_DIR}${base_name}.txt\"\\n\\n    # Execute the command and save the output to the defined output file\\n    /content/llama.cpp/bin/llava -m /content/models/ggml-model-q5_k.gguf --mmproj /content/models//mmproj-model-f16.gguf --temp 0.1 -p \"Describe the image in detail. Be specific about graphs, such as bar plots.\" --image \"$img\" > \"$output_file\"\\n\\ndone\\n')\r\n\r\n4 frames\r\n<decorator-gen-103> in shebang(self, line, cell)\r\n\r\n[/usr/local/lib/python3.10/dist-packages/IPython/core/magics/script.py](https://localhost:8080/#) in shebang(self, line, cell)\r\n    243             sys.stderr.flush()\r\n    244         if args.raise_error and p.returncode!=0:\r\n--> 245             raise CalledProcessError(p.returncode, cell, output=out, stderr=err)\r\n    246 \r\n    247     def _run_script(self, p, cell, to_close):\r\n\r\nCalledProcessError: Command 'b'\\n# Define the directory containing the images\\nIMG_DIR=/content/LLAVA/\\n\\n# Loop through each image in the directory\\nfor img in \"${IMG_DIR}\"*.jpg; do\\n    # Extract the base name of the image without extension\\n    base_name=$(basename \"$img\" .jpg)\\n\\n    # Define the output file name based on the image name\\n    output_file=\"${IMG_DIR}${base_name}.txt\"\\n\\n    # Execute the command and save the output to the defined output file\\n    /content/llama.cpp/bin/llava -m /content/models/ggml-model-q5_k.gguf --mmproj /content/models//mmproj-model-f16.gguf --temp 0.1 -p \"Describe the image in detail. Be specific about graphs, such as bar plots.\" --image \"$img\" > \"$output_file\"\\n\\ndone\\n'' returned non-zero exit status 127.\r\n```\r\n\r\n### Expected behavior\r\n\r\nit should run , but do not understand \r\n```\r\nfrom langchain.llms import LlamaCpp\r\nllm = LlamaCpp(model_path=\"/path/to/llama/model\")\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13863/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13863/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13862",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13862/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13862/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13862/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13862",
        "id": 2010846253,
        "node_id": "PR_kwDOIPDwls5gXYVv",
        "number": 13862,
        "title": "Docs `adapters` moved",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            },
            {
                "id": 6232714119,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rhw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:M",
                "name": "size:M",
                "color": "C5DEF5",
                "default": false,
                "description": "This PR changes 30-99 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-26T00:57:39Z",
        "updated_at": "2023-11-27T22:07:36Z",
        "closed_at": "2023-11-27T21:05:43Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13862",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13862",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13862.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13862.patch",
            "merged_at": "2023-11-27T21:05:43Z"
        },
        "body": "Current docs for adapters are in the `Guides/Adapters which is not a good place.\r\n- moved Adapters into `Integratons/Components/Adapters/\r\n- simplified the OpenAI adapter notebook\r\n- rerouted the old OpenAI adapter page URL to a new one.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13862/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13862/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13861",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13861/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13861/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13861/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13861",
        "id": 2010829835,
        "node_id": "I_kwDOIPDwls532tQL",
        "number": 13861,
        "title": "TypeError using Baseten in a RAG",
        "user": {
            "login": "nclsmitchell",
            "id": 11957979,
            "node_id": "MDQ6VXNlcjExOTU3OTc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/11957979?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nclsmitchell",
            "html_url": "https://github.com/nclsmitchell",
            "followers_url": "https://api.github.com/users/nclsmitchell/followers",
            "following_url": "https://api.github.com/users/nclsmitchell/following{/other_user}",
            "gists_url": "https://api.github.com/users/nclsmitchell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nclsmitchell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nclsmitchell/subscriptions",
            "organizations_url": "https://api.github.com/users/nclsmitchell/orgs",
            "repos_url": "https://api.github.com/users/nclsmitchell/repos",
            "events_url": "https://api.github.com/users/nclsmitchell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nclsmitchell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-25T23:39:12Z",
        "updated_at": "2023-11-25T23:50:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHello,\r\n\r\nI am trying to use a Baseten base LLM in a RAG pipeline.\r\n\r\n```\r\nfrom operator import itemgetter\r\nfrom langchain.llms import Baseten\r\nfrom langchain.schema.runnable import RunnableMap\r\n\r\nllm = Baseten(model=\"MODEL_ID\", verbose=True)\r\n\r\nrag_chain_from_docs = (\r\n    {\r\n        \"context\": lambda input: format_docs(input[\"documents\"]),\r\n        \"question\": itemgetter(\"question\"),\r\n    }\r\n    | rag_prompt_custom\r\n    | llm\r\n    | StrOutputParser()\r\n)\r\nrag_chain_with_source = RunnableMap(\r\n    {\"documents\": retriever, \"question\": RunnablePassthrough()}\r\n) | {\r\n    \"documents\": lambda input: [doc.metadata for doc in input[\"documents\"]],\r\n    \"answer\": rag_chain_from_docs,\r\n}\r\n\r\nrag_chain_with_source.invoke(\"What is Task Decomposition\")\r\n```\r\n\r\nI am using a FAISS retriever and I am getting the following error on the `.invoke()` method:\r\n\r\n```\r\nFile \"/Users/usr/miniconda3/envs/langchain/lib/python3.11/site-packages/langchain/llms/baseten.py\", line 69, in _call\r\n    response = model.predict({\"prompt\": prompt, **kwargs})\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/usr/miniconda3/envs/langchain/lib/python3.11/site-packages/baseten/common/core.py\", line 67, in wrapper\r\n    return func(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/usr/miniconda3/envs/langchain/lib/python3.11/site-packages/baseten/baseten_deployed_model.py\", line 124, in predict\r\n    raise TypeError('predict can be called with either a list, a pandas DataFrame, or a numpy array.')\r\nTypeError: predict can be called with either a list, a pandas DataFrame, or a numpy array.\r\n```\r\n\r\nIt seems the `model.predict()` method is expecting a list. Does anyone already encountered this error?\r\n\r\nThank you in advance !\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nfrom operator import itemgetter\r\nfrom langchain.llms import Baseten\r\nfrom langchain.schema.runnable import RunnableMap\r\n\r\nllm = Baseten(model=\"MODEL_ID\", verbose=True)\r\n\r\nrag_chain_from_docs = (\r\n    {\r\n        \"context\": lambda input: format_docs(input[\"documents\"]),\r\n        \"question\": itemgetter(\"question\"),\r\n    }\r\n    | rag_prompt_custom\r\n    | llm\r\n    | StrOutputParser()\r\n)\r\nrag_chain_with_source = RunnableMap(\r\n    {\"documents\": retriever, \"question\": RunnablePassthrough()}\r\n) | {\r\n    \"documents\": lambda input: [doc.metadata for doc in input[\"documents\"]],\r\n    \"answer\": rag_chain_from_docs,\r\n}\r\n\r\nrag_chain_with_source.invoke(\"What is Task Decomposition\")\r\n```\n\n### Expected behavior\n\nIt seems the `model.predict()` method is expecting a list. Could you fix this issue?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13861/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13861/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13860",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13860/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13860/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13860/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/13860",
        "id": 2010827140,
        "node_id": "PR_kwDOIPDwls5gXUrK",
        "number": 13860,
        "title": "Serpapi google jobs tool",
        "user": {
            "login": "zushenglu",
            "id": 58179949,
            "node_id": "MDQ6VXNlcjU4MTc5OTQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58179949?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zushenglu",
            "html_url": "https://github.com/zushenglu",
            "followers_url": "https://api.github.com/users/zushenglu/followers",
            "following_url": "https://api.github.com/users/zushenglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/zushenglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zushenglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zushenglu/subscriptions",
            "organizations_url": "https://api.github.com/users/zushenglu/orgs",
            "repos_url": "https://api.github.com/users/zushenglu/repos",
            "events_url": "https://api.github.com/users/zushenglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zushenglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899412369,
                "node_id": "LA_kwDOIPDwls8AAAABJAcZkQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20agent",
                "name": "area: agent",
                "color": "BFD4F2",
                "default": false,
                "description": "Related to agents module"
            },
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            },
            {
                "id": 6232714126,
                "node_id": "LA_kwDOIPDwls8AAAABc3-rjg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/size:L",
                "name": "size:L",
                "color": "BFD4F2",
                "default": false,
                "description": "This PR changes 100-499 lines, ignoring generated files."
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-25T23:24:58Z",
        "updated_at": "2023-11-25T23:38:00Z",
        "closed_at": "2023-11-25T23:26:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/13860",
            "html_url": "https://github.com/langchain-ai/langchain/pull/13860",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/13860.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/13860.patch",
            "merged_at": null
        },
        "body": "Implemented tool for searching google jobs\r\n\r\n<!-- Thank you for contributing to LangChain!\r\nReplace this entire comment with:\r\n  - **Description:** a description of the change, \r\n  - **Issue:** the issue # it fixes (if applicable),\r\n  - **Dependencies:** any dependencies required for this change,\r\n  - **Tag maintainer:** for a quicker response, tag the relevant maintainer (see below),\r\n  - **Twitter handle:** we announce bigger features on Twitter. If your PR gets announced, and you'd like a mention, we'll gladly shout you out!\r\n\r\nPlease make sure your PR is passing linting and testing before submitting. Run `make format`, `make lint` and `make test` to check this locally.\r\n\r\nSee contribution guidelines for more information on how to write/run tests, lint, etc: \r\nhttps://github.com/langchain-ai/langchain/blob/master/.github/CONTRIBUTING.md\r\n\r\nIf you're adding a new integration, please include:\r\n  1. a test for the integration, preferably unit tests that do not rely on network access,\r\n  2. an example notebook showing its use. It lives in `docs/extras` directory.\r\n\r\nIf no one reviews your PR within a few days, please @-mention one of @baskaryan, @eyurtsev, @hwchase17.\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13860/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13860/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13859",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13859/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13859/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13859/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/13859",
        "id": 2010826017,
        "node_id": "I_kwDOIPDwls532sUh",
        "number": 13859,
        "title": "Issue: <Please write a comprehensive title after the 'Issue: ' prefix>",
        "user": {
            "login": "isayahc",
            "id": 18591926,
            "node_id": "MDQ6VXNlcjE4NTkxOTI2",
            "avatar_url": "https://avatars.githubusercontent.com/u/18591926?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/isayahc",
            "html_url": "https://github.com/isayahc",
            "followers_url": "https://api.github.com/users/isayahc/followers",
            "following_url": "https://api.github.com/users/isayahc/following{/other_user}",
            "gists_url": "https://api.github.com/users/isayahc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/isayahc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/isayahc/subscriptions",
            "organizations_url": "https://api.github.com/users/isayahc/orgs",
            "repos_url": "https://api.github.com/users/isayahc/repos",
            "events_url": "https://api.github.com/users/isayahc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/isayahc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            },
            {
                "id": 5680700848,
                "node_id": "LA_kwDOIPDwls8AAAABUpidsA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:question",
                "name": "auto:question",
                "color": "BFD4F2",
                "default": false,
                "description": "A specific question about the codebase, product, project, or how to use a feature"
            },
            {
                "id": 5820539098,
                "node_id": "LA_kwDOIPDwls8AAAABWu5g2g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20models",
                "name": "area: models",
                "color": "bfdadc",
                "default": false,
                "description": "Related to LLMs or chat model modules"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-25T23:18:35Z",
        "updated_at": "2023-11-26T01:05:46Z",
        "closed_at": "2023-11-26T01:05:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\n```# Load Tools\r\n    tools = load_tools([\"serpapi\",\"langchain_experimental_python_repl\"], llm=llm)\r\n```\r\nerror \r\n```\r\nException has occurred: ImportError\r\nThis tool has been moved to langchain experiment. This tool has access to a python REPL. For best practices make sure to sandbox this tool. Read  To keep using this code as is, install langchain experimental and update relevant imports replacing 'langchain' with 'langchain_experimental'\r\n  File \"/home/isayahc/projects/buy-bot/react_agent.py\", line 49, in create_agent_executor\r\n    tools = load_tools([\"serpapi\",\"python_repl\"], llm=llm)\r\n  File \"/home/isayahc/projects/buy-bot/react_agent.py\", line 88, in <module>\r\n    agent_executor = create_agent_executor()\r\nImportError: This tool has been moved to langchain experiment. This tool has access to a python REPL. For best practices make sure to sandbox this tool. Read h To keep using this code as is, install langchain experimental and update relevant imports replacing 'langchain' with 'langchain_experimental'\r\n```\r\nhow do i fix this?\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/13859/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/13859/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    }
]