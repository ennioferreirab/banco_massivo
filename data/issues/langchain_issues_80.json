[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6054",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6054/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6054/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6054/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6054",
        "id": 1753188999,
        "node_id": "PR_kwDOIPDwls5Sy-Cx",
        "number": 6054,
        "title": " feat: Add support for the Solidity language",
        "user": {
            "login": "0xJord4n",
            "id": 74933942,
            "node_id": "MDQ6VXNlcjc0OTMzOTQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/74933942?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/0xJord4n",
            "html_url": "https://github.com/0xJord4n",
            "followers_url": "https://api.github.com/users/0xJord4n/followers",
            "following_url": "https://api.github.com/users/0xJord4n/following{/other_user}",
            "gists_url": "https://api.github.com/users/0xJord4n/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/0xJord4n/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/0xJord4n/subscriptions",
            "organizations_url": "https://api.github.com/users/0xJord4n/orgs",
            "repos_url": "https://api.github.com/users/0xJord4n/repos",
            "events_url": "https://api.github.com/users/0xJord4n/events{/privacy}",
            "received_events_url": "https://api.github.com/users/0xJord4n/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-12T17:07:58Z",
        "updated_at": "2023-06-14T21:25:09Z",
        "closed_at": "2023-06-14T21:25:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6054",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6054",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6054.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6054.patch",
            "merged_at": "2023-06-14T21:25:02Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n## Add Solidity programming language support for code splitter.\r\n\r\nTwitter: @0xjord4n_\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n@hwchase17\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @hwchase17\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6054/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6054/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6053",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6053/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6053/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6053/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6053",
        "id": 1753106960,
        "node_id": "I_kwDOIPDwls5ofkoQ",
        "number": 6053,
        "title": "Progress bar for LLMChain",
        "user": {
            "login": "louisoutin",
            "id": 25135521,
            "node_id": "MDQ6VXNlcjI1MTM1NTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/25135521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/louisoutin",
            "html_url": "https://github.com/louisoutin",
            "followers_url": "https://api.github.com/users/louisoutin/followers",
            "following_url": "https://api.github.com/users/louisoutin/following{/other_user}",
            "gists_url": "https://api.github.com/users/louisoutin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/louisoutin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/louisoutin/subscriptions",
            "organizations_url": "https://api.github.com/users/louisoutin/orgs",
            "repos_url": "https://api.github.com/users/louisoutin/repos",
            "events_url": "https://api.github.com/users/louisoutin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/louisoutin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-12T16:21:29Z",
        "updated_at": "2023-10-31T12:20:58Z",
        "closed_at": "2023-09-22T16:07:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "\r\nHello,\r\nIs there a way to track progress when giving a list of inputs to a LLMChain object using tqdm for example?\r\nI didn't see any parameter that would allow me to use tqdm.\r\nI also checked if I could write a Callback for this. But the hooks doesn't seem to allow for that.\r\nAnyone managed to use some progress bar?\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6053/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6053/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6052",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6052/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6052/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6052/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6052",
        "id": 1753074942,
        "node_id": "I_kwDOIPDwls5ofcz-",
        "number": 6052,
        "title": "tables names are not case insensitive in the Snowflake Client",
        "user": {
            "login": "RoniFinTech2",
            "id": 109775507,
            "node_id": "U_kgDOBosKkw",
            "avatar_url": "https://avatars.githubusercontent.com/u/109775507?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/RoniFinTech2",
            "html_url": "https://github.com/RoniFinTech2",
            "followers_url": "https://api.github.com/users/RoniFinTech2/followers",
            "following_url": "https://api.github.com/users/RoniFinTech2/following{/other_user}",
            "gists_url": "https://api.github.com/users/RoniFinTech2/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/RoniFinTech2/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/RoniFinTech2/subscriptions",
            "organizations_url": "https://api.github.com/users/RoniFinTech2/orgs",
            "repos_url": "https://api.github.com/users/RoniFinTech2/repos",
            "events_url": "https://api.github.com/users/RoniFinTech2/events{/privacy}",
            "received_events_url": "https://api.github.com/users/RoniFinTech2/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-12T16:01:50Z",
        "updated_at": "2023-06-12T17:44:27Z",
        "closed_at": "2023-06-12T17:44:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain==0.0.195\r\npython 3.9\r\n\r\nthe client doesn't recognize 'MY_TABLE' and 'my_table' as the same table.\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nwhen initializing the sql client, add the param `include_tables` and set the strings in upper case fashion.\r\n`sql_database = SQLDatabase(engine,view_support=True, include_tables=[\"MY_TRADE\"])`\r\n\r\nyou should see this error:\r\n`ValueError: include_tables {'MY_TRADE'} not found in database`\r\n\r\nHowever, everything should go through with:\r\n`sql_database = SQLDatabase(engine,view_support=True, include_tables=[\"my_trade\"])`\n\n### Expected behavior\n\n`sql_database = SQLDatabase(..., include_tables=[\"MY_TRADE\"])`\r\nto be equal to \r\n`sql_database = SQLDatabase(..., include_tables=[\"my_trade\"])`",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6052/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6052/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6051",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6051/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6051/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6051/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6051",
        "id": 1752952281,
        "node_id": "PR_kwDOIPDwls5SyKl5",
        "number": 6051,
        "title": "Mitigate issue #5923 (Prompt injection -> SQL injection in SQLChain)",
        "user": {
            "login": "boazwasserman",
            "id": 49598618,
            "node_id": "MDQ6VXNlcjQ5NTk4NjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/49598618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boazwasserman",
            "html_url": "https://github.com/boazwasserman",
            "followers_url": "https://api.github.com/users/boazwasserman/followers",
            "following_url": "https://api.github.com/users/boazwasserman/following{/other_user}",
            "gists_url": "https://api.github.com/users/boazwasserman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/boazwasserman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/boazwasserman/subscriptions",
            "organizations_url": "https://api.github.com/users/boazwasserman/orgs",
            "repos_url": "https://api.github.com/users/boazwasserman/repos",
            "events_url": "https://api.github.com/users/boazwasserman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/boazwasserman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-12T14:58:10Z",
        "updated_at": "2023-08-28T17:27:34Z",
        "closed_at": "2023-08-28T17:27:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6051",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6051",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6051.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6051.patch",
            "merged_at": null
        },
        "body": "Add validation controls to the SQL chain to mitigate SQL injection issues.\r\nUsing sqlfluff to perform static analysis:\r\n1. Disallow non select statement (INSERT, DROP)\r\n2. Disallow wildcard select statement\r\n\r\nSome dialects that are supported by langchain are not supported by sqlfluff. It is possible to disallow usage of such dialects as well.\r\n\r\nAlso fixed the SQL integration tests which were not working as expected\r\n\r\nFixes #5923 \r\n\r\nBTW, looks like there is a huge diff on poetry.lock which doesn't look OK to me, would appreciate any advice on how to resovle it (I was following the instructions found here https://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md)\r\n\r\n#### Who can review?\r\n\r\n@hwchase17 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6051/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6051/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6050",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6050/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6050/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6050/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6050",
        "id": 1752930109,
        "node_id": "PR_kwDOIPDwls5SyFvF",
        "number": 6050,
        "title": "Implement RDF Graph and RDF QA Chain",
        "user": {
            "login": "lifan0127",
            "id": 7218193,
            "node_id": "MDQ6VXNlcjcyMTgxOTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7218193?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lifan0127",
            "html_url": "https://github.com/lifan0127",
            "followers_url": "https://api.github.com/users/lifan0127/followers",
            "following_url": "https://api.github.com/users/lifan0127/following{/other_user}",
            "gists_url": "https://api.github.com/users/lifan0127/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lifan0127/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lifan0127/subscriptions",
            "organizations_url": "https://api.github.com/users/lifan0127/orgs",
            "repos_url": "https://api.github.com/users/lifan0127/repos",
            "events_url": "https://api.github.com/users/lifan0127/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lifan0127/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "baskaryan",
            "id": 22008038,
            "node_id": "MDQ6VXNlcjIyMDA4MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/baskaryan",
            "html_url": "https://github.com/baskaryan",
            "followers_url": "https://api.github.com/users/baskaryan/followers",
            "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
            "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
            "organizations_url": "https://api.github.com/users/baskaryan/orgs",
            "repos_url": "https://api.github.com/users/baskaryan/repos",
            "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/baskaryan/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "baskaryan",
                "id": 22008038,
                "node_id": "MDQ6VXNlcjIyMDA4MDM4",
                "avatar_url": "https://avatars.githubusercontent.com/u/22008038?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/baskaryan",
                "html_url": "https://github.com/baskaryan",
                "followers_url": "https://api.github.com/users/baskaryan/followers",
                "following_url": "https://api.github.com/users/baskaryan/following{/other_user}",
                "gists_url": "https://api.github.com/users/baskaryan/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/baskaryan/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/baskaryan/subscriptions",
                "organizations_url": "https://api.github.com/users/baskaryan/orgs",
                "repos_url": "https://api.github.com/users/baskaryan/repos",
                "events_url": "https://api.github.com/users/baskaryan/events{/privacy}",
                "received_events_url": "https://api.github.com/users/baskaryan/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-12T14:46:05Z",
        "updated_at": "2023-07-13T11:28:51Z",
        "closed_at": "2023-07-13T11:28:51Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6050",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6050",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6050.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6050.patch",
            "merged_at": null
        },
        "body": "This pull request adds support for RDF Graph-based QA Chain. It uses the same signature and provides similar functionalities as the current Neo4j and Nebula implementations.\r\n\r\nIn theory, any RDF stores that support the W3C SPARQL Query Language 1.1 standard can be used, although only a few were tested during the development. \r\n\r\nhttps://github.com/lifan0127/langchain/blob/rdf-graph/docs/modules/chains/examples/graph_rdf_qa.ipynb\r\n\r\nThis approach will not scale well for large, public RDF databases such as Wikidata, but that is a more general problem that requires more research.\r\n\r\ncc @hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6050/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6050/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6049",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6049/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6049/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6049/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6049",
        "id": 1752912974,
        "node_id": "PR_kwDOIPDwls5SyB_7",
        "number": 6049,
        "title": "Enable serialization for anthropic",
        "user": {
            "login": "nfcampos",
            "id": 56902,
            "node_id": "MDQ6VXNlcjU2OTAy",
            "avatar_url": "https://avatars.githubusercontent.com/u/56902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nfcampos",
            "html_url": "https://github.com/nfcampos",
            "followers_url": "https://api.github.com/users/nfcampos/followers",
            "following_url": "https://api.github.com/users/nfcampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/nfcampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nfcampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nfcampos/subscriptions",
            "organizations_url": "https://api.github.com/users/nfcampos/orgs",
            "repos_url": "https://api.github.com/users/nfcampos/repos",
            "events_url": "https://api.github.com/users/nfcampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nfcampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T14:37:04Z",
        "updated_at": "2023-06-13T05:39:11Z",
        "closed_at": "2023-06-13T05:39:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6049",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6049",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6049.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6049.patch",
            "merged_at": "2023-06-13T05:39:10Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6049/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6049/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6048",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6048/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6048/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6048/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6048",
        "id": 1752908747,
        "node_id": "PR_kwDOIPDwls5SyBFe",
        "number": 6048,
        "title": "Add embaas document extraction api endpoints ",
        "user": {
            "login": "juliuslipp",
            "id": 43986145,
            "node_id": "MDQ6VXNlcjQzOTg2MTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43986145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juliuslipp",
            "html_url": "https://github.com/juliuslipp",
            "followers_url": "https://api.github.com/users/juliuslipp/followers",
            "following_url": "https://api.github.com/users/juliuslipp/following{/other_user}",
            "gists_url": "https://api.github.com/users/juliuslipp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juliuslipp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juliuslipp/subscriptions",
            "organizations_url": "https://api.github.com/users/juliuslipp/orgs",
            "repos_url": "https://api.github.com/users/juliuslipp/repos",
            "events_url": "https://api.github.com/users/juliuslipp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juliuslipp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "rlancemartin",
                "id": 122662504,
                "node_id": "U_kgDOB0-uaA",
                "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/rlancemartin",
                "html_url": "https://github.com/rlancemartin",
                "followers_url": "https://api.github.com/users/rlancemartin/followers",
                "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
                "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
                "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
                "repos_url": "https://api.github.com/users/rlancemartin/repos",
                "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
                "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T14:34:35Z",
        "updated_at": "2023-06-13T02:13:52Z",
        "closed_at": "2023-06-13T02:13:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6048",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6048",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6048.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6048.patch",
            "merged_at": "2023-06-13T02:13:52Z"
        },
        "body": "# Introduces embaas document extraction api endpoints\r\n\r\nIn this PR, we add support for embaas document extraction endpoints to Text Embedding Models (with LLMs, in different PRs coming). We currently offer the MTEB leaderboard top performers, will continue to add top embedding models and soon add support for customers to deploy thier own models. Additional Documentation + Infomation can be found [here](https://embaas.io).\r\n\r\nWhile developing this integration, I closely followed the patterns established by other langchain integrations. Nonetheless, if there are any aspects that require adjustments or if there's a better way to present a new integration, let me know! :)\r\n\r\nAdditionally, I fixed some docs in the embeddings integration.\r\n\r\nRelated PR: #5976 \r\n\r\n#### Who can review?\r\n  DataLoaders\r\n  - @eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6048/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6048/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6046",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6046/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6046/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6046/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6046",
        "id": 1752825122,
        "node_id": "I_kwDOIPDwls5oef0i",
        "number": 6046,
        "title": "similarity_search_with_score witn Chroma DB keeps higher score for less relevant documents. ",
        "user": {
            "login": "1shershah",
            "id": 76887404,
            "node_id": "MDQ6VXNlcjc2ODg3NDA0",
            "avatar_url": "https://avatars.githubusercontent.com/u/76887404?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/1shershah",
            "html_url": "https://github.com/1shershah",
            "followers_url": "https://api.github.com/users/1shershah/followers",
            "following_url": "https://api.github.com/users/1shershah/following{/other_user}",
            "gists_url": "https://api.github.com/users/1shershah/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/1shershah/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/1shershah/subscriptions",
            "organizations_url": "https://api.github.com/users/1shershah/orgs",
            "repos_url": "https://api.github.com/users/1shershah/repos",
            "events_url": "https://api.github.com/users/1shershah/events{/privacy}",
            "received_events_url": "https://api.github.com/users/1shershah/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-12T13:57:49Z",
        "updated_at": "2023-06-20T06:57:30Z",
        "closed_at": "2023-06-12T15:26:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nPython 3.10.6\r\nchromadb==0.3.22\r\nlangchain==0.0.194\n\n### Who can help?\n\nsimilarity_search_with_score witn Chroma DB keeps higher score for less relevant documents. \r\n\r\n```\r\nembeddings = OpenAIEmbeddings(\r\n    model=\"text-embedding-ada-002\",\r\n    openai_api_key = openai.api_key,\r\n    chunk_size=1\r\n)\r\n\r\ndb = Chroma(collection_name=\"docs\", embedding_function=embeddings, persist_directory=vector_db_path)\r\n\r\nquestion = \"\"\"What is the rate of arthralgia in the combined RCP and OLP inebilizumab population?\"\"\"\r\n[d[1] for d in db.similarity_search_with_score(question, k=5 )]\r\n```\r\n\r\n```\r\n[0.3035728335380554,\r\n 0.3159480392932892,\r\n 0.3345768451690674,\r\n 0.3543674945831299,\r\n 0.36075425148010254]\r\n```\r\n\r\n```\r\n[d[1] for d in db.similarity_search_with_score(question, k=10 )]\r\n\r\n[0.3035728335380554,\r\n 0.3159480392932892,\r\n 0.3345768451690674,\r\n 0.3543674945831299,\r\n 0.36075425148010254,\r\n 0.36337000131607056,\r\n 0.3656774163246155,\r\n 0.36993658542633057,\r\n 0.37518084049224854,\r\n 0.3755079507827759]\r\n```\r\n\r\nSeems more like i should be doing (1-score) , to filter more relevant documents.  So i tried to test with similarity threshold of .35 , but then it returns the least similar docs  ( as .30 was more similar ) \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nquestion = \"\"\"What is the rate of arthralgia in the combined RCP and OLP inebilizumab population?\"\"\"\r\n[d[1] for d in db.similarity_search_with_score(question, k=5 )]\r\n[d[1] for d in db.similarity_search_with_score(question, k=10 )]\n\n### Expected behavior\n\nI would expect higher similarity score for the documents that are earlier in the retruned list ( which the document is more related but has a lower score ) ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6046/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6046/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6045",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6045/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6045/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6045/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6045",
        "id": 1752773658,
        "node_id": "I_kwDOIPDwls5oeTQa",
        "number": 6045,
        "title": "Issue: langchain + pgvector fail to create new tables in postgresql db",
        "user": {
            "login": "mihailyanchev",
            "id": 34907806,
            "node_id": "MDQ6VXNlcjM0OTA3ODA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34907806?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mihailyanchev",
            "html_url": "https://github.com/mihailyanchev",
            "followers_url": "https://api.github.com/users/mihailyanchev/followers",
            "following_url": "https://api.github.com/users/mihailyanchev/following{/other_user}",
            "gists_url": "https://api.github.com/users/mihailyanchev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mihailyanchev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mihailyanchev/subscriptions",
            "organizations_url": "https://api.github.com/users/mihailyanchev/orgs",
            "repos_url": "https://api.github.com/users/mihailyanchev/repos",
            "events_url": "https://api.github.com/users/mihailyanchev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mihailyanchev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-06-12T13:29:06Z",
        "updated_at": "2023-07-29T04:11:48Z",
        "closed_at": "2023-06-13T07:21:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nI am trying to load llama-ccp embeddings into a postgresql with the vector extension. The db has the vector extension installed. I am using a user that has the correct privileges to create a new table and insert the embeddings. The code runs smoothly without any errors, but the collection is not being created as a new table in the db. The db name is `embeddings` and the schema name is `vector_store`.\r\n\r\nFrom pgadmin I can see that the there is the following query, which means the embeddings are created and are ready to be loaded:\r\n`INSERT INTO langchain_pg_embedding (collection_id, embedding, document, cmetadata, custom_id, uuid) VALUES ('d10c0cd8-300f-4592-aa2a-42f827...`\r\n\r\nHowever, it seems that no new table is created and the table names do not correspond to the collection name I am setting - `vector_store.test_table`. Any help will be appreciated.\r\n\r\npackages:\r\npgvector                       0.1.8\r\npsycopg2-binary         2.9.6\r\nlangchain                      0.0.149\r\n\r\nThis is my code:\r\n```\r\nfrom langchain import PromptTemplate, LLMChain\r\nfrom langchain.llms import GPT4All\r\nfrom langchain.callbacks.base import CallbackManager\r\nfrom langchain.callbacks.streaming_stdout import StreamingStdOutCallbackHandler\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.document_loaders import UnstructuredPDFLoader\r\nfrom langchain.document_loaders import PyPDFLoader\r\nfrom langchain.document_loaders import DirectoryLoader\r\nfrom langchain.indexes import VectorstoreIndexCreator\r\nfrom langchain.embeddings import LlamaCppEmbeddings\r\nfrom langchain.vectorstores.faiss import FAISS\r\nimport os\r\nimport datetime\r\n\r\nfrom langchain.text_splitter import CharacterTextSplitter\r\nfrom langchain.vectorstores.pgvector import PGVector\r\nfrom langchain.docstore.document import Document\r\n\r\ngpt4all_path = '../models/gpt4all-converted.bin' \r\nllama_path = '../models/ggml-model-q4_0.bin' \r\n\r\nembeddings = LlamaCppEmbeddings(model_path=llama_path)\r\n\r\nloader = TextLoader('../data/test.txt')\r\ndocuments = loader.load()\r\ntext_splitter = CharacterTextSplitter(chunk_size=1000, chunk_overlap=100)\r\ndocs = text_splitter.split_documents(documents)\r\n\r\nimport os\r\nCONNECTION_STRING = PGVector.connection_string_from_db_params(\r\n    driver=os.environ.get(\"PGVECTOR_DRIVER\", \"psycopg2\"),\r\n    host=os.environ.get(\"PGVECTOR_HOST\", \"xxxxxxxxxxx\"),\r\n    port=int(os.environ.get(\"PGVECTOR_PORT\", \"5432\")),\r\n    database=os.environ.get(\"PGVECTOR_DATABASE\", \"embeddings\"),\r\n    user=os.environ.get(\"PGVECTOR_USER\", \"xxxxxxxx\"),\r\n    password=os.environ.get(\"PGVECTOR_PASSWORD\", \"xxxxxxxxxxx\"),\r\n)\r\n\r\ndb = PGVector.from_documents(\r\n    embedding=embeddings,\r\n    documents=docs,\r\n    collection_name=\"vector_store.test_table\",\r\n    connection_string=CONNECTION_STRING,\r\n    pre_delete_collection=True\r\n)\r\n```\r\n\r\n### Suggestion:\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6045/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6045/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6044",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6044/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6044/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6044/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6044",
        "id": 1752751470,
        "node_id": "PR_kwDOIPDwls5SxeVc",
        "number": 6044,
        "title": "chore: spedd up integration test by using smaller model",
        "user": {
            "login": "JensMadsen",
            "id": 6726111,
            "node_id": "MDQ6VXNlcjY3MjYxMTE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6726111?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JensMadsen",
            "html_url": "https://github.com/JensMadsen",
            "followers_url": "https://api.github.com/users/JensMadsen/followers",
            "following_url": "https://api.github.com/users/JensMadsen/following{/other_user}",
            "gists_url": "https://api.github.com/users/JensMadsen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JensMadsen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JensMadsen/subscriptions",
            "organizations_url": "https://api.github.com/users/JensMadsen/orgs",
            "repos_url": "https://api.github.com/users/JensMadsen/repos",
            "events_url": "https://api.github.com/users/JensMadsen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JensMadsen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T13:16:56Z",
        "updated_at": "2023-06-12T20:27:10Z",
        "closed_at": "2023-06-12T20:27:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6044",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6044",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6044.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6044.patch",
            "merged_at": "2023-06-12T20:27:10Z"
        },
        "body": "Adds a new parameter `relative_chunk_overlap` for the `SentenceTransformersTokenTextSplitter` constructor. The parameter sets the chunk overlap using a relative factor, e.g. for a model where the token limit is 100, a `relative_chunk_overlap=0.5` implies that `chunk_overlap=50` \r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n @hwchase17, @dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6044/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6044/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6043",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6043/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6043/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6043/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6043",
        "id": 1752748352,
        "node_id": "PR_kwDOIPDwls5Sxdpl",
        "number": 6043,
        "title": "qdrant: search by vector",
        "user": {
            "login": "otwieracz",
            "id": 108072,
            "node_id": "MDQ6VXNlcjEwODA3Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/108072?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/otwieracz",
            "html_url": "https://github.com/otwieracz",
            "followers_url": "https://api.github.com/users/otwieracz/followers",
            "following_url": "https://api.github.com/users/otwieracz/following{/other_user}",
            "gists_url": "https://api.github.com/users/otwieracz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/otwieracz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/otwieracz/subscriptions",
            "organizations_url": "https://api.github.com/users/otwieracz/orgs",
            "repos_url": "https://api.github.com/users/otwieracz/repos",
            "events_url": "https://api.github.com/users/otwieracz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/otwieracz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-12T13:15:19Z",
        "updated_at": "2023-06-17T16:44:29Z",
        "closed_at": "2023-06-17T16:44:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6043",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6043",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6043.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6043.patch",
            "merged_at": "2023-06-17T16:44:29Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nAdded support to `search_by_vector` to Qdrant Vector store.\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n\r\n### Who can review\r\nVectorStores / Retrievers / Memory\r\n- @dev2049\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @hwchase17\r\n\r\n\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6043/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6043/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6042",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6042/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6042/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6042/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6042",
        "id": 1752679976,
        "node_id": "PR_kwDOIPDwls5SxOkP",
        "number": 6042,
        "title": "Mongo db doc fix",
        "user": {
            "login": "bafMdb",
            "id": 55411495,
            "node_id": "MDQ6VXNlcjU1NDExNDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/55411495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bafMdb",
            "html_url": "https://github.com/bafMdb",
            "followers_url": "https://api.github.com/users/bafMdb/followers",
            "following_url": "https://api.github.com/users/bafMdb/following{/other_user}",
            "gists_url": "https://api.github.com/users/bafMdb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bafMdb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bafMdb/subscriptions",
            "organizations_url": "https://api.github.com/users/bafMdb/orgs",
            "repos_url": "https://api.github.com/users/bafMdb/repos",
            "events_url": "https://api.github.com/users/bafMdb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bafMdb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T12:39:15Z",
        "updated_at": "2023-06-12T14:29:28Z",
        "closed_at": "2023-06-12T14:29:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6042",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6042",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6042.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6042.patch",
            "merged_at": "2023-06-12T14:29:28Z"
        },
        "body": "I missed a few errors in my initial fix @hwchase1.  Thanks!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6042/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6042/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6041",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6041/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6041/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6041/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6041",
        "id": 1752603109,
        "node_id": "I_kwDOIPDwls5odpnl",
        "number": 6041,
        "title": "Emiting events during processing of intermediate steps",
        "user": {
            "login": "Bilal143260",
            "id": 118292770,
            "node_id": "U_kgDOBw0BIg",
            "avatar_url": "https://avatars.githubusercontent.com/u/118292770?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Bilal143260",
            "html_url": "https://github.com/Bilal143260",
            "followers_url": "https://api.github.com/users/Bilal143260/followers",
            "following_url": "https://api.github.com/users/Bilal143260/following{/other_user}",
            "gists_url": "https://api.github.com/users/Bilal143260/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Bilal143260/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Bilal143260/subscriptions",
            "organizations_url": "https://api.github.com/users/Bilal143260/orgs",
            "repos_url": "https://api.github.com/users/Bilal143260/repos",
            "events_url": "https://api.github.com/users/Bilal143260/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Bilal143260/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-12T12:00:43Z",
        "updated_at": "2023-09-18T16:07:58Z",
        "closed_at": "2023-09-18T16:07:57Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nLangchain agent performs multiple intermediate steps before returning a response. We want to emit an event for every intermediate step during processing, so that the client-side can be updated about what's being processed at any given time. \r\n\r\nFor example, if an intermediate steps involves searching Google, we can then emit an event that informs the client about the search taking place. \r\n\r\nThis could massively improve UX. \n\n### Motivation\n\nThe motivation comes from wanting to improve UX. We're developing a langchain-based app and this feature is sorely missed.\n\n### Your contribution\n\nWe could definitely submit a PR if you give a little bit of guidance on how to go about with it. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6041/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6041/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6040",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6040/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6040/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6040/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6040",
        "id": 1752416825,
        "node_id": "PR_kwDOIPDwls5SwVFW",
        "number": 6040,
        "title": "make modelname_to_contextsize as a staticmethod",
        "user": {
            "login": "Ja-sonYun",
            "id": 46551097,
            "node_id": "MDQ6VXNlcjQ2NTUxMDk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/46551097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ja-sonYun",
            "html_url": "https://github.com/Ja-sonYun",
            "followers_url": "https://api.github.com/users/Ja-sonYun/followers",
            "following_url": "https://api.github.com/users/Ja-sonYun/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ja-sonYun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ja-sonYun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ja-sonYun/subscriptions",
            "organizations_url": "https://api.github.com/users/Ja-sonYun/orgs",
            "repos_url": "https://api.github.com/users/Ja-sonYun/repos",
            "events_url": "https://api.github.com/users/Ja-sonYun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ja-sonYun/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T10:23:31Z",
        "updated_at": "2023-06-17T16:13:09Z",
        "closed_at": "2023-06-17T16:13:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6040",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6040",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6040.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6040.patch",
            "merged_at": "2023-06-17T16:13:09Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes ##6039\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n@hwchase17\u3000@agola11\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @hwchase17\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6040/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6040/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6039",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6039/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6039/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6039/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6039",
        "id": 1752416131,
        "node_id": "I_kwDOIPDwls5oc7-D",
        "number": 6039,
        "title": "Make modelname_to_contextsize as a staticmethod to use it without create an object",
        "user": {
            "login": "Ja-sonYun",
            "id": 46551097,
            "node_id": "MDQ6VXNlcjQ2NTUxMDk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/46551097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ja-sonYun",
            "html_url": "https://github.com/Ja-sonYun",
            "followers_url": "https://api.github.com/users/Ja-sonYun/followers",
            "following_url": "https://api.github.com/users/Ja-sonYun/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ja-sonYun/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ja-sonYun/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ja-sonYun/subscriptions",
            "organizations_url": "https://api.github.com/users/Ja-sonYun/orgs",
            "repos_url": "https://api.github.com/users/Ja-sonYun/repos",
            "events_url": "https://api.github.com/users/Ja-sonYun/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ja-sonYun/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T10:23:07Z",
        "updated_at": "2023-06-23T11:58:44Z",
        "closed_at": "2023-06-23T11:58:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nMake [modelname_to_contextsize](https://github.com/hwchase17/langchain/blob/289e9aeb9d122d689d68b2e77236ce3dfcd606a7/langchain/llms/openai.py#L503) as staticmethod to use it without create an object.\r\n\r\n### Motivation\r\n\r\nWhile using ChatOpenAI or AzureChatOpenAI, to use modelname_to_contextsize we need to create OpenAI or AzureOpenAI object whether we don't use it.\r\nFor example, llama-index using [modelname_to_contextsize](https://github.com/jerryjliu/llama_index/blob/f614448a045788c9c5c9a774f407a992ae1f7743/llama_index/llm_predictor/base.py#L42) to get context size, but it raise an error if we using AzureOpenAI without setting OPENAI_API_TOKEN.\r\n\r\n\r\n### Your contribution\r\n\r\n#6040",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6039/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6039/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6038",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6038/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6038/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6038/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6038",
        "id": 1752342167,
        "node_id": "I_kwDOIPDwls5ocp6X",
        "number": 6038,
        "title": "Validation error for gpt4all ",
        "user": {
            "login": "ketlinapuci",
            "id": 121874667,
            "node_id": "U_kgDOB0Oo6w",
            "avatar_url": "https://avatars.githubusercontent.com/u/121874667?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ketlinapuci",
            "html_url": "https://github.com/ketlinapuci",
            "followers_url": "https://api.github.com/users/ketlinapuci/followers",
            "following_url": "https://api.github.com/users/ketlinapuci/following{/other_user}",
            "gists_url": "https://api.github.com/users/ketlinapuci/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ketlinapuci/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ketlinapuci/subscriptions",
            "organizations_url": "https://api.github.com/users/ketlinapuci/orgs",
            "repos_url": "https://api.github.com/users/ketlinapuci/repos",
            "events_url": "https://api.github.com/users/ketlinapuci/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ketlinapuci/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-12T09:44:27Z",
        "updated_at": "2023-09-20T16:08:46Z",
        "closed_at": "2023-09-20T16:08:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nI followed the steps to install gpt4all based on this repo\r\nhttps://github.com/nomic-ai/gpt4all/tree/main/gpt4all-bindings/python\r\nI have the latest version of langchain\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [X] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n```\r\n def mainllm():\r\n template = \"\"\"Question: {question}\r\n\r\nprompt = PromptTemplate(template=template, input_variables=[\"question\"])\r\nlocal_path = './models/gpt4all-converted.bin'\r\nllm = gpt4all.GPT4All(\"ggml-gpt4all-j-v1.3-groovy.bin\")\r\nllm_chain = LLMChain(prompt=prompt, llm=llm)\r\nquestion = \"What NFL team won the Super Bowl in the year Justin Bieber was born?\"\r\nllm_chain.run(question)\r\n    \r\nif __name__ == '__main__':\r\nmainllm()\r\n```\r\nThis is the error I get related to this lines on code:\r\n\r\n```\r\nTraceback (most recent call last):\r\n  File \"gpt4all.py\", line 174, in <module>\r\n    mainllm()\r\n  File \"gpt4all.py\", line 166, in mainllm\r\n    llm = gpt4all.GPT4All(\"ggml-gpt4all-j-v1.3-groovy.bin\")\r\nTypeError: Serializable.__init__() takes 1 positional argument but 2 were given\r\n```\r\n\r\n### Expected behavior\r\n\r\nCould you help me understand what is wrong?\r\nThanks",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6038/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6038/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6037",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6037/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6037/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6037/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6037",
        "id": 1752340270,
        "node_id": "I_kwDOIPDwls5ocpcu",
        "number": 6037,
        "title": "Report:Discussion about the bug mentioned in the documentation",
        "user": {
            "login": "LeXwDeX",
            "id": 14139451,
            "node_id": "MDQ6VXNlcjE0MTM5NDUx",
            "avatar_url": "https://avatars.githubusercontent.com/u/14139451?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/LeXwDeX",
            "html_url": "https://github.com/LeXwDeX",
            "followers_url": "https://api.github.com/users/LeXwDeX/followers",
            "following_url": "https://api.github.com/users/LeXwDeX/following{/other_user}",
            "gists_url": "https://api.github.com/users/LeXwDeX/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/LeXwDeX/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/LeXwDeX/subscriptions",
            "organizations_url": "https://api.github.com/users/LeXwDeX/orgs",
            "repos_url": "https://api.github.com/users/LeXwDeX/repos",
            "events_url": "https://api.github.com/users/LeXwDeX/events{/privacy}",
            "received_events_url": "https://api.github.com/users/LeXwDeX/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-12T09:43:17Z",
        "updated_at": "2023-09-15T22:13:04Z",
        "closed_at": "2023-09-13T22:58:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nReport\r\n\r\nI am currently reading the documentation for version 0.0.197 and testing step by step. When I ran into the \"agents-with-chat-models\" section, I encountered a type error in the code. The specific situation is as follows:\r\n\r\n[doc link](https://python.langchain.com/en/latest/getting_started/getting_started.html#agents-with-chat-models)\r\n\r\n```python\r\n# this is my code\r\nllm = AzureOpenAI(\r\n    model_name = os.environ[\"GPT_ENGINE\"],\r\n    deployment_name = os.environ[\"GPT_ENGINE\"],\r\n    openai_api_key = os.environ[\"API_KEY\"],\r\n    temperature = 0,\r\n    max_tokens = 1000,\r\n    top_p = 0.95,\r\n    frequency_penalty = 0,\r\n    presence_penalty = 0\r\n)\r\nchat = AzureChatOpenAI(\r\n    model_name = os.environ[\"GPT_ENGINE\"],\r\n    deployment_name = os.environ[\"GPT_ENGINE\"],\r\n    openai_api_key = os.environ[\"API_KEY\"],\r\n    openai_api_base = os.environ[\"API_BASE\"],\r\n    openai_api_version= os.environ[\"API_VERSION\"],\r\n    temperature = 0,\r\n    max_tokens = 1000\r\n)\r\ntools = load_tools([\"serpapi\", \"llm-math\"], llm=llm)\r\n# Finally, let's initialize an agent with the tools, the language model, and the type of agent we want to use.\r\nagent = initialize_agent(tools, chat, agent=AgentType.CHAT_ZERO_SHOT_REACT_DESCRIPTION, verbose=True)\r\n# Now let's test it out!\r\nagent.run(\"Who is Olivia Wilde's boyfriend? What is his current age raised to the 0.23 power?\").format\r\n```\r\n\r\n```log-output\r\n> Entering new AgentExecutor chain...\r\nThought: I need to use a search engine to find Olivia Wilde's boyfriend and a calculator to raise his age to the 0.23 power.\r\nAction:\r\n\r\n{\r\n  \"action\": \"Search\",\r\n  \"action_input\": \"Olivia Wilde boyfriend\"\r\n}\r\n\r\n\r\nObservation: Looks like Olivia Wilde and Jason Sudeikis are starting 2023 on good terms. Amid their highly publicized custody battle \u2013 and the actress' ...\r\nThought:Now I need to use a calculator to raise Jason Sudeikis' age to the 0.23 power.\r\nAction:\r\n\r\n{\r\n  \"action\": \"Calculator\",\r\n  \"action_input\": \"pow(47, 0.23)\"\r\n}\r\n```\r\n\r\n```error-output\r\nValueError: LLMMathChain._evaluate(\"\r\npow(47, 0.23)\r\n\") raised error: 'VariableNode' object is not callable. Please try again with a valid numerical expression\r\n\r\n```\n\n### Idea or request for content:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6037/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6037/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6036",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6036/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6036/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6036/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6036",
        "id": 1752311779,
        "node_id": "PR_kwDOIPDwls5Sv96b",
        "number": 6036,
        "title": "Resolve the issue with the asynchronous function generate_concurrentl\u2026",
        "user": {
            "login": "BigPingge",
            "id": 40760279,
            "node_id": "MDQ6VXNlcjQwNzYwMjc5",
            "avatar_url": "https://avatars.githubusercontent.com/u/40760279?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/BigPingge",
            "html_url": "https://github.com/BigPingge",
            "followers_url": "https://api.github.com/users/BigPingge/followers",
            "following_url": "https://api.github.com/users/BigPingge/following{/other_user}",
            "gists_url": "https://api.github.com/users/BigPingge/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/BigPingge/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/BigPingge/subscriptions",
            "organizations_url": "https://api.github.com/users/BigPingge/orgs",
            "repos_url": "https://api.github.com/users/BigPingge/repos",
            "events_url": "https://api.github.com/users/BigPingge/events{/privacy}",
            "received_events_url": "https://api.github.com/users/BigPingge/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541144676,
                "node_id": "LA_kwDOIPDwls8AAAABSkcoZA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20doc%20loader",
                "name": "area: doc loader",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to document loader module (not documentation)"
            },
            {
                "id": 5680700918,
                "node_id": "LA_kwDOIPDwls8AAAABUpid9g",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:documentation",
                "name": "auto:documentation",
                "color": "C5DEF5",
                "default": false,
                "description": "Changes to documentation and examples, like .md, .rst, .ipynb files. Changes to the docs/ folder"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "agola11",
                "id": 9536492,
                "node_id": "MDQ6VXNlcjk1MzY0OTI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/agola11",
                "html_url": "https://github.com/agola11",
                "followers_url": "https://api.github.com/users/agola11/followers",
                "following_url": "https://api.github.com/users/agola11/following{/other_user}",
                "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
                "organizations_url": "https://api.github.com/users/agola11/orgs",
                "repos_url": "https://api.github.com/users/agola11/repos",
                "events_url": "https://api.github.com/users/agola11/events{/privacy}",
                "received_events_url": "https://api.github.com/users/agola11/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-12T09:26:10Z",
        "updated_at": "2023-11-01T23:49:36Z",
        "closed_at": "2023-11-01T23:49:36Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6036",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6036",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6036.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6036.patch",
            "merged_at": null
        },
        "body": "\u2026y in async_chain.ipynb\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\nDoc code err!\r\n\r\n#### Before submitting\r\n```\r\nasync def generate_concurrently():\r\n    llm = OpenAI(temperature=0.9)\r\n    prompt = PromptTemplate(\r\n        input_variables=[\"product\"],\r\n        template=\"What is a good name for a company that makes {product}?\",\r\n    )\r\n    chain = LLMChain(llm=llm, prompt=prompt)\r\n    tasks = [async_generate(chain) for _ in range(5)]\r\n    await asyncio.gather(*tasks)\r\n\r\ns = time.perf_counter()\r\n# If running this outside of Jupyter, use asyncio.run(generate_concurrently())\r\nawait generate_concurrently()\r\n```\r\n#### After submitting\r\n```\r\nasync def generate_concurrently():\r\n    llm = OpenAI(temperature=0.9)\r\n    prompt = PromptTemplate(\r\n        input_variables=[\"product\"],\r\n        template=\"What is a good name for a company that makes {product}?\",\r\n    )\r\n    chain = LLMChain(llm=llm, prompt=prompt)\r\n    tasks = [async_generate(chain) for _ in range(5)]\r\n    await asyncio.gather(*tasks)\r\n\r\ns = time.perf_counter()\r\n# If running this outside of Jupyter, use asyncio.run(generate_concurrently())\r\nasyncio.run(generate_concurrently())\r\n```\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @hwchase17\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6036/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6036/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6035",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6035/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6035/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6035/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6035",
        "id": 1752297590,
        "node_id": "PR_kwDOIPDwls5Sv631",
        "number": 6035,
        "title": "Allow GoogleDrive to authenticate via application default credentials on Cloud Run/GCE etc without service key",
        "user": {
            "login": "MarkEdmondson1234",
            "id": 3155884,
            "node_id": "MDQ6VXNlcjMxNTU4ODQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3155884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MarkEdmondson1234",
            "html_url": "https://github.com/MarkEdmondson1234",
            "followers_url": "https://api.github.com/users/MarkEdmondson1234/followers",
            "following_url": "https://api.github.com/users/MarkEdmondson1234/following{/other_user}",
            "gists_url": "https://api.github.com/users/MarkEdmondson1234/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MarkEdmondson1234/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MarkEdmondson1234/subscriptions",
            "organizations_url": "https://api.github.com/users/MarkEdmondson1234/orgs",
            "repos_url": "https://api.github.com/users/MarkEdmondson1234/repos",
            "events_url": "https://api.github.com/users/MarkEdmondson1234/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MarkEdmondson1234/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-12T09:17:10Z",
        "updated_at": "2023-06-17T16:44:18Z",
        "closed_at": "2023-06-17T16:44:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6035",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6035",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6035.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6035.patch",
            "merged_at": "2023-06-17T16:44:18Z"
        },
        "body": "@eyurtsev\r\n\r\nThe existing GoogleDrive implementation always needs a service account to be available at the credentials location.  When running on GCP services such as Cloud Run, a service account already exists in the metadata of the service, so no physical key is necessary.  This change adds a check to see if it is running in such an environment, and uses that authentication instead. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6035/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6035/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6034",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6034/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6034/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6034/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6034",
        "id": 1752222940,
        "node_id": "I_kwDOIPDwls5ocMzc",
        "number": 6034,
        "title": "TypeError(\"Requests.apost() missing 1 required positional argument: 'data'\")",
        "user": {
            "login": "WanderAG",
            "id": 7575944,
            "node_id": "MDQ6VXNlcjc1NzU5NDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7575944?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/WanderAG",
            "html_url": "https://github.com/WanderAG",
            "followers_url": "https://api.github.com/users/WanderAG/followers",
            "following_url": "https://api.github.com/users/WanderAG/following{/other_user}",
            "gists_url": "https://api.github.com/users/WanderAG/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/WanderAG/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/WanderAG/subscriptions",
            "organizations_url": "https://api.github.com/users/WanderAG/orgs",
            "repos_url": "https://api.github.com/users/WanderAG/repos",
            "events_url": "https://api.github.com/users/WanderAG/events{/privacy}",
            "received_events_url": "https://api.github.com/users/WanderAG/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-12T08:37:26Z",
        "updated_at": "2023-09-25T09:49:03Z",
        "closed_at": "2023-09-25T09:49:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain = \"^0.0.197\"\n\n### Who can help?\n\n@agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [X] Async\n\n### Reproduction\n\n``` python\r\nimport asyncio\r\n\r\nfrom langchain.utilities import TextRequestsWrapper\r\n\r\nrequests = TextRequestsWrapper()\r\n\r\n\r\nasync def fun():\r\n    ret = await requests.apost(\"http://127.0.0.1:8080\", data={\"data\": 123})\r\n\r\n\r\nif __name__ == '__main__':\r\n    asyncio.run(fun())\r\n\r\n```\n\n### Expected behavior\n\n![image](https://github.com/hwchase17/langchain/assets/7575944/e4ff4dc1-54e2-43ce-999e-9c233c2a6752)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6034/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6034/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6033",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6033/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6033/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6033/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6033",
        "id": 1752197041,
        "node_id": "I_kwDOIPDwls5ocGex",
        "number": 6033,
        "title": "Add clearer API for defining `k` (number of documents retrieved) in VectorStore/retriever defining functions",
        "user": {
            "login": "ROMEEZHOU",
            "id": 72342196,
            "node_id": "MDQ6VXNlcjcyMzQyMTk2",
            "avatar_url": "https://avatars.githubusercontent.com/u/72342196?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ROMEEZHOU",
            "html_url": "https://github.com/ROMEEZHOU",
            "followers_url": "https://api.github.com/users/ROMEEZHOU/followers",
            "following_url": "https://api.github.com/users/ROMEEZHOU/following{/other_user}",
            "gists_url": "https://api.github.com/users/ROMEEZHOU/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ROMEEZHOU/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ROMEEZHOU/subscriptions",
            "organizations_url": "https://api.github.com/users/ROMEEZHOU/orgs",
            "repos_url": "https://api.github.com/users/ROMEEZHOU/repos",
            "events_url": "https://api.github.com/users/ROMEEZHOU/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ROMEEZHOU/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-12T08:24:14Z",
        "updated_at": "2023-10-25T16:08:23Z",
        "closed_at": "2023-10-25T16:08:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nLet users easily define the value of `k`, which is the number of documents retrieved, when specifying a VectorStore.\n\n### Motivation\n\nWhen working with documents, users typically need to specify VectorStore, and users may often want to define the specific number of documents being retrieved, i.e., the `k`, when similarity search runs behind the scene. For example, I am doing\r\n```\r\ndocsearch = Chroma.from_documents(texts1 + texts3, embeddings)\r\nretriever=docsearch.as_retriever(search_kwargs = {'k':1})\r\n```\r\nHowever, there is no easy way or clear documentation for this. I have to go through the source code all the ways to find that I can do it with adding `search_kwargs = {'k':1}` when I specify the retriever. This is not user-friendly, especially noticing that this is a common feature that users need.\n\n### Your contribution\n\nI would love to open a PR for this. I am willing to either change the code or writing a clearer documentation for this feature.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6033/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6033/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6032",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6032/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6032/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6032/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6032",
        "id": 1752131402,
        "node_id": "I_kwDOIPDwls5ob2dK",
        "number": 6032,
        "title": "KeyError: 'langchain' (circular import error)",
        "user": {
            "login": "al-yakubovich",
            "id": 12928778,
            "node_id": "MDQ6VXNlcjEyOTI4Nzc4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12928778?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/al-yakubovich",
            "html_url": "https://github.com/al-yakubovich",
            "followers_url": "https://api.github.com/users/al-yakubovich/followers",
            "following_url": "https://api.github.com/users/al-yakubovich/following{/other_user}",
            "gists_url": "https://api.github.com/users/al-yakubovich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/al-yakubovich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/al-yakubovich/subscriptions",
            "organizations_url": "https://api.github.com/users/al-yakubovich/orgs",
            "repos_url": "https://api.github.com/users/al-yakubovich/repos",
            "events_url": "https://api.github.com/users/al-yakubovich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/al-yakubovich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-12T07:52:33Z",
        "updated_at": "2023-09-24T08:50:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n@hwchase17\r\n@agola11\r\n\r\nHi. From time to time, I am getting the following error:\r\n\r\n```\r\n2023-06-12 02:27:55.993 Uncaught app exception\r\nTraceback (most recent call last):\r\nFile \"C:\\Users\\v-alakubov\\AppData\\Local\\anaconda3\\envs\\py311\\Lib\\site-packages\\streamlit\\runtime\\scriptrunner\\script_runner.py\", line 565, in run_script\r\nexec(code, module.dict)\r\nFile \"C:\\Users\\v-alakubov\\OneDrive\\Desktop\\app_v2\\src\\pages\\AskData.py\", line 7, in <module>\r\nfrom modules.table_tool import PandasAgent\r\nFile \"C:\\Users\\v-alakubov\\OneDrive\\Desktop\\Listens\\app_v2.\\src\\modules\\table_tool.py\", line 6, in <module>\r\nfrom langchain.callbacks import get_openai_callback\r\nFile \"C:\\Users\\v-alakubov\\AppData\\Local\\anaconda3\\envs\\py311\\Lib\\site-packages\\langchain_init.py\", line 6, in <module>\r\nfrom langchain.agents import MRKLChain, ReActChain, SelfAskWithSearchChain\r\nFile \"C:\\Users\\v-alakubov\\AppData\\Local\\anaconda3\\envs\\py311\\Lib\\site-packages\\langchain\\agents_init_.py\", line 2, in <module>\r\nfrom langchain.agents.agent import (\r\nFile \"C:\\Users\\v-alakubov\\AppData\\Local\\anaconda3\\envs\\py311\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 16, in <module>\r\nfrom langchain.agents.tools import InvalidTool\r\nFile \"C:\\Users\\v-alakubov\\AppData\\Local\\anaconda3\\envs\\py311\\Lib\\site-packages\\langchain\\agents\\tools.py\", line 8, in <module>\r\nfrom langchain.tools.base import BaseTool, Tool, tool\r\nFile \"C:\\Users\\v-alakubov\\AppData\\Local\\anaconda3\\envs\\py311\\Lib\\site-packages\\langchain\\tools_init_.py\", line 46, in <module>\r\nfrom langchain.tools.powerbi.tool import (\r\nFile \"C:\\Users\\v-alakubov\\AppData\\Local\\anaconda3\\envs\\py311\\Lib\\site-packages\\langchain\\tools\\powerbi\\tool.py\", line 11, in <module>\r\nfrom langchain.chains.llm import LLMChain\r\nFile \"C:\\Users\\v-alakubov\\AppData\\Local\\anaconda3\\envs\\py311\\Lib\\site-packages\\langchain\\chains_init_.py\", line 7, in <module>\r\nfrom langchain.chains.conversational_retrieval.base import (\r\nFile \"C:\\Users\\v-alakubov\\AppData\\Local\\anaconda3\\envs\\py311\\Lib\\site-packages\\langchain\\chains\\conversational_retrieval\\base.py\", line 22, in <module>\r\nfrom langchain.chains.question_answering import load_qa_chain\r\nFile \"C:\\Users\\v-alakubov\\AppData\\Local\\anaconda3\\envs\\py311\\Lib\\site-packages\\langchain\\chains\\question_answering_init_.py\", line 13, in <module>\r\nfrom langchain.chains.question_answering import (\r\nFile \"C:\\Users\\v-alakubov\\AppData\\Local\\anaconda3\\envs\\py311\\Lib\\site-packages\\langchain\\chains\\question_answering\\map_reduce_prompt.py\", line 2, in <module>\r\nfrom langchain.chains.prompt_selector import ConditionalPromptSelector, is_chat_model\r\nFile \"C:\\Users\\v-alakubov\\AppData\\Local\\anaconda3\\envs\\py311\\Lib\\site-packages\\langchain\\chains\\prompt_selector.py\", line 7, in <module>\r\nfrom langchain.chat_models.base import BaseChatModel\r\nImportError: cannot import name 'BaseChatModel' from partially initialized module 'langchain.chat_models.base' (most likely due to a circular import) (C:\\Users\\v-alakubov\\AppData\\Local\\anaconda3\\envs\\py311\\Lib\\site-packages\\langchain\\chat_models\\base.py)\r\n2023-06-12 02:27:56.013 Uncaught app exception\r\nTraceback (most recent call last):\r\nFile \"C:\\Users\\v-alakubov\\AppData\\Local\\anaconda3\\envs\\py311\\Lib\\site-packages\\streamlit\\runtime\\scriptrunner\\script_runner.py\", line 565, in _run_script\r\nexec(code, module.dict)\r\nFile \"C:\\Users\\v-alakubov\\OneDrive\\Desktop\\Listens\\app_v2\\src\\pages\\AI-Chat.py\", line 8, in <module>\r\nfrom modules.utils import Utilities\r\nFile \"C:\\Users\\v-alakubov\\OneDrive\\Desktop\\Listens\\app_v2.\\src\\modules\\utils.py\", line 6, in <module>\r\nfrom modules.chatbot import Chatbot\r\nFile \"C:\\Users\\v-alakubov\\OneDrive\\Desktop\\Listens\\app_v2.\\src\\modules\\chatbot.py\", line 3, in <module>\r\nfrom langchain.chat_models import AzureChatOpenAI\r\nFile \"<frozen importlib._bootstrap>\", line 1178, in _find_and_load\r\nFile \"<frozen importlib._bootstrap>\", line 1155, in _find_and_load_unlocked\r\nKeyError: 'langchain'\r\n```\r\n\r\nany ideas why? \n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nHere structure of project:\r\n\r\n```\r\nHome.py\r\npages\r\nmodules\r\nembeddings\r\n```\r\n\r\nWhere pages, modules and embeddings are folders. \r\n\r\n\r\n\"pages\" folder has two files:\r\n\r\nAI-Chat.py\r\nAskData.py\r\n\r\nmodules folder has 7 files:\r\nchatbot.py\r\nembedder.py\r\nhistory.py\r\nlayout.py\r\nsidebar.py\r\ntable_tool.py\r\nutils.py\r\n\r\n\r\n\r\nHome.py (the file I run as ` streamlit run .\\src\\Home.py`)\r\n\r\n\r\nAI-Chat.py:\r\n\r\n```\r\nimport os\r\nimport streamlit as st\r\nfrom io import StringIO\r\nimport re\r\nimport sys\r\nfrom modules.history import ChatHistory\r\nfrom modules.layout import Layout\r\nfrom modules.utils import Utilities\r\nfrom modules.sidebar import Sidebar\r\n....\r\n```\r\n\r\n\r\nAskData.py:\r\n```\r\nimport os\r\nimport importlib\r\nimport sys\r\nimport pandas as pd\r\nimport streamlit as st\r\nfrom io import BytesIO\r\nfrom modules.table_tool import PandasAgent\r\nfrom modules.layout import Layout\r\nfrom modules.utils import Utilities\r\nfrom modules.sidebar import Sidebar\r\n....\r\n```\r\n\r\n\r\nchatbot.py:\r\n\r\n```\r\nimport streamlit as st\r\n# from langchain.chat_models import ChatOpenAI\r\nfrom langchain.chat_models import AzureChatOpenAI\r\nfrom langchain.chains import ConversationalRetrievalChain\r\nfrom langchain.prompts.prompt import PromptTemplate\r\nfrom langchain.callbacks import get_openai_callback\r\nimport os\r\n#fix Error: module 'langchain' has no attribute 'verbose'\r\nimport langchain\r\nlangchain.verbose = False\r\nimport traceback\r\n.....\r\n```\r\n\r\nutils.py:\r\n\r\n```\r\nimport os\r\nimport pandas as pd\r\nimport streamlit as st\r\nimport pdfplumber\r\nfrom modules.chatbot import Chatbot\r\nfrom modules.embedder import Embedder\r\n```\r\n\r\n\r\nembedder.py:\r\n\r\n```\r\nimport os\r\nimport pickle\r\nimport tempfile\r\nfrom langchain.document_loaders.csv_loader import CSVLoader\r\nfrom langchain.vectorstores import FAISS\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.document_loaders import PyPDFLoader\r\nfrom langchain.document_loaders import TextLoader\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\n....\r\n```\r\n\r\ntable_tool.py:\r\n\r\n```\r\nimport re\r\nimport sys\r\nfrom io import StringIO, BytesIO\r\nimport matplotlib.pyplot as plt\r\nimport streamlit as st\r\nfrom langchain.callbacks import get_openai_callback\r\nfrom streamlit_chat import message\r\nimport os\r\nfrom pandasai import PandasAI\r\n# from pandasai.llm.openai import OpenAI\r\nfrom pandasai.llm.azure_openai import AzureOpenAI\r\n....\r\n```\r\n\r\n\r\nhistory.py:\r\n\r\n```\r\nimport os\r\nimport streamlit as st\r\nfrom streamlit_chat import message\r\n......\r\n\r\n```\r\n\r\n\r\nlayout.py:\r\n\r\n```\r\nimport streamlit as st\r\n....\r\n```\r\n\r\nsidebar.py:\r\n\r\n```\r\nimport streamlit as st\r\n.......\r\n```\r\n\r\n\r\n\r\n\r\n\n\n### Expected behavior\n\nno error should rise",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6032/reactions",
            "total_count": 4,
            "+1": 4,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6032/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6031",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6031/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6031/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6031/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6031",
        "id": 1752095901,
        "node_id": "PR_kwDOIPDwls5SvOqV",
        "number": 6031,
        "title": "DocArray as a Retriever",
        "user": {
            "login": "jupyterjazz",
            "id": 45267439,
            "node_id": "MDQ6VXNlcjQ1MjY3NDM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/45267439?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jupyterjazz",
            "html_url": "https://github.com/jupyterjazz",
            "followers_url": "https://api.github.com/users/jupyterjazz/followers",
            "following_url": "https://api.github.com/users/jupyterjazz/following{/other_user}",
            "gists_url": "https://api.github.com/users/jupyterjazz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jupyterjazz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jupyterjazz/subscriptions",
            "organizations_url": "https://api.github.com/users/jupyterjazz/orgs",
            "repos_url": "https://api.github.com/users/jupyterjazz/repos",
            "events_url": "https://api.github.com/users/jupyterjazz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jupyterjazz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-06-12T07:28:29Z",
        "updated_at": "2023-06-17T16:09:35Z",
        "closed_at": "2023-06-17T16:09:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6031",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6031",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6031.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6031.patch",
            "merged_at": "2023-06-17T16:09:34Z"
        },
        "body": "## DocArray as a Retriever\r\n\r\n[DocArray](https://github.com/docarray/docarray) is an open-source tool for managing your multi-modal data. It offers flexibility to store and search through your data using various document index backends. This PR introduces `DocArrayRetriever` - which works with any available backend and serves as a retriever for Langchain apps. \r\n\r\nAlso, I added 2 notebooks:\r\nDocArray Backends - intro to all 5 currently supported backends, how to initialize, index, and use them as a retriever\r\nDocArray Usage - showcasing what additional search parameters you can pass to create versatile retrievers\r\n\r\nExample:\r\n```python\r\nfrom docarray.index import InMemoryExactNNIndex\r\nfrom docarray import BaseDoc, DocList\r\nfrom docarray.typing import NdArray\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\nfrom langchain.retrievers import DocArrayRetriever\r\n\r\n\r\n# define document schema\r\nclass MyDoc(BaseDoc):\r\n    description: str\r\n    description_embedding: NdArray[1536]\r\n\r\n\r\nembeddings = OpenAIEmbeddings()\r\n# create documents\r\ndescriptions = [\"description 1\", \"description 2\"]\r\ndesc_embeddings = embeddings.embed_documents(texts=descriptions)\r\ndocs = DocList[MyDoc](\r\n    [\r\n        MyDoc(description=desc, description_embedding=embedding)\r\n        for desc, embedding in zip(descriptions, desc_embeddings)\r\n    ]\r\n)\r\n\r\n# initialize document index with data\r\ndb = InMemoryExactNNIndex[MyDoc](docs)\r\n\r\n# create a retriever\r\nretriever = DocArrayRetriever(\r\n    index=db,\r\n    embeddings=embeddings,\r\n    search_field=\"description_embedding\",\r\n    content_field=\"description\",\r\n)\r\n\r\n# find the relevant document\r\ndoc = retriever.get_relevant_documents(\"action movies\")\r\nprint(doc)\r\n```\r\n\r\n#### Who can review?\r\n\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6031/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 2,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6031/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6030",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6030/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6030/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6030/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6030",
        "id": 1752003436,
        "node_id": "PR_kwDOIPDwls5Su6cZ",
        "number": 6030,
        "title": "Add OctoAI LLM endpoint wrapper and embedding endpoint wrapper",
        "user": {
            "login": "AI-Bassem",
            "id": 125713079,
            "node_id": "U_kgDOB346tw",
            "avatar_url": "https://avatars.githubusercontent.com/u/125713079?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AI-Bassem",
            "html_url": "https://github.com/AI-Bassem",
            "followers_url": "https://api.github.com/users/AI-Bassem/followers",
            "following_url": "https://api.github.com/users/AI-Bassem/following{/other_user}",
            "gists_url": "https://api.github.com/users/AI-Bassem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AI-Bassem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AI-Bassem/subscriptions",
            "organizations_url": "https://api.github.com/users/AI-Bassem/orgs",
            "repos_url": "https://api.github.com/users/AI-Bassem/repos",
            "events_url": "https://api.github.com/users/AI-Bassem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AI-Bassem/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899415699,
                "node_id": "LA_kwDOIPDwls8AAAABJAcmkw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/llms",
                "name": "llms",
                "color": "7CDBB2",
                "default": false,
                "description": ""
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-12T06:34:29Z",
        "updated_at": "2023-06-29T05:36:44Z",
        "closed_at": "2023-06-29T05:36:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6030",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6030",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6030.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6030.patch",
            "merged_at": "2023-06-29T05:36:43Z"
        },
        "body": "This pull request introduces support for [OctoAI's Compute Service](https://octoai.cloud/) embedding endpoints and large language model endpoints into the LangChain project. The changes encompass additions to various files to accommodate OctoAI's API integration.\r\n\r\n**Details of the changes:**\r\n\r\n**langchain/__init__.py** and **langchain/llms/__init__.py:** Updates to these initialization files allow OctoAI's services to be utilized in the LangChain's workflow. The changes add 'OctoAIEndpoint' as an additional language model option.\r\n\r\n**langchain/embeddings/octoai_embeddings.py:** This new file creates a wrapper for OctoAI embedding endpoints. This addition allows users to compute embeddings of documents and queries using OctoAI's service.\r\n\r\n**langchain/llms/octoai_endpoint.py**: This file introduces a new class, 'OctoAIEndpoint', which serves as a wrapper for OctoAI's large language model endpoints. It includes methods for interacting with OctoAI's API and getting responses from it.\r\n\r\n**tests/integration_tests/embeddings/test_octoai_embeddings.py**: This file introduces tests to ensure the correct functioning of the OctoAI embedding endpoint using the Instructor-Large model endpoint. It includes tests for document and query embedding functionalities.\r\n\r\n**tests/integration_tests/llms/test_octoai_endpoint.py**: This file includes tests for OctoAI's LLM wrapper for MPT-7B model endpoint. It covers various scenarios including valid API calls, calls that result in errors, and the saving/loading of language model endpoints.\r\n\r\n**docs/modules/models/llms/integrations/octoai.ipynb**: This notebook shows how to use LangChain to interact with `OctoAI` [LLM endpoints](https://octoai.cloud/templates)\r\n\r\nPlease note that to use the newly added OctoAI's services, users should have the octoai python package installed `pip install octoai`, and the environment variables OCTOAI_API_TOKEN set with the API token and ENDPOINT_URL set with endpoint_url. The API token and endpoint URL can be obtained by cloning a template and creating an API token at https://octoai.cloud.\r\n\r\nThanks in advance for your review!\r\n\r\n@hwchase17 @agola11\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6030/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6030/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6029",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6029/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6029/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6029/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6029",
        "id": 1751946027,
        "node_id": "I_kwDOIPDwls5obJMr",
        "number": 6029,
        "title": "ValueError: not enough values to unpack (expected 2, got 1)",
        "user": {
            "login": "ashioyajotham",
            "id": 71454095,
            "node_id": "MDQ6VXNlcjcxNDU0MDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/71454095?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ashioyajotham",
            "html_url": "https://github.com/ashioyajotham",
            "followers_url": "https://api.github.com/users/ashioyajotham/followers",
            "following_url": "https://api.github.com/users/ashioyajotham/following{/other_user}",
            "gists_url": "https://api.github.com/users/ashioyajotham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ashioyajotham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ashioyajotham/subscriptions",
            "organizations_url": "https://api.github.com/users/ashioyajotham/orgs",
            "repos_url": "https://api.github.com/users/ashioyajotham/repos",
            "events_url": "https://api.github.com/users/ashioyajotham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ashioyajotham/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-06-12T05:50:34Z",
        "updated_at": "2023-09-19T16:08:44Z",
        "closed_at": "2023-09-19T16:08:44Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI keep getting this error when generating Chroma vectors. Here's my code:\r\n`from langchain.chat_models import ChatOpenAI\r\nfrom langchain.chains import RetrievalQA\r\nfrom langchain.document_loaders import GoogleDriveLoader\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\nfrom langchain.vectorstores import Chroma\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\n\r\nfolder_id = ''\r\nloader = GoogleDriveLoader(folder_id = folder_id, \r\n                           recursive=False)\r\n\r\ndocs = loader.load(encoding='utf8')\r\n\r\ntext_splitter = RecursiveCharacterTextSplitter(\r\n    chunk_size=4000, chunk_overlap=0, separators=[\"\", \"\\n\", \",\"]\r\n)\r\n\r\ntexts = text_splitter.split_documents(docs)\r\nembeddings = OpenAIEmbeddings(openai_api_key=\"\")\r\ndb = Chroma.from_documents(texts, embeddings)\r\nretriever = db.as_retriever()\r\n\r\nllm = ChatOpenAI(temperature=0, model_name=\"davinci\")\r\nqa = RetrievalQA.from_chain_type(llm=llm, chain_type=\"stuff\", retriever=retriever)\r\n\r\nwhile True:\r\n    question = input(\"> \")\r\n    answer = qa.run(question)\r\n    print(answer)`\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6029/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6029/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6028",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6028/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6028/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6028/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6028",
        "id": 1751938791,
        "node_id": "I_kwDOIPDwls5obHbn",
        "number": 6028,
        "title": "LLMMathChain 'VariableNode' object has no attribute 'factorial'. Please try again with a valid numerical expression",
        "user": {
            "login": "eoriont",
            "id": 6570131,
            "node_id": "MDQ6VXNlcjY1NzAxMzE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6570131?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eoriont",
            "html_url": "https://github.com/eoriont",
            "followers_url": "https://api.github.com/users/eoriont/followers",
            "following_url": "https://api.github.com/users/eoriont/following{/other_user}",
            "gists_url": "https://api.github.com/users/eoriont/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eoriont/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eoriont/subscriptions",
            "organizations_url": "https://api.github.com/users/eoriont/orgs",
            "repos_url": "https://api.github.com/users/eoriont/repos",
            "events_url": "https://api.github.com/users/eoriont/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eoriont/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-12T05:42:29Z",
        "updated_at": "2023-09-18T16:08:14Z",
        "closed_at": "2023-09-18T16:08:13Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version 0.0.196\r\nwindows, wsl2\r\npython 3.11.3\n\n### Who can help?\n\n@agola11\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nFollow instructions on this page:\r\nhttps://python.langchain.com/en/latest/modules/agents/plan_and_execute.html\r\n\r\nThen run the following prompt:\r\n```\r\nagent.run(\"Who is Elon Musk in a relationship with? What is their current age factorial?\")\r\n```\n\n### Expected behavior\n\nIt should plan out how to solve the problem (search significant other, search age, find factorial, respond) then execute each action and respond to the user. Instead, when it gets to the factorial part, it fails, claiming that there's no factorial function. Stacktrace:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\nFile [~/miniconda3/envs/langchain/lib/python3.11/site-packages/langchain/chains/llm_math/base.py:80](https://vscode-remote+wsl-002bubuntu-002d20-002e04.vscode-resource.vscode-cdn.net/home/oriont/dev/langchain-phx/~/miniconda3/envs/langchain/lib/python3.11/site-packages/langchain/chains/llm_math/base.py:80), in LLMMathChain._evaluate_expression(self, expression)\r\n     78     local_dict = {\"pi\": math.pi, \"e\": math.e}\r\n     79     output = str(\r\n---> 80         numexpr.evaluate(\r\n     81             expression.strip(),\r\n     82             global_dict={},  # restrict access to globals\r\n     83             local_dict=local_dict,  # add common mathematical functions\r\n     84         )\r\n     85     )\r\n     86 except Exception as e:\r\n\r\nFile [~/miniconda3/envs/langchain/lib/python3.11/site-packages/numexpr/necompiler.py:817](https://vscode-remote+wsl-002bubuntu-002d20-002e04.vscode-resource.vscode-cdn.net/home/oriont/dev/langchain-phx/~/miniconda3/envs/langchain/lib/python3.11/site-packages/numexpr/necompiler.py:817), in evaluate(ex, local_dict, global_dict, out, order, casting, **kwargs)\r\n    816 if expr_key not in _names_cache:\r\n--> 817     _names_cache[expr_key] = getExprNames(ex, context)\r\n    818 names, ex_uses_vml = _names_cache[expr_key]\r\n\r\nFile [~/miniconda3/envs/langchain/lib/python3.11/site-packages/numexpr/necompiler.py:704](https://vscode-remote+wsl-002bubuntu-002d20-002e04.vscode-resource.vscode-cdn.net/home/oriont/dev/langchain-phx/~/miniconda3/envs/langchain/lib/python3.11/site-packages/numexpr/necompiler.py:704), in getExprNames(text, context)\r\n    703 def getExprNames(text, context):\r\n--> 704     ex = stringToExpression(text, {}, context)\r\n    705     ast = expressionToAST(ex)\r\n\r\nFile [~/miniconda3/envs/langchain/lib/python3.11/site-packages/numexpr/necompiler.py:289](https://vscode-remote+wsl-002bubuntu-002d20-002e04.vscode-resource.vscode-cdn.net/home/oriont/dev/langchain-phx/~/miniconda3/envs/langchain/lib/python3.11/site-packages/numexpr/necompiler.py:289), in stringToExpression(s, types, context)\r\n    288 # now build the expression\r\n...\r\n     93 return re.sub(r\"^\\[|\\]$\", \"\", output)\r\n\r\nValueError: LLMMathChain._evaluate(\"\r\nmath.factorial(33)\r\n\") raised error: 'VariableNode' object has no attribute 'factorial'. Please try again with a valid numerical expression\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6028/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6028/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6027",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6027/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6027/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6027/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6027",
        "id": 1751928656,
        "node_id": "I_kwDOIPDwls5obE9Q",
        "number": 6027,
        "title": "ArxivAPIWrapper ",
        "user": {
            "login": "wenboown",
            "id": 1467314,
            "node_id": "MDQ6VXNlcjE0NjczMTQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1467314?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wenboown",
            "html_url": "https://github.com/wenboown",
            "followers_url": "https://api.github.com/users/wenboown/followers",
            "following_url": "https://api.github.com/users/wenboown/following{/other_user}",
            "gists_url": "https://api.github.com/users/wenboown/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wenboown/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wenboown/subscriptions",
            "organizations_url": "https://api.github.com/users/wenboown/orgs",
            "repos_url": "https://api.github.com/users/wenboown/repos",
            "events_url": "https://api.github.com/users/wenboown/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wenboown/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T05:30:46Z",
        "updated_at": "2023-06-16T05:16:43Z",
        "closed_at": "2023-06-16T05:16:43Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "The documentation says:\r\n\r\n>     It limits the Document content by doc_content_chars_max.\r\n>     Set doc_content_chars_max=None if you don't want to limit the content size.\r\n\r\nBut the claim type of int prevents this to be set as None:\r\nhttps://github.com/hwchase17/langchain/blob/289e9aeb9d122d689d68b2e77236ce3dfcd606a7/langchain/utilities/arxiv.py#LL41C5-L41C38\r\n\r\n> ValidationError: 1 validation error for ArxivAPIWrapper\r\n> doc_content_chars_max\r\n>   none is not an allowed value (type=type_error.none.not_allowed)\r\n\r\nCan you change that?\r\n\r\nIn addition, can you also expose this parameter to the `ArxivLoader`?\r\n\r\nThank you!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6027/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6027/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6026",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6026/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6026/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6026/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6026",
        "id": 1751860741,
        "node_id": "PR_kwDOIPDwls5SucD_",
        "number": 6026,
        "title": "bump ver to 198",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T04:16:59Z",
        "updated_at": "2023-06-12T04:32:46Z",
        "closed_at": "2023-06-12T04:32:45Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6026",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6026",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6026.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6026.patch",
            "merged_at": "2023-06-12T04:32:45Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6026/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6026/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6025",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6025/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6025/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6025/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6025",
        "id": 1751831130,
        "node_id": "I_kwDOIPDwls5oatJa",
        "number": 6025,
        "title": "Issue : Agent Executor stops due to iteration limit or time limit.",
        "user": {
            "login": "Rajlakshmi0187",
            "id": 47347650,
            "node_id": "MDQ6VXNlcjQ3MzQ3NjUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/47347650?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Rajlakshmi0187",
            "html_url": "https://github.com/Rajlakshmi0187",
            "followers_url": "https://api.github.com/users/Rajlakshmi0187/followers",
            "following_url": "https://api.github.com/users/Rajlakshmi0187/following{/other_user}",
            "gists_url": "https://api.github.com/users/Rajlakshmi0187/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Rajlakshmi0187/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Rajlakshmi0187/subscriptions",
            "organizations_url": "https://api.github.com/users/Rajlakshmi0187/orgs",
            "repos_url": "https://api.github.com/users/Rajlakshmi0187/repos",
            "events_url": "https://api.github.com/users/Rajlakshmi0187/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Rajlakshmi0187/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-12T03:48:01Z",
        "updated_at": "2023-09-18T16:08:19Z",
        "closed_at": "2023-09-18T16:08:19Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\npython 3.9.13\r\nlangchain (0.0.163)\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.chat_models import AzureChatOpenAI\r\nfrom langchain.agents import create_pandas_dataframe_agent\r\nfrom langchain.agents import create_csv_agent\r\nimport os\r\nimport openai\r\n\r\nos.environ[\u201cOPENAI_API_BASE\u201d] = os.environ[\u201cAZURE_OPENAI_ENDPOINT\u201d] = AZURE_OPENAI_ENDPOINT\r\nos.environ[\u201cOPENAI_API_KEY\u201d] = os.environ[\u201cAZURE_OPENAI_API_KEY\u201d] = AZURE_OPENAI_API_KEY\r\nos.environ[\u201cOPENAI_API_VERSION\u201d] = os.environ[\u201cAZURE_OPENAI_API_VERSION\u201d] = AZURE_OPENAI_API_VERSION\r\nos.environ[\u201cOPENAI_API_TYPE\u201d] = \u201cazure\u201d\r\n\r\ndf=pd.read_csv(\u2018data.csv\u2019).fillna(value = 0)\r\n\r\nllm = AzureChatOpenAI(deployment_name=\u201cgpt-35-turbo\u201d, model_name=\u201cgpt-35-turbo\u201d,temperature=0)\r\nagent_executor = create_pandas_dataframe_agent(llm=llm,df=df,verbose=True)\r\n\r\nresponse = agent_executor.run(prompt + QUESTION)\r\nprint(response)\n\n### Expected behavior\n\nThe current execution of agent results in errors like \"Agent stopped due to iteration limit or time limit\" and \"Couldn't parse LLM output\".\r\nAlso noticed that agent runs gets into multiple loops in identifying the valid tool but fails to identify tool , says as not valid tool and tries another one and ultimately stops with iteration limit or time limit.\r\n\r\nKindly suggest me on advice/suggestions to resolve the same.\r\nIs there any particular tabular data structure that langchain works best with?\r\nDo I need to add any particular kind of tool (As observed it tries multiple tools and says not valid tool)\r\nAny modifications I need to make with the code?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6025/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6025/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6024",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6024/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6024/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6024/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6024",
        "id": 1751817138,
        "node_id": "I_kwDOIPDwls5oapuy",
        "number": 6024,
        "title": "LLM\u6280\u672f\u548c\u8bad\u7ec3\u95ee\u9898\u7684\u5fae\u4fe1\u4ea4\u6d41\u7fa4 ",
        "user": {
            "login": "Anna10071",
            "id": 90118245,
            "node_id": "MDQ6VXNlcjkwMTE4MjQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/90118245?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Anna10071",
            "html_url": "https://github.com/Anna10071",
            "followers_url": "https://api.github.com/users/Anna10071/followers",
            "following_url": "https://api.github.com/users/Anna10071/following{/other_user}",
            "gists_url": "https://api.github.com/users/Anna10071/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Anna10071/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Anna10071/subscriptions",
            "organizations_url": "https://api.github.com/users/Anna10071/orgs",
            "repos_url": "https://api.github.com/users/Anna10071/repos",
            "events_url": "https://api.github.com/users/Anna10071/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Anna10071/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-12T03:21:25Z",
        "updated_at": "2023-10-12T16:08:53Z",
        "closed_at": "2023-10-12T16:08:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\n\u626b\u7801\u8fdb\u7fa4\uff0c\u4ea4\u6d41Chinese LLM \u6a21\u578b\u8bad\u7ec3\u7684\u95ee\u9898\u548cLLM\u7684\u6280\u672f\r\n\r\n\r\n![1acaa4cf83de26d556929f1f6ef94ca](https://github.com/hwchase17/langchain/assets/90118245/a10bdb88-aa9c-4438-b77e-9f6fbc7b71e1)\r\n\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6024/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6024/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6023",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6023/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6023/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6023/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6023",
        "id": 1751773798,
        "node_id": "PR_kwDOIPDwls5SuJOe",
        "number": 6023,
        "title": "add from_documents interface in awadb vector store",
        "user": {
            "login": "ljeagle",
            "id": 15918167,
            "node_id": "MDQ6VXNlcjE1OTE4MTY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15918167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ljeagle",
            "html_url": "https://github.com/ljeagle",
            "followers_url": "https://api.github.com/users/ljeagle/followers",
            "following_url": "https://api.github.com/users/ljeagle/following{/other_user}",
            "gists_url": "https://api.github.com/users/ljeagle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ljeagle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ljeagle/subscriptions",
            "organizations_url": "https://api.github.com/users/ljeagle/orgs",
            "repos_url": "https://api.github.com/users/ljeagle/repos",
            "events_url": "https://api.github.com/users/ljeagle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ljeagle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T02:30:09Z",
        "updated_at": "2023-06-12T02:35:04Z",
        "closed_at": "2023-06-12T02:35:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6023",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6023",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6023.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6023.patch",
            "merged_at": "2023-06-12T02:35:03Z"
        },
        "body": "added new interface from_documents in awadb vector store\r\n  @dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6023/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6023/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6022",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6022/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6022/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6022/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6022",
        "id": 1751759298,
        "node_id": "PR_kwDOIPDwls5SuGRa",
        "number": 6022,
        "title": "Update MongoDB Atlas support docs",
        "user": {
            "login": "bafMdb",
            "id": 55411495,
            "node_id": "MDQ6VXNlcjU1NDExNDk1",
            "avatar_url": "https://avatars.githubusercontent.com/u/55411495?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bafMdb",
            "html_url": "https://github.com/bafMdb",
            "followers_url": "https://api.github.com/users/bafMdb/followers",
            "following_url": "https://api.github.com/users/bafMdb/following{/other_user}",
            "gists_url": "https://api.github.com/users/bafMdb/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bafMdb/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bafMdb/subscriptions",
            "organizations_url": "https://api.github.com/users/bafMdb/orgs",
            "repos_url": "https://api.github.com/users/bafMdb/repos",
            "events_url": "https://api.github.com/users/bafMdb/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bafMdb/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T02:06:49Z",
        "updated_at": "2023-06-12T12:42:10Z",
        "closed_at": "2023-06-12T03:57:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6022",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6022",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6022.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6022.patch",
            "merged_at": "2023-06-12T03:57:15Z"
        },
        "body": "Updating MongoDB Atlas support docs @hwchase17 let me know if you have any questions\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6022/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6022/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6021",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6021/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6021/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6021/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6021",
        "id": 1751724354,
        "node_id": "PR_kwDOIPDwls5St_DR",
        "number": 6021,
        "title": "Add from_documents interface for the AwaDB vector store",
        "user": {
            "login": "ljeagle",
            "id": 15918167,
            "node_id": "MDQ6VXNlcjE1OTE4MTY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15918167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ljeagle",
            "html_url": "https://github.com/ljeagle",
            "followers_url": "https://api.github.com/users/ljeagle/followers",
            "following_url": "https://api.github.com/users/ljeagle/following{/other_user}",
            "gists_url": "https://api.github.com/users/ljeagle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ljeagle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ljeagle/subscriptions",
            "organizations_url": "https://api.github.com/users/ljeagle/orgs",
            "repos_url": "https://api.github.com/users/ljeagle/repos",
            "events_url": "https://api.github.com/users/ljeagle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ljeagle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T01:37:13Z",
        "updated_at": "2023-06-12T01:48:27Z",
        "closed_at": "2023-06-12T01:48:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6021",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6021",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6021.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6021.patch",
            "merged_at": null
        },
        "body": "added from_documents interface for the awadb vector store\r\n\r\n@dev2049\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6021/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6021/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6020",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6020/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6020/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6020/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6020",
        "id": 1751685895,
        "node_id": "PR_kwDOIPDwls5St2rc",
        "number": 6020,
        "title": "Update check",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-12T00:52:02Z",
        "updated_at": "2023-06-12T00:59:10Z",
        "closed_at": "2023-06-12T00:59:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6020",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6020",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6020.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6020.patch",
            "merged_at": "2023-06-12T00:59:09Z"
        },
        "body": "We were assigning the name as None in on_chat_model_start then not updating, resulting in a validation error.  Huzzah for pydantic",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6020/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6020/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6019",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6019/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6019/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6019/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6019",
        "id": 1751680025,
        "node_id": "I_kwDOIPDwls5oaIQZ",
        "number": 6019,
        "title": "Last chunk output by RecursiveCharacterTextSplitter is often too small to be useful",
        "user": {
            "login": "ShelbyJenkins",
            "id": 47464908,
            "node_id": "MDQ6VXNlcjQ3NDY0OTA4",
            "avatar_url": "https://avatars.githubusercontent.com/u/47464908?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ShelbyJenkins",
            "html_url": "https://github.com/ShelbyJenkins",
            "followers_url": "https://api.github.com/users/ShelbyJenkins/followers",
            "following_url": "https://api.github.com/users/ShelbyJenkins/following{/other_user}",
            "gists_url": "https://api.github.com/users/ShelbyJenkins/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ShelbyJenkins/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ShelbyJenkins/subscriptions",
            "organizations_url": "https://api.github.com/users/ShelbyJenkins/orgs",
            "repos_url": "https://api.github.com/users/ShelbyJenkins/repos",
            "events_url": "https://api.github.com/users/ShelbyJenkins/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ShelbyJenkins/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-12T00:39:03Z",
        "updated_at": "2023-09-18T16:08:24Z",
        "closed_at": "2023-09-18T16:08:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "https://github.com/hwchase17/langchain/blob/18af149e91e62b3ac7728ddea420688d41043734/langchain/text_splitter.py#L420\r\n\r\nBecause it goes from top to bottom the last chunk has the potential to be of any size and is frequently too small to be useful.\r\n\r\nI wrote a new class that is more or less a copy of the original function, but adjusts the output if if the last chunk is too small (less than 75% of chunk_size). It does this by adjusting the chunk size upwards to chunk_size = chunk_sizer + (small sized chunk / (chunks - 1)). This allows the last chunks token count to be distributed across all chunks and the end result is that there are no longer bad (small) chunks.\r\n\r\nI'm hesitant to create a PR from this because it's such a large change. I believe the correct course would be to integrate it into the main function, but because it rewrites the merge_splits function it would impact all splitters. It's also quite a bit slower than the original class because it can take a few tries to get to the write size. There are optimizations to be had.\r\n@hwchase17 \r\nhttps://github.com/ShelbyJenkins/langchain/blob/master/langchain/text_splitter.py#L793",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6019/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6019/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6018",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6018/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6018/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6018/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6018",
        "id": 1751642669,
        "node_id": "PR_kwDOIPDwls5Sttzt",
        "number": 6018,
        "title": "Remove from PR template",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-11T23:07:47Z",
        "updated_at": "2023-06-12T02:34:28Z",
        "closed_at": "2023-06-12T02:34:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6018",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6018",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6018.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6018.patch",
            "merged_at": "2023-06-12T02:34:27Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6018/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6018/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6017",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6017/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6017/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6017/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6017",
        "id": 1751634185,
        "node_id": "PR_kwDOIPDwls5StsD0",
        "number": 6017,
        "title": "Langchain decorators",
        "user": {
            "login": "ju-bezdek",
            "id": 27913091,
            "node_id": "MDQ6VXNlcjI3OTEzMDkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/27913091?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ju-bezdek",
            "html_url": "https://github.com/ju-bezdek",
            "followers_url": "https://api.github.com/users/ju-bezdek/followers",
            "following_url": "https://api.github.com/users/ju-bezdek/following{/other_user}",
            "gists_url": "https://api.github.com/users/ju-bezdek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ju-bezdek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ju-bezdek/subscriptions",
            "organizations_url": "https://api.github.com/users/ju-bezdek/orgs",
            "repos_url": "https://api.github.com/users/ju-bezdek/repos",
            "events_url": "https://api.github.com/users/ju-bezdek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ju-bezdek/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-11T22:37:16Z",
        "updated_at": "2023-06-12T02:32:25Z",
        "closed_at": "2023-06-12T02:32:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6017",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6017",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6017.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6017.patch",
            "merged_at": "2023-06-12T02:32:24Z"
        },
        "body": "Added description of LangChain Decorators \u2728 into the integration section\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n@hwchase17 \r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6017/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6017/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6016",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6016/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6016/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6016/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6016",
        "id": 1751630974,
        "node_id": "I_kwDOIPDwls5oZ8R-",
        "number": 6016,
        "title": "extra semicolon with SQLDatabaseChain when used with Oracle",
        "user": {
            "login": "yogeshb369",
            "id": 133894569,
            "node_id": "U_kgDOB_sRqQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/133894569?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yogeshb369",
            "html_url": "https://github.com/yogeshb369",
            "followers_url": "https://api.github.com/users/yogeshb369/followers",
            "following_url": "https://api.github.com/users/yogeshb369/following{/other_user}",
            "gists_url": "https://api.github.com/users/yogeshb369/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yogeshb369/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yogeshb369/subscriptions",
            "organizations_url": "https://api.github.com/users/yogeshb369/orgs",
            "repos_url": "https://api.github.com/users/yogeshb369/repos",
            "events_url": "https://api.github.com/users/yogeshb369/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yogeshb369/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-11T22:24:31Z",
        "updated_at": "2023-09-19T16:08:49Z",
        "closed_at": "2023-09-19T16:08:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nSQLDatabaseChain is appending a semicolon to created SQL. which is not liked by cx_oracle (or Oracle database by implication) - since it appends another semicolon in the end. making two semicolons in effect and causing error \r\n\r\nsqlalchemy.exc.DatabaseError: (cx_Oracle.DatabaseError) ORA-00933: SQL command not properly ended\r\n\r\nhttps://cx-oracle.readthedocs.io/en/latest/user_guide/sql_execution.html\r\n\r\nNeed a way to control this behavior.\r\n\r\nhttps://python.langchain.com/en/latest/modules/chains/examples/sqlite.html#\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nSteps:\r\n\r\nfrom langchain import OpenAI, SQLDatabase, SQLDatabaseChain\r\nimport cx_Oracle\r\n\r\ndb = SQLDatabase.from_uri(\"oracle://ora-user-name:ora-user-password@ora-host-name:1521/service\")\r\nllm = OpenAI(temperature=0, verbose=True)\r\n\r\ndb_chain = SQLDatabaseChain.from_llm(llm, db, verbose=True)\r\ndb_chain.run(\"How many employees are there?\")\r\n\r\n\r\nsqlalchemy.exc.DatabaseError: (cx_Oracle.DatabaseError) ORA-00933: SQL command not properly ended\r\n[SQL: SELECT COUNT(*) FROM YOUR_TABLE_NAME;]\r\n(Background on this error at: https://sqlalche.me/e/20/4xp6)\r\n\n\n### Expected behavior\n\nNeed a way to optionally suppress a semicolon being appended. or if it could be avoided in favor of cx_oracle - since it doesnt like a semicolon anyways in SQL",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6016/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6016/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6015",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6015/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6015/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6015/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6015",
        "id": 1751630485,
        "node_id": "PR_kwDOIPDwls5StrTz",
        "number": 6015,
        "title": "I before E",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-11T22:22:34Z",
        "updated_at": "2023-06-11T22:45:13Z",
        "closed_at": "2023-06-11T22:45:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6015",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6015",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6015.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6015.patch",
            "merged_at": "2023-06-11T22:45:12Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6015/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6015/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6014",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6014/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6014/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6014/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6014",
        "id": 1751628136,
        "node_id": "I_kwDOIPDwls5oZ7lo",
        "number": 6014,
        "title": "PALChain In-context-learning won't scale to multiple problem types.",
        "user": {
            "login": "willsmithorg",
            "id": 907059,
            "node_id": "MDQ6VXNlcjkwNzA1OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/907059?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/willsmithorg",
            "html_url": "https://github.com/willsmithorg",
            "followers_url": "https://api.github.com/users/willsmithorg/followers",
            "following_url": "https://api.github.com/users/willsmithorg/following{/other_user}",
            "gists_url": "https://api.github.com/users/willsmithorg/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/willsmithorg/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/willsmithorg/subscriptions",
            "organizations_url": "https://api.github.com/users/willsmithorg/orgs",
            "repos_url": "https://api.github.com/users/willsmithorg/repos",
            "events_url": "https://api.github.com/users/willsmithorg/events{/privacy}",
            "received_events_url": "https://api.github.com/users/willsmithorg/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-11T22:13:42Z",
        "updated_at": "2023-09-17T17:13:12Z",
        "closed_at": "2023-09-17T17:13:11Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nCurrently the PALChain does in-context learning by passing an in-context learning prompt with 8 maths problem solutions in a single large prompt.\r\n\r\nIf we want the power of PALChain to increase and solve different problem types, we can't keep on adding more and more problem solutions in a single prompt.\r\n\r\nAs an alternative, we should store more problem solutions in a list, and only include the most relevant to the query in the prompt.\n\n### Motivation\n\nI would like to enhance PAL to solve many more types of problems that can be solved in Python code, e.g. those described in leetcode.com, maths problems in the UK 11+, GCSE and even \"A\" level example, etc. etc.\n\n### Your contribution\n\nI am happy to work on a PR for this.\r\n\r\nHow I see it working:\r\n- long list of maths problems solutions in the existing format (natural language question; python code to print the answer).\r\n- the first time the PALChain is invoked, every one of these is embedded using an embedding model.\r\n- every query that a user submits is also embedded, and the most similar questions are passed into the prompt.\r\n\r\nThere is a risk that \"Most similar\" gets distracted by proper nouns.  E.g. if there is a problem solution saying \"Jonathan has 5 gold balls, ...\" and the user submits a question on a completely different maths topic, e.g. \"Jonathan wants to express 3/5 as a percentage.\"    Jonathan is irrelevant but the embedding similiarity algorithm may flag them as similar.  For that reason I propose that as a first pass, both the problem solution and the user query is first passed through a named entity recognition pass to a LLM, which removed names entity related to people, geographical locations etc and replaces them with generic tokens.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6014/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6014/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6013",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6013/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6013/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6013/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6013",
        "id": 1751597844,
        "node_id": "I_kwDOIPDwls5oZ0MU",
        "number": 6013,
        "title": "How to use Output parser with LLM Chain",
        "user": {
            "login": "ZohaibRamzan",
            "id": 48449038,
            "node_id": "MDQ6VXNlcjQ4NDQ5MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/48449038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZohaibRamzan",
            "html_url": "https://github.com/ZohaibRamzan",
            "followers_url": "https://api.github.com/users/ZohaibRamzan/followers",
            "following_url": "https://api.github.com/users/ZohaibRamzan/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZohaibRamzan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZohaibRamzan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZohaibRamzan/subscriptions",
            "organizations_url": "https://api.github.com/users/ZohaibRamzan/orgs",
            "repos_url": "https://api.github.com/users/ZohaibRamzan/repos",
            "events_url": "https://api.github.com/users/ZohaibRamzan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZohaibRamzan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 10,
        "created_at": "2023-06-11T20:46:29Z",
        "updated_at": "2023-10-15T16:06:38Z",
        "closed_at": "2023-10-15T16:06:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "###Use of Output parser with LLM Chain\r\n\r\nI want to use the sequential chain of two LLm chains. The first chain is coded as below. I want to get the output of this chain as a Python list of aspects.\r\n\r\n```\r\n# This is an LLMChain for Aspects Extraction.\r\n\r\nexamples =[ {\r\n\"review\": '''Improve the communication updates to families. Improve consistency, with housekeeping it was supposed to be weekly but now it is every 2 or 3 weeks. There is no consistency in the staff either due to the high turnover rate. Improve the services in the dining room along with meal options.''',\r\n\"aspects\": '''Relevant Aspects are communication on updates, housekeeping consistency, staff turnover, and dining services.'''\r\n},\r\n            \r\n{\"review\": '''On paper they do, but my wife has not been brought to them. I have not had a meeting to set up a plan for her. No one wheels her to partake in the activities. They need somebody there that could take them to activities if they wanted. They should bring them to activities where other people will watch over them. The people that are in charge, like the head nurse and activities director, are good about getting ahold of and answering your questions. Once you get down to the next level, they are overwhelmed. They could use another set of eyes and hands. In the memory care area, a lot of people need care at the same time.''',\r\n\"aspects\": '''Relevant Aspects are Staff Attitude, Care Plan Setup, Staff Involvement in Activities, Oversight during Activities, Memory Care Area'''}\r\n]\r\n\r\n#Configure a formatter that will format the few shot examples into a string. This formatter should be a PromptTemplate object.\r\nprompt_template='''\r\nReview: {review}\r\n{aspects}\r\n'''\r\nexample_prompt = PromptTemplate(input_variables=[\"review\", \"aspects\"], template= prompt_template, output_parser=output_parser )\r\n\r\nfinal_prompt = FewShotPromptTemplate(\r\n    examples=examples, \r\n    example_prompt=example_prompt, \r\n    suffix=\"Review: {review}\", \r\n    input_variables=[\"review\"],\r\n    prefix=\"We are extracting the aspects from the review given by the residents of nursing homes. Take the Review as input and extract the different aspects about the the staff, food, \\\r\nbuilding, activities, management, cost of the the nuursing home.\"\r\n)\r\n\r\noutput=aspect_extraction_chain.predict_and_parse(review=\"The community has popcorn days, church, birthday celebrations, holiday parties, therapy dogs, and so much more. My mother is very happy here, and she is kept active. They do a great job of keeping the elderly minds active and involved. The dining program is great as well. My mother tends to eat slow, but the dining program always lets my mother stay to finish her food. Any residents that want to practice religion, this is also offered here! More outings have been added, they just went to Walmart recently.\")\r\n```\r\n\r\nThe current result is a string like \r\n'Relevant Aspects are Activities, Elderly Minds Engagement, Dining Program, Religious Offerings, Outings.'\r\n\r\nI want the result as: ['\\nActivities', 'Elderly Minds Engagement', 'Dining Program', 'Religious Offerings', 'Outings.']\r\n\r\n\r\n### Suggestion:\r\n\r\nKindly guide me on How to use langchain output parser for it.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6013/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6013/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6012",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6012/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6012/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6012/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6012",
        "id": 1751597519,
        "node_id": "PR_kwDOIPDwls5Stkqo",
        "number": 6012,
        "title": "Harrison/hologres",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-11T20:45:28Z",
        "updated_at": "2023-06-12T03:56:52Z",
        "closed_at": "2023-06-12T03:56:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6012",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6012",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6012.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6012.patch",
            "merged_at": "2023-06-12T03:56:51Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6012/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6012/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6011",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6011/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6011/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6011/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6011",
        "id": 1751594183,
        "node_id": "PR_kwDOIPDwls5Stj-w",
        "number": 6011,
        "title": "Harrison/cognitive search",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-11T20:35:01Z",
        "updated_at": "2023-06-12T04:15:43Z",
        "closed_at": "2023-06-12T04:15:42Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6011",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6011",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6011.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6011.patch",
            "merged_at": "2023-06-12T04:15:42Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6011/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6011/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6010",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6010/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6010/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6010/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6010",
        "id": 1751589296,
        "node_id": "PR_kwDOIPDwls5StjCp",
        "number": 6010,
        "title": "Harrison/embaas",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-11T20:16:54Z",
        "updated_at": "2023-06-11T20:35:15Z",
        "closed_at": "2023-06-11T20:35:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6010",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6010",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6010.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6010.patch",
            "merged_at": "2023-06-11T20:35:14Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6010/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6010/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6009",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6009/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6009/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6009/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6009",
        "id": 1751547691,
        "node_id": "PR_kwDOIPDwls5StaRR",
        "number": 6009,
        "title": "[Bug fix] Fix the chat memory to save the result when output text is nested in json",
        "user": {
            "login": "jpzhangvincent",
            "id": 7220686,
            "node_id": "MDQ6VXNlcjcyMjA2ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7220686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpzhangvincent",
            "html_url": "https://github.com/jpzhangvincent",
            "followers_url": "https://api.github.com/users/jpzhangvincent/followers",
            "following_url": "https://api.github.com/users/jpzhangvincent/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpzhangvincent/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpzhangvincent/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpzhangvincent/subscriptions",
            "organizations_url": "https://api.github.com/users/jpzhangvincent/orgs",
            "repos_url": "https://api.github.com/users/jpzhangvincent/repos",
            "events_url": "https://api.github.com/users/jpzhangvincent/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpzhangvincent/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4899126096,
                "node_id": "LA_kwDOIPDwls8AAAABJAK7UA",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20memory",
                "name": "area: memory",
                "color": "BFDADC",
                "default": false,
                "description": "Related to memory module"
            },
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-11T18:32:00Z",
        "updated_at": "2023-11-07T04:15:08Z",
        "closed_at": "2023-11-07T04:15:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6009",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6009",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6009.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6009.patch",
            "merged_at": null
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\nI used the`RetrievalQA` chain with the argument `return_source_documents=True` as part of the tools in the agent framework with conversation buffer memory. It turns out at the last step, the output text is still nested in json like `{...,'output':{'result': ..., 'source_documents':...}}` and then it caused the error in the `self.chat_memory.add_ai_message(output_str)` which only expects the output to be only string type. \r\n\r\nSo I added another check to parse out the final output text if the `output`(original output key) is still the `Dict` type and apply some heuristics to retrieve the text with the new assumed output key based on the common output keys in common chains.\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n@vowelparrot @hwchase17 \r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6009/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6009/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6008",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6008/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6008/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6008/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6008",
        "id": 1751537247,
        "node_id": "PR_kwDOIPDwls5StYHs",
        "number": 6008,
        "title": "[APIChain] enhance the robustness or url",
        "user": {
            "login": "jpzhangvincent",
            "id": 7220686,
            "node_id": "MDQ6VXNlcjcyMjA2ODY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7220686?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jpzhangvincent",
            "html_url": "https://github.com/jpzhangvincent",
            "followers_url": "https://api.github.com/users/jpzhangvincent/followers",
            "following_url": "https://api.github.com/users/jpzhangvincent/following{/other_user}",
            "gists_url": "https://api.github.com/users/jpzhangvincent/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jpzhangvincent/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jpzhangvincent/subscriptions",
            "organizations_url": "https://api.github.com/users/jpzhangvincent/orgs",
            "repos_url": "https://api.github.com/users/jpzhangvincent/repos",
            "events_url": "https://api.github.com/users/jpzhangvincent/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jpzhangvincent/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-11T18:01:19Z",
        "updated_at": "2023-06-11T20:13:57Z",
        "closed_at": "2023-06-11T20:13:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6008",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6008",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6008.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6008.patch",
            "merged_at": "2023-06-11T20:13:57Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\nI used the APIChain sometimes it failed during the intermediate step when generating the api url and calling the `request` function. After some digging, I found the url sometimes includes the space at the beginning, like `%20https://...api.com` which causes the ` self.requests_wrapper.get` internal function to fail.\r\n\r\nIncluding a little string preprocessing `.strip` to remove the space seems to improve the robustness of the APIchain to make sure it can send the request and retrieve the API result more reliably. \r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n@vowelparrot\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6008/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6008/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6007",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6007/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6007/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6007/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6007",
        "id": 1751520160,
        "node_id": "PR_kwDOIPDwls5StUmm",
        "number": 6007,
        "title": "bump version to 197",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-11T17:11:41Z",
        "updated_at": "2023-06-11T17:14:59Z",
        "closed_at": "2023-06-11T17:14:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6007",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6007",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6007.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6007.patch",
            "merged_at": "2023-06-11T17:14:58Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6007/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6007/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6006",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6006/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6006/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6006/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6006",
        "id": 1751512689,
        "node_id": "PR_kwDOIPDwls5StTF0",
        "number": 6006,
        "title": "Update databricks.md",
        "user": {
            "login": "eltociear",
            "id": 22633385,
            "node_id": "MDQ6VXNlcjIyNjMzMzg1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22633385?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eltociear",
            "html_url": "https://github.com/eltociear",
            "followers_url": "https://api.github.com/users/eltociear/followers",
            "following_url": "https://api.github.com/users/eltociear/following{/other_user}",
            "gists_url": "https://api.github.com/users/eltociear/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eltociear/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eltociear/subscriptions",
            "organizations_url": "https://api.github.com/users/eltociear/orgs",
            "repos_url": "https://api.github.com/users/eltociear/repos",
            "events_url": "https://api.github.com/users/eltociear/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eltociear/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-11T16:49:53Z",
        "updated_at": "2023-06-11T20:13:34Z",
        "closed_at": "2023-06-11T20:13:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6006",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6006",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6006.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6006.patch",
            "merged_at": "2023-06-11T20:13:33Z"
        },
        "body": "HuggingFace -> Hugging Face\r\n\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6006/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6006/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6005",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6005/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6005/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6005/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6005",
        "id": 1751499911,
        "node_id": "PR_kwDOIPDwls5StQif",
        "number": 6005,
        "title": "Raise an exception in MRKL if no tool is provided.",
        "user": {
            "login": "juppytt",
            "id": 46583939,
            "node_id": "MDQ6VXNlcjQ2NTgzOTM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/46583939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juppytt",
            "html_url": "https://github.com/juppytt",
            "followers_url": "https://api.github.com/users/juppytt/followers",
            "following_url": "https://api.github.com/users/juppytt/following{/other_user}",
            "gists_url": "https://api.github.com/users/juppytt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juppytt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juppytt/subscriptions",
            "organizations_url": "https://api.github.com/users/juppytt/orgs",
            "repos_url": "https://api.github.com/users/juppytt/repos",
            "events_url": "https://api.github.com/users/juppytt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juppytt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-11T16:13:49Z",
        "updated_at": "2023-06-17T16:43:03Z",
        "closed_at": "2023-06-17T16:43:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6005",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6005",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6005.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6005.patch",
            "merged_at": "2023-06-17T16:43:02Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\nImplemented validation for cases where no tools are provided. \r\nThis change allows for the handling of scenarios where certain MRKL tools, such as Zapier Natural Language Actions, may not support any tools. With this validation, we prevent unnecessary chaining of API usage. \r\n\r\nThis pull request is partially related to issue #5977.\r\n\r\n\r\n#### Who can review?\r\n\r\n@vowelparrot\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6005/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6005/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6004",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6004/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6004/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6004/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6004",
        "id": 1751497935,
        "node_id": "I_kwDOIPDwls5oZbzP",
        "number": 6004,
        "title": " Issue with retrieving the chunk number from similarity search in lang chain",
        "user": {
            "login": "106AbdulBasit",
            "id": 36159918,
            "node_id": "MDQ6VXNlcjM2MTU5OTE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/36159918?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/106AbdulBasit",
            "html_url": "https://github.com/106AbdulBasit",
            "followers_url": "https://api.github.com/users/106AbdulBasit/followers",
            "following_url": "https://api.github.com/users/106AbdulBasit/following{/other_user}",
            "gists_url": "https://api.github.com/users/106AbdulBasit/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/106AbdulBasit/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/106AbdulBasit/subscriptions",
            "organizations_url": "https://api.github.com/users/106AbdulBasit/orgs",
            "repos_url": "https://api.github.com/users/106AbdulBasit/repos",
            "events_url": "https://api.github.com/users/106AbdulBasit/events{/privacy}",
            "received_events_url": "https://api.github.com/users/106AbdulBasit/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-11T16:08:28Z",
        "updated_at": "2023-11-16T16:07:26Z",
        "closed_at": "2023-11-16T16:07:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nDescription:\r\nI am currently using the lang chain repository for my project, specifically the functionality related to similarity search. I have encountered an issue when attempting to retrieve the chunk number from the search results.\r\n\r\nTo provide some context, I have already performed the necessary steps to generate embeddings for each chunk using the provided functions in lang chain. Here is the relevant code snippet:\r\n```\r\nembeddings = OpenAIEmbeddings()\r\nknowledge_base = FAISS.from_texts(chunks, embeddings)\r\n```\r\n\r\nAfter creating the knowledge base, I utilize the similarity_search function to find the most similar chunk to a given query:\r\n\r\n\r\n`docs = knowledge_base.similarity_search(query)`\r\n\r\n\r\nThe docs object returned contains information about the search results, but I am struggling to access the specific chunk number associated with the most similar result.\r\n\r\nMy question is: Is there a method or property available in lang chain that allows me to retrieve the chunk number from the docs object?\r\n\r\nI would greatly appreciate any assistance or guidance in resolving this issue. Thank you for your support!\r\n\n\n### Suggestion:\n\nI could not able to find any documentation, Once I know how to do it I can add it to the documentation",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6004/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6004/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6003",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6003/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6003/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6003/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6003",
        "id": 1751462949,
        "node_id": "PR_kwDOIPDwls5StI6L",
        "number": 6003,
        "title": "Mitigate issue #5872 (Prompt injection -> RCE in PAL chain)",
        "user": {
            "login": "boazwasserman",
            "id": 49598618,
            "node_id": "MDQ6VXNlcjQ5NTk4NjE4",
            "avatar_url": "https://avatars.githubusercontent.com/u/49598618?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/boazwasserman",
            "html_url": "https://github.com/boazwasserman",
            "followers_url": "https://api.github.com/users/boazwasserman/followers",
            "following_url": "https://api.github.com/users/boazwasserman/following{/other_user}",
            "gists_url": "https://api.github.com/users/boazwasserman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/boazwasserman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/boazwasserman/subscriptions",
            "organizations_url": "https://api.github.com/users/boazwasserman/orgs",
            "repos_url": "https://api.github.com/users/boazwasserman/repos",
            "events_url": "https://api.github.com/users/boazwasserman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/boazwasserman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-11T14:59:53Z",
        "updated_at": "2023-07-18T05:46:18Z",
        "closed_at": "2023-07-18T05:46:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6003",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6003",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6003.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6003.patch",
            "merged_at": "2023-07-18T05:46:18Z"
        },
        "body": "Adds some selective security controls to the PAL chain:\r\n1. Prevent imports\r\n2. Prevent arbitrary execution commands\r\n3. Enforce execution time limit (prevents DOS and long sessions where the flow is hijacked like remote shell)\r\n4. Enforce the existence of the solution expression in the code\r\n\r\nThis is done mostly by static analysis of the code using the ast library.\r\n\r\nAlso added tests to the pal chain.\r\n\r\nFixes #5872 \r\n\r\n@vowelparrot ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6003/reactions",
            "total_count": 3,
            "+1": 3,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6003/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6001",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6001/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6001/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6001/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/6001",
        "id": 1751377945,
        "node_id": "PR_kwDOIPDwls5Ss3ia",
        "number": 6001,
        "title": "Obey handler.raise_error in _ahandle_event_for_handler",
        "user": {
            "login": "pors",
            "id": 1078320,
            "node_id": "MDQ6VXNlcjEwNzgzMjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1078320?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pors",
            "html_url": "https://github.com/pors",
            "followers_url": "https://api.github.com/users/pors/followers",
            "following_url": "https://api.github.com/users/pors/following{/other_user}",
            "gists_url": "https://api.github.com/users/pors/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pors/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pors/subscriptions",
            "organizations_url": "https://api.github.com/users/pors/orgs",
            "repos_url": "https://api.github.com/users/pors/repos",
            "events_url": "https://api.github.com/users/pors/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pors/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-11T11:13:15Z",
        "updated_at": "2023-06-11T16:49:26Z",
        "closed_at": "2023-06-11T16:49:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/6001",
            "html_url": "https://github.com/langchain-ai/langchain/pull/6001",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/6001.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/6001.patch",
            "merged_at": "2023-06-11T16:49:26Z"
        },
        "body": "Obey `handler.raise_error` in `_ahandle_event_for_handler`\r\n\r\nExceptions for async callbacks were only logged as warnings, also when `raise_error = True`\r\n\r\n#### Who can review?\r\n\r\n  @hwchase17\r\n\r\n   @agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6001/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6001/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6000",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6000/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6000/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6000/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/6000",
        "id": 1751329902,
        "node_id": "I_kwDOIPDwls5oYyxu",
        "number": 6000,
        "title": "UnstructuredUrlLoader or SeleniumUrlLoader are not able to upload the pdf's consisting by urls.",
        "user": {
            "login": "ragvendra3898",
            "id": 62380006,
            "node_id": "MDQ6VXNlcjYyMzgwMDA2",
            "avatar_url": "https://avatars.githubusercontent.com/u/62380006?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ragvendra3898",
            "html_url": "https://github.com/ragvendra3898",
            "followers_url": "https://api.github.com/users/ragvendra3898/followers",
            "following_url": "https://api.github.com/users/ragvendra3898/following{/other_user}",
            "gists_url": "https://api.github.com/users/ragvendra3898/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ragvendra3898/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ragvendra3898/subscriptions",
            "organizations_url": "https://api.github.com/users/ragvendra3898/orgs",
            "repos_url": "https://api.github.com/users/ragvendra3898/repos",
            "events_url": "https://api.github.com/users/ragvendra3898/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ragvendra3898/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-11T08:55:35Z",
        "updated_at": "2023-09-28T16:06:24Z",
        "closed_at": "2023-09-28T16:06:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHi,\r\n\r\nI am using UnstructureUrlLoader to upload the urls into Chroma vector database but it is only uploading the html content of the url, not uploading the pdfs available on this url that's why it is not giving the answer for query related to pdf files while performing querying using RetrievalQA chain\r\nI also tried with SeleniumUrlLoader but still no results.\r\n\r\nfrom langchain.vectorstores import Chroma                                \r\nfrom langchain.embeddings import OpenAIEmbeddings                            \r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter , TokenTextSplitter      \r\nfrom langchain.llms import OpenAI                                           \r\nfrom langchain.chat_models import ChatOpenAI                                  \r\nfrom langchain.chains import VectorDBQA, RetrievalQA                                      \r\nfrom langchain.document_loaders import TextLoader, UnstructuredFileLoader, DirectoryLoader,UnstructuredURLLoader,SeleniumURLLoader  \r\nfrom langchain.indexes import VectorstoreIndexCreator\r\nfrom langchain.prompts import PromptTemplate\r\nimport chromadb\r\nimport wx\r\nimport os\r\nimport requests\r\nfrom bs4 import BeautifulSoup\r\n\r\nopenai_api_key = my_openai_key\r\npersist_directory = \"Zdb_directory\"\r\ncollection_name = 'my collection'\r\ntemperature = 0\r\nmax_tokens = 200\r\nllm=ChatOpenAI(openai_api_key=openai_api_key)\r\n\r\nurls = ['url1,'url2','url3']\r\n#loader = UnstructuredURLLoader(urls)\r\nloader = SeleniumURLLoader(urls)\r\n\r\ntext_splitter = TokenTextSplitter(chunk_size=1000, chunk_overlap=200)\r\ntexts = text_splitter.split_documents(docs)\r\nembeddings = OpenAIEmbeddings(openai_api_key=openai_api_key)\r\nvectordb = Chroma.from_documents(texts, embedding=embeddings, persist_directory=persist_directory)\r\nvectordb.persist()\r\nvectordb = None\r\n\r\nvectodb = Chroma(persist_directory=persist_directory, embedding_function=embeddings, collection_name='my_collection)\r\nqa = RetrievalQA.from_chain_type(llm=ChatOpenAI(openai_api_key=openai_api_key), chain_type=\"stuff\", retriever=vectordb.as_retriever(search_type=\"mmr\"), return_source_documents=True)\r\nques = 'my_question'\r\nans = qa(ques)\r\n\r\n\r\nCan anyone please help me that how can I upload all the pdf files consisting by a url into the chroma vector database using UnstructuredUrlLoader or SeleniumUrlLoader, I will be thankful to you.\r\n\r\nThank You\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.vectorstores import Chroma                                \r\nfrom langchain.embeddings import OpenAIEmbeddings                            \r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter , TokenTextSplitter      \r\nfrom langchain.llms import OpenAI                                           \r\nfrom langchain.chat_models import ChatOpenAI                                  \r\nfrom langchain.chains import VectorDBQA, RetrievalQA                                      \r\nfrom langchain.document_loaders import TextLoader, UnstructuredFileLoader, DirectoryLoader,UnstructuredURLLoader,SeleniumURLLoader  \r\nfrom langchain.indexes import VectorstoreIndexCreator\r\nfrom langchain.prompts import PromptTemplate\r\nimport chromadb\r\nimport wx\r\nimport os\r\nimport requests\r\nfrom bs4 import BeautifulSoup\r\n\r\nopenai_api_key = my_openai_key\r\npersist_directory = \"Zdb_directory\"\r\ncollection_name = 'my collection'\r\ntemperature = 0\r\nmax_tokens = 200\r\nllm=ChatOpenAI(openai_api_key=openai_api_key)\r\n\r\n#all url are consisting pdf files inside it or in sub url\r\nurls = ['url1,'url2','url3']\r\n#loader = UnstructuredURLLoader(urls)\r\nloader = SeleniumURLLoader(urls)\r\n\r\ntext_splitter = TokenTextSplitter(chunk_size=1000, chunk_overlap=200)\r\ntexts = text_splitter.split_documents(docs)\r\nembeddings = OpenAIEmbeddings(openai_api_key=openai_api_key)\r\nvectordb = Chroma.from_documents(texts, embedding=embeddings, persist_directory=persist_directory)\r\nvectordb.persist()\r\nvectordb = None\r\n\r\nvectodb = Chroma(persist_directory=persist_directory, embedding_function=embeddings, collection_name='my_collection)\r\nqa = RetrievalQA.from_chain_type(llm=ChatOpenAI(openai_api_key=openai_api_key), chain_type=\"stuff\", retriever=vectordb.as_retriever(search_type=\"mmr\"), return_source_documents=True)\r\nques = 'my_question'\r\nans = qa(ques)\n\n### Expected behavior\n\nwhile I am uploading a url to chroma vector database using Unstructured or SeleniumUrlLoader so rather than just uploading the html website it should also upload the content of all sub urls and the content of all files which are available in this url.\r\n\r\nThank You ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/6000/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 1,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/6000/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5999",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5999/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5999/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5999/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5999",
        "id": 1751277196,
        "node_id": "I_kwDOIPDwls5oYl6M",
        "number": 5999,
        "title": "AttributeError: choice while creating python agent",
        "user": {
            "login": "pulkitmehtawork",
            "id": 49834970,
            "node_id": "MDQ6VXNlcjQ5ODM0OTcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/49834970?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pulkitmehtawork",
            "html_url": "https://github.com/pulkitmehtawork",
            "followers_url": "https://api.github.com/users/pulkitmehtawork/followers",
            "following_url": "https://api.github.com/users/pulkitmehtawork/following{/other_user}",
            "gists_url": "https://api.github.com/users/pulkitmehtawork/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pulkitmehtawork/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pulkitmehtawork/subscriptions",
            "organizations_url": "https://api.github.com/users/pulkitmehtawork/orgs",
            "repos_url": "https://api.github.com/users/pulkitmehtawork/repos",
            "events_url": "https://api.github.com/users/pulkitmehtawork/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pulkitmehtawork/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-11T06:54:03Z",
        "updated_at": "2023-09-17T17:13:16Z",
        "closed_at": "2023-09-17T17:13:16Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version - 0.0.154\r\nubuntu - 18.04\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.agents.agent_toolkits import create_python_agent\r\n\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\nFile ~/practice_ml/lib/python3.9/site-packages/openai/openai_object.py:59, in OpenAIObject.__getattr__(self, k)\r\n     58 try:\r\n---> 59     return self[k]\r\n     60 except KeyError as err:\r\n\r\n**KeyError: 'choice'**\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nAttributeError                            Traceback (most recent call last)\r\nCell In[11], line 1\r\n----> 1 from langchain.agents.agent_toolkits import create_python_agent\r\n\r\nFile ~/practice/langchain.py:23\r\n     16     response = openai.ChatCompletion.create(\r\n     17         model = model,\r\n     18         messages = messages,\r\n     19         temperature=0\r\n     20     )\r\n     21     return response.choice[0].message['content']\r\n---> 23 get_completion(\"what is 1 + 1\")\r\n     24 customer_email = \"\"\"\r\n     25 Arrr, I be fuming that me blender lid \\\r\n     26 flew off and splattered me kitchen walls \\\r\n   (...)\r\n     30 right now, matey!\r\n     31 \"\"\"\r\n     34 from langchain.chat_models import ChatOpenAI\r\n\r\nFile ~/practice/langchain.py:21, in get_completion(prompt, model)\r\n     12 messages = [\r\n     13     {'role' : 'user',\r\n     14     \"content\" : prompt}\r\n     15 ]\r\n     16 response = openai.ChatCompletion.create(\r\n     17     model = model,\r\n     18     messages = messages,\r\n     19     temperature=0\r\n     20 )\r\n---> 21 return response.choice[0].message['content']\r\n\r\nFile ~/practice_ml/lib/python3.9/site-packages/openai/openai_object.py:61, in OpenAIObject.__getattr__(self, k)\r\n     59     return self[k]\r\n     60 except KeyError as err:\r\n---> 61     raise AttributeError(*err.args)\r\n\r\nAttributeError: choice\n\n### Expected behavior\n\nno error . ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5999/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5999/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5998",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5998/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5998/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5998/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5998",
        "id": 1751271273,
        "node_id": "I_kwDOIPDwls5oYkdp",
        "number": 5998,
        "title": "TypeError: TextSplitter.__init__() got an unexpected keyword argument 'add_start_index'",
        "user": {
            "login": "jiangying000",
            "id": 23182033,
            "node_id": "MDQ6VXNlcjIzMTgyMDMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/23182033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiangying000",
            "html_url": "https://github.com/jiangying000",
            "followers_url": "https://api.github.com/users/jiangying000/followers",
            "following_url": "https://api.github.com/users/jiangying000/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiangying000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiangying000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiangying000/subscriptions",
            "organizations_url": "https://api.github.com/users/jiangying000/orgs",
            "repos_url": "https://api.github.com/users/jiangying000/repos",
            "events_url": "https://api.github.com/users/jiangying000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiangying000/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-11T06:33:16Z",
        "updated_at": "2023-12-06T17:45:30Z",
        "closed_at": "2023-12-06T17:45:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nversion = \"0.0.157\"\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [x] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [x] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\njust run\r\n```\r\nfrom langchain.text_splitter import RecursiveCharacterTextSplitter\r\n\r\ntext_splitter = RecursiveCharacterTextSplitter(\r\n    chunk_size=900,\r\n    chunk_overlap=0,\r\n    separators=separators,\r\n    add_start_index = True,\r\n    length_function=tiktoken_len,\r\n)\r\n```\n\n### Expected behavior\n\nno error",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5998/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5998/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5997",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5997/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5997/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5997/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5997",
        "id": 1751262145,
        "node_id": "PR_kwDOIPDwls5SsfTO",
        "number": 5997,
        "title": "Add oobabooga/text-generation-webui support as a llm",
        "user": {
            "login": "lonestriker",
            "id": 10904217,
            "node_id": "MDQ6VXNlcjEwOTA0MjE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10904217?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/lonestriker",
            "html_url": "https://github.com/lonestriker",
            "followers_url": "https://api.github.com/users/lonestriker/followers",
            "following_url": "https://api.github.com/users/lonestriker/following{/other_user}",
            "gists_url": "https://api.github.com/users/lonestriker/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/lonestriker/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/lonestriker/subscriptions",
            "organizations_url": "https://api.github.com/users/lonestriker/orgs",
            "repos_url": "https://api.github.com/users/lonestriker/repos",
            "events_url": "https://api.github.com/users/lonestriker/events{/privacy}",
            "received_events_url": "https://api.github.com/users/lonestriker/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-11T05:58:20Z",
        "updated_at": "2023-06-17T16:42:16Z",
        "closed_at": "2023-06-17T16:42:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5997",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5997",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5997.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5997.patch",
            "merged_at": "2023-06-17T16:42:15Z"
        },
        "body": "Add oobabooga/text-generation-webui support as an LLM.  Currently, supports using text-generation-webui's non-streaming API interface.  Allows users who already have text-gen running to use the same models with langchain.\r\n\r\n#### Before submitting\r\n\r\nSimple usage, similar to existing LLM supported:\r\n\r\n```\r\nfrom langchain.llms import TextGen\r\nllm = TextGen(model_url = \"http://localhost:5000\")\r\n```\r\n#### Who can review?\r\n\r\n @hwchase17 - project lead\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5997/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5997/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5996",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5996/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5996/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5996/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5996",
        "id": 1751260303,
        "node_id": "I_kwDOIPDwls5oYhyP",
        "number": 5996,
        "title": "Human Input tool is not useable in production",
        "user": {
            "login": "francisjervis",
            "id": 10519862,
            "node_id": "MDQ6VXNlcjEwNTE5ODYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10519862?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/francisjervis",
            "html_url": "https://github.com/francisjervis",
            "followers_url": "https://api.github.com/users/francisjervis/followers",
            "following_url": "https://api.github.com/users/francisjervis/following{/other_user}",
            "gists_url": "https://api.github.com/users/francisjervis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/francisjervis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/francisjervis/subscriptions",
            "organizations_url": "https://api.github.com/users/francisjervis/orgs",
            "repos_url": "https://api.github.com/users/francisjervis/repos",
            "events_url": "https://api.github.com/users/francisjervis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/francisjervis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-11T05:52:55Z",
        "updated_at": "2023-10-22T16:13:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nThe human input tool only works with agents run from the command line. As far as I can see, it is impossible to use it when the conversation is being displayed in a web UI (or, for that matter, over any other channel).\n\n### Suggestion:\n\nImplement a callback for handling requests for human input and a way to return the input to the tool/agent. This would allow eg requests for input to be sent to an open WebSocket chat and optionally be added to the message history.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5996/reactions",
            "total_count": 7,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5996/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5995",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5995/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5995/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5995/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5995",
        "id": 1751205661,
        "node_id": "I_kwDOIPDwls5oYUcd",
        "number": 5995,
        "title": "DOC: ChatOpenAI parameters to get it to respond like ChatGPT Plus",
        "user": {
            "login": "austinmw",
            "id": 12224358,
            "node_id": "MDQ6VXNlcjEyMjI0MzU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12224358?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/austinmw",
            "html_url": "https://github.com/austinmw",
            "followers_url": "https://api.github.com/users/austinmw/followers",
            "following_url": "https://api.github.com/users/austinmw/following{/other_user}",
            "gists_url": "https://api.github.com/users/austinmw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/austinmw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/austinmw/subscriptions",
            "organizations_url": "https://api.github.com/users/austinmw/orgs",
            "repos_url": "https://api.github.com/users/austinmw/repos",
            "events_url": "https://api.github.com/users/austinmw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/austinmw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-11T02:42:21Z",
        "updated_at": "2023-09-18T16:08:34Z",
        "closed_at": "2023-09-18T16:08:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\r\n\r\nI know this is a pretty general question, but in my testing, the ChatGPT console (with GPT-4) is performing much better for text summarization than `ChatOpenAI(model='gpt-4')` is. \r\n\r\nAre the default settings intended to be as similar as possible, or are there other known arguments, model_kwargs, system prompts, etc. that will adjust the performance to be more in line with the console experience?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5995/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5995/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5994",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5994/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5994/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5994/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5994",
        "id": 1751157624,
        "node_id": "PR_kwDOIPDwls5SsJVE",
        "number": 5994,
        "title": "change _agenerate in  to use gather",
        "user": {
            "login": "agola11",
            "id": 9536492,
            "node_id": "MDQ6VXNlcjk1MzY0OTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9536492?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/agola11",
            "html_url": "https://github.com/agola11",
            "followers_url": "https://api.github.com/users/agola11/followers",
            "following_url": "https://api.github.com/users/agola11/following{/other_user}",
            "gists_url": "https://api.github.com/users/agola11/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/agola11/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/agola11/subscriptions",
            "organizations_url": "https://api.github.com/users/agola11/orgs",
            "repos_url": "https://api.github.com/users/agola11/repos",
            "events_url": "https://api.github.com/users/agola11/events{/privacy}",
            "received_events_url": "https://api.github.com/users/agola11/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-10T23:43:05Z",
        "updated_at": "2023-07-09T05:37:52Z",
        "closed_at": "2023-07-09T05:37:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5994",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5994",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5994.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5994.patch",
            "merged_at": null
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5994/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5994/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5993",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5993/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5993/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5993/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5993",
        "id": 1751157349,
        "node_id": "PR_kwDOIPDwls5SsJRm",
        "number": 5993,
        "title": "Harrison/arxiv fix",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-10T23:41:26Z",
        "updated_at": "2023-06-11T16:48:11Z",
        "closed_at": "2023-06-11T16:48:10Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5993",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5993",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5993.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5993.patch",
            "merged_at": "2023-06-11T16:48:10Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5993/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5993/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5992",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5992/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5992/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5992/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5992",
        "id": 1751135360,
        "node_id": "PR_kwDOIPDwls5SsE3t",
        "number": 5992,
        "title": "Add a new vector store - AwaDB  (#5971)",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-10T22:04:55Z",
        "updated_at": "2023-06-10T22:42:34Z",
        "closed_at": "2023-06-10T22:42:33Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5992",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5992",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5992.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5992.patch",
            "merged_at": "2023-06-10T22:42:33Z"
        },
        "body": "Added AwaDB vector store, which is a wrapper over the AwaDB, that can be used as a vector storage and has an efficient similarity search. Added integration tests for the vector store\r\nAdded jupyter notebook with the example\r\n\r\nDelete a unneeded empty file and resolve the\r\nconflict(https://github.com/hwchase17/langchain/pull/5886)\r\n\r\nPlease check, Thanks!\r\n\r\n@dev2049\r\n@hwchase17\r\n\r\n---------\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n#### Before submitting\r\n\r\n<!-- If you're adding a new integration, please include:\r\n\r\n1. a test for the integration - favor unit tests that does not rely on network access.\r\n2. an example notebook showing its use\r\n\r\n\r\nSee contribution guidelines for more information on how to write tests, lint\r\netc:\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/.github/CONTRIBUTING.md\r\n-->\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5992/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5992/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5991",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5991/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5991/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5991/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5991",
        "id": 1751100524,
        "node_id": "PR_kwDOIPDwls5Sr90Z",
        "number": 5991,
        "title": "Fixed typo missing \"use\"",
        "user": {
            "login": "constDave",
            "id": 28798717,
            "node_id": "MDQ6VXNlcjI4Nzk4NzE3",
            "avatar_url": "https://avatars.githubusercontent.com/u/28798717?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/constDave",
            "html_url": "https://github.com/constDave",
            "followers_url": "https://api.github.com/users/constDave/followers",
            "following_url": "https://api.github.com/users/constDave/following{/other_user}",
            "gists_url": "https://api.github.com/users/constDave/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/constDave/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/constDave/subscriptions",
            "organizations_url": "https://api.github.com/users/constDave/orgs",
            "repos_url": "https://api.github.com/users/constDave/repos",
            "events_url": "https://api.github.com/users/constDave/events{/privacy}",
            "received_events_url": "https://api.github.com/users/constDave/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-10T20:03:48Z",
        "updated_at": "2023-06-10T21:31:59Z",
        "closed_at": "2023-06-10T21:31:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5991",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5991",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5991.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5991.patch",
            "merged_at": "2023-06-10T21:31:59Z"
        },
        "body": "<!--\r\nFixed a simple typo on https://python.langchain.com/en/latest/modules/indexes/retrievers/examples/vectorstore.html where the word \"use\" was missing.\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n\r\n  Async\r\n  - @agola11\r\n\r\n  DataLoaders\r\n  - @eyurtsev\r\n\r\n  Models\r\n  - @hwchase17\r\n  - @agola11\r\n\r\n  Agents / Tools / Toolkits\r\n  - @vowelparrot\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n\r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5991/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5991/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5990",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5990/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5990/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5990/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5990",
        "id": 1751082827,
        "node_id": "PR_kwDOIPDwls5Sr6LV",
        "number": 5990,
        "title": "support kwargs",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-10T19:11:48Z",
        "updated_at": "2023-06-11T17:09:24Z",
        "closed_at": "2023-06-11T17:09:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5990",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5990",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5990.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5990.patch",
            "merged_at": "2023-06-11T17:09:22Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5990/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5990/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5989",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5989/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5989/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5989/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5989",
        "id": 1751076198,
        "node_id": "PR_kwDOIPDwls5Sr427",
        "number": 5989,
        "title": "add test for structured tools",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-10T18:49:25Z",
        "updated_at": "2023-06-10T21:37:28Z",
        "closed_at": "2023-06-10T21:37:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5989",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5989",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5989.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5989.patch",
            "merged_at": "2023-06-10T21:37:27Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5989/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5989/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5988",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5988/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5988/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5988/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5988",
        "id": 1751017303,
        "node_id": "PR_kwDOIPDwls5SrtJu",
        "number": 5988,
        "title": "bump version to 196",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-10T15:43:07Z",
        "updated_at": "2023-06-10T16:06:36Z",
        "closed_at": "2023-06-10T16:06:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5988",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5988",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5988.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5988.patch",
            "merged_at": "2023-06-10T16:06:36Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5988/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5988/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5987",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5987/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5987/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5987/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5987",
        "id": 1751010738,
        "node_id": "I_kwDOIPDwls5oXk2y",
        "number": 5987,
        "title": "Implement nice pythonic @decorators [see image]",
        "user": {
            "login": "shroominic",
            "id": 34897716,
            "node_id": "MDQ6VXNlcjM0ODk3NzE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/34897716?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shroominic",
            "html_url": "https://github.com/shroominic",
            "followers_url": "https://api.github.com/users/shroominic/followers",
            "following_url": "https://api.github.com/users/shroominic/following{/other_user}",
            "gists_url": "https://api.github.com/users/shroominic/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shroominic/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shroominic/subscriptions",
            "organizations_url": "https://api.github.com/users/shroominic/orgs",
            "repos_url": "https://api.github.com/users/shroominic/repos",
            "events_url": "https://api.github.com/users/shroominic/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shroominic/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-10T15:27:35Z",
        "updated_at": "2023-09-16T16:06:27Z",
        "closed_at": "2023-09-16T16:06:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nI think it would be a nice idea to implement the langchain logic in a minimalistic way using python decorators to quickly prototype stuff.\r\n\r\n### Motivation\r\n\r\n<img width=\"462\" alt=\"Screenshot 2023-06-10 at 17 22 29\" src=\"https://github.com/hwchase17/langchain/assets/34897716/a22aa5fd-be7a-4eaa-a479-cbbeeb08a15c\">\r\n\r\nlike here https://github.com/srush/MiniChain\r\n\r\n### Your contribution\r\n\r\nCurrently I do not have the time to do this but I just wanted to pop the idea :)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5987/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5987/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5986",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5986/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5986/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5986/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5986",
        "id": 1750977213,
        "node_id": "I_kwDOIPDwls5oXcq9",
        "number": 5986,
        "title": "pydantic validation error when creating a HumanMessagePromptTemplate from a PipelinePromptTemplate",
        "user": {
            "login": "logworthy",
            "id": 1295956,
            "node_id": "MDQ6VXNlcjEyOTU5NTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1295956?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logworthy",
            "html_url": "https://github.com/logworthy",
            "followers_url": "https://api.github.com/users/logworthy/followers",
            "following_url": "https://api.github.com/users/logworthy/following{/other_user}",
            "gists_url": "https://api.github.com/users/logworthy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logworthy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logworthy/subscriptions",
            "organizations_url": "https://api.github.com/users/logworthy/orgs",
            "repos_url": "https://api.github.com/users/logworthy/repos",
            "events_url": "https://api.github.com/users/logworthy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logworthy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-10T13:47:36Z",
        "updated_at": "2023-09-17T17:13:27Z",
        "closed_at": "2023-09-17T17:13:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\n>>> langchain.__version__\r\n'0.0.194'\r\n\r\nPython 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)] on win32\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [X] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n```\r\nfrom langchain.prompts.pipeline import PipelinePromptTemplate\r\nfrom langchain.prompts.prompt import PromptTemplate\r\nfrom langchain.prompts.chat import HumanMessagePromptTemplate\r\npipeline_prompt = PipelinePromptTemplate(final_prompt=PromptTemplate.from_template(\"\"), pipeline_prompts=[])\r\nhuman_message_prompt = HumanMessagePromptTemplate(prompt=pipeline_prompt)\r\n```\r\n### Expected behavior\r\n\r\nCode should run without raising any errors.\r\n\r\nInstead it gives this error:\r\n```\r\npydantic.error_wrappers.ValidationError: 1 validation error for HumanMessagePromptTemplate\r\nprompt\r\n  Can't instantiate abstract class StringPromptTemplate with abstract method format (type=type_error)\r\n```\r\n\r\nWhich comes from the fact that HumanMessagePromptTemplate inherits from BaseStringMessagePromptTemplate and BaseStringMessagePromptTemplate requires a prompt of type StringPromptTemplate:\r\nhttps://github.com/hwchase17/langchain/blob/f3e7ac0a2c0ad677e91571f59b03b55c5af52db2/langchain/prompts/chat.py#L67\r\n\r\nI solved it this way:\r\n```\r\nclass ExtendedHumanMessagePromptTemplate(HumanMessagePromptTemplate):\r\n    prompt: BasePromptTemplate\r\nhuman_message_prompt = ExtendedHumanMessagePromptTemplate(prompt=pipeline_prompt)\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5986/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5986/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5985",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5985/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5985/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5985/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5985",
        "id": 1750939947,
        "node_id": "PR_kwDOIPDwls5Srdrl",
        "number": 5985,
        "title": "Fix handling of missing action & input for async MRKL agent",
        "user": {
            "login": "danielgrittner",
            "id": 29932077,
            "node_id": "MDQ6VXNlcjI5OTMyMDc3",
            "avatar_url": "https://avatars.githubusercontent.com/u/29932077?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/danielgrittner",
            "html_url": "https://github.com/danielgrittner",
            "followers_url": "https://api.github.com/users/danielgrittner/followers",
            "following_url": "https://api.github.com/users/danielgrittner/following{/other_user}",
            "gists_url": "https://api.github.com/users/danielgrittner/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/danielgrittner/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/danielgrittner/subscriptions",
            "organizations_url": "https://api.github.com/users/danielgrittner/orgs",
            "repos_url": "https://api.github.com/users/danielgrittner/repos",
            "events_url": "https://api.github.com/users/danielgrittner/events{/privacy}",
            "received_events_url": "https://api.github.com/users/danielgrittner/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-10T11:58:33Z",
        "updated_at": "2023-06-10T21:38:20Z",
        "closed_at": "2023-06-10T21:38:20Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5985",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5985",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5985.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5985.patch",
            "merged_at": "2023-06-10T21:38:20Z"
        },
        "body": "Hi,\r\n\r\nThis is a fix for https://github.com/hwchase17/langchain/pull/5014. This PR forgot to add the ability to self solve the ValueError(f\"Could not parse LLM output: {llm_output}\") error for `_atake_next_step`.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5985/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5985/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5984",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5984/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5984/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5984/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5984",
        "id": 1750931497,
        "node_id": "I_kwDOIPDwls5oXRgp",
        "number": 5984,
        "title": "ConversationalRetrievalChain did not look into chat histroy while making an answer",
        "user": {
            "login": "talhaanwarch",
            "id": 37379131,
            "node_id": "MDQ6VXNlcjM3Mzc5MTMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/37379131?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/talhaanwarch",
            "html_url": "https://github.com/talhaanwarch",
            "followers_url": "https://api.github.com/users/talhaanwarch/followers",
            "following_url": "https://api.github.com/users/talhaanwarch/following{/other_user}",
            "gists_url": "https://api.github.com/users/talhaanwarch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/talhaanwarch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/talhaanwarch/subscriptions",
            "organizations_url": "https://api.github.com/users/talhaanwarch/orgs",
            "repos_url": "https://api.github.com/users/talhaanwarch/repos",
            "events_url": "https://api.github.com/users/talhaanwarch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/talhaanwarch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-10T11:32:30Z",
        "updated_at": "2023-06-13T01:56:12Z",
        "closed_at": "2023-06-13T01:56:11Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am trying to make a chatbot which remember the existing chat and can answer from that as well as from document. Here is what I have tried.\r\n```\r\nmemory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True)\r\nqa = ConversationalRetrievalChain.from_llm(\r\n                                        ChatOpenAI(model_name='gpt-3.5-turbo'),\r\n                                        retriever=docsearch, \r\n                                        memory=memory,\r\n                                        verbose=True)\r\n\r\n\r\nresult = qa({\"question\": \"My name is Talha. Ali is my friend. What is CNN?\"})\r\n```\r\nMy document is based on CNN, so it fetched what is CNN\r\nThen I ask another question. \r\n```\r\nresult = qa({\"question\": \"Who is Ali?\"})\r\n```\r\nthis is what happened behind the scene\r\n```\r\n> Entering new LLMChain chain...\r\nPrompt after formatting:\r\nGiven the following conversation and a follow up question, rephrase the follow up question to be a standalone question, in its original language.\r\n\r\nChat History:\r\n\r\nHuman: My name is Talha. Ali is my friend. What is CNN?\r\nAssistant: CNN is a tool for deep learning and machine learning algorithms used in artificial neural networks for image recognition, object detection, and segmentation.\r\nFollow Up Input: Who is Ali?\r\nStandalone question:\r\n\r\n> Finished chain.\r\n\r\n\r\n> Entering new StuffDocumentsChain chain...\r\n\r\n\r\n> Entering new LLMChain chain...\r\nPrompt after formatting:\r\nUse the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\r\n\r\n_few paragraphs from documents i have ingested in vector database_\r\n\r\nQuestion: Ali is Talha's friend.\r\nAnswer:\r\n```\r\n\r\nBut when i print `result['answer']` It say `\"I don't know.\"`\r\n\r\n\r\nHere is notebook for reproducibility\r\nhttps://colab.research.google.com/drive/1UTjdpAAjoZ_ccpdAEr9gpfpqlC3pwtmT?usp=sharing ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5984/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5984/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5980",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5980/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5980/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5980/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5980",
        "id": 1750888737,
        "node_id": "I_kwDOIPDwls5oXHEh",
        "number": 5980,
        "title": "Get number of vectors in Vector Store",
        "user": {
            "login": "taimurshaikh",
            "id": 67555281,
            "node_id": "MDQ6VXNlcjY3NTU1Mjgx",
            "avatar_url": "https://avatars.githubusercontent.com/u/67555281?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/taimurshaikh",
            "html_url": "https://github.com/taimurshaikh",
            "followers_url": "https://api.github.com/users/taimurshaikh/followers",
            "following_url": "https://api.github.com/users/taimurshaikh/following{/other_user}",
            "gists_url": "https://api.github.com/users/taimurshaikh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/taimurshaikh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/taimurshaikh/subscriptions",
            "organizations_url": "https://api.github.com/users/taimurshaikh/orgs",
            "repos_url": "https://api.github.com/users/taimurshaikh/repos",
            "events_url": "https://api.github.com/users/taimurshaikh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/taimurshaikh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-10T09:20:56Z",
        "updated_at": "2023-11-16T19:10:08Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nWhat the title says. A method in the `VectorStore` class that allows the size of the store to be retrieved.\n\n### Motivation\n\nThis could be useful for certain applications of continuous storage.\n\n### Your contribution\n\nHappy to contribute with some guidance.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5980/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5980/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5979",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5979/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5979/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5979/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5979",
        "id": 1750882992,
        "node_id": "PR_kwDOIPDwls5SrSS1",
        "number": 5979,
        "title": "Add additional parameters to Graph Cypher Chain ",
        "user": {
            "login": "tomasonjo",
            "id": 19948365,
            "node_id": "MDQ6VXNlcjE5OTQ4MzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/19948365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomasonjo",
            "html_url": "https://github.com/tomasonjo",
            "followers_url": "https://api.github.com/users/tomasonjo/followers",
            "following_url": "https://api.github.com/users/tomasonjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomasonjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomasonjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomasonjo/subscriptions",
            "organizations_url": "https://api.github.com/users/tomasonjo/orgs",
            "repos_url": "https://api.github.com/users/tomasonjo/repos",
            "events_url": "https://api.github.com/users/tomasonjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomasonjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-10T09:02:27Z",
        "updated_at": "2023-06-11T00:43:19Z",
        "closed_at": "2023-06-10T21:39:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5979",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5979",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5979.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5979.patch",
            "merged_at": "2023-06-10T21:39:56Z"
        },
        "body": "Based on the inspiration from the SQL chain, the following three parameters are added to Graph Cypher Chain.\r\n\r\n- top_k: Limited the number of results from the database to be used as context\r\n- return_direct: Return database results without transforming them to natural language\r\n- return_intermediate_steps: Return intermediate steps \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5979/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5979/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5978",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5978/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5978/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5978/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5978",
        "id": 1750855665,
        "node_id": "I_kwDOIPDwls5oW-_x",
        "number": 5978,
        "title": "STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION with gpt-4 doesn't follow through the tasks, while gpt-3.5-turbo does.",
        "user": {
            "login": "parisetflorian",
            "id": 7931903,
            "node_id": "MDQ6VXNlcjc5MzE5MDM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7931903?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/parisetflorian",
            "html_url": "https://github.com/parisetflorian",
            "followers_url": "https://api.github.com/users/parisetflorian/followers",
            "following_url": "https://api.github.com/users/parisetflorian/following{/other_user}",
            "gists_url": "https://api.github.com/users/parisetflorian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/parisetflorian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/parisetflorian/subscriptions",
            "organizations_url": "https://api.github.com/users/parisetflorian/orgs",
            "repos_url": "https://api.github.com/users/parisetflorian/repos",
            "events_url": "https://api.github.com/users/parisetflorian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/parisetflorian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-10T07:53:02Z",
        "updated_at": "2023-12-06T17:45:35Z",
        "closed_at": "2023-12-06T17:45:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nlangchain 0.0.195\r\n\r\n### Who can help?\r\n\r\n@vowelparrot\r\n@hwchase17\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```\r\nSendEmail = StructuredTool.from_function(sendEmail)\r\n    UpdateClientProfile = StructuredTool.from_function(updateClientProfile)\r\n    tools = [SendEmail, UpdateClientProfile]\r\n\r\n    #llm=ChatOpenAI(openai_api_key=os.environ['OPENAI_API_KEY_GPT4'], model=pd.steps[\"code\"][\"$return_value\"][\"model\"], temperature=0.8)\r\n    llm=ChatOpenAI(openai_api_key=os.environ['OPENAI_API_KEY_GPT4'], model=\"gpt-4\", temperature=0.8)\r\n\r\n    prompt = pd.steps[\"code\"][\"$return_value\"][\"prompt\"]\r\n\r\n    gpt3 = initialize_agent(tools, llm, agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION, verbose=True)\r\n    res = gpt3.run(prompt)\r\n\r\n\r\n    gpt4 = initialize_agent(tools, llm, agent=AgentType.STRUCTURED_CHAT_ZERO_SHOT_REACT_DESCRIPTION, verbose=True)\r\n    res = gpt4.run(prompt)\r\n```\r\n\r\nHere's the prompt:\r\n<img width=\"714\" alt=\"prompt\" src=\"https://github.com/hwchase17/langchain/assets/7931903/2d15bbdf-a81d-4742-beae-0664acce53bc\">\r\n\r\ngpt-3.5-turbo correctly handle the tasks:\r\n<img width=\"884\" alt=\"gpt3 5\" src=\"https://github.com/hwchase17/langchain/assets/7931903/0599f839-4a2e-44b5-9978-df758ea8e69c\">\r\n\r\ngpt-4 only do the first one:\r\n<img width=\"880\" alt=\"gpt4\" src=\"https://github.com/hwchase17/langchain/assets/7931903/1f6017a4-a31c-48b6-b06b-0bf6214cddf5\">\r\n\r\n\r\n\r\n### Expected behavior\r\n\r\nBoth agents should complete two tasks :\r\n1 - Send an email\r\n2 - Update the customer profile\r\n\r\ngpt-3.5-turbo correctly completes the tasks, while gpt-4 stops after the first one and outputs what it should do next:\r\n\"Now I will update the customer profile...\"",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5978/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5978/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5977",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5977/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5977/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5977/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5977",
        "id": 1750835797,
        "node_id": "I_kwDOIPDwls5oW6JV",
        "number": 5977,
        "title": "ZapierToolkit Automatically Performing Unrequested Tasks",
        "user": {
            "login": "juppytt",
            "id": 46583939,
            "node_id": "MDQ6VXNlcjQ2NTgzOTM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/46583939?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juppytt",
            "html_url": "https://github.com/juppytt",
            "followers_url": "https://api.github.com/users/juppytt/followers",
            "following_url": "https://api.github.com/users/juppytt/following{/other_user}",
            "gists_url": "https://api.github.com/users/juppytt/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juppytt/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juppytt/subscriptions",
            "organizations_url": "https://api.github.com/users/juppytt/orgs",
            "repos_url": "https://api.github.com/users/juppytt/repos",
            "events_url": "https://api.github.com/users/juppytt/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juppytt/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-10T06:47:07Z",
        "updated_at": "2023-09-16T16:06:38Z",
        "closed_at": "2023-09-16T16:06:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nThe current behavior of the ZapierToolkit in the LangChain tool occasionally results in the execution of tasks that the user did not specifically request. For example, when a user asks the ZapierToolkit to read the most recent email, it sometimes replies to the email even when the user did not explicitly specify this action. This unexpected behavior occurs when the AgentExecutor chain automatically decides to reply to the email, regardless of whether the email requested the reply or not.  It is safe for the ZapierToolkit to adhere to the user's explicit instructions to avoid potential mishaps or undesired outcomes.\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [X] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n\r\nThe issue was tested with the GPT-3.5 models (openai chat completion model and text-davinci-003) with temperature=0.7, and Gmail-related Zapier NLA Development actions, such as \"Gmail: Reply to Email,\" \"Gmail: Find Email,\" and \"Gmail: Send Email.\", enabled.\r\n\r\nCode Sample:\r\n```Python\r\n# get from https://platform.openai.com/\r\nos.environ[\"OPENAI_API_KEY\"] = os.environ.get(\"OPENAI_API_KEY\", \"\")\r\n\r\n# get from https://nla.zapier.com/demo/provider/debug (under User Information, after logging in): \r\nos.environ[\"ZAPIER_NLA_API_KEY\"] = os.environ.get(\"ZAPIER_NLA_API_KEY\", \"\")\r\n\r\nllm = OpenAI()\r\nzapier = ZapierNLAWrapper()\r\ntoolkit = ZapierToolkit.from_zapier_nla_wrapper(zapier)\r\nagent = initialize_agent(toolkit.get_tools(), llm, \r\n    agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True);\r\n\r\ntry:\r\n    agent.run(\"Read the most recent email\")\r\nexcept Exception as e:\r\n    print(e)\r\n    exit(1)\r\n```\r\n\r\n\r\n### Expected behavior\r\n\r\nThe ZapierToolkit should only perform tasks that are explicitly requested by the user. If the user does not specify that the most recent email should be replied to, the ZapierToolkit should not automatically decide to perform this action.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5977/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5977/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5976",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5976/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5976/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5976/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5976",
        "id": 1750825935,
        "node_id": "PR_kwDOIPDwls5SrGrc",
        "number": 5976,
        "title": "Add embaas embeddings api endpoints ",
        "user": {
            "login": "juliuslipp",
            "id": 43986145,
            "node_id": "MDQ6VXNlcjQzOTg2MTQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/43986145?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/juliuslipp",
            "html_url": "https://github.com/juliuslipp",
            "followers_url": "https://api.github.com/users/juliuslipp/followers",
            "following_url": "https://api.github.com/users/juliuslipp/following{/other_user}",
            "gists_url": "https://api.github.com/users/juliuslipp/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/juliuslipp/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/juliuslipp/subscriptions",
            "organizations_url": "https://api.github.com/users/juliuslipp/orgs",
            "repos_url": "https://api.github.com/users/juliuslipp/repos",
            "events_url": "https://api.github.com/users/juliuslipp/events{/privacy}",
            "received_events_url": "https://api.github.com/users/juliuslipp/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-10T06:22:41Z",
        "updated_at": "2023-06-11T20:15:09Z",
        "closed_at": "2023-06-11T20:15:09Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5976",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5976",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5976.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5976.patch",
            "merged_at": "2023-06-11T20:15:09Z"
        },
        "body": "# Introduces embaas embeddings endpoints\r\n\r\nIn this PR, we add support for embaas embeddings endpoints to Text Embedding Models (with LLMs, and Doc loaders in different PRs coming). We currently offer the MTEB leaderboard top performers, will continue to add top embedding models and soon add support for customers to deploy thier own models.Additional Documentation + Infomation can be found [here](https://embaas.io).\r\n\r\nWhile developing this integration, I closely followed the patterns established by other langchain integrations. Nonetheless, if there are any aspects that require adjustments or if there's a better way to present a new integration, let me know! :)\r\n\r\n#### Who can review?\r\n  - @hwchase17\r\n  - @agola11",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5976/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5976/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5975",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5975/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5975/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5975/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5975",
        "id": 1750786887,
        "node_id": "PR_kwDOIPDwls5Sq-fq",
        "number": 5975,
        "title": "Allow use of non-default QDrant vector key",
        "user": {
            "login": "mahmoudajawad",
            "id": 316734,
            "node_id": "MDQ6VXNlcjMxNjczNA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/316734?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mahmoudajawad",
            "html_url": "https://github.com/mahmoudajawad",
            "followers_url": "https://api.github.com/users/mahmoudajawad/followers",
            "following_url": "https://api.github.com/users/mahmoudajawad/following{/other_user}",
            "gists_url": "https://api.github.com/users/mahmoudajawad/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mahmoudajawad/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mahmoudajawad/subscriptions",
            "organizations_url": "https://api.github.com/users/mahmoudajawad/orgs",
            "repos_url": "https://api.github.com/users/mahmoudajawad/repos",
            "events_url": "https://api.github.com/users/mahmoudajawad/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mahmoudajawad/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-06-10T04:22:43Z",
        "updated_at": "2023-06-28T17:00:02Z",
        "closed_at": "2023-06-28T16:59:54Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5975",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5975",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5975.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5975.patch",
            "merged_at": null
        },
        "body": "- Context #2594\r\n- This is continuation of #2751 which diverged so much from origin and was better to be re-started.\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes #2594\r\n\r\n#### Who can review?\r\n@kacperlukawski",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5975/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5975/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5974",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5974/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5974/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5974/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5974",
        "id": 1750766369,
        "node_id": "I_kwDOIPDwls5oWpMh",
        "number": 5974,
        "title": "pydantic.error_wrappers.ValidationError for args_schema",
        "user": {
            "login": "louria",
            "id": 24884925,
            "node_id": "MDQ6VXNlcjI0ODg0OTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/24884925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/louria",
            "html_url": "https://github.com/louria",
            "followers_url": "https://api.github.com/users/louria/followers",
            "following_url": "https://api.github.com/users/louria/following{/other_user}",
            "gists_url": "https://api.github.com/users/louria/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/louria/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/louria/subscriptions",
            "organizations_url": "https://api.github.com/users/louria/orgs",
            "repos_url": "https://api.github.com/users/louria/repos",
            "events_url": "https://api.github.com/users/louria/events{/privacy}",
            "received_events_url": "https://api.github.com/users/louria/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-10T03:33:28Z",
        "updated_at": "2023-11-05T07:01:46Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLatest langchain & openai 0.27.5\r\n\r\nhttps://python.langchain.com/en/latest/modules/agents/tools/custom_tools.html\r\n\r\n### Who can help?\r\n\r\n_No response_\r\n\r\n### Information\r\n\r\n- [X] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [X] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n https://python.langchain.com/en/latest/modules/agents/tools/custom_tools.html\r\n\r\nclass CalculatorInput(BaseModel):\r\n    question:str = Field()\r\n\r\ntools.append(\r\n    Tool.from_function(\r\n        func=llm_math_chain.run,\r\n        name=\"Calculator\",\r\n        description=\"useful for when you need to answer questions about math\",\r\n        args_schema=CalculatorInput\r\n        # coroutine= ... <- you can specify an async method if desired as well\r\n    )\r\n\r\nGot this error msg: \r\n\r\nFile \"pydantic\\main.py\", line 341, in pydantic.main.BaseModel.__init__\r\npydantic.error_wrappers.ValidationError: 1 validation error for Tool\r\nargs_schema extra fields not permitted (type=value_error.extra)\r\n\r\n\r\n### Expected behavior\r\n\r\nShould enter Agent excution ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5974/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5974/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5973",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5973/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5973/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5973/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5973",
        "id": 1750751056,
        "node_id": "I_kwDOIPDwls5oWldQ",
        "number": 5973,
        "title": "Issue: Is there some detail documents about chroma.from_documents args?",
        "user": {
            "login": "sunlongjian",
            "id": 20205962,
            "node_id": "MDQ6VXNlcjIwMjA1OTYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/20205962?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sunlongjian",
            "html_url": "https://github.com/sunlongjian",
            "followers_url": "https://api.github.com/users/sunlongjian/followers",
            "following_url": "https://api.github.com/users/sunlongjian/following{/other_user}",
            "gists_url": "https://api.github.com/users/sunlongjian/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sunlongjian/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sunlongjian/subscriptions",
            "organizations_url": "https://api.github.com/users/sunlongjian/orgs",
            "repos_url": "https://api.github.com/users/sunlongjian/repos",
            "events_url": "https://api.github.com/users/sunlongjian/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sunlongjian/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-10T02:40:35Z",
        "updated_at": "2023-09-18T16:08:39Z",
        "closed_at": "2023-09-18T16:08:38Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI was trying to store different vectorstore to chroma with different ids like \"vectorstore = Chroma.from_documents(documents, embeddings, ids=\"test1\",)\", but it keeps telling Number of embeddings 9 must match number of ids 1\r\nand how i can erase some of vectorstore inside chroma, if i can store many into it?\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5973/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5973/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5972",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5972/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5972/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5972/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5972",
        "id": 1750750087,
        "node_id": "I_kwDOIPDwls5oWlOH",
        "number": 5972,
        "title": "Get start index and end index of a chunk in the original doc with recursivecharactersplit.",
        "user": {
            "login": "jiangying000",
            "id": 23182033,
            "node_id": "MDQ6VXNlcjIzMTgyMDMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/23182033?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jiangying000",
            "html_url": "https://github.com/jiangying000",
            "followers_url": "https://api.github.com/users/jiangying000/followers",
            "following_url": "https://api.github.com/users/jiangying000/following{/other_user}",
            "gists_url": "https://api.github.com/users/jiangying000/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jiangying000/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jiangying000/subscriptions",
            "organizations_url": "https://api.github.com/users/jiangying000/orgs",
            "repos_url": "https://api.github.com/users/jiangying000/repos",
            "events_url": "https://api.github.com/users/jiangying000/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jiangying000/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-06-10T02:38:21Z",
        "updated_at": "2023-09-18T16:08:43Z",
        "closed_at": "2023-09-18T16:08:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nmake recursivecharactersplit return start index and end index of a chunk in the original doc\r\nthen user can get  snnipt by  `original_doc[start_index:end_index]`\r\n\r\n### Motivation\r\n\r\nThis is important info of the trunk.\r\n\r\n### Your contribution\r\n\r\nI can not do it now, but if I have time, I will try to do it.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5972/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5972/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5971",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5971/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5971/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5971/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5971",
        "id": 1750748604,
        "node_id": "PR_kwDOIPDwls5Sq2U2",
        "number": 5971,
        "title": "Add a new vector store - AwaDB ",
        "user": {
            "login": "ljeagle",
            "id": 15918167,
            "node_id": "MDQ6VXNlcjE1OTE4MTY3",
            "avatar_url": "https://avatars.githubusercontent.com/u/15918167?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ljeagle",
            "html_url": "https://github.com/ljeagle",
            "followers_url": "https://api.github.com/users/ljeagle/followers",
            "following_url": "https://api.github.com/users/ljeagle/following{/other_user}",
            "gists_url": "https://api.github.com/users/ljeagle/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ljeagle/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ljeagle/subscriptions",
            "organizations_url": "https://api.github.com/users/ljeagle/orgs",
            "repos_url": "https://api.github.com/users/ljeagle/repos",
            "events_url": "https://api.github.com/users/ljeagle/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ljeagle/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-10T02:31:28Z",
        "updated_at": "2023-06-10T21:43:07Z",
        "closed_at": "2023-06-10T21:43:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5971",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5971",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5971.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5971.patch",
            "merged_at": "2023-06-10T21:43:07Z"
        },
        "body": "Added AwaDB vector store, which is a wrapper over the AwaDB, that can be used as a vector storage and has an efficient similarity search.\r\nAdded integration tests for the vector store\r\nAdded jupyter notebook with the example\r\n\r\nDelete a unneeded empty file and resolve the conflict(https://github.com/hwchase17/langchain/pull/5886)\r\n\r\nPlease check, Thanks!\r\n\r\n@dev2049\r\n@hwchase17",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5971/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5971/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5970",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5970/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5970/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5970/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5970",
        "id": 1750745073,
        "node_id": "PR_kwDOIPDwls5Sq1mq",
        "number": 5970,
        "title": "Create Loaders for Major Music Streaming Services",
        "user": {
            "login": "jsj",
            "id": 13633271,
            "node_id": "MDQ6VXNlcjEzNjMzMjcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/13633271?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jsj",
            "html_url": "https://github.com/jsj",
            "followers_url": "https://api.github.com/users/jsj/followers",
            "following_url": "https://api.github.com/users/jsj/following{/other_user}",
            "gists_url": "https://api.github.com/users/jsj/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jsj/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jsj/subscriptions",
            "organizations_url": "https://api.github.com/users/jsj/orgs",
            "repos_url": "https://api.github.com/users/jsj/repos",
            "events_url": "https://api.github.com/users/jsj/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jsj/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-10T02:22:02Z",
        "updated_at": "2023-06-11T13:32:32Z",
        "closed_at": "2023-06-10T12:10:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5970",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5970",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5970.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5970.patch",
            "merged_at": null
        },
        "body": "Fixes # (issue)\r\nCreate loaders for library endpoints of major music streaming services\r\n\r\n#### Before submitting\r\n\r\n| - | - |\r\n| ----------- | ----------- |\r\n| a test for the integration      | \u274c REST APIs       |\r\n| an example notebook showing its use   | \u2705        |\r\n\r\n[twitter](https://twitter.com/JamesSJackson)\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n@eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5970/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5970/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5968",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5968/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5968/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5968/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5968",
        "id": 1750740372,
        "node_id": "I_kwDOIPDwls5oWi2U",
        "number": 5968,
        "title": "`UnstructuredPDFLoader` suddenly can't parse scanned PDFs",
        "user": {
            "login": "eRuaro",
            "id": 69240261,
            "node_id": "MDQ6VXNlcjY5MjQwMjYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/69240261?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eRuaro",
            "html_url": "https://github.com/eRuaro",
            "followers_url": "https://api.github.com/users/eRuaro/followers",
            "following_url": "https://api.github.com/users/eRuaro/following{/other_user}",
            "gists_url": "https://api.github.com/users/eRuaro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eRuaro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eRuaro/subscriptions",
            "organizations_url": "https://api.github.com/users/eRuaro/orgs",
            "repos_url": "https://api.github.com/users/eRuaro/repos",
            "events_url": "https://api.github.com/users/eRuaro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eRuaro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-10T02:03:23Z",
        "updated_at": "2023-09-16T16:06:53Z",
        "closed_at": "2023-09-16T16:06:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI'm using `Unstructured` for parsing PDFs and have it installed through a docker dev container. It was working a few months ago but after I rebuilt the container for deployment, it suddenly breaks.\r\n\r\nHere's my dockerfile:\r\n```\r\nFROM python:3.9-slim-buster\r\n\r\n# Update package lists\r\nRUN apt-get update && apt-get install ffmpeg libsm6 libxext6 gcc g++ git build-essential libpoppler-cpp-dev libmagic-dev pkg-config poppler-utils tesseract-ocr libtesseract-dev -y\r\n\r\n# Make working directories\r\nRUN  mkdir -p  /app\r\nWORKDIR  /app\r\n\r\n# Copy the requirements.txt file to the container\r\nCOPY requirements.txt .\r\n\r\n# Install dependencies\r\nRUN pip install --upgrade pip\r\n\r\nRUN pip install torch torchvision torchaudio\r\n\r\nRUN pip install unstructured-inference\r\n\r\nRUN pip install -r requirements.txt\r\n\r\nRUN pip install 'git+https://github.com/facebookresearch/detectron2.git@e2ce8dc#egg=detectron2'\r\n\r\n# Copy the .env file to the container\r\nCOPY .env .\r\n\r\n# Copy every file in the source folder to the created working directory\r\nCOPY  . .\r\n\r\n# Expose the port that the application will run on\r\nEXPOSE 8080\r\n\r\n# Start the application\r\nCMD [\"python3.9\", \"-m\", \"uvicorn\", \"main:app\", \"--proxy-headers\", \"--host\", \"0.0.0.0\", \"--port\", \"8080\", \"--workers\", \"4\"]\r\n```\r\n\r\nand `requirements.txt`:\r\n```\r\nfastapi\r\nuvicorn\r\nlangchain\r\npython-poppler\r\npytesseract\r\nunstructured[local-inference]\r\npsycopg2-binary\r\npgvector\r\nopenai\r\ntiktoken\r\npython-dotenv\r\npypdf\r\n```\r\n\r\nI've verified that detectron is in my system but it seems like it's not being used by unstructured as it defaults to using `pdfminer`\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5968/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5968/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5967",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5967/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5967/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5967/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5967",
        "id": 1750715559,
        "node_id": "PR_kwDOIPDwls5SqvEg",
        "number": 5967,
        "title": "Fix: SnowflakeLoader returning empty documents",
        "user": {
            "login": "kaarthik108",
            "id": 53030784,
            "node_id": "MDQ6VXNlcjUzMDMwNzg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/53030784?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kaarthik108",
            "html_url": "https://github.com/kaarthik108",
            "followers_url": "https://api.github.com/users/kaarthik108/followers",
            "following_url": "https://api.github.com/users/kaarthik108/following{/other_user}",
            "gists_url": "https://api.github.com/users/kaarthik108/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kaarthik108/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kaarthik108/subscriptions",
            "organizations_url": "https://api.github.com/users/kaarthik108/orgs",
            "repos_url": "https://api.github.com/users/kaarthik108/repos",
            "events_url": "https://api.github.com/users/kaarthik108/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kaarthik108/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-10T01:17:18Z",
        "updated_at": "2023-06-10T20:03:51Z",
        "closed_at": "2023-06-10T20:03:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5967",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5967",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5967.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5967.patch",
            "merged_at": "2023-06-10T20:03:51Z"
        },
        "body": "**Fix SnowflakeLoader's Behavior of Returning Empty Documents**\r\n\r\n**Description:**\r\n\r\nThis PR addresses the issue where the SnowflakeLoader was consistently returning empty documents. After investigation, it was found that the query method within the SnowflakeLoader was not properly fetching and processing the data. \r\n\r\n**Changes:**\r\n\r\n1. Modified the query method in SnowflakeLoader to handle data fetch and processing more accurately.\r\n2. Enhanced error handling within the SnowflakeLoader to catch and log potential issues that may arise during data loading.\r\n\r\n**Impact:**\r\n\r\nThis fix will ensure the SnowflakeLoader reliably returns the expected documents instead of empty ones, improving the efficiency and reliability of data processing tasks in the LangChain project.\r\n\r\nBefore Fix:\r\n\r\n`[\r\n    Document(page_content='', metadata={}),\r\n    Document(page_content='', metadata={}),\r\n    Document(page_content='', metadata={}),\r\n    Document(page_content='', metadata={}),\r\n    Document(page_content='', metadata={}),\r\n    Document(page_content='', metadata={}),\r\n    Document(page_content='', metadata={}),\r\n    Document(page_content='', metadata={}),\r\n    Document(page_content='', metadata={}),\r\n    Document(page_content='', metadata={})\r\n]`\r\n\r\nAfter Fix:\r\n\r\n`[Document(page_content='CUSTOMER_ID: 1\\nFIRST_NAME: John\\nLAST_NAME: Doe\\nEMAIL: john.doe@example.com\\nPHONE: 555-123-4567\\nADDRESS: 123 Elm St, San Francisco, CA 94102', metadata={}), Document(page_content='CUSTOMER_ID: 2\\nFIRST_NAME: Jane\\nLAST_NAME: Doe\\nEMAIL: jane.doe@example.com\\nPHONE: 555-987-6543\\nADDRESS: 456 Oak St, San Francisco, CA 94103', metadata={}), Document(page_content='CUSTOMER_ID: 3\\nFIRST_NAME: Michael\\nLAST_NAME: Smith\\nEMAIL: michael.smith@example.com\\nPHONE: 555-234-5678\\nADDRESS: 789 Pine St, San Francisco, CA 94104', metadata={}), Document(page_content='CUSTOMER_ID: 4\\nFIRST_NAME: Emily\\nLAST_NAME: Johnson\\nEMAIL: emily.johnson@example.com\\nPHONE: 555-345-6789\\nADDRESS: 321 Maple St, San Francisco, CA 94105', metadata={}), Document(page_content='CUSTOMER_ID: 5\\nFIRST_NAME: David\\nLAST_NAME: Williams\\nEMAIL: david.williams@example.com\\nPHONE: 555-456-7890\\nADDRESS: 654 Birch St, San Francisco, CA 94106', metadata={}), Document(page_content='CUSTOMER_ID: 6\\nFIRST_NAME: Emma\\nLAST_NAME: Jones\\nEMAIL: emma.jones@example.com\\nPHONE: 555-567-8901\\nADDRESS: 987 Cedar St, San Francisco, CA 94107', metadata={}), Document(page_content='CUSTOMER_ID: 7\\nFIRST_NAME: Oliver\\nLAST_NAME: Brown\\nEMAIL: oliver.brown@example.com\\nPHONE: 555-678-9012\\nADDRESS: 147 Cherry St, San Francisco, CA 94108', metadata={}), Document(page_content='CUSTOMER_ID: 8\\nFIRST_NAME: Sophia\\nLAST_NAME: Davis\\nEMAIL: sophia.davis@example.com\\nPHONE: 555-789-0123\\nADDRESS: 369 Walnut St, San Francisco, CA 94109', metadata={}), Document(page_content='CUSTOMER_ID: 9\\nFIRST_NAME: James\\nLAST_NAME: Taylor\\nEMAIL: james.taylor@example.com\\nPHONE: 555-890-1234\\nADDRESS: 258 Hawthorn St, San Francisco, CA 94110', metadata={}), Document(page_content='CUSTOMER_ID: 10\\nFIRST_NAME: Isabella\\nLAST_NAME: Wilson\\nEMAIL: isabella.wilson@example.com\\nPHONE: 555-901-2345\\nADDRESS: 963 Aspen St, San Francisco, CA 94111', metadata={})]\r\n`\r\n\r\n**Tests:**\r\n\r\nAll unit and integration tests have been run and passed successfully. Additional tests were added to validate the new behavior of the SnowflakeLoader.\r\n\r\n**Checklist:**\r\n\r\n- [x] Code changes are covered by tests\r\n- [x] Code passes `make format` and `make lint`\r\n- [x] This PR does not introduce any breaking changes\r\n\r\nPlease review and let me know if any changes are required.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5967/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5967/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5966",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5966/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5966/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5966/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5966",
        "id": 1750701798,
        "node_id": "PR_kwDOIPDwls5SqsCJ",
        "number": 5966,
        "title": "feat: :sparkles: Added filtering option to FAISS vectorstore",
        "user": {
            "login": "vempaliakhil96",
            "id": 24319338,
            "node_id": "MDQ6VXNlcjI0MzE5MzM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/24319338?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vempaliakhil96",
            "html_url": "https://github.com/vempaliakhil96",
            "followers_url": "https://api.github.com/users/vempaliakhil96/followers",
            "following_url": "https://api.github.com/users/vempaliakhil96/following{/other_user}",
            "gists_url": "https://api.github.com/users/vempaliakhil96/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vempaliakhil96/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vempaliakhil96/subscriptions",
            "organizations_url": "https://api.github.com/users/vempaliakhil96/orgs",
            "repos_url": "https://api.github.com/users/vempaliakhil96/repos",
            "events_url": "https://api.github.com/users/vempaliakhil96/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vempaliakhil96/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-10T01:07:26Z",
        "updated_at": "2023-10-08T15:06:39Z",
        "closed_at": "2023-06-11T20:20:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5966",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5966",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5966.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5966.patch",
            "merged_at": "2023-06-11T20:20:04Z"
        },
        "body": "Inspired by the filtering capability available in ChromaDB, added the same functionality to the FAISS vectorestore as well. Since FAISS does not have an inbuilt method of filtering used the approach suggested in this [thread](https://github.com/facebookresearch/faiss/issues/1079)\r\nLangchain Issue inspiration: https://github.com/hwchase17/langchain/issues/4572\r\n\r\n- [x] Added filtering capability to semantic similarly and MMR\r\n- [x] Added test cases for filtering in `tests/integration_tests/vectorstores/test_faiss.py`\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n  VectorStores / Retrievers / Memory\r\n  - @dev2049\r\n  - @hwchase17 \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5966/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5966/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5965",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5965/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5965/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5965/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5965",
        "id": 1750669192,
        "node_id": "I_kwDOIPDwls5oWReI",
        "number": 5965,
        "title": "SQLiteCache does not cache logprobs",
        "user": {
            "login": "aabdullah-getguru",
            "id": 113741909,
            "node_id": "U_kgDOBseQVQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/113741909?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aabdullah-getguru",
            "html_url": "https://github.com/aabdullah-getguru",
            "followers_url": "https://api.github.com/users/aabdullah-getguru/followers",
            "following_url": "https://api.github.com/users/aabdullah-getguru/following{/other_user}",
            "gists_url": "https://api.github.com/users/aabdullah-getguru/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aabdullah-getguru/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aabdullah-getguru/subscriptions",
            "organizations_url": "https://api.github.com/users/aabdullah-getguru/orgs",
            "repos_url": "https://api.github.com/users/aabdullah-getguru/repos",
            "events_url": "https://api.github.com/users/aabdullah-getguru/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aabdullah-getguru/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-10T00:26:29Z",
        "updated_at": "2023-09-18T16:08:49Z",
        "closed_at": "2023-09-18T16:08:48Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain version: 0.0.192, Python: 3.10\r\n\r\n```\r\nfrom langchain.cache import SQLiteCache\r\nlangchain.llm_cache = SQLiteCache(database_path='.langchain.db')\r\nfrom langchain.llms import OpenAI\r\n\r\nmy_llm = OpenAI(model_name='text-davinci-003', temperature=0, max_tokens=1, logprobs=5)\r\nresult=my_llm.generate(['2+2='])\r\nresult.generations[0][0]\r\n```\r\n\r\nIn the above, the logprobs will only be generated the first time and never again. Interestingly, the InMemoryCache does successfully persist the logprobs (and other generation_info) upon a cache hit.\r\n\r\n@hwchase17 @yuert\r\n\r\n\r\n### Who can help?\r\n\r\nAny contributor.\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [x] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n```\r\nfrom langchain.cache import SQLiteCache\r\nlangchain.llm_cache = SQLiteCache(database_path='.langchain.db')\r\nfrom langchain.llms import OpenAI\r\n\r\nmy_llm = OpenAI(model_name='text-davinci-003', temperature=0, max_tokens=1, logprobs=5)\r\nresult=my_llm.generate(['2+2='])\r\nresult.generations[0][0]\r\n```\r\n\r\n### Expected behavior\r\n\r\nI expect the following output every time I run this\r\n\r\n```\r\nGeneration(text='4', generation_info={'finish_reason': 'length', 'logprobs': <OpenAIObject at 0x7fbcb6ab1710> JSON: {\r\n  \"tokens\": [\r\n    \"4\"\r\n  ],\r\n  \"token_logprobs\": [\r\n    -0.5794853\r\n  ],\r\n  \"top_logprobs\": [\r\n    {\r\n      \"4\": -0.5794853,\r\n      \"\\n\": -1.6557268,\r\n      \"5\": -2.264629,\r\n      \"?\": -3.518741,\r\n      \"3\": -4.042759\r\n    }\r\n  ],\r\n  \"text_offset\": [\r\n    4\r\n  ]\r\n}})\r\n```\r\n\r\n\r\nBut instead (upon the second or more times I run this), I get this:\r\nGeneration(text='4', generation_info=None)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5965/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5965/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5964",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5964/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5964/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5964/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5964",
        "id": 1750638342,
        "node_id": "I_kwDOIPDwls5oWJ8G",
        "number": 5964,
        "title": "Add Proxy to GoogleSearchAPIWrapper",
        "user": {
            "login": "timxieICN",
            "id": 112183115,
            "node_id": "U_kgDOBq_HSw",
            "avatar_url": "https://avatars.githubusercontent.com/u/112183115?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/timxieICN",
            "html_url": "https://github.com/timxieICN",
            "followers_url": "https://api.github.com/users/timxieICN/followers",
            "following_url": "https://api.github.com/users/timxieICN/following{/other_user}",
            "gists_url": "https://api.github.com/users/timxieICN/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/timxieICN/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/timxieICN/subscriptions",
            "organizations_url": "https://api.github.com/users/timxieICN/orgs",
            "repos_url": "https://api.github.com/users/timxieICN/repos",
            "events_url": "https://api.github.com/users/timxieICN/events{/privacy}",
            "received_events_url": "https://api.github.com/users/timxieICN/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-09T23:38:23Z",
        "updated_at": "2023-11-07T16:07:53Z",
        "closed_at": "2023-11-07T16:07:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\r\n\r\nNeed to add proxy to GoogleSearchAPIWrapper()\r\n\r\nPerhaps using this [approach](https://github.com/googleapis/google-api-python-client/issues/1078#issuecomment-718919158) and/or this [approach](https://github.com/googleapis/google-api-python-client/issues/1260#issuecomment-802728649)?\r\n\r\n```\r\nimport httplib2\r\nimport google_auth_httplib2\r\n\r\nhttp = httplib2.Http(proxy_info=httplib2.ProxyInfo(\r\n            httplib2.socks.PROXY_TYPE_HTTP, PROXY_IP, PROXY_PORT\r\n))\r\n\r\nauthorized_http = google_auth_httplib2.AuthorizedHttp(credentials, http=http)\r\n\r\nservice = discovery.build(http=authorized_http)\r\n```\r\n\r\n### Motivation\r\n\r\nAdd Proxy to GoogleSearchAPIWrapper\r\n\r\n### Your contribution\r\n\r\nI can write a PR but perhaps with some additional help",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5964/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5963",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5963/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5963/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5963/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5963",
        "id": 1750591178,
        "node_id": "I_kwDOIPDwls5oV-bK",
        "number": 5963,
        "title": "Issue: How to stop an AgentExecutor after has been dispatched/ran.",
        "user": {
            "login": "medram",
            "id": 24493753,
            "node_id": "MDQ6VXNlcjI0NDkzNzUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24493753?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/medram",
            "html_url": "https://github.com/medram",
            "followers_url": "https://api.github.com/users/medram/followers",
            "following_url": "https://api.github.com/users/medram/following{/other_user}",
            "gists_url": "https://api.github.com/users/medram/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/medram/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/medram/subscriptions",
            "organizations_url": "https://api.github.com/users/medram/orgs",
            "repos_url": "https://api.github.com/users/medram/repos",
            "events_url": "https://api.github.com/users/medram/events{/privacy}",
            "received_events_url": "https://api.github.com/users/medram/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-09T23:01:56Z",
        "updated_at": "2023-09-18T16:08:54Z",
        "closed_at": "2023-09-18T16:08:53Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nSometimes, the agent took too long to respond, stopping it and trying again would be a good option,\r\nSo, How Can I Stop and Agent?\r\n\r\nThanks in advance.\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5963/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5963/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5962",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5962/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5962/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5962/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5962",
        "id": 1750536680,
        "node_id": "PR_kwDOIPDwls5SqHdk",
        "number": 5962,
        "title": "Add New Retriever Interface with Callbacks",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-06-09T21:54:37Z",
        "updated_at": "2023-07-03T03:42:33Z",
        "closed_at": "2023-06-30T21:44:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5962",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5962",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5962.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5962.patch",
            "merged_at": "2023-06-30T21:44:03Z"
        },
        "body": "Handle the new retriever events in a way that (I think) is entirely backwards compatible? Needs more testing for some of the chain changes and all.\r\n\r\nThis creates an entire new run type, however. We could also just treat this as an event within a chain run presumably (same with memory)\r\n\r\nAdds a subclass initializer that upgrades old retriever implementations to the new schema, along with tests to ensure they work.\r\n\r\nFirst commit doesn't upgrade any of our retriever implementations (to show that we can pass the tests along with additional ones testing the upgrade logic). \r\n\r\nSecond commit upgrades the known universe of retrievers in langchain.\r\n\r\n- [X] Add callback handling methods for retriever start/end/error (open to renaming to 'retrieval' if you want that)\r\n- [X] Update BaseRetriever schema to support callbacks\r\n- [X] Tests for upgrading old \"v1\" retrievers for backwards compatibility\r\n- [X] Update existing retriever implementations to implement the new interface\r\n- [X] Update calls within chains to .{a]get_relevant_documents to pass the child callback manager\r\n- [X] Update the notebooks/docs to reflect the new interface\r\n- [X] Test notebooks thoroughly\r\n\r\n\r\nNot handled:\r\n- Memory pass throughs: retrieval memory doesn't have a parent callback manager passed through the method\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5962/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5962/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5961",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5961/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5961/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5961/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5961",
        "id": 1750455642,
        "node_id": "PR_kwDOIPDwls5Sp1mw",
        "number": 5961,
        "title": "Using batches for Chroma update_document",
        "user": {
            "login": "berkedilekoglu",
            "id": 19657350,
            "node_id": "MDQ6VXNlcjE5NjU3MzUw",
            "avatar_url": "https://avatars.githubusercontent.com/u/19657350?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/berkedilekoglu",
            "html_url": "https://github.com/berkedilekoglu",
            "followers_url": "https://api.github.com/users/berkedilekoglu/followers",
            "following_url": "https://api.github.com/users/berkedilekoglu/following{/other_user}",
            "gists_url": "https://api.github.com/users/berkedilekoglu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/berkedilekoglu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/berkedilekoglu/subscriptions",
            "organizations_url": "https://api.github.com/users/berkedilekoglu/orgs",
            "repos_url": "https://api.github.com/users/berkedilekoglu/repos",
            "events_url": "https://api.github.com/users/berkedilekoglu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/berkedilekoglu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            },
            {
                "id": 5680700873,
                "node_id": "LA_kwDOIPDwls8AAAABUpidyQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:improvement",
                "name": "auto:improvement",
                "color": "FBCA04",
                "default": false,
                "description": "Medium size change to existing code to handle new use-cases"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-06-09T20:26:59Z",
        "updated_at": "2023-08-11T17:52:14Z",
        "closed_at": "2023-08-11T17:52:14Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5961",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5961",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5961.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5961.patch",
            "merged_at": null
        },
        "body": "https://github.com/hwchase17/langchain/blob/2a4b32dee24c22159805f643b87eece107224951/langchain/vectorstores/chroma.py#L355-L375\r\n\r\nCurrently, the defined update_document function only takes a single document and its ID for updating. However, Chroma can update multiple documents by taking a list of IDs and documents for batch updates. \r\n\r\nI update the Chroma vectorstore with refreshed information from my website every 20 minutes. Updating the update_document function to perform simultaneous updates for each changed piece of information would significantly reduce the update time in such use cases. \r\n\r\nFor my case I update a total of 8810 chunks. Updating these 8810 individual chunks using the current function takes a total of 8.5 minutes. However, if we process the inputs in batches and update them collectively, all 8810 separate chunks can be updated in just 1 minute. This significantly reduces the time it takes for users of actively used chatbots to access up-to-date information.\r\n\r\nI also updated the integration test and the examples provided in the documentation for the new update_document function.\r\n\r\n@hwchase17 \r\n\r\nmy twitter: [berkedilekoglu](https://twitter.com/berkedilekoglu)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5961/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5961/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5960",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5960/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5960/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5960/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5960",
        "id": 1750381148,
        "node_id": "PR_kwDOIPDwls5SplZa",
        "number": 5960,
        "title": "Move schema to directory",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-09T19:11:01Z",
        "updated_at": "2023-07-12T06:49:58Z",
        "closed_at": "2023-07-12T06:49:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5960",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5960",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5960.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5960.patch",
            "merged_at": null
        },
        "body": "As @nfcampos [pointed out](https://github.com/hwchase17/langchain/pull/5918#discussion_r1223894534), moving the schema to a directory will both let us keep it more organized and help us get around some cyclic dependencies.\r\n\r\n\r\nAdded a public API test as well.\r\n\r\nAlso realized we were importing the \"~private\" function `message_to_dict()` in several memory classes so made that public (along with the `message_from_dict()` function since it seems weird to only export one.  \r\n\r\nI could alias it with the private one as well in case people were using it to make it completely backwards compatible but haven't done that yet",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5960/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5960/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5959",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5959/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5959/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5959/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5959",
        "id": 1750364239,
        "node_id": "PR_kwDOIPDwls5Sphi6",
        "number": 5959,
        "title": "Update arize_callback.py",
        "user": {
            "login": "hakantekgul",
            "id": 14350521,
            "node_id": "MDQ6VXNlcjE0MzUwNTIx",
            "avatar_url": "https://avatars.githubusercontent.com/u/14350521?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hakantekgul",
            "html_url": "https://github.com/hakantekgul",
            "followers_url": "https://api.github.com/users/hakantekgul/followers",
            "following_url": "https://api.github.com/users/hakantekgul/following{/other_user}",
            "gists_url": "https://api.github.com/users/hakantekgul/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hakantekgul/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hakantekgul/subscriptions",
            "organizations_url": "https://api.github.com/users/hakantekgul/orgs",
            "repos_url": "https://api.github.com/users/hakantekgul/repos",
            "events_url": "https://api.github.com/users/hakantekgul/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hakantekgul/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-09T18:59:51Z",
        "updated_at": "2023-06-19T18:00:43Z",
        "closed_at": "2023-06-19T18:00:38Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5959",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5959",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5959.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5959.patch",
            "merged_at": null
        },
        "body": "Arize released a new Generative LLM Model Type, adjusting the callback function to new logging. \r\n\r\nAdded arize imports, please delete if not necessary. \r\n\r\nSpecifically, this change makes sure that the prompt and response pairs from LangChain agents are logged into Arize as a Generative LLM model, instead of our previous categorical model. In order to do this, the callback functions collects the necessary data and passes the data into Arize using Python Pandas SDK. \r\n\r\nArize library, specifically pandas.logger is an additional dependency. \r\n\r\nNotebook For Test: https://docs.arize.com/arize/resources/integrations/langchain\r\n\r\n#### Who can review?\r\n\r\nTag maintainers/contributors who might be interested:\r\n\r\n\r\n  @hwchase17 - project lead\r\n\r\n  Tracing / Callbacks\r\n  - @agola11\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5959/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5959/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5958",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5958/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5958/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5958/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5958",
        "id": 1750351779,
        "node_id": "PR_kwDOIPDwls5Spexq",
        "number": 5958,
        "title": "Create Airtable loader",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-09T18:48:09Z",
        "updated_at": "2023-06-10T22:43:19Z",
        "closed_at": "2023-06-10T22:43:18Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5958",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5958",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5958.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5958.patch",
            "merged_at": "2023-06-10T22:43:18Z"
        },
        "body": "Create document loader for Airtable",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5958/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5958/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5957",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5957/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5957/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5957/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5957",
        "id": 1750318438,
        "node_id": "I_kwDOIPDwls5oU71m",
        "number": 5957,
        "title": "DOC: Documented example doesn't work",
        "user": {
            "login": "gwc4github",
            "id": 3164663,
            "node_id": "MDQ6VXNlcjMxNjQ2NjM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3164663?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gwc4github",
            "html_url": "https://github.com/gwc4github",
            "followers_url": "https://api.github.com/users/gwc4github/followers",
            "following_url": "https://api.github.com/users/gwc4github/following{/other_user}",
            "gists_url": "https://api.github.com/users/gwc4github/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gwc4github/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gwc4github/subscriptions",
            "organizations_url": "https://api.github.com/users/gwc4github/orgs",
            "repos_url": "https://api.github.com/users/gwc4github/repos",
            "events_url": "https://api.github.com/users/gwc4github/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gwc4github/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 13,
        "created_at": "2023-06-09T18:21:14Z",
        "updated_at": "2023-11-21T10:55:03Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nThis is for the documentation page:\r\n   https://python.langchain.com/en/latest/modules/agents/agents/examples/structured_chat.html\r\nThis does not work in Jupyter or if you download it to a .py file and run it.  You do get 2 different errors though.\r\nWhen you run this in Jupyter you get this error:\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nConfigError                               Traceback (most recent call last)\r\nCell In[29], line 3\r\n      1 async_browser = create_async_playwright_browser()\r\n      2 # sync_browser = None # create_sync_playwright_browser()\r\n----> 3 browser_toolkit = PlayWrightBrowserToolkit.from_browser(async_browser=async_browser)\r\n      4 tools = browser_toolkit.get_tools()\r\n\r\nFile ~/Google Drive/PycharmProjectsLocal/pythonProject2/venv/lib/python3.8/site-packages/langchain/agents/agent_toolkits/playwright/toolkit.py:83, in PlayWrightBrowserToolkit.from_browser(cls, sync_browser, async_browser)\r\n     81 # This is to raise a better error than the forward ref ones Pydantic would have\r\n     82 lazy_import_playwright_browsers()\r\n---> 83 return cls(sync_browser=sync_browser, async_browser=async_browser)\r\n\r\nFile ~/Google Drive/PycharmProjectsLocal/pythonProject2/venv/lib/python3.8/site-packages/pydantic/main.py:339, in pydantic.main.BaseModel.__init__()\r\n\r\nFile ~/Google Drive/PycharmProjectsLocal/pythonProject2/venv/lib/python3.8/site-packages/pydantic/main.py:1076, in pydantic.main.validate_model()\r\n\r\nFile ~/Google Drive/PycharmProjectsLocal/pythonProject2/venv/lib/python3.8/site-packages/pydantic/fields.py:860, in pydantic.fields.ModelField.validate()\r\n\r\nConfigError: field \"sync_browser\" not yet prepared so type is still a ForwardRef, you might need to call PlayWrightBrowserToolkit.update_forward_refs().\r\n```\r\n\r\nWhen you run it as a .py file you get this error:\r\n```\r\nConnected to pydev debugger (build 231.9011.38)\r\nTraceback (most recent call last):\r\n  File \"/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/pydevd.py\", line 1496, in _exec\r\n    pydev_imports.execfile(file, globals, locals)  # execute the script\r\n  File \"/Applications/PyCharm.app/Contents/plugins/python/helpers/pydev/_pydev_imps/_pydev_execfile.py\", line 18, in execfile\r\n    exec(compile(contents+\"\\n\", file, 'exec'), glob, loc)\r\n  File \"/Users/greggwcasey/Google Drive/PycharmProjectsLocal/pythonProject2/structured_chat.py\", line 76\r\n    response = await agent_chain.arun(input=\"Hi I'm Erica.\")\r\n               ^\r\nSyntaxError: 'await' outside function\r\npython-BaseException\r\n```\n\n### Idea or request for content:\n\nI would like to have a working example that I could download and run on my Jupyter server or Colab and it work as-is.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5957/reactions",
            "total_count": 5,
            "+1": 5,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5957/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5956",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5956/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5956/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5956/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5956",
        "id": 1750315309,
        "node_id": "PR_kwDOIPDwls5SpWwZ",
        "number": 5956,
        "title": "Add load() to snowflake loader",
        "user": {
            "login": "rlancemartin",
            "id": 122662504,
            "node_id": "U_kgDOB0-uaA",
            "avatar_url": "https://avatars.githubusercontent.com/u/122662504?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rlancemartin",
            "html_url": "https://github.com/rlancemartin",
            "followers_url": "https://api.github.com/users/rlancemartin/followers",
            "following_url": "https://api.github.com/users/rlancemartin/following{/other_user}",
            "gists_url": "https://api.github.com/users/rlancemartin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rlancemartin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rlancemartin/subscriptions",
            "organizations_url": "https://api.github.com/users/rlancemartin/orgs",
            "repos_url": "https://api.github.com/users/rlancemartin/repos",
            "events_url": "https://api.github.com/users/rlancemartin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rlancemartin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-09T18:18:59Z",
        "updated_at": "2023-06-09T18:27:29Z",
        "closed_at": "2023-06-09T18:27:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5956",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5956",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5956.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5956.patch",
            "merged_at": "2023-06-09T18:27:29Z"
        },
        "body": "Quick fix for recently added [snowflake data loader](https://github.com/hwchase17/langchain/pull/5825/files).\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5956/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5956/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5955",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5955/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5955/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5955/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5955",
        "id": 1750307071,
        "node_id": "PR_kwDOIPDwls5SpVB0",
        "number": 5955,
        "title": "feat: Add `UnstructuredXMLLoader` for `.xml` files",
        "user": {
            "login": "qued",
            "id": 64741807,
            "node_id": "MDQ6VXNlcjY0NzQxODA3",
            "avatar_url": "https://avatars.githubusercontent.com/u/64741807?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/qued",
            "html_url": "https://github.com/qued",
            "followers_url": "https://api.github.com/users/qued/followers",
            "following_url": "https://api.github.com/users/qued/following{/other_user}",
            "gists_url": "https://api.github.com/users/qued/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/qued/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/qued/subscriptions",
            "organizations_url": "https://api.github.com/users/qued/orgs",
            "repos_url": "https://api.github.com/users/qued/repos",
            "events_url": "https://api.github.com/users/qued/events{/privacy}",
            "received_events_url": "https://api.github.com/users/qued/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-09T18:10:59Z",
        "updated_at": "2023-06-10T23:24:42Z",
        "closed_at": "2023-06-10T23:24:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5955",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5955",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5955.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5955.patch",
            "merged_at": "2023-06-10T23:24:42Z"
        },
        "body": "# Unstructured XML Loader\r\nAdds an `UnstructuredXMLLoader` class for .xml files. Works with unstructured>=0.6.7. A plain text representation of the text with the XML tags will be available under the `page_content` attribute in the doc.\r\n\r\n### Testing\r\n```python\r\nfrom langchain.document_loaders import UnstructuredXMLLoader\r\n\r\nloader = UnstructuredXMLLoader(\r\n    \"example_data/factbook.xml\",\r\n)\r\ndocs = loader.load()\r\n```\r\n\r\n\r\n## Who can review?\r\n\r\n@hwchase17 \r\n@eyurtsev\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5955/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5955/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5954",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5954/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5954/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5954/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5954",
        "id": 1750279975,
        "node_id": "PR_kwDOIPDwls5SpPDM",
        "number": 5954,
        "title": "Clarifai integration",
        "user": {
            "login": "ghost",
            "id": 10137,
            "node_id": "MDQ6VXNlcjEwMTM3",
            "avatar_url": "https://avatars.githubusercontent.com/u/10137?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ghost",
            "html_url": "https://github.com/ghost",
            "followers_url": "https://api.github.com/users/ghost/followers",
            "following_url": "https://api.github.com/users/ghost/following{/other_user}",
            "gists_url": "https://api.github.com/users/ghost/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ghost/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ghost/subscriptions",
            "organizations_url": "https://api.github.com/users/ghost/orgs",
            "repos_url": "https://api.github.com/users/ghost/repos",
            "events_url": "https://api.github.com/users/ghost/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ghost/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 4899415699,
                "node_id": "LA_kwDOIPDwls8AAAABJAcmkw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/llms",
                "name": "llms",
                "color": "7CDBB2",
                "default": false,
                "description": ""
            },
            {
                "id": 5541432778,
                "node_id": "LA_kwDOIPDwls8AAAABSkuNyg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/area:%20vector%20store",
                "name": "area: vector store",
                "color": "D4C5F9",
                "default": false,
                "description": "Related to vector store module"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-06-09T17:47:07Z",
        "updated_at": "2023-06-22T15:00:16Z",
        "closed_at": "2023-06-22T15:00:15Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5954",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5954",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5954.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5954.patch",
            "merged_at": "2023-06-22T15:00:15Z"
        },
        "body": "<!--\r\nThank you for contributing to LangChain! Your PR will appear in our release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n\r\nFinally, we'd love to show appreciation for your contribution - if you'd like us to shout you out on Twitter, please also include your handle!\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\n# Changes\r\nThis PR adds [Clarifai](https://www.clarifai.com/) integration to Langchain. Clarifai is an end-to-end AI Platform. Clarifai offers user the ability to use many types of LLM (OpenAI, cohere, ect and other open source models). As well, a clarifai app can be treated as a vector database to upload and retrieve data. The integrations includes:\r\n- Clarifai LLM integration: Clarifai supports many types of language model that users can utilize for their application\r\n- Clarifai VectorDB: A Clarifai application can hold data and embeddings. You can run semantic search with the embeddings\r\n\r\n#### Before submitting\r\n- [x] Added integration test for LLM \r\n- [x] Added integration test for VectorDB \r\n- [x] Added notebook for LLM \r\n- [x] Added notebook for VectorDB \r\n\r\n\r\n#### Who can review?\r\n  - @hwchase17\r\n  - @agola11\r\n  - @dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5954/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5953",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5953/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5953/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5953/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5953",
        "id": 1750256739,
        "node_id": "I_kwDOIPDwls5oUsxj",
        "number": 5953,
        "title": "BadRequestError: BadRequestError(400, 'search_phase_execution_exception', 'runtime error') using ElasticVectorSearch",
        "user": {
            "login": "Yafaa5",
            "id": 135732075,
            "node_id": "U_kgDOCBcbaw",
            "avatar_url": "https://avatars.githubusercontent.com/u/135732075?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Yafaa5",
            "html_url": "https://github.com/Yafaa5",
            "followers_url": "https://api.github.com/users/Yafaa5/followers",
            "following_url": "https://api.github.com/users/Yafaa5/following{/other_user}",
            "gists_url": "https://api.github.com/users/Yafaa5/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Yafaa5/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Yafaa5/subscriptions",
            "organizations_url": "https://api.github.com/users/Yafaa5/orgs",
            "repos_url": "https://api.github.com/users/Yafaa5/repos",
            "events_url": "https://api.github.com/users/Yafaa5/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Yafaa5/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-09T17:26:11Z",
        "updated_at": "2023-09-15T16:08:07Z",
        "closed_at": "2023-09-15T16:08:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain version = '0.0.191'\r\nelasticsearch version='(8, 8, 0)'\n\n### Who can help?\n\n@hwchase17 @eyurtsev \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI am trying ElasticVectorSearchon langchain with my Azure elastic instance and I am getting `BadRequestError: BadRequestError(400, 'search_phase_execution_exception', 'runtime error')`\r\n\r\n```\r\nfrom langchain import ElasticVectorSearch\r\nfrom langchain.embeddings import OpenAIEmbeddings\r\n\r\nembedding = OpenAIEmbeddings()\r\n\r\nelastic_host = \"hostid.westeurope.azure.elastic-cloud.com\"  \r\nelasticsearch_url = f\"https://user:password-elastic@{elastic_host}:9243\"\r\nelastic_vector_search = ElasticVectorSearch(\r\n    elasticsearch_url=elasticsearch_url,\r\n    index_name=\"test_langchain\",\r\n    embedding=embedding\r\n)\r\n\r\n```\r\n`doc = elastic_vector_search.similarity_search(\"simple query\")`\r\n\r\nThe response is :\r\n`BadRequestError: BadRequestError(400, 'search_phase_execution_exception', 'runtime error')`\n\n### Expected behavior\n\nIt should return a list of document that match the query from elastic search",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5953/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5953/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5952",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5952/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5952/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5952/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/5952",
        "id": 1750232393,
        "node_id": "I_kwDOIPDwls5oUm1J",
        "number": 5952,
        "title": "Ability to pass in ids for opensearch docs",
        "user": {
            "login": "taekimsmar",
            "id": 66041442,
            "node_id": "MDQ6VXNlcjY2MDQxNDQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/66041442?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/taekimsmar",
            "html_url": "https://github.com/taekimsmar",
            "followers_url": "https://api.github.com/users/taekimsmar/followers",
            "following_url": "https://api.github.com/users/taekimsmar/following{/other_user}",
            "gists_url": "https://api.github.com/users/taekimsmar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/taekimsmar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/taekimsmar/subscriptions",
            "organizations_url": "https://api.github.com/users/taekimsmar/orgs",
            "repos_url": "https://api.github.com/users/taekimsmar/repos",
            "events_url": "https://api.github.com/users/taekimsmar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/taekimsmar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-09T17:06:34Z",
        "updated_at": "2023-06-26T15:58:45Z",
        "closed_at": "2023-06-26T15:58:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature request\n\nThere is no way to update existing vectors in the opensearch implementation for example if some existing text was changed by passing in custom ids.\r\n\r\nhttps://github.com/hwchase17/langchain/blob/master/langchain/vectorstores/opensearch_vector_search.py#L95\n\n### Motivation\n\nPinecone implementation has this basic functionality: \r\nhttps://github.com/hwchase17/langchain/blob/master/langchain/vectorstores/pinecone.py#L85\n\n### Your contribution\n\nI can try to make a PR to mirror the pincone implementation but it would be pretty naive.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5952/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5952/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5950",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5950/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5950/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5950/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5950",
        "id": 1750187757,
        "node_id": "PR_kwDOIPDwls5So6oc",
        "number": 5950,
        "title": "Update to Vectara integration",
        "user": {
            "login": "ofermend",
            "id": 1823547,
            "node_id": "MDQ6VXNlcjE4MjM1NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1823547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ofermend",
            "html_url": "https://github.com/ofermend",
            "followers_url": "https://api.github.com/users/ofermend/followers",
            "following_url": "https://api.github.com/users/ofermend/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofermend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ofermend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofermend/subscriptions",
            "organizations_url": "https://api.github.com/users/ofermend/orgs",
            "repos_url": "https://api.github.com/users/ofermend/repos",
            "events_url": "https://api.github.com/users/ofermend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ofermend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-09T16:34:42Z",
        "updated_at": "2023-06-10T23:27:02Z",
        "closed_at": "2023-06-10T23:27:01Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5950",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5950",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5950.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5950.patch",
            "merged_at": "2023-06-10T23:27:01Z"
        },
        "body": "This PR updates the Vectara integration (@hwchase17 ):\r\n* Adds reuse of requests.session to imrpove efficiency and speed.\r\n* Utilizes Vectara's low-level API (instead of standard API) to better match user's specific chunking with LangChain\r\n* Now add_texts puts all the texts into a single Vectara document so indexing is much faster.\r\n* updated variables names from alpha to lambda_val (to be consistent with Vectara docs) and added n_context_sentence so it's available to use if needed.\r\n* Updates to documentation and tests",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5950/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5949",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5949/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5949/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5949/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5949",
        "id": 1750144631,
        "node_id": "PR_kwDOIPDwls5SoxPG",
        "number": 5949,
        "title": "bump ver to 195",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-06-09T15:58:31Z",
        "updated_at": "2023-06-09T16:17:09Z",
        "closed_at": "2023-06-09T16:17:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5949",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5949",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5949.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5949.patch",
            "merged_at": "2023-06-09T16:17:08Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5949/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5949/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5948",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5948/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5948/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5948/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/5948",
        "id": 1750124260,
        "node_id": "PR_kwDOIPDwls5SosxV",
        "number": 5948,
        "title": "enhancment: optional file loader in `GoogleDriveLoader`",
        "user": {
            "login": "MthwRobinson",
            "id": 1635179,
            "node_id": "MDQ6VXNlcjE2MzUxNzk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1635179?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/MthwRobinson",
            "html_url": "https://github.com/MthwRobinson",
            "followers_url": "https://api.github.com/users/MthwRobinson/followers",
            "following_url": "https://api.github.com/users/MthwRobinson/following{/other_user}",
            "gists_url": "https://api.github.com/users/MthwRobinson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/MthwRobinson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/MthwRobinson/subscriptions",
            "organizations_url": "https://api.github.com/users/MthwRobinson/orgs",
            "repos_url": "https://api.github.com/users/MthwRobinson/repos",
            "events_url": "https://api.github.com/users/MthwRobinson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/MthwRobinson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-06-09T15:42:46Z",
        "updated_at": "2023-06-18T17:48:16Z",
        "closed_at": "2023-06-18T17:48:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/5948",
            "html_url": "https://github.com/langchain-ai/langchain/pull/5948",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/5948.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/5948.patch",
            "merged_at": "2023-06-18T17:48:15Z"
        },
        "body": "### Summary\r\n\r\nGives users the ability to specify a `file_loader_cls` for processing files in Google Drive that are not Google Documents or Google Sheets.\r\n\r\nFixes #5791. See also [this Twitter thread](https://twitter.com/klaudioz/status/1666124861482184708?s=46&t=UImYT1AvX587tYTQ2i1sIQ) where a user requested this capability.\r\n\r\n### Testing\r\n\r\nFor individual files (use a file id from your own GDrive):\r\n\r\n```python\r\nfrom langchain.document_loaders import GoogleDriveLoader\r\nfrom langchain.document_loaders import UnstructuredFileIOLoader\r\n\r\nfile_id=\"1x9WBtFPWMEAdjcJzPScRsjpjQvpSo_kz\"\r\nloader = GoogleDriveLoader(\r\n    file_ids=[file_id],\r\n    file_loader_cls=UnstructuredFileIOLoader,\r\n    file_loader_kwargs={\"mode\": \"elements\"}\r\n)\r\nloader.load()\r\n```\r\n\r\nFor a folder:\r\n\r\n```python\r\nfrom langchain.document_loaders import GoogleDriveLoader\r\nfrom langchain.document_loaders import UnstructuredFileIOLoader\r\n\r\nfolder_id=\"1asMOHY1BqBS84JcRbOag5LOJac74gpmD\"\r\nloader = GoogleDriveLoader(\r\n    folder_id=folder_id,\r\n    file_loader_cls=UnstructuredFileIOLoader,\r\n    file_loader_kwargs={\"mode\": \"elements\"}\r\n)\r\nloader.load()\r\n```\r\n\r\n#### Who can review?\r\n\r\n@hwchase17\r\n@eyurtsev",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/5948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/5948/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]