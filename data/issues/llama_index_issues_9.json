[
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8700",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8700/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8700/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8700/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8700",
        "id": 1978517215,
        "node_id": "PR_kwDOIWuq585ep60c",
        "number": 8700,
        "title": "add add_kwargs to vector stores / vectorstoreindex",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-06T07:56:36Z",
        "updated_at": "2023-11-06T08:37:30Z",
        "closed_at": "2023-11-06T08:37:29Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8700",
            "html_url": "https://github.com/run-llama/llama_index/pull/8700",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8700.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8700.patch",
            "merged_at": "2023-11-06T08:37:29Z"
        },
        "body": "This PR adds add_kwargs to both the inner `VectorStore` class as well as the outer `VectorStoreIndex` class - we pass any additional kwargs in from_documents towards vector store insert during initialization.\r\n\r\nThis allows users to specify kwargs when inserting a document/node (whether during `from_documents` or just `insert`) \r\n\r\nWill help with row-level features like access control etc ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8700/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8700/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8699",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8699/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8699/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8699/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8699",
        "id": 1978390280,
        "node_id": "PR_kwDOIWuq585epe3-",
        "number": 8699,
        "title": "proposal: improve postprocessor",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-06T06:32:01Z",
        "updated_at": "2023-11-06T16:07:51Z",
        "closed_at": "2023-11-06T16:07:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8699",
            "html_url": "https://github.com/run-llama/llama_index/pull/8699",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8699.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8699.patch",
            "merged_at": "2023-11-06T16:07:50Z"
        },
        "body": "here we allow postprocessor to take in query_str, not just QueryBundle\r\n\r\nalso edited docs slightly. idea is to make it less painful to use our postprocessors on their own \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8699/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8699/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8697",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8697/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8697/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8697/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8697",
        "id": 1978185698,
        "node_id": "PR_kwDOIWuq585eozCP",
        "number": 8697,
        "title": "make link point to html",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-06T02:54:20Z",
        "updated_at": "2023-11-06T02:54:37Z",
        "closed_at": "2023-11-06T02:54:36Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8697",
            "html_url": "https://github.com/run-llama/llama_index/pull/8697",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8697.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8697.patch",
            "merged_at": "2023-11-06T02:54:36Z"
        },
        "body": "Small link fix to point to html instead of md\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8697/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8697/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8696",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8696/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8696/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8696/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8696",
        "id": 1978174190,
        "node_id": "I_kwDOIWuq58516Iru",
        "number": 8696,
        "title": "[Feature Request]: UI is required",
        "user": {
            "login": "shawsa-artc",
            "id": 136055061,
            "node_id": "U_kgDOCBwJFQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/136055061?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shawsa-artc",
            "html_url": "https://github.com/shawsa-artc",
            "followers_url": "https://api.github.com/users/shawsa-artc/followers",
            "following_url": "https://api.github.com/users/shawsa-artc/following{/other_user}",
            "gists_url": "https://api.github.com/users/shawsa-artc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shawsa-artc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shawsa-artc/subscriptions",
            "organizations_url": "https://api.github.com/users/shawsa-artc/orgs",
            "repos_url": "https://api.github.com/users/shawsa-artc/repos",
            "events_url": "https://api.github.com/users/shawsa-artc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shawsa-artc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T02:40:22Z",
        "updated_at": "2023-11-06T06:51:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nCan we have an official supported UI library built in?\n\n### Reason\n\n_No response_\n\n### Value of Feature\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8696/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8696/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8695",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8695/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8695/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8695/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8695",
        "id": 1978172788,
        "node_id": "PR_kwDOIWuq585eowSp",
        "number": 8695,
        "title": "Fix context window reference in Lllama-cpp",
        "user": {
            "login": "apb514",
            "id": 14863425,
            "node_id": "MDQ6VXNlcjE0ODYzNDI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/14863425?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/apb514",
            "html_url": "https://github.com/apb514",
            "followers_url": "https://api.github.com/users/apb514/followers",
            "following_url": "https://api.github.com/users/apb514/following{/other_user}",
            "gists_url": "https://api.github.com/users/apb514/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/apb514/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/apb514/subscriptions",
            "organizations_url": "https://api.github.com/users/apb514/orgs",
            "repos_url": "https://api.github.com/users/apb514/repos",
            "events_url": "https://api.github.com/users/apb514/events{/privacy}",
            "received_events_url": "https://api.github.com/users/apb514/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-06T02:38:22Z",
        "updated_at": "2023-11-06T02:57:08Z",
        "closed_at": "2023-11-06T02:57:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8695",
            "html_url": "https://github.com/run-llama/llama_index/pull/8695",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8695.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8695.patch",
            "merged_at": null
        },
        "body": "# Description \r\nThe LLama class from LLama-cpp stores its context window argument in `.params.n_ctx` instead of `.context_params.n_ctx`. \r\n\r\nPrior to this PR when attempting to create an index with llama-cpp locally I would get: \r\n\r\n`AttributeError: 'Llama' object has no attribute 'context_params'` \r\n\r\nUpon debugging you can see that the context params are stored as `params`\r\n<img width=\"576\" alt=\"Screenshot 2023-11-05 at 9 31 56 PM\" src=\"https://github.com/run-llama/llama_index/assets/14863425/c4dfb88c-6323-4c28-82fa-80daf6243451\">\r\n\r\nFixes # (issue) \r\n\r\nNo current issue. \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\nExisting tests pass, I had 7 unrelated tests fail that require `stopwords` from `nltk` as I can not make that download with my corporate proxy setup.  \r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8695/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8695/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8694",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8694/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8694/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8694/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8694",
        "id": 1978016988,
        "node_id": "PR_kwDOIWuq585eoPDI",
        "number": 8694,
        "title": "Consolidates `black` in `pre-commit`",
        "user": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "jamesbraza",
            "id": 8990777,
            "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamesbraza",
            "html_url": "https://github.com/jamesbraza",
            "followers_url": "https://api.github.com/users/jamesbraza/followers",
            "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
            "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
            "repos_url": "https://api.github.com/users/jamesbraza/repos",
            "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "jamesbraza",
                "id": 8990777,
                "node_id": "MDQ6VXNlcjg5OTA3Nzc=",
                "avatar_url": "https://avatars.githubusercontent.com/u/8990777?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/jamesbraza",
                "html_url": "https://github.com/jamesbraza",
                "followers_url": "https://api.github.com/users/jamesbraza/followers",
                "following_url": "https://api.github.com/users/jamesbraza/following{/other_user}",
                "gists_url": "https://api.github.com/users/jamesbraza/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/jamesbraza/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/jamesbraza/subscriptions",
                "organizations_url": "https://api.github.com/users/jamesbraza/orgs",
                "repos_url": "https://api.github.com/users/jamesbraza/repos",
                "events_url": "https://api.github.com/users/jamesbraza/events{/privacy}",
                "received_events_url": "https://api.github.com/users/jamesbraza/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-05T23:04:58Z",
        "updated_at": "2023-11-06T02:41:41Z",
        "closed_at": "2023-11-06T02:41:40Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8694",
            "html_url": "https://github.com/run-llama/llama_index/pull/8694",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8694.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8694.patch",
            "merged_at": "2023-11-06T02:41:40Z"
        },
        "body": "# Description\r\n\r\n- Improves `make format` to run all `black` hooks using `alias`\r\n- Moves `blacken-docs` to use `--line-length` to match https://github.com/run-llama/llama_index/issues/8151\r\n- Filters `blacken-docs` so it doesn't overlap with other `black-jupyter` in `docs/` (see OP of https://github.com/run-llama/llama_index/issues/8262)\r\n- Uses `name` and comments to distinguish purpose of each hook\r\n- Groups `black` hook placement together in `.pre-commit-hooks.yaml` file\r\n\r\nRelates to: https://github.com/run-llama/llama_index/issues/8151, https://github.com/run-llama/llama_index/issues/8262\r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8694/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8694/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8693",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8693/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8693/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8693/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8693",
        "id": 1978011655,
        "node_id": "PR_kwDOIWuq585eoN__",
        "number": 8693,
        "title": "Initialize CLIP image and text Multi Modal embeddings",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-05T22:51:03Z",
        "updated_at": "2023-11-06T14:43:53Z",
        "closed_at": "2023-11-06T14:43:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8693",
            "html_url": "https://github.com/run-llama/llama_index/pull/8693",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8693.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8693.patch",
            "merged_at": "2023-11-06T14:43:52Z"
        },
        "body": "# Description\r\n\r\n1. Initialize Clip Embedding Class\r\n2. Change existing usage from MM retrieval to Clip embedding abstraction\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8693/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8693/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8692",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8692/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8692/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8692/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8692",
        "id": 1977998043,
        "node_id": "PR_kwDOIWuq585eoLXe",
        "number": 8692,
        "title": "use relative links in rst files",
        "user": {
            "login": "logan-markewich",
            "id": 22285038,
            "node_id": "MDQ6VXNlcjIyMjg1MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/22285038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/logan-markewich",
            "html_url": "https://github.com/logan-markewich",
            "followers_url": "https://api.github.com/users/logan-markewich/followers",
            "following_url": "https://api.github.com/users/logan-markewich/following{/other_user}",
            "gists_url": "https://api.github.com/users/logan-markewich/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/logan-markewich/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/logan-markewich/subscriptions",
            "organizations_url": "https://api.github.com/users/logan-markewich/orgs",
            "repos_url": "https://api.github.com/users/logan-markewich/repos",
            "events_url": "https://api.github.com/users/logan-markewich/events{/privacy}",
            "received_events_url": "https://api.github.com/users/logan-markewich/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-05T22:15:53Z",
        "updated_at": "2023-11-05T22:29:24Z",
        "closed_at": "2023-11-05T22:29:23Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8692",
            "html_url": "https://github.com/run-llama/llama_index/pull/8692",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8692.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8692.patch",
            "merged_at": "2023-11-05T22:29:23Z"
        },
        "body": "# Description\r\n\r\nSome docs links in `.rst` files were broken. Seems like you need to use relative paths instead of absolute.\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/8689\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8692/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8692/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8691",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8691/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8691/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8691/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8691",
        "id": 1977869369,
        "node_id": "PR_kwDOIWuq585enx5U",
        "number": 8691,
        "title": "[version] bump version to 0.8.61",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-05T16:49:39Z",
        "updated_at": "2023-11-05T18:05:52Z",
        "closed_at": "2023-11-05T18:05:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8691",
            "html_url": "https://github.com/run-llama/llama_index/pull/8691",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8691.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8691.patch",
            "merged_at": "2023-11-05T18:05:51Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8691/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8691/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8690",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8690/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8690/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8690/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8690",
        "id": 1977860800,
        "node_id": "PR_kwDOIWuq585enwQg",
        "number": 8690,
        "title": "MMR support",
        "user": {
            "login": "ofermend",
            "id": 1823547,
            "node_id": "MDQ6VXNlcjE4MjM1NDc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1823547?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ofermend",
            "html_url": "https://github.com/ofermend",
            "followers_url": "https://api.github.com/users/ofermend/followers",
            "following_url": "https://api.github.com/users/ofermend/following{/other_user}",
            "gists_url": "https://api.github.com/users/ofermend/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ofermend/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ofermend/subscriptions",
            "organizations_url": "https://api.github.com/users/ofermend/orgs",
            "repos_url": "https://api.github.com/users/ofermend/repos",
            "events_url": "https://api.github.com/users/ofermend/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ofermend/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-05T16:27:26Z",
        "updated_at": "2023-11-05T20:48:55Z",
        "closed_at": "2023-11-05T20:48:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8690",
            "html_url": "https://github.com/run-llama/llama_index/pull/8690",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8690.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8690.patch",
            "merged_at": "2023-11-05T20:48:55Z"
        },
        "body": "# Description\r\n\r\nAdded support for Vectara MMR (max marginal relevance) ranking. This occurs in the backend and is thus very fast too.\r\nAlso added the \"use_core_api\" optional (default False) argument for indexing. If True, we index text into Vectara without any chunking. This can be helpful if we want to maintain the source chunking from a LlamaIndex pre-processing module.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [X] New feature (non-breaking change which adds functionality)\r\n- [X] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [X] retested unit/integration tests\r\n- [X] updated notebook (that tests end-to-end)\r\n- [X] I stared at the code and made sure it makes sense\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8690/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8690/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8689",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8689/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8689/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8689/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8689",
        "id": 1977819986,
        "node_id": "I_kwDOIWuq58514yNS",
        "number": 8689,
        "title": "[Documentation]: Broken links on documentation page",
        "user": {
            "login": "analyticsinsights",
            "id": 117514870,
            "node_id": "U_kgDOBwEidg",
            "avatar_url": "https://avatars.githubusercontent.com/u/117514870?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/analyticsinsights",
            "html_url": "https://github.com/analyticsinsights",
            "followers_url": "https://api.github.com/users/analyticsinsights/followers",
            "following_url": "https://api.github.com/users/analyticsinsights/following{/other_user}",
            "gists_url": "https://api.github.com/users/analyticsinsights/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/analyticsinsights/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/analyticsinsights/subscriptions",
            "organizations_url": "https://api.github.com/users/analyticsinsights/orgs",
            "repos_url": "https://api.github.com/users/analyticsinsights/repos",
            "events_url": "https://api.github.com/users/analyticsinsights/events{/privacy}",
            "received_events_url": "https://api.github.com/users/analyticsinsights/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-05T14:47:28Z",
        "updated_at": "2023-11-05T22:29:24Z",
        "closed_at": "2023-11-05T22:29:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nThere are various broken links on [your documentation page](https://gpt-index.readthedocs.io/en/latest/getting_started/customization.html), including the ones below:\r\n\r\nhttps://gpt-index.readthedocs.io/module_guides/supporting_modules/service_context.html\r\nhttps://gpt-index.readthedocs.io/module_guides/storing/customization.html\r\n\n\n### Documentation Link\n\nhttps://gpt-index.readthedocs.io/en/latest/getting_started/customization.html",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8689/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8689/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8688",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8688/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8688/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8688/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8688",
        "id": 1977814251,
        "node_id": "I_kwDOIWuq58514wzr",
        "number": 8688,
        "title": "[Question]:  Query against structured data in datastore and Redis",
        "user": {
            "login": "tytung2020",
            "id": 37324680,
            "node_id": "MDQ6VXNlcjM3MzI0Njgw",
            "avatar_url": "https://avatars.githubusercontent.com/u/37324680?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tytung2020",
            "html_url": "https://github.com/tytung2020",
            "followers_url": "https://api.github.com/users/tytung2020/followers",
            "following_url": "https://api.github.com/users/tytung2020/following{/other_user}",
            "gists_url": "https://api.github.com/users/tytung2020/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tytung2020/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tytung2020/subscriptions",
            "organizations_url": "https://api.github.com/users/tytung2020/orgs",
            "repos_url": "https://api.github.com/users/tytung2020/repos",
            "events_url": "https://api.github.com/users/tytung2020/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tytung2020/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-05T14:32:24Z",
        "updated_at": "2023-11-05T22:17:34Z",
        "closed_at": "2023-11-05T22:17:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nMy database are in both sql and nosql databases (cloud datastore, Redis). Currently llamaindex can perform text to sql query, but how does it has the same functionality to query nosql databases?\r\nI see Redis has been incorporated into llamaindex, but only as a vector database for semantic search. Semantic search is great for long textual articles, but not accurate enough for database queries. So I cannot use this to query Redis databases.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8688/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8688/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8687",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8687/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8687/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8687/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8687",
        "id": 1977651820,
        "node_id": "PR_kwDOIWuq585enHqv",
        "number": 8687,
        "title": "[experimental] Hyperparameter tuner ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-05T06:20:03Z",
        "updated_at": "2023-11-05T16:47:28Z",
        "closed_at": "2023-11-05T16:47:28Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8687",
            "html_url": "https://github.com/run-llama/llama_index/pull/8687",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8687.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8687.patch",
            "merged_at": "2023-11-05T16:47:28Z"
        },
        "body": "Added hyperparameter abstractions to allow users to better tune hyperparams in their LLM apps . Three versions:\r\n- Sync\r\n- Async\r\n- Ray Tune \r\n\r\nHere we show an example of tuning chunk size and top-k. ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8687/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8687/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8686",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8686/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8686/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8686/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8686",
        "id": 1977566389,
        "node_id": "PR_kwDOIWuq585em3ZU",
        "number": 8686,
        "title": "feat: move `max_docs` parameter from constructor to `lazy_load_data`",
        "user": {
            "login": "david20571015",
            "id": 51911434,
            "node_id": "MDQ6VXNlcjUxOTExNDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/51911434?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/david20571015",
            "html_url": "https://github.com/david20571015",
            "followers_url": "https://api.github.com/users/david20571015/followers",
            "following_url": "https://api.github.com/users/david20571015/following{/other_user}",
            "gists_url": "https://api.github.com/users/david20571015/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/david20571015/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/david20571015/subscriptions",
            "organizations_url": "https://api.github.com/users/david20571015/orgs",
            "repos_url": "https://api.github.com/users/david20571015/repos",
            "events_url": "https://api.github.com/users/david20571015/events{/privacy}",
            "received_events_url": "https://api.github.com/users/david20571015/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-05T00:15:44Z",
        "updated_at": "2023-11-07T04:06:07Z",
        "closed_at": "2023-11-06T16:23:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8686",
            "html_url": "https://github.com/run-llama/llama_index/pull/8686",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8686.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8686.patch",
            "merged_at": "2023-11-06T16:23:50Z"
        },
        "body": "# Description\r\n\r\nThe usage of max_docs determines the number of data items to be fetched from the database. As such, I believe it should be used as a parameter for the lazy_load_data function.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [x] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8686/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8686/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8685",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8685/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8685/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8685/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8685",
        "id": 1977524840,
        "node_id": "I_kwDOIWuq58513qJo",
        "number": 8685,
        "title": "[Documentation]: Entity Extraction should use CUDA if available or at least surface the option ",
        "user": {
            "login": "nickknyc",
            "id": 1598572,
            "node_id": "MDQ6VXNlcjE1OTg1NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1598572?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickknyc",
            "html_url": "https://github.com/nickknyc",
            "followers_url": "https://api.github.com/users/nickknyc/followers",
            "following_url": "https://api.github.com/users/nickknyc/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickknyc/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickknyc/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickknyc/subscriptions",
            "organizations_url": "https://api.github.com/users/nickknyc/orgs",
            "repos_url": "https://api.github.com/users/nickknyc/repos",
            "events_url": "https://api.github.com/users/nickknyc/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickknyc/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-04T21:49:38Z",
        "updated_at": "2023-11-06T14:11:47Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nDuring my exploration of metadata extractors, particularly the line:\r\n\r\n```python\r\nEntityExtractor(prediction_threshold=0.5),\r\n```\r\n\r\nI initially discovered the necessity of installing `span_marker`. Post-installation, despite having a GPU, the extractor ran on CPU. This led me to the [span_marker docs](https://tomaarsen.github.io/SpanMarkerNER/), where the recommendation to move the model to CUDA for faster inference is stated:\r\n\r\n```python\r\n# It is recommended to explicitly move the model to CUDA for faster inference, if possible\r\nmodel.cuda()\r\n```\r\n\r\nSomewhere, possibly in LlamaIndexBot, I found that the `device` parameter is where GPU/CPU preference should be set. CoPilot then provided a succinct check:\r\n\r\n```python\r\nEntityExtractor(prediction_threshold=0.5, device=\"cuda\" if cuda_available else \"cpu\"),\r\n```\r\n\r\nI propose an explicit section in both the setup procedure and documentation to ensure a straightforward setup of CUDA when available.\r\n\n\n### Documentation Link\n\nhttps://docs.llamaindex.ai/en/stable/examples/metadata_extraction/MetadataExtractionSEC.html",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8685/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8685/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8684",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8684/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8684/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8684/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8684",
        "id": 1977474924,
        "node_id": "PR_kwDOIWuq585emlRC",
        "number": 8684,
        "title": "Fix typo error in CohereAIModelName class: cohere light models was missing v3",
        "user": {
            "login": "jalkestrup",
            "id": 17813449,
            "node_id": "MDQ6VXNlcjE3ODEzNDQ5",
            "avatar_url": "https://avatars.githubusercontent.com/u/17813449?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jalkestrup",
            "html_url": "https://github.com/jalkestrup",
            "followers_url": "https://api.github.com/users/jalkestrup/followers",
            "following_url": "https://api.github.com/users/jalkestrup/following{/other_user}",
            "gists_url": "https://api.github.com/users/jalkestrup/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jalkestrup/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jalkestrup/subscriptions",
            "organizations_url": "https://api.github.com/users/jalkestrup/orgs",
            "repos_url": "https://api.github.com/users/jalkestrup/repos",
            "events_url": "https://api.github.com/users/jalkestrup/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jalkestrup/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-04T19:19:05Z",
        "updated_at": "2023-11-05T00:49:06Z",
        "closed_at": "2023-11-05T00:49:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8684",
            "html_url": "https://github.com/run-llama/llama_index/pull/8684",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8684.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8684.patch",
            "merged_at": "2023-11-05T00:49:06Z"
        },
        "body": "# Description\r\n\r\nThe current cohere integration does not work with the embed-multilingual-light-v3.0 and embed-english-light-v3.0 because the models lacked the \"v\" in front of the model name within the CohereAIModelName class. Therefore calling the cohere embedding function yielded the following error \"CohereAPIError: model not found, make sure the correct model ID was used and that you have access to the model.\"\r\n\r\nFixes # (issue)\r\n\r\nChanged \r\n\r\nENGLISH_LIGHT_V3 = \"embed-english-light-3.0\"\r\nto \r\nENGLISH_LIGHT_V3 = \"embed-english-light-v3.0\"\r\n\r\nAnd\r\n\r\nMULTILINGUAL_LIGHT_V3 = \"embed-multilingual-light-3.0\"\r\nto\r\nMULTILINGUAL_LIGHT_V3 = \"embed-multilingual-light-v3.0\"\r\n\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ X ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ x ] Added new notebook (that tests end-to-end)\r\n\r\nAfter changing naming, the following code was run to verify the model name change:\r\n\r\n```python\r\nfrom llama_index.embeddings.cohereai import CohereEmbedding\r\n\r\n# with input_typ='search_query'\r\nembed_model = CohereEmbedding(\r\n    cohere_api_key=COHERE_API_KEY,\r\n    model_name=\"embed-english-light-v3.0\",\r\n    input_type=\"search_query\",\r\n)\r\n\r\nembeddings = embed_model.get_text_embedding(\"Hello CohereAI!\")\r\n\r\nprint(len(embeddings))\r\nprint(embeddings[:5])\r\n```\r\n\r\nAs well as\r\n\r\n```python\r\nfrom llama_index.embeddings.cohereai import CohereEmbedding\r\n\r\n# with input_typ='search_query'\r\nembed_model = CohereEmbedding(\r\n    cohere_api_key=COHERE_API_KEY,\r\n    model_name=\"embed-multilingual-light-v3.0\",\r\n    input_type=\"search_query\",\r\n)\r\n\r\nembeddings = embed_model.get_text_embedding(\"Hello CohereAI!\")\r\n\r\nprint(len(embeddings))\r\nprint(embeddings[:5])\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8684/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8684/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8683",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8683/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8683/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8683/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8683",
        "id": 1977461201,
        "node_id": "PR_kwDOIWuq585emilL",
        "number": 8683,
        "title": "Update deeplake.py",
        "user": {
            "login": "wenqiglantz",
            "id": 13189654,
            "node_id": "MDQ6VXNlcjEzMTg5NjU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/13189654?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wenqiglantz",
            "html_url": "https://github.com/wenqiglantz",
            "followers_url": "https://api.github.com/users/wenqiglantz/followers",
            "following_url": "https://api.github.com/users/wenqiglantz/following{/other_user}",
            "gists_url": "https://api.github.com/users/wenqiglantz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wenqiglantz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wenqiglantz/subscriptions",
            "organizations_url": "https://api.github.com/users/wenqiglantz/orgs",
            "repos_url": "https://api.github.com/users/wenqiglantz/repos",
            "events_url": "https://api.github.com/users/wenqiglantz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wenqiglantz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-04T18:36:33Z",
        "updated_at": "2023-11-04T20:41:44Z",
        "closed_at": "2023-11-04T20:41:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8683",
            "html_url": "https://github.com/run-llama/llama_index/pull/8683",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8683.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8683.patch",
            "merged_at": "2023-11-04T20:41:44Z"
        },
        "body": "# Description\r\n\r\nI am trying Deep Memory and noticed one issue, this block in deeplake.py is no longer valid:\r\n```\r\ntry:\r\n    from deeplake.core.vectorstore import VectorStore\r\n  \r\n    DEEPLAKE_INSTALLED = True\r\nexcept ImportError:\r\n    DEEPLAKE_INSTALLED = False\r\n```\r\n\r\nThe latest deeplake release has VectorStore under deeplake.core.vectorstore.deeplake_vectorstore, so that line in try block needs to be updated, otherwise, it keeps complaining import error even if we have deeplake installed.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ x ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ x ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8683/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8683/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8682",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8682/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8682/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8682/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8682",
        "id": 1977459354,
        "node_id": "PR_kwDOIWuq585emiOX",
        "number": 8682,
        "title": "Feature Request (#8262): adding\u00a0blacken-docs\u00a0to\u00a0pre-commit",
        "user": {
            "login": "aaronjimv",
            "id": 67152883,
            "node_id": "MDQ6VXNlcjY3MTUyODgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/67152883?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronjimv",
            "html_url": "https://github.com/aaronjimv",
            "followers_url": "https://api.github.com/users/aaronjimv/followers",
            "following_url": "https://api.github.com/users/aaronjimv/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronjimv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronjimv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronjimv/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronjimv/orgs",
            "repos_url": "https://api.github.com/users/aaronjimv/repos",
            "events_url": "https://api.github.com/users/aaronjimv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronjimv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-04T18:30:09Z",
        "updated_at": "2023-11-07T00:11:22Z",
        "closed_at": "2023-11-05T20:44:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8682",
            "html_url": "https://github.com/run-llama/llama_index/pull/8682",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8682.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8682.patch",
            "merged_at": "2023-11-05T20:44:35Z"
        },
        "body": "# Description\r\n\r\nThis PR includes the changes requested in [Feature Request]: adding\u00a0`blacken-docs`\u00a0to\u00a0`pre-commit`\u00a0#8262. \r\n\r\nI added `blacken-docs` to\u00a0 `.pre-commit-config.yaml` .\r\n\r\nAnd then run\u00a0`pre-commit run blacken-docs --all-files`\u00a0and many\u00a0`parse error`\u00a0was flagged. After checking one by one, most of them was typo or margin errors. Some of them were that\u00a0`blacken-docs`\u00a0flags as error something like:\r\n\r\n- \"!\" in\u00a0`!pip install something`\r\n- \"< >\" in\u00a0`name=<name>`\r\n\r\nAfter fixing all of them, I run\u00a0`pre-commit run blacken-docs --all-files`\u00a0and no error was flagged . Also\u00a0`pre-commit`\u00a0was ok.\r\n\r\nNow the documentations code is formatted by blacken-docs\r\n\r\nFixes #8262\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] My changes generate no new warnings",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8682/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8682/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8681",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8681/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8681/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8681/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8681",
        "id": 1977431009,
        "node_id": "PR_kwDOIWuq585emcug",
        "number": 8681,
        "title": "[version] bump version to 0.8.60",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-04T17:05:01Z",
        "updated_at": "2023-11-04T18:05:14Z",
        "closed_at": "2023-11-04T18:05:13Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8681",
            "html_url": "https://github.com/run-llama/llama_index/pull/8681",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8681.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8681.patch",
            "merged_at": "2023-11-04T18:05:13Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8681/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8681/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8680",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8680/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8680/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8680/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8680",
        "id": 1977414943,
        "node_id": "I_kwDOIWuq58513PUf",
        "number": 8680,
        "title": "[Question]: Make agents faster on processing query engine replies",
        "user": {
            "login": "ElioErrico",
            "id": 143315119,
            "node_id": "U_kgDOCIrQrw",
            "avatar_url": "https://avatars.githubusercontent.com/u/143315119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ElioErrico",
            "html_url": "https://github.com/ElioErrico",
            "followers_url": "https://api.github.com/users/ElioErrico/followers",
            "following_url": "https://api.github.com/users/ElioErrico/following{/other_user}",
            "gists_url": "https://api.github.com/users/ElioErrico/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ElioErrico/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ElioErrico/subscriptions",
            "organizations_url": "https://api.github.com/users/ElioErrico/orgs",
            "repos_url": "https://api.github.com/users/ElioErrico/repos",
            "events_url": "https://api.github.com/users/ElioErrico/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ElioErrico/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-04T16:16:44Z",
        "updated_at": "2023-11-06T09:32:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello everybody, do you have strategies to have the agents to process more quickly answers when context is coming from query engines?  The  answer of a query engine in my case can take also 25 seconds, I wonder if is like this for everybody, here a simple code example: \r\n\r\n```\r\nquery_engine_tool =QueryEngineTool(\r\n        query_engine=vector_query_engine,\r\n        metadata=ToolMetadata(\r\n            name=f\"{documento}_vector_tool\",\r\n            description=f\"use this tool when ... bla bla bla'\",\r\n            ))\r\n    \r\nllm = OpenAI(model=\"gpt-3.5-turbo-0613\",temperature=0)\r\n\r\nagent = OpenAIAgent.from_tools(\r\n    [query_engine_tool], llm=llm, verbose=True,\r\n    system_prompt=custom_system_prompt\r\n)\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8680/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8680/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8678",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8678/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8678/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8678/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8678",
        "id": 1977287583,
        "node_id": "I_kwDOIWuq58512wOf",
        "number": 8678,
        "title": "[Question]: generate related questions from the context in the generated response",
        "user": {
            "login": "ram510",
            "id": 2175155,
            "node_id": "MDQ6VXNlcjIxNzUxNTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2175155?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ram510",
            "html_url": "https://github.com/ram510",
            "followers_url": "https://api.github.com/users/ram510/followers",
            "following_url": "https://api.github.com/users/ram510/following{/other_user}",
            "gists_url": "https://api.github.com/users/ram510/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ram510/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ram510/subscriptions",
            "organizations_url": "https://api.github.com/users/ram510/orgs",
            "repos_url": "https://api.github.com/users/ram510/repos",
            "events_url": "https://api.github.com/users/ram510/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ram510/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-04T11:17:39Z",
        "updated_at": "2023-11-05T22:21:55Z",
        "closed_at": "2023-11-05T22:21:55Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nquery_str = \"here is the question?\"\r\nresponse = query_engine.query(query_str)\r\nprint(str(response))\r\n\r\nHow do I make use of the response or response metadata that is provided above and get N 'related questions' based on the response context, are there any inbuilt methods? This question generation should not search the vector store.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8678/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8678/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8677",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8677/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8677/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8677/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8677",
        "id": 1977266277,
        "node_id": "PR_kwDOIWuq585el7nT",
        "number": 8677,
        "title": "Fix google colab link in cohereai notebook",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-04T10:09:34Z",
        "updated_at": "2023-11-04T15:48:20Z",
        "closed_at": "2023-11-04T15:48:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8677",
            "html_url": "https://github.com/run-llama/llama_index/pull/8677",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8677.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8677.patch",
            "merged_at": "2023-11-04T15:48:19Z"
        },
        "body": "# Description\r\n\r\nPR to fix google colab link for cohereai embeddings notebook.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [x] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8677/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8677/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8676",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8676/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8676/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8676/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8676",
        "id": 1977264330,
        "node_id": "PR_kwDOIWuq585el7O3",
        "number": 8676,
        "title": "Fix google colab link",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-04T10:03:28Z",
        "updated_at": "2023-11-04T10:05:10Z",
        "closed_at": "2023-11-04T10:04:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8676",
            "html_url": "https://github.com/run-llama/llama_index/pull/8676",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8676.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8676.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nPR to fix google colab link for embeddings cohereai notebook\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8676/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8676/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8674",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8674/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8674/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8674/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8674",
        "id": 1977225508,
        "node_id": "PR_kwDOIWuq585elzbc",
        "number": 8674,
        "title": "emotion prompt guide",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-04T08:06:54Z",
        "updated_at": "2023-11-04T16:05:56Z",
        "closed_at": "2023-11-04T16:05:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8674",
            "html_url": "https://github.com/run-llama/llama_index/pull/8674",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8674.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8674.patch",
            "merged_at": "2023-11-04T16:05:55Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8674/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8674/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8673",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8673/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8673/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8673/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8673",
        "id": 1977191062,
        "node_id": "PR_kwDOIWuq585elsix",
        "number": 8673,
        "title": "Multilingual support for `YoutubeTranscriptReader`",
        "user": {
            "login": "HawkClaws",
            "id": 62013138,
            "node_id": "MDQ6VXNlcjYyMDEzMTM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/62013138?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HawkClaws",
            "html_url": "https://github.com/HawkClaws",
            "followers_url": "https://api.github.com/users/HawkClaws/followers",
            "following_url": "https://api.github.com/users/HawkClaws/following{/other_user}",
            "gists_url": "https://api.github.com/users/HawkClaws/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HawkClaws/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HawkClaws/subscriptions",
            "organizations_url": "https://api.github.com/users/HawkClaws/orgs",
            "repos_url": "https://api.github.com/users/HawkClaws/repos",
            "events_url": "https://api.github.com/users/HawkClaws/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HawkClaws/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-04T06:10:10Z",
        "updated_at": "2023-11-04T15:44:55Z",
        "closed_at": "2023-11-04T15:44:55Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8673",
            "html_url": "https://github.com/run-llama/llama_index/pull/8673",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8673.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8673.patch",
            "merged_at": "2023-11-04T15:44:55Z"
        },
        "body": "# Description\r\n\r\nAdded a constructor argument to `YoutubeTranscriptReader` to support multiple languages, since `YoutubeTranscriptReader` supports only `en` by default.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8673/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8673/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8672",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8672/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8672/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8672/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8672",
        "id": 1977132155,
        "node_id": "PR_kwDOIWuq585elgfR",
        "number": 8672,
        "title": "passing max_tokens to the `Cohere` llm",
        "user": {
            "login": "nabsabraham",
            "id": 36169471,
            "node_id": "MDQ6VXNlcjM2MTY5NDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/36169471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nabsabraham",
            "html_url": "https://github.com/nabsabraham",
            "followers_url": "https://api.github.com/users/nabsabraham/followers",
            "following_url": "https://api.github.com/users/nabsabraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/nabsabraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nabsabraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nabsabraham/subscriptions",
            "organizations_url": "https://api.github.com/users/nabsabraham/orgs",
            "repos_url": "https://api.github.com/users/nabsabraham/repos",
            "events_url": "https://api.github.com/users/nabsabraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nabsabraham/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5870194649,
                "node_id": "LA_kwDOIWuq588AAAABXeQP2Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/llm",
                "name": "llm",
                "color": "799557",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-04T02:52:11Z",
        "updated_at": "2023-11-04T16:02:30Z",
        "closed_at": "2023-11-04T15:56:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8672",
            "html_url": "https://github.com/run-llama/llama_index/pull/8672",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8672.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8672.patch",
            "merged_at": "2023-11-04T15:56:47Z"
        },
        "body": "# Description\r\n\r\nThe `Cohere` llm did not have `max_tokens` defined and did not pass the `max_tokens` param from the client instantiation to the constructor. This PR adds it to the constructor init. \r\n\r\nFixes # https://github.com/run-llama/llama_index/issues/8671 \r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code/made the bug fix and don't have the `AttributeError` anymore \r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8672/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8672/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8671",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8671/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8671/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8671/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8671",
        "id": 1977131475,
        "node_id": "I_kwDOIWuq58512KHT",
        "number": 8671,
        "title": "[Bug]: AttributeError: 'Cohere' object has no attribute 'max_tokens'",
        "user": {
            "login": "nabsabraham",
            "id": 36169471,
            "node_id": "MDQ6VXNlcjM2MTY5NDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/36169471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nabsabraham",
            "html_url": "https://github.com/nabsabraham",
            "followers_url": "https://api.github.com/users/nabsabraham/followers",
            "following_url": "https://api.github.com/users/nabsabraham/following{/other_user}",
            "gists_url": "https://api.github.com/users/nabsabraham/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nabsabraham/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nabsabraham/subscriptions",
            "organizations_url": "https://api.github.com/users/nabsabraham/orgs",
            "repos_url": "https://api.github.com/users/nabsabraham/repos",
            "events_url": "https://api.github.com/users/nabsabraham/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nabsabraham/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-04T02:49:50Z",
        "updated_at": "2023-11-04T16:57:47Z",
        "closed_at": "2023-11-04T16:57:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nCohere LLM does not pass the client's `max_tokens` param to the constructor. See this line [here](https://github.com/run-llama/llama_index/blob/7cab90f9fb14a7727225c5ca6cadafd9bf2c2f54/llama_index/llms/cohere.py#L84).\r\n\r\n```python\r\nfrom llama_index.llms.cohere import Cohere\r\n>>> llm = Cohere(api_key=\"\", model='command', temperature=0, max_tokens=2000)\r\n>>> print(llm.max_tokens)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\nAttributeError: 'Cohere' object has no attribute 'max_tokens'\r\n```\n\n### Version\n\n0.8.59\n\n### Steps to Reproduce\n\nFound error when trying to use Cohere llm in llama_index: \r\n```python\r\nfrom llama_index import ServiceContext\r\n\r\nllm = Cohere(api_key=os.environ['COHERE_API_KEY'], model=model,temperature=0, max_tokens=256)\r\nservice_context = ServiceContext.from_defaults(embed_model=embed_model, llm=llm)\r\n----> 1 service_context = ServiceContext.from_defaults(embed_model=embed_model, llm=llm))\r\n\r\n\r\n--> 172     llm_metadata=llm_predictor.metadata,\r\n    173     context_window=context_window,\r\n    174     num_output=num_output,\r\n    175 )\r\n    177 node_parser = node_parser or _get_default_node_parser(\r\n    178     chunk_size=chunk_size,\r\n    179     chunk_overlap=chunk_overlap,\r\n    180     callback_manager=callback_manager,\r\n    181 )\r\n    183 llama_logger = llama_logger or LlamaLogger()\r\n...\r\n     85         is_chat_model=True,\r\n     86         model_name=self.model,\r\n     87     )\r\n\r\nAttributeError: 'Cohere' object has no attribute 'max_tokens'\r\n```\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8671/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8671/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8670",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8670/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8670/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8670/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8670",
        "id": 1977117740,
        "node_id": "I_kwDOIWuq58512Gws",
        "number": 8670,
        "title": "[Feature Request]: Callback Events for Refine output_cls pydantic invocations",
        "user": {
            "login": "mikeldking",
            "id": 5640648,
            "node_id": "MDQ6VXNlcjU2NDA2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5640648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeldking",
            "html_url": "https://github.com/mikeldking",
            "followers_url": "https://api.github.com/users/mikeldking/followers",
            "following_url": "https://api.github.com/users/mikeldking/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeldking/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeldking/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeldking/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeldking/orgs",
            "repos_url": "https://api.github.com/users/mikeldking/repos",
            "events_url": "https://api.github.com/users/mikeldking/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeldking/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-04T02:09:39Z",
        "updated_at": "2023-11-09T03:21:46Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nWhen using `output_cls` with `Refine`, you don't get TOOL like events in the callbacks that describe the pydantic schema. If you attach the `llama_index.callbacks.LLamaDebug` as callback, you can see that the pydantic invocation to parse the arguments is missing  in the span tree\r\n```\r\n**********\r\nTrace: query\r\n    |_query ->  1.749029 seconds\r\n      |_retrieve ->  7.1e-05 seconds\r\n      |_synthesize ->  1.74883 seconds\r\n        |_templating ->  1.2e-05 seconds\r\n        |_llm ->  1.745828 seconds\r\n**********\r\n```\r\nIt would be nice to be able to get a bit more visibility into the tool like behavior since function calls are being leveraged.\n\n### Reason\n\nGot a feature request for visibility into the invocation of pydantic here: https://github.com/Arize-ai/phoenix/issues/1700#issuecomment-1792219834\n\n### Value of Feature\n\nBetter visibility into the pydamtic model being advertised to the model and visibility into the pydantic model used",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8670/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8670/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8669",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8669/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8669/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8669/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8669",
        "id": 1977089463,
        "node_id": "PR_kwDOIWuq585elXfn",
        "number": 8669,
        "title": "refactor llamahub download",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-04T01:00:50Z",
        "updated_at": "2023-12-04T03:24:27Z",
        "closed_at": "2023-11-06T05:44:17Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8669",
            "html_url": "https://github.com/run-llama/llama_index/pull/8669",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8669.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8669.patch",
            "merged_at": "2023-11-06T05:44:17Z"
        },
        "body": "refactor llama-hub downloads into a set of shared modules\r\n\r\nnow we can load both readers and tools very easily (as well as any future modules) ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8669/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8669/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8668",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8668/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8668/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8668/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8668",
        "id": 1977053523,
        "node_id": "PR_kwDOIWuq585elP4k",
        "number": 8668,
        "title": "Fix nltk bug in multi-threaded environments",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-03T23:41:40Z",
        "updated_at": "2023-11-03T23:45:28Z",
        "closed_at": "2023-11-03T23:45:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8668",
            "html_url": "https://github.com/run-llama/llama_index/pull/8668",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8668.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8668.patch",
            "merged_at": "2023-11-03T23:45:27Z"
        },
        "body": "# Description\r\n\r\nIn multi-threaded environments, there is a bug where nltk tries to download data files when it's missing, but fails due to a race condition where another thread already completed the download. In this case, we can just ignore the exception.  ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8668/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8668/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8667",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8667/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8667/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8667/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8667",
        "id": 1977020011,
        "node_id": "PR_kwDOIWuq585elIvg",
        "number": 8667,
        "title": "fix: azure ad support",
        "user": {
            "login": "santiagxf",
            "id": 32112894,
            "node_id": "MDQ6VXNlcjMyMTEyODk0",
            "avatar_url": "https://avatars.githubusercontent.com/u/32112894?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/santiagxf",
            "html_url": "https://github.com/santiagxf",
            "followers_url": "https://api.github.com/users/santiagxf/followers",
            "following_url": "https://api.github.com/users/santiagxf/following{/other_user}",
            "gists_url": "https://api.github.com/users/santiagxf/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/santiagxf/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/santiagxf/subscriptions",
            "organizations_url": "https://api.github.com/users/santiagxf/orgs",
            "repos_url": "https://api.github.com/users/santiagxf/repos",
            "events_url": "https://api.github.com/users/santiagxf/events{/privacy}",
            "received_events_url": "https://api.github.com/users/santiagxf/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-03T22:44:48Z",
        "updated_at": "2023-11-03T23:02:19Z",
        "closed_at": "2023-11-03T23:02:19Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8667",
            "html_url": "https://github.com/run-llama/llama_index/pull/8667",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8667.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8667.patch",
            "merged_at": "2023-11-03T23:02:19Z"
        },
        "body": "# Description\r\n\r\nAzure OpenAI LLMs support Microsoft Entra ID (formerly known as Azure Active Directory) tokens to use for authorization instead of relying on keys. This authentication is supported in in LlamaIndex, however, those tokens need to be refreshed since they have a TTL. If not, changes are that authentication errors occur because token is not refreshed.\r\n\r\nThis PR fixes the support for it.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8667/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8667/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8666",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8666/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8666/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8666/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8666",
        "id": 1976962470,
        "node_id": "PR_kwDOIWuq585ek8V3",
        "number": 8666,
        "title": "pack base class",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-03T21:37:46Z",
        "updated_at": "2023-11-03T22:35:52Z",
        "closed_at": "2023-11-03T22:35:52Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8666",
            "html_url": "https://github.com/run-llama/llama_index/pull/8666",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8666.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8666.patch",
            "merged_at": "2023-11-03T22:35:52Z"
        },
        "body": "generic interface for a pack",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8666/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8666/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8665",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8665/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8665/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8665/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8665",
        "id": 1976938669,
        "node_id": "PR_kwDOIWuq585ek3Ts",
        "number": 8665,
        "title": "Hkh/integrate azurecosmosdb",
        "user": {
            "login": "HosseinHeris",
            "id": 47231097,
            "node_id": "MDQ6VXNlcjQ3MjMxMDk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/47231097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HosseinHeris",
            "html_url": "https://github.com/HosseinHeris",
            "followers_url": "https://api.github.com/users/HosseinHeris/followers",
            "following_url": "https://api.github.com/users/HosseinHeris/following{/other_user}",
            "gists_url": "https://api.github.com/users/HosseinHeris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HosseinHeris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HosseinHeris/subscriptions",
            "organizations_url": "https://api.github.com/users/HosseinHeris/orgs",
            "repos_url": "https://api.github.com/users/HosseinHeris/repos",
            "events_url": "https://api.github.com/users/HosseinHeris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HosseinHeris/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "HosseinHeris",
            "id": 47231097,
            "node_id": "MDQ6VXNlcjQ3MjMxMDk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/47231097?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HosseinHeris",
            "html_url": "https://github.com/HosseinHeris",
            "followers_url": "https://api.github.com/users/HosseinHeris/followers",
            "following_url": "https://api.github.com/users/HosseinHeris/following{/other_user}",
            "gists_url": "https://api.github.com/users/HosseinHeris/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HosseinHeris/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HosseinHeris/subscriptions",
            "organizations_url": "https://api.github.com/users/HosseinHeris/orgs",
            "repos_url": "https://api.github.com/users/HosseinHeris/repos",
            "events_url": "https://api.github.com/users/HosseinHeris/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HosseinHeris/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "HosseinHeris",
                "id": 47231097,
                "node_id": "MDQ6VXNlcjQ3MjMxMDk3",
                "avatar_url": "https://avatars.githubusercontent.com/u/47231097?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/HosseinHeris",
                "html_url": "https://github.com/HosseinHeris",
                "followers_url": "https://api.github.com/users/HosseinHeris/followers",
                "following_url": "https://api.github.com/users/HosseinHeris/following{/other_user}",
                "gists_url": "https://api.github.com/users/HosseinHeris/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/HosseinHeris/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/HosseinHeris/subscriptions",
                "organizations_url": "https://api.github.com/users/HosseinHeris/orgs",
                "repos_url": "https://api.github.com/users/HosseinHeris/repos",
                "events_url": "https://api.github.com/users/HosseinHeris/events{/privacy}",
                "received_events_url": "https://api.github.com/users/HosseinHeris/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-03T21:12:38Z",
        "updated_at": "2023-11-06T06:03:12Z",
        "closed_at": "2023-11-06T06:03:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8665",
            "html_url": "https://github.com/run-llama/llama_index/pull/8665",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8665.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8665.patch",
            "merged_at": "2023-11-06T06:03:12Z"
        },
        "body": "# Description\r\n\r\nAdded azure cosmosdb mongodb vcore to the vector stores . Additionally I updated the doc and added a jupyter notebook. \r\nThe colab \r\n\r\n## Type of Change\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\nAll you need to do to is to have an azure cosmodb mongodb uri. I've tested the connection and run the tests. I also run the end2end google colab. \r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] I have added Google Colab support for the newly added notebooks. : Note: **originally I had the link for google colab to the forked branch but at the moment I have referenced the main. I will add the github authorization again once it is merged. If you have very specific instructions, please send to me.**\r\n- [x] My changes generate no new warnings\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8665/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8665/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8664",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8664/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8664/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8664/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8664",
        "id": 1976917820,
        "node_id": "I_kwDOIWuq58511V88",
        "number": 8664,
        "title": "[Documentation]: Zephyr-7b-beta seems tested on 4-bit where there is 5-bit version possible",
        "user": {
            "login": "gorkemgoknar",
            "id": 4275913,
            "node_id": "MDQ6VXNlcjQyNzU5MTM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4275913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gorkemgoknar",
            "html_url": "https://github.com/gorkemgoknar",
            "followers_url": "https://api.github.com/users/gorkemgoknar/followers",
            "following_url": "https://api.github.com/users/gorkemgoknar/following{/other_user}",
            "gists_url": "https://api.github.com/users/gorkemgoknar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gorkemgoknar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gorkemgoknar/subscriptions",
            "organizations_url": "https://api.github.com/users/gorkemgoknar/orgs",
            "repos_url": "https://api.github.com/users/gorkemgoknar/repos",
            "events_url": "https://api.github.com/users/gorkemgoknar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gorkemgoknar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-03T20:54:43Z",
        "updated_at": "2023-11-05T22:25:06Z",
        "closed_at": "2023-11-05T22:25:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\r\n\r\nFound post on linkedin about evalution about Zephyr-7b-beta.\r\nhttps://docs.llamaindex.ai/en/latest/module_guides/models/llms.html#open-source-llms\r\n\r\nI saw that 4 bit quantization was used , and given I know there are 5 bit quantized version there (which we use on https://huggingface.co/spaces/coqui/voice-chat-with-zephyr  already, ) so I tested LlamaIndex Zephyr colab with 5-bit GGUF version.\r\n\r\nHere is result notebook , hoping someone will validate results, as I am not sure when you set a test pass or fail\r\n\r\nhttps://colab.research.google.com/drive/1ULelRgpKbCNIJwdP1vBvZtA7yTTHRwzK?usp=sharing\r\n\r\n**Quick edit here in case notebook fails to load:**\r\n\r\nGGUF version can be run on CUDA with following (zephyr-beta 5bit uses ~8Gb memory total), everything else on test same just llm replaced. Note that sometimes there are json parser errors and rarely produced prompt passes 3600 tokens , but I does rerun and pass.\r\nNote that I did not change prompt, that is why there may be new lines on Q/A , but I guess we are checking final response only.\r\n```\r\n\r\n# need to install llama-cpp-python with cublas to make affective GPU usage\r\n#!CMAKE_ARGS=\"-DLLAMA_CUBLAS=on\" pip install llama-cpp-python\r\n\r\nfrom llama_index.llms import LlamaCPP\r\nfrom llama_index.llms.llama_utils import completion_to_prompt\r\n\r\n\r\nllm = LlamaCPP(\r\n    model_url=\"https://huggingface.co/TheBloke/zephyr-7B-beta-GGUF/resolve/main/zephyr-7b-beta.Q5_K_M.gguf\",\r\n    \r\n    # optionally, you can set the path to a pre-downloaded model instead of model_url\r\n    # first download will download into /tmp/llama_index/models/zephyr-7b-beta.Q5_K_M.gguf on colab\r\n    model_path=None,\r\n    \r\n    temperature = 0.7, # set same as on original test\r\n    \r\n    max_new_tokens=256, # set same as on original test\r\n    \r\n    # llama2 has a context window of 4096 tokens, but we set it lower to allow for some wiggle room\r\n    context_window=3900,  # note, this sets n_ctx in the model_kwargs below, so you don't need to pass it there.\r\n    \r\n    # kwargs to pass to __call__()\r\n    generate_kwargs={\"top_k\":50, \"top_p\" : 0.95}, # set same as on original test\r\n     \r\n    # kwargs to pass to __init__()\r\n    # set to at least 1 to use GPU  (depends on model for LLama base usually 35 total)\r\n    model_kwargs={\"n_gpu_layers\": 35}, # 35 is full GPU, set 10-15 if you have lower VRAM , make sure llama_cpp compiled with cublas for better GPU speed\r\n    \r\n    # transform inputs into Llama2 format\r\n    messages_to_prompt=messages_to_prompt, # this is overriden above\r\n    #completion_to_prompt=completion_to_prompt, # imported via llama_utils\r\n    verbose=True, # must be set True to use on llama_index\r\n)\r\n```\r\n\r\n### Documentation Link\r\n\r\nhttps://docs.llamaindex.ai/en/latest/module_guides/models/llms.html#open-source-llms",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8664/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8664/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8663",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8663/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8663/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8663/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8663",
        "id": 1976769059,
        "node_id": "PR_kwDOIWuq585ekTH4",
        "number": 8663,
        "title": "Fixing typo error in docs/",
        "user": {
            "login": "aaronjimv",
            "id": 67152883,
            "node_id": "MDQ6VXNlcjY3MTUyODgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/67152883?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronjimv",
            "html_url": "https://github.com/aaronjimv",
            "followers_url": "https://api.github.com/users/aaronjimv/followers",
            "following_url": "https://api.github.com/users/aaronjimv/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronjimv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronjimv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronjimv/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronjimv/orgs",
            "repos_url": "https://api.github.com/users/aaronjimv/repos",
            "events_url": "https://api.github.com/users/aaronjimv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronjimv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-03T18:40:35Z",
        "updated_at": "2023-11-04T00:24:57Z",
        "closed_at": "2023-11-03T22:46:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8663",
            "html_url": "https://github.com/run-llama/llama_index/pull/8663",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8663.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8663.patch",
            "merged_at": "2023-11-03T22:46:50Z"
        },
        "body": "# Description\r\n\r\nThis PR fixing a some typos errors in code documentations. Like:\r\n\r\n- Adding missing ',' in vector_stores.md\r\n- Deleted extra '...' in fullstack_app_guide.md\r\n- Fixing except margin in fullstack_with_delphic.md\r\n- Adding missing \u2018)\u2019 in fullstack_with_delphic.md\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] My changes generate no new warnings\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8663/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8663/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8662",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8662/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8662/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8662/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8662",
        "id": 1976214247,
        "node_id": "I_kwDOIWuq5851yqLn",
        "number": 8662,
        "title": "[Question]: Download and Setup",
        "user": {
            "login": "4entertainment",
            "id": 58992739,
            "node_id": "MDQ6VXNlcjU4OTkyNzM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58992739?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/4entertainment",
            "html_url": "https://github.com/4entertainment",
            "followers_url": "https://api.github.com/users/4entertainment/followers",
            "following_url": "https://api.github.com/users/4entertainment/following{/other_user}",
            "gists_url": "https://api.github.com/users/4entertainment/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/4entertainment/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/4entertainment/subscriptions",
            "organizations_url": "https://api.github.com/users/4entertainment/orgs",
            "repos_url": "https://api.github.com/users/4entertainment/repos",
            "events_url": "https://api.github.com/users/4entertainment/events{/privacy}",
            "received_events_url": "https://api.github.com/users/4entertainment/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-03T13:32:00Z",
        "updated_at": "2023-11-05T22:26:08Z",
        "closed_at": "2023-11-05T22:26:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi! Please help me about my following problem.\r\n\r\nI want to download and setup llama_index to my personal computer locally. Then i should run a simple task with llama-index. My computer is ready. Can you please write in detail step by step what I should do? ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8662/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8662/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8661",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8661/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8661/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8661/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8661",
        "id": 1976204844,
        "node_id": "I_kwDOIWuq5851yn4s",
        "number": 8661,
        "title": "[Question]: Retrieval with LlamaIndex",
        "user": {
            "login": "4entertainment",
            "id": 58992739,
            "node_id": "MDQ6VXNlcjU4OTkyNzM5",
            "avatar_url": "https://avatars.githubusercontent.com/u/58992739?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/4entertainment",
            "html_url": "https://github.com/4entertainment",
            "followers_url": "https://api.github.com/users/4entertainment/followers",
            "following_url": "https://api.github.com/users/4entertainment/following{/other_user}",
            "gists_url": "https://api.github.com/users/4entertainment/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/4entertainment/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/4entertainment/subscriptions",
            "organizations_url": "https://api.github.com/users/4entertainment/orgs",
            "repos_url": "https://api.github.com/users/4entertainment/repos",
            "events_url": "https://api.github.com/users/4entertainment/events{/privacy}",
            "received_events_url": "https://api.github.com/users/4entertainment/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 7,
        "created_at": "2023-11-03T13:26:35Z",
        "updated_at": "2023-11-07T13:54:53Z",
        "closed_at": "2023-11-05T22:28:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi. I want to read data. And answer my questions about data with retrieval architecture. I want to do this with llama-index techs.\r\nWithin the scope of this task:\r\n\r\n--- Any model should not be used. \r\n--- Only vector store and retrieval mechanisms should be used.\r\n\r\nCan you give me code for this task?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8661/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8661/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8660",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8660/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8660/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8660/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8660",
        "id": 1975995594,
        "node_id": "PR_kwDOIWuq585ehrzY",
        "number": 8660,
        "title": "chore: typo",
        "user": {
            "login": "revolunet",
            "id": 124937,
            "node_id": "MDQ6VXNlcjEyNDkzNw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/124937?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/revolunet",
            "html_url": "https://github.com/revolunet",
            "followers_url": "https://api.github.com/users/revolunet/followers",
            "following_url": "https://api.github.com/users/revolunet/following{/other_user}",
            "gists_url": "https://api.github.com/users/revolunet/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/revolunet/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/revolunet/subscriptions",
            "organizations_url": "https://api.github.com/users/revolunet/orgs",
            "repos_url": "https://api.github.com/users/revolunet/repos",
            "events_url": "https://api.github.com/users/revolunet/events{/privacy}",
            "received_events_url": "https://api.github.com/users/revolunet/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-03T11:36:18Z",
        "updated_at": "2023-11-03T22:44:51Z",
        "closed_at": "2023-11-03T22:44:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8660",
            "html_url": "https://github.com/run-llama/llama_index/pull/8660",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8660.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8660.patch",
            "merged_at": "2023-11-03T22:44:51Z"
        },
        "body": "Just a typofix in the chat context engine",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8660/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8660/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8659",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8659/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8659/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8659/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8659",
        "id": 1975582305,
        "node_id": "PR_kwDOIWuq585egRby",
        "number": 8659,
        "title": "prompt optimization guide",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-03T07:22:23Z",
        "updated_at": "2023-11-03T18:26:42Z",
        "closed_at": "2023-11-03T18:26:41Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8659",
            "html_url": "https://github.com/run-llama/llama_index/pull/8659",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8659.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8659.patch",
            "merged_at": "2023-11-03T18:26:41Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8659/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8659/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8658",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8658/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8658/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8658/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8658",
        "id": 1975410456,
        "node_id": "I_kwDOIWuq5851vl8Y",
        "number": 8658,
        "title": "[Question]: llm and embed_model in service_context for index",
        "user": {
            "login": "Phil-U-U",
            "id": 13722942,
            "node_id": "MDQ6VXNlcjEzNzIyOTQy",
            "avatar_url": "https://avatars.githubusercontent.com/u/13722942?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Phil-U-U",
            "html_url": "https://github.com/Phil-U-U",
            "followers_url": "https://api.github.com/users/Phil-U-U/followers",
            "following_url": "https://api.github.com/users/Phil-U-U/following{/other_user}",
            "gists_url": "https://api.github.com/users/Phil-U-U/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Phil-U-U/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Phil-U-U/subscriptions",
            "organizations_url": "https://api.github.com/users/Phil-U-U/orgs",
            "repos_url": "https://api.github.com/users/Phil-U-U/repos",
            "events_url": "https://api.github.com/users/Phil-U-U/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Phil-U-U/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-03T03:44:41Z",
        "updated_at": "2023-11-05T22:14:02Z",
        "closed_at": "2023-11-05T22:14:02Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nWhen the index is configured by service_context which specifies both llm and embed_model:\r\n\r\n0. Do we need both llm and embed_model for indexing?\r\n1. Is embed_model necessary for indexing?\r\n2. If No. 1 is true, how does embed_model work together with llm?\r\n\r\nFeel free to comment with the relevant code. \r\n\r\nThank you in advance!",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8658/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8658/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8657",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8657/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8657/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8657/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8657",
        "id": 1975404866,
        "node_id": "I_kwDOIWuq5851vklC",
        "number": 8657,
        "title": "[Bug]: Global CallbackManger via one_click not propagated to RetrieverQueryEngine",
        "user": {
            "login": "mikeldking",
            "id": 5640648,
            "node_id": "MDQ6VXNlcjU2NDA2NDg=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5640648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mikeldking",
            "html_url": "https://github.com/mikeldking",
            "followers_url": "https://api.github.com/users/mikeldking/followers",
            "following_url": "https://api.github.com/users/mikeldking/following{/other_user}",
            "gists_url": "https://api.github.com/users/mikeldking/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mikeldking/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mikeldking/subscriptions",
            "organizations_url": "https://api.github.com/users/mikeldking/orgs",
            "repos_url": "https://api.github.com/users/mikeldking/repos",
            "events_url": "https://api.github.com/users/mikeldking/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mikeldking/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-03T03:36:46Z",
        "updated_at": "2023-11-07T15:50:53Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nReporting on behalf of a user of llama_index and arize-phoenix.\r\n\r\nThey were reporting that the LLM steps for a custom query engine was not producing traces in phoenix. Their example was as follows\r\n\r\n```python\r\nmport phoenix as px\r\nimport llama_index\r\nfrom pydantic import BaseModel, Field\r\nfrom llama_index.callbacks import CallbackManager\r\nfrom llama_index.llms import OpenAI\r\nfrom llama_index.query_engine import RetrieverQueryEngine \r\nfrom llama_index.indices.list import SummaryIndexRetriever\r\nfrom llama_index.response_synthesizers import CompactAndRefine\r\nfrom llama_index import Document, SummaryIndex, ServiceContext\r\nfrom phoenix.trace.llama_index import (\r\n    OpenInferenceTraceCallbackHandler,\r\n)\r\n\r\nsession = px.active_session()\r\nif session is None:\r\n    session = px.launch_app()\r\nllama_index.set_global_handler(\"arize_phoenix\")\r\n\r\n# Initialize the callback handler\r\n# NOTE: this doesn't work with the global handler nor with the explicit callback manager\r\n# callback_handler = OpenInferenceTraceCallbackHandler()\r\n\r\nservice_ctx = ServiceContext.from_defaults(\r\n    llm=(\r\n        OpenAI(\r\n            model=\"gpt-3.5-turbo-16k\",\r\n            max_retries=10\r\n        )\r\n    ),\r\n    # callback_manager=CallbackManager(handlers=[callback_handler]),\r\n)\r\n\r\nclass Person(BaseModel):\r\n    \"\"\"A class representing a person mentioned in the text\"\"\"\r\n    name: str = Field(description=\"The person's name\")\r\n    age: int | None = Field(description=\"The person's age\")\r\n\r\nclass People(BaseModel):\r\n    \"\"\"A class representing a collection of unique individuals\"\"\"\r\n    people: list[Person] = Field(\r\n        description=\"A list of all unique people mentioned in a text.\"\r\n    )\r\n    \r\nfrom textwrap import dedent\r\n\r\ndoc = Document(\r\n    text=dedent(\r\n        \"\"\"\r\n        Bobby Shaftoe was only 16 when he went to sea as a deckhand. \\\r\n        He fell victim to the scurvy after just 2 months. \\\r\n        Unfazed, Captain Jack discharged his duties with extreme prejudice. \\\r\n        \"\"\"\r\n    )\r\n)\r\n\r\nresponse_synth = CompactAndRefine(\r\n    service_context=service_ctx,\r\n    output_cls=People,\r\n)\r\n\r\nquery_eng = RetrieverQueryEngine(\r\n    retriever=SummaryIndexRetriever(index=SummaryIndex.from_documents([doc])),\r\n    response_synthesizer=response_synth\r\n)\r\n\r\nquery_eng.query(\"Who is mentioned in this contrived, minimal 'story'?\")\r\n\r\ndf = session.get_spans_dataframe()\r\n```\r\nNote that they are using the global callback setup. When spans are exported via this process the trace is not properly stitched together and the LLM spans are missing.\r\n\r\nHowever if you manually add the same callback manager, the traces show up correctly.\r\n\r\n```python\r\nimport llama_index\r\nimport phoenix as px\r\nfrom llama_index import Document, ServiceContext, SummaryIndex\r\nfrom llama_index.callbacks import CallbackManager\r\nfrom llama_index.indices.list import SummaryIndexRetriever\r\nfrom llama_index.llms import OpenAI\r\nfrom llama_index.query_engine import RetrieverQueryEngine\r\nfrom llama_index.response_synthesizers import CompactAndRefine\r\nfrom phoenix.trace.llama_index import (\r\n    OpenInferenceTraceCallbackHandler,\r\n)\r\nfrom pydantic import BaseModel, Field\r\n\r\nsession = px.launch_app()\r\n\r\ncallback_handler = OpenInferenceTraceCallbackHandler()\r\ncb_manager = CallbackManager(handlers=[callback_handler])\r\n\r\nservice_ctx = ServiceContext.from_defaults(\r\n    llm=(OpenAI(model=\"gpt-3.5-turbo-16k\", max_retries=10, callback_manager=cb_manager)),\r\n    callback_manager=cb_manager,\r\n)\r\n\r\n\r\nclass Person(BaseModel):\r\n    \"\"\"A class representing a person mentioned in the text\"\"\"\r\n\r\n    name: str = Field(description=\"The person's name\")\r\n    age: int | None = Field(description=\"The person's age\")\r\n\r\n\r\nclass People(BaseModel):\r\n    \"\"\"A class representing a collection of unique individuals\"\"\"\r\n\r\n    people: list[Person] = Field(description=\"A list of all unique people mentioned in a text.\")\r\n\r\n\r\nfrom textwrap import dedent\r\n\r\ndoc = Document(\r\n    text=dedent(\r\n        \"\"\"\r\n        Bobby Shaftoe was only 16 when he went to sea as a deckhand. \\\r\n        He fell victim to the scurvy after just 2 months. \\\r\n        Unfazed, Captain Jack discharged his duties with extreme prejudice. \\\r\n        \"\"\"\r\n    )\r\n)\r\n\r\nresponse_synth = CompactAndRefine(\r\n    service_context=service_ctx,\r\n)\r\n\r\nquery_eng = RetrieverQueryEngine(\r\n    retriever=SummaryIndexRetriever(index=SummaryIndex.from_documents([doc])),\r\n    response_synthesizer=response_synth,\r\n    callback_manager=cb_manager,\r\n)\r\n\r\nquery_eng.query(\"Who is mentioned in this contrived, minimal 'story'?\")\r\n\r\ndf = session.get_spans_dataframe()\r\n```\r\n\r\nIt seems as though the callback manager in the RefineQueryEngine should default to the global one if none is provided: https://github.com/run-llama/llama_index/blob/56b54359b1e6584ae88fd75d2b5e75d44a13b03d/llama_index/query_engine/retriever_query_engine.py#L46\r\n\r\nLet me know if this makes sense. I can put up a PR \r\n\r\n\r\n### Version\r\n\r\n0.8.59\r\n\r\n### Steps to Reproduce\r\n\r\nRun the following in a notebook. You will see the LLM calls are missing.\r\n```python\r\nmport phoenix as px\r\nimport llama_index\r\nfrom pydantic import BaseModel, Field\r\nfrom llama_index.callbacks import CallbackManager\r\nfrom llama_index.llms import OpenAI\r\nfrom llama_index.query_engine import RetrieverQueryEngine \r\nfrom llama_index.indices.list import SummaryIndexRetriever\r\nfrom llama_index.response_synthesizers import CompactAndRefine\r\nfrom llama_index import Document, SummaryIndex, ServiceContext\r\nfrom phoenix.trace.llama_index import (\r\n    OpenInferenceTraceCallbackHandler,\r\n)\r\n\r\nsession = px.active_session()\r\nif session is None:\r\n    session = px.launch_app()\r\nllama_index.set_global_handler(\"arize_phoenix\")\r\n\r\n# Initialize the callback handler\r\n# NOTE: this doesn't work with the global handler nor with the explicit callback manager\r\n# callback_handler = OpenInferenceTraceCallbackHandler()\r\n\r\nservice_ctx = ServiceContext.from_defaults(\r\n    llm=(\r\n        OpenAI(\r\n            model=\"gpt-3.5-turbo-16k\",\r\n            max_retries=10\r\n        )\r\n    ),\r\n    # callback_manager=CallbackManager(handlers=[callback_handler]),\r\n)\r\n\r\nclass Person(BaseModel):\r\n    \"\"\"A class representing a person mentioned in the text\"\"\"\r\n    name: str = Field(description=\"The person's name\")\r\n    age: int | None = Field(description=\"The person's age\")\r\n\r\nclass People(BaseModel):\r\n    \"\"\"A class representing a collection of unique individuals\"\"\"\r\n    people: list[Person] = Field(\r\n        description=\"A list of all unique people mentioned in a text.\"\r\n    )\r\n    \r\nfrom textwrap import dedent\r\n\r\ndoc = Document(\r\n    text=dedent(\r\n        \"\"\"\r\n        Bobby Shaftoe was only 16 when he went to sea as a deckhand. \\\r\n        He fell victim to the scurvy after just 2 months. \\\r\n        Unfazed, Captain Jack discharged his duties with extreme prejudice. \\\r\n        \"\"\"\r\n    )\r\n)\r\n\r\nresponse_synth = CompactAndRefine(\r\n    service_context=service_ctx,\r\n    output_cls=People,\r\n)\r\n\r\nquery_eng = RetrieverQueryEngine(\r\n    retriever=SummaryIndexRetriever(index=SummaryIndex.from_documents([doc])),\r\n    response_synthesizer=response_synth\r\n)\r\n\r\nquery_eng.query(\"Who is mentioned in this contrived, minimal 'story'?\")\r\n\r\ndf = session.get_spans_dataframe()\r\n```\r\n\r\nHowever manually adding the same callback manager to the sub-parts will produce the right trace.\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8657/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8657/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8656",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8656/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8656/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8656/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8656",
        "id": 1975206323,
        "node_id": "PR_kwDOIWuq585ee_2l",
        "number": 8656,
        "title": "Make pgvector's setup (extension, schema, and table creation) optional",
        "user": {
            "login": "Armek",
            "id": 6132112,
            "node_id": "MDQ6VXNlcjYxMzIxMTI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6132112?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Armek",
            "html_url": "https://github.com/Armek",
            "followers_url": "https://api.github.com/users/Armek/followers",
            "following_url": "https://api.github.com/users/Armek/following{/other_user}",
            "gists_url": "https://api.github.com/users/Armek/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Armek/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Armek/subscriptions",
            "organizations_url": "https://api.github.com/users/Armek/orgs",
            "repos_url": "https://api.github.com/users/Armek/repos",
            "events_url": "https://api.github.com/users/Armek/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Armek/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-02T23:40:29Z",
        "updated_at": "2023-11-03T23:08:23Z",
        "closed_at": "2023-11-03T23:08:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8656",
            "html_url": "https://github.com/run-llama/llama_index/pull/8656",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8656.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8656.patch",
            "merged_at": "2023-11-03T23:08:22Z"
        },
        "body": "# Description\r\n\r\nThis change adds an optional parameter to the PGVectorStore class, `perform_setup` that allows you to optionally disable the setup of the pgvector extension, creation of the schema, and the creation of the table to store vectors in.  It defaults to the previous behavior of always creating these resources.  \r\n\r\n**Reasoning behind this change:**\r\nI want to use llama_index in a production app that people can interact with.  I do not want the app using llama_index to require a superuser database user (to enable the extension + schema editing) to login and query for vectors.  I'd prefer to give the database user bare minimum permissions to query and create vector entries and handle the extension + database schema management elsewhere.  \r\n\r\nThis adds a way to skip those setup steps and avoid an exception if the user doesn't have permissions.  \r\n\r\nI'm not traditionally a Python dev so let me know if I'm missing anything.  Thanks!\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8656/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8656/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8655",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8655/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8655/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8655/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8655",
        "id": 1975177839,
        "node_id": "PR_kwDOIWuq585ee5rL",
        "number": 8655,
        "title": "fix deepmemory links ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-02T23:08:04Z",
        "updated_at": "2023-11-02T23:19:27Z",
        "closed_at": "2023-11-02T23:19:26Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8655",
            "html_url": "https://github.com/run-llama/llama_index/pull/8655",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8655.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8655.patch",
            "merged_at": "2023-11-02T23:19:26Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8655/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8655/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8654",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8654/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8654/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8654/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8654",
        "id": 1975160186,
        "node_id": "PR_kwDOIWuq585ee14W",
        "number": 8654,
        "title": "[version] bump version to 0.8.59",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-02T22:47:10Z",
        "updated_at": "2023-11-02T22:54:12Z",
        "closed_at": "2023-11-02T22:54:11Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8654",
            "html_url": "https://github.com/run-llama/llama_index/pull/8654",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8654.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8654.patch",
            "merged_at": "2023-11-02T22:54:11Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8654/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8654/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8653",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8653/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8653/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8653/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8653",
        "id": 1975093732,
        "node_id": "PR_kwDOIWuq585eenGq",
        "number": 8653,
        "title": "Remove extra comma from multiline string",
        "user": {
            "login": "banagale",
            "id": 1409710,
            "node_id": "MDQ6VXNlcjE0MDk3MTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1409710?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/banagale",
            "html_url": "https://github.com/banagale",
            "followers_url": "https://api.github.com/users/banagale/followers",
            "following_url": "https://api.github.com/users/banagale/following{/other_user}",
            "gists_url": "https://api.github.com/users/banagale/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/banagale/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/banagale/subscriptions",
            "organizations_url": "https://api.github.com/users/banagale/orgs",
            "repos_url": "https://api.github.com/users/banagale/repos",
            "events_url": "https://api.github.com/users/banagale/events{/privacy}",
            "received_events_url": "https://api.github.com/users/banagale/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-02T21:50:44Z",
        "updated_at": "2023-11-02T23:43:28Z",
        "closed_at": "2023-11-02T23:43:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8653",
            "html_url": "https://github.com/run-llama/llama_index/pull/8653",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8653.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8653.patch",
            "merged_at": "2023-11-02T23:43:28Z"
        },
        "body": "# Description\r\n\r\nPlease include a summary of the change and which issue is fixed. Please also include relevant motivation and context. List any dependencies that are required for this change.\r\n\r\nFixes #8649\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8653/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8653/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8652",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8652/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8652/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8652/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8652",
        "id": 1975085638,
        "node_id": "PR_kwDOIWuq585eelTc",
        "number": 8652,
        "title": "Adds mistral 7b instruct v0.1 to available anyscale models",
        "user": {
            "login": "pavanramkumar",
            "id": 3664715,
            "node_id": "MDQ6VXNlcjM2NjQ3MTU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3664715?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pavanramkumar",
            "html_url": "https://github.com/pavanramkumar",
            "followers_url": "https://api.github.com/users/pavanramkumar/followers",
            "following_url": "https://api.github.com/users/pavanramkumar/following{/other_user}",
            "gists_url": "https://api.github.com/users/pavanramkumar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pavanramkumar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pavanramkumar/subscriptions",
            "organizations_url": "https://api.github.com/users/pavanramkumar/orgs",
            "repos_url": "https://api.github.com/users/pavanramkumar/repos",
            "events_url": "https://api.github.com/users/pavanramkumar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pavanramkumar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-02T21:44:40Z",
        "updated_at": "2023-11-02T23:37:40Z",
        "closed_at": "2023-11-02T23:37:40Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8652",
            "html_url": "https://github.com/run-llama/llama_index/pull/8652",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8652.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8652.patch",
            "merged_at": "2023-11-02T23:37:40Z"
        },
        "body": "# Description\r\n\r\nAnyscale recently made a `Mistral-7B-Instruct-v0.1` endpoint available. However, it's not possible to use with `llama_index.llms.anyscale` because `anyscale_utils.py` expects the model to be explicitly specified.\r\n\r\nSee here: https://github.com/run-llama/llama_index/blob/main/llama_index/llms/anyscale_utils.py#L42-L48\r\n\r\nFixes # (issue)\r\n\r\nI simply updated the list of models to include the relevant one.\r\n\r\nThis \r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x ] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8652/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8652/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8651",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8651/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8651/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8651/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8651",
        "id": 1975034682,
        "node_id": "I_kwDOIWuq5851uKM6",
        "number": 8651,
        "title": "Using HuggingFaceLLM to read model from local storage",
        "user": {
            "login": "snassimr",
            "id": 6830626,
            "node_id": "MDQ6VXNlcjY4MzA2MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6830626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snassimr",
            "html_url": "https://github.com/snassimr",
            "followers_url": "https://api.github.com/users/snassimr/followers",
            "following_url": "https://api.github.com/users/snassimr/following{/other_user}",
            "gists_url": "https://api.github.com/users/snassimr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snassimr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snassimr/subscriptions",
            "organizations_url": "https://api.github.com/users/snassimr/orgs",
            "repos_url": "https://api.github.com/users/snassimr/repos",
            "events_url": "https://api.github.com/users/snassimr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snassimr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-02T21:05:30Z",
        "updated_at": "2023-11-02T21:22:46Z",
        "closed_at": "2023-11-02T21:22:46Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI downloaded camel-5b-hf repo to be located on my local storage .\r\n\r\nIf it's possible to create HuggingFaceLLM from folder and not by model_name on Hugging_Face\r\n\r\nThanks",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8651/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8651/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8650",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8650/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8650/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8650/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8650",
        "id": 1974924243,
        "node_id": "PR_kwDOIWuq585eeB42",
        "number": 8650,
        "title": "Add CohereAI embeddings",
        "user": {
            "login": "ravi03071991",
            "id": 12198101,
            "node_id": "MDQ6VXNlcjEyMTk4MTAx",
            "avatar_url": "https://avatars.githubusercontent.com/u/12198101?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ravi03071991",
            "html_url": "https://github.com/ravi03071991",
            "followers_url": "https://api.github.com/users/ravi03071991/followers",
            "following_url": "https://api.github.com/users/ravi03071991/following{/other_user}",
            "gists_url": "https://api.github.com/users/ravi03071991/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ravi03071991/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ravi03071991/subscriptions",
            "organizations_url": "https://api.github.com/users/ravi03071991/orgs",
            "repos_url": "https://api.github.com/users/ravi03071991/repos",
            "events_url": "https://api.github.com/users/ravi03071991/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ravi03071991/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-02T19:39:14Z",
        "updated_at": "2023-11-02T22:05:45Z",
        "closed_at": "2023-11-02T22:05:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8650",
            "html_url": "https://github.com/run-llama/llama_index/pull/8650",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8650.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8650.patch",
            "merged_at": "2023-11-02T22:05:45Z"
        },
        "body": "# Description\r\n\r\nPR for CohereAI Embeddings based on the latest [release](https://txt.cohere.com/introducing-embed-v3/)\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8650/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 2,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8650/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8649",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8649/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8649/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8649/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8649",
        "id": 1974882040,
        "node_id": "I_kwDOIWuq5851tk74",
        "number": 8649,
        "title": "[Bug]: metadata_extractors.py has syntax error",
        "user": {
            "login": "genman",
            "id": 702278,
            "node_id": "MDQ6VXNlcjcwMjI3OA==",
            "avatar_url": "https://avatars.githubusercontent.com/u/702278?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/genman",
            "html_url": "https://github.com/genman",
            "followers_url": "https://api.github.com/users/genman/followers",
            "following_url": "https://api.github.com/users/genman/following{/other_user}",
            "gists_url": "https://api.github.com/users/genman/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/genman/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/genman/subscriptions",
            "organizations_url": "https://api.github.com/users/genman/orgs",
            "repos_url": "https://api.github.com/users/genman/repos",
            "events_url": "https://api.github.com/users/genman/events{/privacy}",
            "received_events_url": "https://api.github.com/users/genman/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-02T19:08:05Z",
        "updated_at": "2023-11-02T23:43:29Z",
        "closed_at": "2023-11-02T23:43:29Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\n`\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/node_parser/extractors/metadata_extractors.py\", line 658, in PydanticProgramExtractor\r\n    input_key: str = Field(\r\n                     ^^^^^^\r\nTypeError: Argument 'description' has incorrect type (expected str, got tuple)\r\n`\r\n\r\nCode:\r\n`    input_key: str = Field(\r\n        default=\"input\", \r\n        description=\r\n            \"Key to use as input to the program (the program \"\r\n            \"template string must expose this key).\"\r\n        ,\r\n    )\r\n`\r\n\r\nShould remove , here.\r\n\r\n\n\n### Version\n\nv0.8.7\n\n### Steps to Reproduce\n\nRuntime issue (include package)\n\n### Relevant Logs/Tracbacks\n\n```shell\nFile \"/root/.local/lib/python3.11/site-packages/llama_index/__init__.py\", line 21, in <module>\r\n    from llama_index.indices.common.struct_store.base import SQLDocumentContextBuilder\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/indices/__init__.py\", line 4, in <module>\r\n    from llama_index.indices.document_summary.base import DocumentSummaryIndex\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/indices/document_summary/__init__.py\", line 4, in <module>\r\n    from llama_index.indices.document_summary.base import (\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/indices/document_summary/base.py\", line 14, in <module>\r\n    from llama_index.indices.base import BaseIndex\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/indices/base.py\", line 6, in <module>\r\n    from llama_index.chat_engine.types import BaseChatEngine, ChatMode\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/chat_engine/__init__.py\", line 1, in <module>\r\n    from llama_index.chat_engine.condense_question import CondenseQuestionChatEngine\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/chat_engine/condense_question.py\", line 6, in <module>\r\n    from llama_index.chat_engine.types import (\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/chat_engine/types.py\", line 14, in <module>\r\n    from llama_index.tools import ToolOutput\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/tools/__init__.py\", line 5, in <module>\r\n    from llama_index.tools.query_plan import QueryPlanTool\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/tools/query_plan.py\", line 6, in <module>\r\n    from llama_index.response_synthesizers import BaseSynthesizer, get_response_synthesizer\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/response_synthesizers/__init__.py\", line 3, in <module>\r\n    from llama_index.response_synthesizers.accumulate import Accumulate\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/response_synthesizers/accumulate.py\", line 5, in <module>\r\n    from llama_index.indices.service_context import ServiceContext\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/indices/service_context.py\", line 16, in <module>\r\n    from llama_index.node_parser.interface import NodeParser\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/node_parser/__init__.py\", line 3, in <module>\r\n    from llama_index.node_parser.hierarchical import (\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/node_parser/hierarchical.py\", line 8, in <module>\r\n    from llama_index.node_parser.extractors.metadata_extractors import MetadataExtractor\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/node_parser/extractors/__init__.py\", line 1, in <module>\r\n    from llama_index.node_parser.extractors.marvin_metadata_extractor import (\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/node_parser/extractors/marvin_metadata_extractor.py\", line 7, in <module>\r\n    from llama_index.node_parser.extractors.metadata_extractors import (\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/node_parser/extractors/metadata_extractors.py\", line 647, in <module>\r\n    class PydanticProgramExtractor(MetadataFeatureExtractor):\r\n  File \"/root/.local/lib/python3.11/site-packages/llama_index/node_parser/extractors/metadata_extractors.py\", line 658, in PydanticProgramExtractor\r\n    input_key: str = Field(\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8649/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8649/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8647",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8647/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8647/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8647/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8647",
        "id": 1974833931,
        "node_id": "PR_kwDOIWuq585eduRe",
        "number": 8647,
        "title": "Initialize MultiModal LLM base class",
        "user": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-02T18:32:36Z",
        "updated_at": "2023-11-03T19:49:45Z",
        "closed_at": "2023-11-03T19:49:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8647",
            "html_url": "https://github.com/run-llama/llama_index/pull/8647",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8647.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8647.patch",
            "merged_at": "2023-11-03T19:49:44Z"
        },
        "body": "# Description\r\n\r\n1. Initialize Multi Modal Base Class.\r\n2. Using Replicate model as an inherited class for Llava and Fuyu 8B\r\n3. Make an example for both models\r\n4. Some generic functions for loading images from (web url or local files)\r\n\r\nTODO\r\nNeed to add unit tests\r\nCall back functions for MM LLM\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8647/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8647/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8646",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8646/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8646/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8646/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8646",
        "id": 1974773939,
        "node_id": "I_kwDOIWuq5851tKiz",
        "number": 8646,
        "title": "DatasetGenerator for q/a pairs settings",
        "user": {
            "login": "snassimr",
            "id": 6830626,
            "node_id": "MDQ6VXNlcjY4MzA2MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6830626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snassimr",
            "html_url": "https://github.com/snassimr",
            "followers_url": "https://api.github.com/users/snassimr/followers",
            "following_url": "https://api.github.com/users/snassimr/following{/other_user}",
            "gists_url": "https://api.github.com/users/snassimr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snassimr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snassimr/subscriptions",
            "organizations_url": "https://api.github.com/users/snassimr/orgs",
            "repos_url": "https://api.github.com/users/snassimr/repos",
            "events_url": "https://api.github.com/users/snassimr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snassimr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-02T17:47:25Z",
        "updated_at": "2023-11-02T18:57:06Z",
        "closed_at": "2023-11-02T18:57:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI want to ask regarding this peace of code : \r\n\r\n`for file in files:\r\n        nodes = node_parser.get_nodes_from_documents(documents[file])\r\n        dataset_generator = DatasetGenerator(\r\n                                                nodes[:3],\r\n                                                service_context=service_context,\r\n                                                show_progress=True,\r\n                                                num_questions_per_chunk=10,\r\n                                            )\r\n\r\n        qa_dataset = await dataset_generator.agenerate_dataset_from_nodes(num=20)`\r\n\r\nEach chunk (I have 77 of them) is mapped to node . \r\nThe code should generate 30 q/a pairs (number of nodes (3) X num_questions_per_chunk (1) .\r\nWhat  the meaniing of num=20 in this case ? \r\n\r\nThanks\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8646/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8646/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8645",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8645/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8645/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8645/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8645",
        "id": 1974676798,
        "node_id": "PR_kwDOIWuq585edLqJ",
        "number": 8645,
        "title": "corrected broken link to the How to read these docs page",
        "user": {
            "login": "NickhilN",
            "id": 92180678,
            "node_id": "U_kgDOBX6Qxg",
            "avatar_url": "https://avatars.githubusercontent.com/u/92180678?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/NickhilN",
            "html_url": "https://github.com/NickhilN",
            "followers_url": "https://api.github.com/users/NickhilN/followers",
            "following_url": "https://api.github.com/users/NickhilN/following{/other_user}",
            "gists_url": "https://api.github.com/users/NickhilN/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/NickhilN/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/NickhilN/subscriptions",
            "organizations_url": "https://api.github.com/users/NickhilN/orgs",
            "repos_url": "https://api.github.com/users/NickhilN/repos",
            "events_url": "https://api.github.com/users/NickhilN/events{/privacy}",
            "received_events_url": "https://api.github.com/users/NickhilN/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-02T17:01:27Z",
        "updated_at": "2023-11-02T18:59:12Z",
        "closed_at": "2023-11-02T18:59:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8645",
            "html_url": "https://github.com/run-llama/llama_index/pull/8645",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8645.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8645.patch",
            "merged_at": "2023-11-02T18:59:12Z"
        },
        "body": "# Description\r\n\r\nThis fixes a broken link in the top-level of the LlamaIndex documentation.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n- [x] This is just a documentation change. I made sure that the new documentation renders correctly. \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8645/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8645/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8644",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8644/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8644/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8644/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8644",
        "id": 1974606745,
        "node_id": "I_kwDOIWuq5851shuZ",
        "number": 8644,
        "title": "\"a\" prefixed functions",
        "user": {
            "login": "snassimr",
            "id": 6830626,
            "node_id": "MDQ6VXNlcjY4MzA2MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6830626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snassimr",
            "html_url": "https://github.com/snassimr",
            "followers_url": "https://api.github.com/users/snassimr/followers",
            "following_url": "https://api.github.com/users/snassimr/following{/other_user}",
            "gists_url": "https://api.github.com/users/snassimr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snassimr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snassimr/subscriptions",
            "organizations_url": "https://api.github.com/users/snassimr/orgs",
            "repos_url": "https://api.github.com/users/snassimr/repos",
            "events_url": "https://api.github.com/users/snassimr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snassimr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-02T16:20:10Z",
        "updated_at": "2023-11-02T16:40:01Z",
        "closed_at": "2023-11-02T16:40:01Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\n Hi , \r\n\r\nI see some examples where regular and a prefixed function are used . \r\nSee here [link](https://docs.llamaindex.ai/en/latest/examples/finetuning/knowledge/finetune_retrieval_aug.html) for agenerate_dataset_from_nodes function however generate_dataset_from_nodes works if you pre-run this code :\r\n\r\n`import asyncio\r\nimport nest_asyncio\r\nnest_asyncio.apply()`\r\n\r\nCould you elaborate more why we need \"a\" prefixed functions ?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8644/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8644/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8643",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8643/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8643/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8643/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8643",
        "id": 1974595492,
        "node_id": "PR_kwDOIWuq585ec6Bd",
        "number": 8643,
        "title": "Add feature request #8262",
        "user": {
            "login": "aaronjimv",
            "id": 67152883,
            "node_id": "MDQ6VXNlcjY3MTUyODgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/67152883?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronjimv",
            "html_url": "https://github.com/aaronjimv",
            "followers_url": "https://api.github.com/users/aaronjimv/followers",
            "following_url": "https://api.github.com/users/aaronjimv/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronjimv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronjimv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronjimv/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronjimv/orgs",
            "repos_url": "https://api.github.com/users/aaronjimv/repos",
            "events_url": "https://api.github.com/users/aaronjimv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronjimv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-02T16:13:22Z",
        "updated_at": "2023-11-02T18:01:40Z",
        "closed_at": "2023-11-02T18:01:29Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8643",
            "html_url": "https://github.com/run-llama/llama_index/pull/8643",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8643.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8643.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nThis PR includes the changes requested in [Feature Request]: adding\u00a0`blacken-docs`\u00a0to\u00a0`pre-commit`\u00a0#8262. \r\n\r\nIn that issue, indicates some parsing errors but there is not describe about it. In the comments they talk about a possible solution which I implemented in `.pre-commit-config.yaml` and I not see any error in `pre-commit`.\r\n\r\nI try with two different version of `blacken-docs` : v1.12.1 and 1.16.0. And I don't have any problems when executing  `pre-commit`.\r\n\r\nI also edited some code in README.md to try and `blacken-docs` was fired correctly adding new line breaks to the code.\r\n\r\nFixes #8262\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] My changes generate no new warnings\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8643/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8643/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8642",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8642/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8642/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8642/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8642",
        "id": 1974505484,
        "node_id": "PR_kwDOIWuq585ecmWM",
        "number": 8642,
        "title": "[version] bump version to 0.8.58",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-02T15:28:27Z",
        "updated_at": "2023-11-02T17:55:52Z",
        "closed_at": "2023-11-02T17:55:51Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8642",
            "html_url": "https://github.com/run-llama/llama_index/pull/8642",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8642.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8642.patch",
            "merged_at": "2023-11-02T17:55:51Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8642/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8642/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8641",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8641/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8641/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8641/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8641",
        "id": 1974456142,
        "node_id": "I_kwDOIWuq5851r89O",
        "number": 8641,
        "title": "[Bug]: AzureOpenAI : Sub Question Query Engine is not working",
        "user": {
            "login": "vipinap98",
            "id": 129522891,
            "node_id": "U_kgDOB7hcyw",
            "avatar_url": "https://avatars.githubusercontent.com/u/129522891?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vipinap98",
            "html_url": "https://github.com/vipinap98",
            "followers_url": "https://api.github.com/users/vipinap98/followers",
            "following_url": "https://api.github.com/users/vipinap98/following{/other_user}",
            "gists_url": "https://api.github.com/users/vipinap98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vipinap98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vipinap98/subscriptions",
            "organizations_url": "https://api.github.com/users/vipinap98/orgs",
            "repos_url": "https://api.github.com/users/vipinap98/repos",
            "events_url": "https://api.github.com/users/vipinap98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vipinap98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-02T15:04:42Z",
        "updated_at": "2023-11-05T22:02:24Z",
        "closed_at": "2023-11-05T22:02:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nWas trying to do the Subquestion query engine\r\nGot this error\r\n\r\nInvalidRequestError: Unrecognized request argument supplied: functions\r\n\r\nis it an issue from the Azure Openai itself? because the deployment is gpt-35-turbo-0301 not the 0613 model\r\n\r\n\r\n\r\n### Version\r\n\r\n0.8.57\r\n\r\n### Steps to Reproduce\r\n\r\nFollow the subquestion query engine with azure openai service\r\nps:it works with openai service\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8641/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8641/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8640",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8640/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8640/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8640/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8640",
        "id": 1974333135,
        "node_id": "I_kwDOIWuq5851re7P",
        "number": 8640,
        "title": "[Question]: LLama-Index v0.8.57 Much slower ",
        "user": {
            "login": "gich2009",
            "id": 83756959,
            "node_id": "MDQ6VXNlcjgzNzU2OTU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/83756959?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gich2009",
            "html_url": "https://github.com/gich2009",
            "followers_url": "https://api.github.com/users/gich2009/followers",
            "following_url": "https://api.github.com/users/gich2009/following{/other_user}",
            "gists_url": "https://api.github.com/users/gich2009/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gich2009/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gich2009/subscriptions",
            "organizations_url": "https://api.github.com/users/gich2009/orgs",
            "repos_url": "https://api.github.com/users/gich2009/repos",
            "events_url": "https://api.github.com/users/gich2009/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gich2009/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2023-11-02T14:04:38Z",
        "updated_at": "2023-11-07T16:23:42Z",
        "closed_at": "2023-11-07T15:59:00Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nWhat new retrieval approaches have been added to v0.8.57 compared to v0.8.56?\r\nThe library is suddenly much slower than it was <0.8.57. \r\nEven for queries that do not require retrieval.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8640/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8640/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8638",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8638/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8638/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8638/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8638",
        "id": 1974129289,
        "node_id": "I_kwDOIWuq5851qtKJ",
        "number": 8638,
        "title": "[Question]: How the retrieve the number of records in an index inside chromadb using llamaindex",
        "user": {
            "login": "pradeepdev-1995",
            "id": 41164884,
            "node_id": "MDQ6VXNlcjQxMTY0ODg0",
            "avatar_url": "https://avatars.githubusercontent.com/u/41164884?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/pradeepdev-1995",
            "html_url": "https://github.com/pradeepdev-1995",
            "followers_url": "https://api.github.com/users/pradeepdev-1995/followers",
            "following_url": "https://api.github.com/users/pradeepdev-1995/following{/other_user}",
            "gists_url": "https://api.github.com/users/pradeepdev-1995/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/pradeepdev-1995/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/pradeepdev-1995/subscriptions",
            "organizations_url": "https://api.github.com/users/pradeepdev-1995/orgs",
            "repos_url": "https://api.github.com/users/pradeepdev-1995/repos",
            "events_url": "https://api.github.com/users/pradeepdev-1995/events{/privacy}",
            "received_events_url": "https://api.github.com/users/pradeepdev-1995/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-02T12:17:32Z",
        "updated_at": "2023-11-05T21:59:34Z",
        "closed_at": "2023-11-05T21:59:34Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHere is my code to store the data inside chromadb using llamaindex\r\n```\r\nfrom llama_index.vector_stores import ChromaVectorStore\r\nfrom langchain.embeddings.huggingface import HuggingFaceEmbeddings\r\nfrom langchain.embeddings import SentenceTransformerEmbeddings\r\nimport chromadb\r\n\r\nchroma_client = chromadb.Client()\r\nchroma_collection = chroma_client.create_collection(\"quickstart\")\r\n\r\nfrom llama_index import SimpleDirectoryReader\r\ndocuments = SimpleDirectoryReader('/data/').load_data()\r\nvector_store = ChromaVectorStore(chroma_collection=chroma_collection)\r\nstorage_context = StorageContext.from_defaults(vector_store=vector_store)\r\n\r\nfrom llama_index import StorageContext,VectorStoreIndex,LLMPredictor, ServiceContext,LangchainEmbedding\r\nfrom langchain.llms import AzureOpenAI\r\nllm_predictor = LLMPredictor(llm=AzureOpenAI())\r\nembed_model = LangchainEmbedding(HuggingFaceEmbeddings(model_name='sentence-transformers/all-MiniLM-L6-v2'))\r\nservice_context = ServiceContext.from_defaults(llm_predictor=llm_predictor,embed_model=embed_model)\r\ncustom_llm_index = VectorStoreIndex.from_documents(documents,\r\n                                                    service_context=service_context,\r\n                                                    storage_context=storage_context)\r\n```\r\nNow I can successfully load the content in a chromadb index named ```custom_llm_index```.\r\nNext, I need to count the number of records in this index. How can I do that?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8638/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8638/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8637",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8637/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8637/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8637/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8637",
        "id": 1974124720,
        "node_id": "I_kwDOIWuq5851qsCw",
        "number": 8637,
        "title": "PaLM llm use service account instead of api key",
        "user": {
            "login": "federico-andre",
            "id": 56593648,
            "node_id": "MDQ6VXNlcjU2NTkzNjQ4",
            "avatar_url": "https://avatars.githubusercontent.com/u/56593648?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/federico-andre",
            "html_url": "https://github.com/federico-andre",
            "followers_url": "https://api.github.com/users/federico-andre/followers",
            "following_url": "https://api.github.com/users/federico-andre/following{/other_user}",
            "gists_url": "https://api.github.com/users/federico-andre/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/federico-andre/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/federico-andre/subscriptions",
            "organizations_url": "https://api.github.com/users/federico-andre/orgs",
            "repos_url": "https://api.github.com/users/federico-andre/repos",
            "events_url": "https://api.github.com/users/federico-andre/events{/privacy}",
            "received_events_url": "https://api.github.com/users/federico-andre/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-02T12:14:35Z",
        "updated_at": "2023-11-05T21:58:08Z",
        "closed_at": "2023-11-05T21:58:08Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHow can i use the PaLM llm with a service account in json format? \r\nWith langchain is it possible to use VertexAI and pass the credentials param like this:\r\n\r\n```\r\ncredentials = service_account.Credentials.from_service_account_file(\"genai-sa.json\")\r\nVertexAI(model_name=\"text-bison\", max_output_tokens=1000, temperature=0.3, credentials=credentials)\r\n```\r\n\r\nCan this be done with llama-index as well?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8637/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8637/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8635",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8635/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8635/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8635/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8635",
        "id": 1973763187,
        "node_id": "I_kwDOIWuq5851pTxz",
        "number": 8635,
        "title": "[Bug]: While using hybrid retriever with Elastic Search not able to retrieve for top_k>10",
        "user": {
            "login": "amitguptadumka",
            "id": 39477047,
            "node_id": "MDQ6VXNlcjM5NDc3MDQ3",
            "avatar_url": "https://avatars.githubusercontent.com/u/39477047?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/amitguptadumka",
            "html_url": "https://github.com/amitguptadumka",
            "followers_url": "https://api.github.com/users/amitguptadumka/followers",
            "following_url": "https://api.github.com/users/amitguptadumka/following{/other_user}",
            "gists_url": "https://api.github.com/users/amitguptadumka/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/amitguptadumka/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/amitguptadumka/subscriptions",
            "organizations_url": "https://api.github.com/users/amitguptadumka/orgs",
            "repos_url": "https://api.github.com/users/amitguptadumka/repos",
            "events_url": "https://api.github.com/users/amitguptadumka/events{/privacy}",
            "received_events_url": "https://api.github.com/users/amitguptadumka/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-02T08:39:14Z",
        "updated_at": "2023-11-06T11:31:15Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nI have my embeddings stored in ELastic search and i am using hybrid retriever to retrieve top_k docs based on hybrid similarity using below command:\r\nretriever = VectorIndexRetriever(index=index,vector_store_query_mode=\"hybrid\" ,similarity_top_k=15) \r\n\r\nNow , its working fine if similarity_top_k<=10 but as soon as i try to retrieve more than 10 nodes it gives below error:\r\n\r\nBadRequestError: BadRequestError(400, 'action_request_validation_exception', 'Validation Failed: 1: [rank] requires [window_size: 10] be greater than or equal to [size: 15];')\r\n\r\nCan someone help me how to retrieve >10 chunks since i have to do reranking on top of this.\r\nThanks. \n\n### Version\n\n0.8.48\n\n### Steps to Reproduce\n\nretriever = VectorIndexRetriever(index=index,vector_store_query_mode=\"hybrid\" ,similarity_top_k=15) \r\nretriever.retrieve(query_bundle)\n\n### Relevant Logs/Tracbacks\n\n```shell\nBadRequestError: BadRequestError(400, 'action_request_validation_exception', 'Validation Failed: 1: [rank] requires [window_size: 10] be greater than or equal to [size: 15];')\n```\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8635/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8635/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8634",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8634/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8634/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8634/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8634",
        "id": 1973457937,
        "node_id": "PR_kwDOIWuq585eZCyE",
        "number": 8634,
        "title": "VoyageEmbedding",
        "user": {
            "login": "thomas0809",
            "id": 11373553,
            "node_id": "MDQ6VXNlcjExMzczNTUz",
            "avatar_url": "https://avatars.githubusercontent.com/u/11373553?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thomas0809",
            "html_url": "https://github.com/thomas0809",
            "followers_url": "https://api.github.com/users/thomas0809/followers",
            "following_url": "https://api.github.com/users/thomas0809/following{/other_user}",
            "gists_url": "https://api.github.com/users/thomas0809/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thomas0809/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thomas0809/subscriptions",
            "organizations_url": "https://api.github.com/users/thomas0809/orgs",
            "repos_url": "https://api.github.com/users/thomas0809/repos",
            "events_url": "https://api.github.com/users/thomas0809/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thomas0809/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-02T03:56:05Z",
        "updated_at": "2023-11-03T21:41:34Z",
        "closed_at": "2023-11-03T21:41:34Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8634",
            "html_url": "https://github.com/run-llama/llama_index/pull/8634",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8634.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8634.patch",
            "merged_at": "2023-11-03T21:41:34Z"
        },
        "body": "# Description\r\n\r\nIntegrate Voyage embedding as a new class\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nTested the code locally. Added a new notebook.\r\n\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8634/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8634/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8633",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8633/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8633/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8633/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8633",
        "id": 1973421088,
        "node_id": "PR_kwDOIWuq585eY6_6",
        "number": 8633,
        "title": "Allow init of stores_text variable for Pinecone vector store",
        "user": {
            "login": "nishanthooda",
            "id": 26640020,
            "node_id": "MDQ6VXNlcjI2NjQwMDIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/26640020?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nishanthooda",
            "html_url": "https://github.com/nishanthooda",
            "followers_url": "https://api.github.com/users/nishanthooda/followers",
            "following_url": "https://api.github.com/users/nishanthooda/following{/other_user}",
            "gists_url": "https://api.github.com/users/nishanthooda/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nishanthooda/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nishanthooda/subscriptions",
            "organizations_url": "https://api.github.com/users/nishanthooda/orgs",
            "repos_url": "https://api.github.com/users/nishanthooda/repos",
            "events_url": "https://api.github.com/users/nishanthooda/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nishanthooda/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-02T03:05:54Z",
        "updated_at": "2023-11-03T22:34:44Z",
        "closed_at": "2023-11-03T22:34:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8633",
            "html_url": "https://github.com/run-llama/llama_index/pull/8633",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8633.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8633.patch",
            "merged_at": "2023-11-03T22:34:43Z"
        },
        "body": "# Description\r\n\r\nThis allows the the stores_text variable to be initialized with the PineconeVectorStore and used as the flag to determine whether text should be removed from metadata when storing node in Pinecone. \r\n\r\nThis is useful for organizations who don't want plaintext document data stored in Pinecone. \r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] My code generates no new warnings \r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8633/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8633/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8631",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8631/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8631/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8631/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8631",
        "id": 1973268440,
        "node_id": "PR_kwDOIWuq585eYbRl",
        "number": 8631,
        "title": "[version] bump version to 0.8.57",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-01T23:47:22Z",
        "updated_at": "2023-11-01T23:59:39Z",
        "closed_at": "2023-11-01T23:59:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8631",
            "html_url": "https://github.com/run-llama/llama_index/pull/8631",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8631.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8631.patch",
            "merged_at": "2023-11-01T23:59:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8631/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8631/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8629",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8629/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8629/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8629/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8629",
        "id": 1973077550,
        "node_id": "I_kwDOIWuq5851msYu",
        "number": 8629,
        "title": "[Question]: is there a way to reduce the time to rebuild storage context ",
        "user": {
            "login": "antoan",
            "id": 1454427,
            "node_id": "MDQ6VXNlcjE0NTQ0Mjc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1454427?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/antoan",
            "html_url": "https://github.com/antoan",
            "followers_url": "https://api.github.com/users/antoan/followers",
            "following_url": "https://api.github.com/users/antoan/following{/other_user}",
            "gists_url": "https://api.github.com/users/antoan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/antoan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/antoan/subscriptions",
            "organizations_url": "https://api.github.com/users/antoan/orgs",
            "repos_url": "https://api.github.com/users/antoan/repos",
            "events_url": "https://api.github.com/users/antoan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/antoan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-01T20:41:00Z",
        "updated_at": "2023-11-02T00:15:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI build the storage context the following way:\r\n\r\n`storage_context = StorageContext.from_defaults(persist_dir=\"./storage\")`\r\n\r\nI noticed the code ends up spends a lot of time [here](https://github.com/run-llama/llama_index/blob/f780e6272fb9ad75c294ba0cee074d38853bf7e5/llama_index/vector_stores/simple.py#L269)\r\n\r\nWould switching to another vector store help. \r\nContents of storage  [storage.zip](https://github.com/run-llama/llama_index/files/13231589/storage.zip)\r\n\r\n\r\n\r\nAny thoughts would be much appreciated.\r\n\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8629/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8629/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8628",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8628/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8628/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8628/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8628",
        "id": 1972915604,
        "node_id": "PR_kwDOIWuq585eXOju",
        "number": 8628,
        "title": "Fix skipping hidden files when loading files with SimpleDirectoryReader",
        "user": {
            "login": "finlaymacklon",
            "id": 49216954,
            "node_id": "MDQ6VXNlcjQ5MjE2OTU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/49216954?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/finlaymacklon",
            "html_url": "https://github.com/finlaymacklon",
            "followers_url": "https://api.github.com/users/finlaymacklon/followers",
            "following_url": "https://api.github.com/users/finlaymacklon/following{/other_user}",
            "gists_url": "https://api.github.com/users/finlaymacklon/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/finlaymacklon/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/finlaymacklon/subscriptions",
            "organizations_url": "https://api.github.com/users/finlaymacklon/orgs",
            "repos_url": "https://api.github.com/users/finlaymacklon/repos",
            "events_url": "https://api.github.com/users/finlaymacklon/events{/privacy}",
            "received_events_url": "https://api.github.com/users/finlaymacklon/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-01T18:49:47Z",
        "updated_at": "2023-11-01T22:25:18Z",
        "closed_at": "2023-11-01T22:18:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8628",
            "html_url": "https://github.com/run-llama/llama_index/pull/8628",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8628.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8628.patch",
            "merged_at": "2023-11-01T22:18:46Z"
        },
        "body": "# Description\r\n\r\nPreviously (in my experience/testing), not all hidden files were skipped when `exclude_hidden=True` was set for `SimpleDirectoryReader` when calling `.load_data()`. Now, all hidden files (or files in hidden directories) are skipped with the `exclude_hidden=True` option set.\r\n\r\nI added a test for `exclude_hidden` with both recursive and non-recursive loading. I also adjusted the test for `exclude` flag, which previously included a small (insufficient) test for the `exclude_hidden` flag, by removing it (now the tests for `exclude` and `exclude_hidden` are totally seperate).\r\n\r\nHopefully this is a useful change for the main repository, and if so, please let me know if any changes are required to merge it. Thanks! \r\n\r\n## Type of Change\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8628/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8628/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8627",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8627/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8627/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8627/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8627",
        "id": 1972690655,
        "node_id": "PR_kwDOIWuq585eWdiZ",
        "number": 8627,
        "title": "Feature (#8039): change fixed default variables as function parameters.",
        "user": {
            "login": "aaronjimv",
            "id": 67152883,
            "node_id": "MDQ6VXNlcjY3MTUyODgz",
            "avatar_url": "https://avatars.githubusercontent.com/u/67152883?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/aaronjimv",
            "html_url": "https://github.com/aaronjimv",
            "followers_url": "https://api.github.com/users/aaronjimv/followers",
            "following_url": "https://api.github.com/users/aaronjimv/following{/other_user}",
            "gists_url": "https://api.github.com/users/aaronjimv/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/aaronjimv/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/aaronjimv/subscriptions",
            "organizations_url": "https://api.github.com/users/aaronjimv/orgs",
            "repos_url": "https://api.github.com/users/aaronjimv/repos",
            "events_url": "https://api.github.com/users/aaronjimv/events{/privacy}",
            "received_events_url": "https://api.github.com/users/aaronjimv/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-11-01T16:22:04Z",
        "updated_at": "2023-11-02T13:56:10Z",
        "closed_at": "2023-11-01T19:01:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8627",
            "html_url": "https://github.com/run-llama/llama_index/pull/8627",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8627.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8627.patch",
            "merged_at": "2023-11-01T19:01:23Z"
        },
        "body": "# Feature (#8039): Add min_seconds and max_seconds as a parameter to the _create_retry_decorator function (#8039)\r\n\r\n# Description\r\n\r\nThis PR includes the changes requested in [Feature Request]: Configurable retry time for LLM calls #8039\r\nI changed the min_seconds and max_seconds variables as parameters of the function def _create_retry_decorator().\r\nUser can now to configure these values.\r\n\r\nFixes # (8039)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] My changes generate no new warnings\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8627/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8627/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8626",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8626/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8626/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8626/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8626",
        "id": 1972507475,
        "node_id": "PR_kwDOIWuq585eV1cg",
        "number": 8626,
        "title": "Google Vertex Support ",
        "user": {
            "login": "yureikami",
            "id": 127286701,
            "node_id": "U_kgDOB5Y9rQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/127286701?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yureikami",
            "html_url": "https://github.com/yureikami",
            "followers_url": "https://api.github.com/users/yureikami/followers",
            "following_url": "https://api.github.com/users/yureikami/following{/other_user}",
            "gists_url": "https://api.github.com/users/yureikami/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yureikami/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yureikami/subscriptions",
            "organizations_url": "https://api.github.com/users/yureikami/orgs",
            "repos_url": "https://api.github.com/users/yureikami/repos",
            "events_url": "https://api.github.com/users/yureikami/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yureikami/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5870194649,
                "node_id": "LA_kwDOIWuq588AAAABXeQP2Q",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/llm",
                "name": "llm",
                "color": "799557",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-01T14:38:32Z",
        "updated_at": "2023-11-02T05:48:57Z",
        "closed_at": "2023-11-02T05:48:56Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8626",
            "html_url": "https://github.com/run-llama/llama_index/pull/8626",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8626.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8626.patch",
            "merged_at": "2023-11-02T05:48:56Z"
        },
        "body": "# Description\r\n\r\nI've created this pull request to introduce the Google Vertex Client to the Llama Index ecosystem since it currently only supports the Palm API, so this PR is aimed at enabling the integration of the Vertex Client.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8626/reactions",
            "total_count": 3,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 3,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8626/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8625",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8625/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8625/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8625/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8625",
        "id": 1972327885,
        "node_id": "PR_kwDOIWuq585eVOLf",
        "number": 8625,
        "title": "Deepmemory support",
        "user": {
            "login": "adolkhan",
            "id": 54854336,
            "node_id": "MDQ6VXNlcjU0ODU0MzM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/54854336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adolkhan",
            "html_url": "https://github.com/adolkhan",
            "followers_url": "https://api.github.com/users/adolkhan/followers",
            "following_url": "https://api.github.com/users/adolkhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/adolkhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adolkhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adolkhan/subscriptions",
            "organizations_url": "https://api.github.com/users/adolkhan/orgs",
            "repos_url": "https://api.github.com/users/adolkhan/repos",
            "events_url": "https://api.github.com/users/adolkhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adolkhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5804135704,
                "node_id": "LA_kwDOIWuq588AAAABWfQVGA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/vector%20store",
                "name": "vector store",
                "color": "4AE220",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-01T12:55:20Z",
        "updated_at": "2023-11-02T18:41:53Z",
        "closed_at": "2023-11-02T18:41:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8625",
            "html_url": "https://github.com/run-llama/llama_index/pull/8625",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8625.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8625.patch",
            "merged_at": "2023-11-02T18:41:53Z"
        },
        "body": "# Description\r\n\r\nIn this PR, we introduce DeepLake's new feature, DeepMemory. This feature trains a compact network to align the embedding spaces of user queries with corpus data. With DeepMemory, we achieve a 15% improvement in hit rate, as detailed in the attached Jupyter notebook.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [ X] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [ ] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8625/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8625/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8624",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8624/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8624/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8624/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8624",
        "id": 1972293449,
        "node_id": "I_kwDOIWuq5851js9J",
        "number": 8624,
        "title": "[Documentation]: Broken links in nearly all \"getting started\" docs",
        "user": {
            "login": "ifrit98",
            "id": 31426574,
            "node_id": "MDQ6VXNlcjMxNDI2NTc0",
            "avatar_url": "https://avatars.githubusercontent.com/u/31426574?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ifrit98",
            "html_url": "https://github.com/ifrit98",
            "followers_url": "https://api.github.com/users/ifrit98/followers",
            "following_url": "https://api.github.com/users/ifrit98/following{/other_user}",
            "gists_url": "https://api.github.com/users/ifrit98/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ifrit98/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ifrit98/subscriptions",
            "organizations_url": "https://api.github.com/users/ifrit98/orgs",
            "repos_url": "https://api.github.com/users/ifrit98/repos",
            "events_url": "https://api.github.com/users/ifrit98/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ifrit98/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "Disiok",
                "id": 5567282,
                "node_id": "MDQ6VXNlcjU1NjcyODI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/Disiok",
                "html_url": "https://github.com/Disiok",
                "followers_url": "https://api.github.com/users/Disiok/followers",
                "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
                "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
                "organizations_url": "https://api.github.com/users/Disiok/orgs",
                "repos_url": "https://api.github.com/users/Disiok/repos",
                "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
                "received_events_url": "https://api.github.com/users/Disiok/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-01T12:34:02Z",
        "updated_at": "2023-11-01T18:39:40Z",
        "closed_at": "2023-11-01T18:39:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nhttps://github.com/run-llama/llama_index/blob/main/docs/getting_started/concepts.md\r\n\r\nAll of these links contained in this document give 404.\r\n\r\nWhen I try to manually parse through the repo to find where they have been moved, (e.g. chatbots)\r\nhttps://github.com/run-llama/llama_index/blob/main/docs/use_cases/chatbots.md\r\n\r\nThe links here also give 404.\r\n\r\nPlease have someone go through and update the user documentation so those who want to get up to speed quickly can do so.\r\n\r\nBest,\r\nPhil\n\n### Documentation Link\n\nhttps://github.com/run-llama/llama_index/blob/main/docs/getting_started/concepts.md",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8624/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8624/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8623",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8623/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8623/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8623/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8623",
        "id": 1972028711,
        "node_id": "I_kwDOIWuq5851isUn",
        "number": 8623,
        "title": "[Question]: How can I add new [node-relationship-node] in Graph Store with llama_index",
        "user": {
            "login": "JinSeoung-Oh",
            "id": 78573459,
            "node_id": "MDQ6VXNlcjc4NTczNDU5",
            "avatar_url": "https://avatars.githubusercontent.com/u/78573459?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/JinSeoung-Oh",
            "html_url": "https://github.com/JinSeoung-Oh",
            "followers_url": "https://api.github.com/users/JinSeoung-Oh/followers",
            "following_url": "https://api.github.com/users/JinSeoung-Oh/following{/other_user}",
            "gists_url": "https://api.github.com/users/JinSeoung-Oh/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/JinSeoung-Oh/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/JinSeoung-Oh/subscriptions",
            "organizations_url": "https://api.github.com/users/JinSeoung-Oh/orgs",
            "repos_url": "https://api.github.com/users/JinSeoung-Oh/repos",
            "events_url": "https://api.github.com/users/JinSeoung-Oh/events{/privacy}",
            "received_events_url": "https://api.github.com/users/JinSeoung-Oh/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-11-01T09:39:41Z",
        "updated_at": "2023-11-03T01:12:26Z",
        "closed_at": "2023-11-01T23:27:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nAt first, I'm sorry because I'm not familiar with Discord..\r\nWhen I tried to enter discord, I cannot register my account because It said my account already registered.\r\nSolve this problem, I tried several method which I found from google but all failed.\r\nI think It is because I'm not familiar with Discord.\r\n\r\nMy question is after building knowledge graph, can I add new knowledge in my knowledge graph storage(I use NebularGraph)?\r\nFor example, suppose, I built my knowledge graph about black hole. After that, I want to add new knowledge about theory of relativity.\r\nCan I do it? I cannot find out proper answer about it..\r\nAll document I found just explain how to make knowledge graph, not how to add new knowledge..\r\n\r\nThanks for reading and I would like to apologize for my English and search skills\r\nThanks! \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8623/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8623/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8622",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8622/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8622/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8622/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8622",
        "id": 1971888788,
        "node_id": "PR_kwDOIWuq585eTuCe",
        "number": 8622,
        "title": "use node.text  instead of node.source_text",
        "user": {
            "login": "AlexZhangji",
            "id": 3280924,
            "node_id": "MDQ6VXNlcjMyODA5MjQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3280924?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AlexZhangji",
            "html_url": "https://github.com/AlexZhangji",
            "followers_url": "https://api.github.com/users/AlexZhangji/followers",
            "following_url": "https://api.github.com/users/AlexZhangji/following{/other_user}",
            "gists_url": "https://api.github.com/users/AlexZhangji/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AlexZhangji/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AlexZhangji/subscriptions",
            "organizations_url": "https://api.github.com/users/AlexZhangji/orgs",
            "repos_url": "https://api.github.com/users/AlexZhangji/repos",
            "events_url": "https://api.github.com/users/AlexZhangji/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AlexZhangji/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": {
            "login": "hatianzhang",
            "id": 2142132,
            "node_id": "MDQ6VXNlcjIxNDIxMzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hatianzhang",
            "html_url": "https://github.com/hatianzhang",
            "followers_url": "https://api.github.com/users/hatianzhang/followers",
            "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
            "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
            "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
            "repos_url": "https://api.github.com/users/hatianzhang/repos",
            "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "hatianzhang",
                "id": 2142132,
                "node_id": "MDQ6VXNlcjIxNDIxMzI=",
                "avatar_url": "https://avatars.githubusercontent.com/u/2142132?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/hatianzhang",
                "html_url": "https://github.com/hatianzhang",
                "followers_url": "https://api.github.com/users/hatianzhang/followers",
                "following_url": "https://api.github.com/users/hatianzhang/following{/other_user}",
                "gists_url": "https://api.github.com/users/hatianzhang/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/hatianzhang/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/hatianzhang/subscriptions",
                "organizations_url": "https://api.github.com/users/hatianzhang/orgs",
                "repos_url": "https://api.github.com/users/hatianzhang/repos",
                "events_url": "https://api.github.com/users/hatianzhang/events{/privacy}",
                "received_events_url": "https://api.github.com/users/hatianzhang/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-11-01T07:59:05Z",
        "updated_at": "2023-11-01T15:49:09Z",
        "closed_at": "2023-11-01T15:49:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8622",
            "html_url": "https://github.com/run-llama/llama_index/pull/8622",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8622.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8622.patch",
            "merged_at": "2023-11-01T15:49:08Z"
        },
        "body": "Quick and simple fix for Benchmark notebook. \r\nUse node.text instead of node.source_text.\r\n\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8622/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8622/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8621",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8621/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8621/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8621/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8621",
        "id": 1971824204,
        "node_id": "I_kwDOIWuq5851h6ZM",
        "number": 8621,
        "title": "[Question]: About Graph persist",
        "user": {
            "login": "SCUT-ChenBD",
            "id": 49072146,
            "node_id": "MDQ6VXNlcjQ5MDcyMTQ2",
            "avatar_url": "https://avatars.githubusercontent.com/u/49072146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/SCUT-ChenBD",
            "html_url": "https://github.com/SCUT-ChenBD",
            "followers_url": "https://api.github.com/users/SCUT-ChenBD/followers",
            "following_url": "https://api.github.com/users/SCUT-ChenBD/following{/other_user}",
            "gists_url": "https://api.github.com/users/SCUT-ChenBD/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/SCUT-ChenBD/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/SCUT-ChenBD/subscriptions",
            "organizations_url": "https://api.github.com/users/SCUT-ChenBD/orgs",
            "repos_url": "https://api.github.com/users/SCUT-ChenBD/repos",
            "events_url": "https://api.github.com/users/SCUT-ChenBD/events{/privacy}",
            "received_events_url": "https://api.github.com/users/SCUT-ChenBD/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-01T07:04:42Z",
        "updated_at": "2023-11-01T07:20:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI have ten documents, for each document I built a tree index and saved each index in disk using \"storage_context.persist\". My requirement is how to load these saved tree indexes and build a vector index based on them to get a graph? And after the construction is completed, save the graph for next time use.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8621/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8621/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8620",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8620/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8620/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8620/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8620",
        "id": 1971792358,
        "node_id": "PR_kwDOIWuq585eTZGk",
        "number": 8620,
        "title": "Update missing changelog and fix typing",
        "user": {
            "login": "Disiok",
            "id": 5567282,
            "node_id": "MDQ6VXNlcjU1NjcyODI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5567282?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Disiok",
            "html_url": "https://github.com/Disiok",
            "followers_url": "https://api.github.com/users/Disiok/followers",
            "following_url": "https://api.github.com/users/Disiok/following{/other_user}",
            "gists_url": "https://api.github.com/users/Disiok/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Disiok/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Disiok/subscriptions",
            "organizations_url": "https://api.github.com/users/Disiok/orgs",
            "repos_url": "https://api.github.com/users/Disiok/repos",
            "events_url": "https://api.github.com/users/Disiok/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Disiok/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-11-01T06:35:13Z",
        "updated_at": "2023-11-01T06:40:49Z",
        "closed_at": "2023-11-01T06:40:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8620",
            "html_url": "https://github.com/run-llama/llama_index/pull/8620",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8620.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8620.patch",
            "merged_at": "2023-11-01T06:40:48Z"
        },
        "body": "# Description\r\n\r\nUpdate missing changelog and fix typing",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8620/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8620/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8618",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8618/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8618/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8618/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8618",
        "id": 1971758512,
        "node_id": "I_kwDOIWuq5851hqWw",
        "number": 8618,
        "title": "[Question]: stream\u4e3atrue\u5982\u4f55\u5728\u8f93\u51fa\u7684\u65f6\u5019\u5148\u8fdb\u884c\u67e5\u8be2\u548c\u54cd\u5e94\u7684\u8bc4\u4f30\uff0c\u800c\u4e0d\u5f71\u54cd\u67e5\u8be2\u6548\u7387\uff0c\u73b0\u5728\u9700\u8981stream\u54cd\u5e94\u5b8c\u6210\u540e\uff0c\u624d\u80fd\u8bc4\u4f30\uff0c\u5728\u6839\u636e\u8bc4\u4f30\u7ed3\u679c\u54cd\u5e94",
        "user": {
            "login": "rzechen",
            "id": 24729413,
            "node_id": "MDQ6VXNlcjI0NzI5NDEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/24729413?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rzechen",
            "html_url": "https://github.com/rzechen",
            "followers_url": "https://api.github.com/users/rzechen/followers",
            "following_url": "https://api.github.com/users/rzechen/following{/other_user}",
            "gists_url": "https://api.github.com/users/rzechen/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rzechen/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rzechen/subscriptions",
            "organizations_url": "https://api.github.com/users/rzechen/orgs",
            "repos_url": "https://api.github.com/users/rzechen/repos",
            "events_url": "https://api.github.com/users/rzechen/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rzechen/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-01T06:01:52Z",
        "updated_at": "2023-11-01T06:14:54Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\n<img width=\"752\" alt=\"image\" src=\"https://github.com/run-llama/llama_index/assets/24729413/e2fec6c5-5f08-4cbc-8a7e-d8e6a174249a\">\r\n\r\n<img width=\"732\" alt=\"image\" src=\"https://github.com/run-llama/llama_index/assets/24729413/9d7cc2fc-17fb-424f-b547-6f3214667c51\">\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8618/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8618/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8617",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8617/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8617/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8617/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8617",
        "id": 1971628223,
        "node_id": "PR_kwDOIWuq585eS2Qu",
        "number": 8617,
        "title": "[ONLY TEST PURPOSES] RWKV LLM",
        "user": {
            "login": "EmanuelCampos",
            "id": 16262455,
            "node_id": "MDQ6VXNlcjE2MjYyNDU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/16262455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EmanuelCampos",
            "html_url": "https://github.com/EmanuelCampos",
            "followers_url": "https://api.github.com/users/EmanuelCampos/followers",
            "following_url": "https://api.github.com/users/EmanuelCampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/EmanuelCampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EmanuelCampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EmanuelCampos/subscriptions",
            "organizations_url": "https://api.github.com/users/EmanuelCampos/orgs",
            "repos_url": "https://api.github.com/users/EmanuelCampos/repos",
            "events_url": "https://api.github.com/users/EmanuelCampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EmanuelCampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-11-01T03:26:33Z",
        "updated_at": "2023-11-03T23:15:55Z",
        "closed_at": "2023-11-03T23:15:54Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8617",
            "html_url": "https://github.com/run-llama/llama_index/pull/8617",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8617.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8617.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nThis PR was only a temporary one for those who want to test with the RWKV model, did my first tests without good results unfortunately, but wanna do some more tests and play with other models\r\n\r\nNote: they still on the training/testing phase, so it's relatively new with a lot of improvements to do\r\n\r\nA space to play with the model without RAG: https://huggingface.co/spaces/BlinkDL/ChatRWKV-gradio\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Test of a model\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [ ] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [ ] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8617/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8617/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8616",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8616/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8616/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8616/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8616",
        "id": 1971585449,
        "node_id": "I_kwDOIWuq5851hAGp",
        "number": 8616,
        "title": "[Question]: How to store embeddings into Postgres database",
        "user": {
            "login": "sarahwooders",
            "id": 8505980,
            "node_id": "MDQ6VXNlcjg1MDU5ODA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8505980?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sarahwooders",
            "html_url": "https://github.com/sarahwooders",
            "followers_url": "https://api.github.com/users/sarahwooders/followers",
            "following_url": "https://api.github.com/users/sarahwooders/following{/other_user}",
            "gists_url": "https://api.github.com/users/sarahwooders/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sarahwooders/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sarahwooders/subscriptions",
            "organizations_url": "https://api.github.com/users/sarahwooders/orgs",
            "repos_url": "https://api.github.com/users/sarahwooders/repos",
            "events_url": "https://api.github.com/users/sarahwooders/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sarahwooders/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-11-01T02:34:00Z",
        "updated_at": "2023-11-01T03:29:32Z",
        "closed_at": "2023-11-01T03:29:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI am trying to use Llama Index to load data from a directory, computing embeddings, and save it to a Postgres database for retrieval across sessions. I am following this example for Postgres with Llama Index: https://gpt-index.readthedocs.io/en/latest/examples/vector_stores/postgres.html\r\n\r\nHowever, when I query the table in Postgres created by Llama Index, the table is empty. I'm a bit confused because all the documentation on persisting an index relates to persisting on local disk, however I would like to have the index saved on my remove database instance. Is there an additional step required to ensure that index data is saved to the DB? ",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8616/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8616/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8615",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8615/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8615/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8615/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8615",
        "id": 1971476000,
        "node_id": "I_kwDOIWuq5851glYg",
        "number": 8615,
        "title": "[Bug]: Asking for OpenAI key after loading index from disc.",
        "user": {
            "login": "AnuragSa",
            "id": 15018852,
            "node_id": "MDQ6VXNlcjE1MDE4ODUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/15018852?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AnuragSa",
            "html_url": "https://github.com/AnuragSa",
            "followers_url": "https://api.github.com/users/AnuragSa/followers",
            "following_url": "https://api.github.com/users/AnuragSa/following{/other_user}",
            "gists_url": "https://api.github.com/users/AnuragSa/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AnuragSa/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AnuragSa/subscriptions",
            "organizations_url": "https://api.github.com/users/AnuragSa/orgs",
            "repos_url": "https://api.github.com/users/AnuragSa/repos",
            "events_url": "https://api.github.com/users/AnuragSa/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AnuragSa/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 14,
        "created_at": "2023-11-01T00:21:39Z",
        "updated_at": "2023-11-09T04:26:47Z",
        "closed_at": "2023-11-07T15:50:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nI am using AzureOpenAI embedding and llm which is set in ServiceContext. Once the index is generated, it is persisted to a local folder. While loading index from storage, it asks for OpenAI key when I have already configured it to use AzureOpenAI as the llm. \r\nThe issue occurs on line 47. It works fine when the index is created for the first time.\r\n\r\n<img width=\"1177\" alt=\"Screenshot 2023-10-31 at 8 13 46\u202fPM\" src=\"https://github.com/run-llama/llama_index/assets/15018852/e414a839-f1c1-438e-b28e-116e4c88bf25\">\r\n\r\n\r\n### Version\r\n\r\n0.8.56\r\n\r\n### Steps to Reproduce\r\n\r\nRun the file. Index is created fine using AzureOpenAi llm and embeddings. When run again, after loading index from storage, the issue occurs.\r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n```shell\r\nError Log:\r\nTraceback (most recent call last):\r\n  File \"/Users/anurag/Anurag Work/Coding/everything-ai/.venv/lib/python3.11/site-packages/llama_index/llms/utils.py\", line 20, in resolve_llm\r\n    llm = OpenAI()\r\n          ^^^^^^^^\r\n  File \"/Users/anurag/Anurag Work/Coding/everything-ai/.venv/lib/python3.11/site-packages/llama_index/llms/openai.py\", line 92, in __init__\r\n    api_key, api_type, api_base, api_version = resolve_openai_credentials(\r\n                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/anurag/Anurag Work/Coding/everything-ai/.venv/lib/python3.11/site-packages/llama_index/llms/openai_utils.py\", line 297, in resolve_openai_credentials\r\n    raise ValueError(MISSING_API_KEY_ERROR_MESSAGE)\r\nValueError: No API key found for OpenAI.\r\nPlease set either the OPENAI_API_KEY environment variable or openai.api_key prior to initialization.\r\nAPI keys can be found or created at https://platform.openai.com/account/api-keys\r\n\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"/Users/anurag/Anurag Work/Coding/everything-ai/llmaindex-pdf/main.py\", line 47, in <module>\r\n    index = load_index_from_storage(storage_context)\r\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/anurag/Anurag Work/Coding/everything-ai/.venv/lib/python3.11/site-packages/llama_index/indices/loading.py\", line 33, in load_index_from_storage\r\n    indices = load_indices_from_storage(storage_context, index_ids=index_ids, **kwargs)\r\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/anurag/Anurag Work/Coding/everything-ai/.venv/lib/python3.11/site-packages/llama_index/indices/loading.py\", line 78, in load_indices_from_storage\r\n    index = index_cls(\r\n            ^^^^^^^^^^\r\n  File \"/Users/anurag/Anurag Work/Coding/everything-ai/.venv/lib/python3.11/site-packages/llama_index/indices/vector_store/base.py\", line 49, in __init__\r\n    super().__init__(\r\n  File \"/Users/anurag/Anurag Work/Coding/everything-ai/.venv/lib/python3.11/site-packages/llama_index/indices/base.py\", line 61, in __init__\r\n    self._service_context = service_context or ServiceContext.from_defaults()\r\n                                               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"/Users/anurag/Anurag Work/Coding/everything-ai/.venv/lib/python3.11/site-packages/llama_index/indices/service_context.py\", line 157, in from_defaults\r\n    llm_predictor = llm_predictor or LLMPredictor(\r\n                                     ^^^^^^^^^^^^^\r\n  File \"/Users/anurag/Anurag Work/Coding/everything-ai/.venv/lib/python3.11/site-packages/llama_index/llm_predictor/base.py\", line 92, in __init__\r\n    self._llm = resolve_llm(llm)\r\n                ^^^^^^^^^^^^^^^^\r\n  File \"/Users/anurag/Anurag Work/Coding/everything-ai/.venv/lib/python3.11/site-packages/llama_index/llms/utils.py\", line 22, in resolve_llm\r\n    raise ValueError(\r\nValueError: ******\r\nCould not load OpenAI model. If you intended to use OpenAI, please check your OPENAI_API_KEY.\r\nOriginal error:\r\nNo API key found for OpenAI.\r\nPlease set either the OPENAI_API_KEY environment variable or openai.api_key prior to initialization.\r\nAPI keys can be found or created at https://platform.openai.com/account/api-keys\r\n\r\nTo disable the LLM entirely, set llm=None.\r\n******\r\n```\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8615/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8615/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8613",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8613/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8613/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8613/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8613",
        "id": 1971429836,
        "node_id": "I_kwDOIWuq5851gaHM",
        "number": 8613,
        "title": "Multi-documnet RAG",
        "user": {
            "login": "snassimr",
            "id": 6830626,
            "node_id": "MDQ6VXNlcjY4MzA2MjY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6830626?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/snassimr",
            "html_url": "https://github.com/snassimr",
            "followers_url": "https://api.github.com/users/snassimr/followers",
            "following_url": "https://api.github.com/users/snassimr/following{/other_user}",
            "gists_url": "https://api.github.com/users/snassimr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/snassimr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/snassimr/subscriptions",
            "organizations_url": "https://api.github.com/users/snassimr/orgs",
            "repos_url": "https://api.github.com/users/snassimr/repos",
            "events_url": "https://api.github.com/users/snassimr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/snassimr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-31T23:18:48Z",
        "updated_at": "2023-11-01T06:12:41Z",
        "closed_at": "2023-11-01T06:12:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi , \r\n\r\nI want to try and build multi-document RAG to support questions across several relevant docs.\r\n\r\nI see some good example here [link](https://gpt-index.readthedocs.io/en/v0.6.29/guides/tutorials/building_a_chatbot.html)\r\n\r\nI wonder if there is some another technique for multi-document case . \r\n\r\nNow I am using ReactAgent with several tools.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8613/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8613/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8612",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8612/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8612/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8612/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8612",
        "id": 1971166932,
        "node_id": "PR_kwDOIWuq585eRUAs",
        "number": 8612,
        "title": "patch: prompt engineering docs section",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-31T19:28:44Z",
        "updated_at": "2023-10-31T20:07:51Z",
        "closed_at": "2023-10-31T20:07:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8612",
            "html_url": "https://github.com/run-llama/llama_index/pull/8612",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8612.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8612.patch",
            "merged_at": "2023-10-31T20:07:50Z"
        },
        "body": "meant to patch this in as part of #8600",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8612/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8612/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8611",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8611/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8611/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8611/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8611",
        "id": 1971149686,
        "node_id": "I_kwDOIWuq5851fVt2",
        "number": 8611,
        "title": "[Bug]:  not able to install llama_index libraries on aws lambda and getting timeout error ",
        "user": {
            "login": "akashkumar398",
            "id": 24894328,
            "node_id": "MDQ6VXNlcjI0ODk0MzI4",
            "avatar_url": "https://avatars.githubusercontent.com/u/24894328?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akashkumar398",
            "html_url": "https://github.com/akashkumar398",
            "followers_url": "https://api.github.com/users/akashkumar398/followers",
            "following_url": "https://api.github.com/users/akashkumar398/following{/other_user}",
            "gists_url": "https://api.github.com/users/akashkumar398/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akashkumar398/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akashkumar398/subscriptions",
            "organizations_url": "https://api.github.com/users/akashkumar398/orgs",
            "repos_url": "https://api.github.com/users/akashkumar398/repos",
            "events_url": "https://api.github.com/users/akashkumar398/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akashkumar398/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-31T19:17:08Z",
        "updated_at": "2023-11-01T13:40:33Z",
        "closed_at": "2023-11-01T13:40:10Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\r\n\r\nwhen creating aws lambda using llama_index getting a timeout error\r\n\r\n### Version\r\n\r\nllama_index: 0.8.52\r\n\r\n### Steps to Reproduce\r\n\r\nfrom llama_index import ServiceContext, SQLDatabase\r\nfrom llama_index.llms import OpenAI\r\nfrom llama_index.indices.struct_store.sql_query import NLSQLTableQueryEngine\r\n\r\ntried importing these modules of llama_index resulting in timeout error \r\n\r\n### Relevant Logs/Tracbacks\r\n\r\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8611/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8611/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8609",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8609/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8609/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8609/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8609",
        "id": 1970782091,
        "node_id": "PR_kwDOIWuq585eP_UA",
        "number": 8609,
        "title": "Add Astra DB VectorStore functionality",
        "user": {
            "login": "erichare",
            "id": 700235,
            "node_id": "MDQ6VXNlcjcwMDIzNQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/700235?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/erichare",
            "html_url": "https://github.com/erichare",
            "followers_url": "https://api.github.com/users/erichare/followers",
            "following_url": "https://api.github.com/users/erichare/following{/other_user}",
            "gists_url": "https://api.github.com/users/erichare/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/erichare/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/erichare/subscriptions",
            "organizations_url": "https://api.github.com/users/erichare/orgs",
            "repos_url": "https://api.github.com/users/erichare/repos",
            "events_url": "https://api.github.com/users/erichare/events{/privacy}",
            "received_events_url": "https://api.github.com/users/erichare/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5804135704,
                "node_id": "LA_kwDOIWuq588AAAABWfQVGA",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/vector%20store",
                "name": "vector store",
                "color": "4AE220",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-31T15:54:03Z",
        "updated_at": "2023-11-03T14:43:42Z",
        "closed_at": "2023-11-01T20:03:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8609",
            "html_url": "https://github.com/run-llama/llama_index/pull/8609",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8609.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8609.patch",
            "merged_at": "2023-11-01T20:03:28Z"
        },
        "body": "# Description\r\n\r\nThis adds an `AstraDBVectorStore` class, built upon the `astrapy` client, to support using Astra DB as a backend.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8609/reactions",
            "total_count": 4,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 4,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8609/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8608",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8608/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8608/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8608/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8608",
        "id": 1970601729,
        "node_id": "PR_kwDOIWuq585ePXxk",
        "number": 8608,
        "title": "Update dataType",
        "user": {
            "login": "erika-cardenas",
            "id": 110841617,
            "node_id": "U_kgDOBptPEQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/110841617?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/erika-cardenas",
            "html_url": "https://github.com/erika-cardenas",
            "followers_url": "https://api.github.com/users/erika-cardenas/followers",
            "following_url": "https://api.github.com/users/erika-cardenas/following{/other_user}",
            "gists_url": "https://api.github.com/users/erika-cardenas/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/erika-cardenas/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/erika-cardenas/subscriptions",
            "organizations_url": "https://api.github.com/users/erika-cardenas/orgs",
            "repos_url": "https://api.github.com/users/erika-cardenas/repos",
            "events_url": "https://api.github.com/users/erika-cardenas/events{/privacy}",
            "received_events_url": "https://api.github.com/users/erika-cardenas/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-31T14:29:15Z",
        "updated_at": "2023-11-02T14:04:27Z",
        "closed_at": "2023-11-01T01:00:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8608",
            "html_url": "https://github.com/run-llama/llama_index/pull/8608",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8608.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8608.patch",
            "merged_at": "2023-11-01T01:00:59Z"
        },
        "body": "# Description\r\nChanged the `string` value to `text` dataType in Weaviate.\r\n\r\nFixes #8537\r\n\r\n## Type of Change\r\n- [x] Bug fix \r\n\r\n# How Has This Been Tested?\r\n- [x] I stared at the code and made sure it makes sense",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8608/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8608/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8607",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8607/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8607/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8607/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8607",
        "id": 1970582357,
        "node_id": "I_kwDOIWuq5851dLNV",
        "number": 8607,
        "title": "[Bug]: Multi-Document Agents throws InvalidRequestError: Unrecognized request argument supplied: functions",
        "user": {
            "login": "akshaydigheQ",
            "id": 88717032,
            "node_id": "MDQ6VXNlcjg4NzE3MDMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/88717032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akshaydigheQ",
            "html_url": "https://github.com/akshaydigheQ",
            "followers_url": "https://api.github.com/users/akshaydigheQ/followers",
            "following_url": "https://api.github.com/users/akshaydigheQ/following{/other_user}",
            "gists_url": "https://api.github.com/users/akshaydigheQ/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akshaydigheQ/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akshaydigheQ/subscriptions",
            "organizations_url": "https://api.github.com/users/akshaydigheQ/orgs",
            "repos_url": "https://api.github.com/users/akshaydigheQ/repos",
            "events_url": "https://api.github.com/users/akshaydigheQ/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akshaydigheQ/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-31T14:20:08Z",
        "updated_at": "2023-11-07T07:21:58Z",
        "closed_at": "2023-11-07T07:21:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Bug Description\n\nMulti-Documents agent example in llamaindex documentation(https://docs.llamaindex.ai/en/latest/examples/agent/multi_document_agents-v1.html) gives \"Unrecognized request argument supplied: functions\" error.\r\nTried different versions of llamaindex from 0.8.48 to latest ones.\r\nInitially it gave me error that engine or deployment_id is required. I resolved this error by making change in source code. That is by adding engine as argument in openai/api_resources/chat_completion.py. After this change i get above mentioned error when i execute \"top_agent.query()\"\r\n\r\n\n\n### Version\n\n0.8.56\n\n### Steps to Reproduce\n\nhttps://docs.llamaindex.ai/en/latest/examples/agent/multi_document_agents-v1.html\r\n\r\nGetting error while executing top_agent.query()\n\n### Relevant Logs/Tracbacks\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8607/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8607/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8606",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8606/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8606/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8606/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8606",
        "id": 1970502948,
        "node_id": "I_kwDOIWuq5851c30k",
        "number": 8606,
        "title": "[Question]: QuestionGeneration bias?",
        "user": {
            "login": "austinmw",
            "id": 12224358,
            "node_id": "MDQ6VXNlcjEyMjI0MzU4",
            "avatar_url": "https://avatars.githubusercontent.com/u/12224358?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/austinmw",
            "html_url": "https://github.com/austinmw",
            "followers_url": "https://api.github.com/users/austinmw/followers",
            "following_url": "https://api.github.com/users/austinmw/following{/other_user}",
            "gists_url": "https://api.github.com/users/austinmw/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/austinmw/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/austinmw/subscriptions",
            "organizations_url": "https://api.github.com/users/austinmw/orgs",
            "repos_url": "https://api.github.com/users/austinmw/repos",
            "events_url": "https://api.github.com/users/austinmw/events{/privacy}",
            "received_events_url": "https://api.github.com/users/austinmw/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "closed",
        "locked": true,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-31T13:41:29Z",
        "updated_at": "2023-10-31T16:26:52Z",
        "closed_at": "2023-10-31T16:26:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHi, I recently was checking out [QuestionGeneration](https://docs.llamaindex.ai/en/stable/examples/evaluation/QuestionGeneration.html).\r\n\r\n I'm curious, when evaluating multiple different LLMs for a RAG system, would you expect performance to be biased toward promoting the same LLM that was used to generate Q/A pairs?\r\n\r\nFor example if I use GPT-3.5 to generate Q/A pairs, then compare overall RAG performance with GPT-3.5 vs. Claude-V2, would you expect there to be a bias towards GPT-3.5 performing better, since it was also used to generate the Q/A pairs?\r\n\r\n(The RAG performance metrics I'm currently exploring are Context Precision, Context Recall, Faithfulness and Answer Relevancy from the [Ragas](https://docs.ragas.io/en/latest/concepts/metrics/index.html) library.)",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8606/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8606/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8605",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8605/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8605/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8605/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8605",
        "id": 1970412542,
        "node_id": "I_kwDOIWuq5851chv-",
        "number": 8605,
        "title": "[Feature Request]: Implementation of Opensearch hybrid search",
        "user": {
            "login": "spreeni",
            "id": 35889034,
            "node_id": "MDQ6VXNlcjM1ODg5MDM0",
            "avatar_url": "https://avatars.githubusercontent.com/u/35889034?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/spreeni",
            "html_url": "https://github.com/spreeni",
            "followers_url": "https://api.github.com/users/spreeni/followers",
            "following_url": "https://api.github.com/users/spreeni/following{/other_user}",
            "gists_url": "https://api.github.com/users/spreeni/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/spreeni/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/spreeni/subscriptions",
            "organizations_url": "https://api.github.com/users/spreeni/orgs",
            "repos_url": "https://api.github.com/users/spreeni/repos",
            "events_url": "https://api.github.com/users/spreeni/events{/privacy}",
            "received_events_url": "https://api.github.com/users/spreeni/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            },
            {
                "id": 6129428377,
                "node_id": "LA_kwDOIWuq588AAAABbVenmQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/request%20contribution%20board",
                "name": "request contribution board",
                "color": "D93F0B",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-31T12:55:15Z",
        "updated_at": "2023-12-11T16:55:35Z",
        "closed_at": "2023-12-11T16:55:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Feature Description\n\nOpensearch supports an internal [hybrid query](https://opensearch.org/docs/latest/query-dsl/compound/hybrid/) since version 2.10. It would be nice to have this as a `vector_store_query_mode` in the `OpensearchVectorStore` as e.g. for [Weaviate](https://docs.llamaindex.ai/en/stable/examples/vector_stores/WeaviateIndexDemo-Hybrid.html).\r\n\r\nIn case this is too limiting on the usable Opensearch versions, a possibility to do default BM25 queries to Opensearch from within Llamaindex could also suffice. If I see it correctly, this has to be implemented in a custom approach as of now, which makes a custom hybrid search implementation cumbersome.\r\n\r\nCorrect me if I did not see the correct sources, I am just exploring Llamaindex and like it otherwise quite a bit :)\n\n### Reason\n\nI think it is a rather new feature in Opensearch, which is why it is not part of Llamaindex yet. The workaround would be currently to use a vector search in Llamaindex and do another query from `opensearch-py`, and then merge these results. This would be nice to all be kept within Llamaindex.\n\n### Value of Feature\n\nIf I see it correctly, this has to be implemented in a very custom approach as of now, which makes a hybrid search implementation cumbersome.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8605/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8605/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8604",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8604/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8604/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8604/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8604",
        "id": 1970225825,
        "node_id": "I_kwDOIWuq5851b0Kh",
        "number": 8604,
        "title": "[Question]: Is it possible to have the agent not interpret FUNCTION tool output?",
        "user": {
            "login": "ElioErrico",
            "id": 143315119,
            "node_id": "U_kgDOCIrQrw",
            "avatar_url": "https://avatars.githubusercontent.com/u/143315119?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ElioErrico",
            "html_url": "https://github.com/ElioErrico",
            "followers_url": "https://api.github.com/users/ElioErrico/followers",
            "following_url": "https://api.github.com/users/ElioErrico/following{/other_user}",
            "gists_url": "https://api.github.com/users/ElioErrico/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ElioErrico/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ElioErrico/subscriptions",
            "organizations_url": "https://api.github.com/users/ElioErrico/orgs",
            "repos_url": "https://api.github.com/users/ElioErrico/repos",
            "events_url": "https://api.github.com/users/ElioErrico/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ElioErrico/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-31T11:17:51Z",
        "updated_at": "2023-11-07T15:49:22Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nHello everybody,\r\nthank you again for your support.\r\n\r\nMy question is:\r\nif I write a function tool were the output is a string, here an example:\r\n```\r\n\r\ndef temperature_management(season: str=None, \r\n                           new_air_temperature: float=None,\r\n                           incoming_air_temperature: float=None,\r\n                           extracted_air_temperature: float=None,\r\n                           expelled_air_temperature: float=None) -> str:\r\n    \r\n    \"\"\"\r\n    This tool should be used when the user asks a question related to the four temperatures,\r\n    it evaluates temperatures based on seasonality and the provided temperature values.\r\n    The user will provide either 'winter' or 'summer' seasonality, \r\n    the new air temperature, the expelled air temperature, the extracted air temperature, and the expelled air temperature.\r\n\r\n    Args:\r\n        season: \"winter\" or \"summer\"\r\n        new_air_temperature: New air temperature\r\n        incoming_air_temperature: Incoming air temperature\r\n        extracted_air_temperature: Extracted air temperature\r\n        expelled_air_temperature: Expelled air temperature\r\n    \"\"\"\r\n\r\n    code\r\n    ... the output of this code is a string containg informations of what the user have to do ...\r\n    return \" you have to do this and this\"\r\n\r\ntemperature_management_tool = FunctionTool.from_defaults(fn=temperature_management)\r\n\r\n```\r\n\r\nIs it possible to have the agent to not interpret this answer but just to copy the output without adding personal interpretation?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8604/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8604/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8603",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8603/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8603/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8603/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8603",
        "id": 1970182761,
        "node_id": "PR_kwDOIWuq585eN7K8",
        "number": 8603,
        "title": "Update link to documentation",
        "user": {
            "login": "limick",
            "id": 6831616,
            "node_id": "MDQ6VXNlcjY4MzE2MTY=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6831616?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/limick",
            "html_url": "https://github.com/limick",
            "followers_url": "https://api.github.com/users/limick/followers",
            "following_url": "https://api.github.com/users/limick/following{/other_user}",
            "gists_url": "https://api.github.com/users/limick/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/limick/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/limick/subscriptions",
            "organizations_url": "https://api.github.com/users/limick/orgs",
            "repos_url": "https://api.github.com/users/limick/repos",
            "events_url": "https://api.github.com/users/limick/events{/privacy}",
            "received_events_url": "https://api.github.com/users/limick/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-31T10:53:19Z",
        "updated_at": "2023-11-01T01:07:32Z",
        "closed_at": "2023-11-01T01:07:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8603",
            "html_url": "https://github.com/run-llama/llama_index/pull/8603",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8603.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8603.patch",
            "merged_at": "2023-11-01T01:07:32Z"
        },
        "body": "# Description\r\n\r\nThe README links to documentation under https://gpt-index.readthedocs.io/ . This PR updates it to https://docs.llamaindex.ai/en/stable/.\r\n\r\n## Type of Change\r\n\r\nREADME only.\r\n\r\n# How Has This Been Tested?\r\n\r\nManually compared websites under old and new URL and concluded they're the same.\r\n\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\nNot relevant",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8603/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8603/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8602",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8602/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8602/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8602/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8602",
        "id": 1970106087,
        "node_id": "I_kwDOIWuq5851bW7n",
        "number": 8602,
        "title": "[Question]: Refresh hash after metadata update",
        "user": {
            "login": "matthias",
            "id": 16365,
            "node_id": "MDQ6VXNlcjE2MzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/16365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/matthias",
            "html_url": "https://github.com/matthias",
            "followers_url": "https://api.github.com/users/matthias/followers",
            "following_url": "https://api.github.com/users/matthias/following{/other_user}",
            "gists_url": "https://api.github.com/users/matthias/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/matthias/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/matthias/subscriptions",
            "organizations_url": "https://api.github.com/users/matthias/orgs",
            "repos_url": "https://api.github.com/users/matthias/repos",
            "events_url": "https://api.github.com/users/matthias/events{/privacy}",
            "received_events_url": "https://api.github.com/users/matthias/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318865,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/bug",
                "name": "bug",
                "color": "d73a4a",
                "default": true,
                "description": "Something isn't working"
            },
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "nerdai",
                "id": 92402603,
                "node_id": "U_kgDOBYHzqw",
                "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/nerdai",
                "html_url": "https://github.com/nerdai",
                "followers_url": "https://api.github.com/users/nerdai/followers",
                "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
                "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
                "organizations_url": "https://api.github.com/users/nerdai/orgs",
                "repos_url": "https://api.github.com/users/nerdai/repos",
                "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
                "received_events_url": "https://api.github.com/users/nerdai/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-31T10:14:03Z",
        "updated_at": "2023-11-07T15:48:55Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI would like to use refresh_ref_docs to update meta_data.\r\nBut the hash isn't updated after I change the metadata.\r\n\r\nCould be a feature request / bug report ... or am I missing anything\r\n\r\ningest.py\r\n```Python\r\ndocuments = SimpleDirectoryReader(data_dir, filename_as_id=True).load_data()\r\n\r\nindex = VectorStoreIndex.from_documents(documents)\r\nindex.storage_context.persist(persist_dir=persist_dir)\r\n\r\nindex.refresh_ref_docs(documents)\r\nindex.storage_context.persist(persist_dir=persist_dir)\r\n\r\nprint(index.ref_doc_info)\r\n```\r\n\r\nupdate_metadata.py\r\n```Python\r\ndocuments = SimpleDirectoryReader(data_dir, filename_as_id=True).load_data()\r\n\r\nstorage_context = StorageContext.from_defaults(persist_dir=persist_dir)\r\nindex = load_index_from_storage(storage_context)\r\n\r\ndocuments[0].metadata[\"example\"] = \"foo\"\r\n\r\nindex.refresh_ref_docs(documents)\r\nindex.storage_context.persist(persist_dir=persist_dir)\r\n\r\nprint(index.ref_doc_info)\r\n```\r\n\r\n=> This won't update the nodes, as the hash doesn't get recalculated after I change metadata\r\n\r\nIs this possible?\r\nOtherwise an Document.update_hash() method would be helpful -> or an update_hash() inside refresh_ref_docs()",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8602/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8602/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8601",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8601/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8601/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8601/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8601",
        "id": 1969990220,
        "node_id": "PR_kwDOIWuq585eNQUn",
        "number": 8601,
        "title": "Feature/lm format enforcer integration",
        "user": {
            "login": "noamgat",
            "id": 1331304,
            "node_id": "MDQ6VXNlcjEzMzEzMDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1331304?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/noamgat",
            "html_url": "https://github.com/noamgat",
            "followers_url": "https://api.github.com/users/noamgat/followers",
            "following_url": "https://api.github.com/users/noamgat/following{/other_user}",
            "gists_url": "https://api.github.com/users/noamgat/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/noamgat/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/noamgat/subscriptions",
            "organizations_url": "https://api.github.com/users/noamgat/orgs",
            "repos_url": "https://api.github.com/users/noamgat/repos",
            "events_url": "https://api.github.com/users/noamgat/events{/privacy}",
            "received_events_url": "https://api.github.com/users/noamgat/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-10-31T09:17:51Z",
        "updated_at": "2023-11-02T00:13:19Z",
        "closed_at": "2023-11-02T00:13:18Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8601",
            "html_url": "https://github.com/run-llama/llama_index/pull/8601",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8601.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8601.patch",
            "merged_at": "2023-11-02T00:13:18Z"
        },
        "body": "# Description\r\n\r\nThis PR adds support for [lm-format-enforcer](https://github.com/noamgat/lm-format-enforcer) to llama_index. \r\n\r\n![image](https://raw.githubusercontent.com/noamgat/lm-format-enforcer/main/docs/Intro.webp)\r\n\r\nI started work on this after a discussion on Discord.\r\nThe library is comparable to guidance (and the integration + example notebook is similar) but has very different LLM backend coverage - it supports local LLMs - `HuggingFaceLLM` and `LlamaCPP`. It also takes a different technological approach which reduces hallucinations on some LLMs.\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [x] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\nI looked at the unit tests, and the ones for HuggingFaceLLM and LlamaCPP avoid using the actual backbone and mock it away. This would make all of the contributions of the classes here redundant, so I think an end-to-end notebook is the correct way to test.\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [x] I have commented my code, particularly in hard-to-understand areas\r\n- [x] I have made corresponding changes to the documentation\r\n- [x] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [x] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8601/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 1,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8601/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8600",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8600/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8600/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8600/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8600",
        "id": 1969803407,
        "node_id": "PR_kwDOIWuq585eMn5o",
        "number": 8600,
        "title": "add prompts as top-level module guide ",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-31T07:19:55Z",
        "updated_at": "2023-10-31T16:32:49Z",
        "closed_at": "2023-10-31T16:32:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8600",
            "html_url": "https://github.com/run-llama/llama_index/pull/8600",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8600.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8600.patch",
            "merged_at": "2023-10-31T16:32:48Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8600/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8600/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8599",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8599/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8599/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8599/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8599",
        "id": 1969636002,
        "node_id": "I_kwDOIWuq5851ZkKi",
        "number": 8599,
        "title": "[Question]: How does correctness Evaluation work?",
        "user": {
            "login": "vishhvak",
            "id": 30690855,
            "node_id": "MDQ6VXNlcjMwNjkwODU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/30690855?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishhvak",
            "html_url": "https://github.com/vishhvak",
            "followers_url": "https://api.github.com/users/vishhvak/followers",
            "following_url": "https://api.github.com/users/vishhvak/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishhvak/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishhvak/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishhvak/subscriptions",
            "organizations_url": "https://api.github.com/users/vishhvak/orgs",
            "repos_url": "https://api.github.com/users/vishhvak/repos",
            "events_url": "https://api.github.com/users/vishhvak/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishhvak/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-31T04:48:14Z",
        "updated_at": "2023-10-31T05:11:26Z",
        "closed_at": null,
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [ ] I have searched both the documentation and discord for an answer.\n\n### Question\n\nI'd like to understand how the correctness evaluator works, and how I should be interpreting the score. What is the range of the score?",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8599/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8599/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8597",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8597/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8597/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8597/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8597",
        "id": 1969621060,
        "node_id": "PR_kwDOIWuq585eMAZ7",
        "number": 8597,
        "title": "[version] bump version to 0.8.56",
        "user": {
            "login": "jerryjliu",
            "id": 4858925,
            "node_id": "MDQ6VXNlcjQ4NTg5MjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/4858925?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jerryjliu",
            "html_url": "https://github.com/jerryjliu",
            "followers_url": "https://api.github.com/users/jerryjliu/followers",
            "following_url": "https://api.github.com/users/jerryjliu/following{/other_user}",
            "gists_url": "https://api.github.com/users/jerryjliu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jerryjliu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jerryjliu/subscriptions",
            "organizations_url": "https://api.github.com/users/jerryjliu/orgs",
            "repos_url": "https://api.github.com/users/jerryjliu/repos",
            "events_url": "https://api.github.com/users/jerryjliu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jerryjliu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-31T04:28:44Z",
        "updated_at": "2023-10-31T06:36:13Z",
        "closed_at": "2023-10-31T06:36:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8597",
            "html_url": "https://github.com/run-llama/llama_index/pull/8597",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8597.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8597.patch",
            "merged_at": "2023-10-31T06:36:12Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8597/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8597/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8596",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8596/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8596/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8596/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8596",
        "id": 1969452898,
        "node_id": "PR_kwDOIWuq585eLcax",
        "number": 8596,
        "title": "Example fine tuning evaluator",
        "user": {
            "login": "nerdai",
            "id": 92402603,
            "node_id": "U_kgDOBYHzqw",
            "avatar_url": "https://avatars.githubusercontent.com/u/92402603?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nerdai",
            "html_url": "https://github.com/nerdai",
            "followers_url": "https://api.github.com/users/nerdai/followers",
            "following_url": "https://api.github.com/users/nerdai/following{/other_user}",
            "gists_url": "https://api.github.com/users/nerdai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nerdai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nerdai/subscriptions",
            "organizations_url": "https://api.github.com/users/nerdai/orgs",
            "repos_url": "https://api.github.com/users/nerdai/repos",
            "events_url": "https://api.github.com/users/nerdai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nerdai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-10-31T01:02:35Z",
        "updated_at": "2023-11-01T23:02:12Z",
        "closed_at": "2023-11-01T23:02:06Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8596",
            "html_url": "https://github.com/run-llama/llama_index/pull/8596",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8596.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8596.patch",
            "merged_at": "2023-11-01T23:02:06Z"
        },
        "body": "# Description\r\n\r\n![image](https://github.com/run-llama/llama_index/assets/92402603/aed10c9b-3298-4a40-8873-9d061e6aadfd)\r\n_Very small sample but its good nonetheless to see fine-tune is better than otherwise._\r\n\r\nAdded an example for fine-tuning an evaluator. There are still things left to do before I think this example is publishable but the overall process of creating a fine-tuning dataset, fine-tuning, and comparing fine-tuned models with baseline has been established.\r\n\r\nMore details of the process\r\n- To create dataset:\r\n    - I currently use `paul_graham_essay.txt` to generate questions\r\n    - I build 3 RAG systems on the same vector store but use 3 different HuggingFaceLLMs (Mistral-7b, Falcon-7b, and Llama2-7b) to generate answers against the questions\r\n    - I then perform pairwise comparison (using the prompt from LLM-As-A-Judge paper, as I found this to be more consistent) using GPT-4\r\n    - I carefully construct the fine-tuning-dataset by using the appropriate `OpenAIFineTuningHandler` when taking into account flipping for reducing position bias\r\n- To fine-tune a GPT-3.5 Judge, I use `OpenAIFinetuneEngine` on the GPT-4 examples\r\n- For final comparisons, I compute the agreement rate between FineTuned-GPT-3.5 and GPT-4 judges as well as that for (not fine-tuned) GPT-3.5 and GPT-4 Judges.\r\n\r\nTODO:\r\n- Probably should either update current `PairwiseComparisonEvaluator` or add another one that uses LLM-As-A-Judge prompt (adapted slightly here for the RAG evaluation)\r\n- The way I select between the `OpenAIFineTuningHandler`s during training set creation is a bit hacky. Gotta clean this up and potentially spec something out for a better, longer-term fix.\r\n- Use a different dataset and actually split into train/test sets; and report final metrics on the test set\r\n- (Nice to have) Can compute other metrics like model win-rate between Mistral, Falcon and LLama-2\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [x] This change requires a documentation update\r\n- [x] New example notebook \r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new notebook (that tests end-to-end)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8596/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 2,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8596/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8595",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8595/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8595/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8595/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8595",
        "id": 1969324370,
        "node_id": "I_kwDOIWuq5851YYFS",
        "number": 8595,
        "title": "[Documentation]: broken links (404)",
        "user": {
            "login": "ronaldpetty",
            "id": 1390435,
            "node_id": "MDQ6VXNlcjEzOTA0MzU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1390435?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ronaldpetty",
            "html_url": "https://github.com/ronaldpetty",
            "followers_url": "https://api.github.com/users/ronaldpetty/followers",
            "following_url": "https://api.github.com/users/ronaldpetty/following{/other_user}",
            "gists_url": "https://api.github.com/users/ronaldpetty/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ronaldpetty/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ronaldpetty/subscriptions",
            "organizations_url": "https://api.github.com/users/ronaldpetty/orgs",
            "repos_url": "https://api.github.com/users/ronaldpetty/repos",
            "events_url": "https://api.github.com/users/ronaldpetty/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ronaldpetty/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318866,
                "node_id": "LA_kwDOIWuq588AAAABGzNfUg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            },
            {
                "id": 5584919374,
                "node_id": "LA_kwDOIWuq588AAAABTOMbTg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/triage",
                "name": "triage",
                "color": "FBCA04",
                "default": false,
                "description": "Issue needs to be triaged/prioritized"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-10-30T22:29:16Z",
        "updated_at": "2023-11-06T02:56:07Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Documentation Issue Description\n\nFrom https://docs.llamaindex.ai/en/stable/, these do not seem to work:\r\n\r\n* \"how to read these docs\" - https://docs.llamaindex.ai/getting_started/reading.html\r\n* The \"edit\" button - https://github.com/run-llama/llama_index/edit/031b3518f3f89c5bd2837ecea77028758358536d/docs/index.rst\r\n\r\nTook a swing to edit on fork, but I didn't RST renderer at hand. Compared to other links, it seems to be missing the branch \"en/stable\".\r\n\n\n### Documentation Link\n\nhttps://docs.llamaindex.ai/en/stable/",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8595/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8595/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8594",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8594/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8594/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8594/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8594",
        "id": 1969183946,
        "node_id": "PR_kwDOIWuq585eKhRJ",
        "number": 8594,
        "title": "Bump langchain from 0.0.320 to 0.0.325",
        "user": {
            "login": "dependabot[bot]",
            "id": 49699333,
            "node_id": "MDM6Qm90NDk2OTkzMzM=",
            "avatar_url": "https://avatars.githubusercontent.com/in/29110?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dependabot%5Bbot%5D",
            "html_url": "https://github.com/apps/dependabot",
            "followers_url": "https://api.github.com/users/dependabot%5Bbot%5D/followers",
            "following_url": "https://api.github.com/users/dependabot%5Bbot%5D/following{/other_user}",
            "gists_url": "https://api.github.com/users/dependabot%5Bbot%5D/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dependabot%5Bbot%5D/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dependabot%5Bbot%5D/subscriptions",
            "organizations_url": "https://api.github.com/users/dependabot%5Bbot%5D/orgs",
            "repos_url": "https://api.github.com/users/dependabot%5Bbot%5D/repos",
            "events_url": "https://api.github.com/users/dependabot%5Bbot%5D/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dependabot%5Bbot%5D/received_events",
            "type": "Bot",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5152878030,
                "node_id": "LA_kwDOIWuq588AAAABMyKtzg",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/dependencies",
                "name": "dependencies",
                "color": "0366d6",
                "default": false,
                "description": "Pull requests that update a dependency file"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-10-30T20:44:45Z",
        "updated_at": "2023-10-31T03:19:36Z",
        "closed_at": "2023-10-31T03:19:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8594",
            "html_url": "https://github.com/run-llama/llama_index/pull/8594",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8594.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8594.patch",
            "merged_at": "2023-10-31T03:19:35Z"
        },
        "body": "Bumps [langchain](https://github.com/langchain-ai/langchain) from 0.0.320 to 0.0.325.\n<details>\n<summary>Release notes</summary>\n<p><em>Sourced from <a href=\"https://github.com/langchain-ai/langchain/releases\">langchain's releases</a>.</em></p>\n<blockquote>\n<h2>v0.0.325</h2>\n<h2>What's Changed</h2>\n<ul>\n<li>Add template for Pinecone + Multi-Query by <a href=\"https://github.com/rlancemartin\"><code>@\u200brlancemartin</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12353\">langchain-ai/langchain#12353</a></li>\n<li>Docs: Add lcel to combine_docs chains by <a href=\"https://github.com/baskaryan\"><code>@\u200bbaskaryan</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12310\">langchain-ai/langchain#12310</a></li>\n<li>Update multi query template README, ntbk by <a href=\"https://github.com/rlancemartin\"><code>@\u200brlancemartin</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12356\">langchain-ai/langchain#12356</a></li>\n<li>langserve doc by <a href=\"https://github.com/baskaryan\"><code>@\u200bbaskaryan</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12357\">langchain-ai/langchain#12357</a></li>\n<li>E2B tool - Improve description wuth uploaded files info by <a href=\"https://github.com/jakubno\"><code>@\u200bjakubno</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12355\">langchain-ai/langchain#12355</a></li>\n<li>Fix redis vectorfield schema defaults by <a href=\"https://github.com/tylerhutcherson\"><code>@\u200btylerhutcherson</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12223\">langchain-ai/langchain#12223</a></li>\n<li>update chains how to by <a href=\"https://github.com/baskaryan\"><code>@\u200bbaskaryan</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12362\">langchain-ai/langchain#12362</a></li>\n<li>Support Fireworks batching (<a href=\"https://redirect.github.com/langchain-ai/langchain/issues/8\">#8</a>) by <a href=\"https://github.com/ZixinYang\"><code>@\u200bZixinYang</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12052\">langchain-ai/langchain#12052</a></li>\n<li>fix some stuff by <a href=\"https://github.com/hwchase17\"><code>@\u200bhwchase17</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12292\">langchain-ai/langchain#12292</a></li>\n<li>Harrison/improve cli by <a href=\"https://github.com/hwchase17\"><code>@\u200bhwchase17</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12368\">langchain-ai/langchain#12368</a></li>\n<li>Adds linter in templates by <a href=\"https://github.com/jacoblee93\"><code>@\u200bjacoblee93</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12321\">langchain-ai/langchain#12321</a></li>\n<li>Fix langsmith walkthrough doc dataset by <a href=\"https://github.com/lucasc896\"><code>@\u200blucasc896</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12027\">langchain-ai/langchain#12027</a></li>\n<li>Mention other function calling/grammar support by <a href=\"https://github.com/hinthornw\"><code>@\u200bhinthornw</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12369\">langchain-ai/langchain#12369</a></li>\n<li>rm init by <a href=\"https://github.com/baskaryan\"><code>@\u200bbaskaryan</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12374\">langchain-ai/langchain#12374</a></li>\n<li>Fix SupbaseVectoreStore write operation timeout by <a href=\"https://github.com/j1philli\"><code>@\u200bj1philli</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12318\">langchain-ai/langchain#12318</a></li>\n<li>fireworks scheduled integration tests by <a href=\"https://github.com/baskaryan\"><code>@\u200bbaskaryan</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12373\">langchain-ai/langchain#12373</a></li>\n<li>Cohere re-rank template by <a href=\"https://github.com/rlancemartin\"><code>@\u200brlancemartin</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12378\">langchain-ai/langchain#12378</a></li>\n<li>cli fix by <a href=\"https://github.com/efriis\"><code>@\u200befriis</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12380\">langchain-ai/langchain#12380</a></li>\n<li>better lint triggering by <a href=\"https://github.com/baskaryan\"><code>@\u200bbaskaryan</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12376\">langchain-ai/langchain#12376</a></li>\n<li>Minor updates to ReRank template by <a href=\"https://github.com/rlancemartin\"><code>@\u200brlancemartin</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12388\">langchain-ai/langchain#12388</a></li>\n<li>Update broken redis tests by <a href=\"https://github.com/tylerhutcherson\"><code>@\u200btylerhutcherson</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12371\">langchain-ai/langchain#12371</a></li>\n<li>CLI CI 2 by <a href=\"https://github.com/efriis\"><code>@\u200befriis</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12387\">langchain-ai/langchain#12387</a></li>\n<li>add template for hyde by <a href=\"https://github.com/hwchase17\"><code>@\u200bhwchase17</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12390\">langchain-ai/langchain#12390</a></li>\n<li>Wfh/json edit dist by <a href=\"https://github.com/hinthornw\"><code>@\u200bhinthornw</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12361\">langchain-ai/langchain#12361</a></li>\n<li>Fixed some grammatical and Exception types issues by <a href=\"https://github.com/ShorthillsAI\"><code>@\u200bShorthillsAI</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12015\">langchain-ai/langchain#12015</a></li>\n<li>Format Templates by <a href=\"https://github.com/efriis\"><code>@\u200befriis</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12396\">langchain-ai/langchain#12396</a></li>\n<li>Add HTML Title and Page Language into metadata for AsyncHtmlLoader by <a href=\"https://github.com/kkk55596\"><code>@\u200bkkk55596</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/11326\">langchain-ai/langchain#11326</a></li>\n<li>johnsnowlabs embeddings support by <a href=\"https://github.com/C-K-Loan\"><code>@\u200bC-K-Loan</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/11271\">langchain-ai/langchain#11271</a></li>\n<li>Templates CI by <a href=\"https://github.com/efriis\"><code>@\u200befriis</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12313\">langchain-ai/langchain#12313</a></li>\n<li>Wfh/json schema evaluation by <a href=\"https://github.com/hinthornw\"><code>@\u200bhinthornw</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12389\">langchain-ai/langchain#12389</a></li>\n<li>Add space by <a href=\"https://github.com/hinthornw\"><code>@\u200bhinthornw</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12395\">langchain-ai/langchain#12395</a></li>\n<li>Str Evaluator Mapper by <a href=\"https://github.com/hinthornw\"><code>@\u200bhinthornw</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12401\">langchain-ai/langchain#12401</a></li>\n<li>Clean-up template READMEs by <a href=\"https://github.com/rlancemartin\"><code>@\u200brlancemartin</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12403\">langchain-ai/langchain#12403</a></li>\n<li>Mask API key for Aleph Alpha LLM by <a href=\"https://github.com/slangenbach\"><code>@\u200bslangenbach</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12377\">langchain-ai/langchain#12377</a></li>\n<li>fix(openai-callback): completion count logic by <a href=\"https://github.com/mspronesti\"><code>@\u200bmspronesti</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12383\">langchain-ai/langchain#12383</a></li>\n<li>Fix templates typos by <a href=\"https://github.com/dqbd\"><code>@\u200bdqbd</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12428\">langchain-ai/langchain#12428</a></li>\n<li>feat: Add Google Speech to Text API Document Loader by <a href=\"https://github.com/holtskinner\"><code>@\u200bholtskinner</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12298\">langchain-ai/langchain#12298</a></li>\n<li>LLaMA2 with JSON schema support template by <a href=\"https://github.com/rlancemartin\"><code>@\u200brlancemartin</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12435\">langchain-ai/langchain#12435</a></li>\n<li>clean up deprecated agents by <a href=\"https://github.com/hwchase17\"><code>@\u200bhwchase17</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12231\">langchain-ai/langchain#12231</a></li>\n<li>Add invoke example to LLaMA2 function template notebook by <a href=\"https://github.com/rlancemartin\"><code>@\u200brlancemartin</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12437\">langchain-ai/langchain#12437</a></li>\n<li>Deprecate PythonRepl tools and Pandas/Xorbits/Spark DataFrame/Python/CSV agents by <a href=\"https://github.com/eyurtsev\"><code>@\u200beyurtsev</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12427\">langchain-ai/langchain#12427</a></li>\n<li>Bagatur/bump 325 by <a href=\"https://github.com/baskaryan\"><code>@\u200bbaskaryan</code></a> in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12440\">langchain-ai/langchain#12440</a></li>\n</ul>\n<h2>New Contributors</h2>\n<ul>\n<li><a href=\"https://github.com/jakubno\"><code>@\u200bjakubno</code></a> made their first contribution in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12355\">langchain-ai/langchain#12355</a></li>\n<li><a href=\"https://github.com/lucasc896\"><code>@\u200blucasc896</code></a> made their first contribution in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/12027\">langchain-ai/langchain#12027</a></li>\n<li><a href=\"https://github.com/kkk55596\"><code>@\u200bkkk55596</code></a> made their first contribution in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/11326\">langchain-ai/langchain#11326</a></li>\n<li><a href=\"https://github.com/C-K-Loan\"><code>@\u200bC-K-Loan</code></a> made their first contribution in <a href=\"https://redirect.github.com/langchain-ai/langchain/pull/11271\">langchain-ai/langchain#11271</a></li>\n</ul>\n<!-- raw HTML omitted -->\n</blockquote>\n<p>... (truncated)</p>\n</details>\n<details>\n<summary>Commits</summary>\n<ul>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/d12b88557a1c9f37ef3e5a7325b7c73f1388ed9d\"><code>d12b885</code></a> Bagatur/bump 325 (<a href=\"https://redirect.github.com/langchain-ai/langchain/issues/12440\">#12440</a>)</li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/cadfce295f8a33828fc635c2e5ea28b883e5c992\"><code>cadfce2</code></a> Deprecate PythonRepl tools and Pandas/Xorbits/Spark DataFrame/Python/CSV agen...</li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/68e12d34a9c76d1f0f67a17fe464b197415e68b6\"><code>68e12d3</code></a> Add invoke example to LLaMA2 function template notebook (<a href=\"https://redirect.github.com/langchain-ai/langchain/issues/12437\">#12437</a>)</li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/0ca539eb85b5a0f3315f38faeb9b1569cfce9e03\"><code>0ca539e</code></a> Clean up deprecated agents and update <strong>init</strong> in experimental (<a href=\"https://redirect.github.com/langchain-ai/langchain/issues/12231\">#12231</a>)</li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/05bbf943f2d56ebd5a1d67a863fdb2a82f3808af\"><code>05bbf94</code></a> LLaMA2 with JSON schema support template (<a href=\"https://redirect.github.com/langchain-ai/langchain/issues/12435\">#12435</a>)</li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/134f085824c523d6e458091646cf34c3f060a0ac\"><code>134f085</code></a> feat: Add Google Speech to Text API Document Loader (<a href=\"https://redirect.github.com/langchain-ai/langchain/issues/12298\">#12298</a>)</li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/52c194ec3a188f7009408f51f1fd9ecd12befada\"><code>52c194e</code></a> Fix templates typos (<a href=\"https://redirect.github.com/langchain-ai/langchain/issues/12428\">#12428</a>)</li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/c8195769f2beee342b44adb43f058c36ebf950c6\"><code>c819576</code></a> fix(openai-callback): completion count logic (<a href=\"https://redirect.github.com/langchain-ai/langchain/issues/12383\">#12383</a>)</li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/b22da81af8f8317841842c2658cf2b511b4046ff\"><code>b22da81</code></a> Mask API key for Aleph Alpha LLM (<a href=\"https://redirect.github.com/langchain-ai/langchain/issues/12377\">#12377</a>)</li>\n<li><a href=\"https://github.com/langchain-ai/langchain/commit/d6acb3ed7e8338e42cbe25df38072b2bd15e0092\"><code>d6acb3e</code></a> Clean-up template READMEs (<a href=\"https://redirect.github.com/langchain-ai/langchain/issues/12403\">#12403</a>)</li>\n<li>Additional commits viewable in <a href=\"https://github.com/langchain-ai/langchain/compare/v0.0.320...v0.0.325\">compare view</a></li>\n</ul>\n</details>\n<br />\n\n\n[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=langchain&package-manager=pip&previous-version=0.0.320&new-version=0.0.325)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)\n\nDependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.\n\n[//]: # (dependabot-automerge-start)\n[//]: # (dependabot-automerge-end)\n\n---\n\n<details>\n<summary>Dependabot commands and options</summary>\n<br />\n\nYou can trigger Dependabot actions by commenting on this PR:\n- `@dependabot rebase` will rebase this PR\n- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it\n- `@dependabot merge` will merge this PR after your CI passes on it\n- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it\n- `@dependabot cancel merge` will cancel a previously requested merge and block automerging\n- `@dependabot reopen` will reopen this PR if it is closed\n- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually\n- `@dependabot show <dependency name> ignore conditions` will show all of the ignore conditions of the specified dependency\n- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)\n- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)\nYou can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/run-llama/llama_index/network/alerts).\n\n</details>",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8594/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8594/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8593",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8593/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8593/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8593/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8593",
        "id": 1969104371,
        "node_id": "PR_kwDOIWuq585eKPuO",
        "number": 8593,
        "title": "added callbacks to response streams",
        "user": {
            "login": "micahke",
            "id": 2452902,
            "node_id": "MDQ6VXNlcjI0NTI5MDI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2452902?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/micahke",
            "html_url": "https://github.com/micahke",
            "followers_url": "https://api.github.com/users/micahke/followers",
            "following_url": "https://api.github.com/users/micahke/following{/other_user}",
            "gists_url": "https://api.github.com/users/micahke/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/micahke/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/micahke/subscriptions",
            "organizations_url": "https://api.github.com/users/micahke/orgs",
            "repos_url": "https://api.github.com/users/micahke/repos",
            "events_url": "https://api.github.com/users/micahke/events{/privacy}",
            "received_events_url": "https://api.github.com/users/micahke/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-30T19:52:27Z",
        "updated_at": "2023-11-15T04:21:02Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8593",
            "html_url": "https://github.com/run-llama/llama_index/pull/8593",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8593.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8593.patch",
            "merged_at": null
        },
        "body": "# Description\r\n\r\nThis PR adds the ability to specify a callback function for response streams. This means that when using the package, we can get access to the generated text as it comes rather than just handing control to `print_response_stream()`. The updated function takes in a callback function which takes one parameter of string type.\r\n\r\nFixes # (issue)\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [ ] Bug fix (non-breaking change which fixes an issue)\r\n- [x] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nI also tested it with my own project that I'm building and it works. I've put the example usage down below. I can create a notebook if necessary but the change wasn't too big.\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [x] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [x] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n\r\n# Example Usage\r\n\r\n```py\r\nquery_engine = index.as_query_engine(streaming=True)\r\nresponse = query_engine.query(prompt)\r\n\r\nresponse.print_response_stream(lambda text: print(text, end=\"\", flush=True))\r\n```\r\n\r\nor you can provide it a separate callback function.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8593/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8593/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8592",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8592/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8592/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8592/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8592",
        "id": 1969019381,
        "node_id": "I_kwDOIWuq5851XNn1",
        "number": 8592,
        "title": "[Question]: ValueError: No valid JSON found in output:",
        "user": {
            "login": "HardelleBriones",
            "id": 111712687,
            "node_id": "U_kgDOBqiZrw",
            "avatar_url": "https://avatars.githubusercontent.com/u/111712687?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/HardelleBriones",
            "html_url": "https://github.com/HardelleBriones",
            "followers_url": "https://api.github.com/users/HardelleBriones/followers",
            "following_url": "https://api.github.com/users/HardelleBriones/following{/other_user}",
            "gists_url": "https://api.github.com/users/HardelleBriones/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/HardelleBriones/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/HardelleBriones/subscriptions",
            "organizations_url": "https://api.github.com/users/HardelleBriones/orgs",
            "repos_url": "https://api.github.com/users/HardelleBriones/repos",
            "events_url": "https://api.github.com/users/HardelleBriones/events{/privacy}",
            "received_events_url": "https://api.github.com/users/HardelleBriones/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318877,
                "node_id": "LA_kwDOIWuq588AAAABGzNfXQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/question",
                "name": "question",
                "color": "d876e3",
                "default": true,
                "description": "Further information is requested"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-10-30T18:55:22Z",
        "updated_at": "2023-10-31T10:23:06Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\r\n\r\n- [X] I have searched both the documentation and discord for an answer.\r\n\r\n### Question\r\n\r\nThis is an error i got when i try to query outside the scope of the vector store. The LLM i use is zephyr-7b-alpha and i use the code from the documentation to load the model,  and i use sub query engine from the documentation to query.\r\n\r\nwhen i try to ask a question unrelated to the document i gave, it causes an error. But then when i query again using the same question it disappears and it just say it does not know(this is what i want), But i do not want this kind of unpredictable error popping off,\r\n\r\nAny idea how to fix this? other than using try/catch.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8592/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8592/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8590",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8590/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8590/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8590/events",
        "html_url": "https://github.com/run-llama/llama_index/issues/8590",
        "id": 1968932622,
        "node_id": "I_kwDOIWuq5851W4cO",
        "number": 8590,
        "title": "[Question]: RAG with Causal AI",
        "user": {
            "login": "INF800",
            "id": 45640029,
            "node_id": "MDQ6VXNlcjQ1NjQwMDI5",
            "avatar_url": "https://avatars.githubusercontent.com/u/45640029?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/INF800",
            "html_url": "https://github.com/INF800",
            "followers_url": "https://api.github.com/users/INF800/followers",
            "following_url": "https://api.github.com/users/INF800/following{/other_user}",
            "gists_url": "https://api.github.com/users/INF800/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/INF800/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/INF800/subscriptions",
            "organizations_url": "https://api.github.com/users/INF800/orgs",
            "repos_url": "https://api.github.com/users/INF800/repos",
            "events_url": "https://api.github.com/users/INF800/events{/privacy}",
            "received_events_url": "https://api.github.com/users/INF800/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4751318869,
                "node_id": "LA_kwDOIWuq588AAAABGzNfVQ",
                "url": "https://api.github.com/repos/run-llama/llama_index/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-30T17:58:24Z",
        "updated_at": "2023-10-30T21:52:43Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Question Validation\n\n- [X] I have searched both the documentation and discord for an answer.\n\n### Question\n\nAre there any implementations of RAG that take advantage of Causal AI? Think of RAG+causal AI as a white-box approach compared to usual RAG.",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8590/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 2
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8590/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8589",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8589/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8589/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8589/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8589",
        "id": 1968730342,
        "node_id": "PR_kwDOIWuq585eI9oS",
        "number": 8589,
        "title": "fix(limit): redis limit should follow top_k",
        "user": {
            "login": "EmanuelCampos",
            "id": 16262455,
            "node_id": "MDQ6VXNlcjE2MjYyNDU1",
            "avatar_url": "https://avatars.githubusercontent.com/u/16262455?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/EmanuelCampos",
            "html_url": "https://github.com/EmanuelCampos",
            "followers_url": "https://api.github.com/users/EmanuelCampos/followers",
            "following_url": "https://api.github.com/users/EmanuelCampos/following{/other_user}",
            "gists_url": "https://api.github.com/users/EmanuelCampos/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/EmanuelCampos/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/EmanuelCampos/subscriptions",
            "organizations_url": "https://api.github.com/users/EmanuelCampos/orgs",
            "repos_url": "https://api.github.com/users/EmanuelCampos/repos",
            "events_url": "https://api.github.com/users/EmanuelCampos/events{/privacy}",
            "received_events_url": "https://api.github.com/users/EmanuelCampos/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-10-30T16:08:08Z",
        "updated_at": "2023-10-30T17:32:43Z",
        "closed_at": "2023-10-30T17:32:42Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8589",
            "html_url": "https://github.com/run-llama/llama_index/pull/8589",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8589.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8589.patch",
            "merged_at": "2023-10-30T17:32:42Z"
        },
        "body": "# Description\r\n\r\nRedis was set to return 10 results, and breaking retrieval which requested more than 10 top_k results, since the default LIMIT was set to 10, now should follow the top_k limit\r\n\r\nFixes https://github.com/run-llama/llama_index/issues/8553\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [ ] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8589/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8589/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/run-llama/llama_index/issues/8588",
        "repository_url": "https://api.github.com/repos/run-llama/llama_index",
        "labels_url": "https://api.github.com/repos/run-llama/llama_index/issues/8588/labels{/name}",
        "comments_url": "https://api.github.com/repos/run-llama/llama_index/issues/8588/comments",
        "events_url": "https://api.github.com/repos/run-llama/llama_index/issues/8588/events",
        "html_url": "https://github.com/run-llama/llama_index/pull/8588",
        "id": 1968699202,
        "node_id": "PR_kwDOIWuq585eI2xE",
        "number": 8588,
        "title": "optimized content of retriever tool and minor bug fix",
        "user": {
            "login": "azurewtl",
            "id": 5175672,
            "node_id": "MDQ6VXNlcjUxNzU2NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5175672?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/azurewtl",
            "html_url": "https://github.com/azurewtl",
            "followers_url": "https://api.github.com/users/azurewtl/followers",
            "following_url": "https://api.github.com/users/azurewtl/following{/other_user}",
            "gists_url": "https://api.github.com/users/azurewtl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/azurewtl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/azurewtl/subscriptions",
            "organizations_url": "https://api.github.com/users/azurewtl/orgs",
            "repos_url": "https://api.github.com/users/azurewtl/repos",
            "events_url": "https://api.github.com/users/azurewtl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/azurewtl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-10-30T15:52:47Z",
        "updated_at": "2023-11-01T07:44:36Z",
        "closed_at": "2023-11-01T05:30:24Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/run-llama/llama_index/pulls/8588",
            "html_url": "https://github.com/run-llama/llama_index/pull/8588",
            "diff_url": "https://github.com/run-llama/llama_index/pull/8588.diff",
            "patch_url": "https://github.com/run-llama/llama_index/pull/8588.patch",
            "merged_at": "2023-11-01T05:30:24Z"
        },
        "body": "# Description\r\n\r\nFixed issues so that retriever can take arbitrary input parameter `args and kwargs` instead of `input = \"\"`\r\nOptimized content of retriever tool. Before it just str(scored_node), which makes agent really confused\r\n\r\n## Change in a Glance\r\n- Considering we have following docs/node to retrieve:\r\n```\r\n[Document(id_='...', embedding=None, metadata={'file_path': '/data/personal/essay.md'}, ..., text='# title1:Hello world.\\nThis is a test.\\n', ...),\r\n Document(id_='...', embedding=None, metadata={'file_path': '/data/personal/essay.md'}, ..., text='# title2:This is another test.\\nThis is a test v2.', ...)]\r\n```\r\n- Before: retriever.output.content shows simply str(docs), looks like following:\r\n```\r\n\"[NodeWithScore(node=TextNode(id_='e8a04fff-8674-44e5-8628-2d1bacafd8c0', embedding=None, metadata={'file_path': '/data/personal/essay.md'}, excluded_embed_metadata_keys=[], excluded_llm_metadata_keys=[], relationships={<NodeRelationship.SOURCE: '1'>: RelatedNodeInfo(node_id='fe85c756-359f-4b41-83a5-8ea623c41c02', node_type=<ObjectType.DOCUMENT: '4'>, metadata={'file_path': '/data/personal/essay.md'}, hash='0c0dad0d2c2a3be7d4cbc156ca42cbfccd2f029eddb69d0ec3af021330648951')}, hash='0c0dad0d2c2a3be7d4cbc156ca42cbfccd2f029eddb69d0ec3af021330648951', text='# title2:This is another test.\\\\nThis is a test v2.', start_char_idx=None, end_char_idx=None, text_template='{metadata_str}\\\\n\\\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\\\n'), score=1.0), \r\nNodeWithScore(node=TextNode(id_='f9bb8bd9-a26d-44e4-b2f1-23e239ea32c3', embedding=None, metadata={'file_path': '/data/personal/essay.md'}, excluded_embed_metadata_keys=[], excluded_llm_metadata_keys=[], relationships={<NodeRelationship.SOURCE: '1'>: RelatedNodeInfo(node_id='276c0bbf-7e07-4b81-aac4-98c871b48f42', node_type=<ObjectType.DOCUMENT: '4'>, metadata={'file_path': '/data/personal/essay.md'}, hash='05afed27a3aba61c68c2cd48e140a726d9f0dba877b67b310ccbe614e7f43154')}, hash='21de075519145210f29669b9989036db29e112a7dff15a80f3f5674b23718dac', text='# title1:Hello world.\\\\nThis is a test.', start_char_idx=None, end_char_idx=None, text_template='{metadata_str}\\\\n\\\\n{content}', metadata_template='{key}: {value}', metadata_seperator='\\\\n'), score=1.0)]\"\r\n```\r\n- Current: it format the content, and the output looks like this:\r\n```\r\nfile_path = [/data/personal/essay.md](https://file+.vscode-resource.vscode-cdn.net/data/personal/essay.md)\r\n# title2:This is another test.\r\nThis is a test v2.\r\n\r\nfile_path = [/data/personal/essay.md](https://file+.vscode-resource.vscode-cdn.net/data/personal/essay.md)\r\n# title1:Hello world.\r\nThis is a test.\r\n```\r\n- below is the code that does the formatting :\r\n```python\r\n        content = \"\"\r\n        for doc in docs:\r\n            node_copy = doc.node.copy()\r\n            node_copy.text_template = \"{metadata_str}\\n{content}\"\r\n            node_copy.metadata_template = \"{key} = {value}\"\r\n            content += node_copy.get_content(MetadataMode.LLM) + \"\\n\\n\"\r\n```\r\n## Validation \r\nThe validation is hard to do in unit test, because it is not like the previous content throw error. The problem is that when I use retriever_tool in REACT AGENT, the agent gets confused by too many object information.\r\nStill, I added a unit test to test the formatting .\r\n\r\n## Type of Change\r\n\r\nPlease delete options that are not relevant.\r\n\r\n- [x] Bug fix (non-breaking change which fixes an issue)\r\n- [ ] New feature (non-breaking change which adds functionality)\r\n- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)\r\n- [ ] This change requires a documentation update\r\n\r\n# How Has This Been Tested?\r\n\r\nPlease describe the tests that you ran to verify your changes. Provide instructions so we can reproduce. Please also list any relevant details for your test configuration\r\n\r\n- [x] Added new unit/integration tests\r\n- [ ] Added new notebook (that tests end-to-end)\r\n- [x] I stared at the code and made sure it makes sense\r\n\r\n# Suggested Checklist:\r\n\r\n- [x] I have performed a self-review of my own code\r\n- [ ] I have commented my code, particularly in hard-to-understand areas\r\n- [ ] I have made corresponding changes to the documentation\r\n- [ ] I have added Google Colab support for the newly added notebooks.\r\n- [ ] My changes generate no new warnings\r\n- [ ] I have added tests that prove my fix is effective or that my feature works\r\n- [ ] New and existing unit tests pass locally with my changes\r\n- [x] I ran `make format; make lint` to appease the lint gods\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/run-llama/llama_index/issues/8588/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/run-llama/llama_index/issues/8588/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]