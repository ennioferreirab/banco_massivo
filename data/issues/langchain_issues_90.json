[
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4968",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4968/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4968/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4968/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4968",
        "id": 1716692511,
        "node_id": "I_kwDOIPDwls5mUqYf",
        "number": 4968,
        "title": "Issue: The table does not have a column called $ when there clearly is.",
        "user": {
            "login": "davidm4a1",
            "id": 134040170,
            "node_id": "U_kgDOB_1Kag",
            "avatar_url": "https://avatars.githubusercontent.com/u/134040170?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/davidm4a1",
            "html_url": "https://github.com/davidm4a1",
            "followers_url": "https://api.github.com/users/davidm4a1/followers",
            "following_url": "https://api.github.com/users/davidm4a1/following{/other_user}",
            "gists_url": "https://api.github.com/users/davidm4a1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/davidm4a1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/davidm4a1/subscriptions",
            "organizations_url": "https://api.github.com/users/davidm4a1/orgs",
            "repos_url": "https://api.github.com/users/davidm4a1/repos",
            "events_url": "https://api.github.com/users/davidm4a1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/davidm4a1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-19T06:21:01Z",
        "updated_at": "2023-09-10T16:15:21Z",
        "closed_at": "2023-09-10T16:15:21Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi guys,\r\nNew to github and my first post here.\r\nBeen testing out LLM + Langchain SQL agent and it's really cool.\r\nHowever, I'm running into this issue constantly.\r\nSay there are 3 types of continents in my SQL, the US, Asia, and Europe.\r\nWhen I ask about 2 of them it works, but Asia kept giving me:\r\n\"The table does not have a column called \"continent\"\r\n\r\nThis is also right after it pulls the schema via: \"Action: schema_sql_db\".\r\nYou can clearly see the column name and it works for the other 2 but not this one.\r\n\r\nIs there something I'm not getting?\r\nThanks.\r\n\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4968/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4968/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4967",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4967/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4967/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4967/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4967",
        "id": 1716687813,
        "node_id": "PR_kwDOIPDwls5Q3NW9",
        "number": 4967,
        "title": "Update planner_prompt.py",
        "user": {
            "login": "vishwa-rn",
            "id": 44315599,
            "node_id": "MDQ6VXNlcjQ0MzE1NTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/44315599?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishwa-rn",
            "html_url": "https://github.com/vishwa-rn",
            "followers_url": "https://api.github.com/users/vishwa-rn/followers",
            "following_url": "https://api.github.com/users/vishwa-rn/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishwa-rn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishwa-rn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishwa-rn/subscriptions",
            "organizations_url": "https://api.github.com/users/vishwa-rn/orgs",
            "repos_url": "https://api.github.com/users/vishwa-rn/repos",
            "events_url": "https://api.github.com/users/vishwa-rn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishwa-rn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-19T06:17:08Z",
        "updated_at": "2023-05-19T15:17:11Z",
        "closed_at": "2023-05-19T15:17:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4967",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4967",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4967.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4967.patch",
            "merged_at": "2023-05-19T15:17:10Z"
        },
        "body": "Typos in the OpenAPI agent Prompt.\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4967/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4967/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4966",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4966/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4966/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4966/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4966",
        "id": 1716680713,
        "node_id": "I_kwDOIPDwls5mUngJ",
        "number": 4966,
        "title": "Issue: RetrievalQA is not working with AzureOpenAI LLM model",
        "user": {
            "login": "akshayghatiki311",
            "id": 22797515,
            "node_id": "MDQ6VXNlcjIyNzk3NTE1",
            "avatar_url": "https://avatars.githubusercontent.com/u/22797515?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/akshayghatiki311",
            "html_url": "https://github.com/akshayghatiki311",
            "followers_url": "https://api.github.com/users/akshayghatiki311/followers",
            "following_url": "https://api.github.com/users/akshayghatiki311/following{/other_user}",
            "gists_url": "https://api.github.com/users/akshayghatiki311/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/akshayghatiki311/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/akshayghatiki311/subscriptions",
            "organizations_url": "https://api.github.com/users/akshayghatiki311/orgs",
            "repos_url": "https://api.github.com/users/akshayghatiki311/repos",
            "events_url": "https://api.github.com/users/akshayghatiki311/events{/privacy}",
            "received_events_url": "https://api.github.com/users/akshayghatiki311/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-19T06:12:01Z",
        "updated_at": "2023-05-20T09:06:11Z",
        "closed_at": "2023-05-19T06:57:28Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI'm trying to query from my knowledge base in csv by creating embeddings.\r\nI was able to do it with OpenAI LLM model. But when I'm trying with AzureOpenAI model, I'm getting an error.\r\nI've checked the LLM object for both OpenAI modela and AzureOpenAI model, attributes are all same, but I'm getting below error.\r\nI'm using text-embeddings-ada-002 for creating embeddings and text-davinci-003 for LLM model.\r\nIt would be great if someone can give me leads. Thanks in advance.\r\n\r\nError:\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\akshay\\Documents\\GPT\\azureLlmGPT.py\", line 64, in <module>\r\n    print(model.run(question))\r\n          ^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\chains\\base.py\", line 213, in run\r\n    return self(args[0])[self.output_keys[0]]\r\n           ^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\chains\\base.py\", line 116, in __call__\r\n    raise e\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\chains\\base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n              ^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\chains\\retrieval_qa\\base.py\", line 110, in _call\r\n    answer = self.combine_documents_chain.run(\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\chains\\base.py\", line 216, in run\r\n    return self(kwargs)[self.output_keys[0]]\r\n           ^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\chains\\base.py\", line 116, in __call__\r\n    raise e\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\chains\\base.py\", line 113, in __call__\r\n    outputs = self._call(inputs)\r\n              ^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\chains\\combine_documents\\base.py\", line 75, in _call\r\n    output, extra_return_dict = self.combine_docs(docs, **other_keys)\r\n                                ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\chains\\combine_documents\\map_reduce.py\", line 139, in combine_docs\r\n    results = self.llm_chain.apply(\r\n              ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\chains\\llm.py\", line 118, in apply\r\n    response = self.generate(input_list)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\chains\\llm.py\", line 62, in generate\r\n    return self.llm.generate_prompt(prompts, stop)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\llms\\base.py\", line 107, in generate_prompt\r\n    return self.generate(prompt_strings, stop=stop)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\llms\\base.py\", line 140, in generate\r\n    raise e\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\llms\\base.py\", line 137, in generate\r\n    output = self._generate(prompts, stop=stop)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\llms\\openai.py\", line 297, in _generate\r\n    response = completion_with_retry(self, prompt=_prompts, **params)\r\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\llms\\openai.py\", line 102, in completion_with_retry\r\n    return _completion_with_retry(**kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\tenacity\\__init__.py\", line 289, in wrapped_f\r\n    return self(f, *args, **kw)\r\n           ^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\tenacity\\__init__.py\", line 379, in __call__\r\n    do = self.iter(retry_state=retry_state)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\tenacity\\__init__.py\", line 314, in iter\r\n    return fut.result()\r\n           ^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 449, in result\r\n    return self.__get_result()\r\n           ^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\concurrent\\futures\\_base.py\", line 401, in __get_result\r\n    raise self._exception\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\tenacity\\__init__.py\", line 382, in __call__\r\n    result = fn(*args, **kwargs)\r\n             ^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\langchain\\llms\\openai.py\", line 100, in _completion_with_retry\r\n    return llm.client.create(**kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\openai\\api_resources\\completion.py\", line 25, in create\r\n    return super().create(*args, **kwargs)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\openai\\api_resources\\abstract\\engine_api_resource.py\", line 153, in create\r\n    response, _, api_key = requestor.request(\r\n                           ^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\openai\\api_requestor.py\", line 226, in request\r\n    resp, got_stream = self._interpret_response(result, stream)\r\n                       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\openai\\api_requestor.py\", line 620, in _interpret_response\r\n    self._interpret_response_line(\r\n  File \"C:\\Users\\akshay\\AppData\\Local\\Programs\\Python\\Python311\\Lib\\site-packages\\openai\\api_requestor.py\", line 683, in _interpret_response_line\r\n    raise self.handle_error_response(\r\nopenai.error.InvalidRequestError: Resource not found\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4966/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4966/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4964",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4964/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4964/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4964/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4964",
        "id": 1716649912,
        "node_id": "PR_kwDOIPDwls5Q3FOr",
        "number": 4964,
        "title": "docs: Big Mendable Improvements",
        "user": {
            "login": "nickscamara",
            "id": 20311743,
            "node_id": "MDQ6VXNlcjIwMzExNzQz",
            "avatar_url": "https://avatars.githubusercontent.com/u/20311743?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nickscamara",
            "html_url": "https://github.com/nickscamara",
            "followers_url": "https://api.github.com/users/nickscamara/followers",
            "following_url": "https://api.github.com/users/nickscamara/following{/other_user}",
            "gists_url": "https://api.github.com/users/nickscamara/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nickscamara/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nickscamara/subscriptions",
            "organizations_url": "https://api.github.com/users/nickscamara/orgs",
            "repos_url": "https://api.github.com/users/nickscamara/repos",
            "events_url": "https://api.github.com/users/nickscamara/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nickscamara/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-19T05:42:10Z",
        "updated_at": "2023-05-19T22:31:49Z",
        "closed_at": "2023-05-19T22:31:49Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4964",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4964",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4964.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4964.patch",
            "merged_at": "2023-05-19T22:31:48Z"
        },
        "body": "- Higher accuracy on the responses\r\n- New redesigned UI\r\n- Pretty Sources: display the sources by title / sub-section instead of long URL.\r\n- Fixed Reset Button bugs and some other UI issues\r\n- Other tweaks\r\n\r\n@hwchase17 will dm soon with a report and things we have seen that might significantly improve the docs!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4964/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4964/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4963",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4963/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4963/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4963/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4963",
        "id": 1716644366,
        "node_id": "I_kwDOIPDwls5mUeoO",
        "number": 4963,
        "title": "Is it possible to support the kotlin language?Like langchainkt.",
        "user": {
            "login": "yangwuan55",
            "id": 5218120,
            "node_id": "MDQ6VXNlcjUyMTgxMjA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5218120?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/yangwuan55",
            "html_url": "https://github.com/yangwuan55",
            "followers_url": "https://api.github.com/users/yangwuan55/followers",
            "following_url": "https://api.github.com/users/yangwuan55/following{/other_user}",
            "gists_url": "https://api.github.com/users/yangwuan55/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/yangwuan55/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/yangwuan55/subscriptions",
            "organizations_url": "https://api.github.com/users/yangwuan55/orgs",
            "repos_url": "https://api.github.com/users/yangwuan55/repos",
            "events_url": "https://api.github.com/users/yangwuan55/events{/privacy}",
            "received_events_url": "https://api.github.com/users/yangwuan55/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-19T05:34:35Z",
        "updated_at": "2023-11-03T10:08:41Z",
        "closed_at": "2023-11-03T10:08:32Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nsupport for kotlin language\n\n### Motivation\n\n1.Safety and Reliability: Kotlin emphasizes on safety and reliability, and it can help developers avoid common programming errors through type checks, null safety, exception handling, and other mechanisms. Additionally, Kotlin provides a functional programming style that reduces side effects and improves code reliability and maintainability.\r\n\r\n2.Interoperability: Kotlin seamlessly interoperates with Java, which means that you can use existing Java libraries and frameworks in Kotlin projects, and Kotlin code can be used in Java projects. Moreover, Kotlin supports JavaScript and Native platforms, so you can use the same code across different platforms.\r\n\r\n3.Conciseness: Kotlin has a concise and clear syntax that reduces code redundancy and complexity. For example, Kotlin uses lambda expressions and extension functions to simplify code, and provides many convenient syntax sugars such as null safety operator, range expressions, string templates, etc. These features can greatly improve development efficiency and reduce the possibility of errors.\n\n### Your contribution\n\nI can write any partial code related to Kotlin.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4963/reactions",
            "total_count": 16,
            "+1": 16,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4963/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4962",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4962/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4962/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4962/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4962",
        "id": 1716612556,
        "node_id": "PR_kwDOIPDwls5Q29Ex",
        "number": 4962,
        "title": "Fix bytes type inconsistency issue in SageMaker endpoint response",
        "user": {
            "login": "jingchaodev",
            "id": 8307474,
            "node_id": "MDQ6VXNlcjgzMDc0NzQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8307474?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jingchaodev",
            "html_url": "https://github.com/jingchaodev",
            "followers_url": "https://api.github.com/users/jingchaodev/followers",
            "following_url": "https://api.github.com/users/jingchaodev/following{/other_user}",
            "gists_url": "https://api.github.com/users/jingchaodev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jingchaodev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jingchaodev/subscriptions",
            "organizations_url": "https://api.github.com/users/jingchaodev/orgs",
            "repos_url": "https://api.github.com/users/jingchaodev/repos",
            "events_url": "https://api.github.com/users/jingchaodev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jingchaodev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700839,
                "node_id": "LA_kwDOIPDwls8AAAABUpidpw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:bug",
                "name": "auto:bug",
                "color": "E99695",
                "default": false,
                "description": "Related to a bug, vulnerability, unexpected error with an existing feature"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-19T05:03:59Z",
        "updated_at": "2023-11-29T02:43:51Z",
        "closed_at": "2023-11-29T02:43:50Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4962",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4962",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4962.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4962.patch",
            "merged_at": null
        },
        "body": "# Fix bytes type inconsistency issue in SageMaker endpoint response\r\n\r\nSageMaker inference endpoint returns type `botocore.response.StreamingBody` by default. However, in the current implementation, transform_output method expects a bytes object.\r\n\r\nClients could add workaround to call read to convert to bytes like\r\n\r\n```\r\nif hasattr(output, 'read'):\r\n            output = output.read()\r\n```\r\n\r\nbut it might break some type checking on the client-side. Ex, mypy is complaining that \r\n\r\n```\r\n[attr-defined] \"bytes\" has no attribute \"read\" \r\n                output = output.read()\r\n```\r\n\r\nI am proposing that we should convert `StreamingBody` to bytes inside SagemakerEndpoint class before we call `transform_output`.\r\n\r\n@3coins @agola11 @leo-gan ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4962/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4962/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4961",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4961/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4961/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4961/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4961",
        "id": 1716607914,
        "node_id": "PR_kwDOIPDwls5Q28E5",
        "number": 4961,
        "title": "Fixed assumptions misspelling",
        "user": {
            "login": "rahulroxx",
            "id": 16189966,
            "node_id": "MDQ6VXNlcjE2MTg5OTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16189966?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rahulroxx",
            "html_url": "https://github.com/rahulroxx",
            "followers_url": "https://api.github.com/users/rahulroxx/followers",
            "following_url": "https://api.github.com/users/rahulroxx/following{/other_user}",
            "gists_url": "https://api.github.com/users/rahulroxx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rahulroxx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rahulroxx/subscriptions",
            "organizations_url": "https://api.github.com/users/rahulroxx/orgs",
            "repos_url": "https://api.github.com/users/rahulroxx/repos",
            "events_url": "https://api.github.com/users/rahulroxx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rahulroxx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-19T04:58:42Z",
        "updated_at": "2023-05-19T14:40:05Z",
        "closed_at": "2023-05-19T14:40:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4961",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4961",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4961.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4961.patch",
            "merged_at": "2023-05-19T14:40:04Z"
        },
        "body": "Fixed assumptions misspelling in the link mentioned below:-\r\n\r\nhttps://python.langchain.com/en/latest/modules/chains/examples/llm_summarization_checker.html\r\n\r\n![image](https://github.com/hwchase17/langchain/assets/16189966/94cf2be0-b3d0-495b-98ad-e1f44331727e)\r\n\r\nFix for Issue:- #4959 \r\n\r\n@hwchase17 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4961/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4961/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4960",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4960/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4960/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4960/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4960",
        "id": 1716600842,
        "node_id": "PR_kwDOIPDwls5Q26iX",
        "number": 4960,
        "title": "Update tutorials.md",
        "user": {
            "login": "edrickdch",
            "id": 36369935,
            "node_id": "MDQ6VXNlcjM2MzY5OTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/36369935?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edrickdch",
            "html_url": "https://github.com/edrickdch",
            "followers_url": "https://api.github.com/users/edrickdch/followers",
            "following_url": "https://api.github.com/users/edrickdch/following{/other_user}",
            "gists_url": "https://api.github.com/users/edrickdch/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edrickdch/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edrickdch/subscriptions",
            "organizations_url": "https://api.github.com/users/edrickdch/orgs",
            "repos_url": "https://api.github.com/users/edrickdch/repos",
            "events_url": "https://api.github.com/users/edrickdch/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edrickdch/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-19T04:48:25Z",
        "updated_at": "2023-05-19T14:40:15Z",
        "closed_at": "2023-05-19T14:40:15Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4960",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4960",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4960.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4960.patch",
            "merged_at": "2023-05-19T14:40:15Z"
        },
        "body": "# Added a YouTube Tutorial\r\n\r\nAdded a LangChain tutorial playlist aimed at onboarding newcomers to LangChain and its use cases. \r\n\r\nI've shared the video in the #tutorials channel and it seemed to be well received. I think this could be useful to the greater community.\r\n\r\n## Who can review?\r\n\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4960/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4960/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4959",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4959/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4959/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4959/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4959",
        "id": 1716598909,
        "node_id": "I_kwDOIPDwls5mUTh9",
        "number": 4959,
        "title": "DOC: Misspelling in LLMSummarizationCheckerChain documentation",
        "user": {
            "login": "rahulroxx",
            "id": 16189966,
            "node_id": "MDQ6VXNlcjE2MTg5OTY2",
            "avatar_url": "https://avatars.githubusercontent.com/u/16189966?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rahulroxx",
            "html_url": "https://github.com/rahulroxx",
            "followers_url": "https://api.github.com/users/rahulroxx/followers",
            "following_url": "https://api.github.com/users/rahulroxx/following{/other_user}",
            "gists_url": "https://api.github.com/users/rahulroxx/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rahulroxx/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rahulroxx/subscriptions",
            "organizations_url": "https://api.github.com/users/rahulroxx/orgs",
            "repos_url": "https://api.github.com/users/rahulroxx/repos",
            "events_url": "https://api.github.com/users/rahulroxx/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rahulroxx/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-19T04:45:16Z",
        "updated_at": "2023-09-10T16:15:26Z",
        "closed_at": "2023-09-10T16:15:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nIn the doc as mentioned below:- \r\nhttps://python.langchain.com/en/latest/modules/chains/examples/llm_summarization_checker.html\r\n\r\nAssumptions is misspelled as assumtions.\n\n### Idea or request for content:\n\nFix the misspelling in the doc markdown. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4959/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4959/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4957",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4957/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4957/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4957/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4957",
        "id": 1716553534,
        "node_id": "I_kwDOIPDwls5mUIc-",
        "number": 4957,
        "title": "Consider adding the default Neo4jDatabaseChain tool to the Chains component",
        "user": {
            "login": "crazyyanchao",
            "id": 19403898,
            "node_id": "MDQ6VXNlcjE5NDAzODk4",
            "avatar_url": "https://avatars.githubusercontent.com/u/19403898?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/crazyyanchao",
            "html_url": "https://github.com/crazyyanchao",
            "followers_url": "https://api.github.com/users/crazyyanchao/followers",
            "following_url": "https://api.github.com/users/crazyyanchao/following{/other_user}",
            "gists_url": "https://api.github.com/users/crazyyanchao/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/crazyyanchao/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/crazyyanchao/subscriptions",
            "organizations_url": "https://api.github.com/users/crazyyanchao/orgs",
            "repos_url": "https://api.github.com/users/crazyyanchao/repos",
            "events_url": "https://api.github.com/users/crazyyanchao/events{/privacy}",
            "received_events_url": "https://api.github.com/users/crazyyanchao/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-19T03:33:24Z",
        "updated_at": "2023-06-08T00:41:58Z",
        "closed_at": "2023-06-08T00:41:26Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\n- Neo4j\r\n[Neo4j](https://github.com/neo4j/neo4j)\r\n\r\n- langchain2neo4j\r\n[langchain2neo4j](https://github.com/tomasonjo/langchain2neo4j)\r\n\r\n- langchain2ongdb\r\n[langchain2ongdb](https://github.com/ongdb-contrib/langchain2ongdb)\r\n\n\n### Motivation\n\nWe are building some question answering tools based on the knowledge graph and it would be convenient to have some open libraries based on Neo4j.\n\n### Your contribution\n\nI'm trying to make a contribution:)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4957/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4957/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4956",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4956/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4956/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4956/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4956",
        "id": 1716549805,
        "node_id": "PR_kwDOIPDwls5Q2vxA",
        "number": 4956,
        "title": "Add Spark SQL support (#4602)",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-19T03:26:44Z",
        "updated_at": "2023-05-19T03:53:09Z",
        "closed_at": "2023-05-19T03:53:08Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4956",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4956",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4956.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4956.patch",
            "merged_at": "2023-05-19T03:53:08Z"
        },
        "body": "# Add Spark SQL support \r\n* Add Spark SQL support. It can connect to Spark via building a local/remote SparkSession.\r\n* Include a notebook example\r\n\r\nI tried some complicated queries (window function, table joins), and the tool works well.\r\nCompared to the [Spark Dataframe\r\nagent](https://python.langchain.com/en/latest/modules/agents/toolkits/examples/spark.html), this tool is able to generate queries across multiple tables.\r\n\r\n---------\r\n\r\n# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4956/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4956/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4955",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4955/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4955/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4955/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4955",
        "id": 1716519016,
        "node_id": "I_kwDOIPDwls5mUABo",
        "number": 4955,
        "title": "Issue: Agent Executor tends to answer user question directly and set it as Action Input during the iterative thought process.",
        "user": {
            "login": "ximnet-cheeyee",
            "id": 83213535,
            "node_id": "MDQ6VXNlcjgzMjEzNTM1",
            "avatar_url": "https://avatars.githubusercontent.com/u/83213535?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ximnet-cheeyee",
            "html_url": "https://github.com/ximnet-cheeyee",
            "followers_url": "https://api.github.com/users/ximnet-cheeyee/followers",
            "following_url": "https://api.github.com/users/ximnet-cheeyee/following{/other_user}",
            "gists_url": "https://api.github.com/users/ximnet-cheeyee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ximnet-cheeyee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ximnet-cheeyee/subscriptions",
            "organizations_url": "https://api.github.com/users/ximnet-cheeyee/orgs",
            "repos_url": "https://api.github.com/users/ximnet-cheeyee/repos",
            "events_url": "https://api.github.com/users/ximnet-cheeyee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ximnet-cheeyee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-19T02:34:55Z",
        "updated_at": "2023-09-27T16:07:00Z",
        "closed_at": "2023-09-27T16:06:59Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "I am trying on the Custom Agent with Tool Retrieval example, there are some times (not always 100%) when the Agent Executor will return the answer itself in the Action Input. The inconsistency make things even worse.\r\n\r\nFor example: I have a Small Talk Tool that will be in charge of answering casual conversation from user. I have given a profile to my agent (name: Sam). Here is one of the scenario that I got:\r\n\r\n**Question**: Hello I am Bob, what is your name?\r\n**Thought**: The user is initiating a small talk conversation\r\n**Action Input**: Hi Bob, I am Sam, your personal assistant. How can I assist you today?\r\n**Observation**: As an AI language model, I don't need any assistance, Sam. But thank you for asking! How about you? Is there anything I can help you with?\r\n\r\nSo the expected response by the agent became the action input, which in the end output another response which doesnt make sense at all. This goes on to happen to other tools as well such as querying content from Vectorstore.\r\n\r\n\r\n### Suggestion:\r\nIs there a possibility where we can restrict the action input to just the user question instead of allowing the agent to answer it and modify the initial context? \r\n\r\nBe it the prompt or temperature? I'm open to any advice. Thanks!\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4955/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4955/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4954",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4954/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4954/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4954/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4954",
        "id": 1716517339,
        "node_id": "PR_kwDOIPDwls5Q2o_V",
        "number": 4954,
        "title": "Update utilities/arxiv.py",
        "user": {
            "login": "bongsang",
            "id": 8433665,
            "node_id": "MDQ6VXNlcjg0MzM2NjU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/8433665?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/bongsang",
            "html_url": "https://github.com/bongsang",
            "followers_url": "https://api.github.com/users/bongsang/followers",
            "following_url": "https://api.github.com/users/bongsang/following{/other_user}",
            "gists_url": "https://api.github.com/users/bongsang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/bongsang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/bongsang/subscriptions",
            "organizations_url": "https://api.github.com/users/bongsang/orgs",
            "repos_url": "https://api.github.com/users/bongsang/repos",
            "events_url": "https://api.github.com/users/bongsang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/bongsang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-19T02:31:54Z",
        "updated_at": "2023-05-24T13:25:16Z",
        "closed_at": "2023-05-24T13:23:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4954",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4954",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4954.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4954.patch",
            "merged_at": null
        },
        "body": "# Refactor file removal logic in for-loop\r\n\r\n- Problem:\r\nThe file removal using `os.remove(file_name)` was placed inside a for-loop, causing unnecessary and potentially incorrect deletion attempts.\r\n\r\n- Fix:\r\nMoved the file removal code outside the for-loop and added a check to ensure the file exists before attempting deletion. The updated code now includes the following check:\r\nif os.path.exists(doc_file_name):\r\n    os.remove(doc_file_name)\r\n\r\nI'm sure that this change improves the efficiency and accuracy of file deletion in the program.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4954/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4954/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4953",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4953/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4953/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4953/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4953",
        "id": 1716511797,
        "node_id": "PR_kwDOIPDwls5Q2n1s",
        "number": 4953,
        "title": "[jupyter] add memory example to sql_db agent",
        "user": {
            "login": "skcoirz",
            "id": 62768671,
            "node_id": "MDQ6VXNlcjYyNzY4Njcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/62768671?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skcoirz",
            "html_url": "https://github.com/skcoirz",
            "followers_url": "https://api.github.com/users/skcoirz/followers",
            "following_url": "https://api.github.com/users/skcoirz/following{/other_user}",
            "gists_url": "https://api.github.com/users/skcoirz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skcoirz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skcoirz/subscriptions",
            "organizations_url": "https://api.github.com/users/skcoirz/orgs",
            "repos_url": "https://api.github.com/users/skcoirz/repos",
            "events_url": "https://api.github.com/users/skcoirz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skcoirz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5496111774,
                "node_id": "LA_kwDOIPDwls8AAAABR5gCng",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/needs%20work",
                "name": "needs work",
                "color": "F9D0C4",
                "default": false,
                "description": "PRs that need more work"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-19T02:22:04Z",
        "updated_at": "2023-11-01T23:50:08Z",
        "closed_at": "2023-11-01T23:50:08Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4953",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4953",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4953.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4953.patch",
            "merged_at": null
        },
        "body": "- Memory can largely enrich Agent convenience.\r\n- This PR added an example showing how to use Memory in SQL DB Agent.\r\n- Fixed a bug in the old SQLDatabaseToolkit initiation case as `llm` is a required input in the latest version.\r\n- Re-tested several old examples to confirm everything works the same.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4953/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4953/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4952",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4952/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4952/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4952/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4952",
        "id": 1716453446,
        "node_id": "I_kwDOIPDwls5mTwBG",
        "number": 4952,
        "title": "vectorstore redis return TypeError",
        "user": {
            "login": "axiangcoding",
            "id": 49201354,
            "node_id": "MDQ6VXNlcjQ5MjAxMzU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/49201354?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/axiangcoding",
            "html_url": "https://github.com/axiangcoding",
            "followers_url": "https://api.github.com/users/axiangcoding/followers",
            "following_url": "https://api.github.com/users/axiangcoding/following{/other_user}",
            "gists_url": "https://api.github.com/users/axiangcoding/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/axiangcoding/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/axiangcoding/subscriptions",
            "organizations_url": "https://api.github.com/users/axiangcoding/orgs",
            "repos_url": "https://api.github.com/users/axiangcoding/repos",
            "events_url": "https://api.github.com/users/axiangcoding/events{/privacy}",
            "received_events_url": "https://api.github.com/users/axiangcoding/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 16,
        "created_at": "2023-05-19T00:53:22Z",
        "updated_at": "2023-12-12T16:31:54Z",
        "closed_at": "2023-12-12T16:31:46Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version: 0.0.173\r\nRedis version: 4.5.5\r\nPython version: 3.11\r\nOS: Windows 10\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nusing latest langchain with redis vectorstore return error TypeError\r\ncode here:\r\n```\r\nembeddings = OpenAIEmbeddings(model=\"text-embedding-ada-002\", chunk_size=1)\r\nrds = Redis.from_texts(texts, embeddings, redis_url=\"redis://localhost:6379\", index_name=uid)\r\n```\r\n\r\nerror stack:\r\n```\r\n---------------------------------------------------------------------------\r\nIndexError                                Traceback (most recent call last)\r\nFile D:\\Projects\\openai\\venv\\Lib\\site-packages\\redis\\connection.py:1450, in ConnectionPool.get_connection(self, command_name, *keys, **options)\r\n   1449 try:\r\n-> 1450     connection = self._available_connections.pop()\r\n   1451 except IndexError:\r\n\r\nIndexError: pop from empty list\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTypeError                                 Traceback (most recent call last)\r\nCell In[5], line 11\r\n      8 print(\"create vector store with id: {}\".format(uid))\r\n     10 embeddings = OpenAIEmbeddings(model=\"text-embedding-ada-002\", chunk_size=1)\r\n---> 11 rds = Redis.from_texts(texts, embeddings, redis_url = \"redis://localhost:6379\",index_name=uid)\r\n\r\nFile D:\\Projects\\openai\\venv\\Lib\\site-packages\\langchain\\vectorstores\\redis.py:448, in Redis.from_texts(cls, texts, embedding, metadatas, index_name, content_key, metadata_key, vector_key, **kwargs)\r\n    419 @classmethod\r\n    420 def from_texts(\r\n    421     cls: Type[Redis],\r\n   (...)\r\n    429     **kwargs: Any,\r\n    430 ) -> Redis:\r\n    431     \"\"\"Create a Redis vectorstore from raw documents.\r\n    432     This is a user-friendly interface that:\r\n    433         1. Embeds documents.\r\n   (...)\r\n    446             )\r\n    447     \"\"\"\r\n--> 448     instance, _ = cls.from_texts_return_keys(\r\n    449         texts=texts,\r\n    450         embedding=embedding,\r\n    451         metadatas=metadatas,\r\n    452         index_name=index_name,\r\n    453         content_key=content_key,\r\n    454         metadata_key=metadata_key,\r\n    455         vector_key=vector_key,\r\n    456         kwargs=kwargs,\r\n    457     )\r\n    458     return instance\r\n\r\nFile D:\\Projects\\openai\\venv\\Lib\\site-packages\\langchain\\vectorstores\\redis.py:399, in Redis.from_texts_return_keys(cls, texts, embedding, metadatas, index_name, content_key, metadata_key, vector_key, distance_metric, **kwargs)\r\n    396     index_name = uuid.uuid4().hex\r\n    398 # Create instance\r\n--> 399 instance = cls(\r\n    400     redis_url=redis_url,\r\n    401     index_name=index_name,\r\n    402     embedding_function=embedding.embed_query,\r\n    403     content_key=content_key,\r\n    404     metadata_key=metadata_key,\r\n    405     vector_key=vector_key,\r\n    406     **kwargs,\r\n    407 )\r\n    409 # Create embeddings over documents\r\n    410 embeddings = embedding.embed_documents(texts)\r\n\r\nFile D:\\Projects\\openai\\venv\\Lib\\site-packages\\langchain\\vectorstores\\redis.py:138, in Redis.__init__(self, redis_url, index_name, embedding_function, content_key, metadata_key, vector_key, relevance_score_fn, **kwargs)\r\n    136     redis_client = redis.from_url(redis_url, **kwargs)\r\n    137     # check if redis has redisearch module installed\r\n--> 138     _check_redis_module_exist(redis_client, REDIS_REQUIRED_MODULES)\r\n    139 except ValueError as e:\r\n    140     raise ValueError(f\"Redis failed to connect: {e}\")\r\n\r\nFile D:\\Projects\\openai\\venv\\Lib\\site-packages\\langchain\\vectorstores\\redis.py:48, in _check_redis_module_exist(client, required_modules)\r\n     46 def _check_redis_module_exist(client: RedisType, required_modules: List[dict]) -> None:\r\n     47     \"\"\"Check if the correct Redis modules are installed.\"\"\"\r\n---> 48     installed_modules = client.module_list()\r\n     49     installed_modules = {\r\n     50         module[b\"name\"].decode(\"utf-8\"): module for module in installed_modules\r\n     51     }\r\n     52     for module in required_modules:\r\n\r\nFile D:\\Projects\\openai\\venv\\Lib\\site-packages\\redis\\commands\\core.py:5781, in ModuleCommands.module_list(self)\r\n   5774 def module_list(self) -> ResponseT:\r\n   5775     \"\"\"\r\n   5776     Returns a list of dictionaries containing the name and version of\r\n   5777     all loaded modules.\r\n   5778 \r\n   5779     For more information see https://redis.io/commands/module-list\r\n   5780     \"\"\"\r\n-> 5781     return self.execute_command(\"MODULE LIST\")\r\n\r\nFile D:\\Projects\\openai\\venv\\Lib\\site-packages\\redis\\client.py:1266, in Redis.execute_command(self, *args, **options)\r\n   1264 pool = self.connection_pool\r\n   1265 command_name = args[0]\r\n-> 1266 conn = self.connection or pool.get_connection(command_name, **options)\r\n   1268 try:\r\n   1269     return conn.retry.call_with_retry(\r\n   1270         lambda: self._send_command_parse_response(\r\n   1271             conn, command_name, *args, **options\r\n   1272         ),\r\n   1273         lambda error: self._disconnect_raise(conn, error),\r\n   1274     )\r\n\r\nFile D:\\Projects\\openai\\venv\\Lib\\site-packages\\redis\\connection.py:1452, in ConnectionPool.get_connection(self, command_name, *keys, **options)\r\n   1450         connection = self._available_connections.pop()\r\n   1451     except IndexError:\r\n-> 1452         connection = self.make_connection()\r\n   1453     self._in_use_connections.add(connection)\r\n   1455 try:\r\n   1456     # ensure this connection is connected to Redis\r\n\r\nFile D:\\Projects\\openai\\venv\\Lib\\site-packages\\redis\\connection.py:1492, in ConnectionPool.make_connection(self)\r\n   1490     raise ConnectionError(\"Too many connections\")\r\n   1491 self._created_connections += 1\r\n-> 1492 return self.connection_class(**self.connection_kwargs)\r\n\r\nFile D:\\Projects\\openai\\venv\\Lib\\site-packages\\redis\\connection.py:956, in Connection.__init__(self, host, port, socket_timeout, socket_connect_timeout, socket_keepalive, socket_keepalive_options, socket_type, **kwargs)\r\n    954 self.socket_keepalive_options = socket_keepalive_options or {}\r\n    955 self.socket_type = socket_type\r\n--> 956 super().__init__(**kwargs)\r\n\r\nTypeError: AbstractConnection.__init__() got an unexpected keyword argument 'kwargs'\r\n```\n\n### Expected behavior\n\nI followed the instructions in the documentation and it ran fine before, but when I upgraded the langchain version to the latest version, it failed.\r\nI believe this is related to https://github.com/hwchase17/langchain/pull/4857, am I using this method incorrectly now? I'm new to langchain.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4952/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4952/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4951",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4951/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4951/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4951/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4951",
        "id": 1716440893,
        "node_id": "PR_kwDOIPDwls5Q2ZI3",
        "number": 4951,
        "title": "Made some changes to improve format",
        "user": {
            "login": "TheSeer507",
            "id": 34147199,
            "node_id": "MDQ6VXNlcjM0MTQ3MTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/34147199?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/TheSeer507",
            "html_url": "https://github.com/TheSeer507",
            "followers_url": "https://api.github.com/users/TheSeer507/followers",
            "following_url": "https://api.github.com/users/TheSeer507/following{/other_user}",
            "gists_url": "https://api.github.com/users/TheSeer507/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/TheSeer507/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/TheSeer507/subscriptions",
            "organizations_url": "https://api.github.com/users/TheSeer507/orgs",
            "repos_url": "https://api.github.com/users/TheSeer507/repos",
            "events_url": "https://api.github.com/users/TheSeer507/events{/privacy}",
            "received_events_url": "https://api.github.com/users/TheSeer507/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-19T00:31:15Z",
        "updated_at": "2023-08-11T21:52:53Z",
        "closed_at": "2023-08-11T21:52:53Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4951",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4951",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4951.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4951.patch",
            "merged_at": null
        },
        "body": "# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4951/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4951/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4950",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4950/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4950/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4950/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4950",
        "id": 1716429367,
        "node_id": "I_kwDOIPDwls5mTqI3",
        "number": 4950,
        "title": "Issue: Does RetrievalQA Support Streaming Replies?",
        "user": {
            "login": "Fzx-oss",
            "id": 108915253,
            "node_id": "U_kgDOBn3qNQ",
            "avatar_url": "https://avatars.githubusercontent.com/u/108915253?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Fzx-oss",
            "html_url": "https://github.com/Fzx-oss",
            "followers_url": "https://api.github.com/users/Fzx-oss/followers",
            "following_url": "https://api.github.com/users/Fzx-oss/following{/other_user}",
            "gists_url": "https://api.github.com/users/Fzx-oss/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Fzx-oss/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Fzx-oss/subscriptions",
            "organizations_url": "https://api.github.com/users/Fzx-oss/orgs",
            "repos_url": "https://api.github.com/users/Fzx-oss/repos",
            "events_url": "https://api.github.com/users/Fzx-oss/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Fzx-oss/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 19,
        "created_at": "2023-05-19T00:13:39Z",
        "updated_at": "2023-12-10T04:24:56Z",
        "closed_at": "2023-06-01T23:56:27Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "## Question\r\nI'm interested in creating a conversational app using RetrievalQA that can also answer using external knowledge. However, I'm curious whether RetrievalQA supports replying in a streaming manner. I couldn't find any related articles, so I would like to ask everyone here.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4950/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4950/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4949",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4949/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4949/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4949/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4949",
        "id": 1716411416,
        "node_id": "PR_kwDOIPDwls5Q2S6y",
        "number": 4949,
        "title": "docs: `Deployments` page moved into `Ecosystem/`",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528810,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvKg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/documentation",
                "name": "documentation",
                "color": "0075ca",
                "default": true,
                "description": "Improvements or additions to documentation"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T23:45:42Z",
        "updated_at": "2023-05-22T16:52:42Z",
        "closed_at": "2023-05-22T04:18:22Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4949",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4949",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4949.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4949.patch",
            "merged_at": "2023-05-22T04:18:22Z"
        },
        "body": "# docs: `deployments` page moved into `ecosystem/`\r\n\r\nThe `Deployments` page moved into the `Ecosystem/` group\r\n\r\nSmall fixes:\r\n- `index` page: fixed order of items in the `Modules` list, in the `Use Cases` list\r\n- item `References/Installation` was lost in the `index` page (not on the Navbar!). Restored it.\r\n- added `|` marker in several places.\r\n\r\nNOTE: I also thought about moving the `Additional Resources/Gallery` page into the `Ecosystem` group but decided to leave it unchanged. Please, advise on this.\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@dev2049\r\n  \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4949/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4949/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4948",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4948/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4948/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4948/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4948",
        "id": 1716376847,
        "node_id": "PR_kwDOIPDwls5Q2LSa",
        "number": 4948,
        "title": "RFC: LLM -> StrInStrOutLLM",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5533576383,
                "node_id": "LA_kwDOIPDwls8AAAABSdOsvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/refactor",
                "name": "refactor",
                "color": "81CB55",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-18T23:07:33Z",
        "updated_at": "2023-06-22T08:20:32Z",
        "closed_at": "2023-06-22T08:20:32Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4948",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4948",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4948.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4948.patch",
            "merged_at": null
        },
        "body": "Find this interface name very confusing (not specific enough). Thoughts on updating? Open to other names, just want it to be specific.\r\n\r\nThink it's backwards compat but very well might be overlooking something",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4948/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4948/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4947",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4947/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4947/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4947/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4947",
        "id": 1716353108,
        "node_id": "PR_kwDOIPDwls5Q2GT6",
        "number": 4947,
        "title": "Update serpapi.py",
        "user": {
            "login": "venetisgr",
            "id": 38510475,
            "node_id": "MDQ6VXNlcjM4NTEwNDc1",
            "avatar_url": "https://avatars.githubusercontent.com/u/38510475?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/venetisgr",
            "html_url": "https://github.com/venetisgr",
            "followers_url": "https://api.github.com/users/venetisgr/followers",
            "following_url": "https://api.github.com/users/venetisgr/following{/other_user}",
            "gists_url": "https://api.github.com/users/venetisgr/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/venetisgr/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/venetisgr/subscriptions",
            "organizations_url": "https://api.github.com/users/venetisgr/orgs",
            "repos_url": "https://api.github.com/users/venetisgr/repos",
            "events_url": "https://api.github.com/users/venetisgr/events{/privacy}",
            "received_events_url": "https://api.github.com/users/venetisgr/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T22:39:27Z",
        "updated_at": "2023-05-22T20:34:37Z",
        "closed_at": "2023-05-22T20:34:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4947",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4947",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4947.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4947.patch",
            "merged_at": "2023-05-22T20:34:37Z"
        },
        "body": "Added link option in  _process_response\r\n\r\n<!--\r\nIn _process_respons \"snippet\" provided non working links for the case that \"links\" had the correct answer. Thus added an elif statement before snippet\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\nIn _process_response link provided correct answers while the snippet reply provided non working links\r\n\r\n@vowelparrot \r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4947/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4947/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4946",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4946/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4946/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4946/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4946",
        "id": 1716309110,
        "node_id": "I_kwDOIPDwls5mTMx2",
        "number": 4946,
        "title": "GraphQL example notebook not working",
        "user": {
            "login": "cgrotz",
            "id": 888146,
            "node_id": "MDQ6VXNlcjg4ODE0Ng==",
            "avatar_url": "https://avatars.githubusercontent.com/u/888146?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cgrotz",
            "html_url": "https://github.com/cgrotz",
            "followers_url": "https://api.github.com/users/cgrotz/followers",
            "following_url": "https://api.github.com/users/cgrotz/following{/other_user}",
            "gists_url": "https://api.github.com/users/cgrotz/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cgrotz/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cgrotz/subscriptions",
            "organizations_url": "https://api.github.com/users/cgrotz/orgs",
            "repos_url": "https://api.github.com/users/cgrotz/repos",
            "events_url": "https://api.github.com/users/cgrotz/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cgrotz/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-18T21:46:51Z",
        "updated_at": "2023-09-12T17:06:03Z",
        "closed_at": "2023-09-12T17:03:59Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\nColab standard Python 3 backend\n\n### Who can help?\n\n@O-Roma\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Open GraphQL example notebook in colab\r\n2. Add langchain and openai to the pip install statement\r\n3. add environment variable for OPENAI_API_KEY\r\n4. Run the notebook\r\n\r\nGot the following error\r\n```\r\nValidationError: 3 validation errors for GraphQLAPIWrapper\r\ngql_client\r\n  field required (type=value_error.missing)\r\ngql_function\r\n  field required (type=value_error.missing)\r\n__root__\r\n  Could not import gql python package. Please install it with `pip install gql`. (type=value_error)\r\n```\n\n### Expected behavior\n\nThe example should probably work.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4946/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4946/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4945",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4945/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4945/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4945/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4945",
        "id": 1716304777,
        "node_id": "I_kwDOIPDwls5mTLuJ",
        "number": 4945,
        "title": "Issue: Stream a response from LangChain's OpenAI with Pyton Flask API",
        "user": {
            "login": "zigax1",
            "id": 80093733,
            "node_id": "MDQ6VXNlcjgwMDkzNzMz",
            "avatar_url": "https://avatars.githubusercontent.com/u/80093733?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zigax1",
            "html_url": "https://github.com/zigax1",
            "followers_url": "https://api.github.com/users/zigax1/followers",
            "following_url": "https://api.github.com/users/zigax1/following{/other_user}",
            "gists_url": "https://api.github.com/users/zigax1/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zigax1/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zigax1/subscriptions",
            "organizations_url": "https://api.github.com/users/zigax1/orgs",
            "repos_url": "https://api.github.com/users/zigax1/repos",
            "events_url": "https://api.github.com/users/zigax1/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zigax1/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 22,
        "created_at": "2023-05-18T21:41:40Z",
        "updated_at": "2023-11-26T20:12:27Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am using Python Flask app for chat over data. So in the console I am getting streamable response directly from the OpenAI since I can enable streming with a flag streaming=True.\r\n\r\nThe problem is, that I can't \u201cforward\u201d the stream or \u201cshow\u201d the strem than in my API call.\r\n\r\nCode for the processing OpenAI and chain is:\r\n\r\n```\r\ndef askQuestion(self, collection_id, question):\r\n        collection_name = \"collection-\" + str(collection_id)\r\n        self.llm = ChatOpenAI(model_name=self.model_name, temperature=self.temperature, openai_api_key=os.environ.get('OPENAI_API_KEY'), streaming=True, callback_manager=CallbackManager([StreamingStdOutCallbackHandler()]))\r\n        self.memory = ConversationBufferMemory(memory_key=\"chat_history\", return_messages=True,  output_key='answer')\r\n        \r\n        chroma_Vectorstore = Chroma(collection_name=collection_name, embedding_function=self.embeddingsOpenAi, client=self.chroma_client)\r\n\r\n\r\n        self.chain = ConversationalRetrievalChain.from_llm(self.llm, chroma_Vectorstore.as_retriever(similarity_search_with_score=True),\r\n                                                            return_source_documents=True,verbose=VERBOSE, \r\n                                                            memory=self.memory)\r\n        \r\n\r\n        result = self.chain({\"question\": question})\r\n        \r\n        res_dict = {\r\n            \"answer\": result[\"answer\"],\r\n        }\r\n\r\n        res_dict[\"source_documents\"] = []\r\n\r\n        for source in result[\"source_documents\"]:\r\n            res_dict[\"source_documents\"].append({\r\n                \"page_content\": source.page_content,\r\n                \"metadata\":  source.metadata\r\n            })\r\n\r\n        return res_dict`\r\n```\r\n\r\nand the API route code:\r\n\r\n```\r\ndef stream(collection_id, question):\r\n    completion = document_thread.askQuestion(collection_id, question)\r\n    for line in completion:\r\n        yield 'data: %s\\n\\n' % line\r\n\r\n@app.route(\"/collection/<int:collection_id>/ask_question\", methods=[\"POST\"])\r\n@stream_with_context\r\ndef ask_question(collection_id):\r\n    question = request.form[\"question\"]\r\n    # response_generator = document_thread.askQuestion(collection_id, question)\r\n    # return jsonify(response_generator)\r\n\r\n    def stream(question):\r\n        completion = document_thread.askQuestion(collection_id, question)\r\n        for line in completion['answer']:\r\n            yield line\r\n\r\n    return Response(stream(question), mimetype='text/event-stream')\r\n```\r\n\r\nI am testing my endpoint with curl and I am passing flag -N to the curl, so I should get the streamable response, if it is possible.\r\n\r\nWhen I make API call first the endpoint is waiting to process the data (I can see in my terminal in VS code the streamable answer) and when finished, I get everything displayed in one go.\r\n\r\nThanks\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4945/reactions",
            "total_count": 7,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4945/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4944",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4944/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4944/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4944/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4944",
        "id": 1716269896,
        "node_id": "I_kwDOIPDwls5mTDNI",
        "number": 4944,
        "title": "False \"Index not found\" messages",
        "user": {
            "login": "francisjervis",
            "id": 10519862,
            "node_id": "MDQ6VXNlcjEwNTE5ODYy",
            "avatar_url": "https://avatars.githubusercontent.com/u/10519862?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/francisjervis",
            "html_url": "https://github.com/francisjervis",
            "followers_url": "https://api.github.com/users/francisjervis/followers",
            "following_url": "https://api.github.com/users/francisjervis/following{/other_user}",
            "gists_url": "https://api.github.com/users/francisjervis/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/francisjervis/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/francisjervis/subscriptions",
            "organizations_url": "https://api.github.com/users/francisjervis/orgs",
            "repos_url": "https://api.github.com/users/francisjervis/repos",
            "events_url": "https://api.github.com/users/francisjervis/events{/privacy}",
            "received_events_url": "https://api.github.com/users/francisjervis/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-05-18T21:10:59Z",
        "updated_at": "2023-09-19T16:10:07Z",
        "closed_at": "2023-09-19T16:10:06Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n0.1173\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1: Create Chroma vectorstore \r\n2: Persist vectorstore\r\n3: Use vectorstore once\r\n4: Vectorstore no longer works, says \"Index not found\"\n\n### Expected behavior\n\nIt works.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4944/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4944/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4943",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4943/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4943/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4943/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4943",
        "id": 1716194737,
        "node_id": "I_kwDOIPDwls5mSw2x",
        "number": 4943,
        "title": "FLARE | Add CombineChain to handle long context",
        "user": {
            "login": "jordanparker6",
            "id": 29700471,
            "node_id": "MDQ6VXNlcjI5NzAwNDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29700471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordanparker6",
            "html_url": "https://github.com/jordanparker6",
            "followers_url": "https://api.github.com/users/jordanparker6/followers",
            "following_url": "https://api.github.com/users/jordanparker6/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordanparker6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordanparker6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordanparker6/subscriptions",
            "organizations_url": "https://api.github.com/users/jordanparker6/orgs",
            "repos_url": "https://api.github.com/users/jordanparker6/repos",
            "events_url": "https://api.github.com/users/jordanparker6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordanparker6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-18T20:04:50Z",
        "updated_at": "2023-09-15T16:12:36Z",
        "closed_at": "2023-09-15T16:12:35Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nFLARE is providing some more accurate output when it works. I would love to switch to it. However, I do find that it often breaches the 4k context length. \r\n\r\nI still don't have GPT4 access because I am a pleb (approve me plz OpenAI).\r\n\r\nThe stuff / map-reduce / refine chains used in the retrieval QandA would be great here. The FLARE chain looks like it is doing something akin to the \"stuff\" chain by just concatenating all the documents it found. \r\n\r\nIt would be nice if the LLMCombine chain was optional and defaulted to \"stuff\" like the retrieval chains do. This could be an option to handle context window issues when using FLARE. Ideally the same API followed, were users just pass the \"chain_type\" kwarg. \r\n\r\nThe 4k context window is unfortunately making FLARE unworkable.\r\n\r\nP.S. also interested in seeing if sources could be added to FLARE.\n\n### Motivation\n\nI want to switch my retreival chain to be FLARE based (ideally with sources in the future). However, the context window limitations are making it unworkable at the moment. I am not even using chat_history.\n\n### Your contribution\n\nHappy to work with someone on this to raise a PR.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4943/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4943/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4942",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4942/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4942/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4942/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4942",
        "id": 1716110918,
        "node_id": "I_kwDOIPDwls5mScZG",
        "number": 4942,
        "title": "loading .eml Email files of 5 GB as documents generating large number of tokens (7 million) on index creation",
        "user": {
            "login": "sanasz91mdev",
            "id": 39674269,
            "node_id": "MDQ6VXNlcjM5Njc0MjY5",
            "avatar_url": "https://avatars.githubusercontent.com/u/39674269?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/sanasz91mdev",
            "html_url": "https://github.com/sanasz91mdev",
            "followers_url": "https://api.github.com/users/sanasz91mdev/followers",
            "following_url": "https://api.github.com/users/sanasz91mdev/following{/other_user}",
            "gists_url": "https://api.github.com/users/sanasz91mdev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/sanasz91mdev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/sanasz91mdev/subscriptions",
            "organizations_url": "https://api.github.com/users/sanasz91mdev/orgs",
            "repos_url": "https://api.github.com/users/sanasz91mdev/repos",
            "events_url": "https://api.github.com/users/sanasz91mdev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/sanasz91mdev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T18:54:10Z",
        "updated_at": "2023-09-10T16:15:38Z",
        "closed_at": "2023-09-10T16:15:37Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain version 0.0.162\r\npython: 3.10\r\n\r\nMy all .eml email files are of 4.99 GB in total. Number of Documents generated are 5900000 .. and there are around 7 million tokens generated . \r\n\r\nI have 2 questions:\r\n\r\n1) since the documents contain simple plain text, why are there so many tokens generated? I mean 7 million tokens :/\r\n\r\n2) What can i do to reduce these number of tokens will data sampling help , should i index in batches of 1000?\r\n\r\ncode:\r\n\r\n```\r\n        print('loading docs from directory ...')\r\n        loader = DirectoryLoader('./test2',loader_cls=UnstructuredEmailLoader)\r\n        raw_documents = loader.load()\r\n        print('loaded docs with length')\r\n        #Splitting documents into chunks\r\n        text_splitter = RecursiveCharacterTextSplitter(\r\n            chunk_size=1000,\r\n            chunk_overlap=200,\r\n        )\r\n        documents = text_splitter.split_documents(raw_documents)\r\n        # Changing source to point to the original document\r\n        for x in documents: \r\n            x.page_content = x.page_content.replace(\"\\n\\n\", \" \")\r\n            x.page_content = x.page_content.replace(\"\\n\", \" \")\r\n            x.metadata[\"source\"] = x.metadata[\"source\"].replace(\"test\\\\\", \"\")\r\n            x.metadata[\"source\"] = x.metadata[\"source\"].replace(\"semails\\\\\", \"\")\r\n            x.metadata[\"source\"] = x.metadata[\"source\"].replace(\"test2\\\\\", \"\")\r\n            print(x)\r\n\r\n        # Creating index and saving it to disk\r\n        print(\"Creating index\")\r\n        print(\"length of documents: \"+str(len(documents)))\r\n        db = FAISS.from_documents(documents, embeddings )\r\n        print(\"Index created, saving to disk\")\r\n        db.save_local(\"./index\")\r\n```\r\n\r\n\r\n### Who can help?\r\n\r\n@hwchase17\r\n@vowelparrot\r\n\r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [X] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n-\r\n\r\n### Expected behavior\r\n\r\nToken should not be more than a million",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4942/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4942/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4941",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4941/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4941/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4941/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4941",
        "id": 1716073647,
        "node_id": "PR_kwDOIPDwls5Q1JGb",
        "number": 4941,
        "title": "docs: added `ecosystem/dependents` page",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T18:22:48Z",
        "updated_at": "2023-05-18T20:42:59Z",
        "closed_at": "2023-05-18T20:11:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4941",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4941",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4941.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4941.patch",
            "merged_at": "2023-05-18T20:11:09Z"
        },
        "body": "# docs: added `ecosystem/dependents` page\r\n\r\nAdded `ecosystem/dependents` page. Can we propose a better page name?\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n @dev2049\r\n   \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4941/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4941/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4940",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4940/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4940/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4940/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4940",
        "id": 1716005900,
        "node_id": "I_kwDOIPDwls5mSCwM",
        "number": 4940,
        "title": "Error while loading saved index in Elasticsearch",
        "user": {
            "login": "skyNagarro",
            "id": 98938171,
            "node_id": "U_kgDOBeWtOw",
            "avatar_url": "https://avatars.githubusercontent.com/u/98938171?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/skyNagarro",
            "html_url": "https://github.com/skyNagarro",
            "followers_url": "https://api.github.com/users/skyNagarro/followers",
            "following_url": "https://api.github.com/users/skyNagarro/following{/other_user}",
            "gists_url": "https://api.github.com/users/skyNagarro/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/skyNagarro/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/skyNagarro/subscriptions",
            "organizations_url": "https://api.github.com/users/skyNagarro/orgs",
            "repos_url": "https://api.github.com/users/skyNagarro/repos",
            "events_url": "https://api.github.com/users/skyNagarro/events{/privacy}",
            "received_events_url": "https://api.github.com/users/skyNagarro/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T17:34:22Z",
        "updated_at": "2023-09-15T22:12:58Z",
        "closed_at": "2023-09-01T04:56:33Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nWhile loading an already existing index with existing openAI embeddings (data indexed using haystack framework)\r\n```python\r\nelastic_vector_search = ElasticVectorSearch(\r\n    elasticsearch_url=es_url,\r\n    index_name=index,\r\n    embedding=embeddings\r\n)\r\n``` \r\nRunning below command\r\n```python\r\nelastic_vector_search.similarity_search(query)\r\n``` \r\ngives bellow error\r\n```python\r\n---------------------------------------------------------------------------\r\nBadRequestError                           Traceback (most recent call last)\r\nCell In[88], line 2\r\n      1 query = \"adnoc distribution\"\r\n----> 2 elastic_vector_search.similarity_search(query)\r\n\r\nFile /opt/homebrew/Caskroom/miniforge/base/envs/langchain/lib/python3.11/site-packages/langchain/vectorstores/elastic_vector_search.py:206, in ElasticVectorSearch.similarity_search(self, query, k, filter, **kwargs)\r\n    194 def similarity_search(\r\n    195     self, query: str, k: int = 4, filter: Optional[dict] = None, **kwargs: Any\r\n    196 ) -> List[Document]:\r\n    197     \"\"\"Return docs most similar to query.\r\n    198 \r\n    199     Args:\r\n   (...)\r\n    204         List of Documents most similar to the query.\r\n    205     \"\"\"\r\n--> 206     docs_and_scores = self.similarity_search_with_score(query, k, filter=filter)\r\n    207     documents = [d[0] for d in docs_and_scores]\r\n    208     return documents\r\n\r\nFile /opt/homebrew/Caskroom/miniforge/base/envs/langchain/lib/python3.11/site-packages/langchain/vectorstores/elastic_vector_search.py:222, in ElasticVectorSearch.similarity_search_with_score(self, query, k, filter, **kwargs)\r\n    220 embedding = self.embedding.embed_query(query)\r\n    221 script_query = _default_script_query(embedding, filter)\r\n--> 222 response = self.client.search(index=self.index_name, query=script_query, size=k)\r\n    223 hits = [hit for hit in response[\"hits\"][\"hits\"]]\r\n    224 docs_and_scores = [\r\n    225     (\r\n    226         Document(\r\n   (...)\r\n    232     for hit in hits\r\n    233 ]\r\n\r\nFile /opt/homebrew/Caskroom/miniforge/base/envs/langchain/lib/python3.11/site-packages/elasticsearch/_sync/client/utils.py:414, in _rewrite_parameters.<locals>.wrapper.<locals>.wrapped(*args, **kwargs)\r\n    411         except KeyError:\r\n    412             pass\r\n--> 414 return api(*args, **kwargs)\r\n\r\nFile /opt/homebrew/Caskroom/miniforge/base/envs/langchain/lib/python3.11/site-packages/elasticsearch/_sync/client/__init__.py:3857, in Elasticsearch.search(self, index, aggregations, aggs, allow_no_indices, allow_partial_search_results, analyze_wildcard, analyzer, batched_reduce_size, ccs_minimize_roundtrips, collapse, default_operator, df, docvalue_fields, error_trace, expand_wildcards, explain, ext, fields, filter_path, from_, highlight, human, ignore_throttled, ignore_unavailable, indices_boost, knn, lenient, max_concurrent_shard_requests, min_compatible_shard_node, min_score, pit, post_filter, pre_filter_shard_size, preference, pretty, profile, q, query, request_cache, rescore, rest_total_hits_as_int, routing, runtime_mappings, script_fields, scroll, search_after, search_type, seq_no_primary_term, size, slice, sort, source, source_excludes, source_includes, stats, stored_fields, suggest, suggest_field, suggest_mode, suggest_size, suggest_text, terminate_after, timeout, track_scores, track_total_hits, typed_keys, version)\r\n   3855 if __body is not None:\r\n   3856     __headers[\"content-type\"] = \"application/json\"\r\n-> 3857 return self.perform_request(  # type: ignore[return-value]\r\n   3858     \"POST\", __path, params=__query, headers=__headers, body=__body\r\n   3859 )\r\n\r\nFile /opt/homebrew/Caskroom/miniforge/base/envs/langchain/lib/python3.11/site-packages/elasticsearch/_sync/client/_base.py:320, in BaseClient.perform_request(self, method, path, params, headers, body)\r\n    317         except (ValueError, KeyError, TypeError):\r\n    318             pass\r\n--> 320     raise HTTP_EXCEPTIONS.get(meta.status, ApiError)(\r\n    321         message=message, meta=meta, body=resp_body\r\n    322     )\r\n    324 # 'X-Elastic-Product: Elasticsearch' should be on every 2XX response.\r\n    325 if not self._verified_elasticsearch:\r\n    326     # If the header is set we mark the server as verified.\r\n\r\nBadRequestError: BadRequestError(400, 'search_phase_execution_exception', 'runtime error')\r\n``` \r\n\r\nIf an index with embeddings(in this case openAI) is not created using langchain , will it not be loaded as a vector_store ?\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nRun the steps shown earlier\n\n### Expected behavior\n\nEventhough we do not create an elasticsearch index using langchain, an existing index with vector embeddings, should be able to load. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4940/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4940/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4939",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4939/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4939/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4939/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4939",
        "id": 1715984058,
        "node_id": "PR_kwDOIPDwls5Q01M-",
        "number": 4939,
        "title": "docs: vectorstores, different updates and fixes",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T17:17:54Z",
        "updated_at": "2023-05-18T22:35:48Z",
        "closed_at": "2023-05-18T22:35:48Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4939",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4939",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4939.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4939.patch",
            "merged_at": "2023-05-18T22:35:48Z"
        },
        "body": "# docs: vectorstores, different updates and fixes\r\n\r\nMultiple updates:\r\n- added/improved descriptions\r\n- fixed header levels\r\n- added headers\r\n- fixed headers\r\n\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n @dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4939/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4939/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4938",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4938/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4938/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4938/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4938",
        "id": 1715972393,
        "node_id": "PR_kwDOIPDwls5Q0yoy",
        "number": 4938,
        "title": "Correct typo in APIChain example notebook (Farenheit -> Fahrenheit)",
        "user": {
            "login": "verygoodsoftwarenotvirus",
            "id": 1289344,
            "node_id": "MDQ6VXNlcjEyODkzNDQ=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1289344?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/verygoodsoftwarenotvirus",
            "html_url": "https://github.com/verygoodsoftwarenotvirus",
            "followers_url": "https://api.github.com/users/verygoodsoftwarenotvirus/followers",
            "following_url": "https://api.github.com/users/verygoodsoftwarenotvirus/following{/other_user}",
            "gists_url": "https://api.github.com/users/verygoodsoftwarenotvirus/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/verygoodsoftwarenotvirus/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/verygoodsoftwarenotvirus/subscriptions",
            "organizations_url": "https://api.github.com/users/verygoodsoftwarenotvirus/orgs",
            "repos_url": "https://api.github.com/users/verygoodsoftwarenotvirus/repos",
            "events_url": "https://api.github.com/users/verygoodsoftwarenotvirus/events{/privacy}",
            "received_events_url": "https://api.github.com/users/verygoodsoftwarenotvirus/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T17:08:04Z",
        "updated_at": "2023-05-18T18:48:03Z",
        "closed_at": "2023-05-18T18:48:03Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4938",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4938",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4938.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4938.patch",
            "merged_at": "2023-05-18T18:48:03Z"
        },
        "body": "# Your PR Title (What it does)\r\nCorrect typo in APIChain example notebook (Farenheit -> Fahrenheit)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n(this doesn't strike me as important enough to warrant this)",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4938/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4938/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4937",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4937/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4937/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4937/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4937",
        "id": 1715966814,
        "node_id": "PR_kwDOIPDwls5Q0xaC",
        "number": 4937,
        "title": "Update redis integration tests",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T17:03:49Z",
        "updated_at": "2023-05-18T17:22:18Z",
        "closed_at": "2023-05-18T17:22:17Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4937",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4937",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4937.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4937.patch",
            "merged_at": "2023-05-18T17:22:17Z"
        },
        "body": "cc @tylerhutcherson ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4937/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4937/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4936",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4936/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4936/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4936/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4936",
        "id": 1715953048,
        "node_id": "PR_kwDOIPDwls5Q0uaV",
        "number": 4936,
        "title": "Redis kwargs fix",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T16:53:00Z",
        "updated_at": "2023-05-18T17:02:47Z",
        "closed_at": "2023-05-18T17:02:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4936",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4936",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4936.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4936.patch",
            "merged_at": "2023-05-18T17:02:46Z"
        },
        "body": "cc @tylerhutcherson ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4936/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4936/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4935",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4935/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4935/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4935/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4935",
        "id": 1715932208,
        "node_id": "PR_kwDOIPDwls5Q0p8q",
        "number": 4935,
        "title": "docs supabase update",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T16:35:44Z",
        "updated_at": "2023-05-18T17:43:20Z",
        "closed_at": "2023-05-18T17:42:09Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4935",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4935",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4935.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4935.patch",
            "merged_at": "2023-05-18T17:42:09Z"
        },
        "body": "# docs: updated `Supabase` notebook\r\n\r\n- the title of the notebook was inconsistent (included redundant \"Vectorstore\"). Removed this \"Vectorstore\"\r\n- added `Postgress` to the title. It is important. The `Postgres` name is much more popular than `Supabase`.\r\n- added description for the `Postrgress`\r\n- added more info to the `Supabase` description\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@dev2049\r\n  \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4935/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4935/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4934",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4934/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4934/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4934/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4934",
        "id": 1715894918,
        "node_id": "I_kwDOIPDwls5mRnqG",
        "number": 4934,
        "title": "Issue: Filling an issue or PR with `label(s)`",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-18T16:09:57Z",
        "updated_at": "2023-08-31T17:08:05Z",
        "closed_at": "2023-08-31T17:05:50Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\r\n\r\nThe author of the issue/PR cannot add a label to it. \r\nOf course, some labels should be accessible only with high privilege (like `bug`(?), `close`) but some should be accessible for everybody. Like `agent`, `chains`, and `documentation`.\r\nThe label is a powerful tool to filter out the issues/PR but is not accessible.\r\n\r\n### Suggestion:\r\n\r\nAllow the use of most of the `labels` to everybody in `Issues`/`pull requests`. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4934/reactions",
            "total_count": 1,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 1
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4934/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4933",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4933/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4933/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4933/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4933",
        "id": 1715877801,
        "node_id": "PR_kwDOIPDwls5Q0eAr",
        "number": 4933,
        "title": "fix: add_texts method of Weaviate vector store creats wrong embeddings",
        "user": {
            "login": "Shawn91",
            "id": 12252125,
            "node_id": "MDQ6VXNlcjEyMjUyMTI1",
            "avatar_url": "https://avatars.githubusercontent.com/u/12252125?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Shawn91",
            "html_url": "https://github.com/Shawn91",
            "followers_url": "https://api.github.com/users/Shawn91/followers",
            "following_url": "https://api.github.com/users/Shawn91/following{/other_user}",
            "gists_url": "https://api.github.com/users/Shawn91/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Shawn91/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Shawn91/subscriptions",
            "organizations_url": "https://api.github.com/users/Shawn91/orgs",
            "repos_url": "https://api.github.com/users/Shawn91/repos",
            "events_url": "https://api.github.com/users/Shawn91/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Shawn91/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T15:59:39Z",
        "updated_at": "2023-05-22T19:35:52Z",
        "closed_at": "2023-05-22T19:35:52Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4933",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4933",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4933.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4933.patch",
            "merged_at": "2023-05-22T19:35:52Z"
        },
        "body": "# fix a bug in the add_texts method of Weaviate vector store that creats wrong embeddings\r\n\r\nThe following is the original code in the `add_texts` method of the Weaviate vector store, from line 131 to 153, which contains a bug. The code here includes some extra explanations in the form of comments and some omissions.\r\n\r\n```python\r\n            for i, doc in enumerate(texts):\r\n\r\n                # some code omitted\r\n\r\n                if self._embedding is not None:\r\n                    # variable texts is a list of string and doc here is just a string. \r\n                    # list(doc) actually breaks up the string into characters.\r\n                    # so, embeddings[0] is just the embedding of the first character\r\n                    embeddings = self._embedding.embed_documents(list(doc))\r\n                    batch.add_data_object(\r\n                        data_object=data_properties,\r\n                        class_name=self._index_name,\r\n                        uuid=_id,\r\n                        vector=embeddings[0],\r\n                    )\r\n```\r\n\r\nTo fix this bug, I pulled the embedding operation out of the for loop and embed all texts at once. \r\n\r\nAccording to the contributing.md doc, it seems I can have my twitter account mentioned? I'd love that very much. My twitter handler is `ShawnDeveloping`. HAHA.\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4933/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4933/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4932",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4932/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4932/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4932/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4932",
        "id": 1715800480,
        "node_id": "PR_kwDOIPDwls5Q0NN4",
        "number": 4932,
        "title": "Bug fixes and error handling in Redis - Vectorstore",
        "user": {
            "login": "iamadhee",
            "id": 69910091,
            "node_id": "MDQ6VXNlcjY5OTEwMDkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/69910091?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iamadhee",
            "html_url": "https://github.com/iamadhee",
            "followers_url": "https://api.github.com/users/iamadhee/followers",
            "following_url": "https://api.github.com/users/iamadhee/following{/other_user}",
            "gists_url": "https://api.github.com/users/iamadhee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iamadhee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iamadhee/subscriptions",
            "organizations_url": "https://api.github.com/users/iamadhee/orgs",
            "repos_url": "https://api.github.com/users/iamadhee/repos",
            "events_url": "https://api.github.com/users/iamadhee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iamadhee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 21,
        "created_at": "2023-05-18T15:05:35Z",
        "updated_at": "2023-05-19T20:02:04Z",
        "closed_at": "2023-05-19T20:02:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4932",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4932",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4932.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4932.patch",
            "merged_at": "2023-05-19T20:02:04Z"
        },
        "body": "# Bug fixes in Redis - Vectorstore (Added the version of redis to the error message and removed the cls argument from a classmethod)\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes  #3893 #4896\r\n\r\n## Who can review?\r\n\r\n@dev2049 @tylerhutcherson \r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4932/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4932/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4931",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4931/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4931/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4931/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4931",
        "id": 1715759518,
        "node_id": "PR_kwDOIPDwls5Q0ETR",
        "number": 4931,
        "title": "Update custom_multi_action_agent.ipynb",
        "user": {
            "login": "vishwa-rn",
            "id": 44315599,
            "node_id": "MDQ6VXNlcjQ0MzE1NTk5",
            "avatar_url": "https://avatars.githubusercontent.com/u/44315599?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vishwa-rn",
            "html_url": "https://github.com/vishwa-rn",
            "followers_url": "https://api.github.com/users/vishwa-rn/followers",
            "following_url": "https://api.github.com/users/vishwa-rn/following{/other_user}",
            "gists_url": "https://api.github.com/users/vishwa-rn/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vishwa-rn/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vishwa-rn/subscriptions",
            "organizations_url": "https://api.github.com/users/vishwa-rn/orgs",
            "repos_url": "https://api.github.com/users/vishwa-rn/repos",
            "events_url": "https://api.github.com/users/vishwa-rn/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vishwa-rn/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T14:39:25Z",
        "updated_at": "2023-05-18T18:53:12Z",
        "closed_at": "2023-05-18T18:53:12Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4931",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4931",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4931.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4931.patch",
            "merged_at": "2023-05-18T18:53:12Z"
        },
        "body": "Updated the docs from \r\n\"An agent consists of three parts:\" to \r\n\"An agent consists of two parts:\" since there are only two parts in the documentation\r\n\r\n# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4931/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4931/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4930",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4930/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4930/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4930/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4930",
        "id": 1715710172,
        "node_id": "PR_kwDOIPDwls5Qz5ak",
        "number": 4930,
        "title": "fix: error in example code",
        "user": {
            "login": "so2liu",
            "id": 9153390,
            "node_id": "MDQ6VXNlcjkxNTMzOTA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9153390?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/so2liu",
            "html_url": "https://github.com/so2liu",
            "followers_url": "https://api.github.com/users/so2liu/followers",
            "following_url": "https://api.github.com/users/so2liu/following{/other_user}",
            "gists_url": "https://api.github.com/users/so2liu/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/so2liu/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/so2liu/subscriptions",
            "organizations_url": "https://api.github.com/users/so2liu/orgs",
            "repos_url": "https://api.github.com/users/so2liu/repos",
            "events_url": "https://api.github.com/users/so2liu/events{/privacy}",
            "received_events_url": "https://api.github.com/users/so2liu/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T14:09:47Z",
        "updated_at": "2023-05-18T18:49:45Z",
        "closed_at": "2023-05-18T18:49:45Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4930",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4930",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4930.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4930.patch",
            "merged_at": "2023-05-18T18:49:45Z"
        },
        "body": "# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4930/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4930/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4929",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4929/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4929/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4929/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4929",
        "id": 1715696691,
        "node_id": "PR_kwDOIPDwls5Qz2Zu",
        "number": 4929,
        "title": "Empty check before pop",
        "user": {
            "login": "edwardzjl",
            "id": 7287580,
            "node_id": "MDQ6VXNlcjcyODc1ODA=",
            "avatar_url": "https://avatars.githubusercontent.com/u/7287580?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/edwardzjl",
            "html_url": "https://github.com/edwardzjl",
            "followers_url": "https://api.github.com/users/edwardzjl/followers",
            "following_url": "https://api.github.com/users/edwardzjl/following{/other_user}",
            "gists_url": "https://api.github.com/users/edwardzjl/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/edwardzjl/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/edwardzjl/subscriptions",
            "organizations_url": "https://api.github.com/users/edwardzjl/orgs",
            "repos_url": "https://api.github.com/users/edwardzjl/repos",
            "events_url": "https://api.github.com/users/edwardzjl/events{/privacy}",
            "received_events_url": "https://api.github.com/users/edwardzjl/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T14:03:20Z",
        "updated_at": "2023-05-23T23:46:51Z",
        "closed_at": "2023-05-23T23:46:51Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4929",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4929",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4929.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4929.patch",
            "merged_at": "2023-05-23T23:46:51Z"
        },
        "body": "# Check whether 'other' is empty before popping\r\n\r\nThis PR could fix a potential 'popping empty set' error.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4929/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4929/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4928",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4928/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4928/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4928/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4928",
        "id": 1715680020,
        "node_id": "PR_kwDOIPDwls5Qzyt0",
        "number": 4928,
        "title": "Deeplake upd",
        "user": {
            "login": "adolkhan",
            "id": 54854336,
            "node_id": "MDQ6VXNlcjU0ODU0MzM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/54854336?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/adolkhan",
            "html_url": "https://github.com/adolkhan",
            "followers_url": "https://api.github.com/users/adolkhan/followers",
            "following_url": "https://api.github.com/users/adolkhan/following{/other_user}",
            "gists_url": "https://api.github.com/users/adolkhan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/adolkhan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/adolkhan/subscriptions",
            "organizations_url": "https://api.github.com/users/adolkhan/orgs",
            "repos_url": "https://api.github.com/users/adolkhan/repos",
            "events_url": "https://api.github.com/users/adolkhan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/adolkhan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T13:53:33Z",
        "updated_at": "2023-06-13T09:11:10Z",
        "closed_at": "2023-06-13T09:11:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4928",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4928",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4928.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4928.patch",
            "merged_at": null
        },
        "body": "# DeepLakeVector integration update\r\n\r\nRefactoring code to support new DeepLakeVectorStore module.\r\nImprovements\r\n* added support for different execution option during searching. Now options are: `python`, `tensor_db`, `compute_engine`.\r\n* bumped deeplake to be between 3.3.0 and 3.5.2\r\n* updated deeplake.ipynb example (Fixed windows related problem and added examples of new features)\r\n\r\n\\\r\nNotes\r\n* please double check if poetry is not messed up (thanks!) \\\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n@hwchase17\r\n@dev2049\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4928/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4928/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4927",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4927/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4927/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4927/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4927",
        "id": 1715651416,
        "node_id": "PR_kwDOIPDwls5QzseU",
        "number": 4927,
        "title": "feat #4479: TextLoader auto detect encoding and improved exceptions",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-18T13:34:26Z",
        "updated_at": "2023-05-18T13:55:15Z",
        "closed_at": "2023-05-18T13:55:14Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4927",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4927",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4927.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4927.patch",
            "merged_at": "2023-05-18T13:55:14Z"
        },
        "body": "# TextLoader auto detect encoding and enhanced exception handling\n<!--\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\n\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\n\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\n-->\n\n- Add an option to enable encoding detection on `TextLoader`. \n- The detection is done using `chardet`\n- The loading is done by trying all detected encodings by order of confidence or raise an exception otherwise.\n\n### New Dependencies:\n- `chardet`\n\n<!-- Remove if not applicable -->\n\nFixes #4479 \n\n## Before submitting\n\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\n\n## Who can review?\n\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\n\n- @eyurtsev\n\n     \n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4927/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4927/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4926",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4926/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4926/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4926/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4926",
        "id": 1715636425,
        "node_id": "PR_kwDOIPDwls5QzpMB",
        "number": 4926,
        "title": "Load specific file types from Google Drive (issue #4878)",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T13:24:38Z",
        "updated_at": "2023-05-18T13:27:54Z",
        "closed_at": "2023-05-18T13:27:53Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4926",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4926",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4926.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4926.patch",
            "merged_at": "2023-05-18T13:27:53Z"
        },
        "body": "# Load specific file types from Google Drive (issue #4878)\n Add the possibility to define what file types you want to load from Google Drive.\n \n```\n loader = GoogleDriveLoader(\n    folder_id=\"1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5\",\n    file_types=[\"document\", \"pdf\"]\n    recursive=False\n)\n```\n\nFixes ##4878\n\n## Who can review?\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\nDataLoaders\n- @eyurtsev\n\nTwitter: [@UmerHAdil](https://twitter.com/@UmerHAdil) | Discord: RicChilligerDude#7589\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4926/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4926/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4925",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4925/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4925/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4925/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4925",
        "id": 1715594468,
        "node_id": "I_kwDOIPDwls5mQeTk",
        "number": 4925,
        "title": "langchain AzureOpenAI Embeddings",
        "user": {
            "login": "ZohaibRamzan",
            "id": 48449038,
            "node_id": "MDQ6VXNlcjQ4NDQ5MDM4",
            "avatar_url": "https://avatars.githubusercontent.com/u/48449038?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ZohaibRamzan",
            "html_url": "https://github.com/ZohaibRamzan",
            "followers_url": "https://api.github.com/users/ZohaibRamzan/followers",
            "following_url": "https://api.github.com/users/ZohaibRamzan/following{/other_user}",
            "gists_url": "https://api.github.com/users/ZohaibRamzan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ZohaibRamzan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ZohaibRamzan/subscriptions",
            "organizations_url": "https://api.github.com/users/ZohaibRamzan/orgs",
            "repos_url": "https://api.github.com/users/ZohaibRamzan/repos",
            "events_url": "https://api.github.com/users/ZohaibRamzan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ZohaibRamzan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-18T12:56:40Z",
        "updated_at": "2023-05-19T20:11:46Z",
        "closed_at": "2023-05-19T20:11:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain-0.0.173\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [X] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI am using the same code provided here. [](https://python.langchain.com/en/latest/modules/models/text_embedding/examples/azureopenai.html)\r\nMy code is like:\r\n\r\n```\r\nfrom langchain.embeddings.openai import OpenAIEmbeddings\r\n# open ai key\r\nopenai.api_type = \"azure\"\r\nopenai.api_version = \"2023-03-15-preview\"\r\nopenai.api_base = 'https://xxxxxopenai.openai.azure.com/'\r\nopenai.api_key = \"xxxxxxxxxxxxxxxxxxxxxxxx\"\r\nembeddings = OpenAIEmbeddings(deployment='Embedding_Generation' )\r\nprint(embeddings.embed_query(\"Hi How are You\"))\r\n```\r\n\r\nI also tried other options but getting the same error on print statement.\r\nAuthenticationError: Access denied due to invalid subscription key or wrong API endpoint. Make sure to provide a valid key for an active subscription and use a correct regional API endpoint for your resource.\n\n### Expected behavior\n\nI want to generate the embneddings.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4925/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4925/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4923",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4923/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4923/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4923/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4923",
        "id": 1715520748,
        "node_id": "PR_kwDOIPDwls5QzPox",
        "number": 4923,
        "title": "Chatconv agent: output parser exception",
        "user": {
            "login": "blob42",
            "id": 210457,
            "node_id": "MDQ6VXNlcjIxMDQ1Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/210457?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/blob42",
            "html_url": "https://github.com/blob42",
            "followers_url": "https://api.github.com/users/blob42/followers",
            "following_url": "https://api.github.com/users/blob42/following{/other_user}",
            "gists_url": "https://api.github.com/users/blob42/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/blob42/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/blob42/subscriptions",
            "organizations_url": "https://api.github.com/users/blob42/orgs",
            "repos_url": "https://api.github.com/users/blob42/repos",
            "events_url": "https://api.github.com/users/blob42/events{/privacy}",
            "received_events_url": "https://api.github.com/users/blob42/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T12:03:07Z",
        "updated_at": "2023-05-18T23:20:35Z",
        "closed_at": "2023-05-18T23:20:35Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4923",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4923",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4923.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4923.patch",
            "merged_at": "2023-05-18T23:20:35Z"
        },
        "body": "the output parser form chat conversational agent now   raises `OutputParserException` like the rest. \r\n\r\nThe `raise OutputParserExeption(...) from e` form also carries through the original error details on what went wrong.\r\n\r\nI added the `ValueError` as a base class to `OutputParserException` to avoid breaking code that was relying on `ValueError` as a way to catch exceptions from the agent. So catching ValuError still works. Not sure if this is a good idea though ?\r\n \r\n## Who can review?\r\n\r\n - @vowelparrot\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4923/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4923/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4922",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4922/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4922/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4922/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4922",
        "id": 1715504366,
        "node_id": "I_kwDOIPDwls5mQITu",
        "number": 4922,
        "title": "Seems Langchain Wandb can not handle the ChatOpenAI object?",
        "user": {
            "login": "firezym",
            "id": 3654421,
            "node_id": "MDQ6VXNlcjM2NTQ0MjE=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3654421?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/firezym",
            "html_url": "https://github.com/firezym",
            "followers_url": "https://api.github.com/users/firezym/followers",
            "following_url": "https://api.github.com/users/firezym/following{/other_user}",
            "gists_url": "https://api.github.com/users/firezym/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/firezym/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/firezym/subscriptions",
            "organizations_url": "https://api.github.com/users/firezym/orgs",
            "repos_url": "https://api.github.com/users/firezym/repos",
            "events_url": "https://api.github.com/users/firezym/events{/privacy}",
            "received_events_url": "https://api.github.com/users/firezym/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-18T11:51:57Z",
        "updated_at": "2023-09-14T03:11:01Z",
        "closed_at": "2023-09-14T03:08:45Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nThe llm model using default davinci example provided in https://python.langchain.com/en/latest/ecosystem/wandb_tracking.html is OK. But seems not able to handle ChatOpenAI object. How to solve this?\r\nThe code is as below:\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nCode:\r\n```python\r\nfrom langchain.callbacks import WandbCallbackHandler, StdOutCallbackHandler\r\n\r\nwandb_callback = WandbCallbackHandler(\r\n    job_type=\"inference\",\r\n    project=\"langchain_callback_demo\",\r\n    group=\"test_group\",\r\n    name=\"llm\",\r\n    tags=[\"test\"],\r\n)\r\ncallbacks = [StdOutCallbackHandler(), wandb_callback]\r\n\r\nchat = ChatOpenAI(model_name='gpt-3.5-turbo', callbacks=callbacks, temperature=0, request_timeout=20)\r\nresp = chat([HumanMessage(content=\"Write me 4 greeting sentences.\")])\r\nwandb_callback.flush_tracker(chat, name=\"simple\")\r\n```\n\n### Expected behavior\n\nError:\r\n```\r\n---------------------------------------------------------------------------\r\nAttributeError                            Traceback (most recent call last)\r\nCell In[3], line 4\r\n      2 chat = ChatOpenAI(model_name='gpt-3.5-turbo', callbacks=callbacks, temperature=0, request_timeout=20)\r\n      3 resp = chat([HumanMessage(content=\"Write me 4 greeting sentences.\")])\r\n----> 4 wandb_callback.flush_tracker(chat, name=\"simple\")\r\n\r\nFile [~/miniconda3/envs/lang/lib/python3.11/site-packages/langchain/callbacks/wandb_callback.py:560](https://vscode-remote+wsl-002bubuntu-002d22-002e04.vscode-resource.vscode-cdn.net/home/ocean/projects/behavior/~/miniconda3/envs/lang/lib/python3.11/site-packages/langchain/callbacks/wandb_callback.py:560), in WandbCallbackHandler.flush_tracker(self, langchain_asset, reset, finish, job_type, project, entity, tags, group, name, notes, visualize, complexity_metrics)\r\n    558 model_artifact.add(session_analysis_table, name=\"session_analysis\")\r\n    559 try:\r\n--> 560     langchain_asset.save(langchain_asset_path)\r\n    561     model_artifact.add_file(str(langchain_asset_path))\r\n    562     model_artifact.metadata = load_json_to_dict(langchain_asset_path)\r\n\r\nAttributeError: 'ChatOpenAI' object has no attribute 'save'\r\n```",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4922/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4922/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4921",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4921/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4921/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4921/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4921",
        "id": 1715480235,
        "node_id": "I_kwDOIPDwls5mQCar",
        "number": 4921,
        "title": "ValueError: Got unknown type R ",
        "user": {
            "login": "luca-git",
            "id": 2820583,
            "node_id": "MDQ6VXNlcjI4MjA1ODM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2820583?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luca-git",
            "html_url": "https://github.com/luca-git",
            "followers_url": "https://api.github.com/users/luca-git/followers",
            "following_url": "https://api.github.com/users/luca-git/following{/other_user}",
            "gists_url": "https://api.github.com/users/luca-git/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luca-git/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luca-git/subscriptions",
            "organizations_url": "https://api.github.com/users/luca-git/orgs",
            "repos_url": "https://api.github.com/users/luca-git/repos",
            "events_url": "https://api.github.com/users/luca-git/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luca-git/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T11:32:44Z",
        "updated_at": "2023-05-18T14:51:39Z",
        "closed_at": "2023-05-18T14:51:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nwindows 11, anaconda, langchain .__version__: '0.0.171' python 3.9.16\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nHi, I am trying to build a custom tool that will take some text as input prompt it with some specific prompt and output the prompted text. When doing so the output text is correct do I get an error in the end here is the code: \r\n\r\n \r\n\r\n```python \r\n\r\n@tool(\"optimistic_string\") \r\n\r\ndef optimistic_string(input_string: str) -> str: \r\n\r\n    \"\"\"use when unsure about other options\"\"\" \r\n\r\n    # Add your logic to process the input_string and generate the output_string \r\n\r\n    prompt = \"Rewrite the following sentence with a more optimistic tone: {{input_string}}\" \r\n\r\n    output_string = llm.generate(prompt) # Replace this with the actual call to the language model \r\n\r\n    return \"output_string\" \r\n\r\ntools = [optimistic_string] \r\n\r\n# Initialize the agent with the custom tool \r\n\r\nllm = ChatOpenAI(temperature=0) \r\n\r\nagent = initialize_agent(tools, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True) \r\n\r\n  \r\n\r\n# Run the agent with an example input \r\n\r\nresult = agent.run( \"I'm not sure about the future.\") \r\n\r\nprint(result) \r\n\r\n``` \r\n\r\nHere is the error: \r\n\r\n``` \r\n\r\n> Entering new AgentExecutor chain... \r\n\r\nI should try to be optimistic and see the positive possibilities. \r\n\r\nAction: optimistic_string \r\n\r\nAction Input: \"I'm excited to see what the future holds!\"Traceback (most recent call last): \r\n\r\n\u2026 \r\n\r\n  \r\n\r\n  File ~\\anaconda3\\envs\\aagi\\lib\\site-packages\\langchain\\chat_models\\openai.py:307 in <listcomp> \r\n\r\n    message_dicts = [_convert_message_to_dict(m) for m in messages] \r\n\r\n  \r\n\r\n  File ~\\anaconda3\\envs\\aagi\\lib\\site-packages\\langchain\\chat_models\\openai.py:92 in _convert_message_to_dict \r\n\r\n    raise ValueError(f\"Got unknown type {message}\") \r\n\r\n  \r\n\r\nValueError: Got unknown type R \r\n\r\n``` \n\n### Expected behavior\n\nJust output the text",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4921/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4921/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4920",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4920/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4920/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4920/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4920",
        "id": 1715475962,
        "node_id": "PR_kwDOIPDwls5QzFvf",
        "number": 4920,
        "title": "PGVector logger message level",
        "user": {
            "login": "jmtristancho",
            "id": 83718131,
            "node_id": "MDQ6VXNlcjgzNzE4MTMx",
            "avatar_url": "https://avatars.githubusercontent.com/u/83718131?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jmtristancho",
            "html_url": "https://github.com/jmtristancho",
            "followers_url": "https://api.github.com/users/jmtristancho/followers",
            "following_url": "https://api.github.com/users/jmtristancho/following{/other_user}",
            "gists_url": "https://api.github.com/users/jmtristancho/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jmtristancho/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jmtristancho/subscriptions",
            "organizations_url": "https://api.github.com/users/jmtristancho/orgs",
            "repos_url": "https://api.github.com/users/jmtristancho/repos",
            "events_url": "https://api.github.com/users/jmtristancho/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jmtristancho/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-18T11:29:21Z",
        "updated_at": "2023-05-19T21:01:26Z",
        "closed_at": "2023-05-19T21:01:26Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4920",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4920",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4920.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4920.patch",
            "merged_at": "2023-05-19T21:01:26Z"
        },
        "body": "# Change the logger message level\r\n\r\nThe library is logging at `error` level a situation that is not an error.\r\nWe noticed this error in our logs, but from our point of view it's an expected behavior and the log level should be `warning`.\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4920/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4920/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4919",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4919/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4919/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4919/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4919",
        "id": 1715469726,
        "node_id": "I_kwDOIPDwls5mP_2e",
        "number": 4919,
        "title": "Unable to use ImageCaptionLoader function",
        "user": {
            "login": "nithinreddyyyyyy",
            "id": 129744879,
            "node_id": "U_kgDOB7u_7w",
            "avatar_url": "https://avatars.githubusercontent.com/u/129744879?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/nithinreddyyyyyy",
            "html_url": "https://github.com/nithinreddyyyyyy",
            "followers_url": "https://api.github.com/users/nithinreddyyyyyy/followers",
            "following_url": "https://api.github.com/users/nithinreddyyyyyy/following{/other_user}",
            "gists_url": "https://api.github.com/users/nithinreddyyyyyy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/nithinreddyyyyyy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/nithinreddyyyyyy/subscriptions",
            "organizations_url": "https://api.github.com/users/nithinreddyyyyyy/orgs",
            "repos_url": "https://api.github.com/users/nithinreddyyyyyy/repos",
            "events_url": "https://api.github.com/users/nithinreddyyyyyy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/nithinreddyyyyyy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-18T11:24:00Z",
        "updated_at": "2023-11-01T16:07:25Z",
        "closed_at": "2023-11-01T16:07:24Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nBelow is the code which I have written\r\n\r\n```\r\nfrom langchain.document_loaders import ImageCaptionLoader\r\nimport transformers\r\nimport pytessearct\r\n\r\npytesseract.pytesseract.tesseract_cmd = r'C:\\Program Files\\Tesseract-OCR\\tesseract.exe'\r\n\r\nloader = ImageCaptionLoader(r\"C:\\Users\\q,k and v in self-attention.PNG\")\r\nlist_docs = loader.load()\r\nlist_docs\r\n```\r\n\r\nThe above code is returning the below output, it is saying transformers package not found, but it is already installed and import is running.\r\n\r\n\r\n```\r\n---------------------------------------------------------------------------\r\nImportError                               Traceback (most recent call last)\r\nFile ~\\anaconda3\\lib\\site-packages\\langchain\\document_loaders\\image_captions.py:40, in ImageCaptionLoader.load(self)\r\n     39 try:\r\n---> 40     from transformers import BlipForConditionalGeneration, BlipProcessor\r\n     41 except ImportError:\r\n\r\nImportError: cannot import name 'BlipForConditionalGeneration' from 'transformers' (C:\\Users\\nithi\\anaconda3\\lib\\site-packages\\transformers\\__init__.py)\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nValueError                                Traceback (most recent call last)\r\nCell In[4], line 2\r\n      1 loader = ImageCaptionLoader(r\"C:\\Users\\q,k and v in self-attention.PNG\")\r\n----> 2 list_docs = loader.load()\r\n      3 list_docs\r\n\r\nFile ~\\anaconda3\\lib\\site-packages\\langchain\\document_loaders\\image_captions.py:42, in ImageCaptionLoader.load(self)\r\n     40     from transformers import BlipForConditionalGeneration, BlipProcessor\r\n     41 except ImportError:\r\n---> 42     raise ValueError(\r\n     43         \"transformers package not found, please install with\"\r\n     44         \"`pip install transformers`\"\r\n     45     )\r\n     47 processor = BlipProcessor.from_pretrained(self.blip_processor)\r\n     48 model = BlipForConditionalGeneration.from_pretrained(self.blip_model)\r\n\r\nValueError: transformers package not found, please install with`pip install transformers`\r\n```\r\n\r\nCan anyone help me with this?\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n-\n\n### Expected behavior\n\nI'm unable to load the image using ImageCaptionLoader.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4919/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4919/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4918",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4918/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4918/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4918/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4918",
        "id": 1715371728,
        "node_id": "I_kwDOIPDwls5mPn7Q",
        "number": 4918,
        "title": "How to enable precise formatting for the input of a tools utility class, such as accepting data of type list[str]? Is this achievable?",
        "user": {
            "login": "jhrsya",
            "id": 54741554,
            "node_id": "MDQ6VXNlcjU0NzQxNTU0",
            "avatar_url": "https://avatars.githubusercontent.com/u/54741554?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jhrsya",
            "html_url": "https://github.com/jhrsya",
            "followers_url": "https://api.github.com/users/jhrsya/followers",
            "following_url": "https://api.github.com/users/jhrsya/following{/other_user}",
            "gists_url": "https://api.github.com/users/jhrsya/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jhrsya/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jhrsya/subscriptions",
            "organizations_url": "https://api.github.com/users/jhrsya/orgs",
            "repos_url": "https://api.github.com/users/jhrsya/repos",
            "events_url": "https://api.github.com/users/jhrsya/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jhrsya/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-18T10:10:20Z",
        "updated_at": "2023-10-08T07:25:51Z",
        "closed_at": "2023-09-15T16:12:41Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHow to enable precise formatting for the input of a tools utility class, such as accepting data of type list[str]? Is this achievable?\r\n```python\r\nclass QueryTokenAssetsInput(BaseModel):\r\n    addresses: str = Field(description=\"like 'address1,address2,address3',should be a list of addresses\")\r\n\r\n@tool(\"query_token_assets\", return_direct=True, args_schema=QueryTokenAssetsInput)\r\ndef query_prices(addresses: str):\r\n    \"\"\"query the prices of tokens\"\"\"\r\n    addresses = re.findall(r'\"([^\"]*)', addresses)[0].split(',')\r\n    addresses = [address.replace(\" \",'') for address in addresses]\r\n    data = fetcher.query_tokens_price(addresses=addresses)\r\n    return data\r\n```\r\nJust like the code snippet provided above, when the input \"addresses\" is a string and the question posed to the large model is about `the price of \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599, 0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84, 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\"`, it interprets \"addresses\" as `'addresses = \"0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599,0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84'\"`. This requires me to use regular expressions to parse the string and convert it into `['0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599', '0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84']`, but sometimes \"addresses\" is not very consistent, leading to bugs in my regular expression parsing. How can I make the input for \"addresses\" more stable? Is it possible to directly convert \"addresses\" into a list[str]?\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nfrom langchain.tools.base import tool, BaseModel, Field\r\nimport os\r\nfrom typing import List\r\nimport re\r\n\r\nclass QueryTokenAssetsInput(BaseModel):\r\n    addresses: str = Field(description=\"like 'address1,address2,address3',should be a list of addresses\")\r\n\r\n@tool(\"query_token_assets\", return_direct=True, args_schema=QueryTokenAssetsInput)\r\ndef query_prices(addresses: str):\r\n    \"\"\"query the prices of tokens\"\"\"\r\n    addresses = re.findall(r'\"([^\"]*)', addresses)[0].split(',')\r\n    addresses = [address.replace(\" \",'') for address in addresses]\r\n    return data\r\n\r\n\r\nif __name__ == \"__main__\":\r\n    import json\r\n    with open(\"langchain/api_key.json\", \"r\") as f:\r\n        api_key = json.load(f)\r\n    os.environ[\"OPENAI_API_KEY\"] = api_key[\"OPANAI_API_KEY\"]\r\n    from langchain.agents import AgentType, initialize_agent\r\n    from langchain.chat_models import ChatOpenAI\r\n    llm = ChatOpenAI(temperature=0)\r\n    agent = initialize_agent([query_prices, get_file_sizes], llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)\r\n    data = agent.run(\"the price of 0x2260FAC5E5542a773Aa44fBCfeDf7C193bc2C599, 0xae7ab96520DE3A18E5e111B5EaAb095312D7fE84, 0xA0b86991c6218b36c1d19D4a2e9Eb0cE3606eB48\")\r\n    print(data)\n\n### Expected behavior\n\nHow can I ensure that the input for \"addresses\" remains stable and directly becomes a list[str] type?",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4918/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4918/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4917",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4917/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4917/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4917/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4917",
        "id": 1715302612,
        "node_id": "I_kwDOIPDwls5mPXDU",
        "number": 4917,
        "title": "llm-math Tools takes a word problem rather than a numerical expression.",
        "user": {
            "login": "Hizafa-Nadeem",
            "id": 73908345,
            "node_id": "MDQ6VXNlcjczOTA4MzQ1",
            "avatar_url": "https://avatars.githubusercontent.com/u/73908345?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Hizafa-Nadeem",
            "html_url": "https://github.com/Hizafa-Nadeem",
            "followers_url": "https://api.github.com/users/Hizafa-Nadeem/followers",
            "following_url": "https://api.github.com/users/Hizafa-Nadeem/following{/other_user}",
            "gists_url": "https://api.github.com/users/Hizafa-Nadeem/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Hizafa-Nadeem/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Hizafa-Nadeem/subscriptions",
            "organizations_url": "https://api.github.com/users/Hizafa-Nadeem/orgs",
            "repos_url": "https://api.github.com/users/Hizafa-Nadeem/repos",
            "events_url": "https://api.github.com/users/Hizafa-Nadeem/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Hizafa-Nadeem/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-18T09:20:29Z",
        "updated_at": "2023-12-11T20:49:37Z",
        "closed_at": "2023-09-12T16:14:49Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nWorking on Windows machine using a conda environment.\r\n\r\naiohttp==3.8.4\r\naiosignal==1.3.1\r\naltair==4.2.2\r\nanyio @ file:///C:/ci_311/anyio_1676425491996/work/dist\r\nargilla==1.6.0\r\nargon2-cffi @ file:///opt/conda/conda-bld/argon2-cffi_1645000214183/work\r\nargon2-cffi-bindings @ file:///C:/ci_311/argon2-cffi-bindings_1676424443321/work\r\nasttokens @ file:///opt/conda/conda-bld/asttokens_1646925590279/work\r\nasync-timeout==4.0.2\r\nattrs @ file:///C:/ci_311/attrs_1676422272484/work\r\nBabel @ file:///C:/ci_311/babel_1676427169844/work\r\nbackcall @ file:///home/ktietz/src/ci/backcall_1611930011877/work\r\nbackoff==2.2.1\r\nbeautifulsoup4 @ file:///C:/b/abs_0agyz1wsr4/croot/beautifulsoup4-split_1681493048687/work\r\nbleach @ file:///opt/conda/conda-bld/bleach_1641577558959/work\r\nblinker==1.6.2\r\nbrotlipy==0.7.0\r\ncachetools==5.3.0\r\ncertifi @ file:///C:/b/abs_4a0polqwty/croot/certifi_1683875377622/work/certifi\r\ncffi @ file:///C:/ci_311/cffi_1676423759166/work\r\nchardet==5.1.0\r\ncharset-normalizer @ file:///tmp/build/80754af9/charset-normalizer_1630003229654/work\r\nchromadb==0.3.21\r\nclick==8.1.3\r\nclickhouse-connect==0.5.22\r\ncolorama @ file:///C:/ci_311/colorama_1676422310965/work\r\ncomm @ file:///C:/ci_311/comm_1678376562840/work\r\ncommonmark==0.9.1\r\ncryptography @ file:///C:/ci_311/cryptography_1679419210767/work\r\nCython==0.29.34\r\ndataclasses-json==0.5.7\r\ndebugpy @ file:///C:/ci_311/debugpy_1676426137692/work\r\ndecorator @ file:///opt/conda/conda-bld/decorator_1643638310831/work\r\ndefusedxml @ file:///tmp/build/80754af9/defusedxml_1615228127516/work\r\nDeprecated==1.2.13\r\nduckdb==0.7.1\r\nentrypoints @ file:///C:/ci_311/entrypoints_1676423328987/work\r\net-xmlfile==1.1.0\r\nexecuting @ file:///opt/conda/conda-bld/executing_1646925071911/work\r\nfastapi==0.95.1\r\nfastjsonschema @ file:///C:/ci_311/python-fastjsonschema_1679500568724/work\r\nfilelock==3.12.0\r\nfrozenlist==1.3.3\r\nfsspec==2023.4.0\r\nftfy==6.1.1\r\ngitdb==4.0.10\r\nGitPython==3.1.31\r\ngoogle-api-core==2.11.0\r\ngoogle-api-python-client==2.86.0\r\ngoogle-auth==2.18.0\r\ngoogle-auth-httplib2==0.1.0\r\ngoogleapis-common-protos==1.59.0\r\ngreenlet==2.0.2\r\nh11==0.14.0\r\nhnswlib @ file:///D:/bld/hnswlib_1675802891722/work\r\nhttpcore==0.16.3\r\nhttplib2==0.22.0\r\nhttptools==0.5.0\r\nhttpx==0.23.3\r\nhuggingface-hub==0.14.1\r\nidna @ file:///C:/ci_311/idna_1676424932545/work\r\nimportlib-metadata==6.6.0\r\nipykernel @ file:///C:/ci_311/ipykernel_1678734799670/work\r\nipython @ file:///C:/b/abs_d1yx5tjhli/croot/ipython_1680701887259/work\r\nipython-genutils @ file:///tmp/build/80754af9/ipython_genutils_1606773439826/work\r\nipywidgets @ file:///C:/b/abs_5awapknmz_/croot/ipywidgets_1679394824767/work\r\njedi @ file:///C:/ci_311/jedi_1679427407646/work\r\nJinja2 @ file:///C:/ci_311/jinja2_1676424968965/work\r\njoblib==1.2.0\r\njson5 @ file:///tmp/build/80754af9/json5_1624432770122/work\r\njsonschema @ file:///C:/b/abs_d40z05b6r1/croot/jsonschema_1678983446576/work\r\njupyter @ file:///C:/ci_311/jupyter_1678249952587/work\r\njupyter-console @ file:///C:/b/abs_82xaa6i2y4/croot/jupyter_console_1680000189372/work\r\njupyter-server @ file:///C:/ci_311/jupyter_server_1678228762759/work\r\njupyter_client @ file:///C:/b/abs_059idvdagk/croot/jupyter_client_1680171872444/work\r\njupyter_core @ file:///C:/b/abs_9d0ttho3bs/croot/jupyter_core_1679906581955/work\r\njupyterlab @ file:///C:/ci_311/jupyterlab_1677719392688/work\r\njupyterlab-pygments @ file:///tmp/build/80754af9/jupyterlab_pygments_1601490720602/work\r\njupyterlab-widgets @ file:///C:/b/abs_38ad427jkz/croot/jupyterlab_widgets_1679055289211/work\r\njupyterlab_server @ file:///C:/b/abs_e0qqsihjvl/croot/jupyterlab_server_1680792526136/work\r\nlangchain==0.0.157\r\nlxml @ file:///C:/b/abs_c2bg6ck92l/croot/lxml_1679646459966/work\r\nlz4==4.3.2\r\nMarkdown==3.4.3\r\nMarkupSafe @ file:///C:/ci_311/markupsafe_1676424152318/work\r\nmarshmallow==3.19.0\r\nmarshmallow-enum==1.5.1\r\nmatplotlib-inline @ file:///C:/ci_311/matplotlib-inline_1676425798036/work\r\nmistune @ file:///C:/ci_311/mistune_1676425149302/work\r\nmonotonic==1.6\r\nmpmath==1.3.0\r\nmsg-parser==1.2.0\r\nmultidict==6.0.4\r\nmypy-extensions==1.0.0\r\nnbclassic @ file:///C:/b/abs_c8_rs7b3zw/croot/nbclassic_1681756186106/work\r\nnbclient @ file:///C:/ci_311/nbclient_1676425195918/work\r\nnbconvert @ file:///C:/ci_311/nbconvert_1676425836196/work\r\nnbformat @ file:///C:/ci_311/nbformat_1676424215945/work\r\nnest-asyncio @ file:///C:/ci_311/nest-asyncio_1676423519896/work\r\nnetworkx==3.1\r\nnltk==3.8.1\r\nnotebook @ file:///C:/b/abs_49d8mc_lpe/croot/notebook_1681756182078/work\r\nnotebook_shim @ file:///C:/ci_311/notebook-shim_1678144850856/work\r\nnumexpr==2.8.4\r\nnumpy==1.23.5\r\nolefile==0.46\r\nopenai==0.27.6\r\nopenapi-schema-pydantic==1.2.4\r\nopenpyxl==3.1.2\r\npackaging @ file:///C:/b/abs_ed_kb9w6g4/croot/packaging_1678965418855/work\r\npandas==1.5.3\r\npandocfilters @ file:///opt/conda/conda-bld/pandocfilters_1643405455980/work\r\nparso @ file:///opt/conda/conda-bld/parso_1641458642106/work\r\npdfminer.six==20221105\r\npickleshare @ file:///tmp/build/80754af9/pickleshare_1606932040724/work\r\nPillow==9.5.0\r\nplatformdirs @ file:///C:/ci_311/platformdirs_1676422658103/work\r\nply==3.11\r\nposthog==3.0.1\r\nprometheus-client @ file:///C:/ci_311/prometheus_client_1679591942558/work\r\nprompt-toolkit @ file:///C:/ci_311/prompt-toolkit_1676425940920/work\r\nprotobuf==3.20.3\r\npsutil @ file:///C:/ci_311_rebuilds/psutil_1679005906571/work\r\npure-eval @ file:///opt/conda/conda-bld/pure_eval_1646925070566/work\r\npyarrow==11.0.0\r\npyasn1==0.5.0\r\npyasn1-modules==0.3.0\r\npycparser @ file:///tmp/build/80754af9/pycparser_1636541352034/work\r\npydantic==1.10.7\r\npydeck==0.8.1b0\r\nPygments @ file:///opt/conda/conda-bld/pygments_1644249106324/work\r\nPympler==1.0.1\r\npyOpenSSL @ file:///C:/b/abs_de215ipd18/croot/pyopenssl_1678965319166/work\r\npypandoc==1.11\r\npyparsing==3.0.9\r\nPyQt5==5.15.7\r\nPyQt5-sip @ file:///C:/ci_311/pyqt-split_1676428895938/work/pyqt_sip\r\npyrsistent @ file:///C:/ci_311/pyrsistent_1676422695500/work\r\nPySocks @ file:///C:/ci_311/pysocks_1676425991111/work\r\npython-dateutil @ file:///tmp/build/80754af9/python-dateutil_1626374649649/work\r\npython-docx==0.8.11\r\npython-dotenv==1.0.0\r\npython-magic==0.4.27\r\npython-pptx==0.6.21\r\npytz @ file:///C:/ci_311/pytz_1676427070848/work\r\npytz-deprecation-shim==0.1.0.post0\r\npywin32==305.1\r\npywinpty @ file:///C:/ci_311/pywinpty_1677707791185/work/target/wheels/pywinpty-2.0.10-cp311-none-win_amd64.whl\r\nPyYAML==6.0\r\npyzmq @ file:///C:/b/abs_8b16zbmf46/croot/pyzmq_1682697651374/work\r\nqtconsole @ file:///C:/b/abs_eb4u9jg07y/croot/qtconsole_1681402843494/work\r\nQtPy @ file:///C:/ci_311/qtpy_1676432558504/work\r\nregex==2023.3.23\r\nrequests @ file:///C:/b/abs_41owkd5ymz/croot/requests_1682607524657/work\r\nrfc3986==1.5.0\r\nrich==13.0.1\r\nrsa==4.9\r\nscikit-learn==1.2.2\r\nscipy==1.10.1\r\nSend2Trash @ file:///tmp/build/80754af9/send2trash_1632406701022/work\r\nsentence-transformers==2.2.2\r\nsentencepiece==0.1.99\r\nsip @ file:///C:/ci_311/sip_1676427825172/work\r\nsix @ file:///tmp/build/80754af9/six_1644875935023/work\r\nsmmap==5.0.0\r\nsniffio @ file:///C:/ci_311/sniffio_1676425339093/work\r\nsoupsieve @ file:///C:/b/abs_a989exj3q6/croot/soupsieve_1680518492466/work\r\nSQLAlchemy==2.0.12\r\nstack-data @ file:///opt/conda/conda-bld/stack_data_1646927590127/work\r\nstarlette==0.26.1\r\nstreamlit==1.22.0\r\nsympy==1.11.1\r\ntenacity==8.2.2\r\nterminado @ file:///C:/ci_311/terminado_1678228513830/work\r\nthreadpoolctl==3.1.0\r\ntiktoken==0.3.3\r\ntinycss2 @ file:///C:/ci_311/tinycss2_1676425376744/work\r\ntokenizers==0.13.3\r\ntoml @ file:///tmp/build/80754af9/toml_1616166611790/work\r\ntomli @ file:///C:/ci_311/tomli_1676422027483/work\r\ntoolz==0.12.0\r\ntorch==2.0.0\r\ntorchvision==0.15.1\r\ntornado @ file:///C:/ci_311/tornado_1676423689414/work\r\ntqdm==4.65.0\r\ntraitlets @ file:///C:/ci_311/traitlets_1676423290727/work\r\ntransformers==4.28.1\r\ntyping-inspect==0.8.0\r\ntyping_extensions @ file:///C:/b/abs_a1bb332wcs/croot/typing_extensions_1681939523095/work\r\ntzdata==2023.3\r\ntzlocal==4.3\r\nunstructured==0.6.2\r\nuritemplate==4.1.1\r\nurllib3 @ file:///C:/b/abs_3ce53vrdcr/croot/urllib3_1680254693505/work\r\nuvicorn==0.22.0\r\nvalidators==0.20.0\r\nwatchdog==3.0.0\r\nwatchfiles==0.19.0\r\nwcwidth @ file:///Users/ktietz/demo/mc3/conda-bld/wcwidth_1629357192024/work\r\nwebencodings==0.5.1\r\nwebsocket-client @ file:///C:/ci_311/websocket-client_1676426063281/work\r\nwebsockets==11.0.2\r\nwidgetsnbextension @ file:///C:/b/abs_882k4_4kdf/croot/widgetsnbextension_1679313880295/work\r\nwikipedia==1.4.0\r\nwin-inet-pton @ file:///C:/ci_311/win_inet_pton_1676425458225/work\r\nwrapt==1.14.1\r\nXlsxWriter==3.1.0\r\nyarl==1.9.2\r\nzipp==3.15.0\r\nzstandard==0.21.0\r\n\n\n### Who can help?\n\n@vowelparrot  \r\n\r\nHi, I facing an issue regarding llm-math tool. I am using a Tool that is created using my documents and a built-in llm tool.  For some queries, llm tool receives a word problem rather than a mathematical expression. Kindly, guide how can I avoid this problem? \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\nllm=OpenAI(model_name = \"gpt-3.5-turbo\", temperature = 0) # text-davinci-003\r\n\r\ndb = Chroma(persist_directory=\"db_publications\",embedding_function=embedding)\r\nchain = RetrievalQA.from_chain_type(llm=llm, chain_type=\"stuff\", retriever=db.as_retriever(search_kwargs={\"k\": 2}))\r\n\r\n#custom tool is created using my documents \r\ncustom_tool = [\r\nTool(\r\n    name=\"Tax_Tool\",\r\n    func=chain.run,\r\n    description=\"Use this tool to answer tax related queries\") ]\r\n\r\n# built-in tools are loaded\r\ntools = load_tools([\"llm-math\"], llm=llm)\r\n# built-in tools are appended to the custom tool to maintain priority\r\nfor tool in tools:\r\n    custom_tool.append(tool)\r\n\r\n\r\n# Finally, let's initialize an agent with the tools, the language model, and the type of agent we want to use.\r\nagent = initialize_agent(\r\n    custom_tool, llm, agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION, verbose=True)\r\n\r\n# Now let's test it out!\r\nresult = agent(\r\n    {\"input\" : \"I am married and filing jointly. How much additional Medicare Tax I have to pay if my net earnings are $300,000?\"}\r\n)\r\n    ```\n\n### Expected behavior\n\n\u2190[1m> Entering new AgentExecutor chain...\u2190[0m\r\n\u2190[32;1m\u2190[1;3mI need to use a tax calculator to determine the additional Medicare Tax.\r\nAction: Calculator\r\nAction Input: Input $300,000 and select the option for married filing jointly.\u2190[0m2023-05-18 14:15:59.978 Uncaught app exception\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\langchain\\chains\\llm_math\\base.py\", line 80, in _evaluate_expression\r\n    numexpr.evaluate(\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\numexpr\\necompiler.py\", line 817, in evaluate\r\n    _names_cache[expr_key] = getExprNames(ex, context)\r\n                             ^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\numexpr\\necompiler.py\", line 704, in getExprNames\r\n    ex = stringToExpression(text, {}, context)\r\n         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\numexpr\\necompiler.py\", line 274, in stringToExpression\r\n    c = compile(s, '<expr>', 'eval', flags)\r\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"<expr>\", line 1\r\n    None (this is not a math problem)\r\n          ^^^^^^^^^^^^^^^^^^\r\nSyntaxError: invalid syntax. Perhaps you forgot a comma?\r\n\r\nDuring handling of the above exception, another exception occurred:\r\n\r\nTraceback (most recent call last):\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\streamlit\\runtime\\scriptrunner\\script_runner.py\", line 565, in _run_script\r\n    exec(code, module.__dict__)\r\n  File \"D:\\Projects\\TaxAdvisor\\TaxAdviorWithNewDb\\agent_gpt_without_observations.py\", line 159, in <module>\r\n    result = agent(\r\n             ^^^^^^\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\langchain\\chains\\base.py\", line 140, in __call__\r\n    raise e\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\langchain\\chains\\base.py\", line 134, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 922, in _call\r\n    next_step_output = self._take_next_step(\r\n                       ^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\langchain\\agents\\agent.py\", line 800, in _take_next_step\r\n    observation = tool.run(\r\n                  ^^^^^^^^^\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\langchain\\tools\\base.py\", line 255, in run\r\n    raise e\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\langchain\\tools\\base.py\", line 249, in run\r\n    self._run(*tool_args, run_manager=run_manager, **tool_kwargs)\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\langchain\\tools\\base.py\", line 344, in _run\r\n    self.func(\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\langchain\\chains\\base.py\", line 236, in run\r\n    return self(args[0], callbacks=callbacks)[self.output_keys[0]]\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\langchain\\chains\\base.py\", line 140, in __call__\r\n    raise e\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\langchain\\chains\\base.py\", line 134, in __call__\r\n    self._call(inputs, run_manager=run_manager)\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\langchain\\chains\\llm_math\\base.py\", line 149, in _call\r\n    return self._process_llm_result(llm_output, _run_manager)\r\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\langchain\\chains\\llm_math\\base.py\", line 103, in _process_llm_result\r\n    output = self._evaluate_expression(expression)\r\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\r\n  File \"C:\\Users\\hizafa.nadeem\\AppData\\Local\\anaconda3\\envs\\tax_app\\Lib\\site-packages\\langchain\\chains\\llm_math\\base.py\", line 87, in _evaluate_expression\r\n    raise ValueError(\r\nValueError: LLMMathChain._evaluate(\"\r\nNone (this is not a math problem)\r\n\") raised error: invalid syntax. Perhaps you forgot a comma? (<expr>, line 1). Please try again with a valid numerical expression\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4917/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4917/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4916",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4916/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4916/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4916/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4916",
        "id": 1715187690,
        "node_id": "I_kwDOIPDwls5mO6_q",
        "number": 4916,
        "title": "Issue: How to make the output of Observation the return result of TOOL",
        "user": {
            "login": "Pursue26",
            "id": 49673141,
            "node_id": "MDQ6VXNlcjQ5NjczMTQx",
            "avatar_url": "https://avatars.githubusercontent.com/u/49673141?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Pursue26",
            "html_url": "https://github.com/Pursue26",
            "followers_url": "https://api.github.com/users/Pursue26/followers",
            "following_url": "https://api.github.com/users/Pursue26/following{/other_user}",
            "gists_url": "https://api.github.com/users/Pursue26/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Pursue26/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Pursue26/subscriptions",
            "organizations_url": "https://api.github.com/users/Pursue26/orgs",
            "repos_url": "https://api.github.com/users/Pursue26/repos",
            "events_url": "https://api.github.com/users/Pursue26/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Pursue26/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-05-18T07:52:21Z",
        "updated_at": "2023-10-31T09:38:48Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI use two agents, the same LLM, why is one Observation the output of the tool and the other not. **How to make the output of Observation the return result of TOOL**\r\n\r\n```python\r\nclass CustomAgentExecutor(object):\r\n\r\n    def __init__(self, template: str, tools: List[BaseTool], llm):\r\n        self.template = template\r\n        self.tools = tools\r\n        self.llm = llm\r\n        self.agent_executor = self._initialize_executor()\r\n\r\n    def _initialize_executor(self):\r\n        prompt = CustomPromptTemplate(\r\n            template=self.template,\r\n            tools=self.tools,\r\n            input_variables=[\"input\", \"intermediate_steps\"]\r\n        )\r\n        ''' \r\n        # ONE AGENT\r\n        tool_names = [tool.name for tool in self.tools]\r\n        output_parser = CustomOutputParser(tool_names=tool_names)\r\n\r\n        llm_chain = LLMChain(llm=self.llm, prompt=prompt)\r\n\r\n        agent = LLMSingleActionAgent(\r\n            llm_chain=llm_chain,\r\n            output_parser=output_parser,\r\n            stop=[\"\\\\nObservation:\"],\r\n            allowed_tools=tool_names\r\n        )\r\n\r\n        return AgentExecutor.from_agent_and_tools(agent=agent, tools=self.tools, verbose=True)\r\n\r\n        ''' \r\n        # ANOTHER AGENT\r\n        agent_chain = initialize_agent(\r\n            self.tools,\r\n            self.llm,\r\n            agent=AgentType.ZERO_SHOT_REACT_DESCRIPTION,\r\n            verbose=True\r\n        )\r\n\r\n        return agent_chain\r\n        \r\n\r\n    def run(self, input_question: str):\r\n        return self.agent_executor.run(input_question)\r\n```\r\n\r\n```python\r\ncustom_agent_executor = CustomAgentExecutor(\r\n                                        template=self.template, \r\n                                        tools=self.tools, \r\n                                        llm=self.llm\r\n                                    )\r\n            result = custom_agent_executor.run(input_question=instruction)\r\n```\r\n\r\n```text\r\n> Entering new AgentExecutor chain...\r\n I need to figure out what month and day it is today.\r\nAction: Time\r\nAction Input: Current Date\r\nObservation: \u4eca\u5929\u7684\u65e5\u671f\u662f: 2023\u5e7405\u670818\u65e5, \u5f53\u524d\u7684\u65f6\u95f4\u662f: 03\u65f629\u520603\u79d2, \u4eca\u5929\u662f\u661f\u671f\u56db\r\nThought: I now know the final answer\r\nFinal Answer: \u4eca\u5929\u662f\u4e94\u6708\u5341\u516b\u53f7\u3002\r\n\r\n> Finished chain.\r\n```\r\n\r\n```text\r\n> Entering new AgentExecutor chain...\r\nThought: \u6211\u9700\u8981\u77e5\u9053\u5f53\u524d\u7684\u65e5\u671f\r\nAction: Time\r\nAction Input: \u5f53\u524d\u65e5\u671f\r\nObservation: \u4eca\u5929\u662f7\u670814\u53f7\r\nThought: \u6211\u73b0\u5728\u77e5\u9053\u6700\u7ec8\u7b54\u6848\r\nFinal Answer: \u4eca\u5929\u662f7\u670814\u53f7\r\n\r\n> Finished chain.\r\n```\r\n**\u4eca\u5929\u7684\u65e5\u671f\u662f: 2023\u5e7405\u670818\u65e5, \u5f53\u524d\u7684\u65f6\u95f4\u662f: 03\u65f629\u520603\u79d2, \u4eca\u5929\u662f\u661f\u671f\u56db \u3010this is the return result of the tool\u3011**\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4916/reactions",
            "total_count": 7,
            "+1": 7,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4916/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4915",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4915/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4915/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4915/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4915",
        "id": 1715183301,
        "node_id": "PR_kwDOIPDwls5QyF50",
        "number": 4915,
        "title": "API update: Engines -> Models",
        "user": {
            "login": "assert6",
            "id": 28561563,
            "node_id": "MDQ6VXNlcjI4NTYxNTYz",
            "avatar_url": "https://avatars.githubusercontent.com/u/28561563?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/assert6",
            "html_url": "https://github.com/assert6",
            "followers_url": "https://api.github.com/users/assert6/followers",
            "following_url": "https://api.github.com/users/assert6/following{/other_user}",
            "gists_url": "https://api.github.com/users/assert6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/assert6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/assert6/subscriptions",
            "organizations_url": "https://api.github.com/users/assert6/orgs",
            "repos_url": "https://api.github.com/users/assert6/repos",
            "events_url": "https://api.github.com/users/assert6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/assert6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T07:48:44Z",
        "updated_at": "2023-05-18T13:54:43Z",
        "closed_at": "2023-05-18T13:54:43Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4915",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4915",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4915.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4915.patch",
            "merged_at": "2023-05-18T13:54:43Z"
        },
        "body": "see: https://community.openai.com/t/api-update-engines-models/18597\r\n\r\n# API update: Engines -> Models\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4915/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4915/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4914",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4914/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4914/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4914/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4914",
        "id": 1715127610,
        "node_id": "PR_kwDOIPDwls5Qx6EL",
        "number": 4914,
        "title": "Harrison/spell executor",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T07:01:59Z",
        "updated_at": "2023-05-19T03:43:34Z",
        "closed_at": "2023-05-19T03:43:34Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4914",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4914",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4914.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4914.patch",
            "merged_at": "2023-05-19T03:43:34Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4914/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4914/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4912",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4912/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4912/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4912/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4912",
        "id": 1715084795,
        "node_id": "I_kwDOIPDwls5mOh37",
        "number": 4912,
        "title": "Add permission model to tools (simple sudo like at first)",
        "user": {
            "login": "thompsonson",
            "id": 2087867,
            "node_id": "MDQ6VXNlcjIwODc4Njc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2087867?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thompsonson",
            "html_url": "https://github.com/thompsonson",
            "followers_url": "https://api.github.com/users/thompsonson/followers",
            "following_url": "https://api.github.com/users/thompsonson/following{/other_user}",
            "gists_url": "https://api.github.com/users/thompsonson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thompsonson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thompsonson/subscriptions",
            "organizations_url": "https://api.github.com/users/thompsonson/orgs",
            "repos_url": "https://api.github.com/users/thompsonson/repos",
            "events_url": "https://api.github.com/users/thompsonson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thompsonson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-18T06:31:01Z",
        "updated_at": "2023-12-06T17:46:10Z",
        "closed_at": "2023-12-06T17:46:09Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\n# Example\r\n\r\nI have a tool that has access to my email. This tool is used by a long running agent. I'd like the tool to have long standing Read permissions but only have short lived Write permissions. \r\n\r\nLike Githubs sudo permission, I'd like a message sent to a designated device, email, or similar, asking for authorization. \r\n\r\n# Reality\r\n\r\nSome of these actions maybe outside the design scope of LangChain. However, my mind goes towards a refining of the _run method within a tool. The _run method could accept an object which is responsible for getting approval or simply returning true. \r\n\r\nAs a pattern I think of dependency injection more than callbacks but wonder if that could work or it is just semantic difference. \r\n\r\n\r\n\n\n### Motivation\n\nMotivation is simply to secure the use of tools. After regulation of the underlying LLMs I think this is the next largest risk.  \r\n\r\nI think it talks to ~~Ben (sorry I forget his surname)~~ EDIT: got the gents name wrong, his name is Simon Wilson ( https://simonwillison.net/2023/May/2/prompt-injection-explained/)  recent concerns and suggestion to have two LLMs, one freely accessible the other privileged and has input sanitized.\r\n\r\nThere is a lot of value in the thought and pattern, it feels more practical to start with permissions, especially in a \"zero trust world\".\r\n\n\n### Your contribution\n\nHappy to help in multiple ways, time based.\r\n\r\nImmediately to discuss and document the risks, threats, and previous solutions.\r\n\r\nImmediately to peer review MRs. \r\n\r\nMid-Longer term (i.e. on the back of a decent to do list) start to code a solution. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4912/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4912/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4911",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4911/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4911/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4911/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4911",
        "id": 1715064769,
        "node_id": "PR_kwDOIPDwls5Qxr_5",
        "number": 4911,
        "title": "Fix get_num_tokens for Anthropic models",
        "user": {
            "login": "jarib",
            "id": 572,
            "node_id": "MDQ6VXNlcjU3Mg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/572?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jarib",
            "html_url": "https://github.com/jarib",
            "followers_url": "https://api.github.com/users/jarib/followers",
            "following_url": "https://api.github.com/users/jarib/following{/other_user}",
            "gists_url": "https://api.github.com/users/jarib/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jarib/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jarib/subscriptions",
            "organizations_url": "https://api.github.com/users/jarib/orgs",
            "repos_url": "https://api.github.com/users/jarib/repos",
            "events_url": "https://api.github.com/users/jarib/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jarib/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-18T06:21:49Z",
        "updated_at": "2023-05-22T07:55:19Z",
        "closed_at": "2023-05-18T23:32:28Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4911",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4911",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4911.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4911.patch",
            "merged_at": "2023-05-18T23:32:28Z"
        },
        "body": "The Anthropic classes used `BaseLanguageModel.get_num_tokens` because of an issue with multiple inheritance. Fixed by moving the method from `_AnthropicCommon` to both its subclasses.\r\n\r\nThis change will significantly speed up token counting for Anthropic users.\r\n\r\n@agola11 @mikelambert \r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4911/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4911/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4910",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4910/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4910/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4910/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4910",
        "id": 1715047391,
        "node_id": "PR_kwDOIPDwls5QxoN9",
        "number": 4910,
        "title": "bump version to 173",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T06:07:21Z",
        "updated_at": "2023-05-18T06:36:47Z",
        "closed_at": "2023-05-18T06:36:46Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4910",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4910",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4910.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4910.patch",
            "merged_at": "2023-05-18T06:36:46Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4910/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4910/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4909",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4909/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4909/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4909/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4909",
        "id": 1715042505,
        "node_id": "I_kwDOIPDwls5mOXjJ",
        "number": 4909,
        "title": "Issue:  Could not find a version that satisfies the requirement langchain==0.0.172 ",
        "user": {
            "login": "li-xiao-shuang",
            "id": 34903552,
            "node_id": "MDQ6VXNlcjM0OTAzNTUy",
            "avatar_url": "https://avatars.githubusercontent.com/u/34903552?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/li-xiao-shuang",
            "html_url": "https://github.com/li-xiao-shuang",
            "followers_url": "https://api.github.com/users/li-xiao-shuang/followers",
            "following_url": "https://api.github.com/users/li-xiao-shuang/following{/other_user}",
            "gists_url": "https://api.github.com/users/li-xiao-shuang/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/li-xiao-shuang/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/li-xiao-shuang/subscriptions",
            "organizations_url": "https://api.github.com/users/li-xiao-shuang/orgs",
            "repos_url": "https://api.github.com/users/li-xiao-shuang/repos",
            "events_url": "https://api.github.com/users/li-xiao-shuang/events{/privacy}",
            "received_events_url": "https://api.github.com/users/li-xiao-shuang/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T06:02:43Z",
        "updated_at": "2023-05-26T10:46:41Z",
        "closed_at": "2023-05-18T09:43:39Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nERROR: Could not find a version that satisfies the requirement langchain==0.0.172 (from versions: 0.0.1, 0.0.2, 0.0.3, 0.0.4, 0.0.5, 0.0.6, 0.0.7, 0.0.8, 0.0.9, 0.0.10, 0.0.11, 0.0.12, 0.0.13, 0.0.14, 0.0.15, 0.0.16, 0.0.17, 0.0.18, 0.0.19, 0.0.20, 0.0.21, 0.0.22, 0.0.23, 0.0.24, 0.0.25, 0.0.26, 0.0.27, 0.0.28, 0.0.29, 0.0.30, 0.0.31, 0.0.32, 0.0.33, 0.0.34, 0.0.35, 0.0.36, 0.0.37, 0.0.38, 0.0.39, 0.0.40, 0.0.41, 0.0.42, 0.0.43, 0.0.44, 0.0.45, 0.0.46, 0.0.47, 0.0.48, 0.0.49, 0.0.50, 0.0.51, 0.0.52, 0.0.53, 0.0.54, 0.0.55, 0.0.56, 0.0.57, 0.0.58, 0.0.59, 0.0.60, 0.0.61, 0.0.63, 0.0.64, 0.0.65, 0.0.66, 0.0.67, 0.0.68, 0.0.69, 0.0.70, 0.0.71, 0.0.72, 0.0.73, 0.0.74, 0.0.75, 0.0.76, 0.0.77, 0.0.78, 0.0.79, 0.0.80, 0.0.81, 0.0.82, 0.0.83, 0.0.84, 0.0.85, 0.0.86, 0.0.87, 0.0.88, 0.0.89, 0.0.90, 0.0.91, 0.0.92, 0.0.93, 0.0.94, 0.0.95, 0.0.96, 0.0.97, 0.0.98, 0.0.99rc0, 0.0.99, 0.0.100, 0.0.101rc0, 0.0.101, 0.0.102rc0, 0.0.102, 0.0.103, 0.0.104, 0.0.105, 0.0.106, 0.0.107, 0.0.108, 0.0.109, 0.0.110, 0.0.111, 0.0.112, 0.0.113, 0.0.114, 0.0.115, 0.0.116, 0.0.117, 0.0.118, 0.0.119, 0.0.120, 0.0.121, 0.0.122, 0.0.123, 0.0.124, 0.0.125, 0.0.126, 0.0.127, 0.0.128, 0.0.129, 0.0.130, 0.0.131, 0.0.132, 0.0.133, 0.0.134, 0.0.135, 0.0.136, 0.0.137, 0.0.138, 0.0.139, 0.0.140, 0.0.141, 0.0.142, 0.0.143, 0.0.144, 0.0.145, 0.0.146, 0.0.147, 0.0.148, 0.0.149, 0.0.150, 0.0.151, 0.0.152, 0.0.153, 0.0.154, 0.0.155, 0.0.156, 0.0.157, 0.0.158, 0.0.159, 0.0.160, 0.0.161, 0.0.162, 0.0.163, 0.0.164, 0.0.165, 0.0.166)\r\nERROR: No matching distribution found for langchain==0.0.172\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4909/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4909/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4908",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4908/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4908/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4908/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4908",
        "id": 1715007824,
        "node_id": "I_kwDOIPDwls5mOPFQ",
        "number": 4908,
        "title": "faiss-cpu uses GPU",
        "user": {
            "login": "frankandrobot",
            "id": 787249,
            "node_id": "MDQ6VXNlcjc4NzI0OQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/787249?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/frankandrobot",
            "html_url": "https://github.com/frankandrobot",
            "followers_url": "https://api.github.com/users/frankandrobot/followers",
            "following_url": "https://api.github.com/users/frankandrobot/following{/other_user}",
            "gists_url": "https://api.github.com/users/frankandrobot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/frankandrobot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/frankandrobot/subscriptions",
            "organizations_url": "https://api.github.com/users/frankandrobot/orgs",
            "repos_url": "https://api.github.com/users/frankandrobot/repos",
            "events_url": "https://api.github.com/users/frankandrobot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/frankandrobot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T05:29:31Z",
        "updated_at": "2023-09-10T16:15:52Z",
        "closed_at": "2023-09-10T16:15:52Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nLangchain version: latest\r\nenvironment: latest Google collab\r\n\r\n\r\n\r\n### Who can help?\r\n\r\n@eyurtsev \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [X] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [ ] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [X] Vector Stores / Retrievers\r\n- [x] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [ ] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\nYou can see the issue here: https://colab.research.google.com/drive/1WaW5WAHTN7xlfo_jK9AnnpjfvVSQITqe?usp=sharing\r\n\r\nStep 0. Install `faiss-cpu`\r\nStep 1. Load a large model that takes up most of the GPU memory\r\nStep 2. Call FAISS.from_documents\r\nStep 3. Error out with OutOfMemoryError: CUDA out of memory.\r\n\r\n### Expected behavior\r\n\r\n* We're using `faiss-cpu`, so the expectation is that all FAISS ops are on the CPU\r\n* However, we get GPU OutOfMemoryErrors when trying to shove docs into the vector store, so \ud83e\udd37",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4908/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4908/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4907",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4907/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4907/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4907/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4907",
        "id": 1715007751,
        "node_id": "PR_kwDOIPDwls5Qxfh7",
        "number": 4907,
        "title": "Add Psychic document loader",
        "user": {
            "login": "Ayan-Bandyopadhyay",
            "id": 13636019,
            "node_id": "MDQ6VXNlcjEzNjM2MDE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/13636019?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Ayan-Bandyopadhyay",
            "html_url": "https://github.com/Ayan-Bandyopadhyay",
            "followers_url": "https://api.github.com/users/Ayan-Bandyopadhyay/followers",
            "following_url": "https://api.github.com/users/Ayan-Bandyopadhyay/following{/other_user}",
            "gists_url": "https://api.github.com/users/Ayan-Bandyopadhyay/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Ayan-Bandyopadhyay/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Ayan-Bandyopadhyay/subscriptions",
            "organizations_url": "https://api.github.com/users/Ayan-Bandyopadhyay/orgs",
            "repos_url": "https://api.github.com/users/Ayan-Bandyopadhyay/repos",
            "events_url": "https://api.github.com/users/Ayan-Bandyopadhyay/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Ayan-Bandyopadhyay/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 3,
        "created_at": "2023-05-18T05:29:25Z",
        "updated_at": "2023-05-21T15:47:58Z",
        "closed_at": "2023-05-21T15:47:58Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4907",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4907",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4907.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4907.patch",
            "merged_at": "2023-05-21T15:47:58Z"
        },
        "body": "# Psychic document loader\r\n\r\nPsychic.dev is a universal API to connect to your users' SaaS apps such as Notion, Google Drive, and Zendesk. Unlike other document loaders, Psychic handles the entire frontend OAuth flow, and provides a universal API to query data from all SaaS apps. This PR adds the Psychic document loader to Langchain so that developers can use the data locked away in SaaS tools for Document Retrieval QA. \r\n\r\nThis PR adds the psychic document loader along with documentation and usage examples. \r\n\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4907/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4907/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4906",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4906/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4906/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4906/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4906",
        "id": 1714995596,
        "node_id": "PR_kwDOIPDwls5Qxc-d",
        "number": 4906,
        "title": "WhyLabs callback",
        "user": {
            "login": "jamie256",
            "id": 88007022,
            "node_id": "MDQ6VXNlcjg4MDA3MDIy",
            "avatar_url": "https://avatars.githubusercontent.com/u/88007022?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jamie256",
            "html_url": "https://github.com/jamie256",
            "followers_url": "https://api.github.com/users/jamie256/followers",
            "following_url": "https://api.github.com/users/jamie256/following{/other_user}",
            "gists_url": "https://api.github.com/users/jamie256/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jamie256/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jamie256/subscriptions",
            "organizations_url": "https://api.github.com/users/jamie256/orgs",
            "repos_url": "https://api.github.com/users/jamie256/repos",
            "events_url": "https://api.github.com/users/jamie256/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jamie256/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T05:14:25Z",
        "updated_at": "2023-05-23T03:29:48Z",
        "closed_at": "2023-05-23T03:29:47Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4906",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4906",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4906.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4906.patch",
            "merged_at": "2023-05-23T03:29:47Z"
        },
        "body": "# Add a WhyLabs callback handler\r\n\r\n* Adds a simple WhyLabsCallbackHandler\r\n* Add required dependencies as optional\r\n* protect against missing modules with imports\r\n* Add docs/ecosystem basic example\r\n\r\nbased on initial prototype from @andrewelizondo\r\n\r\n> this integration gathers privacy preserving telemetry on text with whylogs and sends stastical profiles to WhyLabs platform to monitoring these metrics over time. For more information on what WhyLabs is see: https://whylabs.ai\r\n\r\nAfter you run the notebook (if you have env variables set for the API Keys, org_id and dataset_id) you get something like this in WhyLabs:\r\n![Screenshot (443)](https://github.com/hwchase17/langchain/assets/88007022/6bdb3e1c-4243-4ae8-b974-23a8bb12edac)\r\n\r\n\r\n## Who can review?\r\n\r\n@agola11\r\n@hwchase17\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4906/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4906/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4905",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4905/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4905/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4905/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4905",
        "id": 1714985046,
        "node_id": "PR_kwDOIPDwls5QxayC",
        "number": 4905,
        "title": "Harrison/unified objectives",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T05:01:11Z",
        "updated_at": "2023-05-18T06:03:59Z",
        "closed_at": "2023-05-18T06:03:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4905",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4905",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4905.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4905.patch",
            "merged_at": "2023-05-18T06:03:58Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4905/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4905/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4904",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4904/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4904/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4904/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4904",
        "id": 1714977472,
        "node_id": "I_kwDOIPDwls5mOHrA",
        "number": 4904,
        "title": "Allow for routing between agents and llmchain",
        "user": {
            "login": "thecasual",
            "id": 29391916,
            "node_id": "MDQ6VXNlcjI5MzkxOTE2",
            "avatar_url": "https://avatars.githubusercontent.com/u/29391916?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/thecasual",
            "html_url": "https://github.com/thecasual",
            "followers_url": "https://api.github.com/users/thecasual/followers",
            "following_url": "https://api.github.com/users/thecasual/following{/other_user}",
            "gists_url": "https://api.github.com/users/thecasual/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/thecasual/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/thecasual/subscriptions",
            "organizations_url": "https://api.github.com/users/thecasual/orgs",
            "repos_url": "https://api.github.com/users/thecasual/repos",
            "events_url": "https://api.github.com/users/thecasual/events{/privacy}",
            "received_events_url": "https://api.github.com/users/thecasual/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 15,
        "created_at": "2023-05-18T04:51:16Z",
        "updated_at": "2023-10-18T11:52:05Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nI would like to receive a prompt and depending on the prompt route to a dataframe agent or a llmchain. For example, the question may be about the aggregation of data in which I would like to utilize the dataframe agent. If the question is about pdf files I would like to use the llmchain to handle this.\n\n### Motivation\n\nThe ability to have a universal answer flow is ideal for my scenario. I would like the ability to handle any question and respond with either a response from the dataframe or from llmchain.\n\n### Your contribution\n\nI am still going through the documentation and code repo itself. I can certainly work towards a PR. Want to for sure ensure that this is not already possible. Thank you!",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4904/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4904/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4903",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4903/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4903/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4903/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4903",
        "id": 1714958048,
        "node_id": "PR_kwDOIPDwls5QxVGg",
        "number": 4903,
        "title": "Harrison/faiss norm",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T04:21:57Z",
        "updated_at": "2023-05-18T04:40:50Z",
        "closed_at": "2023-05-18T04:40:49Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4903",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4903",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4903.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4903.patch",
            "merged_at": "2023-05-18T04:40:49Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4903/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4903/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4902",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4902/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4902/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4902/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4902",
        "id": 1714953075,
        "node_id": "PR_kwDOIPDwls5QxUEU",
        "number": 4902,
        "title": "Harrison/serper api bug",
        "user": {
            "login": "hwchase17",
            "id": 11986836,
            "node_id": "MDQ6VXNlcjExOTg2ODM2",
            "avatar_url": "https://avatars.githubusercontent.com/u/11986836?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/hwchase17",
            "html_url": "https://github.com/hwchase17",
            "followers_url": "https://api.github.com/users/hwchase17/followers",
            "following_url": "https://api.github.com/users/hwchase17/following{/other_user}",
            "gists_url": "https://api.github.com/users/hwchase17/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/hwchase17/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/hwchase17/subscriptions",
            "organizations_url": "https://api.github.com/users/hwchase17/orgs",
            "repos_url": "https://api.github.com/users/hwchase17/repos",
            "events_url": "https://api.github.com/users/hwchase17/events{/privacy}",
            "received_events_url": "https://api.github.com/users/hwchase17/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T04:13:17Z",
        "updated_at": "2023-05-18T04:40:40Z",
        "closed_at": "2023-05-18T04:40:39Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4902",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4902",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4902.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4902.patch",
            "merged_at": "2023-05-18T04:40:39Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4902/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4902/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4901",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4901/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4901/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4901/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4901",
        "id": 1714950417,
        "node_id": "I_kwDOIPDwls5mOBER",
        "number": 4901,
        "title": "Module parse failed: Unexpected character '' (1:0) The module seem to be a WebAssembly module, but module is not flagged as WebAssembly module for webpack",
        "user": {
            "login": "rogerganga",
            "id": 34466964,
            "node_id": "MDQ6VXNlcjM0NDY2OTY0",
            "avatar_url": "https://avatars.githubusercontent.com/u/34466964?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/rogerganga",
            "html_url": "https://github.com/rogerganga",
            "followers_url": "https://api.github.com/users/rogerganga/followers",
            "following_url": "https://api.github.com/users/rogerganga/following{/other_user}",
            "gists_url": "https://api.github.com/users/rogerganga/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/rogerganga/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/rogerganga/subscriptions",
            "organizations_url": "https://api.github.com/users/rogerganga/orgs",
            "repos_url": "https://api.github.com/users/rogerganga/repos",
            "events_url": "https://api.github.com/users/rogerganga/events{/privacy}",
            "received_events_url": "https://api.github.com/users/rogerganga/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T04:09:27Z",
        "updated_at": "2023-05-18T05:18:59Z",
        "closed_at": "2023-05-18T05:18:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nI am using a next.js app for this \r\n\r\nCode Used:\r\n\r\n```\r\nimport { OpenAI } from 'langchain/llms/openai';\r\nimport { LLMChain } from \"langchain/chains\";\r\nimport { PromptTemplate } from \"langchain/prompts\";\r\n\r\n\r\nconst model = new OpenAI({\r\n    openAIApiKey: process.env.OPENAI_API_KEY,\r\n    temperature: 0, // increase temepreature to get more creative answers\r\n    modelName: 'gpt-3.5-turbo', //change this to gpt-4 if you have access\r\n  });\r\n\r\n  const prompt = PromptTemplate.fromTemplate(\r\n    template\r\n  );\r\n\r\n  const query = new LLMChain({ llm: model, prompt: prompt });\r\n```\r\n\r\nUsing \"openai\": \"^3.2.1\",\r\n\r\n\r\nModule parse failed: Unexpected character '' (1:0)\r\nThe module seem to be a WebAssembly module, but module is not flagged as WebAssembly module for webpack.\r\nBREAKING CHANGE: Since webpack 5 WebAssembly is not enabled by default and flagged as experimental feature.\r\nYou need to enable one of the WebAssembly experiments via 'experiments.asyncWebAssembly: true' (based on async modules) or 'experiments.syncWebAssembly: true' (like webpack 4, deprecated).\r\nFor files that transpile to WebAssembly, make sure to set the module type in the 'module.rules' section of the config (e. g. 'type: \"webassembly/async\"').\r\n(Source code omitted for this binary file)\r\n\r\n\r\nImport trace for requested module:\r\n../../../node_modules/@dqbd/tiktoken/tiktoken_bg.wasm\r\n../../../node_modules/@dqbd/tiktoken/tiktoken.js\r\n../../../node_modules/langchain/dist/base_language/count_tokens.js\r\n../../../node_modules/langchain/dist/llms/openai.js\r\n../../../node_modules/langchain/llms/openai.js\r\n./app/utils/makechain.ts\r\n./app/utils/quer.ts\r\n./app/test/page.tsx\r\n\r\n\r\nThe code was working smoothly last night and it broke all sudden\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nCode Used:\r\n\r\n```\r\nimport { OpenAI } from 'langchain/llms/openai';\r\nimport { LLMChain } from \"langchain/chains\";\r\nimport { PromptTemplate } from \"langchain/prompts\";\r\n\r\n\r\nconst model = new OpenAI({\r\n    openAIApiKey: process.env.OPENAI_API_KEY,\r\n    temperature: 0, // increase temepreature to get more creative answers\r\n    modelName: 'gpt-3.5-turbo', //change this to gpt-4 if you have access\r\n  });\r\n\r\n  const prompt = PromptTemplate.fromTemplate(\r\n    template\r\n  );\r\n\r\n  const query = new LLMChain({ llm: model, prompt: prompt });\r\n```\n\n### Expected behavior\n\nThe code should run smoothly and return a query\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4901/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4901/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4900",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4900/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4900/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4900/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4900",
        "id": 1714929586,
        "node_id": "I_kwDOIPDwls5mN7-y",
        "number": 4900,
        "title": "loading 8 bit models and throwing device_map = auto errors",
        "user": {
            "login": "zubair-ahmed-ai",
            "id": 66907171,
            "node_id": "MDQ6VXNlcjY2OTA3MTcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/66907171?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zubair-ahmed-ai",
            "html_url": "https://github.com/zubair-ahmed-ai",
            "followers_url": "https://api.github.com/users/zubair-ahmed-ai/followers",
            "following_url": "https://api.github.com/users/zubair-ahmed-ai/following{/other_user}",
            "gists_url": "https://api.github.com/users/zubair-ahmed-ai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zubair-ahmed-ai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zubair-ahmed-ai/subscriptions",
            "organizations_url": "https://api.github.com/users/zubair-ahmed-ai/orgs",
            "repos_url": "https://api.github.com/users/zubair-ahmed-ai/repos",
            "events_url": "https://api.github.com/users/zubair-ahmed-ai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zubair-ahmed-ai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T03:37:36Z",
        "updated_at": "2023-06-03T18:38:23Z",
        "closed_at": "2023-06-03T18:38:23Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nHi @hwchase17 @agola11 \r\n\r\nIn the langchain v0.0.171 there is not feature to load 8 bit models because specifying it requires `device_map = auto` to be set which I am unable to set in the [HuggingFacePipeline](https://github.com/hwchase17/langchain/blob/master/langchain/llms/huggingface_pipeline.py)\r\n\r\nFor clarity I am trying to load 8 bit model in order to save memory and load model faster, if that's achievable\r\n\r\n```\r\n---> 64 task=\"text-generation\", model_kwargs={\"temperature\":0, \"max_new_tokens\":256, \"load_in_8bit\": True, device_map:'auto'})\r\n     66 chain = LLMChain(llm=llm, prompt=PROMPT, output_key=\"nda_1\", verbose=True)\r\n     68 prompt_template = \"\"\"<my prompt>:\r\n     69     Context: {nda_1}        \r\n     70     NDA:\"\"\"\r\n\r\nNameError: name 'device_map' is not defined\r\n```\r\n\n\n### Who can help?\n\n@hwchase17 @agola11 \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```\r\n---> 64 task=\"text-generation\", model_kwargs={\"temperature\":0, \"max_new_tokens\":256, \"load_in_8bit\": True, device_map:'auto'})\r\n     66 chain = LLMChain(llm=llm, prompt=PROMPT, output_key=\"nda_1\", verbose=True)\r\n     68 prompt_template = \"\"\"<my prompt>:\r\n     69     Context: {nda_1}        \r\n     70     NDA:\"\"\"\r\n\r\nNameError: name 'device_map' is not defined\r\n```\n\n### Expected behavior\n\nmodel must load faster",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4900/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4900/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4899",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4899/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4899/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4899/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4899",
        "id": 1714917051,
        "node_id": "I_kwDOIPDwls5mN467",
        "number": 4899,
        "title": "Redis Vectorstore: Did not find redis_url, please add an environment variable `REDIS_URL` which contains it, or pass  `redis_url` as a named parameter.",
        "user": {
            "login": "iamadhee",
            "id": 69910091,
            "node_id": "MDQ6VXNlcjY5OTEwMDkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/69910091?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iamadhee",
            "html_url": "https://github.com/iamadhee",
            "followers_url": "https://api.github.com/users/iamadhee/followers",
            "following_url": "https://api.github.com/users/iamadhee/following{/other_user}",
            "gists_url": "https://api.github.com/users/iamadhee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iamadhee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iamadhee/subscriptions",
            "organizations_url": "https://api.github.com/users/iamadhee/orgs",
            "repos_url": "https://api.github.com/users/iamadhee/repos",
            "events_url": "https://api.github.com/users/iamadhee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iamadhee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-18T03:15:21Z",
        "updated_at": "2023-09-19T16:10:11Z",
        "closed_at": "2023-09-19T16:10:10Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\n```\r\nPython 3.10.4\r\nlangchain==0.0.171\r\nredis==4.5.5\r\nredisearch==2.1.1\r\n```\r\n\n\n### Who can help?\n\n@tylerhutcherson \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI was able to override #4896 by getting rid of the extra `cls` from the mentioned method. Post which, I'm getting this below error. Ideally `from_texts_return_keys` method should not be expecting `redis_url` to be passed in as a kwarg since the `redis_url` is defined during the initialization of the `Redis` class and is a mandatory argument.\r\n\r\n```\r\n  File \"/home/codespace/.python/current/lib/python3.10/site-packages/langchain/vectorstores/redis.py\", line 448, in from_texts\r\n    instance, _ = cls.from_texts_return_keys(\r\n  File \"/home/codespace/.python/current/lib/python3.10/site-packages/langchain/vectorstores/redis.py\", line 389, in from_texts_return_keys\r\n    redis_url = get_from_dict_or_env(kwargs, \"redis_url\", \"REDIS_URL\") \r\n  File \"/home/codespace/.python/current/lib/python3.10/site-packages/langchain/utils.py\", line 17, in get_from_dict_or_env\r\n    return get_from_env(key, env_key, default=default)\r\n  File \"/home/codespace/.python/current/lib/python3.10/site-packages/langchain/utils.py\", line 27, in get_from_env\r\n    raise ValueError(\r\nValueError: Did not find redis_url, please add an environment variable `REDIS_URL` which contains it, or pass  `redis_url` as a named parameter.\r\n```\n\n### Expected behavior\n\nThe method `from_texts_return_keys` should not expect the `redis_url` to be passed in as a kwarg.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4899/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4899/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4898",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4898/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4898/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4898/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4898",
        "id": 1714902378,
        "node_id": "PR_kwDOIPDwls5QxJba",
        "number": 4898,
        "title": "Zep memory",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T02:53:58Z",
        "updated_at": "2023-05-18T03:01:03Z",
        "closed_at": "2023-05-18T03:01:02Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4898",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4898",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4898.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4898.patch",
            "merged_at": "2023-05-18T03:01:02Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4898/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4898/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4897",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4897/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4897/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4897/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4897",
        "id": 1714900925,
        "node_id": "I_kwDOIPDwls5mN0-9",
        "number": 4897,
        "title": "Breaking Changes | OpenAI Callback",
        "user": {
            "login": "jordanparker6",
            "id": 29700471,
            "node_id": "MDQ6VXNlcjI5NzAwNDcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/29700471?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jordanparker6",
            "html_url": "https://github.com/jordanparker6",
            "followers_url": "https://api.github.com/users/jordanparker6/followers",
            "following_url": "https://api.github.com/users/jordanparker6/following{/other_user}",
            "gists_url": "https://api.github.com/users/jordanparker6/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jordanparker6/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jordanparker6/subscriptions",
            "organizations_url": "https://api.github.com/users/jordanparker6/orgs",
            "repos_url": "https://api.github.com/users/jordanparker6/repos",
            "events_url": "https://api.github.com/users/jordanparker6/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jordanparker6/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "assignees": [
            {
                "login": "vowelparrot",
                "id": 130414180,
                "node_id": "U_kgDOB8X2ZA",
                "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
                "gravatar_id": "",
                "url": "https://api.github.com/users/vowelparrot",
                "html_url": "https://github.com/vowelparrot",
                "followers_url": "https://api.github.com/users/vowelparrot/followers",
                "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
                "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
                "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
                "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
                "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
                "repos_url": "https://api.github.com/users/vowelparrot/repos",
                "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
                "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
                "type": "User",
                "site_admin": false
            }
        ],
        "milestone": null,
        "comments": 12,
        "created_at": "2023-05-18T02:51:23Z",
        "updated_at": "2023-12-04T22:13:55Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nlangchain=\"^0.0.172\"\r\n\r\nThe `from langchain.callbacks import get_openai_callback` callback seems to have broken in a new release. It was working when I was on \"^0.0.158\". The callback is working but no token or costs are appearing. \r\n\r\n```\r\n2023-05-18T02:41:37.844174Z [info     ] openai charges                 [service.openai] completion_tokens=0 prompt_tokens=0 request_id=4da70135655b48d59d7f1e7528733f61 successful_requests=1 total_cost=0.0 total_tokens=0 user=user_2PkD3ZUhCdmBHiFPNP9tPZr7OLA\r\n```\r\n\r\nI was experiencing another breaking change with #4717 that seems to have been resolved. \r\n\r\n\n\n### Who can help?\n\n@agola11  @vowelparrot \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [X] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n```py\r\nimport structlog\r\nfrom langchain.callbacks import get_openai_callback\r\n\r\nlog = structlog.getLogger(\"main\")\r\n\r\nwith get_openai_callback() as cb:\r\n    result = await agent.acall({ \"input\": body.prompt }, return_only_outputs=True)\r\nopenai_logger.info(\r\n    \"openai charges\", \r\n    prompt_tokens=cb.prompt_tokens, \r\n    completion_tokens=cb.completion_tokens, \r\n    total_tokens=cb.total_tokens,\r\n    total_cost=cb.total_cost, \r\n    successful_requests=cb.successful_requests,\r\n    user=user_id\r\n)\r\n```\r\n\n\n### Expected behavior\n\nI was expecting tokens and costs to token counts to appear.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4897/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4897/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4896",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4896/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4896/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4896/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4896",
        "id": 1714898261,
        "node_id": "I_kwDOIPDwls5mN0VV",
        "number": 4896,
        "title": "Redis Vectorstore: Redis.from_texts_return_keys() got multiple values for argument 'cls'",
        "user": {
            "login": "iamadhee",
            "id": 69910091,
            "node_id": "MDQ6VXNlcjY5OTEwMDkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/69910091?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/iamadhee",
            "html_url": "https://github.com/iamadhee",
            "followers_url": "https://api.github.com/users/iamadhee/followers",
            "following_url": "https://api.github.com/users/iamadhee/following{/other_user}",
            "gists_url": "https://api.github.com/users/iamadhee/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/iamadhee/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/iamadhee/subscriptions",
            "organizations_url": "https://api.github.com/users/iamadhee/orgs",
            "repos_url": "https://api.github.com/users/iamadhee/repos",
            "events_url": "https://api.github.com/users/iamadhee/events{/privacy}",
            "received_events_url": "https://api.github.com/users/iamadhee/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-18T02:46:53Z",
        "updated_at": "2023-09-22T16:09:08Z",
        "closed_at": "2023-09-22T16:09:07Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "body": "### System Info\n\n```\r\nPython 3.10.4\r\nlangchain==0.0.171\r\nredis==3.5.3\r\nredisearch==2.1.1\r\n```\n\n### Who can help?\n\n@tylerhutcherson\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [x] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nI was able to override issue #3893 by temporarily disabling the ` _check_redis_module_exist`, post which I'm getting the below error when calling the `from_texts_return_keys` within the `from_documents` method in Redis class. Seems the argument `cls` is not needed in the `from_texts_return_keys` method, since it is already defined as a classmethod.\r\n\r\n\r\n```\r\nFile \"/workspaces/chatdataset_backend/adapters.py\", line 96, in load\r\n    vectorstore = self.rds.from_documents(documents=documents, embedding=self.embeddings)\r\n  File \"/home/codespace/.python/current/lib/python3.10/site-packages/langchain/vectorstores/base.py\", line 296, in from_documents\r\n    return cls.from_texts(texts, embedding, metadatas=metadatas, **kwargs)\r\n  File \"/home/codespace/.python/current/lib/python3.10/site-packages/langchain/vectorstores/redis.py\", line 448, in from_texts\r\n    instance, _ = cls.from_texts_return_keys(\r\nTypeError: Redis.from_texts_return_keys() got multiple values for argument 'cls'\r\n```\r\n\r\n\n\n### Expected behavior\n\nGetting rid of cls argument from all the `Redis` class methods wherever required. Was able to solve the issue with this fix.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4896/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4896/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4895",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4895/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4895/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4895/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4895",
        "id": 1714874098,
        "node_id": "PR_kwDOIPDwls5QxDoe",
        "number": 4895,
        "title": "Faiss no avx2",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T02:06:18Z",
        "updated_at": "2023-05-18T02:18:58Z",
        "closed_at": "2023-05-18T02:18:57Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4895",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4895",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4895.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4895.patch",
            "merged_at": "2023-05-18T02:18:57Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4895/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4895/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4894",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4894/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4894/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4894/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4894",
        "id": 1714857116,
        "node_id": "I_kwDOIPDwls5mNqSc",
        "number": 4894,
        "title": "Failed to load Word document over 100MB.",
        "user": {
            "login": "wilhelmjung",
            "id": 937485,
            "node_id": "MDQ6VXNlcjkzNzQ4NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/937485?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/wilhelmjung",
            "html_url": "https://github.com/wilhelmjung",
            "followers_url": "https://api.github.com/users/wilhelmjung/followers",
            "following_url": "https://api.github.com/users/wilhelmjung/following{/other_user}",
            "gists_url": "https://api.github.com/users/wilhelmjung/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/wilhelmjung/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/wilhelmjung/subscriptions",
            "organizations_url": "https://api.github.com/users/wilhelmjung/orgs",
            "repos_url": "https://api.github.com/users/wilhelmjung/repos",
            "events_url": "https://api.github.com/users/wilhelmjung/events{/privacy}",
            "received_events_url": "https://api.github.com/users/wilhelmjung/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T01:39:56Z",
        "updated_at": "2023-09-10T16:15:57Z",
        "closed_at": "2023-09-10T16:15:56Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\n- Softwares:\r\n  LangChain 0.0.171\r\n  Python 3.10.11\r\n  Jupyterlab 3.5.3\r\n  Anaconda 2.4.0\r\n\r\n- Platforms:\r\n  Mac OSX Ventura 13.3.1\r\n  Apple M1 Max\n\n### Who can help?\n\n@eyurtsev please have a look on this issue. Thanks!\n\n### Information\n\n- [X] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [X] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n- Steps to reproduce the issue:\r\n1. Prepare a word(docx) document that big enough(over 100MB)\r\n2. Execute following code:\r\n```\r\nfrom langchain.document_loaders import UnstructuredWordDocumentLoader\r\nloader = UnstructuredWordDocumentLoader(\"example_data/fake.docx\", mode=\"elements\")\r\ndata = loader.load()\r\n```\r\n\r\n- Error logs:\r\n```\r\n---------------------------------------------------------------------------\r\nKeyError                                  Traceback (most recent call last)\r\nCell In[53], line 1\r\n----> 1 data = loader.load()\r\n\r\nFile ~/anaconda3/envs/ForLangChain/lib/python3.10/site-packages/langchain/document_loaders/unstructured.py:70, in UnstructuredBaseLoader.load(self)\r\n     68 def load(self) -> List[Document]:\r\n     69     \"\"\"Load file.\"\"\"\r\n---> 70     elements = self._get_elements()\r\n     71     if self.mode == \"elements\":\r\n     72         docs: List[Document] = list()\r\n\r\nFile ~/anaconda3/envs/ForLangChain/lib/python3.10/site-packages/langchain/document_loaders/word_document.py:102, in UnstructuredWordDocumentLoader._get_elements(self)\r\n     99 else:\r\n    100     from unstructured.partition.docx import partition_docx\r\n--> 102     return partition_docx(filename=self.file_path, **self.unstructured_kwargs)\r\n\r\nFile ~/anaconda3/envs/ForLangChain/lib/python3.10/site-packages/unstructured/partition/docx.py:121, in partition_docx(filename, file, metadata_filename)\r\n    118 exactly_one(filename=filename, file=file)\r\n    120 if filename is not None:\r\n--> 121     document = docx.Document(filename)\r\n    122 elif file is not None:\r\n    123     document = docx.Document(\r\n    124         spooled_to_bytes_io_if_needed(cast(Union[BinaryIO, SpooledTemporaryFile], file)),\r\n    125     )\r\n\r\nFile ~/anaconda3/envs/ForLangChain/lib/python3.10/site-packages/docx/api.py:25, in Document(docx)\r\n     18 \"\"\"\r\n     19 Return a |Document| object loaded from *docx*, where *docx* can be\r\n     20 either a path to a ``.docx`` file (a string) or a file-like object. If\r\n     21 *docx* is missing or ``None``, the built-in default document \"template\"\r\n     22 is loaded.\r\n     23 \"\"\"\r\n     24 docx = _default_docx_path() if docx is None else docx\r\n---> 25 document_part = Package.open(docx).main_document_part\r\n     26 if document_part.content_type != CT.WML_DOCUMENT_MAIN:\r\n     27     tmpl = \"file '%s' is not a Word file, content type is '%s'\"\r\n\r\nFile ~/anaconda3/envs/ForLangChain/lib/python3.10/site-packages/docx/opc/package.py:128, in OpcPackage.open(cls, pkg_file)\r\n    122 @classmethod\r\n    123 def open(cls, pkg_file):\r\n    124     \"\"\"\r\n    125     Return an |OpcPackage| instance loaded with the contents of\r\n    126     *pkg_file*.\r\n    127     \"\"\"\r\n--> 128     pkg_reader = PackageReader.from_file(pkg_file)\r\n    129     package = cls()\r\n    130     Unmarshaller.unmarshal(pkg_reader, package, PartFactory)\r\n\r\nFile ~/anaconda3/envs/ForLangChain/lib/python3.10/site-packages/docx/opc/pkgreader.py:35, in PackageReader.from_file(pkg_file)\r\n     33 content_types = _ContentTypeMap.from_xml(phys_reader.content_types_xml)\r\n     34 pkg_srels = PackageReader._srels_for(phys_reader, PACKAGE_URI)\r\n---> 35 sparts = PackageReader._load_serialized_parts(\r\n     36     phys_reader, pkg_srels, content_types\r\n     37 )\r\n     38 phys_reader.close()\r\n     39 return PackageReader(content_types, pkg_srels, sparts)\r\n\r\nFile ~/anaconda3/envs/ForLangChain/lib/python3.10/site-packages/docx/opc/pkgreader.py:69, in PackageReader._load_serialized_parts(phys_reader, pkg_srels, content_types)\r\n     67 sparts = []\r\n     68 part_walker = PackageReader._walk_phys_parts(phys_reader, pkg_srels)\r\n---> 69 for partname, blob, reltype, srels in part_walker:\r\n     70     content_type = content_types[partname]\r\n     71     spart = _SerializedPart(\r\n     72         partname, content_type, reltype, blob, srels\r\n     73     )\r\n\r\nFile ~/anaconda3/envs/ForLangChain/lib/python3.10/site-packages/docx/opc/pkgreader.py:110, in PackageReader._walk_phys_parts(phys_reader, srels, visited_partnames)\r\n    106 yield (partname, blob, reltype, part_srels)\r\n    107 next_walker = PackageReader._walk_phys_parts(\r\n    108     phys_reader, part_srels, visited_partnames\r\n    109 )\r\n--> 110 for partname, blob, reltype, srels in next_walker:\r\n    111     yield (partname, blob, reltype, srels)\r\n\r\nFile ~/anaconda3/envs/ForLangChain/lib/python3.10/site-packages/docx/opc/pkgreader.py:105, in PackageReader._walk_phys_parts(phys_reader, srels, visited_partnames)\r\n    103 reltype = srel.reltype\r\n    104 part_srels = PackageReader._srels_for(phys_reader, partname)\r\n--> 105 blob = phys_reader.blob_for(partname)\r\n    106 yield (partname, blob, reltype, part_srels)\r\n    107 next_walker = PackageReader._walk_phys_parts(\r\n    108     phys_reader, part_srels, visited_partnames\r\n    109 )\r\n\r\nFile ~/anaconda3/envs/ForLangChain/lib/python3.10/site-packages/docx/opc/phys_pkg.py:108, in _ZipPkgReader.blob_for(self, pack_uri)\r\n    103 def blob_for(self, pack_uri):\r\n    104     \"\"\"\r\n    105     Return blob corresponding to *pack_uri*. Raises |ValueError| if no\r\n    106     matching member is present in zip archive.\r\n    107     \"\"\"\r\n--> 108     return self._zipf.read(pack_uri.membername)\r\n\r\nFile ~/anaconda3/envs/ForLangChain/lib/python3.10/zipfile.py:1477, in ZipFile.read(self, name, pwd)\r\n   1475 def read(self, name, pwd=None):\r\n   1476     \"\"\"Return file bytes for name.\"\"\"\r\n-> 1477     with self.open(name, \"r\", pwd) as fp:\r\n   1478         return fp.read()\r\n\r\nFile ~/anaconda3/envs/ForLangChain/lib/python3.10/zipfile.py:1516, in ZipFile.open(self, name, mode, pwd, force_zip64)\r\n   1513     zinfo._compresslevel = self.compresslevel\r\n   1514 else:\r\n   1515     # Get info object for name\r\n-> 1516     zinfo = self.getinfo(name)\r\n   1518 if mode == 'w':\r\n   1519     return self._open_to_write(zinfo, force_zip64=force_zip64)\r\n\r\nFile ~/anaconda3/envs/ForLangChain/lib/python3.10/zipfile.py:1443, in ZipFile.getinfo(self, name)\r\n   1441 info = self.NameToInfo.get(name)\r\n   1442 if info is None:\r\n-> 1443     raise KeyError(\r\n   1444         'There is no item named %r in the archive' % name)\r\n   1446 return info\r\n\r\nKeyError: \"There is no item named 'NULL' in the archive\"\r\n```\n\n### Expected behavior\n\nLoading a big size Word document should be OK without any issue.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4894/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4894/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4893",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4893/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4893/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4893/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4893",
        "id": 1714846839,
        "node_id": "PR_kwDOIPDwls5Qw9-N",
        "number": 4893,
        "title": "Load specific file types from Google Drive (issue #4878)",
        "user": {
            "login": "UmerHA",
            "id": 40663591,
            "node_id": "MDQ6VXNlcjQwNjYzNTkx",
            "avatar_url": "https://avatars.githubusercontent.com/u/40663591?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/UmerHA",
            "html_url": "https://github.com/UmerHA",
            "followers_url": "https://api.github.com/users/UmerHA/followers",
            "following_url": "https://api.github.com/users/UmerHA/following{/other_user}",
            "gists_url": "https://api.github.com/users/UmerHA/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/UmerHA/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/UmerHA/subscriptions",
            "organizations_url": "https://api.github.com/users/UmerHA/orgs",
            "repos_url": "https://api.github.com/users/UmerHA/repos",
            "events_url": "https://api.github.com/users/UmerHA/events{/privacy}",
            "received_events_url": "https://api.github.com/users/UmerHA/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-18T01:20:58Z",
        "updated_at": "2023-05-18T13:27:33Z",
        "closed_at": "2023-05-18T13:27:33Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4893",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4893",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4893.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4893.patch",
            "merged_at": null
        },
        "body": "# Load specific file types from Google Drive (issue #4878)\r\n Add the possibility to define what file types you want to load from Google Drive.\r\n \r\n```\r\n loader = GoogleDriveLoader(\r\n    folder_id=\"1yucgL9WGgWZdM1TOuKkeghlPizuzMYb5\",\r\n    file_types=[\"document\", \"pdf\"]\r\n    recursive=False\r\n)\r\n```\r\n\r\nFixes ##4878\r\n\r\n## Who can review?\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\nDataLoaders\r\n- @eyurtsev\r\n\r\nTwitter: [@UmerHAdil](https://twitter.com/@UmerHAdil) | Discord: RicChilligerDude#7589",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4893/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4893/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4892",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4892/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4892/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4892/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4892",
        "id": 1714820188,
        "node_id": "PR_kwDOIPDwls5Qw4bq",
        "number": 4892,
        "title": "Check for single prompt in __call__ method of the BaseLLM class",
        "user": {
            "login": "mwinterde",
            "id": 60154509,
            "node_id": "MDQ6VXNlcjYwMTU0NTA5",
            "avatar_url": "https://avatars.githubusercontent.com/u/60154509?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/mwinterde",
            "html_url": "https://github.com/mwinterde",
            "followers_url": "https://api.github.com/users/mwinterde/followers",
            "following_url": "https://api.github.com/users/mwinterde/following{/other_user}",
            "gists_url": "https://api.github.com/users/mwinterde/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/mwinterde/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/mwinterde/subscriptions",
            "organizations_url": "https://api.github.com/users/mwinterde/orgs",
            "repos_url": "https://api.github.com/users/mwinterde/repos",
            "events_url": "https://api.github.com/users/mwinterde/events{/privacy}",
            "received_events_url": "https://api.github.com/users/mwinterde/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-18T00:37:55Z",
        "updated_at": "2023-05-19T23:54:27Z",
        "closed_at": "2023-05-19T23:54:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4892",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4892",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4892.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4892.patch",
            "merged_at": "2023-05-19T23:54:27Z"
        },
        "body": "# Ensuring that users pass a single prompt when calling a LLM \r\n\r\n- This PR adds a check to the `__call__` method of the `BaseLLM` class to ensure that it is called with a single prompt\r\n- Raises a `ValueError` if users try to call a LLM with a list of prompt and instructs them to use the `generate` method instead\r\n\r\n## Why this could be useful\r\n\r\nI stumbled across this by accident. I accidentally called the OpenAI LLM with a list of prompts instead of a single string and still got a result:\r\n\r\n```\r\n>>> from langchain.llms import OpenAI\r\n>>> llm = OpenAI()\r\n>>> llm([\"Tell a joke\"]*2)\r\n\"\\n\\nQ: Why don't scientists trust atoms?\\nA: Because they make up everything!\"\r\n```\r\n\r\nIt might be better to catch such a scenario preventing unnecessary costs and irritation for the user.\r\n\r\n## Proposed behaviour\r\n\r\n```\r\n>>> from langchain.llms import OpenAI\r\n>>> llm = OpenAI()\r\n>>> llm([\"Tell a joke\"]*2)\r\nTraceback (most recent call last):\r\n  File \"<stdin>\", line 1, in <module>\r\n  File \"/Users/marcus/Projects/langchain/langchain/llms/base.py\", line 291, in __call__\r\n    raise ValueError(\r\nValueError: Argument `prompt` is expected to be a single string, not a list. If you want to run the LLM on multiple prompts, use `generate` instead.\r\n```\r\n\r\n## Before submitting\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4892/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4892/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4891",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4891/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4891/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4891/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4891",
        "id": 1714802513,
        "node_id": "PR_kwDOIPDwls5Qw01x",
        "number": 4891,
        "title": "#4532 Add Vertex AI PaLM Models",
        "user": {
            "login": "Jflick58",
            "id": 22459070,
            "node_id": "MDQ6VXNlcjIyNDU5MDcw",
            "avatar_url": "https://avatars.githubusercontent.com/u/22459070?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/Jflick58",
            "html_url": "https://github.com/Jflick58",
            "followers_url": "https://api.github.com/users/Jflick58/followers",
            "following_url": "https://api.github.com/users/Jflick58/following{/other_user}",
            "gists_url": "https://api.github.com/users/Jflick58/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/Jflick58/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/Jflick58/subscriptions",
            "organizations_url": "https://api.github.com/users/Jflick58/orgs",
            "repos_url": "https://api.github.com/users/Jflick58/repos",
            "events_url": "https://api.github.com/users/Jflick58/events{/privacy}",
            "received_events_url": "https://api.github.com/users/Jflick58/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-18T00:06:59Z",
        "updated_at": "2023-05-24T22:09:27Z",
        "closed_at": "2023-05-24T22:09:27Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4891",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4891",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4891.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4891.patch",
            "merged_at": null
        },
        "body": "# Add Vertex AI PaLM Models\r\n\r\nAdds the following model integrations for GCP Vertex AI versions of PaLM: \r\n  - Embeddings\r\n  - Chat Models\r\n  - LLM \r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes #4532 ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4891/reactions",
            "total_count": 16,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 16,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4891/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4890",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4890/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4890/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4890/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4890",
        "id": 1714778842,
        "node_id": "PR_kwDOIPDwls5QwvuF",
        "number": 4890,
        "title": "Add no_avx2 to FAISS vector store",
        "user": {
            "login": "AliMirlou",
            "id": 19661419,
            "node_id": "MDQ6VXNlcjE5NjYxNDE5",
            "avatar_url": "https://avatars.githubusercontent.com/u/19661419?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/AliMirlou",
            "html_url": "https://github.com/AliMirlou",
            "followers_url": "https://api.github.com/users/AliMirlou/followers",
            "following_url": "https://api.github.com/users/AliMirlou/following{/other_user}",
            "gists_url": "https://api.github.com/users/AliMirlou/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/AliMirlou/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/AliMirlou/subscriptions",
            "organizations_url": "https://api.github.com/users/AliMirlou/orgs",
            "repos_url": "https://api.github.com/users/AliMirlou/repos",
            "events_url": "https://api.github.com/users/AliMirlou/events{/privacy}",
            "received_events_url": "https://api.github.com/users/AliMirlou/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-17T23:33:55Z",
        "updated_at": "2023-05-18T18:43:21Z",
        "closed_at": "2023-05-18T02:19:22Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4890",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4890",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4890.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4890.patch",
            "merged_at": null
        },
        "body": "# Add no_avx2 to FAISS vector store\r\n\r\nThis PR adds the `no_avx2` argument and `FAISS_NO_AVX2` environment variable to `dependable_faiss_import` function to not load FAISS vector store with AVX2 optimization.\r\n\r\nThis option comes in handy when the developer wants to save the vector store to a file and load it on somewhere else. Most modern CPUs have AVX2 optimization but there are situations where the hardware is old, the `faiss-cpu` pypi package is not compiled with AVX2 flag or this feature is disabled for some reason.\r\n\r\nI encountered this issue on a PaaS where FAISS pickle and database files created by `save_index` in Colab could not be loaded inside the Docker containers due to the platform not supporting AVX2.\r\n\r\n@dev2049\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4890/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4890/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4889",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4889/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4889/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4889/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4889",
        "id": 1714774587,
        "node_id": "I_kwDOIPDwls5mNWI7",
        "number": 4889,
        "title": "PythonREPL agent toolkit does not recognize PythonREPL as a valid tool",
        "user": {
            "login": "ethanjevvell",
            "id": 9409497,
            "node_id": "MDQ6VXNlcjk0MDk0OTc=",
            "avatar_url": "https://avatars.githubusercontent.com/u/9409497?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/ethanjevvell",
            "html_url": "https://github.com/ethanjevvell",
            "followers_url": "https://api.github.com/users/ethanjevvell/followers",
            "following_url": "https://api.github.com/users/ethanjevvell/following{/other_user}",
            "gists_url": "https://api.github.com/users/ethanjevvell/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/ethanjevvell/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/ethanjevvell/subscriptions",
            "organizations_url": "https://api.github.com/users/ethanjevvell/orgs",
            "repos_url": "https://api.github.com/users/ethanjevvell/repos",
            "events_url": "https://api.github.com/users/ethanjevvell/events{/privacy}",
            "received_events_url": "https://api.github.com/users/ethanjevvell/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 9,
        "created_at": "2023-05-17T23:26:11Z",
        "updated_at": "2023-12-13T16:09:48Z",
        "closed_at": "2023-12-13T16:09:47Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain version: 0.0.172\r\nPlatform: Linux (Ubuntu)\n\n### Who can help?\n\n@vowelparrot \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [X] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n\r\nWhen trying to use a python agent for simple queries, the agent often does not recognize Python REPL as a valid tool:\r\n\r\n```\r\n> Entering new AgentExecutor chain...\r\nI can write a function to generate the nth fibonacci number and then call it with n=4.\r\nAction: [Python REPL]\r\nAction Input:\r\n\r\ndef fibonacci(n):\r\n    if n <= 1:\r\n        return n\r\n    else:\r\n        return fibonacci(n-1) + fibonacci(n-2)\r\n\r\nprint(fibonacci(4))\r\n\r\nObservation: [Python REPL] is not a valid tool, try another one.\r\n```\r\n\r\nMy instantiation of the agent:\r\n\r\n```\r\ncustom_prefix = PREFIX + \"When writing a code block, do not include the word 'python' after the first three ticks. You must graph your findings and save a .png of the graph on the local file system at [a path on my local machine]. The corpus consists of .txt files at this directory: [another path on my machine].\"\r\n\r\npython_agent = create_python_agent(llm=llm, tool=PythonREPLTool(), verbose=True, max_tokens=1000, prefix=custom_prefix)\r\n\r\npython_agent(\"What are the top 10 bi-grams in the corpus? Only parse the .txt files. Translate the final n-grams to English for the chart.\")\r\n```\r\n\r\nModel then gets stuck in a loop trying to use Python REPL. I included instructions in `custom_prefix` because the model repeatedly got this error, too:\r\n\r\n```\r\n> Entering new AgentExecutor chain...\r\nI need to read in all the .txt files in the corpus and tokenize them into bi-grams. Then I need to count the frequency of each bi-gram and return the top 10.\r\nAction: Python REPL\r\nAction Input:\r\n```python\r\nimport os\r\nimport nltk\r\nfrom collections import Counter\r\nfrom nltk import word_tokenize\r\nfrom nltk.util import ngrams\r\n\r\ncorpus_dir = a directory on my machine\r\nfiles = [os.path.join(corpus_dir, f) for f in os.listdir(corpus_dir) if f.endswith('.txt')]\r\n\r\nbi_grams = []\r\nfor file in files:\r\n    with open(file, 'r') as f:\r\n        text = f.read()\r\n        tokens = word_tokenize(text)\r\n        bi_grams += ngrams(tokens, 2)\r\n\r\nbi_gram_freq = Counter(bi_grams)\r\ntop_10_bi_grams = bi_gram_freq.most_common(10)\r\n...\r\nprint(top_10_bi_grams)\r\n```NameError(\"name 'python' is not defined\")\r\n```\n\n### Expected behavior\n\nI expect the Python agent to recognize PythonREPL as a valid tool. In fact, sometimes it does! But more often than not, it does not recognize PythonREPL as a tool. The query I included in the above code snippet worked maybe once in every 50 tries. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4889/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4889/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4888",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4888/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4888/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4888/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4888",
        "id": 1714755794,
        "node_id": "PR_kwDOIPDwls5QwqyJ",
        "number": 4888,
        "title": "Adds 'IN' metadata filter for pgvector for checking set presence",
        "user": {
            "login": "jadespanning",
            "id": 100796451,
            "node_id": "U_kgDOBgIIIw",
            "avatar_url": "https://avatars.githubusercontent.com/u/100796451?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jadespanning",
            "html_url": "https://github.com/jadespanning",
            "followers_url": "https://api.github.com/users/jadespanning/followers",
            "following_url": "https://api.github.com/users/jadespanning/following{/other_user}",
            "gists_url": "https://api.github.com/users/jadespanning/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jadespanning/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jadespanning/subscriptions",
            "organizations_url": "https://api.github.com/users/jadespanning/orgs",
            "repos_url": "https://api.github.com/users/jadespanning/repos",
            "events_url": "https://api.github.com/users/jadespanning/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jadespanning/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            },
            {
                "id": 5509644103,
                "node_id": "LA_kwDOIPDwls8AAAABSGZ_Rw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/maintainer-to-merge",
                "name": "maintainer-to-merge",
                "color": "B1D5ED",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 6,
        "created_at": "2023-05-17T22:59:18Z",
        "updated_at": "2023-07-27T07:02:56Z",
        "closed_at": "2023-05-19T20:53:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4888",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4888",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4888.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4888.patch",
            "merged_at": null
        },
        "body": "# Adds \"IN\" metadata filter for pgvector to all checking for set presence\r\n\r\nPGVector currently supports metadata filters of the form:\r\n```\r\n{\"filter\": {\"key\": \"value\"}}\r\n```\r\nwhich will return documents where the \"key\" metadata field is equal to \"value\".\r\n\r\nThis PR adds support for metadata filters of the form:\r\n```\r\n{\"filter\": {\"key\": { \"IN\" : [\"list\", \"of\", \"values\"]}}}\r\n```\r\n\r\nOther vector stores support this via an \"$in\" syntax. I chose to use \"IN\" to match postgres' syntax, though happy to switch.\r\nTested locally with PGVector and ChatVectorDBChain.\r\n\r\n\r\n@dev2049\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4888/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4888/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4887",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4887/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4887/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4887/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4887",
        "id": 1714743745,
        "node_id": "I_kwDOIPDwls5mNOnB",
        "number": 4887,
        "title": "TypeError when using SelfQueryRetriever ",
        "user": {
            "login": "jobe1k",
            "id": 39864161,
            "node_id": "MDQ6VXNlcjM5ODY0MTYx",
            "avatar_url": "https://avatars.githubusercontent.com/u/39864161?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jobe1k",
            "html_url": "https://github.com/jobe1k",
            "followers_url": "https://api.github.com/users/jobe1k/followers",
            "following_url": "https://api.github.com/users/jobe1k/following{/other_user}",
            "gists_url": "https://api.github.com/users/jobe1k/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jobe1k/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jobe1k/subscriptions",
            "organizations_url": "https://api.github.com/users/jobe1k/orgs",
            "repos_url": "https://api.github.com/users/jobe1k/repos",
            "events_url": "https://api.github.com/users/jobe1k/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jobe1k/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-05-17T22:42:25Z",
        "updated_at": "2023-09-22T16:08:59Z",
        "closed_at": "2023-09-22T16:08:58Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "Enviorment: DATABRICKS_RUNTIME_VERSION: 10.4\r\nPython 3.8.10\r\nLangchain 0.0.172\r\n\r\nI was following along with the basic tutorial here: [Self-querying retriever with Chroma](https://python.langchain.com/en/latest/modules/indexes/retrievers/examples/chroma_self_query_retriever.html) and I keep getting **TypeError: 'NoneType' object is not callable** error.  Also, when I call .get() on the vectorstore, the embeddings field is \"None\".  Is this related to the error? Any idea what I'm doing wrong here? Many thanks.\r\n\r\n![image](https://github.com/hwchase17/langchain/assets/39864161/aaa7ca89-b79e-47da-85df-4c1e498c075a)\r\n**---------------------------------------------------------------------------------------------------------------------------------------------**\r\n**My full code:**\r\nfrom langchain.docstore.document import Document\r\ndocs = [\r\n    Document(page_content=\"A bunch of scientists bring back dinosaurs and mayhem breaks loose\", metadata={\"year\": 1993, \"rating\": 7.7, \"genre\": \"action\"}),\r\n    Document(page_content=\"Leo DiCaprio gets lost in a dream within a dream within a dream within a ...\", metadata={\"year\": 2010, \"director\": \"Christopher Nolan\", \"rating\": 8.2}),\r\n    Document(page_content=\"A psychologist / detective gets lost in a series of dreams within dreams within dreams and Inception reused the idea\", metadata={\"year\": 2006, \"director\": \"Satoshi Kon\", \"rating\": 8.6}),\r\n    Document(page_content=\"A bunch of normal-sized women are supremely wholesome and some men pine after them\", metadata={\"year\": 2019, \"director\": \"Greta Gerwig\", \"rating\": 8.3}),\r\n    Document(page_content=\"Toys come alive and have a blast doing so\", metadata={\"year\": 1995, \"genre\": \"animated\"}),\r\n    Document(page_content=\"Three men walk into the Zone, three men walk out of the Zone\", metadata={\"year\": 1979, \"rating\": 9.9, \"director\": \"Andrei Tarkovsky\", \"genre\": \"science fiction\", \"rating\": 9.9})\r\n]\r\n\r\nembeddings = OpenAIEmbeddings(chunk_size=1)\r\n\r\nvectorstore = Chroma.from_documents(\r\n    docs, embeddings\r\n)\r\n\r\nfrom langchain.llms import OpenAI\r\nfrom langchain.retrievers.self_query.base import SelfQueryRetriever\r\nfrom langchain.chains.query_constructor.base import AttributeInfo\r\n\r\nmetadata_field_info=[\r\n    AttributeInfo(\r\n        name=\"genre\",\r\n        description=\"The genre of the movie\", \r\n        type=\"string or list[string]\", \r\n    ),\r\n    AttributeInfo(\r\n        name=\"year\",\r\n        description=\"The year the movie was released\", \r\n        type=\"integer\", \r\n    ),\r\n    AttributeInfo(\r\n        name=\"director\",\r\n        description=\"The name of the movie director\", \r\n        type=\"string\", \r\n    ),\r\n    AttributeInfo(\r\n        name=\"rating\",\r\n        description=\"A 1-10 rating for the movie\",\r\n        type=\"float\"\r\n    ),\r\n]\r\ndocument_content_description = \"Brief summary of a movie\"\r\nllm = OpenAI(temperature=0)\r\nretriever = SelfQueryRetriever.from_llm(llm, vectorstore, document_content_description, metadata_field_info, verbose=True)\r\n\r\n**---------------------------------------------------------------------------------------------------------------------------------------------**\r\n**TypeError                                 Traceback (most recent call last)**\r\n<command-1036279072864042> in <module>\r\n     27 document_content_description = \"Brief summary of a movie\"\r\n     28 llm = OpenAI(temperature=0)\r\n---> 29 retriever = SelfQueryRetriever.from_llm(llm, vectorstore, document_content_description, metadata_field_info, verbose=True)\r\n\r\n/databricks/python/lib/python3.8/site-packages/langchain/retrievers/self_query/base.py in from_llm(cls, llm, vectorstore, document_contents, metadata_field_info, structured_query_translator, chain_kwargs, enable_limit, **kwargs)\r\n    112                 \"allowed_operators\"\r\n    113             ] = structured_query_translator.allowed_operators\r\n--> 114         llm_chain = load_query_constructor_chain(\r\n    115             llm,\r\n    116             document_contents,\r\n\r\n/databricks/python/lib/python3.8/site-packages/langchain/chains/query_constructor/base.py in load_query_constructor_chain(llm, document_contents, attribute_info, examples, allowed_comparators, allowed_operators, enable_limit, **kwargs)\r\n    123     **kwargs: Any,\r\n    124 ) -> LLMChain:\r\n--> 125     prompt = _get_prompt(\r\n    126         document_contents,\r\n    127         attribute_info,\r\n\r\n/databricks/python/lib/python3.8/site-packages/langchain/chains/query_constructor/base.py in _get_prompt(document_contents, attribute_info, examples, allowed_comparators, allowed_operators, enable_limit)\r\n    100         i=len(examples) + 1, content=document_contents, attributes=attribute_str\r\n    101     )\r\n--> 102     output_parser = StructuredQueryOutputParser.from_components(\r\n    103         allowed_comparators=allowed_comparators, allowed_operators=allowed_operators\r\n    104     )\r\n\r\n/databricks/python/lib/python3.8/site-packages/langchain/chains/query_constructor/base.py in from_components(cls, allowed_comparators, allowed_operators)\r\n     57         allowed_operators: Optional[Sequence[Operator]] = None,\r\n     58     ) -> StructuredQueryOutputParser:\r\n---> 59         ast_parser = get_parser(\r\n     60             allowed_comparators=allowed_comparators, allowed_operators=allowed_operators\r\n     61         )\r\n\r\n/databricks/python/lib/python3.8/site-packages/langchain/chains/query_constructor/parser.py in get_parser(allowed_comparators, allowed_operators)\r\n    127     allowed_operators: Optional[Sequence[Operator]] = None,\r\n    128 ) -> Lark:\r\n--> 129     transformer = QueryTransformer(\r\n    130         allowed_comparators=allowed_comparators, allowed_operators=allowed_operators\r\n    131     )\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4887/reactions",
            "total_count": 2,
            "+1": 2,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4887/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4886",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4886/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4886/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4886/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4886",
        "id": 1714726354,
        "node_id": "I_kwDOIPDwls5mNKXS",
        "number": 4886,
        "title": "RequestsPostTool parsing of the input text is naive and tend to fail since JSON has prefixes sometimes.",
        "user": {
            "login": "shushui",
            "id": 83951697,
            "node_id": "MDQ6VXNlcjgzOTUxNjk3",
            "avatar_url": "https://avatars.githubusercontent.com/u/83951697?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/shushui",
            "html_url": "https://github.com/shushui",
            "followers_url": "https://api.github.com/users/shushui/followers",
            "following_url": "https://api.github.com/users/shushui/following{/other_user}",
            "gists_url": "https://api.github.com/users/shushui/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/shushui/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/shushui/subscriptions",
            "organizations_url": "https://api.github.com/users/shushui/orgs",
            "repos_url": "https://api.github.com/users/shushui/repos",
            "events_url": "https://api.github.com/users/shushui/events{/privacy}",
            "received_events_url": "https://api.github.com/users/shushui/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T22:18:43Z",
        "updated_at": "2023-09-10T16:16:03Z",
        "closed_at": "2023-09-10T16:16:03Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nmacos\r\nlangchain 0.0.172\r\n\n\n### Who can help?\n\n@vowelparrot \n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [X] My own modified scripts\n\n### Related Components\n\n- [ ] LLMs/Chat Models\n- [ ] Embedding Models\n- [ ] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [ ] Vector Stores / Retrievers\n- [ ] Memory\n- [ ] Agents / Agent Executors\n- [X] Tools / Toolkits\n- [ ] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\n1. Used     tool = AIPluginTool.from_plugin_url(\"http://localhost:4242/ai-plugin.json\")\r\nfrom local plugin, which nicely got a POST API request as a tool.\r\n2. when executing a POST the message was:\r\n`Thought:I need to use the MomoTodo API to create reminders for each meal tomorrow.\r\nAction: requests_post\r\nAction Input: json string {\"url\": \"http://localhost:4242/momotodos\", \"data\": {\"title\": \"Reminder: Breakfast\", \"completed\": false}}`\r\n\r\n3. Action input is parsed in \r\nhttps://github.com/hwchase17/langchain/blob/master/langchain/tools/requests/tool.py#L70\r\nhttps://github.com/hwchase17/langchain/blob/master/langchain/tools/requests/tool.py#L18\r\n\r\nSo due to the prefix \"json string\" - there is a failure:\r\nObservation: JSONDecodeError('Expecting value: line 1 column 1 (char 0)')\n\n### Expected behavior\n\nPOST requests Action String should always be a JSON, but we can't expect the model to always put there clean JSON.\r\nThe input should be cleaned up and parsed properly.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4886/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4886/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4885",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4885/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4885/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4885/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4885",
        "id": 1714720232,
        "node_id": "PR_kwDOIPDwls5QwjF2",
        "number": 4885,
        "title": "WIP: Retrieval eval",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5680700863,
                "node_id": "LA_kwDOIPDwls8AAAABUpidvw",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/auto:enhancement",
                "name": "auto:enhancement",
                "color": "C2E0C6",
                "default": false,
                "description": "A large net-new component, integration, or chain. Use sparingly. The largest features"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T22:11:02Z",
        "updated_at": "2023-08-11T00:12:37Z",
        "closed_at": "2023-08-11T00:12:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4885",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4885",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4885.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4885.patch",
            "merged_at": null
        },
        "body": "![Screenshot 2023-05-17 at 3 09 09 PM](https://github.com/hwchase17/langchain/assets/130488702/0bffcb97-d922-4d0a-8702-9ad2925642ea)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4885/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4885/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4884",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4884/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4884/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4884/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4884",
        "id": 1714715520,
        "node_id": "I_kwDOIPDwls5mNHuA",
        "number": 4884,
        "title": "ValueError(f\"Got unknown tool {name}\") hardcoded for custom tools in load_tools.py",
        "user": {
            "login": "luca-git",
            "id": 2820583,
            "node_id": "MDQ6VXNlcjI4MjA1ODM=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2820583?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/luca-git",
            "html_url": "https://github.com/luca-git",
            "followers_url": "https://api.github.com/users/luca-git/followers",
            "following_url": "https://api.github.com/users/luca-git/following{/other_user}",
            "gists_url": "https://api.github.com/users/luca-git/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/luca-git/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/luca-git/subscriptions",
            "organizations_url": "https://api.github.com/users/luca-git/orgs",
            "repos_url": "https://api.github.com/users/luca-git/repos",
            "events_url": "https://api.github.com/users/luca-git/events{/privacy}",
            "received_events_url": "https://api.github.com/users/luca-git/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 8,
        "created_at": "2023-05-17T22:06:33Z",
        "updated_at": "2023-05-20T16:32:10Z",
        "closed_at": "2023-05-20T16:03:40Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nHi there, the load_tools function implemented in https://python.langchain.com/en/latest/_modules/langchain/agents/load_tools.html won't accept custom tools. I'm trying to enrich Agent debates with tools discussed here https://python.langchain.com/en/latest/use_cases/agent_simulations/two_agent_debate_tools.html with a new prompt based tool: \r\n\r\n```\r\n@tool(\"optimistic_string\")\r\ndef optimistic_string(input_string: str) -> str:\r\n    \"\"\"Rewrites the input string with a more optimistic tone.\"\"\"\r\n    # Add your logic to process the input_string and generate the output_string\r\n    prompt = \"Rewrite the following sentence with a more optimistic tone: {{input_string}}\"\r\n    output_string = llm.generate(prompt) # Replace this with the actual call to the language model\r\n    return output_string\r\n```\r\nBut it's not possible at the moment as an error is encoded in load_tools for unrecognized tools. How do we add custom tools to the simulation? Can anyone provide guidance? It is paramaunt to be able to customize tools to fully take advantage of agent based simulation. Thanks! :)\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4884/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4884/timeline",
        "performed_via_github_app": null,
        "state_reason": "completed"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4883",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4883/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4883/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4883/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4883",
        "id": 1714706050,
        "node_id": "PR_kwDOIPDwls5QwgL7",
        "number": 4883,
        "title": "fix homepage typo",
        "user": {
            "login": "cjcjameson",
            "id": 6885889,
            "node_id": "MDQ6VXNlcjY4ODU4ODk=",
            "avatar_url": "https://avatars.githubusercontent.com/u/6885889?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/cjcjameson",
            "html_url": "https://github.com/cjcjameson",
            "followers_url": "https://api.github.com/users/cjcjameson/followers",
            "following_url": "https://api.github.com/users/cjcjameson/following{/other_user}",
            "gists_url": "https://api.github.com/users/cjcjameson/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/cjcjameson/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/cjcjameson/subscriptions",
            "organizations_url": "https://api.github.com/users/cjcjameson/orgs",
            "repos_url": "https://api.github.com/users/cjcjameson/repos",
            "events_url": "https://api.github.com/users/cjcjameson/events{/privacy}",
            "received_events_url": "https://api.github.com/users/cjcjameson/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T21:56:45Z",
        "updated_at": "2023-05-17T22:30:23Z",
        "closed_at": "2023-05-17T22:30:23Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4883",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4883",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4883.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4883.patch",
            "merged_at": "2023-05-17T22:30:23Z"
        },
        "body": "# Fix Homepage Typo\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested... not sure\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4883/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4883/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4881",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4881/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4881/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4881/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4881",
        "id": 1714659357,
        "node_id": "PR_kwDOIPDwls5QwWdf",
        "number": 4881,
        "title": "Add Cypher query language generating chain",
        "user": {
            "login": "tomasonjo",
            "id": 19948365,
            "node_id": "MDQ6VXNlcjE5OTQ4MzY1",
            "avatar_url": "https://avatars.githubusercontent.com/u/19948365?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tomasonjo",
            "html_url": "https://github.com/tomasonjo",
            "followers_url": "https://api.github.com/users/tomasonjo/followers",
            "following_url": "https://api.github.com/users/tomasonjo/following{/other_user}",
            "gists_url": "https://api.github.com/users/tomasonjo/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tomasonjo/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tomasonjo/subscriptions",
            "organizations_url": "https://api.github.com/users/tomasonjo/orgs",
            "repos_url": "https://api.github.com/users/tomasonjo/repos",
            "events_url": "https://api.github.com/users/tomasonjo/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tomasonjo/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 4678528817,
                "node_id": "LA_kwDOIPDwls8AAAABFtyvMQ",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/enhancement",
                "name": "enhancement",
                "color": "a2eeef",
                "default": true,
                "description": "New feature or request"
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-17T21:09:56Z",
        "updated_at": "2023-05-22T04:23:04Z",
        "closed_at": "2023-05-22T04:23:04Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4881",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4881",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4881.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4881.patch",
            "merged_at": "2023-05-22T04:23:04Z"
        },
        "body": "# Add Neo4j support and Cypher generating Chain\r\n\r\nThe idea is to add support for querying Graph Databases that use Cypher query language like Neo4j.\r\nSince queries need to be constructed at query time, we use a similar approach as the text2sql, but instead of generating SQL statements, we generate Cypher statements based on the provided graph schema, which makes this a generic solution.\r\n\r\n# Todo\r\n\r\n- [x] Integration test\r\n- [x] Better exception handling \r\n\r\n\r\nFixes # (issue)\r\nhttps://github.com/hwchase17/langchain/issues/4625\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4881/reactions",
            "total_count": 2,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 2,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4881/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4880",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4880/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4880/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4880/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4880",
        "id": 1714599007,
        "node_id": "I_kwDOIPDwls5mMrRf",
        "number": 4880,
        "title": "Issue: Chromadb document deletion not working",
        "user": {
            "login": "anant-patankar",
            "id": 12649913,
            "node_id": "MDQ6VXNlcjEyNjQ5OTEz",
            "avatar_url": "https://avatars.githubusercontent.com/u/12649913?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/anant-patankar",
            "html_url": "https://github.com/anant-patankar",
            "followers_url": "https://api.github.com/users/anant-patankar/followers",
            "following_url": "https://api.github.com/users/anant-patankar/following{/other_user}",
            "gists_url": "https://api.github.com/users/anant-patankar/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/anant-patankar/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/anant-patankar/subscriptions",
            "organizations_url": "https://api.github.com/users/anant-patankar/orgs",
            "repos_url": "https://api.github.com/users/anant-patankar/repos",
            "events_url": "https://api.github.com/users/anant-patankar/events{/privacy}",
            "received_events_url": "https://api.github.com/users/anant-patankar/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 4,
        "created_at": "2023-05-17T20:16:45Z",
        "updated_at": "2023-11-06T15:59:56Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am trying to delete a single document from Chroma db using the following code:\r\n\r\nchroma_db = Chroma(persist_directory = embeddings_save_path,\r\n                    embedding_function = OpenAIEmbeddings(model = os.getenv(\"EMBEDDING_MODEL_NAME\"),\r\n                    chunk_size = 1,\r\n                    max_retries = 5)\r\n                    )\r\n\r\nchroma_db._collection.delete(ids = list_of_ids)\r\nchroma_db.persist()\r\n\r\nHowever, the document is not actually being deleted. After loading/re-loading the chroma db from local, it is still showing the document in it.\r\n\r\nI have tried the following things to fix the issue:\r\n\r\nI have made sure that the list of ids is correct.\r\nI have tried deleting the document multiple times.\r\nI have tried restarting the Chroma db server.\r\nNone of these things have worked.\r\n\r\nI am not sure why the document is not being deleted. I would appreciate any help in resolving this issue.\r\n\r\nThanks,\r\nAnant Patankar\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4880/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4880/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4879",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4879/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4879/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4879/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4879",
        "id": 1714588071,
        "node_id": "PR_kwDOIPDwls5QwG7p",
        "number": 4879,
        "title": "[WIP] Update Tracing Docs",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T20:09:04Z",
        "updated_at": "2023-06-05T22:28:00Z",
        "closed_at": "2023-06-05T22:28:00Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": true,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4879",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4879",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4879.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4879.patch",
            "merged_at": null
        },
        "body": "Will add screenshots and clean up a lot later this week, but here's a draft of some tracing docs updates.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4879/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4879/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4878",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4878/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4878/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4878/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4878",
        "id": 1714556155,
        "node_id": "I_kwDOIPDwls5mMgz7",
        "number": 4878,
        "title": "Add the possibility to define what file types you want to load from a Google Drive",
        "user": {
            "login": "badcom",
            "id": 783736,
            "node_id": "MDQ6VXNlcjc4MzczNg==",
            "avatar_url": "https://avatars.githubusercontent.com/u/783736?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/badcom",
            "html_url": "https://github.com/badcom",
            "followers_url": "https://api.github.com/users/badcom/followers",
            "following_url": "https://api.github.com/users/badcom/following{/other_user}",
            "gists_url": "https://api.github.com/users/badcom/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/badcom/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/badcom/subscriptions",
            "organizations_url": "https://api.github.com/users/badcom/orgs",
            "repos_url": "https://api.github.com/users/badcom/repos",
            "events_url": "https://api.github.com/users/badcom/events{/privacy}",
            "received_events_url": "https://api.github.com/users/badcom/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T19:46:54Z",
        "updated_at": "2023-09-10T16:16:08Z",
        "closed_at": "2023-09-10T16:16:07Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Feature request\n\nIt would be helpful if we could define what file types we want to load via the [Google Drive loader](https://python.langchain.com/en/latest/modules/indexes/document_loaders/examples/google_drive.html#) i.e.: only docs or sheets or PDFs.\n\n### Motivation\n\nThe current loads will load 3 file types: doc, sheet and pdf, but in my project I only want to load \"application/vnd.google-apps.document\".\n\n### Your contribution\n\nI'm happy to contribute with a PR.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4878/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4878/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4877",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4877/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4877/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4877/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4877",
        "id": 1714548372,
        "node_id": "PR_kwDOIPDwls5Qv-YG",
        "number": 4877,
        "title": "Tiny code review and docs fix for Docugami DataLoader",
        "user": {
            "login": "tjaffri",
            "id": 749277,
            "node_id": "MDQ6VXNlcjc0OTI3Nw==",
            "avatar_url": "https://avatars.githubusercontent.com/u/749277?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/tjaffri",
            "html_url": "https://github.com/tjaffri",
            "followers_url": "https://api.github.com/users/tjaffri/followers",
            "following_url": "https://api.github.com/users/tjaffri/following{/other_user}",
            "gists_url": "https://api.github.com/users/tjaffri/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/tjaffri/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/tjaffri/subscriptions",
            "organizations_url": "https://api.github.com/users/tjaffri/orgs",
            "repos_url": "https://api.github.com/users/tjaffri/repos",
            "events_url": "https://api.github.com/users/tjaffri/events{/privacy}",
            "received_events_url": "https://api.github.com/users/tjaffri/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T19:39:34Z",
        "updated_at": "2023-09-17T18:54:15Z",
        "closed_at": "2023-05-17T22:31:44Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4877",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4877",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4877.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4877.patch",
            "merged_at": "2023-05-17T22:31:44Z"
        },
        "body": "# Docs and code review fixes for Docugami DataLoader\r\n\r\n1. I noticed a couple of hyperlinks that are not loading in the langchain docs (I guess need explicit anchor tags). Added those.\r\n2. In code review @eyurtsev had a [suggestion](https://github.com/hwchase17/langchain/pull/4727#discussion_r1194069347) to allow string paths. Turns out just updating the type works (I tested locally with string paths).\r\n\r\n# Pre-submission checks\r\nI ran `make lint` and `make tests` successfully.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4877/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4877/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4876",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4876/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4876/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4876/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4876",
        "id": 1714499445,
        "node_id": "PR_kwDOIPDwls5Qvznk",
        "number": 4876,
        "title": "Bold Crumbs",
        "user": {
            "login": "vowelparrot",
            "id": 130414180,
            "node_id": "U_kgDOB8X2ZA",
            "avatar_url": "https://avatars.githubusercontent.com/u/130414180?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/vowelparrot",
            "html_url": "https://github.com/vowelparrot",
            "followers_url": "https://api.github.com/users/vowelparrot/followers",
            "following_url": "https://api.github.com/users/vowelparrot/following{/other_user}",
            "gists_url": "https://api.github.com/users/vowelparrot/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/vowelparrot/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/vowelparrot/subscriptions",
            "organizations_url": "https://api.github.com/users/vowelparrot/orgs",
            "repos_url": "https://api.github.com/users/vowelparrot/repos",
            "events_url": "https://api.github.com/users/vowelparrot/events{/privacy}",
            "received_events_url": "https://api.github.com/users/vowelparrot/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T19:03:27Z",
        "updated_at": "2023-05-17T22:50:37Z",
        "closed_at": "2023-05-17T22:50:36Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4876",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4876",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4876.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4876.patch",
            "merged_at": "2023-05-17T22:50:36Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4876/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4876/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4875",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4875/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4875/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4875/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4875",
        "id": 1714498285,
        "node_id": "PR_kwDOIPDwls5QvzXY",
        "number": 4875,
        "title": "Add a generic document loader",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T19:02:46Z",
        "updated_at": "2023-05-18T02:38:56Z",
        "closed_at": "2023-05-18T02:38:55Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4875",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4875",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4875.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4875.patch",
            "merged_at": "2023-05-18T02:38:55Z"
        },
        "body": "# Add generic document loader\n\n* This PR adds a generic document loader which can assemble a loader from a blob loader and a parser\n* Adds a registry for parsers\n* Populate registry with a default mimetype based parser\n\n\n## Expected changes\n\n- Parsing involves loading content via IO so can be sped up via:\n  * Threading in sync\n  * Async  \n- The actual parsing logic may be computatinoally involved: may need to figure out to add multi-processing support\n- May want to add suffix based parser since suffixes are easier to specify in comparison to mime types\n\n## Before submitting\n\nNo notebooks yet, we first need to get a few of the basic parsers up (prior to advertising the interface)\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4875/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4875/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4874",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4874/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4874/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4874/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4874",
        "id": 1714482779,
        "node_id": "PR_kwDOIPDwls5Qvv32",
        "number": 4874,
        "title": "Add html parsers",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T18:54:03Z",
        "updated_at": "2023-05-18T02:39:13Z",
        "closed_at": "2023-05-18T02:39:12Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4874",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4874",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4874.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4874.patch",
            "merged_at": "2023-05-18T02:39:12Z"
        },
        "body": "# Add bs4 html parser\n\n* Some minor refactors\n* Extract the bs4 html parsing code from the bs html loader\n* Move some tests from integration tests to unit tests\n\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4874/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4874/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4873",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4873/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4873/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4873/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4873",
        "id": 1714480771,
        "node_id": "PR_kwDOIPDwls5Qvvav",
        "number": 4873,
        "title": "Update gallery",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T18:52:48Z",
        "updated_at": "2023-05-18T03:59:42Z",
        "closed_at": "2023-05-18T03:59:41Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4873",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4873",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4873.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4873.patch",
            "merged_at": "2023-05-18T03:59:41Z"
        },
        "body": null,
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4873/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4873/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4872",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4872/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4872/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4872/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4872",
        "id": 1714400903,
        "node_id": "I_kwDOIPDwls5mL66H",
        "number": 4872,
        "title": "load_chain giving UserWarning when llm.json configured for chat model",
        "user": {
            "login": "kellerbrown",
            "id": 128098443,
            "node_id": "U_kgDOB6Kgiw",
            "avatar_url": "https://avatars.githubusercontent.com/u/128098443?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/kellerbrown",
            "html_url": "https://github.com/kellerbrown",
            "followers_url": "https://api.github.com/users/kellerbrown/followers",
            "following_url": "https://api.github.com/users/kellerbrown/following{/other_user}",
            "gists_url": "https://api.github.com/users/kellerbrown/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/kellerbrown/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/kellerbrown/subscriptions",
            "organizations_url": "https://api.github.com/users/kellerbrown/orgs",
            "repos_url": "https://api.github.com/users/kellerbrown/repos",
            "events_url": "https://api.github.com/users/kellerbrown/events{/privacy}",
            "received_events_url": "https://api.github.com/users/kellerbrown/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T18:07:04Z",
        "updated_at": "2023-09-10T16:16:13Z",
        "closed_at": "2023-09-10T16:16:12Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\r\n\r\nI am trying to implement versioning of chains with prompt and llm config files separated from the chain.json file. When trying to call load_chain from langchain.chains with a chat-based LLM in the llm.json config, it yields: \r\n\r\n[c:\\Users\\KellerBrown\\.virtualenvs\\llm_pipeline-pYWy7I0v\\lib\\site-packages\\langchain\\llms\\openai.py:169](file:///C:/Users/KellerBrown/.virtualenvs/llm_pipeline-pYWy7I0v/lib/site-packages/langchain/llms/openai.py:169): UserWarning: You are trying to use a chat model. This way of initializing it is no longer supported. Instead, please use: `from langchain.chat_models import ChatOpenAI`\r\n  warnings.warn(\r\n[c:\\Users\\KellerBrown\\.virtualenvs\\llm_pipeline-pYWy7I0v\\lib\\site-packages\\langchain\\llms\\openai.py:696](file:///C:/Users/KellerBrown/.virtualenvs/llm_pipeline-pYWy7I0v/lib/site-packages/langchain/llms/openai.py:696): UserWarning: You are trying to use a chat model. This way of initializing it is no longer supported. Instead, please use: `from langchain.chat_models import ChatOpenAI`\r\n  warnings.warn(\r\n\r\nI am not sure how to handle the issue, as I though load_chain could initialize any chain from a config. Is there a different function I should use to de-serialize chat-based chains?\r\n\r\n### Who can help?\r\n\r\n@hwchase17 \r\n@agola11 \r\n\r\n### Information\r\n\r\n- [ ] The official example notebooks/scripts\r\n- [ ] My own modified scripts\r\n\r\n### Related Components\r\n\r\n- [X] LLMs/Chat Models\r\n- [ ] Embedding Models\r\n- [ ] Prompts / Prompt Templates / Prompt Selectors\r\n- [ ] Output Parsers\r\n- [ ] Document Loaders\r\n- [ ] Vector Stores / Retrievers\r\n- [ ] Memory\r\n- [ ] Agents / Agent Executors\r\n- [ ] Tools / Toolkits\r\n- [X] Chains\r\n- [ ] Callbacks/Tracing\r\n- [ ] Async\r\n\r\n### Reproduction\r\n\r\n**chain.json**\r\n\r\n{\r\n    \"memory\": null,\r\n    \"verbose\": false,\r\n    \"prompt_path\": \"C:/Users/KellerBrown/Projects/llm_pipeline/function_configs/document_filter/0.0/prompt.json\",\r\n    \"llm_path\": \"C:/Users/KellerBrown/Projects/llm_pipeline/function_configs/document_filter/0.0/llm.json\",\r\n    \"output_key\": \"text\",\r\n    \"_type\": \"llm_chain\"\r\n  }\r\n\r\n**llm.json**\r\n\r\n{\r\n    \"model_name\": \"gpt-4\",\r\n    \"temperature\": 0.0,\r\n    \"max_tokens\": 256,\r\n    \"top_p\": 1,\r\n    \"frequency_penalty\": 0,\r\n    \"presence_penalty\": 0,\r\n    \"_type\": \"openai\"\r\n}\r\n\r\n**prompt.json**\r\n\r\n{\r\n    \"input_variables\": [\r\n        \"topic\",\r\n        \"content\"\r\n    ],\r\n    \"output_parser\": null,\r\n    \"template\": \"Answer 'Yes' or 'No' only. Does the following text contain language pertaining to {topic}? {content}\",\r\n    \"template_format\": \"f-string\",\r\n    \"_type\": \"prompt\"\r\n}\r\n\r\n**Initializing chain from chain.json with path references to llm and prompt configs**\r\n\r\n`chain = load_chain('function_configs/document_filter/0.0/chain.json')`\r\n\r\n**Console Output**\r\n\r\n[c:\\Users\\KellerBrown\\.virtualenvs\\llm_pipeline-pYWy7I0v\\lib\\site-packages\\langchain\\llms\\openai.py:169](file:///C:/Users/KellerBrown/.virtualenvs/llm_pipeline-pYWy7I0v/lib/site-packages/langchain/llms/openai.py:169): UserWarning: You are trying to use a chat model. This way of initializing it is no longer supported. Instead, please use: `from langchain.chat_models import ChatOpenAI`\r\n\r\n  warnings.warn(\r\n[c:\\Users\\KellerBrown\\.virtualenvs\\llm_pipeline-pYWy7I0v\\lib\\site-packages\\langchain\\llms\\openai.py:696](file:///C:/Users/KellerBrown/.virtualenvs/llm_pipeline-pYWy7I0v/lib/site-packages/langchain/llms/openai.py:696): UserWarning: You are trying to use a chat model. This way of initializing it is no longer supported. Instead, please use: `from langchain.chat_models import ChatOpenAI`\r\n  warnings.warn(\r\n\r\n### Expected behavior\r\n\r\nNo user warning. ",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4872/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4872/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4871",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4871/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4871/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4871/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4871",
        "id": 1714397028,
        "node_id": "I_kwDOIPDwls5mL59k",
        "number": 4871,
        "title": "DOC: Incorporate links to the underlying prompts in example docs",
        "user": {
            "login": "eddiesaltaccount",
            "id": 5651472,
            "node_id": "MDQ6VXNlcjU2NTE0NzI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/5651472?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eddiesaltaccount",
            "html_url": "https://github.com/eddiesaltaccount",
            "followers_url": "https://api.github.com/users/eddiesaltaccount/followers",
            "following_url": "https://api.github.com/users/eddiesaltaccount/following{/other_user}",
            "gists_url": "https://api.github.com/users/eddiesaltaccount/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eddiesaltaccount/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eddiesaltaccount/subscriptions",
            "organizations_url": "https://api.github.com/users/eddiesaltaccount/orgs",
            "repos_url": "https://api.github.com/users/eddiesaltaccount/repos",
            "events_url": "https://api.github.com/users/eddiesaltaccount/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eddiesaltaccount/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T18:04:53Z",
        "updated_at": "2023-09-10T16:16:18Z",
        "closed_at": "2023-09-10T16:16:17Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue with current documentation:\n\nOne thing I constantly find myself doing is trying to dig up the prompts that are default for various agent notebook tutorials in the docs. If there was a link to the default prompts corresponding to each agent's mention, I wouldn't have to dig them up to find them, and the learning process for agents would be a lot smoother\n\n### Idea or request for content:\n\nAdd links to the library's default prompts to notebooks that reference agents",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4871/reactions",
            "total_count": 1,
            "+1": 1,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4871/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4870",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4870/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4870/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4870/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4870",
        "id": 1714385607,
        "node_id": "PR_kwDOIPDwls5QvZ3O",
        "number": 4870,
        "title": "docs: compound ecosystem and integrations",
        "user": {
            "login": "leo-gan",
            "id": 2256422,
            "node_id": "MDQ6VXNlcjIyNTY0MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/2256422?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/leo-gan",
            "html_url": "https://github.com/leo-gan",
            "followers_url": "https://api.github.com/users/leo-gan/followers",
            "following_url": "https://api.github.com/users/leo-gan/following{/other_user}",
            "gists_url": "https://api.github.com/users/leo-gan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/leo-gan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/leo-gan/subscriptions",
            "organizations_url": "https://api.github.com/users/leo-gan/orgs",
            "repos_url": "https://api.github.com/users/leo-gan/repos",
            "events_url": "https://api.github.com/users/leo-gan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/leo-gan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 2,
        "created_at": "2023-05-17T17:58:42Z",
        "updated_at": "2023-05-18T16:29:58Z",
        "closed_at": "2023-05-18T16:29:58Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4870",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4870",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4870.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4870.patch",
            "merged_at": "2023-05-18T16:29:58Z"
        },
        "body": "# Docs: compound ecosystem and integrations\r\n\r\n**Problem statement:** We have a big overlap between the References/Integrations and Ecosystem/LongChain Ecosystem pages. It confuses users. It creates a situation when new integration is added only on one of these pages, which creates even more confusion. \r\n- removed References/Integrations page (but move all its information into the individual  integration pages - in the next PR).\r\n- renamed  Ecosystem/LongChain Ecosystem into Integrations/Integrations. I like the Ecosystem term. It is more generic and semantically richer than the Integration term. But it mentally overloads users. The `integration` term is more concrete.\r\nUPDATE: after discussion, the Ecosystem is the term. Ecosystem/Integrations is the page (in place of Ecosystem/LongChain Ecosystem).\r\n\r\nAs a result, a user gets a single place to start with the individual integration.\r\n\r\n## Who can review?\r\n\r\n@dev2049\r\n\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4870/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4870/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4869",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4869/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4869/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4869/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4869",
        "id": 1714366507,
        "node_id": "PR_kwDOIPDwls5QvVhc",
        "number": 4869,
        "title": "Add beautiful soup 4 to extended testing extra",
        "user": {
            "login": "eyurtsev",
            "id": 3205522,
            "node_id": "MDQ6VXNlcjMyMDU1MjI=",
            "avatar_url": "https://avatars.githubusercontent.com/u/3205522?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/eyurtsev",
            "html_url": "https://github.com/eyurtsev",
            "followers_url": "https://api.github.com/users/eyurtsev/followers",
            "following_url": "https://api.github.com/users/eyurtsev/following{/other_user}",
            "gists_url": "https://api.github.com/users/eyurtsev/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/eyurtsev/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/eyurtsev/subscriptions",
            "organizations_url": "https://api.github.com/users/eyurtsev/orgs",
            "repos_url": "https://api.github.com/users/eyurtsev/repos",
            "events_url": "https://api.github.com/users/eyurtsev/events{/privacy}",
            "received_events_url": "https://api.github.com/users/eyurtsev/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T17:48:56Z",
        "updated_at": "2023-05-17T18:11:28Z",
        "closed_at": "2023-05-17T18:11:27Z",
        "author_association": "COLLABORATOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4869",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4869",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4869.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4869.patch",
            "merged_at": "2023-05-17T18:11:27Z"
        },
        "body": "# Add bs4 to extended testing extra\r\n\r\nUpdating extended testing extra in preparation for more refactors.",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4869/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4869/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4868",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4868/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4868/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4868/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4868",
        "id": 1714312442,
        "node_id": "PR_kwDOIPDwls5QvJxv",
        "number": 4868,
        "title": "Remove unused variables in Milvus vectorstore",
        "user": {
            "login": "larry-fuy",
            "id": 1881605,
            "node_id": "MDQ6VXNlcjE4ODE2MDU=",
            "avatar_url": "https://avatars.githubusercontent.com/u/1881605?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/larry-fuy",
            "html_url": "https://github.com/larry-fuy",
            "followers_url": "https://api.github.com/users/larry-fuy/followers",
            "following_url": "https://api.github.com/users/larry-fuy/following{/other_user}",
            "gists_url": "https://api.github.com/users/larry-fuy/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/larry-fuy/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/larry-fuy/subscriptions",
            "organizations_url": "https://api.github.com/users/larry-fuy/orgs",
            "repos_url": "https://api.github.com/users/larry-fuy/repos",
            "events_url": "https://api.github.com/users/larry-fuy/events{/privacy}",
            "received_events_url": "https://api.github.com/users/larry-fuy/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T17:06:32Z",
        "updated_at": "2023-05-17T19:00:37Z",
        "closed_at": "2023-05-17T19:00:37Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4868",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4868",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4868.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4868.patch",
            "merged_at": "2023-05-17T19:00:37Z"
        },
        "body": "# Remove unused variables in Milvus vectorstore\r\nThis PR simply removes a variable unused in Milvus. The variable looks like a copy-paste from other functions in Milvus but it is really unnecessary.\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n## Who can review?\r\n@dev2049\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4868/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4868/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4867",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4867/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4867/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4867/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4867",
        "id": 1714281661,
        "node_id": "PR_kwDOIPDwls5QvDKD",
        "number": 4867,
        "title": "Add async versions of predict() and predict_messages()",
        "user": {
            "login": "jlowin",
            "id": 153965,
            "node_id": "MDQ6VXNlcjE1Mzk2NQ==",
            "avatar_url": "https://avatars.githubusercontent.com/u/153965?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/jlowin",
            "html_url": "https://github.com/jlowin",
            "followers_url": "https://api.github.com/users/jlowin/followers",
            "following_url": "https://api.github.com/users/jlowin/following{/other_user}",
            "gists_url": "https://api.github.com/users/jlowin/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/jlowin/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/jlowin/subscriptions",
            "organizations_url": "https://api.github.com/users/jlowin/orgs",
            "repos_url": "https://api.github.com/users/jlowin/repos",
            "events_url": "https://api.github.com/users/jlowin/events{/privacy}",
            "received_events_url": "https://api.github.com/users/jlowin/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5454193895,
                "node_id": "LA_kwDOIPDwls8AAAABRRhk5w",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/lgtm",
                "name": "lgtm",
                "color": "0E8A16",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T16:43:50Z",
        "updated_at": "2023-06-03T12:57:47Z",
        "closed_at": "2023-05-24T00:22:50Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4867",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4867",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4867.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4867.patch",
            "merged_at": "2023-05-24T00:22:50Z"
        },
        "body": "# Add async versions of predict() and predict_messages()\r\n\r\n#4615 introduced a unifying interface for \"base\" and \"chat\" LLM models via the new `predict()` and `predict_messages()` methods that allow both types of models to operate on string and message-based inputs, respectively.\r\n\r\nThis PR adds async versions of the same (`apredict()` and `apredict_messages()`) that are identical except for their use of `agenerate()` in place of `generate()`, which means they repurpose all existing work on the async backend.\r\n\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n        @hwchase17 (follows his work on #4615)\r\n        @agola11 (async)\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4867/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4867/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4866",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4866/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4866/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4866/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4866",
        "id": 1714260769,
        "node_id": "I_kwDOIPDwls5mLYsh",
        "number": 4866,
        "title": "Using Dolly-v2-7b with langchain getting error: The size of tensor a (2048) must match the size of tensor b (2049) at non-singleton dimension 3",
        "user": {
            "login": "zubair-ahmed-ai",
            "id": 66907171,
            "node_id": "MDQ6VXNlcjY2OTA3MTcx",
            "avatar_url": "https://avatars.githubusercontent.com/u/66907171?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/zubair-ahmed-ai",
            "html_url": "https://github.com/zubair-ahmed-ai",
            "followers_url": "https://api.github.com/users/zubair-ahmed-ai/followers",
            "following_url": "https://api.github.com/users/zubair-ahmed-ai/following{/other_user}",
            "gists_url": "https://api.github.com/users/zubair-ahmed-ai/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/zubair-ahmed-ai/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/zubair-ahmed-ai/subscriptions",
            "organizations_url": "https://api.github.com/users/zubair-ahmed-ai/orgs",
            "repos_url": "https://api.github.com/users/zubair-ahmed-ai/repos",
            "events_url": "https://api.github.com/users/zubair-ahmed-ai/events{/privacy}",
            "received_events_url": "https://api.github.com/users/zubair-ahmed-ai/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 1,
        "created_at": "2023-05-17T16:27:08Z",
        "updated_at": "2023-09-10T16:16:23Z",
        "closed_at": "2023-09-10T16:16:22Z",
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### System Info\n\nLangchain 0.0.171, Python 3.9.0, OS Ubuntu 20.04.6 LTS \r\n\r\nHi @hwchase17 @agola11 \r\n\r\nUsing dolly-v2-7b model with Langchain, I am [running into this issue ](https://github.com/databrickslabs/dolly/issues/174) my question is how to chain the input properly so that chunk from the first chain is fed into the next one, assuming that's the right way to avoid repetition instead of the whole generation, previously with dolly-v2-3b it resulted in repeating the same generation 3-4 times.\r\n\r\nI am using the following code to generate sample NDAs after feeding it a FAISS vector store embeddings that were generated using [InstructorEmbedding ](https://instructor-embedding.github.io/)(not OpenAI) using [instructor-xl](https://huggingface.co/hkunlp/instructor-xl) but I am getting this error: The size of tensor a (2048) must match the size of tensor b (2049) at non-singleton dimension 3\r\n\r\n```\r\nprompt_template = \"\"\"Use the context below to write a detailed 5000 words NDA between the two persons:\r\n    Context: {context}\r\n    Topic: {topic}\r\n    Disclosing Party: {disclosingparty}\r\n    Receiving Party: {receivingparty}\r\n    NDA:\"\"\"\r\n\r\nPROMPT = PromptTemplate(\r\n    template=prompt_template, input_variables=[\"context\", \"topic\", \"disclosingparty\", \"receivingparty\"]\r\n)\r\n\r\n\r\nllm = HuggingFacePipeline.from_model_id(model_id=\"dolly-v2-7b\", \r\ntask=\"text-generation\", model_kwargs={\"temperature\":0, \"max_length\":5000})\r\n\r\nchain = LLMChain(llm=llm, prompt=PROMPT, output_key=\"nda_1\")\r\n\r\nprompt_template = \"\"\"Using the NDA generated above within the same context as before, continue writing the nda:\r\n    Context: {nda_1}        \r\n    NDA:\"\"\"\r\n\r\nPROMPT = PromptTemplate(\r\n    template=prompt_template, input_variables=[\"nda_1\"]\r\n)\r\ncontinue_chain = LLMChain(llm=llm, prompt=PROMPT, output_key=\"nda_2\")\r\noverall_chain = SequentialChain(chains=[chain, continue_chain], \r\ninput_variables=['context', 'topic', 'disclosingparty', 'receivingparty'], \r\noutput_variables=[\"nda_1\", \"nda_2\"], verbose=True)\r\n\r\ndef generate_text(topic, disclosingparty, receivingparty):\r\n    docs = db_instructEmbedd.similarity_search(topic, k=4)\r\n    inputs = [{\"context\": doc.page_content, \"topic\": topic, \"disclosingparty\": disclosingparty, \"receivingparty\" : receivingparty} for doc in docs]\r\n    return overall_chain.apply(inputs)\r\n\r\nresponse = generate_text(\"Based on this acquired knowledge, write a detailed NDA in 5000 words or less between these two parties on date May 15, 2023 governing rules of <country>, dont be repetitive and include all the required clauses to make it comprehensive contract\", \"Mr. X\", \"Mr. Y\")\r\nprint(response)\r\n```\r\n\n\n### Who can help?\n\n_No response_\n\n### Information\n\n- [ ] The official example notebooks/scripts\n- [ ] My own modified scripts\n\n### Related Components\n\n- [X] LLMs/Chat Models\n- [X] Embedding Models\n- [X] Prompts / Prompt Templates / Prompt Selectors\n- [ ] Output Parsers\n- [ ] Document Loaders\n- [X] Vector Stores / Retrievers\n- [X] Memory\n- [ ] Agents / Agent Executors\n- [ ] Tools / Toolkits\n- [X] Chains\n- [ ] Callbacks/Tracing\n- [ ] Async\n\n### Reproduction\n\nRunning a Instructor-xl to generate embedding, using sequentialchains to generate \n\n### Expected behavior\n\nIt should generate a long form text",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4866/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4866/timeline",
        "performed_via_github_app": null,
        "state_reason": "not_planned"
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4865",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4865/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4865/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4865/events",
        "html_url": "https://github.com/langchain-ai/langchain/issues/4865",
        "id": 1714241439,
        "node_id": "I_kwDOIPDwls5mLT-f",
        "number": 4865,
        "title": "Langchain agent is not continuing the entire flow of execution",
        "user": {
            "login": "gs-vkrishnasrujan",
            "id": 79095032,
            "node_id": "MDQ6VXNlcjc5MDk1MDMy",
            "avatar_url": "https://avatars.githubusercontent.com/u/79095032?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/gs-vkrishnasrujan",
            "html_url": "https://github.com/gs-vkrishnasrujan",
            "followers_url": "https://api.github.com/users/gs-vkrishnasrujan/followers",
            "following_url": "https://api.github.com/users/gs-vkrishnasrujan/following{/other_user}",
            "gists_url": "https://api.github.com/users/gs-vkrishnasrujan/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/gs-vkrishnasrujan/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/gs-vkrishnasrujan/subscriptions",
            "organizations_url": "https://api.github.com/users/gs-vkrishnasrujan/orgs",
            "repos_url": "https://api.github.com/users/gs-vkrishnasrujan/repos",
            "events_url": "https://api.github.com/users/gs-vkrishnasrujan/events{/privacy}",
            "received_events_url": "https://api.github.com/users/gs-vkrishnasrujan/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [],
        "state": "open",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 5,
        "created_at": "2023-05-17T16:12:55Z",
        "updated_at": "2023-10-12T00:38:29Z",
        "closed_at": null,
        "author_association": "NONE",
        "active_lock_reason": null,
        "body": "### Issue you'd like to raise.\n\nI am using custom tools. I used zero shot react description agent and it was not giving the final answer. It stopped after using 1st tool. \r\n\r\nSo, I created a custom agent with custom examples in the prompt. It is still behaving the same way.\r\n\r\nThis is the output of the agent executer for one of the examples:\r\nstatement = 'a query to get the average outcome variable score of all the CSAT responses'\r\nagent_executor.run(statement)\r\nOutput:\r\n> Entering new AgentExecutor chain...\r\nThought : I need to paraphrase the statement to add more context.\r\nAction : StatementFormattingTool[a query to get the average outcome variable score of all the CSAT responses]\r\nObservation : Get the average outcome variable score for all CSAT responses from the kda_distribution_log_02c581c9912a4ca1af7a67cd46324cf1_llm_test table.\r\n\r\nIts has to use SQLGenerationTool to get the query. It stopped after using the first tool. It is happening every time with other statemennts as well.\r\n\r\n\r\n\n\n### Suggestion:\n\n_No response_",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4865/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4865/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    },
    {
        "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4864",
        "repository_url": "https://api.github.com/repos/langchain-ai/langchain",
        "labels_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4864/labels{/name}",
        "comments_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4864/comments",
        "events_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4864/events",
        "html_url": "https://github.com/langchain-ai/langchain/pull/4864",
        "id": 1714195609,
        "node_id": "PR_kwDOIPDwls5QuwaQ",
        "number": 4864,
        "title": "bump 172",
        "user": {
            "login": "dev2049",
            "id": 130488702,
            "node_id": "U_kgDOB8cZfg",
            "avatar_url": "https://avatars.githubusercontent.com/u/130488702?v=4",
            "gravatar_id": "",
            "url": "https://api.github.com/users/dev2049",
            "html_url": "https://github.com/dev2049",
            "followers_url": "https://api.github.com/users/dev2049/followers",
            "following_url": "https://api.github.com/users/dev2049/following{/other_user}",
            "gists_url": "https://api.github.com/users/dev2049/gists{/gist_id}",
            "starred_url": "https://api.github.com/users/dev2049/starred{/owner}{/repo}",
            "subscriptions_url": "https://api.github.com/users/dev2049/subscriptions",
            "organizations_url": "https://api.github.com/users/dev2049/orgs",
            "repos_url": "https://api.github.com/users/dev2049/repos",
            "events_url": "https://api.github.com/users/dev2049/events{/privacy}",
            "received_events_url": "https://api.github.com/users/dev2049/received_events",
            "type": "User",
            "site_admin": false
        },
        "labels": [
            {
                "id": 5010622926,
                "node_id": "LA_kwDOIPDwls8AAAABKqgJzg",
                "url": "https://api.github.com/repos/langchain-ai/langchain/labels/release",
                "name": "release",
                "color": "07D4BE",
                "default": false,
                "description": ""
            }
        ],
        "state": "closed",
        "locked": false,
        "assignee": null,
        "assignees": [],
        "milestone": null,
        "comments": 0,
        "created_at": "2023-05-17T15:46:51Z",
        "updated_at": "2023-05-17T15:54:40Z",
        "closed_at": "2023-05-17T15:54:39Z",
        "author_association": "CONTRIBUTOR",
        "active_lock_reason": null,
        "draft": false,
        "pull_request": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/pulls/4864",
            "html_url": "https://github.com/langchain-ai/langchain/pull/4864",
            "diff_url": "https://github.com/langchain-ai/langchain/pull/4864.diff",
            "patch_url": "https://github.com/langchain-ai/langchain/pull/4864.patch",
            "merged_at": "2023-05-17T15:54:39Z"
        },
        "body": "# Your PR Title (What it does)\r\n\r\n<!--\r\nThank you for contributing to LangChain! Your PR will appear in our next release under the title you set. Please make sure it highlights your valuable contribution.\r\n\r\nReplace this with a description of the change, the issue it fixes (if applicable), and relevant context. List any dependencies required for this change.\r\n\r\nAfter you're done, someone will review your PR. They may suggest improvements. If no one reviews your PR within a few days, feel free to @-mention the same people again, as notifications can get lost.\r\n-->\r\n\r\n<!-- Remove if not applicable -->\r\n\r\nFixes # (issue)\r\n\r\n## Before submitting\r\n\r\n<!-- If you're adding a new integration, include an integration test and an example notebook showing its use! -->\r\n\r\n## Who can review?\r\n\r\nCommunity members can review the PR once tests pass. Tag maintainers/contributors who might be interested:\r\n\r\n<!-- For a quicker response, figure out the right person to tag with @\r\n\r\n        @hwchase17 - project lead\r\n\r\n        Tracing / Callbacks\r\n        - @agola11\r\n\r\n        Async\r\n        - @agola11\r\n\r\n        DataLoaders\r\n        - @eyurtsev\r\n\r\n        Models\r\n        - @hwchase17\r\n        - @agola11\r\n\r\n        Agents / Tools / Toolkits\r\n        - @vowelparrot\r\n        \r\n        VectorStores / Retrievers / Memory\r\n        - @dev2049\r\n        \r\n -->\r\n",
        "reactions": {
            "url": "https://api.github.com/repos/langchain-ai/langchain/issues/4864/reactions",
            "total_count": 0,
            "+1": 0,
            "-1": 0,
            "laugh": 0,
            "hooray": 0,
            "confused": 0,
            "heart": 0,
            "rocket": 0,
            "eyes": 0
        },
        "timeline_url": "https://api.github.com/repos/langchain-ai/langchain/issues/4864/timeline",
        "performed_via_github_app": null,
        "state_reason": null
    }
]